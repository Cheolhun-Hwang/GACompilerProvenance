idiom,label,count
"public _start  | * | xor ebp, ebp ",icc,1
"_start proc near   | * | mov r9, rdx  ",icc,1
"xor ebp, ebp  | * | pop rsi  ",icc,1
"mov r9, rdx   | * | mov rdx, rsp  ",icc,1
"pop rsi   | * | and rsp, 0FFFFFFFFFFFFFFF0h ",icc,1
"mov rdx, rsp   | * | push rax ",icc,1
"and rsp, 0FFFFFFFFFFFFFFF0h  | * | push rsp  ",icc,1
"push rax  | * | mov r8, offset __libc_csu_fini  ",icc,1
"push rsp   | * | mov rcx, offset __libc_csu_init  ",icc,1
"mov r8, offset __libc_csu_fini   | * | mov rdi, offset main  ",icc,1
"mov rcx, offset __libc_csu_init   | * | call ___libc_start_main ",icc,1
"mov rdi, offset main   | * | hlt ",icc,1
call ___libc_start_main  | * | _start endp ,icc,1
hlt  | * | align 4 ,icc,1
_start endp  | * | call_gmon_start proc near  ,icc,1
"align 4  | * | sub rsp, 8 ",icc,1
"call_gmon_start proc near   | * | mov rax, cs:__gmon_start___ptr ",icc,1
"sub rsp, 8  | * | test rax, rax ",icc,1
"mov rax, cs:__gmon_start___ptr  | * | jz short loc_40105E ",icc,1
"test rax, rax  | * | call rax  ",icc,1
jz short loc_40105E  | * | loc_40105E:  ,icc,1
"call rax   | * | add rsp, 8 ",icc,1
loc_40105E:   | * | retn ,icc,1
"add rsp, 8  | * | call_gmon_start endp ",icc,1
retn  | * | align 10h ,icc,9
call_gmon_start endp  | * | __do_global_dtors_aux proc near  ,icc,1
align 10h  | * | push rbp ,icc,2
"__do_global_dtors_aux proc near   | * | mov rbp, rsp ",icc,1
push rbp  | * | push rbx ,icc,2
"mov rbp, rsp  | * | sub rsp, 8 ",icc,2
"push rbx  | * | cmp cs:completed_6531, 0 ",icc,1
"sub rsp, 8  | * | jnz short loc_4010CD ",icc,1
"cmp cs:completed_6531, 0  | * | mov ebx, offset __DTOR_END__ ",icc,1
"jnz short loc_4010CD  | * | mov rax, cs:dtor_idx_6533 ",icc,1
"mov ebx, offset __DTOR_END__  | * | sub rbx, offset __DTOR_LIST__ ",icc,1
"mov rax, cs:dtor_idx_6533  | * | sar rbx, 3 ",icc,1
"sub rbx, offset __DTOR_LIST__  | * | sub rbx, 1 ",icc,1
"sar rbx, 3  | * | cmp rax, rbx ",icc,1
"sub rbx, 1  | * | jnb short loc_4010C6 ",icc,1
"cmp rax, rbx  | * | nop word ptr [rax+rax+00h] ",icc,1
jnb short loc_4010C6  | * | loc_4010A8:  ,icc,1
"nop word ptr [rax+rax+00h]  | * | add rax, 1 ",icc,1
"loc_4010A8:   | * | mov cs:dtor_idx_6533, rax ",icc,1
"add rax, 1  | * | call ds:__DTOR_LIST__[rax*8] ",icc,1
"mov cs:dtor_idx_6533, rax  | * | mov rax, cs:dtor_idx_6533 ",icc,1
"call ds:__DTOR_LIST__[rax*8]  | * | cmp rax, rbx ",icc,1
"mov rax, cs:dtor_idx_6533  | * | jb short loc_4010A8 ",icc,1
"cmp rax, rbx  | * | loc_4010C6:  ",icc,1
"jb short loc_4010A8  | * | mov cs:completed_6531, 1 ",icc,1
loc_4010C6:   | * | loc_4010CD:  ,icc,1
"mov cs:completed_6531, 1  | * | add rsp, 8 ",icc,1
loc_4010CD:   | * | pop rbx ,icc,1
"add rsp, 8  | * | pop rbp ",icc,2
pop rbx  | * | retn ,icc,3
pop rbp  | * | __do_global_dtors_aux endp ,icc,1
retn  | * | align 20h ,icc,8
__do_global_dtors_aux endp  | * | frame_dummy proc near  ,icc,1
"align 20h  | * | cmp cs:__JCR_LIST__, 0 ",icc,1
frame_dummy proc near   | * | push rbp ,icc,1
"cmp cs:__JCR_LIST__, 0  | * | mov rbp, rsp ",icc,1
push rbp  | * | jz short loc_401100 ,icc,1
"mov rbp, rsp  | * | mov eax, 0 ",icc,1
"jz short loc_401100  | * | test rax, rax ",icc,1
"mov eax, 0  | * | jz short loc_401100 ",icc,1
"test rax, rax  | * | pop rbp ",icc,1
"jz short loc_401100  | * | mov edi, offset __JCR_LIST__ ",icc,1
pop rbp  | * | jmp rax ,icc,1
"mov edi, offset __JCR_LIST__  | * | loc_401100:  ",icc,1
jmp rax  | * | pop rbp ,icc,1
loc_401100:   | * | retn ,icc,1
pop rbp  | * | frame_dummy endp ,icc,1
frame_dummy endp  | * | public main ,icc,1
align 10h  | * | main proc near  ,icc,1
var_200 = qword ptr -200h  | * | var_1F0 = dword ptr -1F0h ,data,1
var_1F8 = dword ptr -1F8h  | * | var_1E8 = qword ptr -1E8h ,data,1
var_1F0 = dword ptr -1F0h  | * | var_1E0 = qword ptr -1E0h ,data,1
var_1E8 = qword ptr -1E8h  | * | var_1D8 = qword ptr -1D8h ,data,1
var_1E0 = qword ptr -1E0h  | * | var_1D0 = qword ptr -1D0h ,data,1
var_1D8 = qword ptr -1D8h  | * | var_1C8 = qword ptr -1C8h ,data,1
var_1D0 = qword ptr -1D0h  | * | var_1C0 = dword ptr -1C0h ,data,1
var_1C8 = qword ptr -1C8h  | * | var_1B8 = qword ptr -1B8h ,data,1
var_1C0 = dword ptr -1C0h  | * | var_1B0 = qword ptr -1B0h ,data,1
var_1B8 = qword ptr -1B8h  | * | var_1A8 = qword ptr -1A8h ,data,1
var_1B0 = qword ptr -1B0h  | * | var_1A0 = dword ptr -1A0h ,data,1
var_1A8 = qword ptr -1A8h  | * | var_198 = dword ptr -198h ,data,1
var_1A0 = dword ptr -1A0h  | * | var_190 = dword ptr -190h ,data,1
var_198 = dword ptr -198h  | * | var_188 = dword ptr -188h ,data,1
var_190 = dword ptr -190h  | * | var_180 = dword ptr -180h ,data,1
var_188 = dword ptr -188h  | * | var_178 = dword ptr -178h ,data,1
var_180 = dword ptr -180h  | * | var_170 = qword ptr -170h ,data,1
var_178 = dword ptr -178h  | * | var_168 = dword ptr -168h ,data,1
var_170 = qword ptr -170h  | * | var_160 = dword ptr -160h ,data,1
var_168 = dword ptr -168h  | * | var_158 = qword ptr -158h ,data,1
var_160 = dword ptr -160h  | * | var_150 = dword ptr -150h ,data,1
var_158 = qword ptr -158h  | * | var_148 = dword ptr -148h ,data,1
var_150 = dword ptr -150h  | * | var_144 = dword ptr -144h ,data,1
var_148 = dword ptr -148h  | * | var_140 = dword ptr -140h ,data,1
var_144 = dword ptr -144h  | * | var_138 = qword ptr -138h ,data,1
var_140 = dword ptr -140h  | * | var_130 = qword ptr -130h ,data,1
var_138 = qword ptr -138h  | * | var_128 = dword ptr -128h ,data,1
var_130 = qword ptr -130h  | * | var_120 = dword ptr -120h ,data,1
var_128 = dword ptr -128h  | * | var_118 = dword ptr -118h ,data,1
var_120 = dword ptr -120h  | * | var_110 = xmmword ptr -110h ,data,1
var_118 = dword ptr -118h  | * | var_100 = qword ptr -100h ,data,1
var_110 = xmmword ptr -110h  | * | var_F8 = qword ptr -0F8h ,data,1
var_100 = qword ptr -100h  | * | var_F0 = dword ptr -0F0h ,data,1
var_F8 = qword ptr -0F8h  | * | var_E8 = dword ptr -0E8h ,data,1
var_F0 = dword ptr -0F0h  | * | var_E0 = dword ptr -0E0h ,data,1
var_E8 = dword ptr -0E8h  | * | var_D8 = dword ptr -0D8h ,data,1
var_E0 = dword ptr -0E0h  | * | var_D0 = dword ptr -0D0h ,data,1
var_D8 = dword ptr -0D8h  | * | var_C8 = dword ptr -0C8h ,data,1
var_D0 = dword ptr -0D0h  | * | var_C0 = dword ptr -0C0h ,data,1
var_C8 = dword ptr -0C8h  | * | var_B8 = qword ptr -0B8h ,data,1
var_C0 = dword ptr -0C0h  | * | var_B0 = qword ptr -0B0h ,data,1
var_B8 = qword ptr -0B8h  | * | var_A8 = qword ptr -0A8h ,data,1
var_B0 = qword ptr -0B0h  | * | var_A0 = qword ptr -0A0h ,data,1
var_A8 = qword ptr -0A8h  | * | var_98 = qword ptr -98h ,data,1
var_A0 = qword ptr -0A0h  | * | var_90 = xmmword ptr -90h ,data,1
var_98 = qword ptr -98h  | * | var_80 = dword ptr -80h ,data,1
var_90 = xmmword ptr -90h  | * | var_78 = dword ptr -78h ,data,1
var_80 = dword ptr -80h  | * | var_70 = dword ptr -70h ,data,1
var_78 = dword ptr -78h  | * | var_68 = dword ptr -68h ,data,1
var_70 = dword ptr -70h  | * | var_60 = dword ptr -60h ,data,1
var_68 = dword ptr -68h  | * | var_58 = qword ptr -58h ,data,1
var_60 = dword ptr -60h  | * | var_50 = qword ptr -50h ,data,1
var_58 = qword ptr -58h  | * | var_48 = qword ptr -48h ,data,2
var_50 = qword ptr -50h  | * | var_40 = qword ptr -40h ,data,1
"push rbp  | * | and rsp, 0FFFFFFFFFFFFFF80h ",icc,1
"mov rbp, rsp  | * | push r12 ",icc,1
"and rsp, 0FFFFFFFFFFFFFF80h  | * | push r13 ",icc,1
push r12  | * | push r14 ,icc,4
push r13  | * | push r15 ,icc,3
push r14  | * | push rbx ,icc,3
"push r15  | * | sub rsp, 1D8h ",icc,1
"push rbx  | * | mov rsi, 0 ",icc,1
"sub rsp, 1D8h  | * | mov edi, 3 ",icc,1
"mov rsi, 0  | * | call __intel_new_feature_proc_init ",icc,1
"mov edi, 3  | * | stmxcsr dword ptr [rsp+200h+var_200] ",icc,1
"call __intel_new_feature_proc_init  | * | mov edi, offset _ZSt3cin@@GLIBCXX_3_4 ",icc,1
"stmxcsr dword ptr [rsp+200h+var_200]  | * | lea rsi, [rsp+200h+var_148] ",icc,1
"mov edi, offset _ZSt3cin@@GLIBCXX_3_4  | * | or dword ptr [rsp+200h+var_200], 8040h ",icc,1
"lea rsi, [rsp+200h+var_148]  | * | ldmxcsr dword ptr [rsp+200h+var_200] ",icc,1
"or dword ptr [rsp+200h+var_200], 8040h  | * | call __ZNSirsERi  ",icc,1
"ldmxcsr dword ptr [rsp+200h+var_200]  | * | mov esi, 1 ",icc,1
"call __ZNSirsERi   | * | mov r8d, esi ",icc,1
"mov esi, 1  | * | cmp [rsp+200h+var_148], 0 ",icc,1
"mov r8d, esi  | * | jle loc_4029FE ",icc,1
"cmp [rsp+200h+var_148], 0  | * | mov eax, 4 ",icc,1
"jle loc_4029FE  | * | mov edx, 0FFFFFFFCh ",icc,1
"mov eax, 4  | * | mov r12d, esi ",icc,1
"mov edx, 0FFFFFFFCh  | * | mov r13d, r8d ",icc,1
"mov r12d, esi  | * | movd xmm0, eax ",icc,1
"mov r13d, r8d  | * | movd xmm1, edx ",icc,1
"movd xmm0, eax  | * | pshufd xmm2, xmm0, 0 ",icc,1
"movd xmm1, edx  | * | pshufd xmm1, xmm1, 0 ",icc,1
"pshufd xmm2, xmm0, 0  | * | pcmpeqd xmm0, xmm0 ",icc,1
"pshufd xmm1, xmm1, 0  | * | movdqa [rsp+200h+var_110], xmm1 ",icc,1
"pcmpeqd xmm0, xmm0  | * | movdqa [rsp+200h+var_90], xmm2 ",icc,1
"movdqa [rsp+200h+var_110], xmm1  | * | loc_4011AB:  ",icc,1
"movdqa [rsp+200h+var_90], xmm2  | * | mov edi, offset format  ",icc,1
"loc_4011AB:   | * | mov esi, offset n ",icc,1
"mov edi, offset format   | * | mov edx, offset m ",icc,1
"mov esi, offset n  | * | xor eax, eax ",icc,1
"mov edx, offset m  | * | call _scanf ",icc,1
"xor eax, eax  | * | mov ebx, cs:n ",icc,1
"call _scanf  | * | lea r9d, [rbx+rbx] ",icc,1
"mov ebx, cs:n  | * | cmp r9d, 1 ",icc,1
"lea r9d, [rbx+rbx]  | * | jle loc_40140D ",icc,1
"cmp r9d, 1  | * | lea r10d, [rbx+rbx-1] ",icc,1
"jle loc_40140D  | * | cmp r10d, 0Bh ",icc,1
"lea r10d, [rbx+rbx-1]  | * | jl loc_402AD5 ",icc,1
"cmp r10d, 0Bh  | * | mov ecx, ebx ",icc,1
"jl loc_402AD5  | * | lea eax, [rbx-1] ",icc,1
"mov ecx, ebx  | * | cdq ",icc,1
"lea eax, [rbx-1]  | * | xor eax, edx ",icc,1
cdq  | * | neg ecx ,icc,1
"xor eax, edx  | * | sub eax, edx ",icc,2
"neg ecx  | * | lea r11d, [r10+5] ",icc,1
"sub eax, edx  | * | neg eax ",icc,2
"lea r11d, [r10+5]  | * | and r11d, 7 ",icc,1
"neg eax  | * | add eax, r9d ",icc,1
"and r11d, 7  | * | movd xmm7, r9d ",icc,1
"add eax, r9d  | * | dec eax ",icc,1
"movd xmm7, r9d  | * | lea r14d, [rcx+2] ",icc,1
"dec eax  | * | mov dword ptr cs:xmmword_22B9D404, eax ",icc,1
"lea r14d, [rcx+2]  | * | lea eax, [rbx-2] ",icc,1
"mov dword ptr cs:xmmword_22B9D404, eax  | * | cdq ",icc,1
"lea eax, [rbx-2]  | * | xor eax, edx ",icc,1
"cdq  | * | cmp r14d, 1 ",icc,1
"xor eax, edx  | * | movsxd rdi, r10d ",icc,1
"cmp r14d, 1  | * | lea r15d, [rcx+3] ",icc,1
"movsxd rdi, r10d  | * | cmovle r14d, r13d ",icc,1
"lea r15d, [rcx+3]  | * | sub eax, edx ",icc,1
"cmovle r14d, r13d  | * | neg eax ",icc,1
"sub eax, edx  | * | cmp r15d, 1 ",icc,1
"neg eax  | * | pcmpeqd xmm13, xmm13 ",icc,1
"cmp r15d, 1  | * | cmovle r15d, r13d ",icc,1
"pcmpeqd xmm13, xmm13  | * | add eax, r9d ",icc,1
"cmovle r15d, r13d  | * | dec eax ",icc,1
"add eax, r9d  | * | sub rdi, r11 ",icc,1
"dec eax  | * | mov dword ptr cs:xmmword_22B9D404+4, eax ",icc,1
"sub rdi, r11  | * | lea eax, [rbx-3] ",icc,1
"mov dword ptr cs:xmmword_22B9D404+4, eax  | * | cdq ",icc,1
"lea eax, [rbx-3]  | * | xor eax, edx ",icc,1
"cdq  | * | lea r11d, [rbx-6] ",icc,1
"lea r11d, [rbx-6]  | * | lea edx, [rbx-5] ",icc,1
"lea edx, [rbx-5]  | * | add eax, r9d ",icc,1
neg eax  | * | dec eax ,icc,1
"add eax, r9d  | * | movd xmm3, r11d ",icc,1
"dec eax  | * | mov dword ptr cs:xmmword_22B9D404+8, eax ",icc,1
"movd xmm3, r11d  | * | lea eax, [rcx+4] ",icc,1
"mov dword ptr cs:xmmword_22B9D404+8, eax  | * | cmp eax, 1 ",icc,1
"lea eax, [rcx+4]  | * | lea r11d, [rcx+7] ",icc,1
"cmp eax, 1  | * | movd xmm0, edx ",icc,1
"lea r11d, [rcx+7]  | * | lea edx, [rcx+6] ",icc,1
"movd xmm0, edx  | * | cmovle eax, r13d ",icc,1
"lea edx, [rcx+6]  | * | mov dword ptr cs:xmmword_22BA7044+8, eax ",icc,1
"cmovle eax, r13d  | * | lea eax, [rbx-4] ",icc,1
"mov dword ptr cs:xmmword_22BA7044+8, eax  | * | movd xmm6, r11d ",icc,1
"lea eax, [rbx-4]  | * | movd xmm4, edx ",icc,1
"movd xmm6, r11d  | * | mov dword ptr cs:xmmword_22BA7044, r14d ",icc,1
"movd xmm4, edx  | * | movd xmm1, eax ",icc,1
"mov dword ptr cs:xmmword_22BA7044, r14d  | * | lea eax, [rbx-7] ",icc,1
"movd xmm1, eax  | * | punpcklqdq xmm1, xmm0 ",icc,1
"lea eax, [rbx-7]  | * | mov dword ptr cs:xmmword_22BA7044+4, r15d ",icc,1
"punpcklqdq xmm1, xmm0  | * | movdqa xmm14, [rsp+200h+var_110] ",icc,1
"mov dword ptr cs:xmmword_22BA7044+4, r15d  | * | movd xmm2, eax ",icc,1
"movdqa xmm14, [rsp+200h+var_110]  | * | lea eax, [rcx+5] ",icc,1
"movd xmm2, eax  | * | add ecx, 8 ",icc,1
"lea eax, [rcx+5]  | * | punpcklqdq xmm3, xmm2 ",icc,1
"add ecx, 8  | * | movdqa xmm15, [rsp+200h+var_90] ",icc,1
"punpcklqdq xmm3, xmm2  | * | movd xmm0, eax ",icc,1
"movdqa xmm15, [rsp+200h+var_90]  | * | mov eax, 3 ",icc,1
"movd xmm0, eax  | * | movd xmm5, ecx ",icc,1
"mov eax, 3  | * | punpcklqdq xmm0, xmm4 ",icc,1
"movd xmm5, ecx  | * | punpcklqdq xmm6, xmm5 ",icc,1
"punpcklqdq xmm0, xmm4  | * | shufps xmm1, xmm3, 88h ",icc,1
"punpcklqdq xmm6, xmm5  | * | shufps xmm0, xmm6, 88h ",icc,1
"shufps xmm1, xmm3, 88h  | * | pshufd xmm2, xmm7, 0 ",icc,1
"shufps xmm0, xmm6, 88h  | * | loc_4012E7:  ",icc,1
"pshufd xmm2, xmm7, 0  | * | movdqa xmm7, cs:xmmword_406140 ",icc,1
"loc_4012E7:   | * | movaps xmm4, xmm1 ",icc,1
"movdqa xmm7, cs:xmmword_406140  | * | pxor xmm3, xmm3 ",icc,1
"movaps xmm4, xmm1  | * | pxor xmm8, xmm8 ",icc,1
"pxor xmm3, xmm3  | * | movdqa xmm6, cs:xmmword_406140 ",icc,1
"pxor xmm8, xmm8  | * | pcmpgtd xmm3, xmm1 ",icc,1
"movdqa xmm6, cs:xmmword_406140  | * | paddd xmm1, xmm14 ",icc,1
"pcmpgtd xmm3, xmm1  | * | pcmpgtd xmm7, xmm0 ",icc,1
"paddd xmm1, xmm14  | * | pxor xmm6, xmm0 ",icc,1
"pcmpgtd xmm7, xmm0  | * | pcmpgtd xmm8, xmm1 ",icc,1
"pxor xmm6, xmm0  | * | pand xmm7, xmm6 ",icc,1
"pcmpgtd xmm8, xmm1  | * | movdqa xmm9, xmm8 ",icc,1
"pand xmm7, xmm6  | * | movdqa xmm12, cs:xmmword_406140 ",icc,1
"movdqa xmm9, xmm8  | * | pxor xmm4, xmm3 ",icc,1
"movdqa xmm12, cs:xmmword_406140  | * | movdqa xmm11, cs:xmmword_406140 ",icc,1
"pxor xmm4, xmm3  | * | pxor xmm7, xmm0 ",icc,1
"movdqa xmm11, cs:xmmword_406140  | * | paddd xmm0, xmm15 ",icc,1
"pxor xmm7, xmm0  | * | pxor xmm9, xmm1 ",icc,1
"paddd xmm0, xmm15  | * | psubd xmm4, xmm3 ",icc,1
"pxor xmm9, xmm1  | * | movdqa xmm5, xmm2 ",icc,1
"psubd xmm4, xmm3  | * | psubd xmm9, xmm8 ",icc,1
"movdqa xmm5, xmm2  | * | movdqa xmm10, xmm2 ",icc,1
"psubd xmm9, xmm8  | * | pcmpgtd xmm12, xmm0 ",icc,1
"movdqa xmm10, xmm2  | * | pxor xmm11, xmm0 ",icc,1
"pcmpgtd xmm12, xmm0  | * | psubd xmm5, xmm4 ",icc,1
"pxor xmm11, xmm0  | * | psubd xmm10, xmm9 ",icc,1
"psubd xmm5, xmm4  | * | pand xmm12, xmm11 ",icc,1
"psubd xmm10, xmm9  | * | paddd xmm5, xmm13 ",icc,1
"pand xmm12, xmm11  | * | paddd xmm10, xmm13 ",icc,1
"paddd xmm5, xmm13  | * | pxor xmm12, xmm0 ",icc,1
"paddd xmm10, xmm13  | * | movdqa ds:xmmword_22B9D404[rax*4], xmm5 ",icc,1
"pxor xmm12, xmm0  | * | paddd xmm1, xmm14 ",icc,1
"movdqa ds:xmmword_22B9D404[rax*4], xmm5  | * | movdqa ds:xmmword_22BA7044[rax*4], xmm7 ",icc,1
"paddd xmm1, xmm14  | * | paddd xmm0, xmm15 ",icc,1
"movdqa ds:xmmword_22BA7044[rax*4], xmm7  | * | movdqa ds:xmmword_22B9D414[rax*4], xmm10 ",icc,1
"paddd xmm0, xmm15  | * | movdqa ds:xmmword_22BA7054[rax*4], xmm12 ",icc,1
"movdqa ds:xmmword_22B9D414[rax*4], xmm10  | * | add rax, 8 ",icc,1
"movdqa ds:xmmword_22BA7054[rax*4], xmm12  | * | cmp rax, rdi ",icc,1
"add rax, 8  | * | jb loc_4012E7 ",icc,1
"cmp rax, rdi  | * | loc_4013BC:  ",icc,1
"jb loc_4012E7  | * | mov ecx, edi ",icc,1
"loc_4013BC:   | * | mov eax, ecx ",icc,1
"mov ecx, edi  | * | neg eax ",icc,1
"mov eax, ecx  | * | add eax, ebx ",icc,1
"neg eax  | * | movsxd r11, edi ",icc,1
"add eax, ebx  | * | mov edi, eax ",icc,1
"movsxd r11, edi  | * | neg edi ",icc,1
"mov edi, eax  | * | cmp ecx, r10d ",icc,1
neg edi  | * | jnb short loc_40140D ,icc,1
"cmp ecx, r10d  | * | loc_4013D0:  ",icc,1
jnb short loc_40140D  | * | dec eax ,icc,1
"loc_4013D0:   | * | lea r15d, [rdi+2] ",icc,1
dec eax  | * | cdq ,icc,1
"lea r15d, [rdi+2]  | * | mov r14d, eax ",icc,1
"cdq  | * | cmp r15d, 1 ",icc,1
"mov r14d, eax  | * | cmovle r15d, r13d ",icc,1
"cmp r15d, 1  | * | xor r14d, edx ",icc,1
"cmovle r15d, r13d  | * | sub r14d, edx ",icc,1
"xor r14d, edx  | * | inc ecx ",icc,1
"sub r14d, edx  | * | neg r14d ",icc,1
inc ecx  | * | inc edi ,icc,1
"neg r14d  | * | add r14d, r9d ",icc,1
inc edi  | * | dec r14d ,icc,1
"add r14d, r9d  | * | mov dword ptr ds:xmmword_22B9D404[r11*4], r14d ",icc,1
"dec r14d  | * | mov dword ptr ds:xmmword_22BA7044[r11*4], r15d ",icc,1
"mov dword ptr ds:xmmword_22B9D404[r11*4], r14d  | * | inc r11 ",icc,1
"mov dword ptr ds:xmmword_22BA7044[r11*4], r15d  | * | cmp ecx, r10d ",icc,1
inc r11  | * | jb short loc_4013D0 ,icc,1
"cmp ecx, r10d  | * | loc_40140D:  ",icc,1
"jb short loc_4013D0  | * | mov rdx, cs:u ",icc,1
"loc_40140D:   | * | xor r14d, r14d ",icc,1
"mov rdx, cs:u  | * | mov rax, cs:v ",icc,1
"xor r14d, r14d  | * | mov cs:qword_22BBA8F8, rdx ",icc,1
"mov rax, cs:v  | * | inc cs:ct ",icc,1
"mov cs:qword_22BBA8F8, rdx  | * | mov edx, cs:m ",icc,1
"inc cs:ct  | * | test edx, edx ",icc,1
"mov edx, cs:m  | * | mov cs:qword_22BBA8E0, rax ",icc,1
"test edx, edx  | * | jle loc_401A56 ",icc,1
"mov cs:qword_22BBA8E0, rax  | * | mov [rsp+200h+var_118], r12d ",icc,1
jle loc_401A56  | * | loc_401448:  ,icc,1
"mov [rsp+200h+var_118], r12d  | * | mov edi, offset format  ",icc,1
"loc_401448:   | * | lea rsi, [rsp+200h+var_144] ",icc,1
"mov edi, offset format   | * | xor eax, eax ",icc,1
"lea rsi, [rsp+200h+var_144]  | * | lea rdx, [rsp+200h+var_78] ",icc,1
"xor eax, eax  | * | call _scanf ",icc,1
"lea rdx, [rsp+200h+var_78]  | * | movsxd rax, [rsp+200h+var_144] ",icc,1
"call _scanf  | * | xor ebx, ebx ",icc,1
"movsxd rax, [rsp+200h+var_144]  | * | imul rdx, rax, 5DC4h ",icc,1
"xor ebx, ebx  | * | movsxd rcx, [rsp+200h+var_78] ",icc,1
"imul rdx, rax, 5DC4h  | * | mov ds:x[r14*4], eax ",icc,1
"movsxd rcx, [rsp+200h+var_78]  | * | mov eax, cs:ct ",icc,1
"mov ds:x[r14*4], eax  | * | mov ds:was[rdx+rcx*4], eax ",icc,1
"mov eax, cs:ct  | * | mov edx, r14d ",icc,1
"mov ds:was[rdx+rcx*4], eax  | * | mov ds:y[r14*4], ecx ",icc,1
"mov edx, r14d  | * | mov [rsp+200h+var_80], edx ",icc,1
"mov ds:y[r14*4], ecx  | * | mov [rsp+200h+var_98], r14 ",icc,1
"mov [rsp+200h+var_80], edx  | * | loc_4014AC:  ",icc,1
"mov [rsp+200h+var_98], r14  | * | mov r10d, [rsp+200h+var_144] ",icc,1
"loc_4014AC:   | * | mov r15d, ds:dword_406150[rbx*4] ",icc,1
"mov r10d, [rsp+200h+var_144]  | * | add r15d, r10d ",icc,1
"mov r15d, ds:dword_406150[rbx*4]  | * | movsxd r13, r15d ",icc,1
"add r15d, r10d  | * | imul r11, r13, 5DC4h ",icc,1
"movsxd r13, r15d  | * | mov r9d, [rsp+200h+var_78] ",icc,1
"imul r11, r13, 5DC4h  | * | mov r12d, ds:dj[rbx*4] ",icc,1
"mov r9d, [rsp+200h+var_78]  | * | add r12d, r9d ",icc,1
"mov r12d, ds:dj[rbx*4]  | * | movsxd r14, r12d ",icc,1
"add r12d, r9d  | * | mov edx, ds:was[r11+r14*4] ",icc,1
"movsxd r14, r12d  | * | cmp edx, eax ",icc,1
"mov edx, ds:was[r11+r14*4]  | * | jz loc_40176E ",icc,1
"cmp edx, eax  | * | mov r8, cs:qword_22BBA8E0 ",icc,1
"jz loc_40176E  | * | cmp r8, cs:qword_22BBA8E8 ",icc,1
"mov r8, cs:qword_22BBA8E0  | * | jnz loc_40172F ",icc,1
"cmp r8, cs:qword_22BBA8E8  | * | mov rdi, r8 ",icc,1
"jnz loc_40172F  | * | mov rax, 6666666666666667h ",icc,1
"mov rdi, r8  | * | mov rsi, cs:v ",icc,1
"mov rax, 6666666666666667h  | * | sub rdi, rsi ",icc,1
"mov rsi, cs:v  | * | imul rdi ",icc,1
"sub rdi, rsi  | * | sar rdx, 3 ",icc,1
"imul rdi  | * | mov rcx, rdi ",icc,1
"sar rdx, 3  | * | mov rax, 0CCCCCCCCCCCCCCCh ",icc,1
"mov rcx, rdi  | * | sar rcx, 3Fh ",icc,1
"mov rax, 0CCCCCCCCCCCCCCCh  | * | sub rax, rdx ",icc,1
"sar rcx, 3Fh  | * | add rax, rcx ",icc,1
"sub rax, rdx  | * | cmp rax, 1 ",icc,1
"add rax, rcx  | * | jb loc_402A15 ",icc,1
"cmp rax, 1  | * | sub rdx, rcx ",icc,1
"jb loc_402A15  | * | mov edi, 1 ",icc,2
"sub rdx, rcx  | * | cmp rdx, 1 ",icc,1
"mov edi, 1  | * | cmova rdi, rdx ",icc,2
"cmp rdx, 1  | * | add rdi, rdx ",icc,2
"cmova rdi, rdx  | * | cmp rdi, rdx ",icc,2
"add rdi, rdx  | * | jb short loc_401582 ",icc,1
"cmp rdi, rdx  | * | mov rax, 0CCCCCCCCCCCCCCCh ",icc,2
"jb short loc_401582  | * | cmp rdi, rax ",icc,1
"mov rax, 0CCCCCCCCCCCCCCCh  | * | ja short loc_401582 ",icc,1
"cmp rdi, rax  | * | test rdi, rdi ",icc,2
ja short loc_401582  | * | jnz short loc_40158C ,icc,1
"test rdi, rdi  | * | xor ecx, ecx ",icc,1
"jnz short loc_40158C  | * | lea rax, [rdi+rdi*4] ",icc,1
"xor ecx, ecx  | * | shl rax, 2 ",icc,1
"lea rax, [rdi+rdi*4]  | * | mov [rsp+200h+var_A0], rax ",icc,1
"shl rax, 2  | * | jmp short loc_4015F4 ",icc,1
"mov [rsp+200h+var_A0], rax  | * | loc_401582:  ",icc,1
"jmp short loc_4015F4  | * | mov rdi, 0CCCCCCCCCCCCCCCh ",icc,1
loc_401582:   | * | loc_40158C:  ,icc,1
"mov rdi, 0CCCCCCCCCCCCCCCh  | * | mov [rsp+200h+var_100], rsi ",icc,1
"loc_40158C:   | * | lea rdi, [rdi+rdi*4] ",icc,1
"mov [rsp+200h+var_100], rsi  | * | shl rdi, 2  ",icc,1
"lea rdi, [rdi+rdi*4]  | * | mov [rsp+200h+var_A0], rdi ",icc,1
"shl rdi, 2   | * | mov [rsp+200h+var_F8], r8 ",icc,1
"mov [rsp+200h+var_A0], rdi  | * | mov [rsp+200h+var_B8], r11 ",icc,1
"mov [rsp+200h+var_F8], r8  | * | mov [rsp+200h+var_F0], r9d ",icc,1
"mov [rsp+200h+var_B8], r11  | * | mov [rsp+200h+var_E8], r10d ",icc,1
"mov [rsp+200h+var_F0], r9d  | * | call __Znwm  ",icc,1
"mov [rsp+200h+var_E8], r10d  | * | mov r10d, [rsp+200h+var_E8] ",icc,1
"call __Znwm   | * | mov rcx, rax ",icc,1
"mov r10d, [rsp+200h+var_E8]  | * | mov r9d, [rsp+200h+var_F0] ",icc,1
"mov rcx, rax  | * | mov r11, [rsp+200h+var_B8] ",icc,1
"mov r9d, [rsp+200h+var_F0]  | * | mov r8, [rsp+200h+var_F8] ",icc,1
"mov r11, [rsp+200h+var_B8]  | * | mov rsi, [rsp+200h+var_100] ",icc,1
"mov r8, [rsp+200h+var_F8]  | * | loc_4015F4:  ",icc,1
"mov rsi, [rsp+200h+var_100]  | * | neg rsi ",icc,1
"loc_4015F4:   | * | mov rax, 6666666666666667h ",icc,1
"neg rsi  | * | add rsi, r8 ",icc,1
"mov rax, 6666666666666667h  | * | imul rsi ",icc,1
"add rsi, r8  | * | sar rdx, 3 ",icc,1
"imul rsi  | * | sar rsi, 3Fh ",icc,1
"sar rdx, 3  | * | sub rdx, rsi ",icc,1
"sar rsi, 3Fh  | * | lea rsi, [rdx+rdx*4] ",icc,1
"sub rdx, rsi  | * | lea rdx, [rcx+rsi*4] ",icc,1
"lea rsi, [rdx+rdx*4]  | * | test rdx, rdx ",icc,1
"lea rdx, [rcx+rsi*4]  | * | jz short loc_401638 ",icc,1
"test rdx, rdx  | * | mov eax, [rsp+200h+var_80] ",icc,2
"jz short loc_401638  | * | mov [rdx], r10d ",icc,1
"mov eax, [rsp+200h+var_80]  | * | mov [rdx+4], r9d ",icc,1
"mov [rdx], r10d  | * | mov [rdx+8], r15d ",icc,1
"mov [rdx+4], r9d  | * | mov [rdx+0Ch], r12d ",icc,1
"mov [rdx+8], r15d  | * | mov [rdx+10h], eax ",icc,2
"mov [rdx+0Ch], r12d  | * | loc_401638:  ",icc,1
"mov [rdx+10h], eax  | * | mov rax, cs:v ",icc,1
"loc_401638:   | * | mov rdx, rcx ",icc,1
"mov rax, cs:v  | * | cmp rax, r8 ",icc,1
"mov rdx, rcx  | * | jz short loc_401679 ",icc,1
"cmp rax, r8  | * | loc_401647:  ",icc,1
"jz short loc_401679  | * | test rdx, rdx ",icc,1
loc_401647:   | * | jz short loc_40166C ,icc,1
"test rdx, rdx  | * | mov esi, [rax] ",icc,1
"jz short loc_40166C  | * | mov [rdx], esi ",icc,1
"mov esi, [rax]  | * | mov edi, [rax+4] ",icc,1
"mov [rdx], esi  | * | mov [rdx+4], edi ",icc,2
"mov edi, [rax+4]  | * | mov r9d, [rax+8] ",icc,1
"mov [rdx+4], edi  | * | mov [rdx+8], r9d ",icc,2
"mov r9d, [rax+8]  | * | mov r10d, [rax+0Ch] ",icc,1
"mov [rdx+8], r9d  | * | mov [rdx+0Ch], r10d ",icc,2
"mov r10d, [rax+0Ch]  | * | mov esi, [rax+10h] ",icc,1
"mov [rdx+0Ch], r10d  | * | mov [rdx+10h], esi ",icc,2
"mov esi, [rax+10h]  | * | loc_40166C:  ",icc,1
"mov [rdx+10h], esi  | * | add rax, 14h ",icc,1
"loc_40166C:   | * | add rdx, 14h ",icc,1
"add rax, 14h  | * | cmp rax, r8 ",icc,1
"add rdx, 14h  | * | jnz short loc_401647 ",icc,1
"cmp rax, r8  | * | loc_401679:  ",icc,1
"jnz short loc_401647  | * | mov rax, cs:qword_22BBA8E0 ",icc,1
"loc_401679:   | * | add rdx, 14h ",icc,1
"mov rax, cs:qword_22BBA8E0  | * | cmp r8, rax ",icc,1
"add rdx, 14h  | * | jz short loc_4016BE ",icc,1
"cmp r8, rax  | * | loc_401689:  ",icc,1
"jz short loc_4016BE  | * | test rdx, rdx ",icc,1
loc_401689:   | * | jz short loc_4016B1 ,icc,1
"test rdx, rdx  | * | mov esi, [r8] ",icc,1
"jz short loc_4016B1  | * | mov [rdx], esi ",icc,1
"mov esi, [r8]  | * | mov edi, [r8+4] ",icc,1
"mov edi, [r8+4]  | * | mov r9d, [r8+8] ",icc,1
"mov r9d, [r8+8]  | * | mov r10d, [r8+0Ch] ",icc,1
"mov r10d, [r8+0Ch]  | * | mov esi, [r8+10h] ",icc,1
"mov esi, [r8+10h]  | * | loc_4016B1:  ",icc,1
"mov [rdx+10h], esi  | * | add r8, 14h ",icc,1
"loc_4016B1:   | * | add rdx, 14h ",icc,1
"add r8, 14h  | * | cmp r8, rax ",icc,1
"add rdx, 14h  | * | jnz short loc_401689 ",icc,1
"cmp r8, rax  | * | loc_4016BE:  ",icc,1
"jnz short loc_401689  | * | mov rdi, cs:v  ",icc,1
"loc_4016BE:   | * | test rdi, rdi ",icc,1
"mov rdi, cs:v   | * | jz short loc_4016FF ",icc,1
"test rdi, rdi  | * | mov [rsp+200h+var_B0], rdx ",icc,1
"jz short loc_4016FF  | * | mov [rsp+200h+var_A8], rcx ",icc,1
"mov [rsp+200h+var_B0], rdx  | * | mov [rsp+200h+var_B8], r11 ",icc,1
"mov [rsp+200h+var_A8], rcx  | * | call __ZdlPv  ",icc,1
"mov [rsp+200h+var_B8], r11  | * | mov r11, [rsp+200h+var_B8] ",icc,1
"call __ZdlPv   | * | mov rcx, [rsp+200h+var_A8] ",icc,1
"mov r11, [rsp+200h+var_B8]  | * | mov rdx, [rsp+200h+var_B0] ",icc,1
"mov rcx, [rsp+200h+var_A8]  | * | loc_4016FF:  ",icc,1
"mov rdx, [rsp+200h+var_B0]  | * | mov rax, [rsp+200h+var_A0] ",icc,1
"loc_4016FF:   | * | add rax, rcx ",icc,1
"mov rax, [rsp+200h+var_A0]  | * | mov cs:qword_22BBA8E0, rdx ",icc,1
"add rax, rcx  | * | mov cs:qword_22BBA8E8, rax ",icc,1
"mov cs:qword_22BBA8E0, rdx  | * | mov cs:v, rcx ",icc,1
"mov cs:qword_22BBA8E8, rax  | * | mov eax, cs:ct ",icc,1
"mov cs:v, rcx  | * | mov edx, ds:was[r11+r14*4] ",icc,1
"mov eax, cs:ct  | * | jmp short loc_40176E ",icc,1
"mov edx, ds:was[r11+r14*4]  | * | loc_40172F:  ",icc,1
"jmp short loc_40176E  | * | test r8, r8 ",icc,1
loc_40172F:   | * | jz short loc_401763 ,icc,1
"test r8, r8  | * | mov eax, [rsp+200h+var_80] ",icc,1
"jz short loc_401763  | * | mov [r8], r10d ",icc,1
"mov eax, [rsp+200h+var_80]  | * | mov [r8+4], r9d ",icc,1
"mov [r8], r10d  | * | mov [r8+8], r15d ",icc,1
"mov [r8+4], r9d  | * | mov [r8+0Ch], r12d ",icc,1
"mov [r8+8], r15d  | * | mov [r8+10h], eax ",icc,1
"mov [r8+0Ch], r12d  | * | mov eax, cs:ct ",icc,1
"mov [r8+10h], eax  | * | mov r8, cs:qword_22BBA8E0 ",icc,1
"mov eax, cs:ct  | * | mov edx, ds:was[r11+r14*4] ",icc,1
"mov r8, cs:qword_22BBA8E0  | * | loc_401763:  ",icc,1
"mov edx, ds:was[r11+r14*4]  | * | add r8, 14h ",icc,1
"loc_401763:   | * | mov cs:qword_22BBA8E0, r8 ",icc,1
"add r8, 14h  | * | loc_40176E:  ",icc,1
"mov cs:qword_22BBA8E0, r8  | * | cmp edx, eax ",icc,1
loc_40176E:   | * | jnz loc_401A11 ,icc,1
"cmp edx, eax  | * | test r15d, r15d ",icc,1
jnz loc_401A11  | * | jle loc_401A11 ,icc,1
"test r15d, r15d  | * | test r12d, r12d ",icc,1
jle loc_401A11  | * | jle loc_401A11 ,icc,1
"test r12d, r12d  | * | mov eax, cs:n ",icc,1
"jle loc_401A11  | * | add eax, eax ",icc,1
"mov eax, cs:n  | * | cmp r15d, eax ",icc,1
"add eax, eax  | * | jge loc_401A11 ",icc,1
"cmp r15d, eax  | * | cmp r12d, eax ",icc,1
jge loc_401A11  | * | jge loc_401A11 ,icc,1
"cmp r12d, eax  | * | mov edx, ds:f[r14*4] ",icc,1
"jge loc_401A11  | * | cmp r15d, edx ",icc,1
"mov edx, ds:f[r14*4]  | * | jl loc_401A11 ",icc,1
"cmp r15d, edx  | * | mov eax, ds:w[r14*4] ",icc,1
"jl loc_401A11  | * | add edx, eax ",icc,2
"mov eax, ds:w[r14*4]  | * | cmp r15d, edx ",icc,1
"add edx, eax  | * | jge loc_401A11 ",icc,2
"cmp r15d, edx  | * | mov edx, ds:f[r13*4] ",icc,1
"jge loc_401A11  | * | cmp r12d, edx ",icc,1
"mov edx, ds:f[r13*4]  | * | jl loc_401A11 ",icc,1
"cmp r12d, edx  | * | mov eax, ds:w[r13*4] ",icc,1
"mov eax, ds:w[r13*4]  | * | cmp r12d, edx ",icc,1
"cmp r12d, edx  | * | mov r9, cs:qword_22BBA8F8 ",icc,1
"jge loc_401A11  | * | mov ecx, [rsp+200h+var_144] ",icc,1
"mov r9, cs:qword_22BBA8F8  | * | mov esi, [rsp+200h+var_78] ",icc,1
"mov ecx, [rsp+200h+var_144]  | * | cmp r9, cs:qword_22BBA900 ",icc,1
"mov esi, [rsp+200h+var_78]  | * | jnz loc_4019E0 ",icc,1
"cmp r9, cs:qword_22BBA900  | * | mov rdi, r9 ",icc,1
"jnz loc_4019E0  | * | mov rax, 6666666666666667h ",icc,1
"mov rdi, r9  | * | mov r8, cs:u ",icc,1
"mov rax, 6666666666666667h  | * | sub rdi, r8 ",icc,1
"mov r8, cs:u  | * | imul rdi ",icc,1
"sub rdi, r8  | * | sar rdx, 3 ",icc,1
"imul rdi  | * | mov r11, rdi ",icc,1
"sar rdx, 3  | * | mov r10, 0CCCCCCCCCCCCCCCh ",icc,1
"mov r11, rdi  | * | sar r11, 3Fh ",icc,1
"mov r10, 0CCCCCCCCCCCCCCCh  | * | sub r10, rdx ",icc,1
"sar r11, 3Fh  | * | add r10, r11 ",icc,1
"sub r10, rdx  | * | cmp r10, 1 ",icc,1
"add r10, r11  | * | jb loc_402A15 ",icc,1
"cmp r10, 1  | * | sub rdx, r11 ",icc,1
"sub rdx, r11  | * | cmp rdx, 1 ",icc,1
"add rdi, rdx  | * | jb short loc_401884 ",icc,1
"jb short loc_401884  | * | cmp rdi, rax ",icc,1
"mov rax, 0CCCCCCCCCCCCCCCh  | * | ja short loc_401884 ",icc,1
ja short loc_401884  | * | jnz short loc_40188E ,icc,1
"test rdi, rdi  | * | xor r14d, r14d ",icc,1
"jnz short loc_40188E  | * | lea r13, [rdi+rdi*4] ",icc,1
"xor r14d, r14d  | * | shl r13, 2 ",icc,1
"lea r13, [rdi+rdi*4]  | * | jmp short loc_4018DD ",icc,1
"shl r13, 2  | * | loc_401884:  ",icc,1
"jmp short loc_4018DD  | * | mov rdi, 0CCCCCCCCCCCCCCCh ",icc,1
loc_401884:   | * | loc_40188E:  ,icc,1
"mov rdi, 0CCCCCCCCCCCCCCCh  | * | mov [rsp+200h+var_138], r8 ",icc,1
"loc_40188E:   | * | lea r13, [rdi+rdi*4] ",icc,1
"mov [rsp+200h+var_138], r8  | * | shl r13, 2 ",icc,1
"lea r13, [rdi+rdi*4]  | * | mov rdi, r13  ",icc,1
"shl r13, 2  | * | mov [rsp+200h+var_130], r9 ",icc,1
"mov rdi, r13   | * | mov [rsp+200h+var_128], esi ",icc,1
"mov [rsp+200h+var_130], r9  | * | mov [rsp+200h+var_120], ecx ",icc,1
"mov [rsp+200h+var_128], esi  | * | call __Znwm  ",icc,1
"mov [rsp+200h+var_120], ecx  | * | mov ecx, [rsp+200h+var_120] ",icc,1
"call __Znwm   | * | mov r14, rax ",icc,1
"mov ecx, [rsp+200h+var_120]  | * | mov esi, [rsp+200h+var_128] ",icc,1
"mov r14, rax  | * | mov r9, [rsp+200h+var_130] ",icc,1
"mov esi, [rsp+200h+var_128]  | * | mov r8, [rsp+200h+var_138] ",icc,1
"mov r9, [rsp+200h+var_130]  | * | loc_4018DD:  ",icc,1
"mov r8, [rsp+200h+var_138]  | * | neg r8 ",icc,1
"loc_4018DD:   | * | mov rax, 6666666666666667h ",icc,1
"neg r8  | * | add r8, r9 ",icc,1
"mov rax, 6666666666666667h  | * | imul r8 ",icc,1
"add r8, r9  | * | sar rdx, 3 ",icc,1
"imul r8  | * | sar r8, 3Fh ",icc,1
"sar rdx, 3  | * | sub rdx, r8 ",icc,1
"sar r8, 3Fh  | * | lea r8, [rdx+rdx*4] ",icc,1
"sub rdx, r8  | * | lea rdx, [r14+r8*4] ",icc,1
"lea r8, [rdx+rdx*4]  | * | test rdx, rdx ",icc,1
"lea rdx, [r14+r8*4]  | * | jz short loc_40191F ",icc,1
"jz short loc_40191F  | * | mov [rdx], ecx ",icc,1
"mov eax, [rsp+200h+var_80]  | * | mov [rdx+4], esi ",icc,1
"mov [rdx], ecx  | * | mov [rdx+8], r15d ",icc,1
"mov [rdx+4], esi  | * | mov [rdx+0Ch], r12d ",icc,1
"mov [rdx+0Ch], r12d  | * | loc_40191F:  ",icc,1
"mov [rdx+10h], eax  | * | mov rax, cs:u ",icc,1
"loc_40191F:   | * | mov r12, r14 ",icc,1
"mov rax, cs:u  | * | cmp rax, r9 ",icc,1
"mov r12, r14  | * | jz short loc_401968 ",icc,1
"cmp rax, r9  | * | loc_40192E:  ",icc,1
"jz short loc_401968  | * | test r12, r12 ",icc,1
loc_40192E:   | * | jz short loc_40195B ,icc,1
"test r12, r12  | * | mov edx, [rax] ",icc,1
"jz short loc_40195B  | * | mov [r12], edx ",icc,1
"mov edx, [rax]  | * | mov ecx, [rax+4] ",icc,1
"mov [r12], edx  | * | mov [r12+4], ecx ",icc,2
"mov ecx, [rax+4]  | * | mov esi, [rax+8] ",icc,1
"mov [r12+4], ecx  | * | mov [r12+8], esi ",icc,2
"mov esi, [rax+8]  | * | mov r8d, [rax+0Ch] ",icc,1
"mov [r12+8], esi  | * | mov [r12+0Ch], r8d ",icc,2
"mov r8d, [rax+0Ch]  | * | mov r10d, [rax+10h] ",icc,1
"mov [r12+0Ch], r8d  | * | mov [r12+10h], r10d ",icc,2
"mov r10d, [rax+10h]  | * | loc_40195B:  ",icc,1
"mov [r12+10h], r10d  | * | add rax, 14h ",icc,1
"loc_40195B:   | * | add r12, 14h ",icc,1
"add rax, 14h  | * | cmp rax, r9 ",icc,1
"add r12, 14h  | * | jnz short loc_40192E ",icc,1
"cmp rax, r9  | * | loc_401968:  ",icc,1
"jnz short loc_40192E  | * | mov rax, cs:qword_22BBA8F8 ",icc,1
"loc_401968:   | * | add r12, 14h ",icc,1
"mov rax, cs:qword_22BBA8F8  | * | cmp r9, rax ",icc,1
"add r12, 14h  | * | jz short loc_4019B5 ",icc,1
"cmp r9, rax  | * | loc_401978:  ",icc,1
"jz short loc_4019B5  | * | test r12, r12 ",icc,1
loc_401978:   | * | jz short loc_4019A8 ,icc,1
"test r12, r12  | * | mov edx, [r9] ",icc,1
"jz short loc_4019A8  | * | mov [r12], edx ",icc,1
"mov edx, [r9]  | * | mov ecx, [r9+4] ",icc,1
"mov ecx, [r9+4]  | * | mov esi, [r9+8] ",icc,1
"mov esi, [r9+8]  | * | mov r8d, [r9+0Ch] ",icc,1
"mov r8d, [r9+0Ch]  | * | mov r10d, [r9+10h] ",icc,1
"mov r10d, [r9+10h]  | * | loc_4019A8:  ",icc,1
"mov [r12+10h], r10d  | * | add r9, 14h ",icc,1
"loc_4019A8:   | * | add r12, 14h ",icc,1
"add r9, 14h  | * | cmp r9, rax ",icc,1
"add r12, 14h  | * | jnz short loc_401978 ",icc,1
"cmp r9, rax  | * | loc_4019B5:  ",icc,1
"jnz short loc_401978  | * | mov rdi, cs:u  ",icc,1
"loc_4019B5:   | * | test rdi, rdi ",icc,1
"mov rdi, cs:u   | * | jz short loc_4019C6 ",icc,1
"test rdi, rdi  | * | call __ZdlPv  ",icc,1
jz short loc_4019C6  | * | loc_4019C6:  ,icc,1
"call __ZdlPv   | * | add r13, r14 ",icc,1
"loc_4019C6:   | * | mov cs:u, r14 ",icc,1
"add r13, r14  | * | mov cs:qword_22BBA8F8, r12 ",icc,1
"mov cs:u, r14  | * | mov cs:qword_22BBA900, r13 ",icc,1
"mov cs:qword_22BBA8F8, r12  | * | jmp short loc_401A11 ",icc,1
"mov cs:qword_22BBA900, r13  | * | loc_4019E0:  ",icc,1
"jmp short loc_401A11  | * | test r9, r9 ",icc,1
loc_4019E0:   | * | jz short loc_401A06 ,icc,1
"test r9, r9  | * | mov eax, [rsp+200h+var_80] ",icc,1
"jz short loc_401A06  | * | mov [r9], ecx ",icc,1
"mov eax, [rsp+200h+var_80]  | * | mov [r9+4], esi ",icc,1
"mov [r9], ecx  | * | mov [r9+8], r15d ",icc,1
"mov [r9+4], esi  | * | mov [r9+0Ch], r12d ",icc,1
"mov [r9+8], r15d  | * | mov [r9+10h], eax ",icc,1
"mov [r9+0Ch], r12d  | * | mov r9, cs:qword_22BBA8F8 ",icc,1
"mov [r9+10h], eax  | * | loc_401A06:  ",icc,1
"mov r9, cs:qword_22BBA8F8  | * | add r9, 14h ",icc,1
"loc_401A06:   | * | mov cs:qword_22BBA8F8, r9 ",icc,1
"add r9, 14h  | * | loc_401A11:  ",icc,1
"mov cs:qword_22BBA8F8, r9  | * | inc rbx ",icc,1
"loc_401A11:   | * | cmp rbx, 6 ",icc,1
inc rbx  | * | jge short loc_401A25 ,icc,1
"cmp rbx, 6  | * | mov eax, cs:ct ",icc,1
jge short loc_401A25  | * | jmp loc_4014AC ,icc,1
"mov eax, cs:ct  | * | loc_401A25:  ",icc,1
"jmp loc_4014AC  | * | mov r14, [rsp+200h+var_98] ",icc,1
"loc_401A25:   | * | mov edx, cs:m ",icc,1
"mov r14, [rsp+200h+var_98]  | * | inc r14 ",icc,1
"mov edx, cs:m  | * | movsxd rdx, edx ",icc,1
"inc r14  | * | cmp r14, rdx ",icc,1
"movsxd rdx, edx  | * | jl loc_401448 ",icc,1
"cmp r14, rdx  | * | mov r12d, [rsp+200h+var_118] ",icc,1
"jl loc_401448  | * | mov r13d, 1 ",icc,1
"mov r12d, [rsp+200h+var_118]  | * | mov ebx, cs:n ",icc,1
"mov r13d, 1  | * | loc_401A56:  ",icc,1
"mov ebx, cs:n  | * | mov ecx, ebx ",icc,1
"loc_401A56:   | * | xor eax, eax ",icc,1
"mov ecx, ebx  | * | xor r14d, r14d ",icc,1
"xor eax, eax  | * | xor r15d, r15d ",icc,1
"xor r14d, r14d  | * | add ecx, ebx ",icc,1
"xor r15d, r15d  | * | js loc_401E8F ",icc,1
"add ecx, ebx  | * | mov [rsp+200h+var_118], r12d ",icc,1
"js loc_401E8F  | * | mov r8d, ebx ",icc,1
"mov [rsp+200h+var_118], r12d  | * | loc_401A73:  ",icc,1
"mov r8d, ebx  | * | mov ecx, r8d ",icc,1
"loc_401A73:   | * | xor r12d, r12d ",icc,1
"mov ecx, r8d  | * | add ecx, r8d ",icc,1
"xor r12d, r12d  | * | js loc_402ACA ",icc,1
"add ecx, r8d  | * | mov r9d, eax ",icc,1
"js loc_402ACA  | * | movsxd rcx, eax ",icc,1
"mov r9d, eax  | * | mov [rsp+200h+var_58], rax ",icc,1
"movsxd rcx, eax  | * | imul rcx, 5DC4h ",icc,1
"mov [rsp+200h+var_58], rax  | * | mov [rsp+200h+var_50], rcx ",icc,1
"imul rcx, 5DC4h  | * | lea r13d, [r9+1] ",icc,1
"mov [rsp+200h+var_50], rcx  | * | movsxd r13, r13d ",icc,1
"lea r13d, [r9+1]  | * | lea ebx, [r9-1] ",icc,1
"movsxd r13, r13d  | * | movsxd rbx, ebx ",icc,1
"lea ebx, [r9-1]  | * | imul r10, rbx, 5DC4h ",icc,1
"movsxd rbx, ebx  | * | imul rsi, r13, 5DC4h ",icc,1
"imul r10, rbx, 5DC4h  | * | mov [rsp+200h+var_48], rsi ",icc,1
"imul rsi, r13, 5DC4h  | * | mov [rsp+200h+var_40], r10 ",icc,1
"mov [rsp+200h+var_48], rsi  | * | loc_401ACB:  ",icc,1
"mov [rsp+200h+var_40], r10  | * | mov r10d, cs:ct ",icc,1
"loc_401ACB:   | * | cmp r10d, ds:was[r15+r12*4] ",icc,1
"mov r10d, cs:ct  | * | jnz short loc_401AEC ",icc,1
"cmp r10d, ds:was[r15+r12*4]  | * | mov ds:q[r15+r12*4], r14d ",icc,1
jnz short loc_401AEC  | * | inc r14d ,icc,1
"mov ds:q[r15+r12*4], r14d  | * | jmp loc_401DEF ",icc,1
inc r14d  | * | loc_401AEC:  ,icc,1
"jmp loc_401DEF  | * | cmp r10d, ds:use[r15+r12*4] ",icc,1
loc_401AEC:   | * | jz loc_401DEF ,icc,1
"cmp r10d, ds:use[r15+r12*4]  | * | mov ds:q[r15+r12*4], r14d ",icc,1
"jz loc_401DEF  | * | mov ecx, r12d ",icc,1
"mov ds:q[r15+r12*4], r14d  | * | mov ds:use[r15+r12*4], r10d ",icc,1
"mov ecx, r12d  | * | test r13d, r13d ",icc,1
"mov ds:use[r15+r12*4], r10d  | * | js loc_402AB5 ",icc,1
"test r13d, r13d  | * | test ecx, ecx ",icc,1
js loc_402AB5  | * | jl loc_401BF9 ,icc,1
"test ecx, ecx  | * | lea eax, [r8+r8] ",icc,2
"jl loc_401BF9  | * | cmp r13d, eax ",icc,1
"lea eax, [r8+r8]  | * | jg short loc_401B8A ",icc,1
"cmp r13d, eax  | * | cmp ecx, eax ",icc,1
jg short loc_401B8A  | * | jg short loc_401B8A ,icc,1
"cmp ecx, eax  | * | movsxd r11, r12d ",icc,2
"jg short loc_401B8A  | * | mov rax, [rsp+200h+var_48] ",icc,1
"movsxd r11, r12d  | * | cmp r10d, ds:use[rax+r11*4] ",icc,1
"mov rax, [rsp+200h+var_48]  | * | jz short loc_401B8A ",icc,2
"cmp r10d, ds:use[rax+r11*4]  | * | mov rax, [rsp+200h+var_48] ",icc,1
"jz short loc_401B8A  | * | cmp r10d, ds:was[rax+r11*4] ",icc,1
"cmp r10d, ds:was[rax+r11*4]  | * | mov edi, r13d  ",icc,1
"jz short loc_401B8A  | * | mov esi, ecx  ",icc,1
"mov edi, r13d   | * | mov edx, r14d  ",icc,4
"mov esi, ecx   | * | mov [rsp+200h+var_70], ecx ",icc,2
"mov edx, r14d   | * | mov [rsp+200h+var_68], r9d ",icc,3
"mov [rsp+200h+var_70], ecx  | * | call _Z2goiii  ",icc,5
"mov [rsp+200h+var_68], r9d  | * | mov r9d, [rsp+200h+var_68] ",icc,6
"call _Z2goiii   | * | test ebx, ebx ",icc,2
"mov r9d, [rsp+200h+var_68]  | * | mov ecx, [rsp+200h+var_70] ",icc,1
"test ebx, ebx  | * | mov r8d, cs:n ",icc,1
"mov ecx, [rsp+200h+var_70]  | * | jns short loc_401B8E ",icc,1
"mov r8d, cs:n  | * | jmp short loc_401BF9 ",icc,1
jns short loc_401B8E  | * | loc_401B8A:  ,icc,1
"jmp short loc_401BF9  | * | test ebx, ebx ",icc,1
loc_401B8A:   | * | js short loc_401BF9 ,icc,1
"test ebx, ebx  | * | loc_401B8E:  ",icc,1
"js short loc_401BF9  | * | lea eax, [r8+r8] ",icc,1
"loc_401B8E:   | * | cmp ebx, eax ",icc,1
"lea eax, [r8+r8]  | * | jg short loc_401BF9 ",icc,1
"cmp ebx, eax  | * | cmp ecx, eax ",icc,2
jg short loc_401BF9  | * | jg short loc_401BF9 ,icc,1
"jg short loc_401BF9  | * | mov rax, [rsp+200h+var_40] ",icc,1
"movsxd r11, r12d  | * | mov r10d, cs:ct ",icc,1
"mov rax, [rsp+200h+var_40]  | * | cmp r10d, ds:use[rax+r11*4] ",icc,2
"mov r10d, cs:ct  | * | jz short loc_401BF9 ",icc,1
"cmp r10d, ds:use[rax+r11*4]  | * | mov rax, [rsp+200h+var_40] ",icc,2
"jz short loc_401BF9  | * | cmp r10d, ds:was[rax+r11*4] ",icc,1
"mov rax, [rsp+200h+var_40]  | * | jz short loc_401BF9 ",icc,1
"cmp r10d, ds:was[rax+r11*4]  | * | mov edi, ebx  ",icc,2
"jz short loc_401BF9  | * | mov esi, ecx  ",icc,1
"mov edi, ebx   | * | mov edx, r14d  ",icc,4
"call _Z2goiii   | * | mov ecx, [rsp+200h+var_70] ",icc,4
"mov r9d, [rsp+200h+var_68]  | * | mov r8d, cs:n ",icc,2
"mov ecx, [rsp+200h+var_70]  | * | loc_401BF9:  ",icc,1
"mov r8d, cs:n  | * | test r9d, r9d ",icc,1
"loc_401BF9:   | * | lea eax, [rcx+1] ",icc,1
"test r9d, r9d  | * | jl loc_401C85 ",icc,1
"lea eax, [rcx+1]  | * | test eax, eax ",icc,1
jl loc_401C85  | * | js short loc_401C85 ,icc,1
"test eax, eax  | * | lea r10d, [r8+r8] ",icc,2
"js short loc_401C85  | * | cmp r9d, r10d ",icc,1
"lea r10d, [r8+r8]  | * | jg short loc_401C85 ",icc,1
"cmp r9d, r10d  | * | cmp eax, r10d ",icc,1
jg short loc_401C85  | * | jg short loc_401C85 ,icc,1
"cmp eax, r10d  | * | movsxd rdx, eax ",icc,2
"jg short loc_401C85  | * | mov r10, [rsp+200h+var_50] ",icc,1
"movsxd rdx, eax  | * | mov r11d, cs:ct ",icc,2
"mov r10, [rsp+200h+var_50]  | * | cmp r11d, ds:use[r10+rdx*4] ",icc,2
"mov r11d, cs:ct  | * | jz short loc_401C85 ",icc,1
"cmp r11d, ds:use[r10+rdx*4]  | * | mov r10, [rsp+200h+var_50] ",icc,2
"jz short loc_401C85  | * | cmp r11d, ds:was[r10+rdx*4] ",icc,1
"mov r10, [rsp+200h+var_50]  | * | jz short loc_401C85 ",icc,1
"cmp r11d, ds:was[r10+rdx*4]  | * | mov edi, r9d  ",icc,2
"jz short loc_401C85  | * | mov esi, eax  ",icc,1
"mov edi, r9d   | * | mov edx, r14d  ",icc,2
"mov esi, eax   | * | mov [rsp+200h+var_60], eax ",icc,1
"mov edx, r14d   | * | mov [rsp+200h+var_70], ecx ",icc,2
"mov [rsp+200h+var_60], eax  | * | mov [rsp+200h+var_68], r9d ",icc,2
"mov r9d, [rsp+200h+var_68]  | * | mov eax, [rsp+200h+var_60] ",icc,2
"mov ecx, [rsp+200h+var_70]  | * | mov r8d, cs:n ",icc,2
"mov eax, [rsp+200h+var_60]  | * | loc_401C85:  ",icc,1
"mov r8d, cs:n  | * | dec ecx ",icc,1
"loc_401C85:   | * | test r9d, r9d ",icc,1
dec ecx  | * | jl loc_401D10 ,icc,1
"test r9d, r9d  | * | test ecx, ecx ",icc,1
jl loc_401D10  | * | js short loc_401D10 ,icc,1
"test ecx, ecx  | * | lea r10d, [r8+r8] ",icc,1
"js short loc_401D10  | * | cmp r9d, r10d ",icc,1
"lea r10d, [r8+r8]  | * | jg short loc_401D10 ",icc,1
"cmp r9d, r10d  | * | cmp ecx, r10d ",icc,1
jg short loc_401D10  | * | jg short loc_401D10 ,icc,1
"cmp ecx, r10d  | * | movsxd rdx, ecx ",icc,1
"jg short loc_401D10  | * | mov r10, [rsp+200h+var_50] ",icc,1
"movsxd rdx, ecx  | * | mov r11d, cs:ct ",icc,1
"mov r11d, cs:ct  | * | jz short loc_401D10 ",icc,1
"jz short loc_401D10  | * | cmp r11d, ds:was[r10+rdx*4] ",icc,1
"mov r10, [rsp+200h+var_50]  | * | jz short loc_401D10 ",icc,1
"jz short loc_401D10  | * | mov esi, ecx  ",icc,1
"mov esi, ecx   | * | mov [rsp+200h+var_60], eax ",icc,1
"mov eax, [rsp+200h+var_60]  | * | loc_401D10:  ",icc,1
"mov r8d, cs:n  | * | test r13d, r13d ",icc,1
loc_401D10:   | * | js short loc_401D87 ,icc,1
"test r13d, r13d  | * | test eax, eax ",icc,1
js short loc_401D87  | * | js short loc_401D87 ,icc,1
"js short loc_401D87  | * | cmp r13d, r10d ",icc,1
"lea r10d, [r8+r8]  | * | jg short loc_401D87 ",icc,1
"cmp r13d, r10d  | * | cmp eax, r10d ",icc,1
jg short loc_401D87  | * | jg short loc_401D87 ,icc,1
"jg short loc_401D87  | * | mov r10, [rsp+200h+var_48] ",icc,1
"mov r10, [rsp+200h+var_48]  | * | cmp r11d, ds:use[r10+rdx*4] ",icc,1
"mov r11d, cs:ct  | * | jz short loc_401D87 ",icc,1
"cmp r11d, ds:use[r10+rdx*4]  | * | mov r10, [rsp+200h+var_48] ",icc,1
"jz short loc_401D87  | * | cmp r11d, ds:was[r10+rdx*4] ",icc,1
"mov r10, [rsp+200h+var_48]  | * | jz short loc_401D87 ",icc,1
"cmp r11d, ds:was[r10+rdx*4]  | * | mov edi, r13d  ",icc,1
"jz short loc_401D87  | * | mov esi, eax  ",icc,1
"mov esi, eax   | * | mov [rsp+200h+var_70], ecx ",icc,1
"mov ecx, [rsp+200h+var_70]  | * | loc_401D87:  ",icc,1
"mov r8d, cs:n  | * | test ebx, ebx ",icc,1
loc_401D87:   | * | js short loc_401DEC ,icc,1
"test ebx, ebx  | * | test ecx, ecx ",icc,2
js short loc_401DEC  | * | js short loc_401DEC ,icc,1
"js short loc_401DEC  | * | cmp ebx, eax ",icc,1
"lea eax, [r8+r8]  | * | jg short loc_401DEC ",icc,1
jg short loc_401DEC  | * | jg short loc_401DEC ,icc,1
"cmp ecx, eax  | * | movsxd r11, ecx ",icc,1
"jg short loc_401DEC  | * | mov rax, [rsp+200h+var_40] ",icc,1
"movsxd r11, ecx  | * | mov r10d, cs:ct ",icc,1
"mov r10d, cs:ct  | * | jz short loc_401DEC ",icc,1
"jz short loc_401DEC  | * | cmp r10d, ds:was[rax+r11*4] ",icc,1
"mov rax, [rsp+200h+var_40]  | * | jz short loc_401DEC ",icc,1
"jz short loc_401DEC  | * | mov esi, ecx  ",icc,1
"mov esi, ecx   | * | mov [rsp+200h+var_68], r9d ",icc,1
"mov edx, r14d   | * | call _Z2goiii  ",icc,4
"call _Z2goiii   | * | mov r8d, cs:n ",icc,1
"mov r9d, [rsp+200h+var_68]  | * | loc_401DEC:  ",icc,1
"mov r8d, cs:n  | * | inc r14d ",icc,1
loc_401DEC:   | * | loc_401DEF:  ,icc,1
"inc r14d  | * | movsxd rcx, r8d ",icc,1
loc_401DEF:   | * | inc r12 ,icc,1
"movsxd rcx, r8d  | * | add rcx, rcx ",icc,1
"inc r12  | * | cmp r12, rcx ",icc,1
"add rcx, rcx  | * | jle loc_401ACB ",icc,1
"cmp r12, rcx  | * | mov rax, [rsp+200h+var_58] ",icc,1
jle loc_401ACB  | * | loc_401E09:  ,icc,1
"mov rax, [rsp+200h+var_58]  | * | inc rax ",icc,1
"loc_401E09:   | * | add r15, 5DC4h ",icc,1
"inc rax  | * | cmp rax, rcx ",icc,1
"add r15, 5DC4h  | * | jle loc_401A73 ",icc,1
"cmp rax, rcx  | * | mov r12d, [rsp+200h+var_118] ",icc,1
"jle loc_401A73  | * | mov ebx, r8d ",icc,1
"mov r12d, [rsp+200h+var_118]  | * | mov edx, cs:m ",icc,1
"mov ebx, r8d  | * | mov r13d, 1 ",icc,1
"mov edx, cs:m  | * | test r14d, r14d ",icc,1
"mov r13d, 1  | * | jle short loc_401E8F ",icc,1
"test r14d, r14d  | * | cmp r14d, 4 ",icc,1
jle short loc_401E8F  | * | jl loc_402A72 ,icc,1
"cmp r14d, 4  | * | mov ecx, r14d ",icc,1
"jl loc_402A72  | * | xor eax, eax ",icc,1
"mov ecx, r14d  | * | and ecx, 0FFFFFFFCh ",icc,1
"xor eax, eax  | * | movsxd rcx, ecx ",icc,1
"and ecx, 0FFFFFFFCh  | * | movdqa xmm0, cs:_L_2il0floatpacket_784 ",icc,2
"movsxd rcx, ecx  | * | movdqa xmm1, [rsp+200h+var_90] ",icc,2
"movdqa xmm0, cs:_L_2il0floatpacket_784  | * | loc_401E5E:  ",icc,1
"movdqa xmm1, [rsp+200h+var_90]  | * | movntdq ds:p[rax*4], xmm0 ",icc,1
"loc_401E5E:   | * | add rax, 4 ",icc,1
"movntdq ds:p[rax*4], xmm0  | * | paddd xmm0, xmm1 ",icc,1
"add rax, 4  | * | cmp rax, rcx ",icc,1
"paddd xmm0, xmm1  | * | jb short loc_401E5E ",icc,1
"cmp rax, rcx  | * | mfence ",icc,1
jb short loc_401E5E  | * | loc_401E77:  ,icc,1
"mfence  | * | mov eax, ecx ",icc,1
"loc_401E77:   | * | cmp eax, r14d ",icc,1
"mov eax, ecx  | * | jnb short loc_401E8F ",icc,1
"cmp eax, r14d  | * | loc_401E7E:  ",icc,1
"jnb short loc_401E8F  | * | mov dword ptr ds:p[rcx*4], eax ",icc,1
loc_401E7E:   | * | inc eax ,icc,1
"mov dword ptr ds:p[rcx*4], eax  | * | inc rcx ",icc,1
"inc eax  | * | cmp eax, r14d ",icc,1
inc rcx  | * | jb short loc_401E7E ,icc,1
"cmp eax, r14d  | * | loc_401E8F:  ",icc,1
"jb short loc_401E7E  | * | test edx, edx ",icc,1
"loc_401E8F:   | * | lea r14d, [rdx+1] ",icc,1
"test edx, edx  | * | jle short loc_401EB3 ",icc,1
"lea r14d, [rdx+1]  | * | cmp edx, 18h ",icc,1
jle short loc_401EB3  | * | jle loc_402A26 ,icc,1
"cmp edx, 18h  | * | movsxd rdx, edx ",icc,1
"jle loc_402A26  | * | mov edi, offset cnt ",icc,1
"movsxd rdx, edx  | * | shl rdx, 2 ",icc,1
"mov edi, offset cnt  | * | xor esi, esi ",icc,1
"shl rdx, 2  | * | call _intel_fast_memset ",icc,1
"xor esi, esi  | * | loc_401EB3:  ",icc,1
"call _intel_fast_memset  | * | mov rcx, cs:qword_22BBA8E0 ",icc,1
"loc_401EB3:   | * | mov rax, 6666666666666667h ",icc,1
"mov rcx, cs:qword_22BBA8E0  | * | sub rcx, cs:v ",icc,1
"mov rax, 6666666666666667h  | * | imul rcx ",icc,1
"sub rcx, cs:v  | * | shr rdx, 3 ",icc,1
"imul rcx  | * | sar rcx, 3Fh ",icc,1
"shr rdx, 3  | * | sub rdx, rcx ",icc,1
"sar rcx, 3Fh  | * | movsxd r15, edx ",icc,1
"sub rdx, rcx  | * | lea rdx, [r15+r15*4-5] ",icc,1
"movsxd r15, edx  | * | shl rdx, 2 ",icc,1
"lea rdx, [r15+r15*4-5]  | * | dec r15 ",icc,1
"shl rdx, 2  | * | jl loc_402019 ",icc,1
"dec r15  | * | mov [rsp+200h+var_160], r14d ",icc,1
"jl loc_402019  | * | mov rbx, rdx ",icc,1
"mov [rsp+200h+var_160], r14d  | * | mov [rsp+200h+var_118], r12d ",icc,1
"mov rbx, rdx  | * | loc_401F01:  ",icc,1
"mov [rsp+200h+var_118], r12d  | * | mov r13, cs:v ",icc,1
"loc_401F01:   | * | movsxd rcx, dword ptr [r13+rbx+0] ",icc,1
"mov r13, cs:v  | * | imul rsi, rcx, 5DC4h ",icc,1
"movsxd rcx, dword ptr [r13+rbx+0]  | * | movsxd rdi, dword ptr [rbx+r13+4] ",icc,1
"imul rsi, rcx, 5DC4h  | * | movsxd r8, dword ptr [rbx+r13+8] ",icc,1
"movsxd rdi, dword ptr [rbx+r13+4]  | * | movsxd r14, dword ptr [rbx+r13+0Ch] ",icc,1
"movsxd r8, dword ptr [rbx+r13+8]  | * | mov eax, [rbx+r13+10h] ",icc,1
"movsxd r14, dword ptr [rbx+r13+0Ch]  | * | movsxd r13, ds:q[rsi+rdi*4] ",icc,1
"mov eax, [rbx+r13+10h]  | * | mov [rsp+200h+var_150], eax ",icc,1
"movsxd r13, ds:q[rsi+rdi*4]  | * | mov r12d, dword ptr ds:p[r13*4] ",icc,1
"mov [rsp+200h+var_150], eax  | * | movsxd r12, r12d ",icc,1
"mov r12d, dword ptr ds:p[r13*4]  | * | cmp r12, r13 ",icc,1
"movsxd r12, r12d  | * | jz short loc_401F6A ",icc,1
"cmp r12, r13  | * | mov edi, r12d  ",icc,1
"jz short loc_401F6A  | * | mov [rsp+200h+var_158], r8 ",icc,1
"mov edi, r12d   | * | call _Z2gpi  ",icc,2
"mov [rsp+200h+var_158], r8  | * | mov r8, [rsp+200h+var_158] ",icc,1
"call _Z2gpi   | * | mov r12d, eax ",icc,2
"mov r8, [rsp+200h+var_158]  | * | mov dword ptr ds:p[r13*4], r12d ",icc,1
"mov r12d, eax  | * | loc_401F6A:  ",icc,1
"mov dword ptr ds:p[r13*4], r12d  | * | imul rax, r8, 5DC4h ",icc,1
"loc_401F6A:   | * | movsxd r14, ds:q[rax+r14*4] ",icc,1
"imul rax, r8, 5DC4h  | * | mov r13d, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:q[rax+r14*4]  | * | movsxd r13, r13d ",icc,1
"mov r13d, dword ptr ds:p[r14*4]  | * | cmp r13, r14 ",icc,1
"movsxd r13, r13d  | * | jz short loc_401F9C ",icc,1
"cmp r13, r14  | * | mov edi, r13d  ",icc,1
jz short loc_401F9C  | * | call _Z2gpi  ,icc,1
"mov edi, r13d   | * | mov r13d, eax ",icc,1
"call _Z2gpi   | * | mov dword ptr ds:p[r14*4], r13d ",icc,1
"mov r13d, eax  | * | loc_401F9C:  ",icc,1
"mov dword ptr ds:p[r14*4], r13d  | * | cmp r12d, r13d ",icc,1
loc_401F9C:   | * | jz short loc_401FF0 ,icc,1
"cmp r12d, r13d  | * | call _rand ",icc,1
"jz short loc_401FF0  | * | test al, 1 ",icc,1
call _rand  | * | jz short loc_401FB7 ,icc,1
"test al, 1  | * | movsxd r12, r12d ",icc,2
"jz short loc_401FB7  | * | mov dword ptr ds:p[r12*4], r13d ",icc,1
"movsxd r12, r12d  | * | jmp short loc_401FC2 ",icc,1
"mov dword ptr ds:p[r12*4], r13d  | * | loc_401FB7:  ",icc,1
"jmp short loc_401FC2  | * | movsxd r13, r13d ",icc,1
"loc_401FB7:   | * | mov dword ptr ds:p[r13*4], r12d ",icc,1
"movsxd r13, r13d  | * | loc_401FC2:  ",icc,1
"mov dword ptr ds:p[r13*4], r12d  | * | mov eax, [rsp+200h+var_150] ",icc,1
"loc_401FC2:   | * | movsxd rax, eax ",icc,1
"mov eax, [rsp+200h+var_150]  | * | mov esi, [rsp+200h+var_160] ",icc,1
"movsxd rax, eax  | * | mov ecx, dword ptr ds:cnt[rax*4] ",icc,1
"mov esi, [rsp+200h+var_160]  | * | inc ecx ",icc,1
"mov ecx, dword ptr ds:cnt[rax*4]  | * | cmp ecx, 1 ",icc,1
"inc ecx  | * | mov dword ptr ds:cnt[rax*4], ecx ",icc,1
"cmp ecx, 1  | * | cmovg esi, eax ",icc,1
"mov dword ptr ds:cnt[rax*4], ecx  | * | mov [rsp+200h+var_160], esi ",icc,1
"cmovg esi, eax  | * | loc_401FF0:  ",icc,1
"mov [rsp+200h+var_160], esi  | * | add rbx, 0FFFFFFFFFFFFFFECh ",icc,1
loc_401FF0:   | * | dec r15 ,icc,1
"add rbx, 0FFFFFFFFFFFFFFECh  | * | jns loc_401F01 ",icc,1
"dec r15  | * | mov r14d, [rsp+200h+var_160] ",icc,1
"jns loc_401F01  | * | mov r13d, 1 ",icc,1
"mov r14d, [rsp+200h+var_160]  | * | mov r12d, [rsp+200h+var_118] ",icc,1
"mov r13d, 1  | * | mov ebx, cs:n ",icc,1
"mov r12d, [rsp+200h+var_118]  | * | loc_402019:  ",icc,1
"mov ebx, cs:n  | * | xor eax, eax ",icc,1
"loc_402019:   | * | lea edi, [rbx+rbx] ",icc,1
"xor eax, eax  | * | mov ecx, 1 ",icc,1
"lea edi, [rbx+rbx]  | * | mov edx, 5DC4h ",icc,1
"mov ecx, 1  | * | cmp edi, 1 ",icc,1
"mov edx, 5DC4h  | * | jle loc_4020D9 ",icc,1
"cmp edi, 1  | * | movsxd rbx, ebx ",icc,1
"jle loc_4020D9  | * | add rbx, rbx ",icc,1
"movsxd rbx, ebx  | * | loc_402037:  ",icc,1
"add rbx, rbx  | * | mov r10d, ds:f[rcx*4] ",icc,1
"loc_402037:   | * | movsxd rdi, r10d ",icc,1
"mov r10d, ds:f[rcx*4]  | * | cmp ds:w[rcx*4], 0 ",icc,1
"movsxd rdi, r10d  | * | jle short loc_402073 ",icc,1
"cmp ds:w[rcx*4], 0  | * | lea r9, [rdx+rdi*4] ",icc,1
"jle short loc_402073  | * | mov edi, ds:f[rcx*4] ",icc,1
"lea r9, [rdx+rdi*4]  | * | add edi, ds:w[rcx*4] ",icc,1
"mov edi, ds:f[rcx*4]  | * | loc_40205E:  ",icc,1
"add edi, ds:w[rcx*4]  | * | inc r10d ",icc,1
"loc_40205E:   | * | mov ds:q[r9], eax ",icc,1
inc r10d  | * | inc eax ,icc,1
"mov ds:q[r9], eax  | * | add r9, 4 ",icc,1
"inc eax  | * | cmp r10d, edi ",icc,1
"add r9, 4  | * | jl short loc_40205E ",icc,1
"cmp r10d, edi  | * | loc_402073:  ",icc,1
jl short loc_40205E  | * | inc rcx ,icc,1
"loc_402073:   | * | add rdx, 5DC4h ",icc,1
"inc rcx  | * | cmp rcx, rbx ",icc,1
"add rdx, 5DC4h  | * | jl short loc_402037 ",icc,1
"cmp rcx, rbx  | * | test eax, eax ",icc,1
jl short loc_402037  | * | jle short loc_4020D9 ,icc,1
"test eax, eax  | * | cmp eax, 4 ",icc,1
jle short loc_4020D9  | * | jl loc_402A1F ,icc,1
"cmp eax, 4  | * | mov ecx, eax ",icc,1
"jl loc_402A1F  | * | xor edx, edx ",icc,1
"mov ecx, eax  | * | and ecx, 0FFFFFFFCh ",icc,1
"xor edx, edx  | * | movsxd rcx, ecx ",icc,1
"movdqa xmm0, cs:_L_2il0floatpacket_784  | * | loc_4020AA:  ",icc,1
"movdqa xmm1, [rsp+200h+var_90]  | * | movntdq ds:p[rdx*4], xmm0 ",icc,1
"loc_4020AA:   | * | add rdx, 4 ",icc,1
"movntdq ds:p[rdx*4], xmm0  | * | paddd xmm0, xmm1 ",icc,1
"add rdx, 4  | * | cmp rdx, rcx ",icc,1
"paddd xmm0, xmm1  | * | jb short loc_4020AA ",icc,1
"cmp rdx, rcx  | * | mfence ",icc,1
jb short loc_4020AA  | * | loc_4020C3:  ,icc,1
"mfence  | * | mov edx, ecx ",icc,1
"loc_4020C3:   | * | cmp edx, eax ",icc,1
"mov edx, ecx  | * | jnb short loc_4020D9 ",icc,1
"cmp edx, eax  | * | loc_4020C9:  ",icc,1
"jnb short loc_4020D9  | * | mov dword ptr ds:p[rcx*4], edx ",icc,1
loc_4020C9:   | * | inc edx ,icc,1
"mov dword ptr ds:p[rcx*4], edx  | * | inc rcx ",icc,1
"inc edx  | * | cmp edx, eax ",icc,1
inc rcx  | * | jb short loc_4020C9 ,icc,1
"cmp edx, eax  | * | loc_4020D9:  ",icc,1
"jb short loc_4020C9  | * | xor ebx, ebx ",icc,1
"loc_4020D9:   | * | mov edi, offset _ZSt4cout@@GLIBCXX_3_4 ",icc,1
"xor ebx, ebx  | * | mov esi, offset aCase  ",icc,1
"mov edi, offset _ZSt4cout@@GLIBCXX_3_4  | * | xor r15d, r15d ",icc,1
"mov esi, offset aCase   | * | call __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc  ",icc,1
"xor r15d, r15d  | * | mov rdi, rax ",icc,1
"call __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc   | * | mov esi, r12d ",icc,1
"mov rdi, rax  | * | call __ZNSolsEi  ",icc,1
"mov esi, r12d  | * | mov rdi, rax ",icc,1
"call __ZNSolsEi   | * | mov esi, offset asc_4060CC  ",icc,1
"mov rdi, rax  | * | call __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc  ",icc,1
"mov esi, offset asc_4060CC   | * | xor edx, edx ",icc,1
"call __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc   | * | xor eax, eax ",icc,1
"xor edx, edx  | * | cmp cs:m, 0 ",icc,1
"xor eax, eax  | * | jle loc_4029D2 ",icc,1
"cmp cs:m, 0  | * | mov [rsp+200h+var_1C8], rax ",icc,1
"jle loc_4029D2  | * | mov [rsp+200h+var_168], edx ",icc,1
"mov [rsp+200h+var_1C8], rax  | * | mov [rsp+200h+var_1E8], r15 ",icc,1
"mov [rsp+200h+var_168], edx  | * | mov [rsp+200h+var_1D0], rbx ",icc,1
"mov [rsp+200h+var_1E8], r15  | * | mov [rsp+200h+var_160], r14d ",icc,1
"mov [rsp+200h+var_1D0], rbx  | * | mov [rsp+200h+var_118], r12d ",icc,1
"mov [rsp+200h+var_160], r14d  | * | loc_40213C:  ",icc,1
"mov [rsp+200h+var_118], r12d  | * | mov rcx, [rsp+200h+var_1C8] ",icc,1
"loc_40213C:   | * | mov rax, 6666666666666667h ",icc,1
"mov rcx, [rsp+200h+var_1C8]  | * | mov rbx, cs:qword_22BBA8F8 ",icc,1
"mov rax, 6666666666666667h  | * | movsxd r12, ds:x[rcx*4] ",icc,1
"mov rbx, cs:qword_22BBA8F8  | * | movsxd r13, ds:y[rcx*4] ",icc,1
"movsxd r12, ds:x[rcx*4]  | * | mov rcx, cs:u ",icc,1
"movsxd r13, ds:y[rcx*4]  | * | sub rbx, rcx ",icc,1
"mov rcx, cs:u  | * | imul rbx ",icc,2
"sub rbx, rcx  | * | shr rdx, 3 ",icc,2
"imul rbx  | * | sar rbx, 3Fh ",icc,1
"shr rdx, 3  | * | sub rdx, rbx ",icc,1
"sar rbx, 3Fh  | * | movsxd rsi, edx ",icc,1
"sub rdx, rbx  | * | cmp rsi, [rsp+200h+var_1D0] ",icc,1
"movsxd rsi, edx  | * | jle loc_4022A9 ",icc,1
"cmp rsi, [rsp+200h+var_1D0]  | * | mov [rsp+200h+var_1E0], r13 ",icc,1
"jle loc_4022A9  | * | mov [rsp+200h+var_1D8], r12 ",icc,1
"mov [rsp+200h+var_1E0], r13  | * | mov r14, [rsp+200h+var_1E8] ",icc,1
"mov [rsp+200h+var_1D8], r12  | * | mov r13, [rsp+200h+var_1D0] ",icc,1
"mov r14, [rsp+200h+var_1E8]  | * | loc_40219C:  ",icc,1
"mov r13, [rsp+200h+var_1D0]  | * | mov eax, [rsp+200h+var_168] ",icc,1
"loc_40219C:   | * | cmp eax, [r14+rcx+10h] ",icc,1
"mov eax, [rsp+200h+var_168]  | * | jl loc_402295 ",icc,1
"cmp eax, [r14+rcx+10h]  | * | movsxd r15, dword ptr [rcx+r14] ",icc,1
"jl loc_402295  | * | movsxd rax, dword ptr [r14+rcx+4] ",icc,1
"movsxd r15, dword ptr [rcx+r14]  | * | movsxd rbx, dword ptr [r14+rcx+8] ",icc,1
"movsxd rax, dword ptr [r14+rcx+4]  | * | movsxd rdx, dword ptr [r14+rcx+0Ch] ",icc,1
"movsxd rbx, dword ptr [r14+rcx+8]  | * | imul rcx, r15, 5DC4h ",icc,1
"movsxd rdx, dword ptr [r14+rcx+0Ch]  | * | movsxd r15, ds:q[rcx+rax*4] ",icc,1
"imul rcx, r15, 5DC4h  | * | mov r12d, dword ptr ds:p[r15*4] ",icc,1
"movsxd r15, ds:q[rcx+rax*4]  | * | movsxd r12, r12d ",icc,1
"mov r12d, dword ptr ds:p[r15*4]  | * | cmp r12, r15 ",icc,1
"movsxd r12, r12d  | * | jz short loc_402203 ",icc,1
"cmp r12, r15  | * | mov edi, r12d  ",icc,1
"jz short loc_402203  | * | mov [rsp+200h+var_170], rdx ",icc,1
"mov [rsp+200h+var_170], rdx  | * | mov rdx, [rsp+200h+var_170] ",icc,1
"mov rdx, [rsp+200h+var_170]  | * | mov dword ptr ds:p[r15*4], r12d ",icc,1
"mov r12d, eax  | * | loc_402203:  ",icc,1
"mov dword ptr ds:p[r15*4], r12d  | * | imul r15, rbx, 5DC4h ",icc,1
"loc_402203:   | * | movsxd r15, ds:q[r15+rdx*4] ",icc,1
"imul r15, rbx, 5DC4h  | * | mov ebx, dword ptr ds:p[r15*4] ",icc,1
"movsxd r15, ds:q[r15+rdx*4]  | * | movsxd rbx, ebx ",icc,1
"mov ebx, dword ptr ds:p[r15*4]  | * | cmp rbx, r15 ",icc,2
"movsxd rbx, ebx  | * | jz short loc_402233 ",icc,1
"cmp rbx, r15  | * | mov edi, ebx  ",icc,2
jz short loc_402233  | * | call _Z2gpi  ,icc,1
"mov edi, ebx   | * | mov ebx, eax ",icc,4
"call _Z2gpi   | * | mov dword ptr ds:p[r15*4], ebx ",icc,2
"mov ebx, eax  | * | loc_402233:  ",icc,1
"mov dword ptr ds:p[r15*4], ebx  | * | cmp r12d, ebx ",icc,1
loc_402233:   | * | jz short loc_402259 ,icc,1
"cmp r12d, ebx  | * | call _rand ",icc,1
"jz short loc_402259  | * | test al, 1 ",icc,1
call _rand  | * | jz short loc_40224E ,icc,1
"jz short loc_40224E  | * | mov dword ptr ds:p[r12*4], ebx ",icc,1
"movsxd r12, r12d  | * | jmp short loc_402259 ",icc,1
"mov dword ptr ds:p[r12*4], ebx  | * | loc_40224E:  ",icc,1
"jmp short loc_402259  | * | movsxd rbx, ebx ",icc,1
"loc_40224E:   | * | mov dword ptr ds:p[rbx*4], r12d ",icc,1
"movsxd rbx, ebx  | * | loc_402259:  ",icc,1
"mov dword ptr ds:p[rbx*4], r12d  | * | mov rbx, cs:qword_22BBA8F8 ",icc,1
"loc_402259:   | * | mov rax, 6666666666666667h ",icc,1
"mov rbx, cs:qword_22BBA8F8  | * | mov rcx, cs:u ",icc,1
"mov rax, 6666666666666667h  | * | sub rbx, rcx ",icc,1
imul rbx  | * | inc r13 ,icc,1
"shr rdx, 3  | * | sar rbx, 3Fh ",icc,1
"inc r13  | * | add r14, 14h ",icc,1
"sar rbx, 3Fh  | * | sub rdx, rbx ",icc,1
"add r14, 14h  | * | movsxd rsi, edx ",icc,1
"sub rdx, rbx  | * | cmp r13, rsi ",icc,1
"movsxd rsi, edx  | * | jl loc_40219C ",icc,1
"cmp r13, rsi  | * | loc_402295:  ",icc,1
"jl loc_40219C  | * | mov [rsp+200h+var_1D0], r13 ",icc,1
"loc_402295:   | * | mov [rsp+200h+var_1E8], r14 ",icc,1
"mov [rsp+200h+var_1D0], r13  | * | mov r13, [rsp+200h+var_1E0] ",icc,1
"mov [rsp+200h+var_1E8], r14  | * | mov r12, [rsp+200h+var_1D8] ",icc,1
"mov r13, [rsp+200h+var_1E0]  | * | loc_4022A9:  ",icc,1
"mov r12, [rsp+200h+var_1D8]  | * | movsxd r14, cs:dword_118CF548 ",icc,1
"loc_4022A9:   | * | xor ecx, ecx ",icc,1
"movsxd r14, cs:dword_118CF548  | * | mov eax, [rsp+200h+var_168] ",icc,1
"xor ecx, ecx  | * | mov edx, 1 ",icc,2
"mov eax, [rsp+200h+var_168]  | * | cmp eax, [rsp+200h+var_160] ",icc,1
"mov edx, 1  | * | mov ebx, dword ptr ds:p[r14*4] ",icc,1
"cmp eax, [rsp+200h+var_160]  | * | movsxd rbx, ebx ",icc,1
"mov ebx, dword ptr ds:p[r14*4]  | * | cmovz ecx, edx ",icc,1
"movsxd rbx, ebx  | * | mov [rsp+200h+var_1C0], ecx ",icc,1
"cmovz ecx, edx  | * | cmp rbx, r14 ",icc,1
"mov [rsp+200h+var_1C0], ecx  | * | jz short loc_4022ED ",icc,1
"cmp rbx, r14  | * | mov edi, ebx  ",icc,2
jz short loc_4022ED  | * | call _Z2gpi  ,icc,1
"call _Z2gpi   | * | mov dword ptr ds:p[r14*4], ebx ",icc,2
"mov ebx, eax  | * | loc_4022ED:  ",icc,1
"mov dword ptr ds:p[r14*4], ebx  | * | imul r12, 5DC4h ",icc,1
"loc_4022ED:   | * | movsxd r14, ds:q[r12+r13*4] ",icc,1
"imul r12, 5DC4h  | * | mov eax, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:q[r12+r13*4]  | * | mov [rsp+200h+var_188], eax ",icc,1
"mov eax, dword ptr ds:p[r14*4]  | * | movsxd rax, eax ",icc,4
"mov [rsp+200h+var_188], eax  | * | cmp rax, r14 ",icc,1
"movsxd rax, eax  | * | jz short loc_402325 ",icc,1
"cmp rax, r14  | * | mov edi, [rsp+200h+var_188]  ",icc,1
jz short loc_402325  | * | call _Z2gpi  ,icc,1
"mov edi, [rsp+200h+var_188]   | * | mov [rsp+200h+var_188], eax ",icc,1
"call _Z2gpi   | * | mov dword ptr ds:p[r14*4], eax ",icc,6
"mov [rsp+200h+var_188], eax  | * | loc_402325:  ",icc,1
"mov dword ptr ds:p[r14*4], eax  | * | movsxd r14, cs:n ",icc,3
"loc_402325:   | * | movsxd r14, ds:dword_118CF544[r14*4] ",icc,1
"movsxd r14, cs:n  | * | mov r15d, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:dword_118CF544[r14*4]  | * | movsxd r15, r15d ",icc,1
"mov r15d, dword ptr ds:p[r14*4]  | * | cmp r15, r14 ",icc,1
"movsxd r15, r15d  | * | jz short loc_402357 ",icc,1
"cmp r15, r14  | * | mov edi, r15d  ",icc,1
jz short loc_402357  | * | call _Z2gpi  ,icc,1
"mov edi, r15d   | * | mov r15d, eax ",icc,1
"call _Z2gpi   | * | mov dword ptr ds:p[r14*4], r15d ",icc,1
"mov r15d, eax  | * | loc_402357:  ",icc,1
"mov dword ptr ds:p[r14*4], r15d  | * | movsxd r14, ds:q[r12+r13*4] ",icc,1
"loc_402357:   | * | mov eax, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:q[r12+r13*4]  | * | mov [rsp+200h+var_1A0], eax ",icc,1
"mov [rsp+200h+var_1A0], eax  | * | cmp rax, r14 ",icc,1
"movsxd rax, eax  | * | jz short loc_402388 ",icc,1
"cmp rax, r14  | * | mov edi, [rsp+200h+var_1A0]  ",icc,1
jz short loc_402388  | * | call _Z2gpi  ,icc,1
"mov edi, [rsp+200h+var_1A0]   | * | mov [rsp+200h+var_1A0], eax ",icc,1
"mov [rsp+200h+var_1A0], eax  | * | loc_402388:  ",icc,1
"loc_402388:   | * | imul rax, r14, 5DC4h ",icc,1
"movsxd r14, cs:n  | * | movsxd r14, ds:dword_118C9784[rax] ",icc,1
"imul rax, r14, 5DC4h  | * | mov edx, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:dword_118C9784[rax]  | * | mov [rsp+200h+var_178], edx ",icc,1
"mov edx, dword ptr ds:p[r14*4]  | * | movsxd rdx, edx ",icc,2
"mov [rsp+200h+var_178], edx  | * | cmp rdx, r14 ",icc,1
"movsxd rdx, edx  | * | jz short loc_4023CF ",icc,1
"cmp rdx, r14  | * | mov edi, [rsp+200h+var_178]  ",icc,1
jz short loc_4023CF  | * | call _Z2gpi  ,icc,1
"mov edi, [rsp+200h+var_178]   | * | mov [rsp+200h+var_178], eax ",icc,1
"mov [rsp+200h+var_178], eax  | * | loc_4023CF:  ",icc,1
"mov dword ptr ds:p[r14*4], eax  | * | movsxd r14, ds:q[r12+r13*4] ",icc,2
"loc_4023CF:   | * | mov eax, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:q[r12+r13*4]  | * | mov [rsp+200h+var_190], eax ",icc,1
"mov [rsp+200h+var_190], eax  | * | cmp rax, r14 ",icc,1
"movsxd rax, eax  | * | jz short loc_402400 ",icc,1
"cmp rax, r14  | * | mov edi, [rsp+200h+var_190]  ",icc,1
jz short loc_402400  | * | call _Z2gpi  ,icc,1
"mov edi, [rsp+200h+var_190]   | * | mov [rsp+200h+var_190], eax ",icc,1
"mov [rsp+200h+var_190], eax  | * | loc_402400:  ",icc,1
"loc_402400:   | * | imul rax, r14, 5DCCh ",icc,1
"movsxd r14, cs:n  | * | movsxd r14, ds:dword_118C977C[rax] ",icc,1
"imul rax, r14, 5DCCh  | * | mov edx, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:dword_118C977C[rax]  | * | mov [rsp+200h+var_180], edx ",icc,1
"mov [rsp+200h+var_180], edx  | * | cmp rdx, r14 ",icc,1
"movsxd rdx, edx  | * | jz short loc_402447 ",icc,1
"cmp rdx, r14  | * | mov edi, [rsp+200h+var_180]  ",icc,1
jz short loc_402447  | * | call _Z2gpi  ,icc,1
"mov edi, [rsp+200h+var_180]   | * | mov [rsp+200h+var_180], eax ",icc,1
"mov [rsp+200h+var_180], eax  | * | loc_402447:  ",icc,1
"loc_402447:   | * | mov eax, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:q[r12+r13*4]  | * | mov [rsp+200h+var_198], eax ",icc,1
"mov [rsp+200h+var_198], eax  | * | cmp rax, r14 ",icc,1
"movsxd rax, eax  | * | jz short loc_402478 ",icc,1
"cmp rax, r14  | * | mov edi, [rsp+200h+var_198]  ",icc,1
jz short loc_402478  | * | call _Z2gpi  ,icc,1
"mov edi, [rsp+200h+var_198]   | * | mov [rsp+200h+var_198], eax ",icc,1
"mov [rsp+200h+var_198], eax  | * | loc_402478:  ",icc,1
"mov dword ptr ds:p[r14*4], eax  | * | movsxd rax, cs:n ",icc,1
"loc_402478:   | * | imul rdx, rax, 0BB8Ch ",icc,1
"movsxd rax, cs:n  | * | movsxd rdx, ds:dword_118C39BC[rdx] ",icc,1
"imul rdx, rax, 0BB8Ch  | * | mov r14d, dword ptr ds:p[rdx*4] ",icc,1
"movsxd rdx, ds:dword_118C39BC[rdx]  | * | movsxd r14, r14d ",icc,1
"mov r14d, dword ptr ds:p[rdx*4]  | * | cmp r14, rdx ",icc,1
"movsxd r14, r14d  | * | jz short loc_4024B8 ",icc,1
"cmp r14, rdx  | * | mov edi, r14d  ",icc,1
"jz short loc_4024B8  | * | mov [rsp+200h+var_200], rdx ",icc,1
"mov edi, r14d   | * | call _Z2gpi  ",icc,1
"mov [rsp+200h+var_200], rdx  | * | mov rdx, [rsp+200h+var_200] ",icc,1
"call _Z2gpi   | * | mov r14d, eax ",icc,1
"mov rdx, [rsp+200h+var_200]  | * | mov dword ptr ds:p[rdx*4], r14d ",icc,1
"mov r14d, eax  | * | loc_4024B8:  ",icc,1
"mov dword ptr ds:p[rdx*4], r14d  | * | movsxd rax, ds:q[r12+r13*4] ",icc,1
"loc_4024B8:   | * | mov [rsp+200h+var_1A8], rax ",icc,1
"movsxd rax, ds:q[r12+r13*4]  | * | mov esi, dword ptr ds:p[rax*4] ",icc,1
"mov [rsp+200h+var_1A8], rax  | * | movsxd rsi, esi ",icc,1
"mov esi, dword ptr ds:p[rax*4]  | * | cmp rsi, rax ",icc,1
"movsxd rsi, esi  | * | jz short loc_4024E9 ",icc,1
"cmp rsi, rax  | * | mov edi, esi  ",icc,1
jz short loc_4024E9  | * | call _Z2gpi  ,icc,1
"mov edi, esi   | * | mov esi, eax ",icc,1
"call _Z2gpi   | * | mov rax, [rsp+200h+var_1A8] ",icc,1
"mov esi, eax  | * | mov dword ptr ds:p[rax*4], esi ",icc,1
"mov rax, [rsp+200h+var_1A8]  | * | loc_4024E9:  ",icc,1
"mov dword ptr ds:p[rax*4], esi  | * | movsxd rdx, cs:n ",icc,1
"loc_4024E9:   | * | imul rax, rdx, 0BB90h ",icc,1
"movsxd rdx, cs:n  | * | movsxd rcx, ds:dword_118C39B8[rax] ",icc,1
"imul rax, rdx, 0BB90h  | * | mov [rsp+200h+var_1B0], rcx ",icc,1
"movsxd rcx, ds:dword_118C39B8[rax]  | * | mov edx, dword ptr ds:p[rcx*4] ",icc,1
"mov [rsp+200h+var_1B0], rcx  | * | movsxd rdx, edx ",icc,1
"mov edx, dword ptr ds:p[rcx*4]  | * | cmp rdx, rcx ",icc,1
"movsxd rdx, edx  | * | jz short loc_40252F ",icc,1
"cmp rdx, rcx  | * | mov edi, edx  ",icc,1
"jz short loc_40252F  | * | mov [rsp+200h+var_1F8], esi ",icc,1
"mov edi, edx   | * | call _Z2gpi  ",icc,1
"mov [rsp+200h+var_1F8], esi  | * | mov esi, [rsp+200h+var_1F8] ",icc,2
"call _Z2gpi   | * | mov edx, eax ",icc,1
"mov esi, [rsp+200h+var_1F8]  | * | mov rax, [rsp+200h+var_1B0] ",icc,1
"mov edx, eax  | * | mov dword ptr ds:p[rax*4], edx ",icc,1
"mov rax, [rsp+200h+var_1B0]  | * | loc_40252F:  ",icc,1
"mov dword ptr ds:p[rax*4], edx  | * | movsxd rax, ds:q[r12+r13*4] ",icc,1
"loc_40252F:   | * | mov [rsp+200h+var_1B8], rax ",icc,1
"movsxd rax, ds:q[r12+r13*4]  | * | mov edi, dword ptr ds:p[rax*4] ",icc,1
"mov [rsp+200h+var_1B8], rax  | * | movsxd rdi, edi  ",icc,1
"mov edi, dword ptr ds:p[rax*4]  | * | cmp rdi, rax ",icc,1
"movsxd rdi, edi   | * | jz short loc_40256E ",icc,1
"cmp rdi, rax  | * | mov [rsp+200h+var_1F0], edx ",icc,1
"jz short loc_40256E  | * | mov [rsp+200h+var_1F8], esi ",icc,1
"mov [rsp+200h+var_1F0], edx  | * | call _Z2gpi  ",icc,1
"call _Z2gpi   | * | mov edi, eax ",icc,5
"mov esi, [rsp+200h+var_1F8]  | * | mov edx, [rsp+200h+var_1F0] ",icc,1
"mov edi, eax  | * | mov rax, [rsp+200h+var_1B8] ",icc,1
"mov edx, [rsp+200h+var_1F0]  | * | mov dword ptr ds:p[rax*4], edi ",icc,1
"mov rax, [rsp+200h+var_1B8]  | * | loc_40256E:  ",icc,1
"mov dword ptr ds:p[rax*4], edi  | * | xor ecx, ecx ",icc,1
"loc_40256E:   | * | mov eax, 1 ",icc,1
"xor ecx, ecx  | * | cmp ebx, [rsp+200h+var_188] ",icc,1
"mov eax, 1  | * | cmovz ecx, eax ",icc,1
"cmp ebx, [rsp+200h+var_188]  | * | xor ebx, ebx ",icc,1
"cmovz ecx, eax  | * | xor r9d, r9d ",icc,1
"xor ebx, ebx  | * | cmp r15d, [rsp+200h+var_1A0] ",icc,1
"xor r9d, r9d  | * | mov r8d, [rsp+200h+var_178] ",icc,1
"cmp r15d, [rsp+200h+var_1A0]  | * | cmovz ebx, eax ",icc,1
"mov r8d, [rsp+200h+var_178]  | * | xor r11d, r11d ",icc,1
"cmovz ebx, eax  | * | pxor xmm1, xmm1 ",icc,1
"xor r11d, r11d  | * | cmp r8d, [rsp+200h+var_190] ",icc,1
"pxor xmm1, xmm1  | * | pxor xmm0, xmm0 ",icc,1
"cmp r8d, [rsp+200h+var_190]  | * | mov r10d, [rsp+200h+var_180] ",icc,1
"pxor xmm0, xmm0  | * | cmovz r9d, eax ",icc,1
"mov r10d, [rsp+200h+var_180]  | * | add ecx, ebx ",icc,1
"cmovz r9d, eax  | * | cmp r10d, [rsp+200h+var_198] ",icc,1
"add ecx, ebx  | * | movaps cs:cur, xmm0 ",icc,1
"cmp r10d, [rsp+200h+var_198]  | * | cmovz r11d, eax ",icc,1
"movaps cs:cur, xmm0  | * | cmp r14d, esi ",icc,1
"cmovz r11d, eax  | * | mov esi, 0 ",icc,1
"cmp r14d, esi  | * | cmovz esi, eax ",icc,1
"mov esi, 0  | * | add ecx, r9d ",icc,1
"cmovz esi, eax  | * | cmp edx, edi ",icc,1
"add ecx, r9d  | * | mov edx, 0 ",icc,1
"cmp edx, edi  | * | movq cs:qword_22BBA8D0, xmm1 ",icc,1
"mov edx, 0  | * | cmovz edx, eax ",icc,1
"movq cs:qword_22BBA8D0, xmm1  | * | add ecx, r11d ",icc,1
"cmovz edx, eax  | * | add ecx, esi ",icc,1
"add ecx, r11d  | * | add ecx, edx ",icc,1
"add ecx, esi  | * | cmp ecx, 2 ",icc,1
"add ecx, edx  | * | mov ecx, 0 ",icc,1
"cmp ecx, 2  | * | cmovge ecx, eax ",icc,1
"mov ecx, 0  | * | mov r14d, 1 ",icc,1
"cmovge ecx, eax  | * | mov eax, dword ptr cs:qword_22BBA8D0+4 ",icc,1
"mov r14d, 1  | * | cmp cs:n, 2 ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | jle loc_402968 ",icc,1
"cmp cs:n, 2  | * | mov edx, 2 ",icc,1
"jle loc_402968  | * | mov [rsp+200h+var_C0], edx ",icc,1
"mov edx, 2  | * | mov [rsp+200h+var_140], ecx ",icc,1
"mov [rsp+200h+var_C0], edx  | * | loc_40261D:  ",icc,1
"mov [rsp+200h+var_140], ecx  | * | movsxd r14, r14d ",icc,1
"loc_40261D:   | * | movsxd rbx, ds:dword_118CF548[r14*4] ",icc,1
"movsxd r14, r14d  | * | mov edx, dword ptr ds:p[rbx*4] ",icc,1
"movsxd rbx, ds:dword_118CF548[r14*4]  | * | movsxd rdi, edx ",icc,1
"mov edx, dword ptr ds:p[rbx*4]  | * | cmp rdi, rbx ",icc,2
"movsxd rdi, edx  | * | jz short loc_40264D ",icc,1
"cmp rdi, rbx  | * | mov edi, edx  ",icc,2
jz short loc_40264D  | * | call _Z2gpi  ,icc,1
"mov edi, edx   | * | mov edx, eax ",icc,4
"call _Z2gpi   | * | mov dword ptr ds:p[rbx*4], edx ",icc,2
"mov edx, eax  | * | mov eax, dword ptr cs:qword_22BBA8D0+4 ",icc,4
"mov dword ptr ds:p[rbx*4], edx  | * | loc_40264D:  ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | movsxd rbx, ds:q[r12+r13*4] ",icc,2
"loc_40264D:   | * | mov edi, dword ptr ds:p[rbx*4] ",icc,1
"movsxd rbx, ds:q[r12+r13*4]  | * | movsxd rdi, edi  ",icc,2
"mov edi, dword ptr ds:p[rbx*4]  | * | cmp rdi, rbx ",icc,2
"movsxd rdi, edi   | * | jz short loc_402686 ",icc,1
"cmp rdi, rbx  | * | mov [rsp+200h+var_E0], edx ",icc,1
jz short loc_402686  | * | call _Z2gpi  ,icc,1
"mov [rsp+200h+var_E0], edx  | * | mov edx, [rsp+200h+var_E0] ",icc,1
"mov edx, [rsp+200h+var_E0]  | * | mov dword ptr ds:p[rbx*4], edi ",icc,1
"mov edi, eax  | * | mov eax, dword ptr cs:qword_22BBA8D0+4 ",icc,6
"mov dword ptr ds:p[rbx*4], edi  | * | loc_402686:  ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | xor r15d, r15d ",icc,1
"loc_402686:   | * | mov ebx, 1 ",icc,1
"xor r15d, r15d  | * | cmp edx, edi ",icc,1
"mov ebx, 1  | * | cmovz r15d, ebx ",icc,1
"cmp edx, edi  | * | imul rbx, r14, 5DC4h ",icc,1
"cmovz r15d, ebx  | * | or dword ptr cs:cur, r15d ",icc,1
"imul rbx, r14, 5DC4h  | * | movsxd r15, ds:dword_118CF548[rbx] ",icc,1
"or dword ptr cs:cur, r15d  | * | mov edx, dword ptr ds:p[r15*4] ",icc,1
"movsxd r15, ds:dword_118CF548[rbx]  | * | movsxd rdi, edx ",icc,1
"mov edx, dword ptr ds:p[r15*4]  | * | cmp rdi, r15 ",icc,2
"movsxd rdi, edx  | * | jz short loc_4026D0 ",icc,1
"cmp rdi, r15  | * | mov edi, edx  ",icc,2
jz short loc_4026D0  | * | call _Z2gpi  ,icc,1
"call _Z2gpi   | * | mov dword ptr ds:p[r15*4], edx ",icc,2
"mov dword ptr ds:p[r15*4], edx  | * | loc_4026D0:  ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | movsxd r15, ds:q[r12+r13*4] ",icc,3
"loc_4026D0:   | * | mov edi, dword ptr ds:p[r15*4] ",icc,1
"movsxd r15, ds:q[r12+r13*4]  | * | movsxd rdi, edi  ",icc,3
"mov edi, dword ptr ds:p[r15*4]  | * | cmp rdi, r15 ",icc,3
"movsxd rdi, edi   | * | jz short loc_40270B ",icc,1
"cmp rdi, r15  | * | mov [rsp+200h+var_D8], edx ",icc,1
jz short loc_40270B  | * | call _Z2gpi  ,icc,1
"mov [rsp+200h+var_D8], edx  | * | mov edx, [rsp+200h+var_D8] ",icc,1
"mov edx, [rsp+200h+var_D8]  | * | mov dword ptr ds:p[r15*4], edi ",icc,1
"mov dword ptr ds:p[r15*4], edi  | * | loc_40270B:  ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | movsxd rsi, cs:n ",icc,2
"loc_40270B:   | * | lea rcx, ds:0[r14*4] ",icc,1
"movsxd rsi, cs:n  | * | mov r15d, 1 ",icc,1
"lea rcx, ds:0[r14*4]  | * | cmp edx, edi ",icc,1
"mov r15d, 1  | * | mov edx, 0 ",icc,2
"cmp edx, edi  | * | cmovz edx, r15d ",icc,2
"mov edx, 0  | * | lea rdi, [rcx+rsi*4] ",icc,1
"cmovz edx, r15d  | * | movsxd r15, ds:dword_118CF544[rbx+rdi] ",icc,1
"lea rdi, [rcx+rsi*4]  | * | or dword ptr cs:cur+4, edx ",icc,1
"movsxd r15, ds:dword_118CF544[rbx+rdi]  | * | mov edx, dword ptr ds:p[r15*4] ",icc,1
"or dword ptr cs:cur+4, edx  | * | movsxd rdi, edx ",icc,1
"movsxd rdi, edx  | * | jz short loc_402764 ",icc,1
jz short loc_402764  | * | call _Z2gpi  ,icc,1
"mov dword ptr ds:p[r15*4], edx  | * | loc_402764:  ",icc,1
"loc_402764:   | * | mov edi, dword ptr ds:p[r15*4] ",icc,1
"movsxd rdi, edi   | * | jz short loc_40279F ",icc,1
"cmp rdi, r15  | * | mov [rsp+200h+var_D0], edx ",icc,1
jz short loc_40279F  | * | call _Z2gpi  ,icc,1
"mov [rsp+200h+var_D0], edx  | * | mov edx, [rsp+200h+var_D0] ",icc,1
"mov edx, [rsp+200h+var_D0]  | * | mov dword ptr ds:p[r15*4], edi ",icc,1
"mov dword ptr ds:p[r15*4], edi  | * | loc_40279F:  ",icc,1
"loc_40279F:   | * | xor ecx, ecx ",icc,1
"movsxd rsi, cs:n  | * | cmp edx, edi ",icc,1
"cmp edx, edi  | * | cmovz ecx, edx ",icc,1
"mov edx, 1  | * | imul rdi, rsi, 5DC4h ",icc,1
"cmovz ecx, edx  | * | or dword ptr cs:cur+8, ecx ",icc,1
"imul rdi, rsi, 5DC4h  | * | lea r8, [rdi+r14*4] ",icc,1
"or dword ptr cs:cur+8, ecx  | * | movsxd rbx, ds:dword_118C9784[rbx+r8] ",icc,1
"lea r8, [rdi+r14*4]  | * | mov edx, dword ptr ds:p[rbx*4] ",icc,1
"movsxd rbx, ds:dword_118C9784[rbx+r8]  | * | movsxd rdi, edx ",icc,1
"movsxd rdi, edx  | * | jz short loc_4027F0 ",icc,1
jz short loc_4027F0  | * | call _Z2gpi  ,icc,1
"mov dword ptr ds:p[rbx*4], edx  | * | loc_4027F0:  ",icc,1
"loc_4027F0:   | * | mov edi, dword ptr ds:p[rbx*4] ",icc,1
"movsxd rdi, edi   | * | jz short loc_402829 ",icc,1
"cmp rdi, rbx  | * | mov [rsp+200h+var_C8], edx ",icc,1
jz short loc_402829  | * | call _Z2gpi  ,icc,1
"mov [rsp+200h+var_C8], edx  | * | mov edx, [rsp+200h+var_C8] ",icc,1
"mov edx, [rsp+200h+var_C8]  | * | mov dword ptr ds:p[rbx*4], edi ",icc,1
"mov dword ptr ds:p[rbx*4], edi  | * | loc_402829:  ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | movsxd rbx, cs:n ",icc,1
"loc_402829:   | * | mov r15d, 1 ",icc,1
"movsxd rbx, cs:n  | * | cmp edx, edi ",icc,1
"mov edx, 0  | * | imul rcx, rbx, 0BB88h ",icc,1
"cmovz edx, r15d  | * | add rbx, r14 ",icc,1
"imul rcx, rbx, 0BB88h  | * | or dword ptr cs:cur+0Ch, edx ",icc,1
"add rbx, r14  | * | movsxd r15, ds:dword_118C39BC[rcx+rbx*4] ",icc,1
"or dword ptr cs:cur+0Ch, edx  | * | mov ebx, dword ptr ds:p[r15*4] ",icc,1
"movsxd r15, ds:dword_118C39BC[rcx+rbx*4]  | * | movsxd rbx, ebx ",icc,1
"movsxd rbx, ebx  | * | jz short loc_402880 ",icc,1
jz short loc_402880  | * | call _Z2gpi  ,icc,1
"mov ebx, eax  | * | mov eax, dword ptr cs:qword_22BBA8D0+4 ",icc,2
"mov dword ptr ds:p[r15*4], ebx  | * | loc_402880:  ",icc,1
"loc_402880:   | * | mov edi, dword ptr ds:p[r15*4] ",icc,1
"movsxd rdi, edi   | * | jz short loc_4028AD ",icc,1
"cmp rdi, r15  | * | call _Z2gpi  ",icc,1
"jz short loc_4028AD  | * | mov edi, eax ",icc,1
"call _Z2gpi   | * | mov dword ptr ds:p[r15*4], edi ",icc,1
"mov dword ptr ds:p[r15*4], edi  | * | loc_4028AD:  ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | xor ecx, ecx ",icc,1
"loc_4028AD:   | * | mov edx, 1 ",icc,1
"xor ecx, ecx  | * | cmp ebx, edi ",icc,1
"mov edx, 1  | * | movsxd rbx, cs:n ",icc,1
"cmp ebx, edi  | * | cmovz ecx, edx ",icc,1
"movsxd rbx, cs:n  | * | add r14, rbx ",icc,1
"cmovz ecx, edx  | * | imul r14, 5DC4h ",icc,1
"add r14, rbx  | * | movsxd r14, ds:dword_118C977C[r14+rbx*8] ",icc,1
"imul r14, 5DC4h  | * | or dword ptr cs:qword_22BBA8D0, ecx ",icc,1
"movsxd r14, ds:dword_118C977C[r14+rbx*8]  | * | mov ebx, dword ptr ds:p[r14*4] ",icc,1
"or dword ptr cs:qword_22BBA8D0, ecx  | * | movsxd rbx, ebx ",icc,1
"mov ebx, dword ptr ds:p[r14*4]  | * | cmp rbx, r14 ",icc,1
"movsxd rbx, ebx  | * | jz short loc_4028FF ",icc,1
jz short loc_4028FF  | * | call _Z2gpi  ,icc,1
"mov dword ptr ds:p[r14*4], ebx  | * | loc_4028FF:  ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | movsxd r14, ds:q[r12+r13*4] ",icc,1
"loc_4028FF:   | * | mov edi, dword ptr ds:p[r14*4] ",icc,1
"movsxd r14, ds:q[r12+r13*4]  | * | movsxd rdi, edi  ",icc,1
"mov edi, dword ptr ds:p[r14*4]  | * | cmp rdi, r14 ",icc,1
"movsxd rdi, edi   | * | jz short loc_40292C ",icc,1
"cmp rdi, r14  | * | call _Z2gpi  ",icc,1
"jz short loc_40292C  | * | mov edi, eax ",icc,1
"call _Z2gpi   | * | mov dword ptr ds:p[r14*4], edi ",icc,1
"mov dword ptr ds:p[r14*4], edi  | * | loc_40292C:  ",icc,1
"mov eax, dword ptr cs:qword_22BBA8D0+4  | * | xor edx, edx ",icc,1
"loc_40292C:   | * | mov r14d, 1 ",icc,1
"xor edx, edx  | * | cmp ebx, edi ",icc,1
"mov r14d, 1  | * | mov ecx, [rsp+200h+var_C0] ",icc,1
"cmp ebx, edi  | * | cmovz edx, r14d ",icc,1
"mov ecx, [rsp+200h+var_C0]  | * | mov r14d, ecx ",icc,1
"cmovz edx, r14d  | * | inc ecx ",icc,1
"mov r14d, ecx  | * | or eax, edx ",icc,1
"inc ecx  | * | mov dword ptr cs:qword_22BBA8D0+4, eax ",icc,1
"or eax, edx  | * | mov [rsp+200h+var_C0], ecx ",icc,1
"mov dword ptr cs:qword_22BBA8D0+4, eax  | * | cmp ecx, cs:n ",icc,1
"mov [rsp+200h+var_C0], ecx  | * | jl loc_40261D ",icc,1
"cmp ecx, cs:n  | * | mov ecx, [rsp+200h+var_140] ",icc,1
jl loc_40261D  | * | loc_402968:  ,icc,1
"mov ecx, [rsp+200h+var_140]  | * | mov edx, dword ptr cs:cur ",icc,1
"loc_402968:   | * | mov ebx, 1 ",icc,1
"mov edx, dword ptr cs:cur  | * | add edx, dword ptr cs:cur+4 ",icc,1
"mov ebx, 1  | * | mov esi, ecx ",icc,1
"add edx, dword ptr cs:cur+4  | * | add edx, dword ptr cs:cur+8 ",icc,1
"mov esi, ecx  | * | add edx, dword ptr cs:cur+0Ch ",icc,1
"add edx, dword ptr cs:cur+8  | * | add edx, dword ptr cs:qword_22BBA8D0 ",icc,1
"add edx, dword ptr cs:cur+0Ch  | * | add edx, eax ",icc,1
"add edx, dword ptr cs:qword_22BBA8D0  | * | xor eax, eax ",icc,1
"add edx, eax  | * | cmp edx, 3 ",icc,1
"xor eax, eax  | * | cmovge eax, ebx ",icc,1
"cmp edx, 3  | * | or esi, eax ",icc,1
"cmovge eax, ebx  | * | or esi, [rsp+200h+var_1C0] ",icc,1
"or esi, eax  | * | jnz loc_402A79 ",icc,1
"or esi, [rsp+200h+var_1C0]  | * | mov eax, [rsp+200h+var_168] ",icc,1
jnz loc_402A79  | * | inc eax ,icc,1
"mov eax, [rsp+200h+var_168]  | * | inc [rsp+200h+var_1C8] ",icc,1
"inc eax  | * | mov [rsp+200h+var_168], eax ",icc,1
"inc [rsp+200h+var_1C8]  | * | cmp eax, cs:m ",icc,1
"mov [rsp+200h+var_168], eax  | * | jl loc_40213C ",icc,1
"cmp eax, cs:m  | * | mov r12d, [rsp+200h+var_118] ",icc,1
"jl loc_40213C  | * | mov r13d, 1 ",icc,1
"mov r12d, [rsp+200h+var_118]  | * | loc_4029D2:  ",icc,1
"mov r13d, 1  | * | mov edi, offset aNone  ",icc,1
"loc_4029D2:   | * | xor eax, eax ",icc,1
"mov edi, offset aNone   | * | call _printf ",icc,1
"xor eax, eax  | * | loc_4029DE:  ",icc,1
"call _printf  | * | mov edi, offset _ZSt4cout@@GLIBCXX_3_4 ",icc,1
"loc_4029DE:   | * | mov esi, offset __ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_  ",icc,1
"mov edi, offset _ZSt4cout@@GLIBCXX_3_4  | * | call __ZNSolsEPFRSoS_E  ",icc,1
"mov esi, offset __ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_   | * | inc r12d ",icc,1
"call __ZNSolsEPFRSoS_E   | * | cmp r12d, [rsp+200h+var_148] ",icc,1
inc r12d  | * | jle loc_4011AB ,icc,1
"cmp r12d, [rsp+200h+var_148]  | * | loc_4029FE:  ",icc,1
"jle loc_4011AB  | * | xor eax, eax ",icc,1
"loc_4029FE:   | * | add rsp, 1D8h ",icc,1
"xor eax, eax  | * | pop rbx ",icc,1
"add rsp, 1D8h  | * | pop r15 ",icc,1
pop rbx  | * | pop r14 ,icc,6
pop r15  | * | pop r13 ,icc,6
pop r14  | * | pop r12 ,icc,5
"pop r13  | * | mov rsp, rbp ",icc,1
pop r12  | * | pop rbp ,icc,1
"mov rsp, rbp  | * | retn ",icc,4
pop rbp  | * | loc_402A15:  ,icc,1
"retn  | * | mov edi, offset aVectorMInsertA  ",icc,1
loc_402A15:   | * | call __ZSt20__throw_length_errorPKc  ,icc,1
"mov edi, offset aVectorMInsertA   | * | loc_402A1F:  ",icc,1
"call __ZSt20__throw_length_errorPKc   | * | xor ecx, ecx ",icc,1
loc_402A1F:   | * | jmp loc_4020C3 ,icc,1
"xor ecx, ecx  | * | loc_402A26:  ",icc,1
"jmp loc_4020C3  | * | movsxd rcx, edx ",icc,1
"loc_402A26:   | * | cmp rcx, 4 ",icc,1
"movsxd rcx, edx  | * | jl short loc_402A6E ",icc,1
"cmp rcx, 4  | * | and edx, 0FFFFFFFCh ",icc,1
"jl short loc_402A6E  | * | xor eax, eax ",icc,1
"and edx, 0FFFFFFFCh  | * | movsxd rdx, edx ",icc,1
"xor eax, eax  | * | loc_402A37:  ",icc,1
"movsxd rdx, edx  | * | pxor xmm0, xmm0 ",icc,1
"loc_402A37:   | * | movdqa ds:cnt[rax*4], xmm0 ",icc,1
"pxor xmm0, xmm0  | * | add rax, 4 ",icc,1
"movdqa ds:cnt[rax*4], xmm0  | * | cmp rax, rdx ",icc,1
"add rax, 4  | * | jb short loc_402A37 ",icc,1
"cmp rax, rdx  | * | loc_402A4D:  ",icc,1
"jb short loc_402A37  | * | cmp rdx, rcx ",icc,1
loc_402A4D:   | * | jnb loc_401EB3 ,icc,1
"cmp rdx, rcx  | * | loc_402A56:  ",icc,1
"jnb loc_401EB3  | * | mov dword ptr ds:cnt[rdx*4], 0 ",icc,1
loc_402A56:   | * | inc rdx ,icc,1
"mov dword ptr ds:cnt[rdx*4], 0  | * | cmp rdx, rcx ",icc,1
inc rdx  | * | jb short loc_402A56 ,icc,1
"cmp rdx, rcx  | * | jmp loc_401EB3 ",icc,1
jb short loc_402A56  | * | loc_402A6E:  ,icc,1
"jmp loc_401EB3  | * | xor edx, edx ",icc,1
loc_402A6E:   | * | jmp short loc_402A4D ,icc,1
"xor edx, edx  | * | loc_402A72:  ",icc,1
"jmp short loc_402A4D  | * | xor ecx, ecx ",icc,1
loc_402A72:   | * | jmp loc_401E77 ,icc,1
"xor ecx, ecx  | * | loc_402A79:  ",icc,1
"jmp loc_401E77  | * | add ecx, ecx ",icc,1
"loc_402A79:   | * | mov edi, offset aSInMoveD  ",icc,1
"add ecx, ecx  | * | mov ebx, [rsp+200h+var_1C0] ",icc,1
"mov edi, offset aSInMoveD   | * | mov r13d, 1 ",icc,1
"mov ebx, [rsp+200h+var_1C0]  | * | mov edx, [rsp+200h+var_168] ",icc,1
"mov r13d, 1  | * | inc edx ",icc,1
"mov edx, [rsp+200h+var_168]  | * | lea ecx, [rcx+rbx*4] ",icc,1
"inc edx  | * | add rcx, rax ",icc,1
"lea ecx, [rcx+rbx*4]  | * | xor eax, eax ",icc,1
"add rcx, rax  | * | mov r12d, [rsp+200h+var_118] ",icc,1
"xor eax, eax  | * | mov rsi, ds:res[rcx*8] ",icc,1
"mov r12d, [rsp+200h+var_118]  | * | call _printf ",icc,1
"mov rsi, ds:res[rcx*8]  | * | jmp loc_4029DE ",icc,1
call _printf  | * | loc_402AB5:  ,icc,1
"jmp loc_4029DE  | * | test ebx, ebx ",icc,1
loc_402AB5:   | * | js loc_401BF9 ,icc,1
js loc_401BF9  | * | jge loc_401B8E ,icc,1
"test ecx, ecx  | * | jmp loc_401BF9 ",icc,1
jge loc_401B8E  | * | loc_402ACA:  ,icc,1
"jmp loc_401BF9  | * | movsxd rcx, r8d ",icc,1
"loc_402ACA:   | * | add rcx, rcx ",icc,1
"movsxd rcx, r8d  | * | jmp loc_401E09 ",icc,1
"add rcx, rcx  | * | loc_402AD5:  ",icc,1
"jmp loc_401E09  | * | xor edi, edi ",icc,1
loc_402AD5:   | * | jmp loc_4013BC ,icc,1
"xor edi, edi  | * | main endp ",icc,1
jmp loc_4013BC  | * | align 20h ,icc,1
main endp  | * | public _Z2gpi ,icc,1
align 20h  | * | _Z2gpi proc near  ,icc,1
public _Z2gpi  | * | push rbp ,icc,1
"_Z2gpi proc near   | * | movsxd rbp, edi ",icc,1
"push rbp  | * | mov edi, dword ptr ds:p[rbp*4] ",icc,1
"movsxd rbp, edi  | * | movsxd rdi, edi  ",icc,1
"mov edi, dword ptr ds:p[rbp*4]  | * | cmp rdi, rbp ",icc,1
"movsxd rdi, edi   | * | jz short loc_402B01 ",icc,1
"cmp rdi, rbp  | * | call _Z2gpi  ",icc,1
"jz short loc_402B01  | * | mov edi, eax ",icc,1
"call _Z2gpi   | * | mov dword ptr ds:p[rbp*4], edi ",icc,1
"mov edi, eax  | * | loc_402B01:  ",icc,1
"mov dword ptr ds:p[rbp*4], edi  | * | mov eax, edi ",icc,1
loc_402B01:   | * | pop rbp ,icc,1
"mov eax, edi  | * | retn ",icc,1
pop rbp  | * | _Z2gpi endp ,icc,1
_Z2gpi endp  | * | public _Z2goiii ,icc,1
align 10h  | * | _Z2goiii proc near  ,icc,1
_Z2goiii proc near   | * | push r12 ,icc,1
push r15  | * | push rbp ,icc,2
push rbx  | * | push rsi ,icc,1
"push rbp  | * | mov r13d, edi ",icc,1
"push rsi  | * | movsxd r13, r13d ",icc,1
"mov r13d, edi  | * | mov r15d, esi ",icc,1
"movsxd r13, r13d  | * | imul r12, r13, 5DC4h ",icc,1
"mov r15d, esi  | * | movsxd rax, r15d ",icc,1
"imul r12, r13, 5DC4h  | * | mov ebp, r13d ",icc,1
"movsxd rax, r15d  | * | mov ebx, cs:ct ",icc,1
"mov ebp, r13d  | * | mov r14d, edx ",icc,1
"mov ebx, cs:ct  | * | inc ebp ",icc,1
"mov r14d, edx  | * | mov ds:q[r12+rax*4], r14d ",icc,1
"inc ebp  | * | mov ds:use[r12+rax*4], ebx ",icc,1
"mov ds:q[r12+rax*4], r14d  | * | js short loc_402B95 ",icc,1
"mov ds:use[r12+rax*4], ebx  | * | test r15d, r15d ",icc,1
js short loc_402B95  | * | jl short loc_402B95 ,icc,1
"test r15d, r15d  | * | mov ecx, cs:n ",icc,3
"jl short loc_402B95  | * | add ecx, ecx ",icc,1
"mov ecx, cs:n  | * | cmp ebp, ecx ",icc,2
"add ecx, ecx  | * | jg short loc_402B95 ",icc,1
"cmp ebp, ecx  | * | cmp r15d, ecx ",icc,1
jg short loc_402B95  | * | jg short loc_402B95 ,icc,1
"cmp r15d, ecx  | * | movsxd rbp, ebp ",icc,1
"jg short loc_402B95  | * | imul rcx, rbp, 5DC4h ",icc,1
"movsxd rbp, ebp  | * | cmp ebx, ds:use[rcx+rax*4] ",icc,1
"imul rcx, rbp, 5DC4h  | * | jz short loc_402B95 ",icc,1
"cmp ebx, ds:use[rcx+rax*4]  | * | cmp ebx, ds:was[rcx+rax*4] ",icc,1
jz short loc_402B95  | * | jz short loc_402B95 ,icc,1
"cmp ebx, ds:was[rcx+rax*4]  | * | mov edi, ebp  ",icc,1
"jz short loc_402B95  | * | mov esi, r15d  ",icc,1
"mov edi, ebp   | * | mov edx, r14d  ",icc,2
"mov esi, r15d   | * | mov [rsp+38h+var_38], rax ",icc,1
"mov [rsp+38h+var_38], rax  | * | mov rax, [rsp+38h+var_38] ",icc,1
call _Z2goiii   | * | loc_402B95:  ,icc,1
"mov rax, [rsp+38h+var_38]  | * | mov ebx, r13d ",icc,1
loc_402B95:   | * | dec ebx ,icc,1
"mov ebx, r13d  | * | js short loc_402BE3 ",icc,1
"dec ebx  | * | test r15d, r15d ",icc,1
js short loc_402BE3  | * | jl short loc_402BE3 ,icc,1
"jl short loc_402BE3  | * | add ecx, ecx ",icc,1
"mov ecx, cs:n  | * | cmp ebx, ecx ",icc,1
"add ecx, ecx  | * | jg short loc_402BE3 ",icc,1
"cmp ebx, ecx  | * | cmp r15d, ecx ",icc,1
jg short loc_402BE3  | * | jg short loc_402BE3 ,icc,1
"cmp r15d, ecx  | * | movsxd rbx, ebx ",icc,1
"jg short loc_402BE3  | * | imul r8, rbx, 5DC4h ",icc,1
"movsxd rbx, ebx  | * | mov ecx, cs:ct ",icc,1
"imul r8, rbx, 5DC4h  | * | cmp ecx, ds:use[r8+rax*4] ",icc,1
"mov ecx, cs:ct  | * | jz short loc_402BE3 ",icc,1
"cmp ecx, ds:use[r8+rax*4]  | * | cmp ecx, ds:was[r8+rax*4] ",icc,1
jz short loc_402BE3  | * | jz short loc_402BE3 ,icc,1
"cmp ecx, ds:was[r8+rax*4]  | * | mov edi, ebx  ",icc,1
"jz short loc_402BE3  | * | mov esi, r15d  ",icc,1
"mov esi, r15d   | * | call _Z2goiii  ",icc,2
"mov edx, r14d   | * | loc_402BE3:  ",icc,1
"call _Z2goiii   | * | test r13d, r13d ",icc,1
"loc_402BE3:   | * | lea eax, [r15+1] ",icc,1
"test r13d, r13d  | * | jl short loc_402C31 ",icc,1
"lea eax, [r15+1]  | * | test eax, eax ",icc,1
jl short loc_402C31  | * | js short loc_402C31 ,icc,1
"test eax, eax  | * | mov ecx, cs:n ",icc,2
"js short loc_402C31  | * | add ecx, ecx ",icc,1
"mov ecx, cs:n  | * | cmp r13d, ecx ",icc,2
"add ecx, ecx  | * | jg short loc_402C31 ",icc,1
"cmp r13d, ecx  | * | cmp eax, ecx ",icc,1
jg short loc_402C31  | * | jg short loc_402C31 ,icc,1
"cmp eax, ecx  | * | movsxd r8, eax ",icc,1
"jg short loc_402C31  | * | mov ecx, cs:ct ",icc,1
"movsxd r8, eax  | * | cmp ecx, ds:use[r12+r8*4] ",icc,1
"mov ecx, cs:ct  | * | jz short loc_402C31 ",icc,1
"cmp ecx, ds:use[r12+r8*4]  | * | cmp ecx, ds:was[r12+r8*4] ",icc,2
jz short loc_402C31  | * | jz short loc_402C31 ,icc,1
"cmp ecx, ds:was[r12+r8*4]  | * | mov edi, r13d  ",icc,2
"jz short loc_402C31  | * | mov esi, eax  ",icc,1
"mov esi, eax   | * | mov dword ptr [rsp+38h+var_38], eax ",icc,1
"mov dword ptr [rsp+38h+var_38], eax  | * | mov eax, dword ptr [rsp+38h+var_38] ",icc,2
call _Z2goiii   | * | loc_402C31:  ,icc,1
"mov eax, dword ptr [rsp+38h+var_38]  | * | dec r15d ",icc,1
"loc_402C31:   | * | test r13d, r13d ",icc,1
dec r15d  | * | jl short loc_402C81 ,icc,1
"test r13d, r13d  | * | test r15d, r15d ",icc,1
jl short loc_402C81  | * | js short loc_402C81 ,icc,1
"js short loc_402C81  | * | add ecx, ecx ",icc,1
"add ecx, ecx  | * | jg short loc_402C81 ",icc,1
"cmp r13d, ecx  | * | cmp r15d, ecx ",icc,1
jg short loc_402C81  | * | jg short loc_402C81 ,icc,1
"cmp r15d, ecx  | * | movsxd r8, r15d ",icc,1
"jg short loc_402C81  | * | mov ecx, cs:ct ",icc,1
"movsxd r8, r15d  | * | cmp ecx, ds:use[r12+r8*4] ",icc,1
"mov ecx, cs:ct  | * | jz short loc_402C81 ",icc,1
jz short loc_402C81  | * | jz short loc_402C81 ,icc,1
"jz short loc_402C81  | * | mov esi, r15d  ",icc,1
"mov esi, r15d   | * | mov dword ptr [rsp+38h+var_38], eax ",icc,1
call _Z2goiii   | * | loc_402C81:  ,icc,1
"mov eax, dword ptr [rsp+38h+var_38]  | * | test ebp, ebp ",icc,1
loc_402C81:   | * | js short loc_402CCC ,icc,1
"test ebp, ebp  | * | test eax, eax ",icc,1
js short loc_402CCC  | * | js short loc_402CCC ,icc,1
"js short loc_402CCC  | * | add ecx, ecx ",icc,1
"add ecx, ecx  | * | jg short loc_402CCC ",icc,1
"cmp ebp, ecx  | * | cmp eax, ecx ",icc,1
jg short loc_402CCC  | * | jg short loc_402CCC ,icc,1
"cmp eax, ecx  | * | movsxd rbp, ebp ",icc,1
"jg short loc_402CCC  | * | imul r8, rbp, 5DC4h ",icc,1
"movsxd rbp, ebp  | * | movsxd r9, eax ",icc,1
"imul r8, rbp, 5DC4h  | * | mov ecx, cs:ct ",icc,1
"movsxd r9, eax  | * | cmp ecx, ds:use[r8+r9*4] ",icc,1
"mov ecx, cs:ct  | * | jz short loc_402CCC ",icc,1
"cmp ecx, ds:use[r8+r9*4]  | * | cmp ecx, ds:was[r8+r9*4] ",icc,1
jz short loc_402CCC  | * | jz short loc_402CCC ,icc,1
"cmp ecx, ds:was[r8+r9*4]  | * | mov edi, ebp  ",icc,1
"jz short loc_402CCC  | * | mov esi, eax  ",icc,1
"mov esi, eax   | * | call _Z2goiii  ",icc,1
"mov edx, r14d   | * | loc_402CCC:  ",icc,1
loc_402CCC:   | * | js short loc_402D18 ,icc,1
"test ebx, ebx  | * | test r15d, r15d ",icc,1
js short loc_402D18  | * | js short loc_402D18 ,icc,1
"test r15d, r15d  | * | mov eax, cs:n ",icc,1
"js short loc_402D18  | * | add eax, eax ",icc,1
"mov eax, cs:n  | * | cmp ebx, eax ",icc,1
"add eax, eax  | * | jg short loc_402D18 ",icc,1
"cmp ebx, eax  | * | cmp r15d, eax ",icc,1
jg short loc_402D18  | * | jg short loc_402D18 ,icc,1
"cmp r15d, eax  | * | movsxd rbx, ebx ",icc,1
"jg short loc_402D18  | * | imul rcx, rbx, 5DC4h ",icc,1
"movsxd rbx, ebx  | * | movsxd rbp, r15d ",icc,1
"imul rcx, rbx, 5DC4h  | * | mov eax, cs:ct ",icc,1
"movsxd rbp, r15d  | * | cmp eax, ds:use[rcx+rbp*4] ",icc,1
"mov eax, cs:ct  | * | jz short loc_402D18 ",icc,1
"cmp eax, ds:use[rcx+rbp*4]  | * | cmp eax, ds:was[rcx+rbp*4] ",icc,1
jz short loc_402D18  | * | jz short loc_402D18 ,icc,1
"cmp eax, ds:was[rcx+rbp*4]  | * | mov edi, ebx  ",icc,1
"jz short loc_402D18  | * | mov esi, r15d  ",icc,1
"mov edx, r14d   | * | loc_402D18:  ",icc,1
"call _Z2goiii   | * | xor eax, eax ",icc,1
loc_402D18:   | * | pop rcx ,icc,1
"xor eax, eax  | * | pop rbp ",icc,2
pop rcx  | * | pop rbx ,icc,1
pop rbp  | * | pop r15 ,icc,2
pop r13  | * | retn ,icc,4
pop r12  | * | _Z2goiii endp ,icc,1
_Z2goiii endp  | * | public _Z4goodii ,icc,1
align 10h  | * | _Z4goodii proc near ,icc,1
"public _Z4goodii  | * | test edi, edi ",icc,1
_Z4goodii proc near  | * | jle short loc_402D84 ,icc,1
"test edi, edi  | * | test esi, esi ",icc,1
jle short loc_402D84  | * | jle short loc_402D84 ,icc,1
"test esi, esi  | * | mov eax, cs:n ",icc,1
"jle short loc_402D84  | * | add eax, eax ",icc,1
"mov eax, cs:n  | * | cmp edi, eax ",icc,1
"add eax, eax  | * | jge short loc_402D84 ",icc,1
"cmp edi, eax  | * | cmp esi, eax ",icc,1
jge short loc_402D84  | * | jge short loc_402D84 ,icc,1
"cmp esi, eax  | * | movsxd rax, esi ",icc,1
"jge short loc_402D84  | * | mov edx, ds:f[rax*4] ",icc,1
"movsxd rax, esi  | * | cmp edi, edx ",icc,1
"mov edx, ds:f[rax*4]  | * | jl short loc_402D84 ",icc,1
"cmp edi, edx  | * | mov eax, ds:w[rax*4] ",icc,1
"jl short loc_402D84  | * | add edx, eax ",icc,2
"mov eax, ds:w[rax*4]  | * | cmp edi, edx ",icc,1
"add edx, eax  | * | jge short loc_402D84 ",icc,2
"cmp edi, edx  | * | movsxd rdi, edi ",icc,1
"jge short loc_402D84  | * | mov edx, ds:f[rdi*4] ",icc,1
"movsxd rdi, edi  | * | cmp esi, edx ",icc,1
"mov edx, ds:f[rdi*4]  | * | jl short loc_402D84 ",icc,1
"cmp esi, edx  | * | mov eax, ds:w[rdi*4] ",icc,1
"mov eax, ds:w[rdi*4]  | * | cmp esi, edx ",icc,1
"cmp esi, edx  | * | mov eax, 1 ",icc,1
jge short loc_402D84  | * | retn ,icc,1
"mov eax, 1  | * | loc_402D84:  ",icc,1
"retn  | * | xor eax, eax ",icc,2
loc_402D84:   | * | retn ,icc,1
"xor eax, eax  | * | _Z4goodii endp ",icc,1
_Z4goodii endp  | * | __sti__$E proc near  ,icc,1
var_10 = byte ptr -10h  | * | var_E = byte ptr -0Eh ,data,1
var_F = byte ptr -0Fh  | * | var_D = byte ptr -0Dh ,data,1
var_E = byte ptr -0Eh  | * | var_C = byte ptr -0Ch ,data,1
var_D = byte ptr -0Dh  | * | var_B = byte ptr -0Bh ,data,1
var_C = byte ptr -0Ch  | * | var_A = byte ptr -0Ah ,data,1
var_B = byte ptr -0Bh  | * | var_9 = byte ptr -9 ,data,1
var_A = byte ptr -0Ah  | * | arg_0 = qword ptr 8 ,data,1
var_9 = byte ptr -9  | * | arg_8 = qword ptr 10h ,data,1
"sub rsp, 28h  | * | call __ZNSt8ios_base4InitC1Ev  ",icc,1
"mov edi, offset _ZSt8__ioinit   | * | mov edi, offset __ZNSt8ios_base4InitD1Ev  ",icc,1
"call __ZNSt8ios_base4InitC1Ev   | * | mov esi, offset _ZSt8__ioinit  ",icc,1
"mov edi, offset __ZNSt8ios_base4InitD1Ev   | * | mov edx, offset __dso_handle  ",icc,1
"mov esi, offset _ZSt8__ioinit   | * | call ___cxa_atexit ",icc,1
"mov edx, offset __dso_handle   | * | mov edi, offset res ",icc,1
"call ___cxa_atexit  | * | mov esi, (offset aCannotAllocate+34h)  ",icc,1
"mov edi, offset res  | * | lea rdx, [rsp+28h+var_10] ",icc,1
"mov esi, (offset aCannotAllocate+34h)   | * | call __ZNSsC1EPKcRKSaIcE  ",icc,1
"lea rdx, [rsp+28h+var_10]  | * | mov edi, offset qword_609348 ",icc,1
"call __ZNSsC1EPKcRKSaIcE   | * | mov esi, offset aFork  ",icc,1
"mov edi, offset qword_609348  | * | lea rdx, [rsp+28h+var_F] ",icc,1
"mov esi, offset aFork   | * | call __ZNSsC1EPKcRKSaIcE  ",icc,1
"lea rdx, [rsp+28h+var_F]  | * | mov edi, offset qword_609350 ",icc,1
"call __ZNSsC1EPKcRKSaIcE   | * | mov esi, offset aBridge  ",icc,1
"mov edi, offset qword_609350  | * | lea rdx, [rsp+28h+var_E] ",icc,1
"mov esi, offset aBridge   | * | call __ZNSsC1EPKcRKSaIcE  ",icc,1
"lea rdx, [rsp+28h+var_E]  | * | mov edi, offset qword_609358 ",icc,1
"call __ZNSsC1EPKcRKSaIcE   | * | mov esi, offset aBridgeFork  ",icc,1
"mov edi, offset qword_609358  | * | lea rdx, [rsp+28h+var_D] ",icc,1
"mov esi, offset aBridgeFork   | * | call __ZNSsC1EPKcRKSaIcE  ",icc,1
"lea rdx, [rsp+28h+var_D]  | * | mov edi, offset qword_609360 ",icc,1
"call __ZNSsC1EPKcRKSaIcE   | * | mov esi, offset aRing  ",icc,1
"mov edi, offset qword_609360  | * | lea rdx, [rsp+28h+var_C] ",icc,1
"mov esi, offset aRing   | * | call __ZNSsC1EPKcRKSaIcE  ",icc,1
"lea rdx, [rsp+28h+var_C]  | * | mov edi, offset qword_609368 ",icc,1
"call __ZNSsC1EPKcRKSaIcE   | * | mov esi, offset aForkRing  ",icc,1
"mov edi, offset qword_609368  | * | lea rdx, [rsp+28h+var_B] ",icc,1
"mov esi, offset aForkRing   | * | call __ZNSsC1EPKcRKSaIcE  ",icc,1
"lea rdx, [rsp+28h+var_B]  | * | mov edi, offset qword_609370 ",icc,1
"call __ZNSsC1EPKcRKSaIcE   | * | mov esi, offset aBridgeRing  ",icc,1
"mov edi, offset qword_609370  | * | lea rdx, [rsp+28h+var_A] ",icc,1
"mov esi, offset aBridgeRing   | * | call __ZNSsC1EPKcRKSaIcE  ",icc,1
"lea rdx, [rsp+28h+var_A]  | * | mov edi, offset qword_609378 ",icc,1
"call __ZNSsC1EPKcRKSaIcE   | * | mov esi, offset unk_40611C ",icc,1
"mov edi, offset qword_609378  | * | lea rdx, [rsp+28h+var_9] ",icc,1
"mov esi, offset unk_40611C  | * | call __ZNSsC1EPKcRKSaIcE  ",icc,1
"lea rdx, [rsp+28h+var_9]  | * | mov edi, offset __$U0  ",icc,1
"call __ZNSsC1EPKcRKSaIcE   | * | xor esi, esi  ",icc,1
"mov edi, offset __$U0   | * | mov edx, offset __dso_handle  ",icc,1
"xor esi, esi   | * | call ___cxa_atexit ",icc,1
"mov edx, offset __dso_handle   | * | mov edi, offset v ",icc,1
call ___cxa_atexit  | * | call _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev  ,icc,2
"mov edi, offset v  | * | mov edi, offset _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev  ",icc,1
"call _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev   | * | mov esi, offset v  ",icc,1
"mov edi, offset _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev   | * | mov edx, offset __dso_handle  ",icc,2
"mov esi, offset v   | * | call ___cxa_atexit ",icc,1
"mov edx, offset __dso_handle   | * | mov edi, offset u ",icc,1
"mov edi, offset u  | * | mov edi, offset _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev  ",icc,1
"call _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev   | * | mov esi, offset u  ",icc,1
"mov esi, offset u   | * | call ___cxa_atexit ",icc,1
"mov edx, offset __dso_handle   | * | add rsp, 28h ",icc,1
call ___cxa_atexit  | * | retn ,icc,1
"add rsp, 28h  | * | mov [rsp+arg_0], rax ",icc,1
"retn  | * | mov rdi, cs:qword_609378 ",icc,1
"mov [rsp+arg_0], rax  | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov rdi, cs:qword_609378  | * | lea rax, [rdi-18h] ",icc,1
"mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4  | * | mov [rsp+arg_8], rax ",icc,8
"lea rax, [rdi-18h]  | * | cmp rax, rdx ",icc,8
"mov [rsp+arg_8], rax  | * | jnz loc_4030B2 ",icc,1
"cmp rax, rdx  | * | loc_402EC7:  ",icc,1
"jnz loc_4030B2  | * | mov rdi, cs:qword_609370 ",icc,1
"loc_402EC7:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov rdi, cs:qword_609370  | * | lea rax, [rdi-18h] ",icc,2
"mov [rsp+arg_8], rax  | * | jnz loc_403088 ",icc,1
"cmp rax, rdx  | * | loc_402EE5:  ",icc,1
"jnz loc_403088  | * | mov rdi, cs:qword_609368 ",icc,1
"loc_402EE5:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov rdi, cs:qword_609368  | * | lea rax, [rdi-18h] ",icc,2
"mov [rsp+arg_8], rax  | * | jnz loc_40305E ",icc,1
"cmp rax, rdx  | * | loc_402F03:  ",icc,1
"jnz loc_40305E  | * | mov rdi, cs:qword_609360 ",icc,1
"loc_402F03:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov rdi, cs:qword_609360  | * | lea rax, [rdi-18h] ",icc,2
"mov [rsp+arg_8], rax  | * | jnz loc_403034 ",icc,1
"cmp rax, rdx  | * | loc_402F21:  ",icc,1
"jnz loc_403034  | * | mov rdi, cs:qword_609358 ",icc,1
"loc_402F21:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov rdi, cs:qword_609358  | * | lea rax, [rdi-18h] ",icc,2
"mov [rsp+arg_8], rax  | * | jnz loc_40300A ",icc,1
"cmp rax, rdx  | * | loc_402F3F:  ",icc,1
"jnz loc_40300A  | * | mov rdi, cs:qword_609350 ",icc,1
"loc_402F3F:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov rdi, cs:qword_609350  | * | lea rax, [rdi-18h] ",icc,2
"mov [rsp+arg_8], rax  | * | jnz loc_402FE0 ",icc,1
"cmp rax, rdx  | * | loc_402F5D:  ",icc,1
"jnz loc_402FE0  | * | mov rdi, cs:qword_609348 ",icc,1
"loc_402F5D:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov rdi, cs:qword_609348  | * | lea rax, [rdi-18h] ",icc,2
"mov [rsp+arg_8], rax  | * | jnz short loc_402FBD ",icc,1
"cmp rax, rdx  | * | loc_402F77:  ",icc,1
"jnz short loc_402FBD  | * | mov rdi, cs:res ",icc,1
"loc_402F77:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov rdi, cs:res  | * | lea rax, [rdi-18h] ",icc,2
"mov [rsp+arg_8], rax  | * | jnz short loc_402F9B ",icc,1
"cmp rax, rdx  | * | loc_402F91:  ",icc,1
"jnz short loc_402F9B  | * | mov rdi, [rsp+arg_0]  ",icc,1
loc_402F91:   | * | call __Unwind_Resume ,icc,1
"mov rdi, [rsp+arg_0]   | * | loc_402F9B:  ",icc,1
"call __Unwind_Resume  | * | add rdi, 0FFFFFFFFFFFFFFF8h  ",icc,1
"loc_402F9B:   | * | mov esi, 0FFFFFFFFh  ",icc,1
"add rdi, 0FFFFFFFFFFFFFFF8h   | * | call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii  ",icc,8
"mov esi, 0FFFFFFFFh   | * | test eax, eax ",icc,8
call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii   | * | jg short loc_402F91 ,icc,1
"test eax, eax  | * | mov rdi, [rsp+arg_8] ",icc,8
"jg short loc_402F91  | * | lea rsi, [rsp+0] ",icc,1
"mov rdi, [rsp+arg_8]  | * | call __ZNSs4_Rep10_M_destroyERKSaIcE  ",icc,8
"lea rsi, [rsp+0]  | * | jmp short loc_402F91 ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_402FBD:  ,icc,1
"jmp short loc_402F91  | * | add rdi, 0FFFFFFFFFFFFFFF8h  ",icc,1
"loc_402FBD:   | * | mov esi, 0FFFFFFFFh  ",icc,1
call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii   | * | jg short loc_402F77 ,icc,1
"jg short loc_402F77  | * | lea rsi, [rsp+1] ",icc,1
"lea rsi, [rsp+1]  | * | jmp short loc_402F77 ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_402FE0:  ,icc,1
"jmp short loc_402F77  | * | add rdi, 0FFFFFFFFFFFFFFF8h  ",icc,1
"loc_402FE0:   | * | mov esi, 0FFFFFFFFh  ",icc,1
call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii   | * | jg loc_402F5D ,icc,1
"jg loc_402F5D  | * | lea rsi, [rsp+2] ",icc,1
"lea rsi, [rsp+2]  | * | jmp loc_402F5D ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_40300A:  ,icc,1
"jmp loc_402F5D  | * | add rdi, 0FFFFFFFFFFFFFFF8h  ",icc,1
"loc_40300A:   | * | mov esi, 0FFFFFFFFh  ",icc,1
call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii   | * | jg loc_402F3F ,icc,1
"jg loc_402F3F  | * | lea rsi, [rsp+3] ",icc,1
"lea rsi, [rsp+3]  | * | jmp loc_402F3F ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_403034:  ,icc,1
"jmp loc_402F3F  | * | add rdi, 0FFFFFFFFFFFFFFF8h  ",icc,1
"loc_403034:   | * | mov esi, 0FFFFFFFFh  ",icc,1
call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii   | * | jg loc_402F21 ,icc,1
"jg loc_402F21  | * | lea rsi, [rsp+4] ",icc,1
"lea rsi, [rsp+4]  | * | jmp loc_402F21 ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_40305E:  ,icc,1
"jmp loc_402F21  | * | add rdi, 0FFFFFFFFFFFFFFF8h  ",icc,1
"loc_40305E:   | * | mov esi, 0FFFFFFFFh  ",icc,1
call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii   | * | jg loc_402F03 ,icc,1
"jg loc_402F03  | * | lea rsi, [rsp+5] ",icc,1
"lea rsi, [rsp+5]  | * | jmp loc_402F03 ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_403088:  ,icc,1
"jmp loc_402F03  | * | add rdi, 0FFFFFFFFFFFFFFF8h  ",icc,1
"loc_403088:   | * | mov esi, 0FFFFFFFFh  ",icc,1
call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii   | * | jg loc_402EE5 ,icc,1
"jg loc_402EE5  | * | lea rsi, [rsp+7] ",icc,1
"lea rsi, [rsp+7]  | * | jmp loc_402EE5 ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_4030B2:  ,icc,1
"jmp loc_402EE5  | * | add rdi, 0FFFFFFFFFFFFFFF8h  ",icc,1
"loc_4030B2:   | * | mov esi, 0FFFFFFFFh  ",icc,1
call _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii   | * | jg loc_402EC7 ,icc,1
"jg loc_402EC7  | * | lea rsi, [rsp+6] ",icc,1
"lea rsi, [rsp+6]  | * | jmp loc_402EC7 ",icc,1
"call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | mov [rsp+arg_0], rax ",icc,1
jmp loc_402EC7  | * | jmp loc_402EC7 ,icc,1
"mov [rsp+arg_0], rax  | * | mov [rsp+arg_0], rax ",icc,7
jmp loc_402EC7  | * | jmp loc_402EE5 ,icc,1
jmp loc_402EE5  | * | jmp loc_402F03 ,icc,1
jmp loc_402F03  | * | jmp loc_402F21 ,icc,1
jmp loc_402F21  | * | jmp loc_402F3F ,icc,1
jmp loc_402F3F  | * | jmp loc_402F5D ,icc,1
jmp loc_402F5D  | * | jmp loc_402F77 ,icc,1
jmp loc_402F77  | * | jmp loc_402F91 ,icc,1
"mov [rsp+arg_0], rax  | * | __sti__$E endp ",icc,1
jmp loc_402F91  | * | align 10h ,icc,1
__sti__$E endp  | * | _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii proc near ,icc,1
"align 10h  | * | mov eax, 0 ",icc,1
"_ZN9__gnu_cxx27__exchange_and_add_dispatchEPii proc near  | * | test rax, rax ",icc,1
"mov eax, 0  | * | jz short loc_403146 ",icc,1
"test rax, rax  | * | mov ecx, 0FFFFFFFFh ",icc,1
"jz short loc_403146  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | mov eax, ecx ",icc,1
"lock xadd [rdi], ecx  | * | retn ",icc,1
"mov eax, ecx  | * | loc_403146:  ",icc,1
"retn  | * | mov eax, [rdi] ",icc,1
"loc_403146:   | * | lea edx, [rax-1] ",icc,1
"mov eax, [rdi]  | * | mov [rdi], edx ",icc,1
"lea edx, [rax-1]  | * | retn ",icc,1
"mov [rdi], edx  | * | _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii endp ",icc,1
_ZN9__gnu_cxx27__exchange_and_add_dispatchEPii endp  | * | __$U0 proc near  ,icc,1
__$U0 proc near   | * | push rsi ,icc,1
"push rsi  | * | mov rdi, cs:qword_609378 ",icc,1
"mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4  | * | lea rax, [rdi-18h] ",icc,1
"mov rdi, cs:qword_609378  | * | cmp rax, rdx ",icc,1
"lea rax, [rdi-18h]  | * | jnz loc_403394 ",icc,1
"cmp rax, rdx  | * | loc_40316A:  ",icc,1
"jnz loc_403394  | * | mov rdi, cs:qword_609370 ",icc,1
"loc_40316A:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4  | * | cmp rax, rdx ",icc,7
"lea rax, [rdi-18h]  | * | jnz loc_40335B ",icc,1
"cmp rax, rdx  | * | loc_403183:  ",icc,1
"jnz loc_40335B  | * | mov rdi, cs:qword_609368 ",icc,1
"loc_403183:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"lea rax, [rdi-18h]  | * | jnz loc_403322 ",icc,1
"cmp rax, rdx  | * | loc_40319C:  ",icc,1
"jnz loc_403322  | * | mov rdi, cs:qword_609360 ",icc,1
"loc_40319C:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"lea rax, [rdi-18h]  | * | jnz loc_4032E9 ",icc,1
"cmp rax, rdx  | * | loc_4031B5:  ",icc,1
"jnz loc_4032E9  | * | mov rdi, cs:qword_609358 ",icc,1
"loc_4031B5:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"lea rax, [rdi-18h]  | * | jnz loc_4032B0 ",icc,1
"cmp rax, rdx  | * | loc_4031CE:  ",icc,1
"jnz loc_4032B0  | * | mov rdi, cs:qword_609350 ",icc,1
"loc_4031CE:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"lea rax, [rdi-18h]  | * | jnz loc_403277 ",icc,1
"cmp rax, rdx  | * | loc_4031E7:  ",icc,1
"jnz loc_403277  | * | mov rdi, cs:qword_609348 ",icc,1
"loc_4031E7:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"lea rax, [rdi-18h]  | * | jnz short loc_403245 ",icc,1
"cmp rax, rdx  | * | loc_4031FC:  ",icc,1
"jnz short loc_403245  | * | mov rdi, cs:res ",icc,1
"loc_4031FC:   | * | mov edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4 ",icc,1
"lea rax, [rdi-18h]  | * | jnz short loc_403213 ",icc,1
"cmp rax, rdx  | * | loc_403211:  ",icc,1
jnz short loc_403213  | * | pop rcx ,icc,1
loc_403211:   | * | retn ,icc,1
pop rcx  | * | loc_403213:  ,icc,1
"retn  | * | mov edx, 0 ",icc,2
"loc_403213:   | * | add rdi, 0FFFFFFFFFFFFFFF8h ",icc,1
"mov edx, 0  | * | test rdx, rdx ",icc,8
"add rdi, 0FFFFFFFFFFFFFFF8h  | * | jz short loc_40322C ",icc,1
"test rdx, rdx  | * | mov ecx, 0FFFFFFFFh ",icc,8
"jz short loc_40322C  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | jmp short loc_403233 ",icc,1
"lock xadd [rdi], ecx  | * | loc_40322C:  ",icc,1
"jmp short loc_403233  | * | mov ecx, [rdi] ",icc,1
"loc_40322C:   | * | lea edx, [rcx-1] ",icc,1
"mov ecx, [rdi]  | * | mov [rdi], edx ",icc,8
"lea edx, [rcx-1]  | * | loc_403233:  ",icc,1
"mov [rdi], edx  | * | test ecx, ecx ",icc,8
loc_403233:   | * | jg short loc_403211 ,icc,1
"test ecx, ecx  | * | mov rdi, rax ",icc,8
"jg short loc_403211  | * | lea rsi, [rsp+8+var_8] ",icc,1
"mov rdi, rax  | * | call __ZNSs4_Rep10_M_destroyERKSaIcE  ",icc,8
"lea rsi, [rsp+8+var_8]  | * | pop rcx ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | retn ,icc,1
pop rcx  | * | loc_403245:  ,icc,1
"loc_403245:   | * | add rdi, 0FFFFFFFFFFFFFFF8h ",icc,1
"add rdi, 0FFFFFFFFFFFFFFF8h  | * | jz short loc_40325E ",icc,1
"jz short loc_40325E  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | jmp short loc_403265 ",icc,1
"lock xadd [rdi], ecx  | * | loc_40325E:  ",icc,1
"jmp short loc_403265  | * | mov ecx, [rdi] ",icc,1
"loc_40325E:   | * | lea edx, [rcx-1] ",icc,1
"lea edx, [rcx-1]  | * | loc_403265:  ",icc,1
loc_403265:   | * | jg short loc_4031FC ,icc,1
"jg short loc_4031FC  | * | lea rsi, [rsp+8+var_8] ",icc,1
"lea rsi, [rsp+8+var_8]  | * | jmp short loc_4031FC ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_403277:  ,icc,1
"jmp short loc_4031FC  | * | mov edx, 0 ",icc,1
"loc_403277:   | * | add rdi, 0FFFFFFFFFFFFFFF8h ",icc,1
"add rdi, 0FFFFFFFFFFFFFFF8h  | * | jz short loc_403290 ",icc,1
"jz short loc_403290  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | jmp short loc_403297 ",icc,1
"lock xadd [rdi], ecx  | * | loc_403290:  ",icc,1
"jmp short loc_403297  | * | mov ecx, [rdi] ",icc,1
"loc_403290:   | * | lea edx, [rcx-1] ",icc,1
"lea edx, [rcx-1]  | * | loc_403297:  ",icc,1
loc_403297:   | * | jg loc_4031E7 ,icc,1
"jg loc_4031E7  | * | lea rsi, [rsp+8+var_8] ",icc,1
"lea rsi, [rsp+8+var_8]  | * | jmp loc_4031E7 ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_4032B0:  ,icc,1
"jmp loc_4031E7  | * | mov edx, 0 ",icc,1
"loc_4032B0:   | * | add rdi, 0FFFFFFFFFFFFFFF8h ",icc,1
"add rdi, 0FFFFFFFFFFFFFFF8h  | * | jz short loc_4032C9 ",icc,1
"jz short loc_4032C9  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | jmp short loc_4032D0 ",icc,1
"lock xadd [rdi], ecx  | * | loc_4032C9:  ",icc,1
"jmp short loc_4032D0  | * | mov ecx, [rdi] ",icc,1
"loc_4032C9:   | * | lea edx, [rcx-1] ",icc,1
"lea edx, [rcx-1]  | * | loc_4032D0:  ",icc,1
loc_4032D0:   | * | jg loc_4031CE ,icc,1
"jg loc_4031CE  | * | lea rsi, [rsp+8+var_8] ",icc,1
"lea rsi, [rsp+8+var_8]  | * | jmp loc_4031CE ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_4032E9:  ,icc,1
"jmp loc_4031CE  | * | mov edx, 0 ",icc,1
"loc_4032E9:   | * | add rdi, 0FFFFFFFFFFFFFFF8h ",icc,1
"add rdi, 0FFFFFFFFFFFFFFF8h  | * | jz short loc_403302 ",icc,1
"jz short loc_403302  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | jmp short loc_403309 ",icc,1
"lock xadd [rdi], ecx  | * | loc_403302:  ",icc,1
"jmp short loc_403309  | * | mov ecx, [rdi] ",icc,1
"loc_403302:   | * | lea edx, [rcx-1] ",icc,1
"lea edx, [rcx-1]  | * | loc_403309:  ",icc,1
loc_403309:   | * | jg loc_4031B5 ,icc,1
"jg loc_4031B5  | * | lea rsi, [rsp+8+var_8] ",icc,1
"lea rsi, [rsp+8+var_8]  | * | jmp loc_4031B5 ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_403322:  ,icc,1
"jmp loc_4031B5  | * | mov edx, 0 ",icc,1
"loc_403322:   | * | add rdi, 0FFFFFFFFFFFFFFF8h ",icc,1
"add rdi, 0FFFFFFFFFFFFFFF8h  | * | jz short loc_40333B ",icc,1
"jz short loc_40333B  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | jmp short loc_403342 ",icc,1
"lock xadd [rdi], ecx  | * | loc_40333B:  ",icc,1
"jmp short loc_403342  | * | mov ecx, [rdi] ",icc,1
"loc_40333B:   | * | lea edx, [rcx-1] ",icc,1
"lea edx, [rcx-1]  | * | loc_403342:  ",icc,1
loc_403342:   | * | jg loc_40319C ,icc,1
"jg loc_40319C  | * | lea rsi, [rsp+8+var_8] ",icc,1
"lea rsi, [rsp+8+var_8]  | * | jmp loc_40319C ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_40335B:  ,icc,1
"jmp loc_40319C  | * | mov edx, 0 ",icc,1
"loc_40335B:   | * | add rdi, 0FFFFFFFFFFFFFFF8h ",icc,1
"add rdi, 0FFFFFFFFFFFFFFF8h  | * | jz short loc_403374 ",icc,1
"jz short loc_403374  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | jmp short loc_40337B ",icc,1
"lock xadd [rdi], ecx  | * | loc_403374:  ",icc,1
"jmp short loc_40337B  | * | mov ecx, [rdi] ",icc,1
"loc_403374:   | * | lea edx, [rcx-1] ",icc,1
"lea edx, [rcx-1]  | * | loc_40337B:  ",icc,1
loc_40337B:   | * | jg loc_403183 ,icc,1
"jg loc_403183  | * | lea rsi, [rsp+8+var_8] ",icc,1
"lea rsi, [rsp+8+var_8]  | * | jmp loc_403183 ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | loc_403394:  ,icc,1
"jmp loc_403183  | * | mov edx, 0 ",icc,1
"loc_403394:   | * | add rdi, 0FFFFFFFFFFFFFFF8h ",icc,1
"add rdi, 0FFFFFFFFFFFFFFF8h  | * | jz short loc_4033AD ",icc,1
"jz short loc_4033AD  | * | lock xadd [rdi], ecx ",icc,1
"mov ecx, 0FFFFFFFFh  | * | jmp short loc_4033B4 ",icc,1
"lock xadd [rdi], ecx  | * | loc_4033AD:  ",icc,1
"jmp short loc_4033B4  | * | mov ecx, [rdi] ",icc,1
"loc_4033AD:   | * | lea edx, [rcx-1] ",icc,1
"lea edx, [rcx-1]  | * | loc_4033B4:  ",icc,1
loc_4033B4:   | * | jg loc_40316A ,icc,1
"jg loc_40316A  | * | lea rsi, [rsp+8+var_8] ",icc,1
"lea rsi, [rsp+8+var_8]  | * | jmp loc_40316A ",icc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | __$U0 endp ,icc,1
jmp loc_40316A  | * | align 10h ,icc,1
__$U0 endp  | * | public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m  ,icc,1
align 10h  | * | _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m proc near ,icc,1
"public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m   | * | test rsi, rsi ",icc,1
_ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m proc near  | * | jz short locret_4033DD ,icc,1
"test rsi, rsi  | * | mov rdi, rsi  ",icc,1
jz short locret_4033DD  | * | jmp __ZdlPv  ,icc,1
"mov rdi, rsi   | * | locret_4033DD:  ",icc,1
jmp __ZdlPv   | * | retn ,icc,3
locret_4033DD:   | * | _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m endp ,icc,1
_ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m endp  | * | public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv  ,icc,1
align 20h  | * | _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv proc near ,icc,1
"public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv   | * | mov rax, rdi ",icc,1
_ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv proc near  | * | retn ,icc,1
"mov rax, rdi  | * | _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv endp ",icc,1
_ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv endp  | * | public _ZNSt11char_traitsIcE6lengthEPKc  ,icc,1
align 10h  | * | _ZNSt11char_traitsIcE6lengthEPKc proc near ,icc,1
public _ZNSt11char_traitsIcE6lengthEPKc   | * | push rsi ,icc,1
"_ZNSt11char_traitsIcE6lengthEPKc proc near  | * | mov rdx, rdi ",icc,1
"push rsi  | * | mov rcx, rdx ",icc,1
"mov rdx, rdi  | * | and rdx, 0FFFFFFFFFFFFFFF0h ",icc,1
"mov rcx, rdx  | * | pxor xmm0, xmm0 ",icc,1
"and rdx, 0FFFFFFFFFFFFFFF0h  | * | pcmpeqb xmm0, xmmword ptr [rdx] ",icc,1
"pxor xmm0, xmm0  | * | pmovmskb eax, xmm0 ",icc,1
"pcmpeqb xmm0, xmmword ptr [rdx]  | * | and ecx, 0Fh ",icc,1
"pmovmskb eax, xmm0  | * | shr eax, cl ",icc,1
"and ecx, 0Fh  | * | bsf eax, eax ",icc,1
"shr eax, cl  | * | jnz short loc_40341C ",icc,1
"bsf eax, eax  | * | mov rax, rdx ",icc,1
"jnz short loc_40341C  | * | add rdx, rcx ",icc,1
"mov rax, rdx  | * | call __intel_sse2_strlen ",icc,1
"add rdx, rcx  | * | loc_40341C:  ",icc,1
call __intel_sse2_strlen  | * | pop rcx ,icc,1
loc_40341C:   | * | retn ,icc,1
pop rcx  | * | _ZNSt11char_traitsIcE6lengthEPKc endp ,icc,1
_ZNSt11char_traitsIcE6lengthEPKc endp  | * | public _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev  ,icc,1
align 20h  | * | _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev proc near ,icc,1
"public _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev   | * | mov rdi, [rdi]  ",icc,1
"_ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev proc near  | * | test rdi, rdi ",icc,1
"mov rdi, [rdi]   | * | jz short locret_40342D ",icc,1
"test rdi, rdi  | * | jmp __ZdlPv  ",icc,2
jz short locret_40342D  | * | locret_40342D:  ,icc,1
locret_40342D:   | * | _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev endp ,icc,1
_ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev endp  | * | public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev  ,icc,1
align 10h  | * | _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev proc near ,icc,1
"public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev   | * | mov rdi, [rdi]  ",icc,1
"_ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev proc near  | * | test rdi, rdi ",icc,1
"mov rdi, [rdi]   | * | jz short locret_40343D ",icc,1
jz short locret_40343D  | * | locret_40343D:  ,icc,1
locret_40343D:   | * | _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev endp ,icc,1
_ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev endp  | * | public _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev  ,icc,1
align 20h  | * | _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev proc near ,icc,1
"public _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev   | * | xor eax, eax ",icc,1
"_ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev proc near  | * | mov [rdi], rax ",icc,1
"xor eax, eax  | * | mov [rdi+8], rax ",icc,1
"mov [rdi], rax  | * | mov [rdi+10h], rax ",icc,1
"mov [rdi+8], rax  | * | retn ",icc,1
"mov [rdi+10h], rax  | * | _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev endp ",icc,1
_ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev endp  | * | public _intel_fast_memset_A ,icc,1
align 10h  | * | _intel_fast_memset_A proc near  ,icc,1
public _intel_fast_memset_A  | * | jmp _memset ,icc,1
_intel_fast_memset_A proc near   | * | _intel_fast_memset_A endp ,icc,1
jmp _memset  | * | align 20h ,icc,1
_intel_fast_memset_A endp  | * | public _intel_fast_memset_J ,icc,1
align 20h  | * | _intel_fast_memset_J proc near  ,icc,1
public _intel_fast_memset_J  | * | jmp __intel_new_memset ,icc,1
_intel_fast_memset_J proc near   | * | _intel_fast_memset_J endp ,icc,1
jmp __intel_new_memset  | * | align 10h ,icc,1
_intel_fast_memset_J endp  | * | public _intel_fast_memset ,icc,1
align 10h  | * | _intel_fast_memset proc near  ,icc,1
"public _intel_fast_memset  | * | mov rax, cs:__intel_cpu_feature_indicator_ptr ",icc,1
"_intel_fast_memset proc near   | * | mov rcx, [rax] ",icc,1
"mov rax, cs:__intel_cpu_feature_indicator_ptr  | * | and rcx, 7Fh ",icc,1
"mov rcx, [rax]  | * | cmp rcx, 7Fh ",icc,1
"and rcx, 7Fh  | * | jnz short loc_403489 ",icc,1
"cmp rcx, 7Fh  | * | jmp _intel_fast_memset_J ",icc,1
jnz short loc_403489  | * | loc_403489:  ,icc,1
"jmp _intel_fast_memset_J  | * | mov rax, cs:__intel_cpu_feature_indicator_ptr ",icc,1
"loc_403489:   | * | test qword ptr [rax], 1 ",icc,1
"mov rax, cs:__intel_cpu_feature_indicator_ptr  | * | jz short loc_40349E ",icc,1
"test qword ptr [rax], 1  | * | jmp _intel_fast_memset_A ",icc,1
jz short loc_40349E  | * | loc_40349E:  ,icc,1
"jmp _intel_fast_memset_A  | * | sub rsp, 8 ",icc,1
loc_40349E:   | * | call __intel_cpu_features_init ,icc,1
"sub rsp, 8  | * | add rsp, 8 ",icc,1
call __intel_cpu_features_init  | * | jmp short _intel_fast_memset ,icc,1
"add rsp, 8  | * | _intel_fast_memset endp ",icc,1
jmp short _intel_fast_memset  | * | align 10h ,icc,1
_intel_fast_memset endp  | * | public __intel_new_feature_proc_init ,icc,1
align 10h  | * | __intel_new_feature_proc_init proc near  ,icc,1
dest = byte ptr -448h  | * | var_40 = qword ptr -40h ,data,1
var_48 = qword ptr -48h  | * | var_38 = qword ptr -38h ,data,3
var_40 = qword ptr -40h  | * | var_30 = qword ptr -30h ,data,2
var_38 = qword ptr -38h  | * | var_28 = qword ptr -28h ,data,2
var_30 = qword ptr -30h  | * | s = qword ptr -20h ,data,1
"push r13  | * | sub rsp, 430h ",icc,1
"push r14  | * | mov r14, rsi ",icc,1
"sub rsp, 430h  | * | mov rax, cs:__intel_cpu_feature_indicator_ptr ",icc,1
"mov r14, rsi  | * | mov r13d, edi ",icc,1
"mov rax, cs:__intel_cpu_feature_indicator_ptr  | * | mov r12, [rax] ",icc,1
"mov r13d, edi  | * | test r12, r12 ",icc,1
"mov r12, [rax]  | * | jz loc_40380D ",icc,1
"test r12, r12  | * | loc_4034D6:  ",icc,1
"jz loc_40380D  | * | mov rax, r12 ",icc,1
"loc_4034D6:   | * | and rax, r14 ",icc,1
"mov rax, r12  | * | cmp r14, rax ",icc,1
"and rax, r14  | * | jnz short loc_4034FC ",icc,1
"cmp r14, rax  | * | test r12, 6 ",icc,1
jnz short loc_4034FC  | * | jnz loc_40377D ,icc,1
"test r12, 6  | * | loc_4034EE:  ",icc,1
"jnz loc_40377D  | * | add rsp, 430h ",icc,1
loc_4034EE:   | * | pop r14 ,icc,1
"add rsp, 430h  | * | pop r13 ",icc,1
pop r12  | * | loc_4034FC:  ,icc,1
"retn  | * | test r14, 1 ",icc,1
loc_4034FC:   | * | jnz loc_4037F8 ,icc,1
"test r14, 1  | * | not r12 ",icc,1
"jnz loc_4037F8  | * | mov edi, 39h  ",icc,1
"not r12  | * | and r12, r14 ",icc,1
"mov edi, 39h   | * | xor r14d, r14d ",icc,1
"and r12, r14  | * | xor esi, esi ",icc,1
"xor r14d, r14d  | * | xor eax, eax ",icc,1
"xor esi, esi  | * | call __libirc_get_msg ",icc,1
"xor eax, eax  | * | xor edx, edx ",icc,1
"call __libirc_get_msg  | * | mov r8b, 1 ",icc,1
"xor edx, edx  | * | mov [rsp+448h+dest], 0 ",icc,1
"mov r8b, 1  | * | xor r13d, r13d ",icc,1
"mov [rsp+448h+dest], 0  | * | mov [rsp+448h+s], rax ",icc,1
"xor r13d, r13d  | * | mov [rsp+448h+var_28], r15 ",icc,1
"mov [rsp+448h+s], rax  | * | mov r15, r12 ",icc,1
"mov [rsp+448h+var_28], r15  | * | mov [rsp+448h+var_30], rbx ",icc,1
"mov r15, r12  | * | mov r12b, r8b ",icc,1
"mov [rsp+448h+var_30], rbx  | * | mov [rsp+448h+var_38], rbp ",icc,1
"mov r12b, r8b  | * | mov rbp, r14 ",icc,1
"mov [rsp+448h+var_38], rbp  | * | mov r14, rdx ",icc,1
"mov rbp, r14  | * | loc_403558:  ",icc,1
"mov r14, rdx  | * | mov ecx, r13d ",icc,1
"loc_403558:   | * | mov eax, 1 ",icc,1
"mov ecx, r13d  | * | shl rax, cl ",icc,1
"mov eax, 1  | * | test rax, r15 ",icc,1
"shl rax, cl  | * | jz loc_403674 ",icc,1
"test rax, r15  | * | cmp r12b, 26h  ",icc,1
jz loc_403674  | * | jnb loc_403753 ,icc,1
"cmp r12b, 26h   | * | movzx ebx, r12b ",icc,1
"jnb loc_403753  | * | lea rax, c_feature_names ",icc,1
"movzx ebx, r12b  | * | mov rbx, [rax+rbx*8] ",icc,1
"lea rax, c_feature_names  | * | test rbx, rbx ",icc,1
"mov rbx, [rax+rbx*8]  | * | jz loc_403753 ",icc,1
"test rbx, rbx  | * | cmp byte ptr [rbx], 0 ",icc,1
jz loc_403753  | * | jz loc_403753 ,icc,1
"cmp byte ptr [rbx], 0  | * | cmp [rsp+448h+dest], 0 ",icc,1
jz loc_403753  | * | jz loc_40364F ,icc,1
"cmp [rsp+448h+dest], 0  | * | test rbp, rbp ",icc,1
jz loc_40364F  | * | jz loc_40364A ,icc,1
"test rbp, rbp  | * | mov rdi, rbp  ",icc,1
jz loc_40364A  | * | call _strlen ,icc,1
"mov rdi, rbp   | * | mov [rsp+448h+var_40], rax ",icc,1
"call _strlen  | * | mov rdi, [rsp+448h+s]  ",icc,1
"mov [rsp+448h+var_40], rax  | * | call _strlen ",icc,1
"mov rdi, [rsp+448h+s]   | * | mov [rsp+448h+var_48], rax ",icc,1
"call _strlen  | * | mov rdi, rbx  ",icc,1
"mov [rsp+448h+var_48], rax  | * | call _strlen ",icc,1
"mov rdi, rbx   | * | mov r9, rax ",icc,1
"call _strlen  | * | mov rax, [rsp+448h+var_40] ",icc,1
"mov r9, rax  | * | add rax, r14 ",icc,1
"mov rax, [rsp+448h+var_40]  | * | add rax, [rsp+448h+var_48] ",icc,1
"add rax, r14  | * | lea r9, [rax+r9+2] ",icc,1
"add rax, [rsp+448h+var_48]  | * | cmp r9, 400h ",icc,1
"lea r9, [rax+r9+2]  | * | jnb loc_40378C ",icc,1
"cmp r9, 400h  | * | neg r14 ",icc,1
"jnb loc_40378C  | * | lea rdi, [rsp+448h+dest]  ",icc,1
"neg r14  | * | add r14, 3FFh ",icc,2
"lea rdi, [rsp+448h+dest]   | * | lea rsi, src  ",icc,1
"add r14, 3FFh  | * | mov rdx, r14  ",icc,2
"lea rsi, src   | * | call _strncat ",icc,1
"mov rdx, r14   | * | lea rdi, [rsp+448h+dest]  ",icc,2
call _strncat  | * | call _strlen ,icc,6
"lea rdi, [rsp+448h+dest]   | * | movsxd rdx, eax ",icc,3
"call _strlen  | * | lea rdi, [rsp+448h+dest]  ",icc,3
"movsxd rdx, eax  | * | neg rdx ",icc,3
"lea rdi, [rsp+448h+dest]   | * | mov rsi, rbp  ",icc,1
"neg rdx  | * | add rdx, 3FFh  ",icc,4
"mov rsi, rbp   | * | call _strncat ",icc,1
"add rdx, 3FFh   | * | lea rdi, [rsp+448h+dest]  ",icc,2
"lea rdi, [rsp+448h+dest]   | * | movsxd r14, eax ",icc,2
call _strlen  | * | loc_40364A:  ,icc,1
"movsxd r14, eax  | * | mov rbp, rbx ",icc,1
loc_40364A:   | * | jmp short loc_403674 ,icc,1
"mov rbp, rbx  | * | loc_40364F:  ",icc,1
jmp short loc_403674  | * | neg r14 ,icc,1
"loc_40364F:   | * | lea rdi, [rsp+448h+dest]  ",icc,1
"lea rdi, [rsp+448h+dest]   | * | mov rsi, rbx  ",icc,1
"mov rsi, rbx   | * | call _strncat ",icc,1
call _strlen  | * | loc_403674:  ,icc,1
"movsxd r14, eax  | * | inc r12b ",icc,1
loc_403674:   | * | inc r13d ,icc,1
"inc r12b  | * | cmp r12b, 25h  ",icc,1
inc r13d  | * | jle loc_403558 ,icc,1
"cmp r12b, 25h   | * | mov rdx, r14 ",icc,1
"jle loc_403558  | * | mov r14, rbp ",icc,1
"mov rdx, r14  | * | mov rax, [rsp+448h+s] ",icc,1
"mov r14, rbp  | * | test r14, r14 ",icc,1
"mov rax, [rsp+448h+s]  | * | mov r15, [rsp+448h+var_28] ",icc,1
"test r14, r14  | * | mov rbx, [rsp+448h+var_30] ",icc,1
"mov r15, [rsp+448h+var_28]  | * | mov rbp, [rsp+448h+var_38] ",icc,3
"mov rbx, [rsp+448h+var_30]  | * | jz short loc_4036E7 ",icc,1
"mov rbp, [rsp+448h+var_38]  | * | neg rdx ",icc,1
"jz short loc_4036E7  | * | lea rdi, [rsp+448h+dest]  ",icc,1
"lea rdi, [rsp+448h+dest]   | * | mov rsi, rax  ",icc,1
"add rdx, 3FFh   | * | call _strncat ",icc,1
"mov rsi, rax   | * | lea rdi, [rsp+448h+dest]  ",icc,1
"lea rdi, [rsp+448h+dest]   | * | mov rsi, r14  ",icc,2
"mov rsi, r14   | * | call _strncat ",icc,2
"add rdx, 3FFh   | * | loc_4036E7:  ",icc,1
"call _strncat  | * | cmp [rsp+448h+dest], 0 ",icc,1
loc_4036E7:   | * | jnz short loc_40372A ,icc,1
"cmp [rsp+448h+dest], 0  | * | xor esi, esi ",icc,1
"jnz short loc_40372A  | * | mov edi, 1 ",icc,1
"xor esi, esi  | * | xor edx, edx ",icc,6
"mov edi, 1  | * | xor eax, eax ",icc,6
"xor edx, edx  | * | call __libirc_print ",icc,8
"xor eax, eax  | * | loc_4036FD:  ",icc,1
"call __libirc_print  | * | mov edi, 1 ",icc,1
"loc_4036FD:   | * | mov esi, 3Ah  ",icc,1
"mov edi, 1  | * | xor edx, edx ",icc,2
"mov esi, 3Ah   | * | xor eax, eax ",icc,1
"xor eax, eax  | * | loc_403710:  ",icc,1
"call __libirc_print  | * | xor esi, esi ",icc,1
"loc_403710:   | * | mov edi, 1 ",icc,1
"xor eax, eax  | * | mov edi, 1  ",icc,1
call __libirc_print  | * | call _exit ,icc,1
"mov edi, 1   | * | loc_40372A:  ",icc,1
"call _exit  | * | xor esi, esi ",icc,1
"loc_40372A:   | * | mov edi, 1 ",icc,1
"xor eax, eax  | * | mov edi, 1 ",icc,2
"call __libirc_print  | * | mov esi, 38h  ",icc,1
"mov edi, 1  | * | mov edx, edi ",icc,1
"mov esi, 38h   | * | lea rcx, [rsp+448h+dest] ",icc,1
"mov edx, edi  | * | xor eax, eax ",icc,1
"lea rcx, [rsp+448h+dest]  | * | call __libirc_print ",icc,1
"xor eax, eax  | * | jmp short loc_403710 ",icc,1
call __libirc_print  | * | loc_403753:  ,icc,1
"jmp short loc_403710  | * | mov r15, [rsp+448h+var_28] ",icc,1
"loc_403753:   | * | mov rbx, [rsp+448h+var_30] ",icc,1
"mov rbx, [rsp+448h+var_30]  | * | xor esi, esi ",icc,1
"mov rbp, [rsp+448h+var_38]  | * | mov edi, 1 ",icc,1
"xor eax, eax  | * | jmp short loc_4036FD ",icc,1
call __libirc_print  | * | loc_40377D:  ,icc,1
"jmp short loc_4036FD  | * | xor edi, edi ",icc,1
"loc_40377D:   | * | mov esi, r13d ",icc,1
"xor edi, edi  | * | call __intel_proc_init_ftzdazule ",icc,1
"mov esi, r13d  | * | jmp loc_4034EE ",icc,1
call __intel_proc_init_ftzdazule  | * | loc_40378C:  ,icc,1
"jmp loc_4034EE  | * | mov rdx, r14 ",icc,1
"loc_40378C:   | * | lea rdi, [rsp+448h+dest]  ",icc,1
"mov rdx, r14  | * | neg rdx ",icc,1
"lea rdi, [rsp+448h+dest]   | * | mov r14, rbp ",icc,1
"neg rdx  | * | mov rax, [rsp+448h+s] ",icc,1
"mov r14, rbp  | * | add rdx, 3FFh  ",icc,1
"mov rax, [rsp+448h+s]  | * | mov rsi, rax  ",icc,1
"add rdx, 3FFh   | * | mov r15, [rsp+448h+var_28] ",icc,1
"mov rsi, rax   | * | mov rbx, [rsp+448h+var_30] ",icc,1
"mov rbx, [rsp+448h+var_30]  | * | call _strncat ",icc,1
"mov rbp, [rsp+448h+var_38]  | * | lea rdi, [rsp+448h+dest]  ",icc,1
"lea rdi, [rsp+448h+dest]   | * | jmp loc_4036E7 ",icc,1
call _strlen  | * | loc_4037F8:  ,icc,1
"jmp loc_4036E7  | * | xor esi, esi ",icc,1
"loc_4037F8:   | * | mov edi, 1 ",icc,1
"xor eax, eax  | * | jmp loc_4036FD ",icc,1
call __libirc_print  | * | loc_40380D:  ,icc,1
"jmp loc_4036FD  | * | xor eax, eax ",icc,1
loc_40380D:   | * | call __intel_cpu_features_init ,icc,1
"xor eax, eax  | * | mov rax, cs:__intel_cpu_feature_indicator_ptr ",icc,1
"call __intel_cpu_features_init  | * | mov r12, [rax] ",icc,1
"mov rax, cs:__intel_cpu_feature_indicator_ptr  | * | test r12, r12 ",icc,1
"mov r12, [rax]  | * | jnz loc_4034D6 ",icc,1
"test r12, r12  | * | xor esi, esi ",icc,1
"jnz loc_4034D6  | * | mov edi, 1 ",icc,1
"call __libirc_print  | * | mov esi, 3Bh  ",icc,1
"mov esi, 3Bh   | * | xor eax, eax ",icc,1
"xor eax, eax  | * | jmp loc_403710 ",icc,1
call __libirc_print  | * | __intel_new_feature_proc_init endp ,icc,1
jmp loc_403710  | * | align 10h ,icc,1
__intel_new_feature_proc_init endp  | * | public __intel_sse2_strlen ,icc,1
align 10h  | * | __intel_sse2_strlen proc near  ,icc,1
"public __intel_sse2_strlen  | * | pxor xmm0, xmm0 ",icc,1
__intel_sse2_strlen proc near   | * | loc_403854:  ,icc,1
"pxor xmm0, xmm0  | * | add rax, 10h ",icc,1
"loc_403854:   | * | movdqa xmm1, xmmword ptr [rax] ",icc,1
"add rax, 10h  | * | pcmpeqb xmm1, xmm0 ",icc,1
"movdqa xmm1, xmmword ptr [rax]  | * | pmovmskb ecx, xmm1 ",icc,1
"pcmpeqb xmm1, xmm0  | * | test ecx, ecx ",icc,1
"pmovmskb ecx, xmm1  | * | jz short loc_403854 ",icc,1
"test ecx, ecx  | * | bsf ecx, ecx ",icc,1
"jz short loc_403854  | * | sub rcx, rdx ",icc,1
"bsf ecx, ecx  | * | add rax, rcx ",icc,1
"sub rcx, rdx  | * | retn ",icc,1
"add rax, rcx  | * | __intel_sse2_strlen endp ",icc,1
__intel_sse2_strlen endp  | * | public __intel_new_memset ,icc,1
align 20h  | * | __intel_new_memset proc near  ,icc,1
"public __intel_new_memset  | * | cmp rdx, 1 ",icc,1
"__intel_new_memset proc near   | * | mov rax, rdi ",icc,1
"cmp rdx, 1  | * | jnz short loc_40388D ",icc,1
"mov rax, rdi  | * | mov [rdi], sil ",icc,1
jnz short loc_40388D  | * | retn ,icc,1
"mov [rdi], sil  | * | loc_40388D:  ",icc,1
"retn  | * | mov r9, 101010101010101h ",icc,1
"loc_40388D:   | * | mov r8, rdx ",icc,1
"mov r9, 101010101010101h  | * | movzx rdx, sil ",icc,1
"mov r8, rdx  | * | imul rdx, r9 ",icc,1
"movzx rdx, sil  | * | cmp r8, 41h  ",icc,1
"imul rdx, r9  | * | jge loc_403CB0 ",icc,1
"cmp r8, 41h   | * | lea r11, jpt_4038BE ",icc,1
"jge loc_403CB0  | * | add rdi, r8 ",icc,1
"lea r11, jpt_4038BE  | * | mov rcx, ds:(jpt_4038BE - 4038D0h)[r11+r8*8]  ",icc,3
"add rdi, r8  | * | lea r11, [rcx+r11] ",icc,3
"mov rcx, ds:(jpt_4038BE - 4038D0h)[r11+r8*8]   | * | jmp r11  ",icc,3
"lea r11, [rcx+r11]  | * | locret_4038C1:  ",icc,1
jmp r11   | * | retn 0  ,icc,1
locret_4038C1:   | * | align 10h ,icc,1
"retn 0   | * | jpt_4038BE dq offset locret_4038C1 - 4038D0h, offset loc_403B74 - 4038D0h ",icc,1
"align 10h  | * | dq offset loc_403BC5 - 4038D0h, offset loc_403BF0 - 4038D0h  ",icc,1
"jpt_4038BE dq offset locret_4038C1 - 4038D0h, offset loc_403B74 - 4038D0h  | * | dq offset loc_403C1E - 4038D0h, offset loc_403C48 - 4038D0h ",icc,1
"dq offset loc_403BC5 - 4038D0h, offset loc_403BF0 - 4038D0h   | * | dq offset loc_403C75 - 4038D0h, offset loc_403CA3 - 4038D0h ",icc,1
"dq offset loc_403C1E - 4038D0h, offset loc_403C48 - 4038D0h  | * | dq offset loc_403B9A - 4038D0h, offset loc_403B70 - 4038D0h ",icc,1
"dq offset loc_403C75 - 4038D0h, offset loc_403CA3 - 4038D0h  | * | dq offset loc_403BC1 - 4038D0h, offset loc_403BEC - 4038D0h ",icc,1
"dq offset loc_403B9A - 4038D0h, offset loc_403B70 - 4038D0h  | * | dq offset loc_403C1A - 4038D0h, offset loc_403C44 - 4038D0h ",icc,1
"dq offset loc_403BC1 - 4038D0h, offset loc_403BEC - 4038D0h  | * | dq offset loc_403C71 - 4038D0h, offset loc_403C9F - 4038D0h ",icc,1
"dq offset loc_403C1A - 4038D0h, offset loc_403C44 - 4038D0h  | * | dq offset loc_403B96 - 4038D0h, offset loc_403B6C - 4038D0h ",icc,1
"dq offset loc_403C71 - 4038D0h, offset loc_403C9F - 4038D0h  | * | dq offset loc_403BBD - 4038D0h, offset loc_403BE8 - 4038D0h ",icc,1
"dq offset loc_403B96 - 4038D0h, offset loc_403B6C - 4038D0h  | * | dq offset loc_403C16 - 4038D0h, offset loc_403C40 - 4038D0h ",icc,1
"dq offset loc_403BBD - 4038D0h, offset loc_403BE8 - 4038D0h  | * | dq offset loc_403C6D - 4038D0h, offset loc_403C9B - 4038D0h ",icc,1
"dq offset loc_403C16 - 4038D0h, offset loc_403C40 - 4038D0h  | * | dq offset loc_403B92 - 4038D0h, offset loc_403B68 - 4038D0h ",icc,1
"dq offset loc_403C6D - 4038D0h, offset loc_403C9B - 4038D0h  | * | dq offset loc_403BB9 - 4038D0h, offset loc_403BE4 - 4038D0h ",icc,1
"dq offset loc_403B92 - 4038D0h, offset loc_403B68 - 4038D0h  | * | dq offset loc_403C12 - 4038D0h, offset loc_403C3C - 4038D0h ",icc,1
"dq offset loc_403BB9 - 4038D0h, offset loc_403BE4 - 4038D0h  | * | dq offset loc_403C69 - 4038D0h, offset loc_403C97 - 4038D0h ",icc,1
"dq offset loc_403C12 - 4038D0h, offset loc_403C3C - 4038D0h  | * | dq offset loc_403B8E - 4038D0h, offset loc_403B64 - 4038D0h ",icc,1
"dq offset loc_403C69 - 4038D0h, offset loc_403C97 - 4038D0h  | * | dq offset loc_403BB5 - 4038D0h, offset loc_403BE0 - 4038D0h ",icc,1
"dq offset loc_403B8E - 4038D0h, offset loc_403B64 - 4038D0h  | * | dq offset loc_403C0E - 4038D0h, offset loc_403C38 - 4038D0h ",icc,1
"dq offset loc_403BB5 - 4038D0h, offset loc_403BE0 - 4038D0h  | * | dq offset loc_403C65 - 4038D0h, offset loc_403C93 - 4038D0h ",icc,1
"dq offset loc_403C0E - 4038D0h, offset loc_403C38 - 4038D0h  | * | dq offset loc_403B8A - 4038D0h, offset loc_403B60 - 4038D0h ",icc,1
"dq offset loc_403C65 - 4038D0h, offset loc_403C93 - 4038D0h  | * | dq offset loc_403BB1 - 4038D0h, offset loc_403BDC - 4038D0h ",icc,1
"dq offset loc_403B8A - 4038D0h, offset loc_403B60 - 4038D0h  | * | dq offset loc_403C0A - 4038D0h, offset loc_403C34 - 4038D0h ",icc,1
"dq offset loc_403BB1 - 4038D0h, offset loc_403BDC - 4038D0h  | * | dq offset loc_403C61 - 4038D0h, offset loc_403C8F - 4038D0h ",icc,1
"dq offset loc_403C0A - 4038D0h, offset loc_403C34 - 4038D0h  | * | dq offset loc_403B86 - 4038D0h, offset loc_403B5C - 4038D0h ",icc,1
"dq offset loc_403C61 - 4038D0h, offset loc_403C8F - 4038D0h  | * | dq offset loc_403BAD - 4038D0h, offset loc_403BD8 - 4038D0h ",icc,1
"dq offset loc_403B86 - 4038D0h, offset loc_403B5C - 4038D0h  | * | dq offset loc_403C06 - 4038D0h, offset loc_403C30 - 4038D0h ",icc,1
"dq offset loc_403BAD - 4038D0h, offset loc_403BD8 - 4038D0h  | * | dq offset loc_403C5D - 4038D0h, offset loc_403C8B - 4038D0h ",icc,1
"dq offset loc_403C06 - 4038D0h, offset loc_403C30 - 4038D0h  | * | dq offset loc_403B82 - 4038D0h, offset loc_403B58 - 4038D0h ",icc,1
"dq offset loc_403C5D - 4038D0h, offset loc_403C8B - 4038D0h  | * | dq offset loc_403BA9 - 4038D0h, offset loc_403BD4 - 4038D0h ",icc,1
"dq offset loc_403B82 - 4038D0h, offset loc_403B58 - 4038D0h  | * | dq offset loc_403C02 - 4038D0h, offset loc_403C2C - 4038D0h ",icc,1
"dq offset loc_403BA9 - 4038D0h, offset loc_403BD4 - 4038D0h  | * | dq offset loc_403C59 - 4038D0h, offset loc_403C87 - 4038D0h ",icc,1
"dq offset loc_403C02 - 4038D0h, offset loc_403C2C - 4038D0h  | * | dq offset loc_403B7E - 4038D0h, offset loc_403B54 - 4038D0h ",icc,1
"dq offset loc_403C59 - 4038D0h, offset loc_403C87 - 4038D0h  | * | dq offset loc_403BA5 - 4038D0h, offset loc_403BD0 - 4038D0h ",icc,1
"dq offset loc_403B7E - 4038D0h, offset loc_403B54 - 4038D0h  | * | dq offset loc_403BFE - 4038D0h, offset loc_403C28 - 4038D0h ",icc,1
"dq offset loc_403BA5 - 4038D0h, offset loc_403BD0 - 4038D0h  | * | dq offset loc_403C55 - 4038D0h, offset loc_403C83 - 4038D0h ",icc,1
"dq offset loc_403BFE - 4038D0h, offset loc_403C28 - 4038D0h  | * | dq offset loc_403B7A - 4038D0h, offset loc_403B50 - 4038D0h ",icc,1
"dq offset loc_403C55 - 4038D0h, offset loc_403C83 - 4038D0h  | * | dq offset loc_403BA1 - 4038D0h, offset loc_403BCC - 4038D0h ",icc,1
"dq offset loc_403B7A - 4038D0h, offset loc_403B50 - 4038D0h  | * | dq offset loc_403BFA - 4038D0h, offset loc_403C24 - 4038D0h ",icc,1
"dq offset loc_403BA1 - 4038D0h, offset loc_403BCC - 4038D0h  | * | dq offset loc_403C51 - 4038D0h, offset loc_403C7F - 4038D0h ",icc,1
"dq offset loc_403BFA - 4038D0h, offset loc_403C24 - 4038D0h  | * | loc_403B50:  ",icc,1
"dq offset loc_403C51 - 4038D0h, offset loc_403C7F - 4038D0h  | * | mov [rdi-49h], rdx  ",icc,1
loc_403B50:   | * | loc_403B54:  ,icc,1
"mov [rdi-49h], rdx   | * | mov [rdi-41h], rdx  ",icc,1
loc_403B54:   | * | loc_403B58:  ,icc,1
"mov [rdi-41h], rdx   | * | mov [rdi-39h], rdx  ",icc,1
loc_403B58:   | * | loc_403B5C:  ,icc,1
"mov [rdi-39h], rdx   | * | mov [rdi-31h], rdx  ",icc,1
loc_403B5C:   | * | loc_403B60:  ,icc,1
"mov [rdi-31h], rdx   | * | mov [rdi-29h], rdx  ",icc,1
loc_403B60:   | * | loc_403B64:  ,icc,1
"mov [rdi-29h], rdx   | * | mov [rdi-21h], rdx  ",icc,1
loc_403B64:   | * | loc_403B68:  ,icc,1
"mov [rdi-21h], rdx   | * | mov [rdi-19h], rdx  ",icc,1
loc_403B68:   | * | loc_403B6C:  ,icc,1
"mov [rdi-19h], rdx   | * | mov [rdi-11h], rdx  ",icc,1
loc_403B6C:   | * | loc_403B70:  ,icc,1
"mov [rdi-11h], rdx   | * | mov [rdi-9], rdx  ",icc,1
loc_403B70:   | * | loc_403B74:  ,icc,1
"mov [rdi-9], rdx   | * | mov [rdi-1], dl  ",icc,1
loc_403B74:   | * | retn 0 ,icc,1
"mov [rdi-1], dl   | * | loc_403B7A:  ",icc,1
"retn 0  | * | mov [rdi-48h], rdx  ",icc,1
loc_403B7A:   | * | loc_403B7E:  ,icc,1
"mov [rdi-48h], rdx   | * | mov [rdi-40h], rdx  ",icc,1
loc_403B7E:   | * | loc_403B82:  ,icc,1
"mov [rdi-40h], rdx   | * | mov [rdi-38h], rdx  ",icc,1
loc_403B82:   | * | loc_403B86:  ,icc,1
"mov [rdi-38h], rdx   | * | mov [rdi-30h], rdx  ",icc,1
loc_403B86:   | * | loc_403B8A:  ,icc,1
"mov [rdi-30h], rdx   | * | mov [rdi-28h], rdx  ",icc,1
loc_403B8A:   | * | loc_403B8E:  ,icc,1
"mov [rdi-28h], rdx   | * | mov [rdi-20h], rdx  ",icc,1
loc_403B8E:   | * | loc_403B92:  ,icc,1
"mov [rdi-20h], rdx   | * | mov [rdi-18h], rdx  ",icc,1
loc_403B92:   | * | loc_403B96:  ,icc,1
"mov [rdi-18h], rdx   | * | mov [rdi-10h], rdx  ",icc,1
loc_403B96:   | * | loc_403B9A:  ,icc,1
"mov [rdi-10h], rdx   | * | mov [rdi-8], rdx  ",icc,1
loc_403B9A:   | * | retn 0 ,icc,1
"mov [rdi-8], rdx   | * | loc_403BA1:  ",icc,1
"retn 0  | * | mov [rdi-4Ah], rdx  ",icc,1
loc_403BA1:   | * | loc_403BA5:  ,icc,1
"mov [rdi-4Ah], rdx   | * | mov [rdi-42h], rdx  ",icc,1
loc_403BA5:   | * | loc_403BA9:  ,icc,1
"mov [rdi-42h], rdx   | * | mov [rdi-3Ah], rdx  ",icc,1
loc_403BA9:   | * | loc_403BAD:  ,icc,1
"mov [rdi-3Ah], rdx   | * | mov [rdi-32h], rdx  ",icc,1
loc_403BAD:   | * | loc_403BB1:  ,icc,1
"mov [rdi-32h], rdx   | * | mov [rdi-2Ah], rdx  ",icc,1
loc_403BB1:   | * | loc_403BB5:  ,icc,1
"mov [rdi-2Ah], rdx   | * | mov [rdi-22h], rdx  ",icc,1
loc_403BB5:   | * | loc_403BB9:  ,icc,1
"mov [rdi-22h], rdx   | * | mov [rdi-1Ah], rdx  ",icc,1
loc_403BB9:   | * | loc_403BBD:  ,icc,1
"mov [rdi-1Ah], rdx   | * | mov [rdi-12h], rdx  ",icc,1
loc_403BBD:   | * | loc_403BC1:  ,icc,1
"mov [rdi-12h], rdx   | * | mov [rdi-0Ah], rdx  ",icc,1
loc_403BC1:   | * | loc_403BC5:  ,icc,1
"mov [rdi-0Ah], rdx   | * | mov [rdi-2], dx  ",icc,1
loc_403BC5:   | * | retn 0 ,icc,1
"mov [rdi-2], dx   | * | loc_403BCC:  ",icc,1
"retn 0  | * | mov [rdi-4Bh], rdx  ",icc,1
loc_403BCC:   | * | loc_403BD0:  ,icc,1
"mov [rdi-4Bh], rdx   | * | mov [rdi-43h], rdx  ",icc,1
loc_403BD0:   | * | loc_403BD4:  ,icc,1
"mov [rdi-43h], rdx   | * | mov [rdi-3Bh], rdx  ",icc,1
loc_403BD4:   | * | loc_403BD8:  ,icc,1
"mov [rdi-3Bh], rdx   | * | mov [rdi-33h], rdx  ",icc,1
loc_403BD8:   | * | loc_403BDC:  ,icc,1
"mov [rdi-33h], rdx   | * | mov [rdi-2Bh], rdx  ",icc,1
loc_403BDC:   | * | loc_403BE0:  ,icc,1
"mov [rdi-2Bh], rdx   | * | mov [rdi-23h], rdx  ",icc,1
loc_403BE0:   | * | loc_403BE4:  ,icc,1
"mov [rdi-23h], rdx   | * | mov [rdi-1Bh], rdx  ",icc,1
loc_403BE4:   | * | loc_403BE8:  ,icc,1
"mov [rdi-1Bh], rdx   | * | mov [rdi-13h], rdx  ",icc,1
loc_403BE8:   | * | loc_403BEC:  ,icc,1
"mov [rdi-13h], rdx   | * | mov [rdi-0Bh], rdx  ",icc,1
loc_403BEC:   | * | loc_403BF0:  ,icc,1
"mov [rdi-0Bh], rdx   | * | mov [rdi-3], dx  ",icc,1
"loc_403BF0:   | * | mov [rdi-1], dl ",icc,1
"mov [rdi-3], dx   | * | retn 0 ",icc,2
"mov [rdi-1], dl  | * | loc_403BFA:  ",icc,1
"retn 0  | * | mov [rdi-4Ch], rdx  ",icc,1
loc_403BFA:   | * | loc_403BFE:  ,icc,1
"mov [rdi-4Ch], rdx   | * | mov [rdi-44h], rdx  ",icc,1
loc_403BFE:   | * | loc_403C02:  ,icc,1
"mov [rdi-44h], rdx   | * | mov [rdi-3Ch], rdx  ",icc,1
loc_403C02:   | * | loc_403C06:  ,icc,1
"mov [rdi-3Ch], rdx   | * | mov [rdi-34h], rdx  ",icc,1
loc_403C06:   | * | loc_403C0A:  ,icc,1
"mov [rdi-34h], rdx   | * | mov [rdi-2Ch], rdx  ",icc,1
loc_403C0A:   | * | loc_403C0E:  ,icc,1
"mov [rdi-2Ch], rdx   | * | mov [rdi-24h], rdx  ",icc,1
loc_403C0E:   | * | loc_403C12:  ,icc,1
"mov [rdi-24h], rdx   | * | mov [rdi-1Ch], rdx  ",icc,1
loc_403C12:   | * | loc_403C16:  ,icc,1
"mov [rdi-1Ch], rdx   | * | mov [rdi-14h], rdx  ",icc,1
loc_403C16:   | * | loc_403C1A:  ,icc,1
"mov [rdi-14h], rdx   | * | mov [rdi-0Ch], rdx  ",icc,1
loc_403C1A:   | * | loc_403C1E:  ,icc,1
"mov [rdi-0Ch], rdx   | * | mov [rdi-4], edx  ",icc,1
loc_403C1E:   | * | retn 0 ,icc,1
"mov [rdi-4], edx   | * | loc_403C24:  ",icc,1
"retn 0  | * | mov [rdi-4Dh], rdx  ",icc,1
loc_403C24:   | * | loc_403C28:  ,icc,1
"mov [rdi-4Dh], rdx   | * | mov [rdi-45h], rdx  ",icc,1
loc_403C28:   | * | loc_403C2C:  ,icc,1
"mov [rdi-45h], rdx   | * | mov [rdi-3Dh], rdx  ",icc,1
loc_403C2C:   | * | loc_403C30:  ,icc,1
"mov [rdi-3Dh], rdx   | * | mov [rdi-35h], rdx  ",icc,1
loc_403C30:   | * | loc_403C34:  ,icc,1
"mov [rdi-35h], rdx   | * | mov [rdi-2Dh], rdx  ",icc,1
loc_403C34:   | * | loc_403C38:  ,icc,1
"mov [rdi-2Dh], rdx   | * | mov [rdi-25h], rdx  ",icc,1
loc_403C38:   | * | loc_403C3C:  ,icc,1
"mov [rdi-25h], rdx   | * | mov [rdi-1Dh], rdx  ",icc,1
loc_403C3C:   | * | loc_403C40:  ,icc,1
"mov [rdi-1Dh], rdx   | * | mov [rdi-15h], rdx  ",icc,1
loc_403C40:   | * | loc_403C44:  ,icc,1
"mov [rdi-15h], rdx   | * | mov [rdi-0Dh], rdx  ",icc,1
loc_403C44:   | * | loc_403C48:  ,icc,1
"mov [rdi-0Dh], rdx   | * | mov [rdi-5], edx  ",icc,1
"loc_403C48:   | * | mov [rdi-1], dl ",icc,1
"mov [rdi-5], edx   | * | retn 0 ",icc,2
"mov [rdi-1], dl  | * | loc_403C51:  ",icc,1
"retn 0  | * | mov [rdi-4Eh], rdx  ",icc,1
loc_403C51:   | * | loc_403C55:  ,icc,1
"mov [rdi-4Eh], rdx   | * | mov [rdi-46h], rdx  ",icc,1
loc_403C55:   | * | loc_403C59:  ,icc,1
"mov [rdi-46h], rdx   | * | mov [rdi-3Eh], rdx  ",icc,1
loc_403C59:   | * | loc_403C5D:  ,icc,1
"mov [rdi-3Eh], rdx   | * | mov [rdi-36h], rdx  ",icc,1
loc_403C5D:   | * | loc_403C61:  ,icc,1
"mov [rdi-36h], rdx   | * | mov [rdi-2Eh], rdx  ",icc,1
loc_403C61:   | * | loc_403C65:  ,icc,1
"mov [rdi-2Eh], rdx   | * | mov [rdi-26h], rdx  ",icc,1
loc_403C65:   | * | loc_403C69:  ,icc,1
"mov [rdi-26h], rdx   | * | mov [rdi-1Eh], rdx  ",icc,1
loc_403C69:   | * | loc_403C6D:  ,icc,1
"mov [rdi-1Eh], rdx   | * | mov [rdi-16h], rdx  ",icc,1
loc_403C6D:   | * | loc_403C71:  ,icc,1
"mov [rdi-16h], rdx   | * | mov [rdi-0Eh], rdx  ",icc,1
loc_403C71:   | * | loc_403C75:  ,icc,1
"mov [rdi-0Eh], rdx   | * | mov [rdi-6], edx  ",icc,1
"loc_403C75:   | * | mov [rdi-2], dx ",icc,1
"mov [rdi-6], edx   | * | retn 0 ",icc,2
"mov [rdi-2], dx  | * | loc_403C7F:  ",icc,1
"retn 0  | * | mov [rdi-4Fh], rdx  ",icc,1
loc_403C7F:   | * | loc_403C83:  ,icc,1
"mov [rdi-4Fh], rdx   | * | mov [rdi-47h], rdx  ",icc,1
loc_403C83:   | * | loc_403C87:  ,icc,1
"mov [rdi-47h], rdx   | * | mov [rdi-3Fh], rdx  ",icc,1
loc_403C87:   | * | loc_403C8B:  ,icc,1
"mov [rdi-3Fh], rdx   | * | mov [rdi-37h], rdx  ",icc,1
loc_403C8B:   | * | loc_403C8F:  ,icc,1
"mov [rdi-37h], rdx   | * | mov [rdi-2Fh], rdx  ",icc,1
loc_403C8F:   | * | loc_403C93:  ,icc,1
"mov [rdi-2Fh], rdx   | * | mov [rdi-27h], rdx  ",icc,1
loc_403C93:   | * | loc_403C97:  ,icc,1
"mov [rdi-27h], rdx   | * | mov [rdi-1Fh], rdx  ",icc,1
loc_403C97:   | * | loc_403C9B:  ,icc,1
"mov [rdi-1Fh], rdx   | * | mov [rdi-17h], rdx  ",icc,1
loc_403C9B:   | * | loc_403C9F:  ,icc,1
"mov [rdi-17h], rdx   | * | mov [rdi-0Fh], rdx  ",icc,1
loc_403C9F:   | * | loc_403CA3:  ,icc,1
"mov [rdi-0Fh], rdx   | * | mov [rdi-7], edx  ",icc,1
"loc_403CA3:   | * | mov [rdi-3], dx ",icc,1
"mov [rdi-7], edx   | * | mov [rdi-1], dl ",icc,2
"mov [rdi-3], dx  | * | retn 0 ",icc,4
"mov [rdi-1], dl  | * | loc_403CB0:  ",icc,1
"retn 0  | * | cmp cs:__libirc_mem_ops_method, 2 ",icc,1
loc_403CB0:   | * | jl loc_4043A0 ,icc,1
"cmp cs:__libirc_mem_ops_method, 2  | * | movq xmm0, rdx ",icc,1
"jl loc_4043A0  | * | lea r11, jpt_403CF0 ",icc,1
"movq xmm0, rdx  | * | punpcklqdq xmm0, xmm0 ",icc,1
"lea r11, jpt_403CF0  | * | mov r10, 10h ",icc,1
"punpcklqdq xmm0, xmm0  | * | mov r9, rdi ",icc,1
"mov r10, 10h  | * | and r9, 0Fh ",icc,1
"mov r9, rdi  | * | sub r10, r9 ",icc,1
"and r9, 0Fh  | * | and r10, 0Fh  ",icc,1
"sub r10, r9  | * | add rdi, r10 ",icc,1
"and r10, 0Fh   | * | sub r8, r10 ",icc,1
"add rdi, r10  | * | mov rcx, ds:(jpt_403CF0 - 403D00h)[r11+r10*8] ",icc,1
"sub r8, r10  | * | lea r11, [rcx+r11] ",icc,1
"mov rcx, ds:(jpt_403CF0 - 403D00h)[r11+r10*8]  | * | jmp r11  ",icc,1
"lea r11, [rcx+r11]  | * | align 20h ",icc,3
jmp r11   | * | jpt_403CF0 dq offset loc_403D92 - 403D00h ,icc,1
align 20h  | * | dq offset loc_403D9D - 403D00h  ,icc,1
jpt_403CF0 dq offset loc_403D92 - 403D00h  | * | dq offset loc_403DB2 - 403D00h ,icc,1
dq offset loc_403D9D - 403D00h   | * | dq offset loc_403DAF - 403D00h ,icc,1
dq offset loc_403DB2 - 403D00h  | * | dq offset loc_403DBB - 403D00h ,icc,1
dq offset loc_403DAF - 403D00h  | * | dq offset loc_403DB8 - 403D00h ,icc,1
dq offset loc_403DBB - 403D00h  | * | dq offset loc_403DD3 - 403D00h ,icc,1
dq offset loc_403DB8 - 403D00h  | * | dq offset loc_403DD0 - 403D00h ,icc,1
dq offset loc_403DD3 - 403D00h  | * | dq offset loc_403D8E - 403D00h ,icc,1
dq offset loc_403DD0 - 403D00h  | * | dq offset loc_403D94 - 403D00h ,icc,1
dq offset loc_403D8E - 403D00h  | * | dq offset loc_403DA5 - 403D00h ,icc,1
dq offset loc_403D94 - 403D00h  | * | dq offset loc_403DA2 - 403D00h ,icc,1
dq offset loc_403DA5 - 403D00h  | * | dq offset loc_403D8B - 403D00h ,icc,1
dq offset loc_403DA2 - 403D00h  | * | dq offset loc_403D88 - 403D00h ,icc,1
dq offset loc_403D8B - 403D00h  | * | dq offset loc_403DC3 - 403D00h ,icc,1
dq offset loc_403D88 - 403D00h  | * | dq offset loc_403DC0 - 403D00h ,icc,1
dq offset loc_403DC3 - 403D00h  | * | dq 92h ,icc,1
dq offset loc_403DC0 - 403D00h  | * | loc_403D88:  ,icc,1
"dq 92h  | * | mov [rdi-0Dh], dl  ",icc,1
loc_403D88:   | * | loc_403D8B:  ,icc,1
"mov [rdi-0Dh], dl   | * | mov [rdi-0Ch], edx  ",icc,1
loc_403D8B:   | * | loc_403D8E:  ,icc,1
"mov [rdi-0Ch], edx   | * | mov [rdi-8], rdx  ",icc,1
loc_403D8E:   | * | loc_403D92:  ,icc,1
"mov [rdi-8], rdx   | * | jmp short loc_403DDC  ",icc,1
loc_403D92:   | * | loc_403D94:  ,icc,1
"jmp short loc_403DDC   | * | mov [rdi-9], dl  ",icc,1
"loc_403D94:   | * | mov [rdi-8], rdx ",icc,1
"mov [rdi-9], dl   | * | jmp short loc_403DDC ",icc,1
"mov [rdi-8], rdx  | * | loc_403D9D:  ",icc,1
"jmp short loc_403DDC  | * | mov [rdi-1], dl  ",icc,1
loc_403D9D:   | * | jmp short loc_403DDC ,icc,1
"mov [rdi-1], dl   | * | loc_403DA2:  ",icc,1
"jmp short loc_403DDC  | * | mov [rdi-0Bh], dl  ",icc,1
loc_403DA2:   | * | loc_403DA5:  ,icc,1
"mov [rdi-0Bh], dl   | * | mov [rdi-0Ah], dx  ",icc,1
"loc_403DA5:   | * | mov [rdi-8], rdx ",icc,1
"mov [rdi-0Ah], dx   | * | jmp short loc_403DDC ",icc,1
"mov [rdi-8], rdx  | * | loc_403DAF:  ",icc,1
"jmp short loc_403DDC  | * | mov [rdi-3], dl  ",icc,1
loc_403DAF:   | * | loc_403DB2:  ,icc,1
"mov [rdi-3], dl   | * | mov [rdi-2], dx  ",icc,1
loc_403DB2:   | * | jmp short loc_403DDC ,icc,1
"mov [rdi-2], dx   | * | loc_403DB8:  ",icc,1
"jmp short loc_403DDC  | * | mov [rdi-5], dl  ",icc,1
loc_403DB8:   | * | loc_403DBB:  ,icc,1
"mov [rdi-5], dl   | * | mov [rdi-4], edx  ",icc,1
loc_403DBB:   | * | jmp short loc_403DDC ,icc,1
"mov [rdi-4], edx   | * | loc_403DC0:  ",icc,1
"jmp short loc_403DDC  | * | mov [rdi-0Fh], dl  ",icc,1
loc_403DC0:   | * | loc_403DC3:  ,icc,1
"mov [rdi-0Fh], dl   | * | mov [rdi-0Eh], dx  ",icc,1
"loc_403DC3:   | * | mov [rdi-0Ch], edx ",icc,1
"mov [rdi-0Eh], dx   | * | mov [rdi-8], rdx ",icc,1
"mov [rdi-0Ch], edx  | * | jmp short loc_403DDC ",icc,1
"mov [rdi-8], rdx  | * | loc_403DD0:  ",icc,1
"jmp short loc_403DDC  | * | mov [rdi-7], dl  ",icc,1
loc_403DD0:   | * | loc_403DD3:  ,icc,1
"mov [rdi-7], dl   | * | mov [rdi-6], dx  ",icc,1
"loc_403DD3:   | * | mov [rdi-4], edx ",icc,1
"mov [rdi-6], dx   | * | jmp short $+2 ",icc,1
"mov [rdi-4], edx  | * | loc_403DDC:  ",icc,1
"jmp short $+2  | * | lea r9, jpt_403DFB ",icc,1
"loc_403DDC:   | * | cmp r8, 0B0h ",icc,1
"lea r9, jpt_403DFB  | * | jge loc_4042C9 ",icc,1
"cmp r8, 0B0h  | * | add rdi, r8 ",icc,1
"jge loc_4042C9  | * | mov rcx, ds:(jpt_403DFB - 404460h)[r9+r8*8]  ",icc,1
"add rdi, r8  | * | lea r9, [rcx+r9] ",icc,1
"mov rcx, ds:(jpt_403DFB - 404460h)[r9+r8*8]   | * | jmp r9  ",icc,1
"lea r9, [rcx+r9]  | * | align 20h ",icc,1
jmp r9   | * | loc_403E00:  ,icc,1
"align 20h  | * | movdqa xmmword ptr [rdi-0B0h], xmm0  ",icc,1
loc_403E00:   | * | loc_403E08:  ,icc,1
"movdqa xmmword ptr [rdi-0B0h], xmm0   | * | movdqa xmmword ptr [rdi-0A0h], xmm0  ",icc,1
loc_403E08:   | * | loc_403E10:  ,icc,1
"movdqa xmmword ptr [rdi-0A0h], xmm0   | * | movdqa xmmword ptr [rdi-90h], xmm0  ",icc,1
loc_403E10:   | * | loc_403E18:  ,icc,1
"movdqa xmmword ptr [rdi-90h], xmm0   | * | movdqa xmmword ptr [rdi-80h], xmm0  ",icc,1
loc_403E18:   | * | loc_403E1D:  ,icc,1
"movdqa xmmword ptr [rdi-80h], xmm0   | * | movdqa xmmword ptr [rdi-70h], xmm0  ",icc,1
loc_403E1D:   | * | loc_403E22:  ,icc,1
"movdqa xmmword ptr [rdi-70h], xmm0   | * | movdqa xmmword ptr [rdi-60h], xmm0  ",icc,1
loc_403E22:   | * | loc_403E27:  ,icc,1
"movdqa xmmword ptr [rdi-60h], xmm0   | * | movdqa xmmword ptr [rdi-50h], xmm0  ",icc,1
loc_403E27:   | * | loc_403E2C:  ,icc,1
"movdqa xmmword ptr [rdi-50h], xmm0   | * | movdqa xmmword ptr [rdi-40h], xmm0  ",icc,1
loc_403E2C:   | * | loc_403E31:  ,icc,1
"movdqa xmmword ptr [rdi-40h], xmm0   | * | movdqa xmmword ptr [rdi-30h], xmm0  ",icc,1
loc_403E31:   | * | loc_403E36:  ,icc,1
"movdqa xmmword ptr [rdi-30h], xmm0   | * | movdqa xmmword ptr [rdi-20h], xmm0  ",icc,1
loc_403E36:   | * | loc_403E3B:  ,icc,1
"movdqa xmmword ptr [rdi-20h], xmm0   | * | movdqa xmmword ptr [rdi-10h], xmm0  ",icc,1
loc_403E3B:   | * | locret_403E40:  ,icc,1
"movdqa xmmword ptr [rdi-10h], xmm0   | * | retn  ",icc,1
locret_403E40:   | * | loc_403E41:  ,icc,1
"retn   | * | movdqa xmmword ptr [rdi-0B1h], xmm0  ",icc,1
loc_403E41:   | * | loc_403E49:  ,icc,1
"movdqa xmmword ptr [rdi-0B1h], xmm0   | * | movdqa xmmword ptr [rdi-0A1h], xmm0  ",icc,1
loc_403E49:   | * | loc_403E51:  ,icc,1
"movdqa xmmword ptr [rdi-0A1h], xmm0   | * | movdqa xmmword ptr [rdi-91h], xmm0  ",icc,1
loc_403E51:   | * | loc_403E59:  ,icc,1
"movdqa xmmword ptr [rdi-91h], xmm0   | * | movdqa xmmword ptr [rdi-81h], xmm0  ",icc,1
loc_403E59:   | * | loc_403E61:  ,icc,1
"movdqa xmmword ptr [rdi-81h], xmm0   | * | movdqa xmmword ptr [rdi-71h], xmm0  ",icc,1
loc_403E61:   | * | loc_403E66:  ,icc,1
"movdqa xmmword ptr [rdi-71h], xmm0   | * | movdqa xmmword ptr [rdi-61h], xmm0  ",icc,1
loc_403E66:   | * | loc_403E6B:  ,icc,1
"movdqa xmmword ptr [rdi-61h], xmm0   | * | movdqa xmmword ptr [rdi-51h], xmm0  ",icc,1
loc_403E6B:   | * | loc_403E70:  ,icc,1
"movdqa xmmword ptr [rdi-51h], xmm0   | * | movdqa xmmword ptr [rdi-41h], xmm0  ",icc,1
loc_403E70:   | * | loc_403E75:  ,icc,1
"movdqa xmmword ptr [rdi-41h], xmm0   | * | movdqa xmmword ptr [rdi-31h], xmm0  ",icc,1
loc_403E75:   | * | loc_403E7A:  ,icc,1
"movdqa xmmword ptr [rdi-31h], xmm0   | * | movdqa xmmword ptr [rdi-21h], xmm0  ",icc,1
loc_403E7A:   | * | loc_403E7F:  ,icc,1
"movdqa xmmword ptr [rdi-21h], xmm0   | * | movdqa xmmword ptr [rdi-11h], xmm0  ",icc,1
loc_403E7F:   | * | loc_403E84:  ,icc,1
"movdqa xmmword ptr [rdi-11h], xmm0   | * | mov [rdi-1], dl  ",icc,1
loc_403E84:   | * | retn ,icc,1
"mov [rdi-1], dl   | * | loc_403E88:  ",icc,1
"retn  | * | movdqa xmmword ptr [rdi-0B2h], xmm0  ",icc,1
loc_403E88:   | * | loc_403E90:  ,icc,1
"movdqa xmmword ptr [rdi-0B2h], xmm0   | * | movdqa xmmword ptr [rdi-0A2h], xmm0  ",icc,1
loc_403E90:   | * | loc_403E98:  ,icc,1
"movdqa xmmword ptr [rdi-0A2h], xmm0   | * | movdqa xmmword ptr [rdi-92h], xmm0  ",icc,1
loc_403E98:   | * | loc_403EA0:  ,icc,1
"movdqa xmmword ptr [rdi-92h], xmm0   | * | movdqa xmmword ptr [rdi-82h], xmm0  ",icc,1
loc_403EA0:   | * | loc_403EA8:  ,icc,1
"movdqa xmmword ptr [rdi-82h], xmm0   | * | movdqa xmmword ptr [rdi-72h], xmm0  ",icc,1
loc_403EA8:   | * | loc_403EAD:  ,icc,1
"movdqa xmmword ptr [rdi-72h], xmm0   | * | movdqa xmmword ptr [rdi-62h], xmm0  ",icc,1
loc_403EAD:   | * | loc_403EB2:  ,icc,1
"movdqa xmmword ptr [rdi-62h], xmm0   | * | movdqa xmmword ptr [rdi-52h], xmm0  ",icc,1
loc_403EB2:   | * | loc_403EB7:  ,icc,1
"movdqa xmmword ptr [rdi-52h], xmm0   | * | movdqa xmmword ptr [rdi-42h], xmm0  ",icc,1
loc_403EB7:   | * | loc_403EBC:  ,icc,1
"movdqa xmmword ptr [rdi-42h], xmm0   | * | movdqa xmmword ptr [rdi-32h], xmm0  ",icc,1
loc_403EBC:   | * | loc_403EC1:  ,icc,1
"movdqa xmmword ptr [rdi-32h], xmm0   | * | movdqa xmmword ptr [rdi-22h], xmm0  ",icc,1
loc_403EC1:   | * | loc_403EC6:  ,icc,1
"movdqa xmmword ptr [rdi-22h], xmm0   | * | movdqa xmmword ptr [rdi-12h], xmm0  ",icc,1
loc_403EC6:   | * | loc_403ECB:  ,icc,1
"movdqa xmmword ptr [rdi-12h], xmm0   | * | mov [rdi-2], dx  ",icc,1
loc_403ECB:   | * | retn 0 ,icc,1
"mov [rdi-2], dx   | * | loc_403ED2:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0B3h], xmm0  ",icc,1
loc_403ED2:   | * | loc_403EDA:  ,icc,1
"movdqa xmmword ptr [rdi-0B3h], xmm0   | * | movdqa xmmword ptr [rdi-0A3h], xmm0  ",icc,1
loc_403EDA:   | * | loc_403EE2:  ,icc,1
"movdqa xmmword ptr [rdi-0A3h], xmm0   | * | movdqa xmmword ptr [rdi-93h], xmm0  ",icc,1
loc_403EE2:   | * | loc_403EEA:  ,icc,1
"movdqa xmmword ptr [rdi-93h], xmm0   | * | movdqa xmmword ptr [rdi-83h], xmm0  ",icc,1
loc_403EEA:   | * | loc_403EF2:  ,icc,1
"movdqa xmmword ptr [rdi-83h], xmm0   | * | movdqa xmmword ptr [rdi-73h], xmm0  ",icc,1
loc_403EF2:   | * | loc_403EF7:  ,icc,1
"movdqa xmmword ptr [rdi-73h], xmm0   | * | movdqa xmmword ptr [rdi-63h], xmm0  ",icc,1
loc_403EF7:   | * | loc_403EFC:  ,icc,1
"movdqa xmmword ptr [rdi-63h], xmm0   | * | movdqa xmmword ptr [rdi-53h], xmm0  ",icc,1
loc_403EFC:   | * | loc_403F01:  ,icc,1
"movdqa xmmword ptr [rdi-53h], xmm0   | * | movdqa xmmword ptr [rdi-43h], xmm0  ",icc,1
loc_403F01:   | * | loc_403F06:  ,icc,1
"movdqa xmmword ptr [rdi-43h], xmm0   | * | movdqa xmmword ptr [rdi-33h], xmm0  ",icc,1
loc_403F06:   | * | loc_403F0B:  ,icc,1
"movdqa xmmword ptr [rdi-33h], xmm0   | * | movdqa xmmword ptr [rdi-23h], xmm0  ",icc,1
loc_403F0B:   | * | loc_403F10:  ,icc,1
"movdqa xmmword ptr [rdi-23h], xmm0   | * | movdqa xmmword ptr [rdi-13h], xmm0  ",icc,1
loc_403F10:   | * | loc_403F15:  ,icc,1
"movdqa xmmword ptr [rdi-13h], xmm0   | * | mov [rdi-3], dx  ",icc,1
"loc_403F15:   | * | mov [rdi-1], dl ",icc,1
"mov [rdi-1], dl  | * | loc_403F1F:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0B4h], xmm0  ",icc,1
loc_403F1F:   | * | loc_403F27:  ,icc,1
"movdqa xmmword ptr [rdi-0B4h], xmm0   | * | movdqa xmmword ptr [rdi-0A4h], xmm0  ",icc,1
loc_403F27:   | * | loc_403F2F:  ,icc,1
"movdqa xmmword ptr [rdi-0A4h], xmm0   | * | movdqa xmmword ptr [rdi-94h], xmm0  ",icc,1
loc_403F2F:   | * | loc_403F37:  ,icc,1
"movdqa xmmword ptr [rdi-94h], xmm0   | * | movdqa xmmword ptr [rdi-84h], xmm0  ",icc,1
loc_403F37:   | * | loc_403F3F:  ,icc,1
"movdqa xmmword ptr [rdi-84h], xmm0   | * | movdqa xmmword ptr [rdi-74h], xmm0  ",icc,1
loc_403F3F:   | * | loc_403F44:  ,icc,1
"movdqa xmmword ptr [rdi-74h], xmm0   | * | movdqa xmmword ptr [rdi-64h], xmm0  ",icc,1
loc_403F44:   | * | loc_403F49:  ,icc,1
"movdqa xmmword ptr [rdi-64h], xmm0   | * | movdqa xmmword ptr [rdi-54h], xmm0  ",icc,1
loc_403F49:   | * | loc_403F4E:  ,icc,1
"movdqa xmmword ptr [rdi-54h], xmm0   | * | movdqa xmmword ptr [rdi-44h], xmm0  ",icc,1
loc_403F4E:   | * | loc_403F53:  ,icc,1
"movdqa xmmword ptr [rdi-44h], xmm0   | * | movdqa xmmword ptr [rdi-34h], xmm0  ",icc,1
loc_403F53:   | * | loc_403F58:  ,icc,1
"movdqa xmmword ptr [rdi-34h], xmm0   | * | movdqa xmmword ptr [rdi-24h], xmm0  ",icc,1
loc_403F58:   | * | loc_403F5D:  ,icc,1
"movdqa xmmword ptr [rdi-24h], xmm0   | * | movdqa xmmword ptr [rdi-14h], xmm0  ",icc,1
loc_403F5D:   | * | loc_403F62:  ,icc,1
"movdqa xmmword ptr [rdi-14h], xmm0   | * | mov [rdi-4], edx  ",icc,1
loc_403F62:   | * | retn 0 ,icc,1
"mov [rdi-4], edx   | * | loc_403F68:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0B5h], xmm0  ",icc,1
loc_403F68:   | * | loc_403F70:  ,icc,1
"movdqa xmmword ptr [rdi-0B5h], xmm0   | * | movdqa xmmword ptr [rdi-0A5h], xmm0  ",icc,1
loc_403F70:   | * | loc_403F78:  ,icc,1
"movdqa xmmword ptr [rdi-0A5h], xmm0   | * | movdqa xmmword ptr [rdi-95h], xmm0  ",icc,1
loc_403F78:   | * | loc_403F80:  ,icc,1
"movdqa xmmword ptr [rdi-95h], xmm0   | * | movdqa xmmword ptr [rdi-85h], xmm0  ",icc,1
loc_403F80:   | * | loc_403F88:  ,icc,1
"movdqa xmmword ptr [rdi-85h], xmm0   | * | movdqa xmmword ptr [rdi-75h], xmm0  ",icc,1
loc_403F88:   | * | loc_403F8D:  ,icc,1
"movdqa xmmword ptr [rdi-75h], xmm0   | * | movdqa xmmword ptr [rdi-65h], xmm0  ",icc,1
loc_403F8D:   | * | loc_403F92:  ,icc,1
"movdqa xmmword ptr [rdi-65h], xmm0   | * | movdqa xmmword ptr [rdi-55h], xmm0  ",icc,1
loc_403F92:   | * | loc_403F97:  ,icc,1
"movdqa xmmword ptr [rdi-55h], xmm0   | * | movdqa xmmword ptr [rdi-45h], xmm0  ",icc,1
loc_403F97:   | * | loc_403F9C:  ,icc,1
"movdqa xmmword ptr [rdi-45h], xmm0   | * | movdqa xmmword ptr [rdi-35h], xmm0  ",icc,1
loc_403F9C:   | * | loc_403FA1:  ,icc,1
"movdqa xmmword ptr [rdi-35h], xmm0   | * | movdqa xmmword ptr [rdi-25h], xmm0  ",icc,1
loc_403FA1:   | * | loc_403FA6:  ,icc,1
"movdqa xmmword ptr [rdi-25h], xmm0   | * | movdqa xmmword ptr [rdi-15h], xmm0  ",icc,1
loc_403FA6:   | * | loc_403FAB:  ,icc,1
"movdqa xmmword ptr [rdi-15h], xmm0   | * | mov [rdi-5], edx  ",icc,1
"loc_403FAB:   | * | mov [rdi-1], dl ",icc,1
"mov [rdi-1], dl  | * | loc_403FB4:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0B6h], xmm0  ",icc,1
loc_403FB4:   | * | loc_403FBC:  ,icc,1
"movdqa xmmword ptr [rdi-0B6h], xmm0   | * | movdqa xmmword ptr [rdi-0A6h], xmm0  ",icc,1
loc_403FBC:   | * | loc_403FC4:  ,icc,1
"movdqa xmmword ptr [rdi-0A6h], xmm0   | * | movdqa xmmword ptr [rdi-96h], xmm0  ",icc,1
loc_403FC4:   | * | loc_403FCC:  ,icc,1
"movdqa xmmword ptr [rdi-96h], xmm0   | * | movdqa xmmword ptr [rdi-86h], xmm0  ",icc,1
loc_403FCC:   | * | loc_403FD4:  ,icc,1
"movdqa xmmword ptr [rdi-86h], xmm0   | * | movdqa xmmword ptr [rdi-76h], xmm0  ",icc,1
loc_403FD4:   | * | loc_403FD9:  ,icc,1
"movdqa xmmword ptr [rdi-76h], xmm0   | * | movdqa xmmword ptr [rdi-66h], xmm0  ",icc,1
loc_403FD9:   | * | loc_403FDE:  ,icc,1
"movdqa xmmword ptr [rdi-66h], xmm0   | * | movdqa xmmword ptr [rdi-56h], xmm0  ",icc,1
loc_403FDE:   | * | loc_403FE3:  ,icc,1
"movdqa xmmword ptr [rdi-56h], xmm0   | * | movdqa xmmword ptr [rdi-46h], xmm0  ",icc,1
loc_403FE3:   | * | loc_403FE8:  ,icc,1
"movdqa xmmword ptr [rdi-46h], xmm0   | * | movdqa xmmword ptr [rdi-36h], xmm0  ",icc,1
loc_403FE8:   | * | loc_403FED:  ,icc,1
"movdqa xmmword ptr [rdi-36h], xmm0   | * | movdqa xmmword ptr [rdi-26h], xmm0  ",icc,1
loc_403FED:   | * | loc_403FF2:  ,icc,1
"movdqa xmmword ptr [rdi-26h], xmm0   | * | movdqa xmmword ptr [rdi-16h], xmm0  ",icc,1
loc_403FF2:   | * | loc_403FF7:  ,icc,1
"movdqa xmmword ptr [rdi-16h], xmm0   | * | mov [rdi-6], edx  ",icc,1
"loc_403FF7:   | * | mov [rdi-2], dx ",icc,1
"mov [rdi-2], dx  | * | loc_404001:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0B7h], xmm0  ",icc,1
loc_404001:   | * | loc_404009:  ,icc,1
"movdqa xmmword ptr [rdi-0B7h], xmm0   | * | movdqa xmmword ptr [rdi-0A7h], xmm0  ",icc,1
loc_404009:   | * | loc_404011:  ,icc,1
"movdqa xmmword ptr [rdi-0A7h], xmm0   | * | movdqa xmmword ptr [rdi-97h], xmm0  ",icc,1
loc_404011:   | * | loc_404019:  ,icc,1
"movdqa xmmword ptr [rdi-97h], xmm0   | * | movdqa xmmword ptr [rdi-87h], xmm0  ",icc,1
loc_404019:   | * | loc_404021:  ,icc,1
"movdqa xmmword ptr [rdi-87h], xmm0   | * | movdqa xmmword ptr [rdi-77h], xmm0  ",icc,1
loc_404021:   | * | loc_404026:  ,icc,1
"movdqa xmmword ptr [rdi-77h], xmm0   | * | movdqa xmmword ptr [rdi-67h], xmm0  ",icc,1
loc_404026:   | * | loc_40402B:  ,icc,1
"movdqa xmmword ptr [rdi-67h], xmm0   | * | movdqa xmmword ptr [rdi-57h], xmm0  ",icc,1
loc_40402B:   | * | loc_404030:  ,icc,1
"movdqa xmmword ptr [rdi-57h], xmm0   | * | movdqa xmmword ptr [rdi-47h], xmm0  ",icc,1
loc_404030:   | * | loc_404035:  ,icc,1
"movdqa xmmword ptr [rdi-47h], xmm0   | * | movdqa xmmword ptr [rdi-37h], xmm0  ",icc,1
loc_404035:   | * | loc_40403A:  ,icc,1
"movdqa xmmword ptr [rdi-37h], xmm0   | * | movdqa xmmword ptr [rdi-27h], xmm0  ",icc,1
loc_40403A:   | * | loc_40403F:  ,icc,1
"movdqa xmmword ptr [rdi-27h], xmm0   | * | movdqa xmmword ptr [rdi-17h], xmm0  ",icc,1
loc_40403F:   | * | loc_404044:  ,icc,1
"movdqa xmmword ptr [rdi-17h], xmm0   | * | mov [rdi-7], edx  ",icc,1
"loc_404044:   | * | mov [rdi-3], dx ",icc,1
"mov [rdi-1], dl  | * | loc_404051:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0B8h], xmm0  ",icc,1
loc_404051:   | * | loc_404059:  ,icc,1
"movdqa xmmword ptr [rdi-0B8h], xmm0   | * | movdqa xmmword ptr [rdi-0A8h], xmm0  ",icc,1
loc_404059:   | * | loc_404061:  ,icc,1
"movdqa xmmword ptr [rdi-0A8h], xmm0   | * | movdqa xmmword ptr [rdi-98h], xmm0  ",icc,1
loc_404061:   | * | loc_404069:  ,icc,1
"movdqa xmmword ptr [rdi-98h], xmm0   | * | movdqa xmmword ptr [rdi-88h], xmm0  ",icc,1
loc_404069:   | * | loc_404071:  ,icc,1
"movdqa xmmword ptr [rdi-88h], xmm0   | * | movdqa xmmword ptr [rdi-78h], xmm0  ",icc,1
loc_404071:   | * | loc_404076:  ,icc,1
"movdqa xmmword ptr [rdi-78h], xmm0   | * | movdqa xmmword ptr [rdi-68h], xmm0  ",icc,1
loc_404076:   | * | loc_40407B:  ,icc,1
"movdqa xmmword ptr [rdi-68h], xmm0   | * | movdqa xmmword ptr [rdi-58h], xmm0  ",icc,1
loc_40407B:   | * | loc_404080:  ,icc,1
"movdqa xmmword ptr [rdi-58h], xmm0   | * | movdqa xmmword ptr [rdi-48h], xmm0  ",icc,1
loc_404080:   | * | loc_404085:  ,icc,1
"movdqa xmmword ptr [rdi-48h], xmm0   | * | movdqa xmmword ptr [rdi-38h], xmm0  ",icc,1
loc_404085:   | * | loc_40408A:  ,icc,1
"movdqa xmmword ptr [rdi-38h], xmm0   | * | movdqa xmmword ptr [rdi-28h], xmm0  ",icc,1
loc_40408A:   | * | loc_40408F:  ,icc,1
"movdqa xmmword ptr [rdi-28h], xmm0   | * | movdqa xmmword ptr [rdi-18h], xmm0  ",icc,1
loc_40408F:   | * | loc_404094:  ,icc,1
"movdqa xmmword ptr [rdi-18h], xmm0   | * | mov [rdi-8], rdx  ",icc,1
loc_404094:   | * | retn 0 ,icc,1
"mov [rdi-8], rdx   | * | loc_40409B:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0B9h], xmm0  ",icc,1
loc_40409B:   | * | loc_4040A3:  ,icc,1
"movdqa xmmword ptr [rdi-0B9h], xmm0   | * | movdqa xmmword ptr [rdi-0A9h], xmm0  ",icc,1
loc_4040A3:   | * | loc_4040AB:  ,icc,1
"movdqa xmmword ptr [rdi-0A9h], xmm0   | * | movdqa xmmword ptr [rdi-99h], xmm0  ",icc,1
loc_4040AB:   | * | loc_4040B3:  ,icc,1
"movdqa xmmword ptr [rdi-99h], xmm0   | * | movdqa xmmword ptr [rdi-89h], xmm0  ",icc,1
loc_4040B3:   | * | loc_4040BB:  ,icc,1
"movdqa xmmword ptr [rdi-89h], xmm0   | * | movdqa xmmword ptr [rdi-79h], xmm0  ",icc,1
loc_4040BB:   | * | loc_4040C0:  ,icc,1
"movdqa xmmword ptr [rdi-79h], xmm0   | * | movdqa xmmword ptr [rdi-69h], xmm0  ",icc,1
loc_4040C0:   | * | loc_4040C5:  ,icc,1
"movdqa xmmword ptr [rdi-69h], xmm0   | * | movdqa xmmword ptr [rdi-59h], xmm0  ",icc,1
loc_4040C5:   | * | loc_4040CA:  ,icc,1
"movdqa xmmword ptr [rdi-59h], xmm0   | * | movdqa xmmword ptr [rdi-49h], xmm0  ",icc,1
loc_4040CA:   | * | loc_4040CF:  ,icc,1
"movdqa xmmword ptr [rdi-49h], xmm0   | * | movdqa xmmword ptr [rdi-39h], xmm0  ",icc,1
loc_4040CF:   | * | loc_4040D4:  ,icc,1
"movdqa xmmword ptr [rdi-39h], xmm0   | * | movdqa xmmword ptr [rdi-29h], xmm0  ",icc,1
loc_4040D4:   | * | loc_4040D9:  ,icc,1
"movdqa xmmword ptr [rdi-29h], xmm0   | * | movdqa xmmword ptr [rdi-19h], xmm0  ",icc,1
loc_4040D9:   | * | loc_4040DE:  ,icc,1
"movdqa xmmword ptr [rdi-19h], xmm0   | * | mov [rdi-9], rdx  ",icc,1
"loc_4040DE:   | * | mov [rdi-1], dl ",icc,1
"mov [rdi-9], rdx   | * | retn 0 ",icc,1
"mov [rdi-1], dl  | * | loc_4040E8:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0BAh], xmm0  ",icc,1
loc_4040E8:   | * | loc_4040F0:  ,icc,1
"movdqa xmmword ptr [rdi-0BAh], xmm0   | * | movdqa xmmword ptr [rdi-0AAh], xmm0  ",icc,1
loc_4040F0:   | * | loc_4040F8:  ,icc,1
"movdqa xmmword ptr [rdi-0AAh], xmm0   | * | movdqa xmmword ptr [rdi-9Ah], xmm0  ",icc,1
loc_4040F8:   | * | loc_404100:  ,icc,1
"movdqa xmmword ptr [rdi-9Ah], xmm0   | * | movdqa xmmword ptr [rdi-8Ah], xmm0  ",icc,1
loc_404100:   | * | loc_404108:  ,icc,1
"movdqa xmmword ptr [rdi-8Ah], xmm0   | * | movdqa xmmword ptr [rdi-7Ah], xmm0  ",icc,1
loc_404108:   | * | loc_40410D:  ,icc,1
"movdqa xmmword ptr [rdi-7Ah], xmm0   | * | movdqa xmmword ptr [rdi-6Ah], xmm0  ",icc,1
loc_40410D:   | * | loc_404112:  ,icc,1
"movdqa xmmword ptr [rdi-6Ah], xmm0   | * | movdqa xmmword ptr [rdi-5Ah], xmm0  ",icc,1
loc_404112:   | * | loc_404117:  ,icc,1
"movdqa xmmword ptr [rdi-5Ah], xmm0   | * | movdqa xmmword ptr [rdi-4Ah], xmm0  ",icc,1
loc_404117:   | * | loc_40411C:  ,icc,1
"movdqa xmmword ptr [rdi-4Ah], xmm0   | * | movdqa xmmword ptr [rdi-3Ah], xmm0  ",icc,1
loc_40411C:   | * | loc_404121:  ,icc,1
"movdqa xmmword ptr [rdi-3Ah], xmm0   | * | movdqa xmmword ptr [rdi-2Ah], xmm0  ",icc,1
loc_404121:   | * | loc_404126:  ,icc,1
"movdqa xmmword ptr [rdi-2Ah], xmm0   | * | movdqa xmmword ptr [rdi-1Ah], xmm0  ",icc,1
loc_404126:   | * | loc_40412B:  ,icc,1
"movdqa xmmword ptr [rdi-1Ah], xmm0   | * | mov [rdi-0Ah], rdx  ",icc,1
"loc_40412B:   | * | mov [rdi-2], dx ",icc,1
"mov [rdi-0Ah], rdx   | * | retn 0 ",icc,1
"mov [rdi-2], dx  | * | loc_404136:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0BBh], xmm0  ",icc,1
loc_404136:   | * | loc_40413E:  ,icc,1
"movdqa xmmword ptr [rdi-0BBh], xmm0   | * | movdqa xmmword ptr [rdi-0ABh], xmm0  ",icc,1
loc_40413E:   | * | loc_404146:  ,icc,1
"movdqa xmmword ptr [rdi-0ABh], xmm0   | * | movdqa xmmword ptr [rdi-9Bh], xmm0  ",icc,1
loc_404146:   | * | loc_40414E:  ,icc,1
"movdqa xmmword ptr [rdi-9Bh], xmm0   | * | movdqa xmmword ptr [rdi-8Bh], xmm0  ",icc,1
loc_40414E:   | * | loc_404156:  ,icc,1
"movdqa xmmword ptr [rdi-8Bh], xmm0   | * | movdqa xmmword ptr [rdi-7Bh], xmm0  ",icc,1
loc_404156:   | * | loc_40415B:  ,icc,1
"movdqa xmmword ptr [rdi-7Bh], xmm0   | * | movdqa xmmword ptr [rdi-6Bh], xmm0  ",icc,1
loc_40415B:   | * | loc_404160:  ,icc,1
"movdqa xmmword ptr [rdi-6Bh], xmm0   | * | movdqa xmmword ptr [rdi-5Bh], xmm0  ",icc,1
loc_404160:   | * | loc_404165:  ,icc,1
"movdqa xmmword ptr [rdi-5Bh], xmm0   | * | movdqa xmmword ptr [rdi-4Bh], xmm0  ",icc,1
loc_404165:   | * | loc_40416A:  ,icc,1
"movdqa xmmword ptr [rdi-4Bh], xmm0   | * | movdqa xmmword ptr [rdi-3Bh], xmm0  ",icc,1
loc_40416A:   | * | loc_40416F:  ,icc,1
"movdqa xmmword ptr [rdi-3Bh], xmm0   | * | movdqa xmmword ptr [rdi-2Bh], xmm0  ",icc,1
loc_40416F:   | * | loc_404174:  ,icc,1
"movdqa xmmword ptr [rdi-2Bh], xmm0   | * | movdqa xmmword ptr [rdi-1Bh], xmm0  ",icc,1
loc_404174:   | * | loc_404179:  ,icc,1
"movdqa xmmword ptr [rdi-1Bh], xmm0   | * | mov [rdi-0Bh], rdx  ",icc,1
"loc_404179:   | * | mov [rdi-3], dx ",icc,1
"mov [rdi-0Bh], rdx   | * | mov [rdi-1], dl ",icc,1
"mov [rdi-1], dl  | * | loc_404187:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0BCh], xmm0  ",icc,1
loc_404187:   | * | loc_40418F:  ,icc,1
"movdqa xmmword ptr [rdi-0BCh], xmm0   | * | movdqa xmmword ptr [rdi-0ACh], xmm0  ",icc,1
loc_40418F:   | * | loc_404197:  ,icc,1
"movdqa xmmword ptr [rdi-0ACh], xmm0   | * | movdqa xmmword ptr [rdi-9Ch], xmm0  ",icc,1
loc_404197:   | * | loc_40419F:  ,icc,1
"movdqa xmmword ptr [rdi-9Ch], xmm0   | * | movdqa xmmword ptr [rdi-8Ch], xmm0  ",icc,1
loc_40419F:   | * | loc_4041A7:  ,icc,1
"movdqa xmmword ptr [rdi-8Ch], xmm0   | * | movdqa xmmword ptr [rdi-7Ch], xmm0  ",icc,1
loc_4041A7:   | * | loc_4041AC:  ,icc,1
"movdqa xmmword ptr [rdi-7Ch], xmm0   | * | movdqa xmmword ptr [rdi-6Ch], xmm0  ",icc,1
loc_4041AC:   | * | loc_4041B1:  ,icc,1
"movdqa xmmword ptr [rdi-6Ch], xmm0   | * | movdqa xmmword ptr [rdi-5Ch], xmm0  ",icc,1
loc_4041B1:   | * | loc_4041B6:  ,icc,1
"movdqa xmmword ptr [rdi-5Ch], xmm0   | * | movdqa xmmword ptr [rdi-4Ch], xmm0  ",icc,1
loc_4041B6:   | * | loc_4041BB:  ,icc,1
"movdqa xmmword ptr [rdi-4Ch], xmm0   | * | movdqa xmmword ptr [rdi-3Ch], xmm0  ",icc,1
loc_4041BB:   | * | loc_4041C0:  ,icc,1
"movdqa xmmword ptr [rdi-3Ch], xmm0   | * | movdqa xmmword ptr [rdi-2Ch], xmm0  ",icc,1
loc_4041C0:   | * | loc_4041C5:  ,icc,1
"movdqa xmmword ptr [rdi-2Ch], xmm0   | * | movdqa xmmword ptr [rdi-1Ch], xmm0  ",icc,1
loc_4041C5:   | * | loc_4041CA:  ,icc,1
"movdqa xmmword ptr [rdi-1Ch], xmm0   | * | mov [rdi-0Ch], rdx  ",icc,1
"loc_4041CA:   | * | mov [rdi-4], edx ",icc,1
"mov [rdi-0Ch], rdx   | * | retn 0 ",icc,1
"mov [rdi-4], edx  | * | loc_4041D4:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0BDh], xmm0  ",icc,1
loc_4041D4:   | * | loc_4041DC:  ,icc,1
"movdqa xmmword ptr [rdi-0BDh], xmm0   | * | movdqa xmmword ptr [rdi-0ADh], xmm0  ",icc,1
loc_4041DC:   | * | loc_4041E4:  ,icc,1
"movdqa xmmword ptr [rdi-0ADh], xmm0   | * | movdqa xmmword ptr [rdi-9Dh], xmm0  ",icc,1
loc_4041E4:   | * | loc_4041EC:  ,icc,1
"movdqa xmmword ptr [rdi-9Dh], xmm0   | * | movdqa xmmword ptr [rdi-8Dh], xmm0  ",icc,1
loc_4041EC:   | * | loc_4041F4:  ,icc,1
"movdqa xmmword ptr [rdi-8Dh], xmm0   | * | movdqa xmmword ptr [rdi-7Dh], xmm0  ",icc,1
loc_4041F4:   | * | loc_4041F9:  ,icc,1
"movdqa xmmword ptr [rdi-7Dh], xmm0   | * | movdqa xmmword ptr [rdi-6Dh], xmm0  ",icc,1
loc_4041F9:   | * | loc_4041FE:  ,icc,1
"movdqa xmmword ptr [rdi-6Dh], xmm0   | * | movdqa xmmword ptr [rdi-5Dh], xmm0  ",icc,1
loc_4041FE:   | * | loc_404203:  ,icc,1
"movdqa xmmword ptr [rdi-5Dh], xmm0   | * | movdqa xmmword ptr [rdi-4Dh], xmm0  ",icc,1
loc_404203:   | * | loc_404208:  ,icc,1
"movdqa xmmword ptr [rdi-4Dh], xmm0   | * | movdqa xmmword ptr [rdi-3Dh], xmm0  ",icc,1
loc_404208:   | * | loc_40420D:  ,icc,1
"movdqa xmmword ptr [rdi-3Dh], xmm0   | * | movdqa xmmword ptr [rdi-2Dh], xmm0  ",icc,1
loc_40420D:   | * | loc_404212:  ,icc,1
"movdqa xmmword ptr [rdi-2Dh], xmm0   | * | movdqa xmmword ptr [rdi-1Dh], xmm0  ",icc,1
loc_404212:   | * | loc_404217:  ,icc,1
"movdqa xmmword ptr [rdi-1Dh], xmm0   | * | mov [rdi-0Dh], rdx  ",icc,1
"loc_404217:   | * | mov [rdi-5], edx ",icc,1
"mov [rdi-0Dh], rdx   | * | mov [rdi-1], dl ",icc,1
"mov [rdi-5], edx  | * | retn 0 ",icc,1
"mov [rdi-1], dl  | * | loc_404224:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0BEh], xmm0  ",icc,1
loc_404224:   | * | loc_40422C:  ,icc,1
"movdqa xmmword ptr [rdi-0BEh], xmm0   | * | movdqa xmmword ptr [rdi-0AEh], xmm0  ",icc,1
loc_40422C:   | * | loc_404234:  ,icc,1
"movdqa xmmword ptr [rdi-0AEh], xmm0   | * | movdqa xmmword ptr [rdi-9Eh], xmm0  ",icc,1
loc_404234:   | * | loc_40423C:  ,icc,1
"movdqa xmmword ptr [rdi-9Eh], xmm0   | * | movdqa xmmword ptr [rdi-8Eh], xmm0  ",icc,1
loc_40423C:   | * | loc_404244:  ,icc,1
"movdqa xmmword ptr [rdi-8Eh], xmm0   | * | movdqa xmmword ptr [rdi-7Eh], xmm0  ",icc,1
loc_404244:   | * | loc_404249:  ,icc,1
"movdqa xmmword ptr [rdi-7Eh], xmm0   | * | movdqa xmmword ptr [rdi-6Eh], xmm0  ",icc,1
loc_404249:   | * | loc_40424E:  ,icc,1
"movdqa xmmword ptr [rdi-6Eh], xmm0   | * | movdqa xmmword ptr [rdi-5Eh], xmm0  ",icc,1
loc_40424E:   | * | loc_404253:  ,icc,1
"movdqa xmmword ptr [rdi-5Eh], xmm0   | * | movdqa xmmword ptr [rdi-4Eh], xmm0  ",icc,1
loc_404253:   | * | loc_404258:  ,icc,1
"movdqa xmmword ptr [rdi-4Eh], xmm0   | * | movdqa xmmword ptr [rdi-3Eh], xmm0  ",icc,1
loc_404258:   | * | loc_40425D:  ,icc,1
"movdqa xmmword ptr [rdi-3Eh], xmm0   | * | movdqa xmmword ptr [rdi-2Eh], xmm0  ",icc,1
loc_40425D:   | * | loc_404262:  ,icc,1
"movdqa xmmword ptr [rdi-2Eh], xmm0   | * | movdqa xmmword ptr [rdi-1Eh], xmm0  ",icc,1
loc_404262:   | * | loc_404267:  ,icc,1
"movdqa xmmword ptr [rdi-1Eh], xmm0   | * | mov [rdi-0Eh], rdx  ",icc,1
"loc_404267:   | * | mov [rdi-6], edx ",icc,1
"mov [rdi-0Eh], rdx   | * | mov [rdi-2], dx ",icc,1
"mov [rdi-6], edx  | * | retn 0 ",icc,1
"mov [rdi-2], dx  | * | loc_404275:  ",icc,1
"retn 0  | * | movdqa xmmword ptr [rdi-0BFh], xmm0  ",icc,1
loc_404275:   | * | loc_40427D:  ,icc,1
"movdqa xmmword ptr [rdi-0BFh], xmm0   | * | movdqa xmmword ptr [rdi-0AFh], xmm0  ",icc,1
loc_40427D:   | * | loc_404285:  ,icc,1
"movdqa xmmword ptr [rdi-0AFh], xmm0   | * | movdqa xmmword ptr [rdi-9Fh], xmm0  ",icc,1
loc_404285:   | * | loc_40428D:  ,icc,1
"movdqa xmmword ptr [rdi-9Fh], xmm0   | * | movdqa xmmword ptr [rdi-8Fh], xmm0  ",icc,1
loc_40428D:   | * | loc_404295:  ,icc,1
"movdqa xmmword ptr [rdi-8Fh], xmm0   | * | movdqa xmmword ptr [rdi-7Fh], xmm0  ",icc,1
loc_404295:   | * | loc_40429A:  ,icc,1
"movdqa xmmword ptr [rdi-7Fh], xmm0   | * | movdqa xmmword ptr [rdi-6Fh], xmm0  ",icc,1
loc_40429A:   | * | loc_40429F:  ,icc,1
"movdqa xmmword ptr [rdi-6Fh], xmm0   | * | movdqa xmmword ptr [rdi-5Fh], xmm0  ",icc,1
loc_40429F:   | * | loc_4042A4:  ,icc,1
"movdqa xmmword ptr [rdi-5Fh], xmm0   | * | movdqa xmmword ptr [rdi-4Fh], xmm0  ",icc,1
loc_4042A4:   | * | loc_4042A9:  ,icc,1
"movdqa xmmword ptr [rdi-4Fh], xmm0   | * | movdqa xmmword ptr [rdi-3Fh], xmm0  ",icc,1
loc_4042A9:   | * | loc_4042AE:  ,icc,1
"movdqa xmmword ptr [rdi-3Fh], xmm0   | * | movdqa xmmword ptr [rdi-2Fh], xmm0  ",icc,1
loc_4042AE:   | * | loc_4042B3:  ,icc,1
"movdqa xmmword ptr [rdi-2Fh], xmm0   | * | movdqa xmmword ptr [rdi-1Fh], xmm0  ",icc,1
loc_4042B3:   | * | loc_4042B8:  ,icc,1
"movdqa xmmword ptr [rdi-1Fh], xmm0   | * | mov [rdi-0Fh], rdx  ",icc,1
"loc_4042B8:   | * | mov [rdi-7], edx ",icc,1
"mov [rdi-0Fh], rdx   | * | mov [rdi-3], dx ",icc,1
"mov [rdi-7], edx  | * | mov [rdi-1], dl ",icc,1
"mov [rdi-1], dl  | * | loc_4042C9:  ",icc,1
"retn 0  | * | mov r9d, cs:__libirc_largest_cache_size ",icc,1
"loc_4042C9:   | * | cmp r8, r9 ",icc,1
"mov r9d, cs:__libirc_largest_cache_size  | * | jg short loc_404330 ",icc,1
"cmp r8, r9  | * | jmp short loc_4042E0 ",icc,1
jg short loc_404330  | * | align 20h ,icc,1
jmp short loc_4042E0  | * | loc_4042E0:  ,icc,1
"align 20h  | * | lea r8, [r8-80h] ",icc,1
"loc_4042E0:   | * | movdqa xmmword ptr [rdi], xmm0 ",icc,1
"lea r8, [r8-80h]  | * | movdqa xmmword ptr [rdi+10h], xmm0 ",icc,1
"movdqa xmmword ptr [rdi], xmm0  | * | movdqa xmmword ptr [rdi+20h], xmm0 ",icc,1
"movdqa xmmword ptr [rdi+10h], xmm0  | * | movdqa xmmword ptr [rdi+30h], xmm0 ",icc,1
"movdqa xmmword ptr [rdi+20h], xmm0  | * | cmp r8, 80h ",icc,1
"movdqa xmmword ptr [rdi+30h], xmm0  | * | movdqa xmmword ptr [rdi+40h], xmm0 ",icc,1
"cmp r8, 80h  | * | movdqa xmmword ptr [rdi+50h], xmm0 ",icc,1
"movdqa xmmword ptr [rdi+40h], xmm0  | * | movdqa xmmword ptr [rdi+60h], xmm0 ",icc,1
"movdqa xmmword ptr [rdi+50h], xmm0  | * | movdqa xmmword ptr [rdi+70h], xmm0 ",icc,1
"movdqa xmmword ptr [rdi+60h], xmm0  | * | lea rdi, [rdi+80h] ",icc,1
"movdqa xmmword ptr [rdi+70h], xmm0  | * | jge short loc_4042E0 ",icc,1
"lea rdi, [rdi+80h]  | * | lea r11, jpt_403DFB ",icc,1
"jge short loc_4042E0  | * | add rdi, r8 ",icc,1
"lea r11, jpt_403DFB  | * | mov rcx, ds:(jpt_403DFB - 404460h)[r11+r8*8]  ",icc,2
"mov rcx, ds:(jpt_403DFB - 404460h)[r11+r8*8]   | * | jmp r11  ",icc,2
"lea r11, [rcx+r11]  | * | loc_404330:  ",icc,1
"jmp r11   | * | cmp r9, 0 ",icc,1
loc_404330:   | * | jz short loc_4042E0 ,icc,1
"cmp r9, 0  | * | jmp short loc_404340 ",icc,1
jz short loc_4042E0  | * | align 20h ,icc,1
jmp short loc_404340  | * | loc_404340:  ,icc,1
"align 20h  | * | sub r8, 80h ",icc,1
"loc_404340:   | * | movntdq xmmword ptr [rdi], xmm0 ",icc,1
"sub r8, 80h  | * | movntdq xmmword ptr [rdi+10h], xmm0 ",icc,1
"movntdq xmmword ptr [rdi], xmm0  | * | movntdq xmmword ptr [rdi+20h], xmm0 ",icc,1
"movntdq xmmword ptr [rdi+10h], xmm0  | * | movntdq xmmword ptr [rdi+30h], xmm0 ",icc,1
"movntdq xmmword ptr [rdi+20h], xmm0  | * | movntdq xmmword ptr [rdi+40h], xmm0 ",icc,1
"movntdq xmmword ptr [rdi+30h], xmm0  | * | movntdq xmmword ptr [rdi+50h], xmm0 ",icc,1
"movntdq xmmword ptr [rdi+40h], xmm0  | * | movntdq xmmword ptr [rdi+60h], xmm0 ",icc,1
"movntdq xmmword ptr [rdi+50h], xmm0  | * | movntdq xmmword ptr [rdi+70h], xmm0 ",icc,1
"movntdq xmmword ptr [rdi+60h], xmm0  | * | add rdi, 80h ",icc,1
"movntdq xmmword ptr [rdi+70h], xmm0  | * | cmp r8, 80h ",icc,1
"add rdi, 80h  | * | jge short loc_404340 ",icc,1
"cmp r8, 80h  | * | sfence ",icc,1
"jge short loc_404340  | * | lea r11, jpt_403DFB ",icc,1
"sfence  | * | add rdi, r8 ",icc,1
jmp r11   | * | loc_4043A0:  ,icc,1
"align 20h  | * | mov r9d, cs:__libirc_largest_cache_size ",icc,1
"loc_4043A0:   | * | cmp r8, r9 ",icc,1
"mov r9d, cs:__libirc_largest_cache_size  | * | jg short loc_404400 ",icc,1
"cmp r8, r9  | * | jmp short loc_4043B0 ",icc,1
jg short loc_404400  | * | align 10h ,icc,1
jmp short loc_4043B0  | * | loc_4043B0:  ,icc,1
"align 10h  | * | mov [rdi], rdx ",icc,1
"loc_4043B0:   | * | mov [rdi+8], rdx ",icc,1
"mov [rdi], rdx  | * | lea r8, [r8-40h] ",icc,1
"mov [rdi+8], rdx  | * | mov [rdi+10h], rdx ",icc,1
"lea r8, [r8-40h]  | * | mov [rdi+18h], rdx ",icc,1
"mov [rdi+10h], rdx  | * | cmp r8, 40h  ",icc,1
"mov [rdi+18h], rdx  | * | mov [rdi+20h], rdx ",icc,1
"cmp r8, 40h   | * | mov [rdi+28h], rdx ",icc,1
"mov [rdi+20h], rdx  | * | mov [rdi+30h], rdx ",icc,1
"mov [rdi+28h], rdx  | * | mov [rdi+38h], rdx ",icc,1
"mov [rdi+30h], rdx  | * | lea rdi, [rdi+40h] ",icc,1
"mov [rdi+38h], rdx  | * | jg short loc_4043B0 ",icc,1
"lea rdi, [rdi+40h]  | * | lea r11, jpt_4038BE ",icc,2
"jg short loc_4043B0  | * | lea rdi, [rdi+r8] ",icc,1
"lea rdi, [rdi+r8]  | * | lea r11, [rcx+r11] ",icc,2
jmp r11   | * | loc_404400:  ,icc,1
"align 20h  | * | cmp r9, 0 ",icc,1
loc_404400:   | * | jz short loc_4043B0 ,icc,1
"cmp r9, 0  | * | jmp short loc_404410 ",icc,1
jz short loc_4043B0  | * | align 10h ,icc,1
jmp short loc_404410  | * | loc_404410:  ,icc,1
"align 10h  | * | movnti qword ptr [rdi], rdx ",icc,1
"loc_404410:   | * | movnti qword ptr [rdi+8], rdx ",icc,1
"movnti qword ptr [rdi], rdx  | * | lea r8, [r8-40h] ",icc,1
"movnti qword ptr [rdi+8], rdx  | * | movnti qword ptr [rdi+10h], rdx ",icc,1
"lea r8, [r8-40h]  | * | movnti qword ptr [rdi+18h], rdx ",icc,1
"movnti qword ptr [rdi+10h], rdx  | * | movnti qword ptr [rdi+20h], rdx ",icc,1
"movnti qword ptr [rdi+18h], rdx  | * | cmp r8, 40h  ",icc,1
"movnti qword ptr [rdi+20h], rdx  | * | movnti qword ptr [rdi+28h], rdx ",icc,1
"cmp r8, 40h   | * | movnti qword ptr [rdi+30h], rdx ",icc,1
"movnti qword ptr [rdi+28h], rdx  | * | movnti qword ptr [rdi+38h], rdx ",icc,1
"movnti qword ptr [rdi+30h], rdx  | * | lea rdi, [rdi+40h] ",icc,1
"movnti qword ptr [rdi+38h], rdx  | * | jge short loc_404410 ",icc,1
"jge short loc_404410  | * | lea rdi, [rdi+r8] ",icc,1
"lea r11, [rcx+r11]  | * | __intel_new_memset endp ",icc,1
jmp r11   | * | align 20h ,icc,1
"__intel_new_memset endp  | * | jpt_403DFB dq offset locret_403E40 - 404460h, offset loc_403E84 - 404460h ",icc,1
"align 20h  | * | dq offset loc_403ECB - 404460h, offset loc_403F15 - 404460h  ",icc,1
"jpt_403DFB dq offset locret_403E40 - 404460h, offset loc_403E84 - 404460h  | * | dq offset loc_403F62 - 404460h, offset loc_403FAB - 404460h ",icc,1
"dq offset loc_403ECB - 404460h, offset loc_403F15 - 404460h   | * | dq offset loc_403FF7 - 404460h, offset loc_404044 - 404460h ",icc,1
"dq offset loc_403F62 - 404460h, offset loc_403FAB - 404460h  | * | dq offset loc_404094 - 404460h, offset loc_4040DE - 404460h ",icc,1
"dq offset loc_403FF7 - 404460h, offset loc_404044 - 404460h  | * | dq offset loc_40412B - 404460h, offset loc_404179 - 404460h ",icc,1
"dq offset loc_404094 - 404460h, offset loc_4040DE - 404460h  | * | dq offset loc_4041CA - 404460h, offset loc_404217 - 404460h ",icc,1
"dq offset loc_40412B - 404460h, offset loc_404179 - 404460h  | * | dq offset loc_404267 - 404460h, offset loc_4042B8 - 404460h ",icc,1
"dq offset loc_4041CA - 404460h, offset loc_404217 - 404460h  | * | dq offset loc_403E3B - 404460h, offset loc_403E7F - 404460h ",icc,1
"dq offset loc_404267 - 404460h, offset loc_4042B8 - 404460h  | * | dq offset loc_403EC6 - 404460h, offset loc_403F10 - 404460h ",icc,1
"dq offset loc_403E3B - 404460h, offset loc_403E7F - 404460h  | * | dq offset loc_403F5D - 404460h, offset loc_403FA6 - 404460h ",icc,1
"dq offset loc_403EC6 - 404460h, offset loc_403F10 - 404460h  | * | dq offset loc_403FF2 - 404460h, offset loc_40403F - 404460h ",icc,1
"dq offset loc_403F5D - 404460h, offset loc_403FA6 - 404460h  | * | dq offset loc_40408F - 404460h, offset loc_4040D9 - 404460h ",icc,1
"dq offset loc_403FF2 - 404460h, offset loc_40403F - 404460h  | * | dq offset loc_404126 - 404460h, offset loc_404174 - 404460h ",icc,1
"dq offset loc_40408F - 404460h, offset loc_4040D9 - 404460h  | * | dq offset loc_4041C5 - 404460h, offset loc_404212 - 404460h ",icc,1
"dq offset loc_404126 - 404460h, offset loc_404174 - 404460h  | * | dq offset loc_404262 - 404460h, offset loc_4042B3 - 404460h ",icc,1
"dq offset loc_4041C5 - 404460h, offset loc_404212 - 404460h  | * | dq offset loc_403E36 - 404460h, offset loc_403E7A - 404460h ",icc,1
"dq offset loc_404262 - 404460h, offset loc_4042B3 - 404460h  | * | dq offset loc_403EC1 - 404460h, offset loc_403F0B - 404460h ",icc,1
"dq offset loc_403E36 - 404460h, offset loc_403E7A - 404460h  | * | dq offset loc_403F58 - 404460h, offset loc_403FA1 - 404460h ",icc,1
"dq offset loc_403EC1 - 404460h, offset loc_403F0B - 404460h  | * | dq offset loc_403FED - 404460h, offset loc_40403A - 404460h ",icc,1
"dq offset loc_403F58 - 404460h, offset loc_403FA1 - 404460h  | * | dq offset loc_40408A - 404460h, offset loc_4040D4 - 404460h ",icc,1
"dq offset loc_403FED - 404460h, offset loc_40403A - 404460h  | * | dq offset loc_404121 - 404460h, offset loc_40416F - 404460h ",icc,1
"dq offset loc_40408A - 404460h, offset loc_4040D4 - 404460h  | * | dq offset loc_4041C0 - 404460h, offset loc_40420D - 404460h ",icc,1
"dq offset loc_404121 - 404460h, offset loc_40416F - 404460h  | * | dq offset loc_40425D - 404460h, offset loc_4042AE - 404460h ",icc,1
"dq offset loc_4041C0 - 404460h, offset loc_40420D - 404460h  | * | dq offset loc_403E31 - 404460h, offset loc_403E75 - 404460h ",icc,1
"dq offset loc_40425D - 404460h, offset loc_4042AE - 404460h  | * | dq offset loc_403EBC - 404460h, offset loc_403F06 - 404460h ",icc,1
"dq offset loc_403E31 - 404460h, offset loc_403E75 - 404460h  | * | dq offset loc_403F53 - 404460h, offset loc_403F9C - 404460h ",icc,1
"dq offset loc_403EBC - 404460h, offset loc_403F06 - 404460h  | * | dq offset loc_403FE8 - 404460h, offset loc_404035 - 404460h ",icc,1
"dq offset loc_403F53 - 404460h, offset loc_403F9C - 404460h  | * | dq offset loc_404085 - 404460h, offset loc_4040CF - 404460h ",icc,1
"dq offset loc_403FE8 - 404460h, offset loc_404035 - 404460h  | * | dq offset loc_40411C - 404460h, offset loc_40416A - 404460h ",icc,1
"dq offset loc_404085 - 404460h, offset loc_4040CF - 404460h  | * | dq offset loc_4041BB - 404460h, offset loc_404208 - 404460h ",icc,1
"dq offset loc_40411C - 404460h, offset loc_40416A - 404460h  | * | dq offset loc_404258 - 404460h, offset loc_4042A9 - 404460h ",icc,1
"dq offset loc_4041BB - 404460h, offset loc_404208 - 404460h  | * | dq offset loc_403E2C - 404460h, offset loc_403E70 - 404460h ",icc,1
"dq offset loc_404258 - 404460h, offset loc_4042A9 - 404460h  | * | dq offset loc_403EB7 - 404460h, offset loc_403F01 - 404460h ",icc,1
"dq offset loc_403E2C - 404460h, offset loc_403E70 - 404460h  | * | dq offset loc_403F4E - 404460h, offset loc_403F97 - 404460h ",icc,1
"dq offset loc_403EB7 - 404460h, offset loc_403F01 - 404460h  | * | dq offset loc_403FE3 - 404460h, offset loc_404030 - 404460h ",icc,1
"dq offset loc_403F4E - 404460h, offset loc_403F97 - 404460h  | * | dq offset loc_404080 - 404460h, offset loc_4040CA - 404460h ",icc,1
"dq offset loc_403FE3 - 404460h, offset loc_404030 - 404460h  | * | dq offset loc_404117 - 404460h, offset loc_404165 - 404460h ",icc,1
"dq offset loc_404080 - 404460h, offset loc_4040CA - 404460h  | * | dq offset loc_4041B6 - 404460h, offset loc_404203 - 404460h ",icc,1
"dq offset loc_404117 - 404460h, offset loc_404165 - 404460h  | * | dq offset loc_404253 - 404460h, offset loc_4042A4 - 404460h ",icc,1
"dq offset loc_4041B6 - 404460h, offset loc_404203 - 404460h  | * | dq offset loc_403E27 - 404460h, offset loc_403E6B - 404460h ",icc,1
"dq offset loc_404253 - 404460h, offset loc_4042A4 - 404460h  | * | dq offset loc_403EB2 - 404460h, offset loc_403EFC - 404460h ",icc,1
"dq offset loc_403E27 - 404460h, offset loc_403E6B - 404460h  | * | dq offset loc_403F49 - 404460h, offset loc_403F92 - 404460h ",icc,1
"dq offset loc_403EB2 - 404460h, offset loc_403EFC - 404460h  | * | dq offset loc_403FDE - 404460h, offset loc_40402B - 404460h ",icc,1
"dq offset loc_403F49 - 404460h, offset loc_403F92 - 404460h  | * | dq offset loc_40407B - 404460h, offset loc_4040C5 - 404460h ",icc,1
"dq offset loc_403FDE - 404460h, offset loc_40402B - 404460h  | * | dq offset loc_404112 - 404460h, offset loc_404160 - 404460h ",icc,1
"dq offset loc_40407B - 404460h, offset loc_4040C5 - 404460h  | * | dq offset loc_4041B1 - 404460h, offset loc_4041FE - 404460h ",icc,1
"dq offset loc_404112 - 404460h, offset loc_404160 - 404460h  | * | dq offset loc_40424E - 404460h, offset loc_40429F - 404460h ",icc,1
"dq offset loc_4041B1 - 404460h, offset loc_4041FE - 404460h  | * | dq offset loc_403E22 - 404460h, offset loc_403E66 - 404460h ",icc,1
"dq offset loc_40424E - 404460h, offset loc_40429F - 404460h  | * | dq offset loc_403EAD - 404460h, offset loc_403EF7 - 404460h ",icc,1
"dq offset loc_403E22 - 404460h, offset loc_403E66 - 404460h  | * | dq offset loc_403F44 - 404460h, offset loc_403F8D - 404460h ",icc,1
"dq offset loc_403EAD - 404460h, offset loc_403EF7 - 404460h  | * | dq offset loc_403FD9 - 404460h, offset loc_404026 - 404460h ",icc,1
"dq offset loc_403F44 - 404460h, offset loc_403F8D - 404460h  | * | dq offset loc_404076 - 404460h, offset loc_4040C0 - 404460h ",icc,1
"dq offset loc_403FD9 - 404460h, offset loc_404026 - 404460h  | * | dq offset loc_40410D - 404460h, offset loc_40415B - 404460h ",icc,1
"dq offset loc_404076 - 404460h, offset loc_4040C0 - 404460h  | * | dq offset loc_4041AC - 404460h, offset loc_4041F9 - 404460h ",icc,1
"dq offset loc_40410D - 404460h, offset loc_40415B - 404460h  | * | dq offset loc_404249 - 404460h, offset loc_40429A - 404460h ",icc,1
"dq offset loc_4041AC - 404460h, offset loc_4041F9 - 404460h  | * | dq offset loc_403E1D - 404460h, offset loc_403E61 - 404460h ",icc,1
"dq offset loc_404249 - 404460h, offset loc_40429A - 404460h  | * | dq offset loc_403EA8 - 404460h, offset loc_403EF2 - 404460h ",icc,1
"dq offset loc_403E1D - 404460h, offset loc_403E61 - 404460h  | * | dq offset loc_403F3F - 404460h, offset loc_403F88 - 404460h ",icc,1
"dq offset loc_403EA8 - 404460h, offset loc_403EF2 - 404460h  | * | dq offset loc_403FD4 - 404460h, offset loc_404021 - 404460h ",icc,1
"dq offset loc_403F3F - 404460h, offset loc_403F88 - 404460h  | * | dq offset loc_404071 - 404460h, offset loc_4040BB - 404460h ",icc,1
"dq offset loc_403FD4 - 404460h, offset loc_404021 - 404460h  | * | dq offset loc_404108 - 404460h, offset loc_404156 - 404460h ",icc,1
"dq offset loc_404071 - 404460h, offset loc_4040BB - 404460h  | * | dq offset loc_4041A7 - 404460h, offset loc_4041F4 - 404460h ",icc,1
"dq offset loc_404108 - 404460h, offset loc_404156 - 404460h  | * | dq offset loc_404244 - 404460h, offset loc_404295 - 404460h ",icc,1
"dq offset loc_4041A7 - 404460h, offset loc_4041F4 - 404460h  | * | dq offset loc_403E18 - 404460h, offset loc_403E59 - 404460h ",icc,1
"dq offset loc_404244 - 404460h, offset loc_404295 - 404460h  | * | dq offset loc_403EA0 - 404460h, offset loc_403EEA - 404460h ",icc,1
"dq offset loc_403E18 - 404460h, offset loc_403E59 - 404460h  | * | dq offset loc_403F37 - 404460h, offset loc_403F80 - 404460h ",icc,1
"dq offset loc_403EA0 - 404460h, offset loc_403EEA - 404460h  | * | dq offset loc_403FCC - 404460h, offset loc_404019 - 404460h ",icc,1
"dq offset loc_403F37 - 404460h, offset loc_403F80 - 404460h  | * | dq offset loc_404069 - 404460h, offset loc_4040B3 - 404460h ",icc,1
"dq offset loc_403FCC - 404460h, offset loc_404019 - 404460h  | * | dq offset loc_404100 - 404460h, offset loc_40414E - 404460h ",icc,1
"dq offset loc_404069 - 404460h, offset loc_4040B3 - 404460h  | * | dq offset loc_40419F - 404460h, offset loc_4041EC - 404460h ",icc,1
"dq offset loc_404100 - 404460h, offset loc_40414E - 404460h  | * | dq offset loc_40423C - 404460h, offset loc_40428D - 404460h ",icc,1
"dq offset loc_40419F - 404460h, offset loc_4041EC - 404460h  | * | dq offset loc_403E10 - 404460h, offset loc_403E51 - 404460h ",icc,1
"dq offset loc_40423C - 404460h, offset loc_40428D - 404460h  | * | dq offset loc_403E98 - 404460h, offset loc_403EE2 - 404460h ",icc,1
"dq offset loc_403E10 - 404460h, offset loc_403E51 - 404460h  | * | dq offset loc_403F2F - 404460h, offset loc_403F78 - 404460h ",icc,1
"dq offset loc_403E98 - 404460h, offset loc_403EE2 - 404460h  | * | dq offset loc_403FC4 - 404460h, offset loc_404011 - 404460h ",icc,1
"dq offset loc_403F2F - 404460h, offset loc_403F78 - 404460h  | * | dq offset loc_404061 - 404460h, offset loc_4040AB - 404460h ",icc,1
"dq offset loc_403FC4 - 404460h, offset loc_404011 - 404460h  | * | dq offset loc_4040F8 - 404460h, offset loc_404146 - 404460h ",icc,1
"dq offset loc_404061 - 404460h, offset loc_4040AB - 404460h  | * | dq offset loc_404197 - 404460h, offset loc_4041E4 - 404460h ",icc,1
"dq offset loc_4040F8 - 404460h, offset loc_404146 - 404460h  | * | dq offset loc_404234 - 404460h, offset loc_404285 - 404460h ",icc,1
"dq offset loc_404197 - 404460h, offset loc_4041E4 - 404460h  | * | dq offset loc_403E08 - 404460h, offset loc_403E49 - 404460h ",icc,1
"dq offset loc_404234 - 404460h, offset loc_404285 - 404460h  | * | dq offset loc_403E90 - 404460h, offset loc_403EDA - 404460h ",icc,1
"dq offset loc_403E08 - 404460h, offset loc_403E49 - 404460h  | * | dq offset loc_403F27 - 404460h, offset loc_403F70 - 404460h ",icc,1
"dq offset loc_403E90 - 404460h, offset loc_403EDA - 404460h  | * | dq offset loc_403FBC - 404460h, offset loc_404009 - 404460h ",icc,1
"dq offset loc_403F27 - 404460h, offset loc_403F70 - 404460h  | * | dq offset loc_404059 - 404460h, offset loc_4040A3 - 404460h ",icc,1
"dq offset loc_403FBC - 404460h, offset loc_404009 - 404460h  | * | dq offset loc_4040F0 - 404460h, offset loc_40413E - 404460h ",icc,1
"dq offset loc_404059 - 404460h, offset loc_4040A3 - 404460h  | * | dq offset loc_40418F - 404460h, offset loc_4041DC - 404460h ",icc,1
"dq offset loc_4040F0 - 404460h, offset loc_40413E - 404460h  | * | dq offset loc_40422C - 404460h, offset loc_40427D - 404460h ",icc,1
"dq offset loc_40418F - 404460h, offset loc_4041DC - 404460h  | * | dq offset loc_403E00 - 404460h, offset loc_403E41 - 404460h ",icc,1
"dq offset loc_40422C - 404460h, offset loc_40427D - 404460h  | * | dq offset loc_403E88 - 404460h, offset loc_403ED2 - 404460h ",icc,1
"dq offset loc_403E00 - 404460h, offset loc_403E41 - 404460h  | * | dq offset loc_403F1F - 404460h, offset loc_403F68 - 404460h ",icc,1
"dq offset loc_403E88 - 404460h, offset loc_403ED2 - 404460h  | * | dq offset loc_403FB4 - 404460h, offset loc_404001 - 404460h ",icc,1
"dq offset loc_403F1F - 404460h, offset loc_403F68 - 404460h  | * | dq offset loc_404051 - 404460h, offset loc_40409B - 404460h ",icc,1
"dq offset loc_403FB4 - 404460h, offset loc_404001 - 404460h  | * | dq offset loc_4040E8 - 404460h, offset loc_404136 - 404460h ",icc,1
"dq offset loc_404051 - 404460h, offset loc_40409B - 404460h  | * | dq offset loc_404187 - 404460h, offset loc_4041D4 - 404460h ",icc,1
"dq offset loc_4040E8 - 404460h, offset loc_404136 - 404460h  | * | dq offset loc_404224 - 404460h, offset loc_404275 - 404460h ",icc,1
"dq offset loc_404187 - 404460h, offset loc_4041D4 - 404460h  | * | public __libirc_get_msg ",icc,1
"dq offset loc_404224 - 404460h, offset loc_404275 - 404460h  | * | __libirc_get_msg proc near  ",icc,1
dest = byte ptr -168h  | * | var_D8 = qword ptr -0D8h ,data,1
var_E8 = byte ptr -0E8h  | * | var_D0 = qword ptr -0D0h ,data,1
var_D8 = qword ptr -0D8h  | * | var_C8 = qword ptr -0C8h ,data,1
var_D0 = qword ptr -0D0h  | * | var_C0 = qword ptr -0C0h ,data,2
var_C8 = qword ptr -0C8h  | * | var_39 = byte ptr -39h ,data,2
var_C0 = qword ptr -0C0h  | * | arg = dword ptr -38h ,data,2
var_39 = byte ptr -39h  | * | var_34 = dword ptr -34h ,data,2
arg = dword ptr -38h  | * | var_30 = qword ptr -30h ,data,2
var_34 = dword ptr -34h  | * | var_28 = qword ptr -28h ,data,2
var_30 = qword ptr -30h  | * | arg_0 = byte ptr 8 ,data,2
"push r13  | * | sub rsp, 150h ",icc,1
"push r14  | * | mov [rsp+168h+var_D8], rdx ",icc,1
"sub rsp, 150h  | * | mov [rsp+168h+var_D0], rcx ",icc,1
"mov [rsp+168h+var_D8], rdx  | * | mov [rsp+168h+var_C8], r8 ",icc,1
"mov [rsp+168h+var_D0], rcx  | * | mov [rsp+168h+var_C0], r9 ",icc,2
"mov [rsp+168h+var_C8], r8  | * | movzx r11d, al ",icc,2
"mov [rsp+168h+var_C0], r9  | * | lea rax, ds:0[r11*4] ",icc,2
"movzx r11d, al  | * | lea r11, loc_404ACE ",icc,1
"lea rax, ds:0[r11*4]  | * | sub r11, rax ",icc,2
"lea r11, loc_404ACE  | * | lea rax, [rsp+168h+var_39] ",icc,1
"sub r11, rax  | * | jmp r11 ",icc,2
"lea rax, [rsp+168h+var_39]  | * | movaps xmmword ptr [rax-0Fh], xmm7 ",icc,2
"jmp r11  | * | movaps xmmword ptr [rax-1Fh], xmm6 ",icc,2
"movaps xmmword ptr [rax-0Fh], xmm7  | * | movaps xmmword ptr [rax-2Fh], xmm5 ",icc,2
"movaps xmmword ptr [rax-1Fh], xmm6  | * | movaps xmmword ptr [rax-3Fh], xmm4 ",icc,2
"movaps xmmword ptr [rax-2Fh], xmm5  | * | movaps xmmword ptr [rax-4Fh], xmm3 ",icc,2
"movaps xmmword ptr [rax-3Fh], xmm4  | * | movaps xmmword ptr [rax-5Fh], xmm2 ",icc,2
"movaps xmmword ptr [rax-4Fh], xmm3  | * | movaps xmmword ptr [rax-6Fh], xmm1 ",icc,2
"movaps xmmword ptr [rax-5Fh], xmm2  | * | movaps xmmword ptr [rax-7Fh], xmm0 ",icc,2
"movaps xmmword ptr [rax-6Fh], xmm1  | * | loc_404ACE:  ",icc,1
"movaps xmmword ptr [rax-7Fh], xmm0  | * | mov r13d, edi ",icc,1
"loc_404ACE:   | * | mov r14d, esi ",icc,1
"mov r13d, edi  | * | test r13d, r13d ",icc,1
"mov r14d, esi  | * | jz loc_404B67 ",icc,1
"test r13d, r13d  | * | cmp cs:first_msg, 0 ",icc,1
jz loc_404B67  | * | jz short loc_404B34 ,icc,1
"cmp cs:first_msg, 0  | * | lea rdi, cat_name  ",icc,2
"jz short loc_404B34  | * | xor esi, esi  ",icc,1
"lea rdi, cat_name   | * | mov cs:first_msg, 0 ",icc,2
"xor esi, esi   | * | call _catopen ",icc,2
"mov cs:first_msg, 0  | * | mov cs:message_catalog, rax ",icc,2
"call _catopen  | * | cmp rax, 0FFFFFFFFFFFFFFFFh ",icc,2
"mov cs:message_catalog, rax  | * | jz loc_404BE6 ",icc,1
"cmp rax, 0FFFFFFFFFFFFFFFFh  | * | mov rdi, cs:message_catalog  ",icc,2
jz loc_404BE6  | * | loc_404B16:  ,icc,1
"mov rdi, cs:message_catalog   | * | movsxd rax, r13d ",icc,1
"loc_404B16:   | * | lea rcx, off_608048  ",icc,1
"movsxd rax, r13d  | * | shl rax, 4 ",icc,2
"lea rcx, off_608048   | * | mov cs:use_internal_msg, 0 ",icc,2
"shl rax, 4  | * | mov rcx, [rax+rcx]  ",icc,2
"mov cs:use_internal_msg, 0  | * | jmp short loc_404B55 ",icc,1
"mov rcx, [rax+rcx]   | * | loc_404B34:  ",icc,1
"jmp short loc_404B55  | * | mov edi, cs:use_internal_msg ",icc,1
"loc_404B34:   | * | movsxd rax, r13d ",icc,1
"mov edi, cs:use_internal_msg  | * | lea rcx, off_608048  ",icc,1
"lea rcx, off_608048   | * | test edi, edi ",icc,1
"shl rax, 4  | * | mov rcx, [rax+rcx] ",icc,2
"test edi, edi  | * | jnz short loc_404B6E ",icc,1
"mov rcx, [rax+rcx]  | * | jmp loc_404C7D ",icc,1
jnz short loc_404B6E  | * | loc_404B55:  ,icc,1
"jmp loc_404C7D  | * | mov esi, 1  ",icc,1
"loc_404B55:   | * | mov edx, r13d  ",icc,1
"mov esi, 1   | * | call _catgets ",icc,2
"mov edx, r13d   | * | mov rcx, rax ",icc,1
call _catgets  | * | jmp short loc_404B6E ,icc,1
"mov rcx, rax  | * | loc_404B67:  ",icc,1
"jmp short loc_404B6E  | * | lea rcx, aCannotAllocate+34h  ",icc,1
loc_404B67:   | * | loc_404B6E:  ,icc,1
"lea rcx, aCannotAllocate+34h   | * | test r14d, r14d ",icc,1
loc_404B6E:   | * | jle short loc_404BD5 ,icc,1
"test r14d, r14d  | * | mov [rsp+168h+arg], 10h ",icc,1
"jle short loc_404BD5  | * | lea rdx, [rsp+168h+arg_0] ",icc,1
"mov [rsp+168h+arg], 10h  | * | mov [rsp+168h+var_34], 30h  ",icc,1
"lea rdx, [rsp+168h+arg_0]  | * | lea rdi, [rsp+168h+var_E8] ",icc,1
"mov [rsp+168h+var_34], 30h   | * | mov [rsp+168h+var_30], rdx ",icc,1
"lea rdi, [rsp+168h+var_E8]  | * | mov [rsp+168h+var_28], rdi ",icc,1
"mov [rsp+168h+var_30], rdx  | * | lea rdi, get_msg_buf  ",icc,1
"mov [rsp+168h+var_28], rdi  | * | mov rsi, rcx  ",icc,1
"lea rdi, get_msg_buf   | * | lea rdx, [rsp+168h+arg]  ",icc,1
"mov rsi, rcx   | * | call _vsprintf ",icc,2
"lea rdx, [rsp+168h+arg]   | * | lea rax, get_msg_buf ",icc,1
"call _vsprintf  | * | add rsp, 150h ",icc,1
"lea rax, get_msg_buf  | * | pop r14 ",icc,1
"add rsp, 150h  | * | pop r13 ",icc,2
pop r12  | * | loc_404BD5:  ,icc,1
"retn  | * | mov rax, rcx ",icc,1
"loc_404BD5:   | * | add rsp, 150h ",icc,1
"mov rax, rcx  | * | pop r14 ",icc,1
pop r12  | * | loc_404BE6:  ,icc,1
"retn  | * | lea rdi, name  ",icc,2
loc_404BE6:   | * | call _getenv ,icc,1
"lea rdi, name   | * | test rax, rax ",icc,2
call _getenv  | * | jz short loc_404C67 ,icc,1
"test rax, rax  | * | mov rsi, rax  ",icc,2
"jz short loc_404C67  | * | lea rdi, [rsp+168h+dest]  ",icc,1
"mov rsi, rax   | * | mov edx, 80h  ",icc,2
"lea rdi, [rsp+168h+dest]   | * | call _strncpy ",icc,2
"mov edx, 80h   | * | mov esi, 2Eh  ",icc,2
"call _strncpy  | * | lea rdi, [rsp+168h+dest]  ",icc,2
"mov esi, 2Eh   | * | call _strchr ",icc,2
"lea rdi, [rsp+168h+dest]   | * | mov r12, rax ",icc,1
"call _strchr  | * | test r12, r12 ",icc,1
"mov r12, rax  | * | jz short loc_404C67 ",icc,1
"test r12, r12  | * | lea rdi, name  ",icc,1
"jz short loc_404C67  | * | lea rsi, [rsp+168h+dest]  ",icc,1
"lea rdi, name   | * | mov edx, 1  ",icc,4
"lea rsi, [rsp+168h+dest]   | * | mov byte ptr [r12], 0 ",icc,1
"mov edx, 1   | * | call _setenv ",icc,2
"mov byte ptr [r12], 0  | * | lea rdi, cat_name  ",icc,1
"call _setenv  | * | xor esi, esi  ",icc,2
"lea rdi, cat_name   | * | call _catopen ",icc,2
"xor esi, esi   | * | lea rdi, name  ",icc,2
"call _catopen  | * | lea rsi, [rsp+168h+dest]  ",icc,2
"lea rsi, [rsp+168h+dest]   | * | mov cs:message_catalog, rax ",icc,2
"mov edx, 1   | * | mov byte ptr [r12], 2Eh  ",icc,1
"mov cs:message_catalog, rax  | * | call _setenv ",icc,2
"mov byte ptr [r12], 2Eh   | * | loc_404C67:  ",icc,1
"call _setenv  | * | mov rdi, cs:message_catalog ",icc,2
"loc_404C67:   | * | cmp rdi, 0FFFFFFFFFFFFFFFFh ",icc,1
"mov rdi, cs:message_catalog  | * | jnz loc_404B16 ",icc,1
"cmp rdi, 0FFFFFFFFFFFFFFFFh  | * | jmp loc_404B34 ",icc,1
jnz loc_404B16  | * | loc_404C7D:  ,icc,1
"jmp loc_404B34  | * | mov rdi, cs:message_catalog ",icc,1
loc_404C7D:   | * | jmp loc_404B55 ,icc,1
"mov rdi, cs:message_catalog  | * | __libirc_get_msg endp ",icc,1
jmp loc_404B55  | * | align 10h ,icc,1
__libirc_get_msg endp  | * | public __libirc_print ,icc,1
align 10h  | * | __libirc_print proc near  ,icc,1
dest = byte ptr -168h  | * | var_D0 = qword ptr -0D0h ,data,1
var_E8 = byte ptr -0E8h  | * | var_C8 = qword ptr -0C8h ,data,1
"push r15  | * | sub rsp, 148h ",icc,1
"push rbx  | * | mov [rsp+168h+var_D0], rcx ",icc,1
"sub rsp, 148h  | * | mov [rsp+168h+var_C8], r8 ",icc,1
"movzx r11d, al  | * | lea r11, loc_404CF7 ",icc,1
"lea r11, loc_404CF7  | * | lea rax, [rsp+168h+var_39] ",icc,1
"movaps xmmword ptr [rax-6Fh], xmm1  | * | loc_404CF7:  ",icc,1
"movaps xmmword ptr [rax-7Fh], xmm0  | * | mov r14d, esi ",icc,1
"loc_404CF7:   | * | mov r15d, edx ",icc,1
"mov r14d, esi  | * | mov r13d, edi ",icc,1
"mov r15d, edx  | * | test r14d, r14d ",icc,1
"mov r13d, edi  | * | jnz short loc_404D2C ",icc,1
"test r14d, r14d  | * | cmp r13d, 1 ",icc,1
jnz short loc_404D2C  | * | jz loc_404E3E ,icc,1
"cmp r13d, 1  | * | lea rdi, asc_4062A4  ",icc,1
"jz loc_404E3E  | * | xor eax, eax ",icc,1
"lea rdi, asc_4062A4   | * | call _printf ",icc,2
"xor eax, eax  | * | add rsp, 148h ",icc,4
call _printf  | * | pop rbx ,icc,2
"add rsp, 148h  | * | pop r15 ",icc,4
pop r14  | * | retn ,icc,4
pop r13  | * | loc_404D2C:  ,icc,1
"retn  | * | cmp cs:first_msg, 0 ",icc,1
loc_404D2C:   | * | jz short loc_404D83 ,icc,1
"jz short loc_404D83  | * | xor esi, esi  ",icc,1
"mov cs:message_catalog, rax  | * | jz loc_404E65 ",icc,1
jz loc_404E65  | * | loc_404D65:  ,icc,1
"mov rdi, cs:message_catalog   | * | movsxd rax, r14d ",icc,1
"loc_404D65:   | * | lea rcx, off_608048  ",icc,1
"movsxd rax, r14d  | * | shl rax, 4 ",icc,2
"mov cs:use_internal_msg, 0  | * | jmp short loc_404DA4 ",icc,1
"mov rcx, [rax+rcx]   | * | loc_404D83:  ",icc,1
"jmp short loc_404DA4  | * | mov ebx, cs:use_internal_msg ",icc,1
"loc_404D83:   | * | movsxd rax, r14d ",icc,1
"mov ebx, cs:use_internal_msg  | * | lea rcx, off_608048  ",icc,1
"lea rcx, off_608048   | * | test ebx, ebx ",icc,1
"test ebx, ebx  | * | jnz short loc_404DB4 ",icc,1
"mov rcx, [rax+rcx]  | * | jmp loc_404F33 ",icc,1
jnz short loc_404DB4  | * | loc_404DA4:  ,icc,1
"jmp loc_404F33  | * | mov esi, 1  ",icc,1
"loc_404DA4:   | * | mov edx, r14d  ",icc,1
"mov edx, r14d   | * | mov rcx, rax ",icc,1
call _catgets  | * | loc_404DB4:  ,icc,1
"mov rcx, rax  | * | test r15d, r15d ",icc,1
loc_404DB4:   | * | jle short loc_404E0D ,icc,1
"test r15d, r15d  | * | mov [rsp+168h+arg], 18h ",icc,1
"jle short loc_404E0D  | * | lea rax, [rsp+168h+arg_0] ",icc,1
"mov [rsp+168h+arg], 18h  | * | mov [rsp+168h+var_34], 30h  ",icc,1
"lea rax, [rsp+168h+arg_0]  | * | lea rdx, [rsp+168h+var_E8] ",icc,1
"mov [rsp+168h+var_34], 30h   | * | mov [rsp+168h+var_30], rax ",icc,1
"lea rdx, [rsp+168h+var_E8]  | * | mov [rsp+168h+var_28], rdx ",icc,1
"mov [rsp+168h+var_30], rax  | * | lea rdi, print_buf  ",icc,1
"mov [rsp+168h+var_28], rdx  | * | mov rsi, rcx  ",icc,1
"lea rdi, print_buf   | * | lea rdx, [rsp+168h+arg]  ",icc,1
"lea rdx, [rsp+168h+arg]   | * | lea rcx, print_buf ",icc,1
call _vsprintf  | * | loc_404E0D:  ,icc,1
"lea rcx, print_buf  | * | cmp r13d, 1 ",icc,1
loc_404E0D:   | * | jz loc_404EF8 ,icc,1
"cmp r13d, 1  | * | mov rdi, rcx  ",icc,1
"jz loc_404EF8  | * | xor eax, eax ",icc,1
"mov rdi, rcx   | * | call _printf ",icc,1
"xor eax, eax  | * | lea rdi, asc_4062A4  ",icc,1
"call _printf  | * | xor eax, eax ",icc,1
pop r13  | * | loc_404E3E:  ,icc,1
"retn  | * | mov rax, cs:stderr_ptr ",icc,1
"loc_404E3E:   | * | lea rsi, asc_4062A4  ",icc,1
"mov rax, cs:stderr_ptr  | * | mov rdi, [rax]  ",icc,3
"lea rsi, asc_4062A4   | * | xor eax, eax ",icc,2
"mov rdi, [rax]   | * | call _fprintf ",icc,3
call _fprintf  | * | pop rbx ,icc,2
pop r13  | * | loc_404E65:  ,icc,1
loc_404E65:   | * | call _getenv ,icc,1
call _getenv  | * | jz short loc_404EE2 ,icc,1
"jz short loc_404EE2  | * | lea rdi, [rsp+168h+dest]  ",icc,1
"lea rdi, [rsp+168h+dest]   | * | mov rbx, rax ",icc,1
"call _strchr  | * | test rbx, rbx ",icc,1
"mov rbx, rax  | * | jz short loc_404EE2 ",icc,1
"test rbx, rbx  | * | lea rdi, name  ",icc,1
"jz short loc_404EE2  | * | lea rsi, [rsp+168h+dest]  ",icc,1
"lea rsi, [rsp+168h+dest]   | * | mov byte ptr [rbx], 0 ",icc,1
"mov byte ptr [rbx], 0  | * | lea rdi, cat_name  ",icc,1
"mov edx, 1   | * | mov byte ptr [rbx], 2Eh  ",icc,1
"mov byte ptr [rbx], 2Eh   | * | loc_404EE2:  ",icc,1
"loc_404EE2:   | * | cmp rdi, 0FFFFFFFFFFFFFFFFh ",icc,1
"mov rdi, cs:message_catalog  | * | jnz loc_404D65 ",icc,1
"cmp rdi, 0FFFFFFFFFFFFFFFFh  | * | jmp loc_404D83 ",icc,1
jnz loc_404D65  | * | loc_404EF8:  ,icc,1
"jmp loc_404D83  | * | mov rax, cs:stderr_ptr ",icc,1
"loc_404EF8:   | * | mov rsi, rcx  ",icc,1
"mov rsi, rcx   | * | xor eax, eax ",icc,1
"xor eax, eax  | * | mov rax, cs:stderr_ptr ",icc,1
"call _fprintf  | * | lea rsi, asc_4062A4  ",icc,1
pop r13  | * | loc_404F33:  ,icc,1
"retn  | * | mov rdi, cs:message_catalog ",icc,1
loc_404F33:   | * | jmp loc_404DA4 ,icc,1
"mov rdi, cs:message_catalog  | * | __libirc_print endp ",icc,1
jmp loc_404DA4  | * | align 20h ,icc,1
__libirc_print endp  | * | public __intel_cpu_features_init_x ,icc,1
align 20h  | * | __intel_cpu_features_init_x proc near ,icc,1
public __intel_cpu_features_init_x  | * | push rax ,icc,1
__intel_cpu_features_init_x proc near  | * | push rdx ,icc,1
push rax  | * | push rcx ,icc,14
push rdx  | * | push rsi ,icc,2
push rcx  | * | push rdi ,icc,4
push rsi  | * | push r8 ,icc,2
push rdi  | * | push r9 ,icc,2
"push r8  | * | xor edi, edi ",icc,1
push r9  | * | call __intel_cpu_features_init_body ,icc,2
"xor edi, edi  | * | pop r9 ",icc,1
call __intel_cpu_features_init_body  | * | pop r8 ,icc,2
pop r9  | * | pop rdi ,icc,2
pop r8  | * | pop rsi ,icc,2
pop rdi  | * | pop rcx ,icc,4
pop rsi  | * | pop rdx ,icc,2
pop rcx  | * | pop rax ,icc,14
pop rdx  | * | retn ,icc,2
pop rax  | * | __intel_cpu_features_init_x endp ,icc,1
__intel_cpu_features_init_x endp  | * | public __intel_cpu_features_init ,icc,1
align 20h  | * | __intel_cpu_features_init proc near  ,icc,1
public __intel_cpu_features_init  | * | push rax ,icc,1
__intel_cpu_features_init proc near   | * | push rdx ,icc,1
"push r8  | * | mov edi, 1 ",icc,1
"mov edi, 1  | * | pop r9 ",icc,1
pop rax  | * | __intel_cpu_features_init endp ,icc,1
__intel_cpu_features_init endp  | * | __intel_cpu_features_init_body proc near ,icc,1
var_18 = dword ptr -18h  | * | var_10 = dword ptr -10h ,data,2
var_14 = dword ptr -14h  | * | var_C = dword ptr -0Ch ,data,1
"push rbx  | * | xor eax, eax ",icc,1
"mov r11d, edi  | * | cpuid ",icc,1
"xor eax, eax  | * | mov [rsp+8+var_18], eax ",icc,1
"cpuid  | * | mov [rsp+8+var_14], ebx ",icc,1
"mov [rsp+8+var_18], eax  | * | mov [rsp+8+var_10], ecx ",icc,1
"mov [rsp+8+var_14], ebx  | * | mov [rsp+8+var_C], edx ",icc,1
"mov [rsp+8+var_10], ecx  | * | xor sil, sil ",icc,1
"mov [rsp+8+var_C], edx  | * | cmp [rsp+8+var_18], 0 ",icc,1
"xor sil, sil  | * | jz loc_4052DF ",icc,1
"cmp [rsp+8+var_18], 0  | * | cmp r11d, 1 ",icc,1
jz loc_4052DF  | * | jz loc_4052EC ,icc,1
"cmp r11d, 1  | * | loc_404FB0:  ",icc,1
"jz loc_4052EC  | * | mov eax, 1 ",icc,1
loc_404FB0:   | * | cpuid ,icc,1
"mov eax, 1  | * | mov r8d, edx ",icc,1
"cpuid  | * | mov r9d, eax ",icc,1
"mov r8d, edx  | * | and r8d, 1 ",icc,1
"mov r9d, eax  | * | mov edi, ecx ",icc,1
"and r8d, 1  | * | lea r8, ds:1[r8*2] ",icc,1
"mov edi, ecx  | * | mov rax, r8 ",icc,1
"lea r8, ds:1[r8*2]  | * | or rax, 4 ",icc,1
"mov rax, r8  | * | test edx, 8000h ",icc,1
"or rax, 4  | * | cmovnz r8, rax ",icc,1
"test edx, 8000h  | * | mov rcx, r8 ",icc,1
"cmovnz r8, rax  | * | or rcx, 8 ",icc,1
"mov rcx, r8  | * | test edx, 800000h ",icc,1
"or rcx, 8  | * | cmovnz r8, rcx ",icc,1
"test edx, 800000h  | * | test edx, 1000000h ",icc,1
"cmovnz r8, rcx  | * | jz loc_4050E4 ",icc,1
"test edx, 1000000h  | * | or r8, 10h ",icc,1
"jz loc_4050E4  | * | mov r10, r8 ",icc,1
"or r8, 10h  | * | or r10, 20h ",icc,1
"mov r10, r8  | * | test edx, 2000000h ",icc,1
"or r10, 20h  | * | cmovnz r8, r10 ",icc,1
"test edx, 2000000h  | * | mov rsi, r8 ",icc,1
"cmovnz r8, r10  | * | or rsi, 40h ",icc,1
"mov rsi, r8  | * | test edx, 4000000h ",icc,1
"or rsi, 40h  | * | cmovnz r8, rsi ",icc,1
"test edx, 4000000h  | * | mov r10, r8 ",icc,1
"cmovnz r8, rsi  | * | or r10, 80h ",icc,1
"mov r10, r8  | * | test edi, 1 ",icc,1
"or r10, 80h  | * | cmovnz r8, r10 ",icc,1
"test edi, 1  | * | mov rax, r8 ",icc,1
"cmovnz r8, r10  | * | or rax, 100h ",icc,1
"mov rax, r8  | * | test edi, 200h ",icc,1
"or rax, 100h  | * | cmovnz r8, rax ",icc,1
"test edi, 200h  | * | mov rbx, r8 ",icc,1
"cmovnz r8, rax  | * | or rbx, 800h ",icc,1
"mov rbx, r8  | * | test edi, 400000h ",icc,1
"or rbx, 800h  | * | cmovnz r8, rbx ",icc,1
"test edi, 400000h  | * | mov rcx, r8 ",icc,1
"cmovnz r8, rbx  | * | or rcx, 200h ",icc,1
"mov rcx, r8  | * | test edi, 80000h ",icc,1
"or rcx, 200h  | * | cmovnz r8, rcx ",icc,1
"test edi, 80000h  | * | mov rdx, r8 ",icc,1
"cmovnz r8, rcx  | * | or rdx, 400h ",icc,1
"mov rdx, r8  | * | test edi, 100000h ",icc,1
"or rdx, 400h  | * | cmovnz r8, rdx ",icc,1
"test edi, 100000h  | * | mov r10, r8 ",icc,1
"cmovnz r8, rdx  | * | or r10, 1000h ",icc,1
"mov r10, r8  | * | test edi, 800000h ",icc,1
"or r10, 1000h  | * | cmovnz r8, r10 ",icc,1
"test edi, 800000h  | * | mov rsi, r8 ",icc,1
"cmovnz r8, r10  | * | or rsi, 2000h ",icc,1
"mov rsi, r8  | * | test edi, 2 ",icc,1
"or rsi, 2000h  | * | cmovnz r8, rsi ",icc,1
"test edi, 2  | * | mov sil, 1 ",icc,1
"cmovnz r8, rsi  | * | mov rax, r8 ",icc,1
"mov sil, 1  | * | or rax, 4000h ",icc,1
"mov rax, r8  | * | test edi, 2000000h ",icc,1
"or rax, 4000h  | * | cmovnz r8, rax ",icc,1
"test edi, 2000000h  | * | mov eax, 7 ",icc,1
"cmovnz r8, rax  | * | xor ecx, ecx ",icc,1
"mov eax, 7  | * | cpuid ",icc,2
"xor ecx, ecx  | * | mov r10d, ebx ",icc,2
"cpuid  | * | mov rbx, 800000000h ",icc,1
"mov r10d, ebx  | * | or rbx, r8 ",icc,1
"mov rbx, 800000000h  | * | test r10d, 20000000h ",icc,1
"or rbx, r8  | * | cmovnz r8, rbx ",icc,2
"test r10d, 20000000h  | * | loc_4050E4:  ",icc,1
"cmovnz r8, rbx  | * | mov rax, r8 ",icc,1
"loc_4050E4:   | * | or rax, 20000h ",icc,1
"mov rax, r8  | * | test edi, 40000000h ",icc,1
"or rax, 20000h  | * | cmovnz r8, rax ",icc,1
"test edi, 40000000h  | * | test sil, sil ",icc,1
"cmovnz r8, rax  | * | jnz short loc_405108 ",icc,1
"test sil, sil  | * | mov eax, 7 ",icc,1
"jnz short loc_405108  | * | xor ecx, ecx ",icc,1
cpuid  | * | loc_405108:  ,icc,1
"mov r10d, ebx  | * | mov esi, r10d ",icc,1
"loc_405108:   | * | mov rcx, r8 ",icc,1
"mov esi, r10d  | * | and esi, 108h ",icc,1
"mov rcx, r8  | * | or rcx, 80000h ",icc,1
"and esi, 108h  | * | cmp esi, 108h ",icc,1
"or rcx, 80000h  | * | cmovz r8, rcx ",icc,1
"cmp esi, 108h  | * | mov eax, 80000001h ",icc,1
"cmovz r8, rcx  | * | cpuid ",icc,1
"mov eax, 80000001h  | * | mov rdx, r8 ",icc,1
"cpuid  | * | or rdx, 100000h ",icc,1
"mov rdx, r8  | * | test cl, 20h ",icc,1
"or rdx, 100000h  | * | cmovnz r8, rdx ",icc,1
"test cl, 20h  | * | mov rcx, r8 ",icc,1
"cmovnz r8, rdx  | * | or rcx, 200000h ",icc,1
"mov rcx, r8  | * | test r10d, 10h ",icc,1
"or rcx, 200000h  | * | cmovnz r8, rcx ",icc,1
"test r10d, 10h  | * | mov rbx, r8 ",icc,1
"cmovnz r8, rcx  | * | or rbx, 400000h ",icc,1
"mov rbx, r8  | * | test r10d, 800h ",icc,1
"or rbx, 400000h  | * | cmovnz r8, rbx ",icc,1
"test r10d, 800h  | * | mov rsi, r8 ",icc,1
"cmovnz r8, rbx  | * | or rsi, 10000000h ",icc,1
"mov rsi, r8  | * | test r10d, 80000h ",icc,1
"or rsi, 10000000h  | * | cmovnz r8, rsi ",icc,1
"test r10d, 80000h  | * | mov rax, r8 ",icc,1
"cmovnz r8, rsi  | * | or rax, 20000000h ",icc,1
"mov rax, r8  | * | test r10d, 40000h ",icc,1
"or rax, 20000000h  | * | cmovnz r8, rax ",icc,1
"test r10d, 40000h  | * | test edi, 8000000h ",icc,1
"cmovnz r8, rax  | * | jz loc_405296 ",icc,1
"test edi, 8000000h  | * | xor ecx, ecx ",icc,1
jz loc_405296  | * | xgetbv ,icc,1
"xor ecx, ecx  | * | or r8, 1 ",icc,1
"xgetbv  | * | mov edx, eax ",icc,1
"or r8, 1  | * | and edx, 6 ",icc,1
"mov edx, eax  | * | cmp edx, 6 ",icc,1
"and edx, 6  | * | jnz loc_405296 ",icc,1
"cmp edx, 6  | * | mov rdx, r8 ",icc,1
"jnz loc_405296  | * | or rdx, 10000h ",icc,1
"mov rdx, r8  | * | test edi, 10000000h ",icc,1
"or rdx, 10000h  | * | cmovnz r8, rdx ",icc,1
"test edi, 10000000h  | * | mov rcx, r8 ",icc,1
"cmovnz r8, rdx  | * | or rcx, 8000h ",icc,1
"mov rcx, r8  | * | test edi, 20000000h ",icc,1
"or rcx, 8000h  | * | cmovnz r8, rcx ",icc,1
"test edi, 20000000h  | * | mov rbx, r8 ",icc,1
"cmovnz r8, rcx  | * | or rbx, 800000h ",icc,1
"mov rbx, r8  | * | test r10d, 20h ",icc,1
"or rbx, 800000h  | * | cmovnz r8, rbx ",icc,1
"test r10d, 20h  | * | mov rsi, r8 ",icc,1
"cmovnz r8, rbx  | * | or rsi, 40000h ",icc,1
"mov rsi, r8  | * | test edi, 1000h ",icc,1
"or rsi, 40000h  | * | mov edi, eax ",icc,1
"test edi, 1000h  | * | cmovnz r8, rsi ",icc,1
"mov edi, eax  | * | and edi, 18h ",icc,1
"cmovnz r8, rsi  | * | cmp edi, 18h ",icc,1
"and edi, 18h  | * | jnz short loc_40522A ",icc,1
"cmp edi, 18h  | * | or r8, 1 ",icc,1
"jnz short loc_40522A  | * | mov rdx, 1000000000h ",icc,1
"or r8, 1  | * | or rdx, r8 ",icc,1
"mov rdx, 1000000000h  | * | test r10d, 4000h ",icc,1
"or rdx, r8  | * | cmovnz r8, rdx ",icc,2
"test r10d, 4000h  | * | loc_40522A:  ",icc,1
"cmovnz r8, rdx  | * | and eax, 0E0h ",icc,1
"loc_40522A:   | * | cmp eax, 0E0h ",icc,1
"and eax, 0E0h  | * | jnz short loc_405296 ",icc,1
"cmp eax, 0E0h  | * | or r8, 1 ",icc,1
"jnz short loc_405296  | * | mov rdx, 400000000h ",icc,1
"or r8, 1  | * | mov rax, r8 ",icc,1
"mov rdx, 400000000h  | * | mov rcx, 100000000h ",icc,1
"mov rax, r8  | * | or rax, 8000000h ",icc,1
"mov rcx, 100000000h  | * | test r10d, 10000h ",icc,1
"or rax, 8000000h  | * | mov rbx, 200000000h ",icc,1
"test r10d, 10000h  | * | cmovnz r8, rax ",icc,1
"mov rbx, 200000000h  | * | or rdx, r8 ",icc,1
"cmovnz r8, rax  | * | test r10d, 10000000h ",icc,1
"test r10d, 10000000h  | * | or rcx, r8 ",icc,1
"cmovnz r8, rdx  | * | test r10d, 8000000h ",icc,1
"or rcx, r8  | * | cmovnz r8, rcx ",icc,1
"test r10d, 8000000h  | * | or rbx, r8 ",icc,1
"cmovnz r8, rcx  | * | test r10d, 4000000h ",icc,1
"test r10d, 4000000h  | * | loc_405296:  ",icc,1
"cmovnz r8, rbx  | * | mov eax, r9d ",icc,1
"loc_405296:   | * | shr eax, 0Ch ",icc,1
"mov eax, r9d  | * | shr r9d, 4 ",icc,1
"shr eax, 0Ch  | * | and eax, 0F0h ",icc,1
"shr r9d, 4  | * | and r9d, 0Fh ",icc,1
"and eax, 0F0h  | * | add eax, r9d ",icc,1
"and r9d, 0Fh  | * | cmp eax, 1Ch ",icc,1
"add eax, r9d  | * | jz short loc_4052BB ",icc,1
"cmp eax, 1Ch  | * | cmp eax, 26h  ",icc,1
jz short loc_4052BB  | * | jz short loc_4052BB ,icc,1
"cmp eax, 26h   | * | cmp eax, 27h  ",icc,1
jz short loc_4052BB  | * | jnz short loc_4052C0 ,icc,1
"cmp eax, 27h   | * | loc_4052BB:  ",icc,1
"jnz short loc_4052C0  | * | bts r8, 1Fh ",icc,1
loc_4052BB:   | * | loc_4052C0:  ,icc,1
"bts r8, 1Fh  | * | cmp r11d, 1 ",icc,1
loc_4052C0:   | * | jz short loc_4052CF ,icc,1
"cmp r11d, 1  | * | mov cs:__intel_cpu_feature_indicator_x, r8 ",icc,1
jz short loc_4052CF  | * | pop rbx ,icc,1
"mov cs:__intel_cpu_feature_indicator_x, r8  | * | retn ",icc,2
pop rbx  | * | loc_4052CF:  ,icc,1
"retn  | * | mov cs:__intel_cpu_feature_indicator, r8 ",icc,1
"loc_4052CF:   | * | mov cs:__intel_cpu_feature_indicator_x, r8 ",icc,1
"mov cs:__intel_cpu_feature_indicator, r8  | * | pop rbx ",icc,1
pop rbx  | * | loc_4052DF:  ,icc,1
"retn  | * | mov cs:__intel_cpu_feature_indicator, 1 ",icc,1
loc_4052DF:   | * | pop rbx ,icc,1
"mov cs:__intel_cpu_feature_indicator, 1  | * | retn ",icc,1
pop rbx  | * | loc_4052EC:  ,icc,1
"retn  | * | cmp [rsp+8+var_14], 756E6547h ",icc,1
loc_4052EC:   | * | jnz short loc_4052DF ,icc,1
"cmp [rsp+8+var_14], 756E6547h  | * | cmp [rsp+8+var_C], 49656E69h ",icc,1
jnz short loc_4052DF  | * | jnz short loc_4052DF ,icc,2
"cmp [rsp+8+var_C], 49656E69h  | * | cmp [rsp+8+var_10], 6C65746Eh ",icc,1
"cmp [rsp+8+var_10], 6C65746Eh  | * | jmp loc_404FB0 ",icc,1
jnz short loc_4052DF  | * | __intel_cpu_features_init_body endp ,icc,1
jmp loc_404FB0  | * | align 10h ,icc,1
__intel_cpu_features_init_body endp  | * | public __cacheSize ,icc,1
align 10h  | * | __cacheSize proc near ,icc,1
var_150 = dword ptr -150h  | * | var_138 = dword ptr -138h ,data,1
var_140 = qword ptr -140h  | * | var_134 = dword ptr -134h ,data,1
var_138 = dword ptr -138h  | * | var_130 = qword ptr -130h ,data,1
var_134 = dword ptr -134h  | * | var_128 = byte ptr -128h ,data,1
var_130 = qword ptr -130h  | * | var_124 = dword ptr -124h ,data,1
var_128 = byte ptr -128h  | * | var_120 = dword ptr -120h ,data,1
var_124 = dword ptr -124h  | * | var_A8 = qword ptr -0A8h ,data,1
var_120 = dword ptr -120h  | * | var_A0 = byte ptr -0A0h ,data,1
var_A8 = qword ptr -0A8h  | * | var_9D = byte ptr -9Dh ,data,1
var_A0 = byte ptr -0A0h  | * | var_60 = qword ptr -60h ,data,1
var_9D = byte ptr -9Dh  | * | var_58 = qword ptr -58h ,data,1
var_60 = qword ptr -60h  | * | var_50 = dword ptr -50h ,data,2
var_50 = dword ptr -50h  | * | var_40 = qword ptr -40h ,data,1
var_30 = qword ptr -30h  | * | var_20 = qword ptr -20h ,data,2
var_28 = qword ptr -28h  | * | var_18 = dword ptr -18h ,data,1
var_20 = qword ptr -20h  | * | var_14 = dword ptr -14h ,data,1
"push rbp  | * | sub rsp, 150h ",icc,1
"mov rbp, rsp  | * | mov r10d, edi ",icc,1
"sub rsp, 150h  | * | lea eax, [r10-1] ",icc,1
"mov r10d, edi  | * | cmp eax, 2 ",icc,1
"lea eax, [r10-1]  | * | ja short loc_405347 ",icc,1
"cmp eax, 2  | * | lea rsi, unk_22BBAD6C ",icc,1
"ja short loc_405347  | * | cmp dword ptr [rsi], 0 ",icc,1
"lea rsi, unk_22BBAD6C  | * | jz short loc_40534E ",icc,1
"cmp dword ptr [rsi], 0  | * | lea r9, __libirc_cache_tbl ",icc,1
jz short loc_40534E  | * | loc_40533A:  ,icc,1
"lea r9, __libirc_cache_tbl  | * | shl r10d, 2 ",icc,1
"loc_40533A:   | * | mov eax, [r9+r10*4] ",icc,1
"shl r10d, 2  | * | mov rsp, rbp ",icc,1
"mov eax, [r9+r10*4]  | * | pop rbp ",icc,1
pop rbp  | * | loc_405347:  ,icc,1
"loc_405347:   | * | mov rsp, rbp ",icc,1
pop rbp  | * | loc_40534E:  ,icc,1
"retn  | * | mov [rbp+var_10], 0 ",icc,1
loc_40534E:   | * | push rax ,icc,1
"mov [rbp+var_10], 0  | * | push rcx ",icc,1
push rax  | * | pushfq ,icc,4
push rcx  | * | pop rax ,icc,2
"pushfq  | * | mov ecx, eax ",icc,2
"pop rax  | * | xor eax, 200000h ",icc,2
"mov ecx, eax  | * | push rax ",icc,2
"xor eax, 200000h  | * | popfq ",icc,2
popfq  | * | pop rax ,icc,4
"pushfq  | * | cmp eax, ecx ",icc,2
pop rax  | * | jz short loc_405370 ,icc,1
"cmp eax, ecx  | * | mov [rbp+var_10], 1 ",icc,1
jz short loc_405370  | * | push rcx ,icc,1
"mov [rbp+var_10], 1  | * | loc_405370:  ",icc,1
push rcx  | * | popfq ,icc,2
loc_405370:   | * | pop rcx ,icc,1
"pop rcx  | * | cmp [rbp+var_10], 0 ",icc,1
pop rax  | * | jnz short loc_405385 ,icc,1
"cmp [rbp+var_10], 0  | * | lea r9, __libirc_cache_tbl ",icc,1
jnz short loc_405385  | * | jmp loc_4056E6 ,icc,1
"lea r9, __libirc_cache_tbl  | * | loc_405385:  ",icc,1
"jmp loc_4056E6  | * | mov rax, 49656E69756E6547h ",icc,1
"loc_405385:   | * | lea rcx, [rbp+var_18] ",icc,1
"mov rax, 49656E69756E6547h  | * | xor edx, edx ",icc,1
"lea rcx, [rbp+var_18]  | * | mov [rbp+var_28], rcx ",icc,1
"xor edx, edx  | * | mov [rbp+var_60], rax ",icc,1
"mov [rbp+var_28], rcx  | * | mov [rbp+var_58], 6C65746Eh ",icc,1
"mov [rbp+var_60], rax  | * | mov [rbp+var_14], edx ",icc,1
"mov [rbp+var_58], 6C65746Eh  | * | mov [rcx], edx ",icc,1
"mov [rbp+var_14], edx  | * | mov [rbp+var_20], rbx ",icc,1
"mov [rcx], edx  | * | push rax ",icc,1
"mov [rbp+var_20], rbx  | * | push rbx ",icc,2
push rbx  | * | push rdx ,icc,12
"push rcx  | * | mov eax, 0 ",icc,2
push rdx  | * | cpuid ,icc,2
"mov eax, 0  | * | cmp dword ptr [rbp+var_60], ebx ",icc,1
cpuid  | * | jnz short loc_4053D5 ,icc,1
"cmp dword ptr [rbp+var_60], ebx  | * | cmp dword ptr [rbp+var_60+4], edx ",icc,1
jnz short loc_4053D5  | * | jnz short loc_4053D5 ,icc,2
"cmp dword ptr [rbp+var_60+4], edx  | * | cmp dword ptr [rbp+var_58], ecx ",icc,1
"cmp dword ptr [rbp+var_58], ecx  | * | mov [rbp+var_14], 1 ",icc,1
"jnz short loc_4053D5  | * | mov rdx, [rbp+var_28] ",icc,1
"mov [rbp+var_14], 1  | * | mov [rdx], eax ",icc,1
"mov rdx, [rbp+var_28]  | * | loc_4053D5:  ",icc,1
"mov [rdx], eax  | * | pop rdx ",icc,2
loc_4053D5:   | * | pop rcx ,icc,1
pop rdx  | * | pop rbx ,icc,12
"pop rbx  | * | lea r9, __libirc_cache_tbl ",icc,1
"pop rax  | * | lea rdx, unk_22BBAD64 ",icc,2
"lea r9, __libirc_cache_tbl  | * | mov eax, [rbp+var_14] ",icc,1
"lea rdx, unk_22BBAD64  | * | mov ecx, [rbp+var_18] ",icc,1
"mov eax, [rbp+var_14]  | * | cmp ecx, 4 ",icc,1
"mov ecx, [rbp+var_18]  | * | mov rbx, [rbp+var_20] ",icc,1
"cmp ecx, 4  | * | mov [r9], eax ",icc,1
"mov rbx, [rbp+var_20]  | * | mov [rdx], ecx ",icc,1
"mov [r9], eax  | * | jl loc_40551A ",icc,1
"mov [rdx], ecx  | * | mov [rbp+var_134], 0 ",icc,1
"jl loc_40551A  | * | lea rax, [rbp+var_128] ",icc,1
"mov [rbp+var_134], 0  | * | mov [rbp+var_A8], rax ",icc,1
"lea rax, [rbp+var_128]  | * | mov [rbp+var_20], rbx ",icc,1
"mov [rbp+var_A8], rax  | * | push rax ",icc,1
"push rdx  | * | mov r8, [rbp+var_A8] ",icc,1
"push rdi  | * | mov edi, 0 ",icc,2
"mov r8, [rbp+var_A8]  | * | loc_40542C:  ",icc,1
"mov edi, 0  | * | mov ecx, edi ",icc,2
"loc_40542C:   | * | mov eax, 4 ",icc,1
"mov ecx, edi  | * | cpuid ",icc,2
"mov eax, 4  | * | test eax, 1Fh ",icc,2
cpuid  | * | jz short loc_405459 ,icc,1
"test eax, 1Fh  | * | mov [r8], eax ",icc,2
"jz short loc_405459  | * | mov [r8+4], ebx ",icc,1
"mov [r8], eax  | * | mov [r8+8], ecx ",icc,10
"mov [r8+4], ebx  | * | mov [r8+0Ch], edx ",icc,10
"mov [r8+8], ecx  | * | add edi, 1 ",icc,2
"mov [r8+0Ch], edx  | * | cmp edi, 8 ",icc,2
"add edi, 1  | * | jge short loc_405459 ",icc,1
"cmp edi, 8  | * | add r8, 10h ",icc,2
jge short loc_405459  | * | jmp short loc_40542C ,icc,1
"add r8, 10h  | * | loc_405459:  ",icc,1
"jmp short loc_40542C  | * | mov [rbp+var_134], edi ",icc,1
loc_405459:   | * | pop rdi ,icc,1
"mov [rbp+var_134], edi  | * | pop rdx ",icc,1
"pop rbx  | * | xor edi, edi ",icc,1
"pop rax  | * | movsxd r8, [rbp+var_134] ",icc,1
"xor edi, edi  | * | xor r11d, r11d ",icc,1
"movsxd r8, [rbp+var_134]  | * | mov rbx, [rbp+var_20] ",icc,1
"xor r11d, r11d  | * | test r8, r8 ",icc,1
"mov rbx, [rbp+var_20]  | * | jle loc_40551A ",icc,1
"test r8, r8  | * | mov [rbp+var_48], r15 ",icc,1
jle loc_40551A  | * | loc_405481:  ,icc,1
"mov [rbp+var_48], r15  | * | mov dl, [rbp+r11+var_128] ",icc,1
"loc_405481:   | * | mov al, dl ",icc,1
"mov dl, [rbp+r11+var_128]  | * | and al, 1Dh ",icc,1
"mov al, dl  | * | cmp al, 1 ",icc,1
"and al, 1Dh  | * | jnz short loc_405506 ",icc,1
"cmp al, 1  | * | and dl, 0E0h ",icc,1
"jnz short loc_405506  | * | shr dl, 5 ",icc,1
"and dl, 0E0h  | * | movzx edx, dl ",icc,1
"shr dl, 5  | * | shl rdx, 4 ",icc,1
"movzx edx, dl  | * | mov eax, [rbp+r11+var_124] ",icc,1
"shl rdx, 4  | * | movzx r15d, word ptr [rbp+r11+var_124+2] ",icc,1
"mov eax, [rbp+r11+var_124]  | * | and eax, 3FF000h ",icc,1
"movzx r15d, word ptr [rbp+r11+var_124+2]  | * | and r15d, 0FFC0h ",icc,1
"and eax, 3FF000h  | * | shr eax, 0Ch ",icc,1
"and r15d, 0FFC0h  | * | shr r15d, 6 ",icc,1
"shr eax, 0Ch  | * | inc eax ",icc,1
"shr r15d, 6  | * | movzx ecx, word ptr [rbp+r11+var_124] ",icc,1
inc eax  | * | inc r15d ,icc,1
"movzx ecx, word ptr [rbp+r11+var_124]  | * | and ecx, 0FFFh ",icc,1
"inc r15d  | * | mov [rdx+r9+0Ch], r15d ",icc,1
"and ecx, 0FFFh  | * | inc ecx ",icc,1
"mov [rdx+r9+0Ch], r15d  | * | mov [rdx+r9+8], eax ",icc,1
"inc ecx  | * | imul eax, r15d ",icc,1
"mov [rdx+r9+8], eax  | * | mov r15d, [rbp+r11+var_120] ",icc,1
"imul eax, r15d  | * | inc r15d ",icc,1
"mov r15d, [rbp+r11+var_120]  | * | imul r15d, ecx ",icc,1
"inc r15d  | * | imul r15d, eax ",icc,1
"imul r15d, ecx  | * | shr r15d, 0Ah ",icc,1
"imul r15d, eax  | * | mov [rdx+r9+4], ecx ",icc,1
"shr r15d, 0Ah  | * | mov [rdx+r9], r15d ",icc,1
"mov [rdx+r9+4], ecx  | * | loc_405506:  ",icc,1
"mov [rdx+r9], r15d  | * | inc rdi ",icc,1
"loc_405506:   | * | add r11, 10h ",icc,1
"inc rdi  | * | cmp rdi, r8 ",icc,1
"add r11, 10h  | * | jl loc_405481 ",icc,1
"cmp rdi, r8  | * | mov r15, [rbp+var_48] ",icc,1
jl loc_405481  | * | loc_40551A:  ,icc,1
"mov r15, [rbp+var_48]  | * | lea rax, unk_22BBAD70 ",icc,1
"loc_40551A:   | * | cmp dword ptr [rax], 0 ",icc,1
"lea rax, unk_22BBAD70  | * | jnz loc_4056E6 ",icc,1
"cmp dword ptr [rax], 0  | * | cmp [rbp+var_18], 2 ",icc,1
jnz loc_4056E6  | * | jl loc_4056E6 ,icc,1
"cmp [rbp+var_18], 2  | * | mov [rbp+var_20], rbx ",icc,1
"jl loc_4056E6  | * | lea rdx, [rbp+var_A0] ",icc,1
"mov [rbp+var_20], rbx  | * | mov [rbp+var_130], rdx ",icc,1
"lea rdx, [rbp+var_A0]  | * | mov rdi, rax ",icc,1
"mov [rbp+var_130], rdx  | * | push rax ",icc,1
"mov rdi, rax  | * | push rbx ",icc,1
"push rcx  | * | mov r8, [rbp+var_130] ",icc,1
"push rdx  | * | mov eax, 2 ",icc,2
"mov r8, [rbp+var_130]  | * | cpuid ",icc,1
"mov eax, 2  | * | mov [r8], eax ",icc,2
"cpuid  | * | mov [r8+4], ebx ",icc,8
"mov [r8+8], ecx  | * | cmp al, 1 ",icc,2
"mov [r8+0Ch], edx  | * | jle short loc_4055BB ",icc,1
"cmp al, 1  | * | cmp al, 2 ",icc,2
jle short loc_4055BB  | * | jle short loc_4055A4 ,icc,1
"cmp al, 2  | * | cmp al, 3 ",icc,2
jle short loc_4055A4  | * | jle short loc_40558D ,icc,1
"cmp al, 3  | * | mov eax, 2 ",icc,2
jle short loc_40558D  | * | cpuid ,icc,1
"mov eax, 2  | * | mov [r8+30h], eax ",icc,2
"cpuid  | * | mov [r8+34h], ebx ",icc,2
"mov [r8+30h], eax  | * | mov [r8+38h], ecx ",icc,2
"mov [r8+34h], ebx  | * | mov [r8+3Ch], edx ",icc,2
"mov [r8+38h], ecx  | * | loc_40558D:  ",icc,1
"mov [r8+3Ch], edx  | * | mov eax, 2 ",icc,2
loc_40558D:   | * | cpuid ,icc,1
"mov eax, 2  | * | mov [r8+20h], eax ",icc,2
"cpuid  | * | mov [r8+24h], ebx ",icc,2
"mov [r8+20h], eax  | * | mov [r8+28h], ecx ",icc,2
"mov [r8+24h], ebx  | * | mov [r8+2Ch], edx ",icc,2
"mov [r8+28h], ecx  | * | loc_4055A4:  ",icc,1
"mov [r8+2Ch], edx  | * | mov eax, 2 ",icc,2
loc_4055A4:   | * | cpuid ,icc,1
"mov eax, 2  | * | mov [r8+10h], eax ",icc,2
"cpuid  | * | mov [r8+14h], ebx ",icc,2
"mov [r8+10h], eax  | * | mov [r8+18h], ecx ",icc,2
"mov [r8+14h], ebx  | * | mov [r8+1Ch], edx ",icc,2
"mov [r8+18h], ecx  | * | loc_4055BB:  ",icc,1
"mov [r8+1Ch], edx  | * | pop rdx ",icc,2
loc_4055BB:   | * | pop rcx ,icc,1
"pop rbx  | * | movzx edx, [rbp+var_A0] ",icc,1
"pop rax  | * | mov ecx, 10h ",icc,1
"movzx edx, [rbp+var_A0]  | * | mov r11d, edx ",icc,1
"mov ecx, 10h  | * | mov rax, rdi ",icc,1
"mov r11d, edx  | * | shl r11, 2 ",icc,1
"mov rax, rdi  | * | cmp edx, 4 ",icc,1
"shl r11, 2  | * | mov rbx, [rbp+var_20] ",icc,1
"cmp edx, 4  | * | cmovg r11, rcx ",icc,1
"mov rbx, [rbp+var_20]  | * | xor edi, edi ",icc,1
"cmovg r11, rcx  | * | test r11, r11 ",icc,1
"xor edi, edi  | * | jle loc_4056E6 ",icc,1
"test r11, r11  | * | mov [rbp+var_50], r10d ",icc,1
"jle loc_4056E6  | * | mov r10, rax ",icc,1
"mov [rbp+var_50], r10d  | * | mov [rbp+var_20], rbx ",icc,1
"mov r10, rax  | * | mov [rbp+var_40], r12 ",icc,1
"mov [rbp+var_20], rbx  | * | mov [rbp+var_38], r13 ",icc,1
"mov [rbp+var_40], r12  | * | mov [rbp+var_30], r14 ",icc,1
"mov [rbp+var_38], r13  | * | mov [rbp+var_48], r15 ",icc,1
"mov [rbp+var_30], r14  | * | loc_405606:  ",icc,1
"mov [rbp+var_48], r15  | * | test [rbp+rdi*4+var_9D], 80h ",icc,1
loc_405606:   | * | jnz loc_4056B3 ,icc,1
"test [rbp+rdi*4+var_9D], 80h  | * | xor r13d, r13d ",icc,1
"jnz loc_4056B3  | * | lea r12, [rbp+rdi*4+var_A0] ",icc,1
"xor r13d, r13d  | * | loc_40561F:  ",icc,1
"lea r12, [rbp+rdi*4+var_A0]  | * | movzx r14d, byte ptr [r13+r12+0] ",icc,1
"loc_40561F:   | * | cmp r14, 0FFh ",icc,1
"movzx r14d, byte ptr [r13+r12+0]  | * | jz loc_40578A ",icc,1
"cmp r14, 0FFh  | * | lea r15, cpuid2_cache_tbl ",icc,2
"jz loc_40578A  | * | mov dl, [r15+r14*8] ",icc,1
"lea r15, cpuid2_cache_tbl  | * | and dl, 7 ",icc,1
"mov dl, [r15+r14*8]  | * | movzx esi, dl ",icc,1
"and dl, 7  | * | test rsi, rsi ",icc,1
"movzx esi, dl  | * | jz short loc_4056A6 ",icc,1
"test rsi, rsi  | * | cmp rsi, 2 ",icc,1
jz short loc_4056A6  | * | jz loc_4056F1 ,icc,1
"cmp rsi, 2  | * | loc_405652:  ",icc,1
"jz loc_4056F1  | * | lea rbx, unk_6088A2 ",icc,1
"loc_405652:   | * | movzx edx, word ptr [r15+r14*8] ",icc,1
"lea rbx, unk_6088A2  | * | mov ecx, [r15+r14*8] ",icc,1
"movzx edx, word ptr [r15+r14*8]  | * | and edx, 7FF8h ",icc,1
"mov ecx, [r15+r14*8]  | * | and ecx, 3F8000h ",icc,1
"and edx, 7FF8h  | * | lea r15, unk_6088A4 ",icc,1
"and ecx, 3F8000h  | * | shl rsi, 4 ",icc,1
"lea r15, unk_6088A4  | * | movzx r8d, word ptr [rbx+r14*8] ",icc,1
"shl rsi, 4  | * | and r8d, 0FFC0h ",icc,1
"movzx r8d, word ptr [rbx+r14*8]  | * | mov r14d, [r15+r14*8] ",icc,1
"and r8d, 0FFC0h  | * | shr edx, 3 ",icc,1
"mov r14d, [r15+r14*8]  | * | shr ecx, 0Fh ",icc,1
"shr edx, 3  | * | shr r8d, 6 ",icc,1
"shr ecx, 0Fh  | * | mov [rsi+r9+4], edx ",icc,1
"shr r8d, 6  | * | mov [rsi+r9+8], ecx ",icc,1
"mov [rsi+r9+4], edx  | * | mov [rsi+r9+0Ch], r8d ",icc,1
"mov [rsi+r9+8], ecx  | * | mov [rsi+r9], r14d ",icc,1
"mov [rsi+r9+0Ch], r8d  | * | loc_4056A6:  ",icc,1
"mov [rsi+r9], r14d  | * | inc r13 ",icc,1
"loc_4056A6:   | * | cmp r13, 4 ",icc,1
inc r13  | * | jl loc_40561F ,icc,1
"cmp r13, 4  | * | loc_4056B3:  ",icc,1
jl loc_40561F  | * | nop dword ptr [rax+rax+00000000h] ,icc,1
loc_4056B3:   | * | inc rdi ,icc,1
"nop dword ptr [rax+rax+00000000h]  | * | cmp rdi, r11 ",icc,1
inc rdi  | * | jl loc_405606 ,icc,1
"cmp rdi, r11  | * | mov r10d, [rbp+var_50] ",icc,1
"jl loc_405606  | * | lea rsi, unk_22BBAD6C ",icc,1
"mov r10d, [rbp+var_50]  | * | mov rbx, [rbp+var_20] ",icc,1
"lea rsi, unk_22BBAD6C  | * | mov r12, [rbp+var_40] ",icc,1
"mov rbx, [rbp+var_20]  | * | mov r13, [rbp+var_38] ",icc,2
"mov r12, [rbp+var_40]  | * | mov r14, [rbp+var_30] ",icc,2
"mov r13, [rbp+var_38]  | * | mov r15, [rbp+var_48] ",icc,2
"mov r14, [rbp+var_30]  | * | loc_4056E6:  ",icc,1
"mov r15, [rbp+var_48]  | * | mov dword ptr [rsi], 1 ",icc,1
loc_4056E6:   | * | jmp loc_40533A ,icc,1
"mov dword ptr [rsi], 1  | * | loc_4056F1:  ",icc,1
"jmp loc_40533A  | * | cmp r14, 49h  ",icc,1
loc_4056F1:   | * | jnz loc_405652 ,icc,1
"cmp r14, 49h   | * | mov [rbp+var_138], 1 ",icc,1
"jnz loc_405652  | * | lea rdx, [rbp+var_150] ",icc,1
"mov [rbp+var_138], 1  | * | mov [rbp+var_140], rdx ",icc,1
"lea rdx, [rbp+var_150]  | * | push rax ",icc,1
"mov [rbp+var_140], rdx  | * | push rbx ",icc,1
"push rcx  | * | mov r8, [rbp+var_140] ",icc,1
"push rdx  | * | mov eax, [rbp+var_138] ",icc,1
"mov r8, [rbp+var_140]  | * | cpuid ",icc,1
"mov eax, [rbp+var_138]  | * | mov [r8], eax ",icc,1
"mov [r8+8], ecx  | * | pop rdx ",icc,6
"mov [r8+0Ch], edx  | * | pop rcx ",icc,6
"pop rbx  | * | mov ebx, [rbp+var_150] ",icc,1
"pop rax  | * | mov edx, ebx ",icc,1
"mov ebx, [rbp+var_150]  | * | shr edx, 8 ",icc,1
"mov edx, ebx  | * | and edx, 0Fh ",icc,1
"shr edx, 8  | * | cmp edx, 0Fh ",icc,1
"and edx, 0Fh  | * | jnz loc_405652 ",icc,1
"cmp edx, 0Fh  | * | mov ecx, ebx ",icc,1
"jnz loc_405652  | * | shr ecx, 14h ",icc,1
"mov ecx, ebx  | * | and ecx, 0F0h ",icc,1
"shr ecx, 14h  | * | or ecx, edx ",icc,1
"and ecx, 0F0h  | * | cmp ecx, 0Fh ",icc,1
"or ecx, edx  | * | jnz loc_405652 ",icc,1
"cmp ecx, 0Fh  | * | mov edx, ebx ",icc,1
"jnz loc_405652  | * | mov ecx, 3 ",icc,1
"mov edx, ebx  | * | shr edx, 0Ch ",icc,1
"mov ecx, 3  | * | shr ebx, 4 ",icc,1
"shr edx, 0Ch  | * | and edx, 0F0h ",icc,1
"shr ebx, 4  | * | and ebx, 0Fh ",icc,1
"and edx, 0F0h  | * | or edx, ebx ",icc,1
"and ebx, 0Fh  | * | cmp edx, 6 ",icc,1
"or edx, ebx  | * | cmovz rsi, rcx ",icc,1
"cmp edx, 6  | * | jmp loc_405652 ",icc,1
"cmovz rsi, rcx  | * | loc_40578A:  ",icc,1
"jmp loc_405652  | * | mov rax, r10 ",icc,1
"loc_40578A:   | * | lea rsi, unk_22BBAD6C ",icc,1
"mov rax, r10  | * | pxor xmm0, xmm0 ",icc,2
"lea rsi, unk_22BBAD6C  | * | lea rdx, unk_22BBAD90 ",icc,1
"pxor xmm0, xmm0  | * | movdqa xmmword ptr [rax], xmm0 ",icc,2
"lea rdx, unk_22BBAD90  | * | lea rax, unk_22BBAD80 ",icc,2
"movdqa xmmword ptr [rax], xmm0  | * | mov r10d, [rbp+var_50] ",icc,1
"lea rax, unk_22BBAD80  | * | mov rbx, [rbp+var_20] ",icc,1
"mov r10d, [rbp+var_50]  | * | mov r12, [rbp+var_40] ",icc,1
"mov r14, [rbp+var_30]  | * | movdqa xmmword ptr [rax], xmm0 ",icc,1
"mov r15, [rbp+var_48]  | * | movdqa xmmword ptr [rdx], xmm0 ",icc,1
"movdqa xmmword ptr [rax], xmm0  | * | jmp loc_4056E6 ",icc,1
"movdqa xmmword ptr [rdx], xmm0  | * | __cacheSize endp  ",icc,1
jmp loc_4056E6  | * | align 10h ,icc,1
__cacheSize endp   | * | __sti__$E_0 proc near  ,icc,1
var_190 = dword ptr -190h  | * | var_178 = dword ptr -178h ,data,1
var_180 = qword ptr -180h  | * | var_174 = dword ptr -174h ,data,1
var_178 = dword ptr -178h  | * | var_170 = qword ptr -170h ,data,1
var_174 = dword ptr -174h  | * | var_168 = byte ptr -168h ,data,1
var_170 = qword ptr -170h  | * | var_164 = dword ptr -164h ,data,1
var_168 = byte ptr -168h  | * | var_160 = dword ptr -160h ,data,1
var_164 = dword ptr -164h  | * | var_E8 = qword ptr -0E8h ,data,1
var_160 = dword ptr -160h  | * | var_E0 = byte ptr -0E0h ,data,1
var_E8 = qword ptr -0E8h  | * | var_DD = byte ptr -0DDh ,data,1
var_E0 = byte ptr -0E0h  | * | var_A0 = qword ptr -0A0h ,data,1
var_DD = byte ptr -0DDh  | * | var_98 = qword ptr -98h ,data,1
var_A0 = qword ptr -0A0h  | * | var_90 = qword ptr -90h ,data,1
var_98 = qword ptr -98h  | * | var_88 = dword ptr -88h ,data,1
var_90 = qword ptr -90h  | * | var_84 = dword ptr -84h ,data,1
var_88 = dword ptr -88h  | * | var_80 = dword ptr -80h ,data,1
var_84 = dword ptr -84h  | * | var_7C = dword ptr -7Ch ,data,1
var_80 = dword ptr -80h  | * | var_78 = qword ptr -78h ,data,1
var_7C = dword ptr -7Ch  | * | var_70 = qword ptr -70h ,data,1
var_78 = qword ptr -78h  | * | var_68 = qword ptr -68h ,data,1
var_70 = qword ptr -70h  | * | var_60 = qword ptr -60h ,data,1
var_68 = qword ptr -68h  | * | var_58 = qword ptr -58h ,data,1
var_58 = qword ptr -58h  | * | var_4C = dword ptr -4Ch ,data,1
var_50 = dword ptr -50h  | * | var_48 = qword ptr -48h ,data,1
var_4C = dword ptr -4Ch  | * | var_40 = qword ptr -40h ,data,1
var_40 = qword ptr -40h  | * | var_30 = dword ptr -30h ,data,1
var_38 = qword ptr -38h  | * | var_2C = dword ptr -2Ch ,data,1
var_30 = dword ptr -30h  | * | var_28 = dword ptr -28h ,data,1
var_2C = dword ptr -2Ch  | * | var_24 = dword ptr -24h ,data,1
var_28 = dword ptr -28h  | * | var_20 = dword ptr -20h ,data,1
var_24 = dword ptr -24h  | * | var_1C = dword ptr -1Ch ,data,1
var_20 = dword ptr -20h  | * | var_18 = qword ptr -18h ,data,1
var_1C = dword ptr -1Ch  | * | var_10 = dword ptr -10h ,data,1
var_18 = qword ptr -18h  | * | var_C = dword ptr -0Ch ,data,1
var_10 = dword ptr -10h  | * | var_8 = qword ptr -8 ,data,1
"push rbp  | * | sub rsp, 190h ",icc,1
"mov rbp, rsp  | * | lea r11, unk_22BBAD6C ",icc,1
"sub rsp, 190h  | * | xor r10d, r10d ",icc,1
"lea r11, unk_22BBAD6C  | * | xor r8d, r8d ",icc,1
"xor r10d, r10d  | * | mov [rbp+var_8], rbx ",icc,1
"xor r8d, r8d  | * | xor r9d, r9d ",icc,1
"mov [rbp+var_8], rbx  | * | cmp dword ptr [r11], 0 ",icc,1
"xor r9d, r9d  | * | jz loc_405A37 ",icc,1
"cmp dword ptr [r11], 0  | * | lea rsi, __libirc_cache_tbl ",icc,1
jz loc_405A37  | * | loc_405800:  ,icc,1
"lea rsi, __libirc_cache_tbl  | * | cmp dword ptr [rsi], 0 ",icc,1
loc_405800:   | * | jz loc_4058FA ,icc,1
"cmp dword ptr [rsi], 0  | * | lea rax, unk_22BBAD64 ",icc,1
"jz loc_4058FA  | * | cmp dword ptr [rax], 0 ",icc,1
"lea rax, unk_22BBAD64  | * | jbe short loc_405847 ",icc,1
"cmp dword ptr [rax], 0  | * | push rbx ",icc,1
"jbe short loc_405847  | * | mov eax, 1 ",icc,1
push rbx  | * | cpuid ,icc,1
"mov eax, 1  | * | mov [rbp+var_24], ebx ",icc,1
"cpuid  | * | mov [rbp+var_1C], edx ",icc,1
"mov [rbp+var_24], ebx  | * | mov [rbp+var_C], eax ",icc,1
"mov [rbp+var_1C], edx  | * | pop rbx ",icc,1
"mov [rbp+var_C], eax  | * | mov r10d, [rbp+var_1C] ",icc,1
"pop rbx  | * | test r10d, 4000000h ",icc,1
"mov r10d, [rbp+var_1C]  | * | jz short loc_40583C ",icc,1
"test r10d, 4000000h  | * | mov r10d, 2 ",icc,1
jz short loc_40583C  | * | jmp short loc_405847 ,icc,1
"mov r10d, 2  | * | loc_40583C:  ",icc,1
"jmp short loc_405847  | * | and r10d, 800000h ",icc,1
"loc_40583C:   | * | shr r10d, 17h ",icc,1
"and r10d, 800000h  | * | loc_405847:  ",icc,1
"shr r10d, 17h  | * | lea rax, unk_22BBAD70 ",icc,1
"loc_405847:   | * | mov eax, [rax] ",icc,1
"lea rax, unk_22BBAD70  | * | test eax, eax ",icc,1
"mov eax, [rax]  | * | jbe short loc_40586C ",icc,1
"test eax, eax  | * | lea r9, unk_22BBAD74 ",icc,1
"jbe short loc_40586C  | * | mov r8d, eax ",icc,1
"lea r9, unk_22BBAD74  | * | lea rdx, unk_22BBAD78 ",icc,1
"mov r8d, eax  | * | mov r9d, [r9] ",icc,1
"lea rdx, unk_22BBAD78  | * | imul r9d, [rdx] ",icc,1
"mov r9d, [r9]  | * | loc_40586C:  ",icc,1
"imul r9d, [rdx]  | * | lea rdx, unk_22BBAD80 ",icc,1
"loc_40586C:   | * | mov edx, [rdx] ",icc,1
"lea rdx, unk_22BBAD80  | * | cmp edx, r8d ",icc,1
"mov edx, [rdx]  | * | jbe short loc_405892 ",icc,1
"cmp edx, r8d  | * | lea r9, unk_22BBAD84 ",icc,1
"jbe short loc_405892  | * | mov r8d, edx ",icc,1
"lea r9, unk_22BBAD84  | * | lea rdx, unk_22BBAD88 ",icc,1
"mov r8d, edx  | * | mov r9d, [r9] ",icc,2
"lea rdx, unk_22BBAD88  | * | imul r9d, [rdx] ",icc,1
"mov r9d, [r9]  | * | loc_405892:  ",icc,1
"imul r9d, [rdx]  | * | lea rdx, unk_22BBAD90 ",icc,1
"loc_405892:   | * | mov edx, [rdx] ",icc,1
"lea rdx, unk_22BBAD90  | * | cmp edx, r8d ",icc,1
"mov edx, [rdx]  | * | jbe short loc_4058B8 ",icc,1
"cmp edx, r8d  | * | lea r9, unk_22BBAD94 ",icc,1
"jbe short loc_4058B8  | * | mov r8d, edx ",icc,1
"lea r9, unk_22BBAD94  | * | lea rdx, unk_22BBAD98 ",icc,1
"lea rdx, unk_22BBAD98  | * | imul r9d, [rdx] ",icc,1
"mov r9d, [r9]  | * | loc_4058B8:  ",icc,1
"imul r9d, [rdx]  | * | shl r8d, 0Ah ",icc,1
"loc_4058B8:   | * | shl eax, 0Ah ",icc,1
"shl r8d, 0Ah  | * | mov edx, r8d ",icc,1
"shl eax, 0Ah  | * | mov ecx, eax ",icc,1
"mov edx, r8d  | * | shr edx, 1Fh ",icc,1
"mov ecx, eax  | * | shr ecx, 1Fh ",icc,1
"shr edx, 1Fh  | * | mov cs:__libirc_largest_cache_size, r8d ",icc,1
"shr ecx, 1Fh  | * | add r8d, edx ",icc,1
"mov cs:__libirc_largest_cache_size, r8d  | * | mov cs:__libirc_data_cache_size, eax ",icc,1
"add r8d, edx  | * | add eax, ecx ",icc,1
"mov cs:__libirc_data_cache_size, eax  | * | sar r8d, 1 ",icc,1
"add eax, ecx  | * | sar eax, 1 ",icc,1
"sar r8d, 1  | * | mov cs:__libirc_largest_cache_size_half, r8d ",icc,1
"sar eax, 1  | * | mov cs:__libirc_data_cache_size_half, eax ",icc,1
"mov cs:__libirc_largest_cache_size_half, r8d  | * | mov cs:__libirc_largest_cachelinesize, r9d ",icc,1
"mov cs:__libirc_data_cache_size_half, eax  | * | jmp loc_405A20 ",icc,1
"mov cs:__libirc_largest_cachelinesize, r9d  | * | loc_4058FA:  ",icc,1
"jmp loc_405A20  | * | xor edx, edx ",icc,1
"loc_4058FA:   | * | mov rax, 69746E6568747541h ",icc,1
"xor edx, edx  | * | lea rsi, [rbp+var_88] ",icc,1
"mov rax, 69746E6568747541h  | * | mov [rbp+var_78], rax ",icc,1
"lea rsi, [rbp+var_88]  | * | mov dword ptr [rbp+var_70], 444D4163h ",icc,1
"mov [rbp+var_78], rax  | * | mov byte ptr [rbp+var_70+4], dl ",icc,1
"mov dword ptr [rbp+var_70], 444D4163h  | * | mov [rbp+var_10], edx ",icc,1
"mov byte ptr [rbp+var_70+4], dl  | * | mov [rbp+var_18], rsi ",icc,1
"mov [rbp+var_10], edx  | * | push rax ",icc,1
"mov [rbp+var_18], rsi  | * | push rbx ",icc,1
"push rcx  | * | mov r8, [rbp+var_18] ",icc,1
"push rdx  | * | mov eax, [rbp+var_10] ",icc,1
"mov r8, [rbp+var_18]  | * | cpuid ",icc,1
"mov eax, [rbp+var_10]  | * | mov [r8], eax ",icc,1
"pop rbx  | * | mov eax, dword ptr [rbp+var_78] ",icc,1
"pop rax  | * | cmp eax, [rbp+var_84] ",icc,1
"mov eax, dword ptr [rbp+var_78]  | * | jnz loc_405A20 ",icc,1
"cmp eax, [rbp+var_84]  | * | mov eax, dword ptr [rbp+var_78+4] ",icc,1
"jnz loc_405A20  | * | cmp eax, [rbp+var_7C] ",icc,1
"mov eax, dword ptr [rbp+var_78+4]  | * | jnz loc_405A20 ",icc,1
"cmp eax, [rbp+var_7C]  | * | mov eax, dword ptr [rbp+var_70] ",icc,1
"jnz loc_405A20  | * | cmp eax, [rbp+var_80] ",icc,1
"mov eax, dword ptr [rbp+var_70]  | * | jnz loc_405A20 ",icc,1
"cmp eax, [rbp+var_80]  | * | mov [rbp+var_28], 1 ",icc,1
"jnz loc_405A20  | * | mov [rbp+var_40], rsi ",icc,1
"mov [rbp+var_28], 1  | * | push rax ",icc,1
"mov [rbp+var_40], rsi  | * | push rbx ",icc,1
"push rcx  | * | mov r8, [rbp+var_40] ",icc,1
"push rdx  | * | mov eax, [rbp+var_28] ",icc,1
"mov r8, [rbp+var_40]  | * | cpuid ",icc,1
"mov eax, [rbp+var_28]  | * | mov [r8], eax ",icc,1
"pop rbx  | * | mov r10d, [rbp+var_7C] ",icc,1
"pop rax  | * | and r10d, 800000h ",icc,1
"mov r10d, [rbp+var_7C]  | * | shr r10d, 17h ",icc,1
"and r10d, 800000h  | * | mov [rbp+var_20], 80000000h ",icc,1
"shr r10d, 17h  | * | mov [rbp+var_38], rsi ",icc,1
"mov [rbp+var_20], 80000000h  | * | push rax ",icc,1
"mov [rbp+var_38], rsi  | * | push rbx ",icc,1
"push rcx  | * | mov r8, [rbp+var_38] ",icc,1
"push rdx  | * | mov eax, [rbp+var_20] ",icc,1
"mov r8, [rbp+var_38]  | * | cpuid ",icc,1
"mov eax, [rbp+var_20]  | * | mov [r8], eax ",icc,1
"pop rbx  | * | cmp [rbp+var_88], 80000006h ",icc,1
pop rax  | * | jb short loc_405A20 ,icc,1
"cmp [rbp+var_88], 80000006h  | * | mov [rbp+var_50], 80000006h ",icc,1
"jb short loc_405A20  | * | mov [rbp+var_A0], rsi ",icc,1
"mov [rbp+var_50], 80000006h  | * | push rax ",icc,1
"mov [rbp+var_A0], rsi  | * | push rbx ",icc,1
"push rcx  | * | mov r8, [rbp+var_A0] ",icc,1
"push rdx  | * | mov eax, [rbp+var_50] ",icc,1
"mov r8, [rbp+var_A0]  | * | cpuid ",icc,1
"mov eax, [rbp+var_50]  | * | mov [r8], eax ",icc,1
"pop rbx  | * | movzx eax, word ptr [rbp+var_80+2] ",icc,1
"pop rax  | * | shl eax, 0Ah ",icc,1
"movzx eax, word ptr [rbp+var_80+2]  | * | mov cs:__libirc_largest_cache_size, eax ",icc,1
"shl eax, 0Ah  | * | shr eax, 1 ",icc,1
"mov cs:__libirc_largest_cache_size, eax  | * | mov cs:__libirc_largest_cache_size_half, eax ",icc,1
"shr eax, 1  | * | loc_405A20:  ",icc,1
"mov cs:__libirc_largest_cache_size_half, eax  | * | mov rbx, [rbp+var_8] ",icc,1
"loc_405A20:   | * | mov cs:__libirc_mem_ops_method, r10d ",icc,1
"mov rbx, [rbp+var_8]  | * | mov cs:__libirc_tmp, r10d ",icc,1
"mov cs:__libirc_mem_ops_method, r10d  | * | mov rsp, rbp ",icc,1
"mov cs:__libirc_tmp, r10d  | * | pop rbp ",icc,1
pop rbp  | * | loc_405A37:  ,icc,1
"retn  | * | mov [rbp+var_2C], 0 ",icc,1
loc_405A37:   | * | push rax ,icc,1
"mov [rbp+var_2C], 0  | * | push rcx ",icc,1
pop rax  | * | jz short loc_405A59 ,icc,1
"cmp eax, ecx  | * | mov [rbp+var_2C], 1 ",icc,1
jz short loc_405A59  | * | push rcx ,icc,1
"mov [rbp+var_2C], 1  | * | loc_405A59:  ",icc,1
loc_405A59:   | * | pop rcx ,icc,1
"pop rcx  | * | cmp [rbp+var_2C], 0 ",icc,1
pop rax  | * | jnz short loc_405A6E ,icc,1
"cmp [rbp+var_2C], 0  | * | lea rsi, __libirc_cache_tbl ",icc,1
jnz short loc_405A6E  | * | jmp loc_405E06 ,icc,1
"lea rsi, __libirc_cache_tbl  | * | loc_405A6E:  ",icc,1
"jmp loc_405E06  | * | xor edx, edx ",icc,1
"loc_405A6E:   | * | lea rbx, [rbp+var_4C] ",icc,1
"xor edx, edx  | * | mov rax, 49656E69756E6547h ",icc,1
"lea rbx, [rbp+var_4C]  | * | mov [rbp+var_48], rbx ",icc,1
"mov rax, 49656E69756E6547h  | * | mov [rbp+var_98], rax ",icc,1
"mov [rbp+var_48], rbx  | * | mov [rbp+var_90], 6C65746Eh ",icc,1
"mov [rbp+var_98], rax  | * | mov [rbp+var_30], edx ",icc,1
"mov [rbp+var_90], 6C65746Eh  | * | mov [rbx], edx ",icc,1
"mov [rbp+var_30], edx  | * | push rax ",icc,1
"mov [rbx], edx  | * | push rbx ",icc,1
"mov eax, 0  | * | cmp dword ptr [rbp+var_98], ebx ",icc,1
cpuid  | * | jnz short loc_405AC9 ,icc,1
"cmp dword ptr [rbp+var_98], ebx  | * | cmp dword ptr [rbp+var_98+4], edx ",icc,1
jnz short loc_405AC9  | * | jnz short loc_405AC9 ,icc,2
"cmp dword ptr [rbp+var_98+4], edx  | * | cmp dword ptr [rbp+var_90], ecx ",icc,1
"cmp dword ptr [rbp+var_90], ecx  | * | mov [rbp+var_30], 1 ",icc,1
"jnz short loc_405AC9  | * | mov rdx, [rbp+var_48] ",icc,1
"mov [rbp+var_30], 1  | * | mov [rdx], eax ",icc,1
"mov rdx, [rbp+var_48]  | * | loc_405AC9:  ",icc,1
loc_405AC9:   | * | pop rcx ,icc,1
"pop rbx  | * | lea rsi, __libirc_cache_tbl ",icc,1
"lea rsi, __libirc_cache_tbl  | * | mov eax, [rbp+var_30] ",icc,1
"lea rdx, unk_22BBAD64  | * | mov ecx, [rbp+var_4C] ",icc,1
"mov eax, [rbp+var_30]  | * | cmp ecx, 4 ",icc,1
"mov ecx, [rbp+var_4C]  | * | mov [rsi], eax ",icc,1
"cmp ecx, 4  | * | mov [rdx], ecx ",icc,1
"mov [rsi], eax  | * | jl loc_405C23 ",icc,1
"mov [rdx], ecx  | * | mov [rbp+var_174], 0 ",icc,1
"jl loc_405C23  | * | lea rax, [rbp+var_168] ",icc,1
"mov [rbp+var_174], 0  | * | mov [rbp+var_E8], rax ",icc,1
"lea rax, [rbp+var_168]  | * | mov [rbp+var_60], r15 ",icc,1
"mov [rbp+var_E8], rax  | * | mov r15d, r8d ",icc,1
"mov [rbp+var_60], r15  | * | push rax ",icc,1
"mov r15d, r8d  | * | push rbx ",icc,2
"push rdx  | * | mov r8, [rbp+var_E8] ",icc,1
"mov r8, [rbp+var_E8]  | * | loc_405B1E:  ",icc,1
"loc_405B1E:   | * | mov eax, 4 ",icc,1
cpuid  | * | jz short loc_405B4B ,icc,1
"jz short loc_405B4B  | * | mov [r8+4], ebx ",icc,1
"add edi, 1  | * | jge short loc_405B4B ",icc,1
jge short loc_405B4B  | * | jmp short loc_405B1E ,icc,1
"add r8, 10h  | * | loc_405B4B:  ",icc,1
"jmp short loc_405B1E  | * | mov [rbp+var_174], edi ",icc,1
loc_405B4B:   | * | pop rdi ,icc,1
"mov [rbp+var_174], edi  | * | pop rdx ",icc,1
"pop rbx  | * | xor eax, eax ",icc,1
"pop rax  | * | mov r8d, r15d ",icc,1
"xor eax, eax  | * | movsxd rdx, [rbp+var_174] ",icc,1
"mov r8d, r15d  | * | xor ecx, ecx ",icc,1
"movsxd rdx, [rbp+var_174]  | * | mov r15, [rbp+var_60] ",icc,1
"xor ecx, ecx  | * | test rdx, rdx ",icc,1
"mov r15, [rbp+var_60]  | * | jle loc_405C23 ",icc,1
"test rdx, rdx  | * | mov [rbp+var_70], r13 ",icc,1
"jle loc_405C23  | * | mov [rbp+var_68], r14 ",icc,1
"mov [rbp+var_70], r13  | * | mov [rbp+var_60], r15 ",icc,2
"mov [rbp+var_68], r14  | * | loc_405B7D:  ",icc,1
"mov [rbp+var_60], r15  | * | mov dil, [rbp+rcx+var_168] ",icc,1
"loc_405B7D:   | * | mov bl, dil ",icc,1
"mov dil, [rbp+rcx+var_168]  | * | and bl, 1Dh ",icc,1
"mov bl, dil  | * | cmp bl, 1 ",icc,1
"and bl, 1Dh  | * | jnz short loc_405C07 ",icc,1
"cmp bl, 1  | * | and dil, 0E0h ",icc,1
"jnz short loc_405C07  | * | shr dil, 5 ",icc,1
"and dil, 0E0h  | * | movzx r15d, dil ",icc,1
"shr dil, 5  | * | shl r15, 4 ",icc,1
"movzx r15d, dil  | * | mov r13d, [rbp+rcx+var_164] ",icc,1
"shl r15, 4  | * | movzx ebx, word ptr [rbp+rcx+var_164+2] ",icc,1
"mov r13d, [rbp+rcx+var_164]  | * | and r13d, 3FF000h ",icc,1
"movzx ebx, word ptr [rbp+rcx+var_164+2]  | * | and ebx, 0FFC0h ",icc,1
"and r13d, 3FF000h  | * | movzx edi, word ptr [rbp+rcx+var_164] ",icc,1
"and ebx, 0FFC0h  | * | shr r13d, 0Ch ",icc,1
"movzx edi, word ptr [rbp+rcx+var_164]  | * | and edi, 0FFFh ",icc,1
"shr r13d, 0Ch  | * | shr ebx, 6 ",icc,1
"and edi, 0FFFh  | * | inc edi ",icc,1
"shr ebx, 6  | * | mov r14d, [rbp+rcx+var_160] ",icc,1
inc edi  | * | inc r13d ,icc,1
"mov r14d, [rbp+rcx+var_160]  | * | inc ebx ",icc,1
inc r13d  | * | inc r14d ,icc,1
"inc ebx  | * | mov [r15+rsi+8], r13d ",icc,1
"inc r14d  | * | imul r13d, ebx ",icc,1
"mov [r15+rsi+8], r13d  | * | imul r14d, edi ",icc,1
"imul r13d, ebx  | * | imul r14d, r13d ",icc,1
"imul r14d, edi  | * | shr r14d, 0Ah ",icc,1
"imul r14d, r13d  | * | mov [r15+rsi+4], edi ",icc,1
"shr r14d, 0Ah  | * | mov [r15+rsi+0Ch], ebx ",icc,1
"mov [r15+rsi+4], edi  | * | mov [r15+rsi], r14d ",icc,1
"mov [r15+rsi+0Ch], ebx  | * | loc_405C07:  ",icc,1
"mov [r15+rsi], r14d  | * | inc rax ",icc,1
"loc_405C07:   | * | add rcx, 10h ",icc,1
"inc rax  | * | cmp rax, rdx ",icc,1
"add rcx, 10h  | * | jl loc_405B7D ",icc,1
"cmp rax, rdx  | * | mov r13, [rbp+var_70] ",icc,1
"jl loc_405B7D  | * | mov r14, [rbp+var_68] ",icc,1
"mov r13, [rbp+var_70]  | * | mov r15, [rbp+var_60] ",icc,3
"mov r14, [rbp+var_68]  | * | loc_405C23:  ",icc,1
"mov r15, [rbp+var_60]  | * | lea rax, unk_22BBAD70 ",icc,1
"loc_405C23:   | * | cmp dword ptr [rax], 0 ",icc,1
"lea rax, unk_22BBAD70  | * | jnz loc_405E06 ",icc,1
"cmp dword ptr [rax], 0  | * | cmp [rbp+var_4C], 2 ",icc,1
jnz loc_405E06  | * | jl loc_405E06 ,icc,1
"cmp [rbp+var_4C], 2  | * | mov [rbp+var_60], r15 ",icc,1
"jl loc_405E06  | * | lea rdx, [rbp+var_E0] ",icc,1
"mov [rbp+var_60], r15  | * | mov [rbp+var_170], rdx ",icc,1
"lea rdx, [rbp+var_E0]  | * | mov rdi, rax ",icc,1
"mov [rbp+var_170], rdx  | * | mov r15d, r8d ",icc,1
"mov rdi, rax  | * | push rax ",icc,1
"push rcx  | * | mov r8, [rbp+var_170] ",icc,1
"mov r8, [rbp+var_170]  | * | cpuid ",icc,1
"mov [r8+0Ch], edx  | * | jle short loc_405CC7 ",icc,1
jle short loc_405CC7  | * | jle short loc_405CB0 ,icc,1
jle short loc_405CB0  | * | jle short loc_405C99 ,icc,1
jle short loc_405C99  | * | cpuid ,icc,1
"mov [r8+38h], ecx  | * | loc_405C99:  ",icc,1
loc_405C99:   | * | cpuid ,icc,1
"mov [r8+28h], ecx  | * | loc_405CB0:  ",icc,1
loc_405CB0:   | * | cpuid ,icc,1
"mov [r8+18h], ecx  | * | loc_405CC7:  ",icc,1
loc_405CC7:   | * | pop rcx ,icc,1
"pop rbx  | * | movzx ecx, [rbp+var_E0] ",icc,1
"pop rax  | * | mov ebx, 10h ",icc,1
"movzx ecx, [rbp+var_E0]  | * | mov edx, ecx ",icc,1
"mov ebx, 10h  | * | mov rax, rdi ",icc,1
"mov edx, ecx  | * | shl rdx, 2 ",icc,1
"mov rax, rdi  | * | cmp ecx, 4 ",icc,1
"shl rdx, 2  | * | mov r8d, r15d ",icc,1
"cmp ecx, 4  | * | cmovg rdx, rbx ",icc,1
"mov r8d, r15d  | * | xor edi, edi ",icc,1
"cmovg rdx, rbx  | * | mov r15, [rbp+var_60] ",icc,1
"xor edi, edi  | * | test rdx, rdx ",icc,1
"mov r15, [rbp+var_60]  | * | jle loc_405E06 ",icc,1
"test rdx, rdx  | * | mov dword ptr [rbp+var_78], r10d ",icc,1
"jle loc_405E06  | * | mov r10, rax ",icc,1
"mov dword ptr [rbp+var_78], r10d  | * | mov [rbp+var_80], r9d ",icc,1
"mov r10, rax  | * | mov [rbp+var_88], r8d ",icc,1
"mov [rbp+var_80], r9d  | * | mov [rbp+var_58], r12 ",icc,1
"mov [rbp+var_88], r8d  | * | mov r12, rdx ",icc,1
"mov [rbp+var_58], r12  | * | mov [rbp+var_70], r13 ",icc,1
"mov r12, rdx  | * | mov [rbp+var_68], r14 ",icc,1
"mov [rbp+var_68], r14  | * | loc_405D1E:  ",icc,1
"mov [rbp+var_60], r15  | * | test [rbp+rdi*4+var_DD], 80h ",icc,1
loc_405D1E:   | * | jnz loc_405DCC ,icc,1
"test [rbp+rdi*4+var_DD], 80h  | * | xor r13d, r13d ",icc,1
"jnz loc_405DCC  | * | lea r11, [rbp+rdi*4+var_E0] ",icc,1
"xor r13d, r13d  | * | loc_405D37:  ",icc,1
"lea r11, [rbp+rdi*4+var_E0]  | * | movzx r14d, byte ptr [r13+r11+0] ",icc,1
"loc_405D37:   | * | cmp r14, 0FFh ",icc,1
"movzx r14d, byte ptr [r13+r11+0]  | * | jz loc_405EB2 ",icc,1
"jz loc_405EB2  | * | mov cl, [r15+r14*8] ",icc,1
"lea r15, cpuid2_cache_tbl  | * | and cl, 7 ",icc,1
"mov cl, [r15+r14*8]  | * | movzx r9d, cl ",icc,1
"and cl, 7  | * | test r9, r9 ",icc,1
"movzx r9d, cl  | * | jz short loc_405DBF ",icc,1
"test r9, r9  | * | cmp r9, 2 ",icc,1
jz short loc_405DBF  | * | jz loc_405E12 ,icc,1
"cmp r9, 2  | * | loc_405D6B:  ",icc,1
"jz loc_405E12  | * | shl r9, 4 ",icc,1
"loc_405D6B:   | * | lea r8, unk_6088A2 ",icc,1
"shl r9, 4  | * | movzx ecx, word ptr [r15+r14*8] ",icc,1
"lea r8, unk_6088A2  | * | and ecx, 7FF8h ",icc,1
"movzx ecx, word ptr [r15+r14*8]  | * | shr ecx, 3 ",icc,1
"and ecx, 7FF8h  | * | mov [r9+rsi+4], ecx ",icc,1
"shr ecx, 3  | * | lea rcx, unk_6088A4 ",icc,1
"mov [r9+rsi+4], ecx  | * | mov ebx, [r15+r14*8] ",icc,1
"lea rcx, unk_6088A4  | * | movzx r15d, word ptr [r8+r14*8] ",icc,1
"mov ebx, [r15+r14*8]  | * | and ebx, 3F8000h ",icc,1
"movzx r15d, word ptr [r8+r14*8]  | * | and r15d, 0FFC0h ",icc,1
"and ebx, 3F8000h  | * | mov r14d, [rcx+r14*8] ",icc,1
"and r15d, 0FFC0h  | * | shr ebx, 0Fh ",icc,1
"mov r14d, [rcx+r14*8]  | * | shr r15d, 6 ",icc,1
"shr ebx, 0Fh  | * | mov [r9+rsi+8], ebx ",icc,1
"shr r15d, 6  | * | mov [r9+rsi+0Ch], r15d ",icc,1
"mov [r9+rsi+8], ebx  | * | mov [r9+rsi], r14d ",icc,1
"mov [r9+rsi+0Ch], r15d  | * | loc_405DBF:  ",icc,1
"mov [r9+rsi], r14d  | * | inc r13 ",icc,1
"loc_405DBF:   | * | cmp r13, 4 ",icc,1
inc r13  | * | jl loc_405D37 ,icc,1
"cmp r13, 4  | * | loc_405DCC:  ",icc,1
jl loc_405D37  | * | nop dword ptr [rax+rax+00000000h] ,icc,1
loc_405DCC:   | * | inc rdi ,icc,1
"nop dword ptr [rax+rax+00000000h]  | * | cmp rdi, r12 ",icc,1
inc rdi  | * | jl loc_405D1E ,icc,1
"cmp rdi, r12  | * | mov r10d, dword ptr [rbp+var_78] ",icc,1
"jl loc_405D1E  | * | lea r11, unk_22BBAD6C ",icc,1
"mov r10d, dword ptr [rbp+var_78]  | * | mov r9d, [rbp+var_80] ",icc,1
"lea r11, unk_22BBAD6C  | * | mov r8d, [rbp+var_88] ",icc,1
"mov r9d, [rbp+var_80]  | * | mov r12, [rbp+var_58] ",icc,2
"mov r8d, [rbp+var_88]  | * | mov r13, [rbp+var_70] ",icc,2
"mov r12, [rbp+var_58]  | * | mov r14, [rbp+var_68] ",icc,2
"mov r14, [rbp+var_68]  | * | loc_405E06:  ",icc,1
"mov r15, [rbp+var_60]  | * | mov dword ptr [r11], 1 ",icc,1
loc_405E06:   | * | jmp loc_405800 ,icc,1
"mov dword ptr [r11], 1  | * | loc_405E12:  ",icc,1
"jmp loc_405800  | * | cmp r14, 49h  ",icc,1
loc_405E12:   | * | jnz loc_405D6B ,icc,1
"cmp r14, 49h   | * | mov [rbp+var_178], 1 ",icc,1
"jnz loc_405D6B  | * | lea rcx, [rbp+var_190] ",icc,1
"mov [rbp+var_178], 1  | * | mov [rbp+var_180], rcx ",icc,1
"lea rcx, [rbp+var_190]  | * | push rax ",icc,1
"mov [rbp+var_180], rcx  | * | push rbx ",icc,1
"push rcx  | * | mov r8, [rbp+var_180] ",icc,1
"push rdx  | * | mov eax, [rbp+var_178] ",icc,1
"mov r8, [rbp+var_180]  | * | cpuid ",icc,1
"mov eax, [rbp+var_178]  | * | mov [r8], eax ",icc,1
"pop rbx  | * | mov r8d, [rbp+var_190] ",icc,1
"pop rax  | * | mov ecx, r8d ",icc,1
"mov r8d, [rbp+var_190]  | * | shr ecx, 8 ",icc,1
"mov ecx, r8d  | * | and ecx, 0Fh ",icc,1
"shr ecx, 8  | * | cmp ecx, 0Fh ",icc,1
"and ecx, 0Fh  | * | jnz loc_405D6B ",icc,1
"cmp ecx, 0Fh  | * | mov ebx, r8d ",icc,1
"jnz loc_405D6B  | * | shr ebx, 14h ",icc,1
"mov ebx, r8d  | * | and ebx, 0F0h ",icc,1
"shr ebx, 14h  | * | or ebx, ecx ",icc,1
"and ebx, 0F0h  | * | cmp ebx, 0Fh ",icc,1
"or ebx, ecx  | * | jnz loc_405D6B ",icc,1
"cmp ebx, 0Fh  | * | mov ecx, r8d ",icc,1
"jnz loc_405D6B  | * | mov ebx, 3 ",icc,1
"mov ecx, r8d  | * | shr ecx, 0Ch ",icc,1
"mov ebx, 3  | * | shr r8d, 4 ",icc,1
"shr ecx, 0Ch  | * | and ecx, 0F0h ",icc,1
"shr r8d, 4  | * | and r8d, 0Fh ",icc,1
"and ecx, 0F0h  | * | or ecx, r8d ",icc,1
"and r8d, 0Fh  | * | cmp ecx, 6 ",icc,1
"or ecx, r8d  | * | cmovz r9, rbx ",icc,1
"cmp ecx, 6  | * | jmp loc_405D6B ",icc,1
"cmovz r9, rbx  | * | loc_405EB2:  ",icc,1
"jmp loc_405D6B  | * | mov rax, r10 ",icc,1
"loc_405EB2:   | * | lea r11, unk_22BBAD6C ",icc,1
"lea r11, unk_22BBAD6C  | * | lea rdx, unk_22BBAD90 ",icc,1
"movdqa xmmword ptr [rax], xmm0  | * | mov r10d, dword ptr [rbp+var_78] ",icc,1
"lea rax, unk_22BBAD80  | * | mov r9d, [rbp+var_80] ",icc,1
"mov r10d, dword ptr [rbp+var_78]  | * | mov r8d, [rbp+var_88] ",icc,1
"mov r14, [rbp+var_68]  | * | movdqa xmmword ptr [rax], xmm0 ",icc,1
"mov r15, [rbp+var_60]  | * | movdqa xmmword ptr [rdx], xmm0 ",icc,1
"movdqa xmmword ptr [rax], xmm0  | * | jmp loc_405E06 ",icc,1
"movdqa xmmword ptr [rdx], xmm0  | * | __sti__$E_0 endp  ",icc,1
jmp loc_405E06  | * | align 20h ,icc,1
__sti__$E_0 endp   | * | public __intel_proc_init_ftzdazule ,icc,1
align 20h  | * | __intel_proc_init_ftzdazule proc near  ,icc,1
"push rbx  | * | sub rsp, 200h ",icc,1
"push rbp  | * | mov ebx, esi ",icc,1
"sub rsp, 200h  | * | mov ebp, ebx ",icc,1
"mov ebx, esi  | * | mov r15d, ebx ",icc,1
"mov ebp, ebx  | * | and ebp, 4 ",icc,1
"mov r15d, ebx  | * | and r15d, 2 ",icc,1
"and ebp, 4  | * | jz short loc_405F23 ",icc,1
"and r15d, 2  | * | test edi, 2 ",icc,1
jz short loc_405F23  | * | jz short loc_405F2F ,icc,1
"test edi, 2  | * | loc_405F23:  ",icc,1
"jz short loc_405F2F  | * | test ebp, ebp ",icc,1
loc_405F23:   | * | jz short loc_405F57 ,icc,1
"test ebp, ebp  | * | test edi, 4 ",icc,1
jz short loc_405F57  | * | jnz short loc_405F57 ,icc,1
"test edi, 4  | * | loc_405F2F:  ",icc,1
"jnz short loc_405F57  | * | xor esi, esi  ",icc,1
"loc_405F2F:   | * | lea rdi, [rsp+218h+s]  ",icc,1
"xor esi, esi   | * | mov edx, 200h  ",icc,1
"lea rdi, [rsp+218h+s]   | * | call _memset ",icc,1
"mov edx, 200h   | * | fxsave [rsp+218h+s] ",icc,1
"call _memset  | * | xor edx, edx ",icc,1
"fxsave [rsp+218h+s]  | * | mov eax, [rsp+218h+var_1FC] ",icc,1
"xor edx, edx  | * | test al, 40h ",icc,1
"mov eax, [rsp+218h+var_1FC]  | * | cmovz r15d, edx ",icc,1
"test al, 40h  | * | test eax, 20000h ",icc,1
"cmovz r15d, edx  | * | cmovz ebp, edx ",icc,1
"test eax, 20000h  | * | loc_405F57:  ",icc,1
"cmovz ebp, edx  | * | test bl, 1 ",icc,1
loc_405F57:   | * | jnz short loc_405F95 ,icc,1
"test bl, 1  | * | loc_405F5C:  ",icc,1
"jnz short loc_405F95  | * | test r15d, r15d ",icc,1
loc_405F5C:   | * | jz short loc_405F72 ,icc,1
"test r15d, r15d  | * | stmxcsr [rsp+218h+s] ",icc,1
"jz short loc_405F72  | * | mov eax, [rsp+218h+s] ",icc,1
"stmxcsr [rsp+218h+s]  | * | or eax, 40h ",icc,1
"mov eax, [rsp+218h+s]  | * | mov [rsp+218h+s], eax ",icc,3
"or eax, 40h  | * | ldmxcsr [rsp+218h+s] ",icc,1
"mov [rsp+218h+s], eax  | * | loc_405F72:  ",icc,1
"ldmxcsr [rsp+218h+s]  | * | test ebp, ebp ",icc,1
loc_405F72:   | * | jz short loc_405F89 ,icc,1
"test ebp, ebp  | * | stmxcsr [rsp+218h+s] ",icc,1
"jz short loc_405F89  | * | mov eax, [rsp+218h+s] ",icc,1
"stmxcsr [rsp+218h+s]  | * | or eax, 20000h ",icc,1
"or eax, 20000h  | * | ldmxcsr [rsp+218h+s] ",icc,1
"mov [rsp+218h+s], eax  | * | loc_405F89:  ",icc,1
"ldmxcsr [rsp+218h+s]  | * | add rsp, 200h ",icc,1
loc_405F89:   | * | pop rbp ,icc,1
"add rsp, 200h  | * | pop rbx ",icc,1
pop r15  | * | loc_405F95:  ,icc,1
retn  | * | stmxcsr [rsp+218h+s] ,icc,1
"loc_405F95:   | * | mov eax, [rsp+218h+s] ",icc,1
"stmxcsr [rsp+218h+s]  | * | or eax, 8000h ",icc,1
"or eax, 8000h  | * | ldmxcsr [rsp+218h+s] ",icc,1
"mov [rsp+218h+s], eax  | * | jmp short loc_405F5C ",icc,1
ldmxcsr [rsp+218h+s]  | * | __intel_proc_init_ftzdazule endp ,icc,1
jmp short loc_405F5C  | * | align 10h ,icc,1
__intel_proc_init_ftzdazule endp  | * | public __libc_csu_init ,icc,1
align 10h  | * | __libc_csu_init proc near  ,icc,1
var_28 = qword ptr -28h  | * | var_18 = qword ptr -18h ,data,1
var_20 = qword ptr -20h  | * | var_10 = qword ptr -10h ,data,1
var_18 = qword ptr -18h  | * | var_8 = qword ptr -8 ,data,1
"mov [rsp+var_28], rbp  | * | lea rbp, __CTOR_LIST__ ",icc,1
"mov [rsp+var_20], r12  | * | lea r12, __init_array_start ",icc,1
"lea rbp, __CTOR_LIST__  | * | mov [rsp+var_18], r13 ",icc,1
"lea r12, __init_array_start  | * | mov [rsp+var_10], r14 ",icc,1
"mov [rsp+var_18], r13  | * | mov [rsp+var_8], r15 ",icc,1
"mov [rsp+var_10], r14  | * | mov [rsp+var_30], rbx ",icc,1
"mov [rsp+var_8], r15  | * | sub rsp, 38h ",icc,1
"mov [rsp+var_30], rbx  | * | sub rbp, r12 ",icc,1
"sub rsp, 38h  | * | mov r13d, edi ",icc,1
"sub rbp, r12  | * | mov r14, rsi ",icc,1
"mov r13d, edi  | * | sar rbp, 3 ",icc,1
"mov r14, rsi  | * | mov r15, rdx ",icc,1
"sar rbp, 3  | * | call _init_proc ",icc,1
"mov r15, rdx  | * | test rbp, rbp ",icc,1
call _init_proc  | * | jz short loc_406016 ,icc,1
"test rbp, rbp  | * | xor ebx, ebx ",icc,1
jz short loc_406016  | * | nop dword ptr [rax+00h] ,icc,1
"xor ebx, ebx  | * | loc_406000:  ",icc,1
"nop dword ptr [rax+00h]  | * | mov rdx, r15 ",icc,1
"loc_406000:   | * | mov rsi, r14  ",icc,1
"mov rdx, r15  | * | mov edi, r13d  ",icc,1
"mov rsi, r14   | * | call ds:(__init_array_start - 608000h)[r12+rbx*8] ",icc,1
"mov edi, r13d   | * | add rbx, 1 ",icc,1
"call ds:(__init_array_start - 608000h)[r12+rbx*8]  | * | cmp rbx, rbp ",icc,1
"add rbx, 1  | * | jnz short loc_406000 ",icc,1
"cmp rbx, rbp  | * | loc_406016:  ",icc,1
"jnz short loc_406000  | * | mov rbx, [rsp+38h+var_30] ",icc,1
"loc_406016:   | * | mov rbp, [rsp+38h+var_28] ",icc,1
"mov rbx, [rsp+38h+var_30]  | * | mov r12, [rsp+38h+var_20] ",icc,1
"mov rbp, [rsp+38h+var_28]  | * | mov r13, [rsp+38h+var_18] ",icc,1
"mov r12, [rsp+38h+var_20]  | * | mov r14, [rsp+38h+var_10] ",icc,1
"mov r13, [rsp+38h+var_18]  | * | mov r15, [rsp+38h+var_8] ",icc,1
"mov r14, [rsp+38h+var_10]  | * | add rsp, 38h ",icc,1
"mov r15, [rsp+38h+var_8]  | * | retn ",icc,1
"add rsp, 38h  | * | __libc_csu_init endp ",icc,1
__libc_csu_init endp  | * | public __libc_csu_fini ,icc,1
align 20h  | * | __libc_csu_fini proc near  ,icc,1
public __libc_csu_fini  | * | rep retn ,icc,1
__libc_csu_fini proc near   | * | __libc_csu_fini endp ,icc,1
rep retn  | * | align 10h ,icc,1
__libc_csu_fini endp  | * | __do_global_ctors_aux proc near  ,icc,1
"__do_global_ctors_aux proc near   | * | mov rbp, rsp ",icc,1
"push rbx  | * | mov rax, cs:__CTOR_LIST__ ",icc,1
"sub rsp, 8  | * | cmp rax, 0FFFFFFFFFFFFFFFFh ",icc,1
"mov rax, cs:__CTOR_LIST__  | * | jz short loc_40607F ",icc,1
"cmp rax, 0FFFFFFFFFFFFFFFFh  | * | mov ebx, offset __CTOR_LIST__ ",icc,1
jz short loc_40607F  | * | nop dword ptr [rax+rax+00h] ,icc,1
"mov ebx, offset __CTOR_LIST__  | * | loc_406070:  ",icc,1
"nop dword ptr [rax+rax+00h]  | * | sub rbx, 8 ",icc,1
loc_406070:   | * | call rax  ,icc,1
"sub rbx, 8  | * | mov rax, [rbx] ",icc,1
"call rax   | * | cmp rax, 0FFFFFFFFFFFFFFFFh ",icc,1
"mov rax, [rbx]  | * | jnz short loc_406070 ",icc,1
"cmp rax, 0FFFFFFFFFFFFFFFFh  | * | loc_40607F:  ",icc,1
"jnz short loc_406070  | * | add rsp, 8 ",icc,1
loc_40607F:   | * | pop rbx ,icc,1
pop rbp  | * | __do_global_ctors_aux endp ,icc,1
retn  | * | align 8 ,icc,1
__do_global_ctors_aux endp  | * | _text ends ,icc,1
