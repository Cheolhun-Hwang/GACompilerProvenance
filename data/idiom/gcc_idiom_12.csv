idiom,label,count
var_2C = dword ptr -2Ch  | * | var_10 = dword ptr -10h ,data,1
var_28 = dword ptr -28h  | * | ExceptionInfo = dword ptr 4 ,data,1
"push ebx  | * | mov eax, [esp+2Ch+ExceptionInfo] ",gcc,1
"sub esp, 28h  | * | mov eax, [eax] ",gcc,1
"mov eax, [esp+2Ch+ExceptionInfo]  | * | mov eax, [eax] ",gcc,1
"mov eax, [eax]  | * | cmp eax, 0C0000091h ",gcc,1
"mov eax, [eax]  | * | ja short loc_401160 ",gcc,1
"cmp eax, 0C0000091h  | * | cmp eax, 0C000008Dh ",gcc,1
ja short loc_401160  | * | jb short loc_401177 ,gcc,1
"cmp eax, 0C000008Dh  | * | loc_40112A:  ",gcc,1
"jb short loc_401177  | * | mov ebx, 1 ",gcc,1
loc_40112A:   | * | loc_40112F:  ,gcc,1
"mov ebx, 1  | * | mov [esp+2Ch+var_28], 0  ",gcc,1
"loc_40112F:   | * | mov [esp+2Ch+var_2C], 8  ",gcc,1
"mov [esp+2Ch+var_28], 0   | * | call _signal ",gcc,3
"mov [esp+2Ch+var_2C], 8   | * | cmp eax, 1 ",gcc,1
call _signal  | * | jz loc_401240 ,gcc,1
"cmp eax, 1  | * | test eax, eax ",gcc,3
jz loc_401240  | * | jnz loc_4011F4 ,gcc,1
"test eax, eax  | * | loc_401154:  ",gcc,1
"jnz loc_4011F4  | * | xor eax, eax ",gcc,1
loc_401154:   | * | loc_401156:  ,gcc,1
"xor eax, eax  | * | add esp, 28h ",gcc,1
loc_401156:   | * | pop ebx ,gcc,1
"add esp, 28h  | * | retn 4 ",gcc,1
pop ebx  | * | align 10h ,gcc,1
retn 4  | * | loc_401160:  ,gcc,1
"align 10h  | * | cmp eax, 0C0000094h ",gcc,1
loc_401160:   | * | jz short loc_4011B2 ,gcc,1
"cmp eax, 0C0000094h  | * | cmp eax, 0C0000096h ",gcc,1
jz short loc_4011B2  | * | jz short loc_401185 ,gcc,1
"cmp eax, 0C0000096h  | * | cmp eax, 0C0000093h ",gcc,1
jz short loc_401185  | * | jnz short loc_401154 ,gcc,1
"cmp eax, 0C0000093h  | * | jmp short loc_40112A ",gcc,1
jnz short loc_401154  | * | loc_401177:  ,gcc,1
"jmp short loc_40112A  | * | cmp eax, 0C0000005h ",gcc,1
loc_401177:   | * | jz short loc_4011C0 ,gcc,1
"cmp eax, 0C0000005h  | * | cmp eax, 0C000001Dh ",gcc,1
jz short loc_4011C0  | * | jnz short loc_401154 ,gcc,1
"cmp eax, 0C000001Dh  | * | loc_401185:  ",gcc,1
"jnz short loc_401154  | * | mov [esp+2Ch+var_28], 0  ",gcc,1
"loc_401185:   | * | mov [esp+2Ch+var_2C], 4  ",gcc,1
"mov [esp+2Ch+var_2C], 4   | * | cmp eax, 1 ",gcc,1
call _signal  | * | jz short loc_401207 ,gcc,1
jz short loc_401207  | * | jz short loc_401154 ,gcc,1
"test eax, eax  | * | mov [esp+2Ch+var_2C], 4 ",gcc,1
jz short loc_401154  | * | call eax ,gcc,1
"mov [esp+2Ch+var_2C], 4  | * | mov eax, 0FFFFFFFFh ",gcc,1
call eax  | * | jmp short loc_401156 ,gcc,1
"mov eax, 0FFFFFFFFh  | * | loc_4011B2:  ",gcc,1
"jmp short loc_401156  | * | xor ebx, ebx ",gcc,1
loc_4011B2:   | * | jmp loc_40112F ,gcc,1
"xor ebx, ebx  | * | align 10h ",gcc,1
jmp loc_40112F  | * | loc_4011C0:  ,gcc,1
"align 10h  | * | mov [esp+2Ch+var_28], 0  ",gcc,1
"loc_4011C0:   | * | mov [esp+2Ch+var_2C], 0Bh  ",gcc,1
"mov [esp+2Ch+var_2C], 0Bh   | * | cmp eax, 1 ",gcc,1
call _signal  | * | jz short loc_401223 ,gcc,1
jz short loc_401223  | * | jz loc_401154 ,gcc,1
"test eax, eax  | * | mov [esp+2Ch+var_2C], 0Bh ",gcc,1
jz loc_401154  | * | call eax ,gcc,1
"mov [esp+2Ch+var_2C], 0Bh  | * | mov eax, 0FFFFFFFFh ",gcc,1
call eax  | * | jmp loc_401156 ,gcc,2
"mov eax, 0FFFFFFFFh  | * | loc_4011F4:  ",gcc,1
"jmp loc_401156  | * | mov [esp+2Ch+var_2C], 8 ",gcc,1
loc_4011F4:   | * | call eax ,gcc,1
"mov [esp+2Ch+var_2C], 8  | * | mov eax, 0FFFFFFFFh ",gcc,1
"mov eax, 0FFFFFFFFh  | * | loc_401207:  ",gcc,1
"jmp loc_401156  | * | mov [esp+2Ch+var_28], 1  ",gcc,2
"loc_401207:   | * | mov [esp+2Ch+var_2C], 4  ",gcc,1
"mov [esp+2Ch+var_28], 1   | * | call _signal ",gcc,3
"mov [esp+2Ch+var_2C], 4   | * | or eax, 0FFFFFFFFh ",gcc,1
call _signal  | * | jmp loc_401156 ,gcc,2
"or eax, 0FFFFFFFFh  | * | loc_401223:  ",gcc,1
"loc_401223:   | * | mov [esp+2Ch+var_2C], 0Bh  ",gcc,1
"mov [esp+2Ch+var_2C], 0Bh   | * | or eax, 0FFFFFFFFh ",gcc,1
"or eax, 0FFFFFFFFh  | * | align 10h ",gcc,1
jmp loc_401156  | * | loc_401240:  ,gcc,1
"align 10h  | * | mov [esp+2Ch+var_28], 1  ",gcc,1
"loc_401240:   | * | mov [esp+2Ch+var_2C], 8  ",gcc,1
"mov [esp+2Ch+var_2C], 8   | * | test ebx, ebx ",gcc,1
"call _signal  | * | mov eax, 0FFFFFFFFh ",gcc,1
"test ebx, ebx  | * | jz loc_401156 ",gcc,1
"mov eax, 0FFFFFFFFh  | * | mov [esp+2Ch+var_10], eax ",gcc,1
jz loc_401156  | * | call _fpreset ,gcc,1
"mov [esp+2Ch+var_10], eax  | * | mov eax, [esp+2Ch+var_10] ",gcc,2
call _fpreset  | * | jmp loc_401156 ,gcc,1
"mov eax, [esp+2Ch+var_10]  | * | __gnu_exception_handler@4 endp ",gcc,1
jmp loc_401156  | * | align 10h ,gcc,1
__gnu_exception_handler@4 endp  | * | align 10h ,gcc,1
align 10h  | * | public _WinMainCRTStartup ,gcc,1
align 10h  | * | _WinMainCRTStartup proc near ,gcc,1
"_WinMainCRTStartup proc near  | * | sub esp, 1Ch ",gcc,1
"sub esp, 1Ch  | * | call ds:__imp____set_app_type ",gcc,1
"mov [esp+1Ch+var_1C], 2  | * | call ___mingw_CRTStartup ",gcc,1
call ds:__imp____set_app_type  | * | _WinMainCRTStartup endp ,gcc,1
call ___mingw_CRTStartup  | * | align 10h ,gcc,1
_WinMainCRTStartup endp  | * | public _atexit ,gcc,1
align 10h  | * | _atexit proc near  ,gcc,1
"public _atexit  | * | mov eax, ds:__imp__atexit ",gcc,1
_atexit proc near   | * | jmp eax ,gcc,1
"mov eax, ds:__imp__atexit  | * | _atexit endp ",gcc,1
jmp eax  | * | align 10h ,gcc,2
_atexit endp  | * | public __onexit ,gcc,1
align 10h  | * | __onexit proc near ,gcc,1
"public __onexit  | * | mov eax, ds:__imp___onexit ",gcc,1
__onexit proc near  | * | jmp eax ,gcc,1
"mov eax, ds:__imp___onexit  | * | __onexit endp ",gcc,1
__onexit endp  | * | public ___gcc_register_frame ,gcc,1
align 10h  | * | ___gcc_register_frame proc near  ,gcc,1
"mov ecx, _data  | * | jz short locret_401322 ",gcc,1
"test ecx, ecx  | * | push ebp ",gcc,1
"jz short locret_401322  | * | mov ebp, esp ",gcc,1
"push ebp  | * | sub esp, 18h ",gcc,2
"mov ebp, esp  | * | mov [esp+1Ch+lpModuleName], offset ModuleName  ",gcc,1
"sub esp, 18h  | * | call _GetModuleHandleA@4  ",gcc,1
"mov [esp+1Ch+lpModuleName], offset ModuleName   | * | push edx ",gcc,1
"call _GetModuleHandleA@4   | * | test eax, eax ",gcc,1
push edx  | * | jz short loc_401324 ,gcc,1
"test eax, eax  | * | mov [esp+1Ch+lpProcName], offset ProcName  ",gcc,1
"jz short loc_401324  | * | mov [esp+1Ch+lpModuleName], eax  ",gcc,1
"mov [esp+1Ch+lpProcName], offset ProcName   | * | call _GetProcAddress@8  ",gcc,1
"mov [esp+1Ch+lpModuleName], eax   | * | sub esp, 8 ",gcc,1
call _GetProcAddress@8   | * | loc_401314:  ,gcc,1
"sub esp, 8  | * | test eax, eax ",gcc,1
loc_401314:   | * | jz short locret_401321 ,gcc,1
"test eax, eax  | * | mov [esp+1Ch+lpModuleName], offset _data ",gcc,1
jz short locret_401321  | * | call eax ,gcc,1
"mov [esp+1Ch+lpModuleName], offset _data  | * | locret_401321:  ",gcc,1
call eax  | * | leave ,gcc,1
locret_401321:   | * | locret_401322:  ,gcc,1
leave  | * | retn ,gcc,1
locret_401322:   | * | align 4 ,gcc,1
retn  | * | loc_401324:  ,gcc,1
"align 4  | * | mov eax, 0 ",gcc,1
loc_401324:   | * | jmp short loc_401314 ,gcc,1
"mov eax, 0  | * | ___gcc_register_frame endp ",gcc,1
jmp short loc_401314  | * | align 4 ,gcc,1
___gcc_register_frame endp  | * | public ___gcc_deregister_frame ,gcc,1
align 4  | * | ___gcc_deregister_frame proc near  ,gcc,1
public ___gcc_deregister_frame  | * | push ebp ,gcc,1
"___gcc_deregister_frame proc near   | * | mov ebp, esp ",gcc,1
push ebp  | * | pop ebp ,gcc,1
"mov ebp, esp  | * | retn ",gcc,1
pop ebp  | * | ___gcc_deregister_frame endp ,gcc,1
retn  | * | align 4 ,gcc,2
___gcc_deregister_frame endp  | * | public _main ,gcc,1
align 4  | * | _main proc near  ,gcc,1
argc = dword ptr 8  | * | envp = dword ptr 10h ,data,1
"push ebp  | * | and esp, 0FFFFFFF0h ",gcc,1
"mov ebp, esp  | * | sub esp, 20h ",gcc,1
"and esp, 0FFFFFFF0h  | * | call ___main ",gcc,1
"sub esp, 20h  | * | lea eax, [esp+10h] ",gcc,1
"call ___main  | * | mov [esp+4], eax ",gcc,1
"lea eax, [esp+10h]  | * | mov dword ptr [esp], offset aD  ",gcc,1
"mov [esp+4], eax  | * | call _scanf ",gcc,2
"mov dword ptr [esp], offset aD   | * | mov dword ptr [esp+1Ch], 1 ",gcc,1
call _scanf  | * | jmp loc_40148A ,gcc,1
"mov dword ptr [esp+1Ch], 1  | * | loc_401363:  ",gcc,1
"jmp loc_40148A  | * | mov dword ptr [esp+0Ch], offset _p ",gcc,1
"loc_401363:   | * | mov dword ptr [esp+8], offset _s ",gcc,1
"mov dword ptr [esp+0Ch], offset _p  | * | mov dword ptr [esp+4], offset _n ",gcc,1
"mov dword ptr [esp+8], offset _s  | * | mov dword ptr [esp], offset aDDD  ",gcc,1
"mov dword ptr [esp+4], offset _n  | * | call _scanf ",gcc,1
"mov dword ptr [esp], offset aDDD   | * | mov dword ptr [esp+18h], 0 ",gcc,1
call _scanf  | * | jmp short loc_4013B1 ,gcc,1
"mov dword ptr [esp+18h], 0  | * | loc_401391:  ",gcc,1
"jmp short loc_4013B1  | * | mov eax, [esp+18h] ",gcc,1
"loc_401391:   | * | shl eax, 2 ",gcc,1
"mov eax, [esp+18h]  | * | add eax, offset _t ",gcc,1
"shl eax, 2  | * | mov [esp+4], eax ",gcc,1
"add eax, offset _t  | * | mov dword ptr [esp], offset aD_0  ",gcc,1
"mov dword ptr [esp], offset aD_0   | * | inc dword ptr [esp+18h] ",gcc,1
call _scanf  | * | loc_4013B1:  ,gcc,1
"inc dword ptr [esp+18h]  | * | mov eax, ds:_n ",gcc,2
"loc_4013B1:   | * | cmp [esp+18h], eax ",gcc,1
"mov eax, ds:_n  | * | setl al ",gcc,2
"cmp [esp+18h], eax  | * | test al, al ",gcc,2
setl al  | * | jnz short loc_401391 ,gcc,1
"test al, al  | * | mov dword ptr [esp+14h], 0 ",gcc,1
"jnz short loc_401391  | * | mov dword ptr [esp+18h], 0 ",gcc,1
"mov dword ptr [esp+14h], 0  | * | jmp loc_401456 ",gcc,1
"mov dword ptr [esp+18h], 0  | * | loc_4013D6:  ",gcc,1
"jmp loc_401456  | * | mov eax, [esp+18h] ",gcc,1
"loc_4013D6:   | * | mov eax, ds:_t[eax*4] ",gcc,1
"mov eax, [esp+18h]  | * | lea ecx, [eax+2] ",gcc,1
"mov eax, ds:_t[eax*4]  | * | mov edx, 55555556h ",gcc,2
"lea ecx, [eax+2]  | * | mov eax, ecx ",gcc,1
"mov edx, 55555556h  | * | imul edx ",gcc,2
"mov eax, ecx  | * | mov eax, ecx ",gcc,2
"imul edx  | * | sar eax, 1Fh ",gcc,2
"mov eax, ecx  | * | sub edx, eax ",gcc,2
"sar eax, 1Fh  | * | mov eax, ds:_p ",gcc,2
"sub edx, eax  | * | cmp edx, eax ",gcc,2
"mov eax, ds:_p  | * | jl short loc_401403 ",gcc,1
"cmp edx, eax  | * | inc dword ptr [esp+14h] ",gcc,2
jl short loc_401403  | * | jmp short loc_401452 ,gcc,1
inc dword ptr [esp+14h]  | * | loc_401403:  ,gcc,1
"jmp short loc_401452  | * | mov eax, ds:_s ",gcc,1
"loc_401403:   | * | test eax, eax ",gcc,1
"mov eax, ds:_s  | * | jle short loc_401452 ",gcc,1
"test eax, eax  | * | mov eax, [esp+18h] ",gcc,1
"jle short loc_401452  | * | mov eax, ds:_t[eax*4] ",gcc,2
"mov eax, [esp+18h]  | * | cmp eax, 1 ",gcc,1
"mov eax, ds:_t[eax*4]  | * | jle short loc_401452 ",gcc,1
"cmp eax, 1  | * | mov eax, [esp+18h] ",gcc,1
"mov eax, [esp+18h]  | * | lea ecx, [eax+4] ",gcc,1
"lea ecx, [eax+4]  | * | mov eax, ecx ",gcc,1
"mov eax, ds:_p  | * | jl short loc_401452 ",gcc,1
"jl short loc_401452  | * | mov eax, ds:_s ",gcc,1
inc dword ptr [esp+14h]  | * | dec eax ,gcc,1
"mov eax, ds:_s  | * | mov ds:_s, eax ",gcc,1
dec eax  | * | loc_401452:  ,gcc,1
"mov ds:_s, eax  | * | inc dword ptr [esp+18h] ",gcc,1
loc_401452:   | * | loc_401456:  ,gcc,1
"loc_401456:   | * | cmp [esp+18h], eax ",gcc,1
setl al  | * | jnz loc_4013D6 ,gcc,1
"test al, al  | * | mov eax, [esp+14h] ",gcc,1
"jnz loc_4013D6  | * | mov [esp+8], eax ",gcc,1
"mov eax, [esp+14h]  | * | mov eax, [esp+1Ch] ",gcc,1
"mov [esp+8], eax  | * | mov [esp+4], eax ",gcc,1
"mov eax, [esp+1Ch]  | * | mov dword ptr [esp], offset aCaseDD  ",gcc,1
"mov [esp+4], eax  | * | call _printf ",gcc,1
"mov dword ptr [esp], offset aCaseDD   | * | inc dword ptr [esp+1Ch] ",gcc,1
call _printf  | * | loc_40148A:  ,gcc,1
"inc dword ptr [esp+1Ch]  | * | mov eax, [esp+10h] ",gcc,1
"loc_40148A:   | * | cmp [esp+1Ch], eax ",gcc,1
"mov eax, [esp+10h]  | * | setle al ",gcc,1
"cmp [esp+1Ch], eax  | * | test al, al ",gcc,1
setle al  | * | jnz loc_401363 ,gcc,1
"test al, al  | * | mov eax, 0 ",gcc,1
jnz loc_401363  | * | leave ,gcc,1
"mov eax, 0  | * | retn ",gcc,1
leave  | * | _main endp ,gcc,1
retn  | * | align 10h ,gcc,3
_main endp  | * | public ___dyn_tls_dtor@12 ,gcc,1
align 10h  | * | ___dyn_tls_dtor@12 proc near  ,gcc,1
var_1C = dword ptr -1Ch  | * | var_14 = dword ptr -14h ,data,2
var_18 = dword ptr -18h  | * | arg_0 = dword ptr 4 ,data,2
var_14 = dword ptr -14h  | * | arg_4 = dword ptr 8 ,data,2
arg_0 = dword ptr 4  | * | arg_8 = dword ptr 0Ch ,data,2
"sub esp, 1Ch  | * | test eax, eax ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | jz short loc_4014D0 ",gcc,1
"test eax, eax  | * | cmp eax, 3 ",gcc,1
jz short loc_4014D0  | * | jz short loc_4014D0 ,gcc,1
"cmp eax, 3  | * | mov eax, 1 ",gcc,1
"jz short loc_4014D0  | * | add esp, 1Ch ",gcc,1
"mov eax, 1  | * | retn 0Ch ",gcc,2
"add esp, 1Ch  | * | align 10h ",gcc,3
retn 0Ch  | * | loc_4014D0:  ,gcc,1
"align 10h  | * | mov edx, [esp+1Ch+arg_8] ",gcc,1
"loc_4014D0:   | * | mov [esp+1Ch+var_18], eax ",gcc,1
"mov edx, [esp+1Ch+arg_8]  | * | mov eax, [esp+1Ch+arg_0] ",gcc,1
"mov [esp+1Ch+var_18], eax  | * | mov [esp+1Ch+var_14], edx ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov [esp+1Ch+var_14], edx  | * | call ___mingw_TLScallback ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | mov eax, 1 ",gcc,1
"call ___mingw_TLScallback  | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | ___dyn_tls_dtor@12 endp ",gcc,1
retn 0Ch  | * | align 10h ,gcc,1
___dyn_tls_dtor@12 endp  | * | public ___dyn_tls_init@12 ,gcc,1
align 10h  | * | ___dyn_tls_init@12 proc near  ,gcc,1
"push esi  | * | sub esp, 14h ",gcc,2
"push ebx  | * | cmp ds:__CRT_MT, 2 ",gcc,1
"sub esp, 14h  | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"cmp ds:__CRT_MT, 2  | * | jz short loc_40151C ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | mov ds:__CRT_MT, 2 ",gcc,1
jz short loc_40151C  | * | loc_40151C:  ,gcc,1
"mov ds:__CRT_MT, 2  | * | cmp eax, 2 ",gcc,1
loc_40151C:   | * | jz short loc_401533 ,gcc,1
"cmp eax, 2  | * | cmp eax, 1 ",gcc,1
jz short loc_401533  | * | jz short loc_401568 ,gcc,1
"cmp eax, 1  | * | loc_401526:  ",gcc,1
"jz short loc_401568  | * | add esp, 14h ",gcc,1
"loc_401526:   | * | mov eax, 1 ",gcc,1
"add esp, 14h  | * | pop ebx ",gcc,2
"mov eax, 1  | * | pop esi ",gcc,2
pop ebx  | * | retn 0Ch ,gcc,2
pop esi  | * | loc_401533:  ,gcc,1
"retn 0Ch  | * | mov esi, offset ___xd_z ",gcc,1
"loc_401533:   | * | sub esi, offset ___xd_z ",gcc,1
"mov esi, offset ___xd_z  | * | sar esi, 2 ",gcc,1
"sub esi, offset ___xd_z  | * | test esi, esi ",gcc,1
"sar esi, 2  | * | jle short loc_401526 ",gcc,1
"test esi, esi  | * | xor ebx, ebx ",gcc,1
jle short loc_401526  | * | loc_401547:  ,gcc,1
"xor ebx, ebx  | * | mov eax, ds:___xd_z[ebx*4] ",gcc,1
"loc_401547:   | * | test eax, eax ",gcc,1
"mov eax, ds:___xd_z[ebx*4]  | * | jz short loc_401554 ",gcc,1
"test eax, eax  | * | call eax  ",gcc,1
jz short loc_401554  | * | loc_401554:  ,gcc,1
"call eax   | * | add ebx, 1 ",gcc,1
"loc_401554:   | * | cmp ebx, esi ",gcc,1
"add ebx, 1  | * | jnz short loc_401547 ",gcc,1
"cmp ebx, esi  | * | add esp, 14h ",gcc,1
"jnz short loc_401547  | * | mov eax, 1 ",gcc,1
pop esi  | * | loc_401568:  ,gcc,1
"retn 0Ch  | * | mov eax, [esp+1Ch+arg_8] ",gcc,1
"loc_401568:   | * | mov [esp+1Ch+var_18], 1 ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | mov [esp+1Ch+var_14], eax ",gcc,1
"mov [esp+1Ch+var_18], 1  | * | mov eax, [esp+1Ch+arg_0] ",gcc,1
"mov [esp+1Ch+var_14], eax  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | call ___mingw_TLScallback ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | jmp short loc_401526 ",gcc,1
call ___mingw_TLScallback  | * | ___dyn_tls_init@12 endp ,gcc,1
jmp short loc_401526  | * | align 10h ,gcc,1
___dyn_tls_init@12 endp  | * | public ___tlregdtor ,gcc,1
align 10h  | * | ___tlregdtor proc near ,gcc,1
"public ___tlregdtor  | * | xor eax, eax ",gcc,1
___tlregdtor proc near  | * | retn ,gcc,1
"xor eax, eax  | * | ___tlregdtor endp ",gcc,1
___tlregdtor endp  | * | public ___cpu_features_init ,gcc,1
align 10h  | * | ___cpu_features_init proc near  ,gcc,1
public ___cpu_features_init  | * | pushf ,gcc,1
___cpu_features_init proc near   | * | pushf ,gcc,1
pushf  | * | pop eax ,gcc,1
"pushf  | * | mov edx, eax ",gcc,1
"pop eax  | * | xor eax, 200000h ",gcc,1
"mov edx, eax  | * | push eax ",gcc,1
"xor eax, 200000h  | * | popf ",gcc,1
push eax  | * | pushf ,gcc,1
popf  | * | pop eax ,gcc,1
pushf  | * | popf ,gcc,1
"pop eax  | * | xor eax, edx ",gcc,1
"popf  | * | test eax, 200000h ",gcc,1
"xor eax, edx  | * | jz locret_401661 ",gcc,1
"test eax, 200000h  | * | push ebx ",gcc,1
"jz locret_401661  | * | xor eax, eax ",gcc,1
push ebx  | * | cpuid ,gcc,1
"xor eax, eax  | * | test eax, eax ",gcc,1
cpuid  | * | jz loc_401660 ,gcc,1
"test eax, eax  | * | mov eax, 1 ",gcc,1
jz loc_401660  | * | cpuid ,gcc,1
"mov eax, 1  | * | test dh, 1 ",gcc,1
cpuid  | * | jz short loc_4015DC ,gcc,1
"test dh, 1  | * | or ds:___cpu_features, 1 ",gcc,1
jz short loc_4015DC  | * | loc_4015DC:  ,gcc,1
"or ds:___cpu_features, 1  | * | test dh, 80h ",gcc,1
loc_4015DC:   | * | jz short loc_4015E8 ,gcc,1
"test dh, 80h  | * | or ds:___cpu_features, 2 ",gcc,1
jz short loc_4015E8  | * | loc_4015E8:  ,gcc,1
"or ds:___cpu_features, 2  | * | test edx, 800000h ",gcc,1
loc_4015E8:   | * | jz short loc_4015F7 ,gcc,1
"test edx, 800000h  | * | or ds:___cpu_features, 4 ",gcc,1
jz short loc_4015F7  | * | loc_4015F7:  ,gcc,1
"or ds:___cpu_features, 4  | * | test edx, 1000000h ",gcc,1
loc_4015F7:   | * | jz short loc_401606 ,gcc,1
"test edx, 1000000h  | * | or ds:___cpu_features, 8 ",gcc,1
jz short loc_401606  | * | loc_401606:  ,gcc,1
"or ds:___cpu_features, 8  | * | test edx, 2000000h ",gcc,1
loc_401606:   | * | jz short loc_401615 ,gcc,1
"test edx, 2000000h  | * | or ds:___cpu_features, 10h ",gcc,1
jz short loc_401615  | * | loc_401615:  ,gcc,1
"or ds:___cpu_features, 10h  | * | and edx, 4000000h ",gcc,1
loc_401615:   | * | jz short loc_401624 ,gcc,1
"and edx, 4000000h  | * | or ds:___cpu_features, 20h ",gcc,1
jz short loc_401624  | * | loc_401624:  ,gcc,1
"or ds:___cpu_features, 20h  | * | test cl, 1 ",gcc,1
loc_401624:   | * | jz short loc_401630 ,gcc,1
"test cl, 1  | * | or ds:___cpu_features, 40h ",gcc,1
jz short loc_401630  | * | loc_401630:  ,gcc,1
"or ds:___cpu_features, 40h  | * | and ch, 20h ",gcc,1
loc_401630:   | * | jnz short loc_401663 ,gcc,1
"and ch, 20h  | * | loc_401635:  ",gcc,1
"jnz short loc_401663  | * | mov eax, 80000000h ",gcc,1
loc_401635:   | * | cpuid ,gcc,1
"mov eax, 80000000h  | * | cmp eax, 80000000h ",gcc,1
cpuid  | * | jbe short loc_401660 ,gcc,1
"cmp eax, 80000000h  | * | mov eax, 80000001h ",gcc,1
jbe short loc_401660  | * | cpuid ,gcc,1
"mov eax, 80000001h  | * | test edx, edx ",gcc,1
cpuid  | * | js short loc_401670 ,gcc,1
"test edx, edx  | * | loc_40164E:  ",gcc,1
"js short loc_401670  | * | and edx, 40000000h ",gcc,1
loc_40164E:   | * | jz short loc_401660 ,gcc,1
"and edx, 40000000h  | * | or ds:___cpu_features, 200h ",gcc,1
jz short loc_401660  | * | loc_401660:  ,gcc,1
"or ds:___cpu_features, 200h  | * | pop ebx ",gcc,1
loc_401660:   | * | locret_401661:  ,gcc,1
pop ebx  | * | rep retn ,gcc,1
locret_401661:   | * | loc_401663:  ,gcc,1
"rep retn  | * | or ds:___cpu_features, 80h ",gcc,1
loc_401663:   | * | jmp short loc_401635 ,gcc,1
"or ds:___cpu_features, 80h  | * | align 10h ",gcc,1
jmp short loc_401635  | * | loc_401670:  ,gcc,1
"align 10h  | * | or ds:___cpu_features, 100h ",gcc,1
loc_401670:   | * | jmp short loc_40164E ,gcc,1
"or ds:___cpu_features, 100h  | * | ___cpu_features_init endp ",gcc,1
jmp short loc_40164E  | * | align 10h ,gcc,1
___cpu_features_init endp  | * | public _fpreset ,gcc,1
align 10h  | * | _fpreset proc near  ,gcc,1
public _fpreset  | * | fninit ,gcc,1
_fpreset proc near   | * | retn ,gcc,1
fninit  | * | _fpreset endp ,gcc,1
_fpreset endp  | * | ___report_error proc near  ,gcc,1
var_2C = dword ptr -2Ch  | * | var_24 = dword ptr -24h ,data,1
var_28 = dword ptr -28h  | * | var_20 = dword ptr -20h ,data,1
var_24 = dword ptr -24h  | * | var_10 = dword ptr -10h ,data,1
var_20 = dword ptr -20h  | * | arg_0 = dword ptr 4 ,data,1
var_10 = dword ptr -10h  | * | arg_4 = byte ptr 8 ,data,1
"push ebx  | * | mov ebx, ds:__imp___iob ",gcc,1
"sub esp, 28h  | * | lea eax, [esp+2Ch+arg_4] ",gcc,1
"mov ebx, ds:__imp___iob  | * | mov [esp+2Ch+var_24], 17h  ",gcc,1
"lea eax, [esp+2Ch+arg_4]  | * | mov [esp+2Ch+var_28], 1  ",gcc,1
"mov [esp+2Ch+var_24], 17h   | * | add ebx, 40h  ",gcc,1
"mov [esp+2Ch+var_28], 1   | * | mov [esp+2Ch+var_20], ebx  ",gcc,1
"add ebx, 40h   | * | mov [esp+2Ch+var_2C], offset aMingwRuntimeFa  ",gcc,1
"mov [esp+2Ch+var_20], ebx   | * | mov [esp+2Ch+var_10], eax ",gcc,1
"mov [esp+2Ch+var_2C], offset aMingwRuntimeFa   | * | call _fwrite ",gcc,1
"call _fwrite  | * | mov [esp+2Ch+var_2C], ebx  ",gcc,1
"mov eax, [esp+2Ch+var_10]  | * | mov [esp+2Ch+var_24], eax  ",gcc,1
"mov [esp+2Ch+var_2C], ebx   | * | mov eax, [esp+2Ch+arg_0] ",gcc,1
"mov [esp+2Ch+var_24], eax   | * | mov [esp+2Ch+var_28], eax  ",gcc,1
"mov eax, [esp+2Ch+arg_0]  | * | call _vfprintf ",gcc,1
"mov [esp+2Ch+var_28], eax   | * | call _abort ",gcc,1
call _vfprintf  | * | ___report_error endp ,gcc,1
call _abort  | * | align 10h ,gcc,1
___report_error endp  | * | ___write_memory_part_0 proc near  ,gcc,1
lpAddress = dword ptr -5Ch  | * | dwLength = dword ptr -54h ,data,1
lpBuffer = dword ptr -58h  | * | lpflOldProtect = dword ptr -50h ,data,1
dwLength = dword ptr -54h  | * | var_3E = byte ptr -3Eh ,data,1
lpflOldProtect = dword ptr -50h  | * | var_3D = byte ptr -3Dh ,data,1
var_3E = byte ptr -3Eh  | * | flOldProtect = dword ptr -3Ch ,data,1
var_3D = byte ptr -3Dh  | * | Buffer = _MEMORY_BASIC_INFORMATION ptr -38h ,data,1
flOldProtect = dword ptr -3Ch  | * | var_10 = dword ptr -10h ,data,1
Buffer = _MEMORY_BASIC_INFORMATION ptr -38h  | * | var_C = dword ptr -0Ch ,data,1
var_10 = dword ptr -10h  | * | var_8 = dword ptr -8 ,data,2
var_C = dword ptr -0Ch  | * | var_4 = dword ptr -4 ,data,2
"sub esp, 5Ch  | * | mov ebx, eax ",gcc,1
"mov [esp+5Ch+var_10], ebx  | * | lea eax, [esp+5Ch+Buffer] ",gcc,1
"mov ebx, eax  | * | mov [esp+5Ch+dwLength], 1Ch  ",gcc,1
"lea eax, [esp+5Ch+Buffer]  | * | mov [esp+5Ch+lpBuffer], eax  ",gcc,1
"mov [esp+5Ch+dwLength], 1Ch   | * | mov [esp+5Ch+lpAddress], ebx  ",gcc,1
"mov [esp+5Ch+lpBuffer], eax   | * | mov [esp+5Ch+var_C], esi ",gcc,1
"mov [esp+5Ch+lpAddress], ebx   | * | mov esi, edx ",gcc,1
"mov [esp+5Ch+var_C], esi  | * | mov [esp+5Ch+var_8], edi ",gcc,1
"mov esi, edx  | * | mov edi, ecx ",gcc,1
"mov [esp+5Ch+var_8], edi  | * | mov [esp+5Ch+var_4], ebp ",gcc,1
"mov edi, ecx  | * | call _VirtualQuery@12  ",gcc,1
"mov [esp+5Ch+var_4], ebp  | * | sub esp, 0Ch ",gcc,1
"call _VirtualQuery@12   | * | test eax, eax ",gcc,1
"sub esp, 0Ch  | * | jz loc_4017E6 ",gcc,1
"test eax, eax  | * | mov eax, [esp+5Ch+Buffer.Protect] ",gcc,1
"jz loc_4017E6  | * | cmp eax, 4 ",gcc,1
"mov eax, [esp+5Ch+Buffer.Protect]  | * | jnz short loc_401760 ",gcc,1
"cmp eax, 4  | * | loc_401735:  ",gcc,1
"jnz short loc_401760  | * | mov [esp+5Ch+dwLength], edi  ",gcc,1
"loc_401735:   | * | mov [esp+5Ch+lpBuffer], esi  ",gcc,1
"mov [esp+5Ch+dwLength], edi   | * | mov [esp+5Ch+lpAddress], ebx  ",gcc,2
"mov [esp+5Ch+lpBuffer], esi   | * | call _memcpy ",gcc,1
"mov [esp+5Ch+lpAddress], ebx   | * | loc_401745:  ",gcc,1
"call _memcpy  | * | mov ebx, [esp+5Ch+var_10] ",gcc,1
"loc_401745:   | * | mov esi, [esp+5Ch+var_C] ",gcc,1
"mov ebx, [esp+5Ch+var_10]  | * | mov edi, [esp+5Ch+var_8] ",gcc,1
"mov esi, [esp+5Ch+var_C]  | * | mov ebp, [esp+5Ch+var_4] ",gcc,1
"mov edi, [esp+5Ch+var_8]  | * | add esp, 5Ch ",gcc,1
"mov ebp, [esp+5Ch+var_4]  | * | retn ",gcc,1
"add esp, 5Ch  | * | align 10h ",gcc,1
retn  | * | loc_401760:  ,gcc,1
"align 10h  | * | cmp eax, 40h  ",gcc,1
loc_401760:   | * | jz short loc_401735 ,gcc,1
"cmp eax, 40h   | * | mov eax, [esp+5Ch+Buffer.RegionSize] ",gcc,1
"jz short loc_401735  | * | lea ebp, [esp+5Ch+flOldProtect] ",gcc,1
"mov eax, [esp+5Ch+Buffer.RegionSize]  | * | mov [esp+5Ch+lpflOldProtect], ebp  ",gcc,1
"lea ebp, [esp+5Ch+flOldProtect]  | * | mov [esp+5Ch+dwLength], 40h  ",gcc,1
"mov [esp+5Ch+lpflOldProtect], ebp   | * | mov [esp+5Ch+lpBuffer], eax  ",gcc,1
"mov [esp+5Ch+dwLength], 40h   | * | mov eax, [esp+5Ch+Buffer.BaseAddress] ",gcc,1
"mov [esp+5Ch+lpBuffer], eax   | * | mov [esp+5Ch+lpAddress], eax  ",gcc,2
"mov eax, [esp+5Ch+Buffer.BaseAddress]  | * | call _VirtualProtect@16  ",gcc,2
"mov [esp+5Ch+lpAddress], eax   | * | sub esp, 10h ",gcc,2
"call _VirtualProtect@16   | * | mov eax, [esp+5Ch+Buffer.Protect] ",gcc,1
"sub esp, 10h  | * | mov [esp+5Ch+dwLength], edi  ",gcc,1
"mov eax, [esp+5Ch+Buffer.Protect]  | * | mov [esp+5Ch+lpBuffer], esi  ",gcc,1
"mov [esp+5Ch+lpBuffer], esi   | * | cmp eax, 40h  ",gcc,1
"mov [esp+5Ch+lpAddress], ebx   | * | setnz [esp+5Ch+var_3E] ",gcc,1
"cmp eax, 40h   | * | cmp eax, 4 ",gcc,1
setnz [esp+5Ch+var_3E]  | * | setnz [esp+5Ch+var_3D] ,gcc,1
"cmp eax, 4  | * | call _memcpy ",gcc,1
"setnz [esp+5Ch+var_3D]  | * | cmp [esp+5Ch+var_3D], 0 ",gcc,1
call _memcpy  | * | jz short loc_401745 ,gcc,1
"cmp [esp+5Ch+var_3D], 0  | * | cmp [esp+5Ch+var_3E], 0 ",gcc,1
jz short loc_401745  | * | jz short loc_401745 ,gcc,1
"cmp [esp+5Ch+var_3E], 0  | * | mov eax, [esp+5Ch+flOldProtect] ",gcc,1
"jz short loc_401745  | * | mov [esp+5Ch+lpflOldProtect], ebp  ",gcc,1
"mov eax, [esp+5Ch+flOldProtect]  | * | mov [esp+5Ch+dwLength], eax  ",gcc,1
"mov [esp+5Ch+lpflOldProtect], ebp   | * | mov eax, [esp+5Ch+Buffer.RegionSize] ",gcc,1
"mov [esp+5Ch+dwLength], eax   | * | mov [esp+5Ch+lpBuffer], eax  ",gcc,1
"mov eax, [esp+5Ch+Buffer.RegionSize]  | * | mov eax, [esp+5Ch+Buffer.BaseAddress] ",gcc,1
call _VirtualProtect@16   | * | jmp loc_401745 ,gcc,1
"sub esp, 10h  | * | loc_4017E6:  ",gcc,1
"jmp loc_401745  | * | mov [esp+5Ch+dwLength], ebx ",gcc,1
"loc_4017E6:   | * | mov [esp+5Ch+lpBuffer], 1Ch  ",gcc,1
"mov [esp+5Ch+dwLength], ebx  | * | mov [esp+5Ch+lpAddress], offset aVirtualqueryFa  ",gcc,1
"mov [esp+5Ch+lpBuffer], 1Ch   | * | call ___report_error ",gcc,1
"mov [esp+5Ch+lpAddress], offset aVirtualqueryFa   | * | ___write_memory_part_0 endp ",gcc,1
call ___report_error  | * | align 10h ,gcc,2
___write_memory_part_0 endp  | * | public __pei386_runtime_relocator ,gcc,1
align 10h  | * | __pei386_runtime_relocator proc near  ,gcc,1
var_2C = dword ptr -2Ch  | * | var_14 = dword ptr -14h ,data,1
var_28 = byte ptr -28h  | * | var_10 = dword ptr -10h ,data,1
var_14 = dword ptr -14h  | * | var_C = dword ptr -0Ch ,data,1
"mov eax, ds:_was_init_31048  | * | jz short loc_401810 ",gcc,1
"test eax, eax  | * | locret_401809:  ",gcc,1
jz short loc_401810  | * | retn ,gcc,1
locret_401809:   | * | align 10h ,gcc,1
retn  | * | loc_401810:  ,gcc,1
"align 10h  | * | mov eax, offset __rt_psrelocs_end ",gcc,1
"loc_401810:   | * | sub eax, offset __rt_psrelocs_end ",gcc,1
"mov eax, offset __rt_psrelocs_end  | * | cmp eax, 7 ",gcc,1
"sub eax, offset __rt_psrelocs_end  | * | mov ds:_was_init_31048, 1 ",gcc,1
"cmp eax, 7  | * | jle short locret_401809 ",gcc,1
"mov ds:_was_init_31048, 1  | * | sub esp, 2Ch ",gcc,1
"jle short locret_401809  | * | cmp eax, 0Bh ",gcc,1
"sub esp, 2Ch  | * | mov [esp+2Ch+var_C], ebx ",gcc,1
"cmp eax, 0Bh  | * | mov [esp+2Ch+var_8], esi ",gcc,1
"mov [esp+2Ch+var_C], ebx  | * | mov [esp+2Ch+var_4], edi ",gcc,1
"mov [esp+2Ch+var_8], esi  | * | jle loc_401920 ",gcc,1
"mov [esp+2Ch+var_4], edi  | * | mov esi, ds:__rt_psrelocs_end ",gcc,1
"jle loc_401920  | * | test esi, esi ",gcc,1
"mov esi, ds:__rt_psrelocs_end  | * | jnz loc_4018D4 ",gcc,1
"test esi, esi  | * | mov ebx, ds:dword_403108 ",gcc,1
"jnz loc_4018D4  | * | test ebx, ebx ",gcc,1
"mov ebx, ds:dword_403108  | * | jnz short loc_4018D4 ",gcc,1
"test ebx, ebx  | * | mov ecx, ds:dword_40310C ",gcc,1
"jnz short loc_4018D4  | * | mov ebx, offset unk_403110 ",gcc,1
"mov ecx, ds:dword_40310C  | * | test ecx, ecx ",gcc,1
"mov ebx, offset unk_403110  | * | jz loc_401925 ",gcc,1
"test ecx, ecx  | * | mov ebx, offset __rt_psrelocs_end ",gcc,1
jz loc_401925  | * | loc_401871:  ,gcc,1
"mov ebx, offset __rt_psrelocs_end  | * | mov eax, [ebx+8] ",gcc,1
"loc_401871:   | * | cmp eax, 1 ",gcc,1
"mov eax, [ebx+8]  | * | jnz loc_4019C4 ",gcc,1
"cmp eax, 1  | * | loc_40187D:  ",gcc,1
"jnz loc_4019C4  | * | add ebx, 0Ch ",gcc,1
"loc_40187D:   | * | cmp ebx, offset __rt_psrelocs_end ",gcc,1
"add ebx, 0Ch  | * | jnb loc_40190F ",gcc,1
"cmp ebx, offset __rt_psrelocs_end  | * | movzx edx, byte ptr [ebx+8] ",gcc,1
"jnb loc_40190F  | * | mov esi, [ebx+4] ",gcc,1
"movzx edx, byte ptr [ebx+8]  | * | mov ecx, [ebx] ",gcc,1
"mov esi, [ebx+4]  | * | cmp edx, 10h ",gcc,1
"mov ecx, [ebx]  | * | lea eax, [esi+400000h] ",gcc,1
"cmp edx, 10h  | * | mov edi, [ecx+400000h] ",gcc,1
"lea eax, [esi+400000h]  | * | jz loc_401938 ",gcc,1
"mov edi, [ecx+400000h]  | * | cmp edx, 20h  ",gcc,1
jz loc_401938  | * | jz loc_4019A3 ,gcc,1
"cmp edx, 20h   | * | cmp edx, 8 ",gcc,1
jz loc_4019A3  | * | jz loc_401970 ,gcc,1
"cmp edx, 8  | * | mov dword ptr [esp+2Ch+var_28], edx  ",gcc,1
"jz loc_401970  | * | mov [esp+2Ch+var_2C], offset aUnknownPseudoR  ",gcc,1
"mov dword ptr [esp+2Ch+var_28], edx   | * | mov [esp+2Ch+var_14], 0 ",gcc,1
"mov [esp+2Ch+var_2C], offset aUnknownPseudoR   | * | call ___report_error ",gcc,1
"mov [esp+2Ch+var_14], 0  | * | loc_4018D4:  ",gcc,1
"call ___report_error  | * | mov ebx, offset __rt_psrelocs_end ",gcc,1
loc_4018D4:   | * | loc_4018D9:  ,gcc,1
"mov ebx, offset __rt_psrelocs_end  | * | cmp ebx, offset __rt_psrelocs_end ",gcc,1
loc_4018D9:   | * | jnb short loc_40190F ,gcc,1
"cmp ebx, offset __rt_psrelocs_end  | * | loc_4018E1:  ",gcc,1
"jnb short loc_40190F  | * | mov edx, [ebx+4] ",gcc,1
"loc_4018E1:   | * | mov ecx, 4  ",gcc,1
"mov edx, [ebx+4]  | * | lea eax, [edx+400000h] ",gcc,1
"mov ecx, 4   | * | mov edx, [edx+400000h] ",gcc,1
"lea eax, [edx+400000h]  | * | add edx, [ebx] ",gcc,1
"mov edx, [edx+400000h]  | * | add ebx, 8 ",gcc,1
"add edx, [ebx]  | * | mov [esp+2Ch+var_10], edx ",gcc,1
"add ebx, 8  | * | lea edx, [esp+2Ch+var_10]  ",gcc,1
"mov [esp+2Ch+var_10], edx  | * | call ___write_memory_part_0 ",gcc,1
"lea edx, [esp+2Ch+var_10]   | * | cmp ebx, offset __rt_psrelocs_end ",gcc,1
call ___write_memory_part_0  | * | jb short loc_4018E1 ,gcc,1
"cmp ebx, offset __rt_psrelocs_end  | * | loc_40190F:  ",gcc,1
"jb short loc_4018E1  | * | mov ebx, [esp+2Ch+var_C] ",gcc,1
"loc_40190F:   | * | mov esi, [esp+2Ch+var_8] ",gcc,1
"mov ebx, [esp+2Ch+var_C]  | * | mov edi, [esp+2Ch+var_4] ",gcc,1
"mov esi, [esp+2Ch+var_8]  | * | add esp, 2Ch ",gcc,1
"mov edi, [esp+2Ch+var_4]  | * | retn ",gcc,1
"add esp, 2Ch  | * | align 10h ",gcc,1
retn  | * | loc_401920:  ,gcc,1
"align 10h  | * | mov ebx, offset __rt_psrelocs_end ",gcc,1
loc_401920:   | * | loc_401925:  ,gcc,1
"mov ebx, offset __rt_psrelocs_end  | * | mov edx, [ebx] ",gcc,1
"loc_401925:   | * | test edx, edx ",gcc,1
"mov edx, [ebx]  | * | jnz short loc_4018D9 ",gcc,1
"test edx, edx  | * | mov eax, [ebx+4] ",gcc,1
"jnz short loc_4018D9  | * | test eax, eax ",gcc,1
"mov eax, [ebx+4]  | * | jz loc_401871 ",gcc,1
"test eax, eax  | * | jmp short loc_4018D9 ",gcc,1
jz loc_401871  | * | loc_401938:  ,gcc,1
"jmp short loc_4018D9  | * | movzx esi, word ptr [esi+400000h] ",gcc,1
"loc_401938:   | * | test si, si ",gcc,1
"movzx esi, word ptr [esi+400000h]  | * | movzx edx, si ",gcc,1
"test si, si  | * | jns short loc_40194D ",gcc,1
"movzx edx, si  | * | or edx, 0FFFF0000h ",gcc,1
jns short loc_40194D  | * | loc_40194D:  ,gcc,1
"or edx, 0FFFF0000h  | * | sub edx, ecx ",gcc,1
"loc_40194D:   | * | mov ecx, 2  ",gcc,1
"sub edx, ecx  | * | sub edx, 400000h ",gcc,1
"mov ecx, 2   | * | add edx, edi ",gcc,1
"sub edx, 400000h  | * | mov [esp+2Ch+var_14], edx ",gcc,1
"add edx, edi  | * | lea edx, [esp+2Ch+var_14]  ",gcc,2
"mov [esp+2Ch+var_14], edx  | * | call ___write_memory_part_0 ",gcc,2
"lea edx, [esp+2Ch+var_14]   | * | jmp loc_40187D ",gcc,2
call ___write_memory_part_0  | * | align 10h ,gcc,1
jmp loc_40187D  | * | loc_401970:  ,gcc,1
"align 10h  | * | movzx edx, byte ptr [eax] ",gcc,1
"loc_401970:   | * | test dl, dl ",gcc,1
"movzx edx, byte ptr [eax]  | * | movzx esi, dl ",gcc,1
"test dl, dl  | * | jns short loc_401980 ",gcc,1
"movzx esi, dl  | * | or esi, 0FFFFFF00h ",gcc,1
jns short loc_401980  | * | loc_401980:  ,gcc,1
"or esi, 0FFFFFF00h  | * | mov edx, esi ",gcc,1
"loc_401980:   | * | sub edx, 400000h ",gcc,1
"mov edx, esi  | * | sub edx, ecx ",gcc,1
"sub edx, 400000h  | * | mov ecx, 1  ",gcc,1
"sub edx, ecx  | * | add edx, edi ",gcc,1
"mov ecx, 1   | * | mov [esp+2Ch+var_14], edx ",gcc,1
call ___write_memory_part_0  | * | loc_4019A3:  ,gcc,1
"jmp loc_40187D  | * | add ecx, 400000h ",gcc,1
"loc_4019A3:   | * | sub edi, ecx ",gcc,1
"add ecx, 400000h  | * | mov ecx, 4  ",gcc,1
"sub edi, ecx  | * | add edi, [eax] ",gcc,1
"mov ecx, 4   | * | lea edx, [esp+2Ch+var_14]  ",gcc,1
"add edi, [eax]  | * | mov [esp+2Ch+var_14], edi ",gcc,1
"lea edx, [esp+2Ch+var_14]   | * | call ___write_memory_part_0 ",gcc,1
"mov [esp+2Ch+var_14], edi  | * | jmp loc_40187D ",gcc,1
call ___write_memory_part_0  | * | loc_4019C4:  ,gcc,1
"jmp loc_40187D  | * | mov dword ptr [esp+2Ch+var_28], eax  ",gcc,1
"loc_4019C4:   | * | mov [esp+2Ch+var_2C], offset aUnknownPseudoR_0  ",gcc,1
"mov dword ptr [esp+2Ch+var_28], eax   | * | call ___report_error ",gcc,1
"mov [esp+2Ch+var_2C], offset aUnknownPseudoR_0   | * | __pei386_runtime_relocator endp ",gcc,1
__pei386_runtime_relocator endp  | * | public ___do_global_dtors ,gcc,1
align 10h  | * | ___do_global_dtors proc near  ,gcc,1
"public ___do_global_dtors  | * | mov eax, _p_1761 ",gcc,1
"___do_global_dtors proc near   | * | mov eax, [eax] ",gcc,1
"mov eax, _p_1761  | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | jz short locret_401A0A ",gcc,1
"test eax, eax  | * | sub esp, 0Ch ",gcc,1
"jz short locret_401A0A  | * | xchg ax, ax ",gcc,1
"sub esp, 0Ch  | * | loc_4019F0:  ",gcc,1
"xchg ax, ax  | * | call eax ",gcc,1
"loc_4019F0:   | * | mov eax, _p_1761 ",gcc,1
"call eax  | * | lea edx, [eax+4] ",gcc,1
"mov eax, _p_1761  | * | mov eax, [eax+4] ",gcc,1
"lea edx, [eax+4]  | * | mov _p_1761, edx ",gcc,1
"mov eax, [eax+4]  | * | test eax, eax ",gcc,1
"mov _p_1761, edx  | * | jnz short loc_4019F0 ",gcc,1
"test eax, eax  | * | add esp, 0Ch ",gcc,1
jnz short loc_4019F0  | * | locret_401A0A:  ,gcc,1
"add esp, 0Ch  | * | rep retn ",gcc,1
locret_401A0A:   | * | ___do_global_dtors endp ,gcc,1
rep retn  | * | align 10h ,gcc,1
___do_global_dtors endp  | * | public ___do_global_ctors ,gcc,1
align 10h  | * | ___do_global_ctors proc near  ,gcc,1
___do_global_ctors proc near   | * | push ebx ,gcc,1
"push ebx  | * | mov ebx, ds:___CTOR_LIST__ ",gcc,1
"sub esp, 18h  | * | cmp ebx, 0FFFFFFFFh ",gcc,1
"mov ebx, ds:___CTOR_LIST__  | * | jz short loc_401A43 ",gcc,1
"cmp ebx, 0FFFFFFFFh  | * | loc_401A1F:  ",gcc,1
"jz short loc_401A43  | * | test ebx, ebx ",gcc,1
loc_401A1F:   | * | jz short loc_401A32 ,gcc,1
"test ebx, ebx  | * | loc_401A23:  ",gcc,1
jz short loc_401A32  | * | call ds:___CTOR_LIST__[ebx*4] ,gcc,1
"loc_401A23:   | * | sub ebx, 1 ",gcc,1
"call ds:___CTOR_LIST__[ebx*4]  | * | lea esi, [esi+0] ",gcc,1
"sub ebx, 1  | * | jnz short loc_401A23 ",gcc,1
"lea esi, [esi+0]  | * | loc_401A32:  ",gcc,1
"jnz short loc_401A23  | * | mov [esp+1Ch+var_1C], offset ___do_global_dtors  ",gcc,1
loc_401A32:   | * | call _atexit ,gcc,1
"mov [esp+1Ch+var_1C], offset ___do_global_dtors   | * | add esp, 18h ",gcc,1
call _atexit  | * | pop ebx ,gcc,1
"add esp, 18h  | * | retn ",gcc,1
pop ebx  | * | loc_401A43:  ,gcc,1
"retn  | * | xor ebx, ebx ",gcc,1
loc_401A43:   | * | jmp short loc_401A49 ,gcc,1
"xor ebx, ebx  | * | loc_401A47:  ",gcc,1
"jmp short loc_401A49  | * | mov ebx, eax ",gcc,1
loc_401A47:   | * | loc_401A49:  ,gcc,1
"mov ebx, eax  | * | lea eax, [ebx+1] ",gcc,1
"loc_401A49:   | * | mov edx, ds:___CTOR_LIST__[eax*4] ",gcc,1
"lea eax, [ebx+1]  | * | test edx, edx ",gcc,1
"mov edx, ds:___CTOR_LIST__[eax*4]  | * | jnz short loc_401A47 ",gcc,1
"test edx, edx  | * | jmp short loc_401A1F ",gcc,1
jnz short loc_401A47  | * | ___do_global_ctors endp ,gcc,1
jmp short loc_401A1F  | * | align 10h ,gcc,1
___do_global_ctors endp  | * | public ___main ,gcc,1
align 10h  | * | ___main proc near  ,gcc,1
"public ___main  | * | mov ecx, ds:_initialized ",gcc,1
"___main proc near   | * | test ecx, ecx ",gcc,1
"mov ecx, ds:_initialized  | * | jz short loc_401A70 ",gcc,1
"test ecx, ecx  | * | rep retn ",gcc,1
jz short loc_401A70  | * | align 10h ,gcc,1
rep retn  | * | loc_401A70:  ,gcc,1
"align 10h  | * | mov ds:_initialized, 1 ",gcc,1
loc_401A70:   | * | jmp short ___do_global_ctors ,gcc,1
"mov ds:_initialized, 1  | * | ___main endp ",gcc,1
jmp short ___do_global_ctors  | * | align 10h ,gcc,1
___main endp  | * | ___mingwthr_run_key_dtors_part_0 proc near ,gcc,1
___mingwthr_run_key_dtors_part_0 proc near  | * | push esi ,gcc,1
"push ebx  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
"sub esp, 14h  | * | call _EnterCriticalSection@4  ",gcc,1
"mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs   | * | mov ebx, ds:_key_dtor_list ",gcc,1
"call _EnterCriticalSection@4   | * | sub esp, 4 ",gcc,2
"mov ebx, ds:_key_dtor_list  | * | test ebx, ebx ",gcc,1
"sub esp, 4  | * | jz short loc_401ACB ",gcc,1
"test ebx, ebx  | * | xchg ax, ax ",gcc,1
jz short loc_401ACB  | * | loc_401AA0:  ,gcc,1
"xchg ax, ax  | * | mov eax, [ebx] ",gcc,1
"loc_401AA0:   | * | mov [esp+1Ch+lpCriticalSection], eax  ",gcc,1
"mov eax, [ebx]  | * | call _TlsGetValue@4  ",gcc,1
"mov [esp+1Ch+lpCriticalSection], eax   | * | sub esp, 4 ",gcc,1
"call _TlsGetValue@4   | * | mov esi, eax ",gcc,1
"sub esp, 4  | * | call _GetLastError@0  ",gcc,1
"mov esi, eax  | * | test eax, eax ",gcc,1
call _GetLastError@0   | * | jnz short loc_401AC4 ,gcc,1
"test eax, eax  | * | test esi, esi ",gcc,1
jnz short loc_401AC4  | * | jz short loc_401AC4 ,gcc,1
"test esi, esi  | * | mov eax, [ebx+4] ",gcc,1
"jz short loc_401AC4  | * | mov [esp+1Ch+lpCriticalSection], esi ",gcc,1
"mov eax, [ebx+4]  | * | call eax ",gcc,1
"mov [esp+1Ch+lpCriticalSection], esi  | * | loc_401AC4:  ",gcc,1
"call eax  | * | mov ebx, [ebx+8] ",gcc,1
"loc_401AC4:   | * | test ebx, ebx ",gcc,1
"mov ebx, [ebx+8]  | * | jnz short loc_401AA0 ",gcc,1
"test ebx, ebx  | * | loc_401ACB:  ",gcc,1
"jnz short loc_401AA0  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
loc_401ACB:   | * | call _LeaveCriticalSection@4  ,gcc,1
"mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs   | * | sub esp, 4 ",gcc,4
"call _LeaveCriticalSection@4   | * | add esp, 14h ",gcc,1
"sub esp, 4  | * | pop ebx ",gcc,1
"add esp, 14h  | * | pop esi ",gcc,1
pop ebx  | * | retn ,gcc,1
pop esi  | * | ___mingwthr_run_key_dtors_part_0 endp ,gcc,1
retn  | * | public ____w64_mingwthr_add_key_dtor ,gcc,1
___mingwthr_run_key_dtors_part_0 endp  | * | ____w64_mingwthr_add_key_dtor proc near ,gcc,1
var_1C = dword ptr -1Ch  | * | var_8 = dword ptr -8 ,data,1
var_18 = dword ptr -18h  | * | var_4 = dword ptr -4 ,data,1
var_8 = dword ptr -8  | * | arg_0 = dword ptr 4 ,data,1
var_4 = dword ptr -4  | * | arg_4 = dword ptr 8 ,data,1
"sub esp, 1Ch  | * | mov [esp+1Ch+var_4], esi ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | xor esi, esi ",gcc,1
"mov [esp+1Ch+var_4], esi  | * | mov [esp+1Ch+var_8], ebx ",gcc,1
"xor esi, esi  | * | test eax, eax ",gcc,1
"mov [esp+1Ch+var_8], ebx  | * | jnz short loc_401B04 ",gcc,1
"test eax, eax  | * | loc_401AF6:  ",gcc,1
"jnz short loc_401B04  | * | mov eax, esi ",gcc,1
"loc_401AF6:   | * | mov ebx, [esp+1Ch+var_8] ",gcc,1
"mov eax, esi  | * | mov esi, [esp+1Ch+var_4] ",gcc,1
"mov ebx, [esp+1Ch+var_8]  | * | add esp, 1Ch ",gcc,2
"mov esi, [esp+1Ch+var_4]  | * | retn ",gcc,2
"add esp, 1Ch  | * | loc_401B04:  ",gcc,1
"retn  | * | mov [esp+1Ch+var_18], 0Ch  ",gcc,1
"loc_401B04:   | * | mov [esp+1Ch+var_1C], 1  ",gcc,1
"mov [esp+1Ch+var_18], 0Ch   | * | call _calloc ",gcc,1
"mov [esp+1Ch+var_1C], 1   | * | test eax, eax ",gcc,1
"call _calloc  | * | mov ebx, eax ",gcc,1
"test eax, eax  | * | jz short loc_401B65 ",gcc,1
"mov ebx, eax  | * | mov eax, [esp+1Ch+arg_0] ",gcc,1
"jz short loc_401B65  | * | mov [esp+1Ch+var_1C], offset ___mingwthr_cs  ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | mov [ebx], eax ",gcc,1
"mov [esp+1Ch+var_1C], offset ___mingwthr_cs   | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"mov [ebx], eax  | * | mov [ebx+4], eax ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | call _EnterCriticalSection@4  ",gcc,1
"mov [ebx+4], eax  | * | mov eax, ds:_key_dtor_list ",gcc,1
"call _EnterCriticalSection@4   | * | mov ds:_key_dtor_list, ebx ",gcc,1
"mov eax, ds:_key_dtor_list  | * | mov [ebx+8], eax ",gcc,1
"mov ds:_key_dtor_list, ebx  | * | sub esp, 4 ",gcc,1
"mov [ebx+8], eax  | * | mov [esp+1Ch+var_1C], offset ___mingwthr_cs  ",gcc,1
"sub esp, 4  | * | call _LeaveCriticalSection@4  ",gcc,1
"mov [esp+1Ch+var_1C], offset ___mingwthr_cs   | * | mov eax, esi ",gcc,1
"call _LeaveCriticalSection@4   | * | sub esp, 4 ",gcc,1
"mov eax, esi  | * | mov ebx, [esp+1Ch+var_8] ",gcc,1
"sub esp, 4  | * | mov esi, [esp+1Ch+var_4] ",gcc,1
"add esp, 1Ch  | * | loc_401B65:  ",gcc,1
"retn  | * | mov esi, 0FFFFFFFFh ",gcc,1
loc_401B65:   | * | jmp short loc_401AF6 ,gcc,1
"mov esi, 0FFFFFFFFh  | * | ____w64_mingwthr_add_key_dtor endp ",gcc,1
jmp short loc_401AF6  | * | align 10h ,gcc,1
____w64_mingwthr_add_key_dtor endp  | * | public ____w64_mingwthr_remove_key_dtor ,gcc,1
align 10h  | * | ____w64_mingwthr_remove_key_dtor proc near ,gcc,1
"push ebx  | * | mov eax, ds:___mingwthr_cs_init ",gcc,1
"sub esp, 18h  | * | mov ebx, [esp+1Ch+arg_0] ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | test eax, eax ",gcc,1
"mov ebx, [esp+1Ch+arg_0]  | * | jnz short loc_401B88 ",gcc,1
"test eax, eax  | * | add esp, 18h ",gcc,1
"jnz short loc_401B88  | * | xor eax, eax ",gcc,1
"add esp, 18h  | * | pop ebx ",gcc,2
"xor eax, eax  | * | retn ",gcc,2
pop ebx  | * | loc_401B88:  ,gcc,1
"retn  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
loc_401B88:   | * | call _EnterCriticalSection@4  ,gcc,1
"mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs   | * | mov edx, ds:_key_dtor_list ",gcc,1
"mov edx, ds:_key_dtor_list  | * | test edx, edx ",gcc,1
"sub esp, 4  | * | jz short loc_401BBF ",gcc,1
"test edx, edx  | * | mov eax, [edx] ",gcc,1
"jz short loc_401BBF  | * | cmp eax, ebx ",gcc,1
"mov eax, [edx]  | * | jnz short loc_401BB8 ",gcc,1
"cmp eax, ebx  | * | jmp short loc_401BF4 ",gcc,1
jnz short loc_401BB8  | * | align 10h ,gcc,1
jmp short loc_401BF4  | * | loc_401BB0:  ,gcc,1
"align 10h  | * | mov ecx, [eax] ",gcc,1
"loc_401BB0:   | * | cmp ecx, ebx ",gcc,1
"mov ecx, [eax]  | * | jz short loc_401BD5 ",gcc,1
"cmp ecx, ebx  | * | mov edx, eax ",gcc,1
jz short loc_401BD5  | * | loc_401BB8:  ,gcc,1
"mov edx, eax  | * | mov eax, [edx+8] ",gcc,1
"loc_401BB8:   | * | test eax, eax ",gcc,1
"mov eax, [edx+8]  | * | jnz short loc_401BB0 ",gcc,1
"test eax, eax  | * | loc_401BBF:  ",gcc,1
"jnz short loc_401BB0  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
loc_401BBF:   | * | call _LeaveCriticalSection@4  ,gcc,1
call _LeaveCriticalSection@4   | * | loc_401BCE:  ,gcc,1
"sub esp, 4  | * | add esp, 18h ",gcc,1
"loc_401BCE:   | * | xor eax, eax ",gcc,1
pop ebx  | * | loc_401BD5:  ,gcc,1
"retn  | * | mov ecx, [eax+8] ",gcc,1
"loc_401BD5:   | * | mov [edx+8], ecx ",gcc,1
"mov ecx, [eax+8]  | * | loc_401BDB:  ",gcc,1
"mov [edx+8], ecx  | * | mov [esp+1Ch+lpCriticalSection], eax  ",gcc,1
loc_401BDB:   | * | call _free ,gcc,1
"mov [esp+1Ch+lpCriticalSection], eax   | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
call _free  | * | call _LeaveCriticalSection@4  ,gcc,1
call _LeaveCriticalSection@4   | * | jmp short loc_401BCE ,gcc,1
"sub esp, 4  | * | loc_401BF4:  ",gcc,1
"jmp short loc_401BCE  | * | mov eax, [edx+8] ",gcc,1
"loc_401BF4:   | * | mov ds:_key_dtor_list, eax ",gcc,1
"mov eax, [edx+8]  | * | mov eax, edx ",gcc,1
"mov ds:_key_dtor_list, eax  | * | jmp short loc_401BDB ",gcc,1
"mov eax, edx  | * | ____w64_mingwthr_remove_key_dtor endp ",gcc,1
jmp short loc_401BDB  | * | public ___mingw_TLScallback ,gcc,1
____w64_mingwthr_remove_key_dtor endp  | * | ___mingw_TLScallback proc near  ,gcc,1
"sub esp, 1Ch  | * | cmp eax, 1 ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | jz short loc_401C50 ",gcc,1
"cmp eax, 1  | * | jb short loc_401C20 ",gcc,1
"jz short loc_401C50  | * | cmp eax, 3 ",gcc,1
jb short loc_401C20  | * | jz short loc_401C70 ,gcc,1
"cmp eax, 3  | * | loc_401C13:  ",gcc,1
"jz short loc_401C70  | * | mov eax, 1 ",gcc,1
"loc_401C13:   | * | add esp, 1Ch ",gcc,1
"mov eax, 1  | * | retn ",gcc,2
retn  | * | loc_401C20:  ,gcc,1
"align 10h  | * | mov eax, ds:___mingwthr_cs_init ",gcc,3
"loc_401C20:   | * | test eax, eax ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | jnz short loc_401C91 ",gcc,1
"test eax, eax  | * | loc_401C29:  ",gcc,1
"jnz short loc_401C91  | * | mov eax, ds:___mingwthr_cs_init ",gcc,1
"loc_401C29:   | * | cmp eax, 1 ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | jnz short loc_401C13 ",gcc,1
"cmp eax, 1  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
"jnz short loc_401C13  | * | mov ds:___mingwthr_cs_init, 0 ",gcc,1
"mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs   | * | call _DeleteCriticalSection@4  ",gcc,1
"mov ds:___mingwthr_cs_init, 0  | * | sub esp, 4 ",gcc,1
call _DeleteCriticalSection@4   | * | jmp short loc_401C13 ,gcc,1
"sub esp, 4  | * | align 10h ",gcc,1
jmp short loc_401C13  | * | loc_401C50:  ,gcc,1
"loc_401C50:   | * | test eax, eax ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | jz short loc_401C80 ",gcc,1
"test eax, eax  | * | loc_401C59:  ",gcc,1
"jz short loc_401C80  | * | mov ds:___mingwthr_cs_init, 1 ",gcc,1
"loc_401C59:   | * | mov eax, 1 ",gcc,1
"mov ds:___mingwthr_cs_init, 1  | * | add esp, 1Ch ",gcc,1
retn  | * | loc_401C70:  ,gcc,1
"loc_401C70:   | * | test eax, eax ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | jz short loc_401C13 ",gcc,1
"test eax, eax  | * | call ___mingwthr_run_key_dtors_part_0 ",gcc,1
jz short loc_401C13  | * | jmp short loc_401C13 ,gcc,1
call ___mingwthr_run_key_dtors_part_0  | * | loc_401C80:  ,gcc,1
"jmp short loc_401C13  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
loc_401C80:   | * | call _InitializeCriticalSection@4  ,gcc,1
call _InitializeCriticalSection@4   | * | jmp short loc_401C59 ,gcc,1
"sub esp, 4  | * | loc_401C91:  ",gcc,1
jmp short loc_401C59  | * | call ___mingwthr_run_key_dtors_part_0 ,gcc,1
loc_401C91:   | * | jmp short loc_401C29 ,gcc,1
call ___mingwthr_run_key_dtors_part_0  | * | ___mingw_TLScallback endp ,gcc,1
jmp short loc_401C29  | * | align 10h ,gcc,1
___mingw_TLScallback endp  | * | align 4 ,gcc,1
align 10h  | * | align 10h ,gcc,13
align 4  | * | align 4 ,gcc,12
align 4  | * | _register_frame_ctor proc near ,gcc,1
align 10h  | * | push ebp ,gcc,1
"_register_frame_ctor proc near  | * | mov ebp, esp ",gcc,1
"mov ebp, esp  | * | call ___gcc_register_frame ",gcc,1
"sub esp, 18h  | * | mov dword ptr [esp], offset ___gcc_deregister_frame  ",gcc,1
call ___gcc_register_frame  | * | call _atexit ,gcc,1
"mov dword ptr [esp], offset ___gcc_deregister_frame   | * | leave ",gcc,1
call _atexit  | * | retn ,gcc,1
leave  | * | _register_frame_ctor endp ,gcc,1
_register_frame_ctor endp  | * | public ___CTOR_LIST__ ,gcc,1
"align 4  | * | ___CTOR_LIST__ dd 0FFFFFFFFh, 401D70h  ",gcc,1
public ___CTOR_LIST__  | * | align 8 ,gcc,1
"___CTOR_LIST__ dd 0FFFFFFFFh, 401D70h   | * | public __DTOR_LIST__ ",gcc,1
"align 8  | * | __DTOR_LIST__ dd 0FFFFFFFFh, 0 ",gcc,1
public __DTOR_LIST__  | * | align 80h ,gcc,1
"__DTOR_LIST__ dd 0FFFFFFFFh, 0  | * | dd 80h dup(?) ",gcc,1
align 80h  | * | _text ends ,gcc,1
