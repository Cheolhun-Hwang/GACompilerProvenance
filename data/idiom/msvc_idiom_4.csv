idiom,label,count
var_C = dword ptr -0Ch  | * | var_4 = dword ptr -4 ,data,1
var_8 = dword ptr -8  | * | argc = dword ptr 8 ,data,1
var_4 = dword ptr -4  | * | argv = dword ptr 0Ch ,data,1
argc = dword ptr 8  | * | envp = dword ptr 10h ,data,1
"push ebp  | * | sub esp, 0Ch ",msvc,1
"mov ebp, esp  | * | push edi ",msvc,1
"sub esp, 0Ch  | * | lea eax, [ebp+var_C] ",msvc,1
push edi  | * | push eax ,msvc,1
"lea eax, [ebp+var_C]  | * | push offset Format  ",msvc,1
push eax  | * | call ds:scanf ,msvc,1
"push offset Format   | * | mov edi, 1 ",msvc,1
"call ds:scanf  | * | add esp, 8 ",msvc,1
"mov edi, 1  | * | mov [ebp+var_8], edi ",msvc,1
"add esp, 8  | * | cmp [ebp+var_C], edi ",msvc,1
"mov [ebp+var_8], edi  | * | jl loc_401121 ",msvc,1
"cmp [ebp+var_C], edi  | * | push ebx ",msvc,1
jl loc_401121  | * | push esi ,msvc,1
"push ebx  | * | lea esp, [esp+0] ",msvc,1
push esi  | * | loc_401030:  ,msvc,1
"lea esp, [esp+0]  | * | push offset dword_403370 ",msvc,1
loc_401030:   | * | push offset dword_403378 ,msvc,1
push offset dword_403370  | * | push offset aDD  ,msvc,1
push offset dword_403378  | * | call ds:scanf ,msvc,1
"push offset aDD   | * | mov edx, dword_403378 ",msvc,1
"call ds:scanf  | * | add esp, 0Ch ",msvc,1
"mov edx, dword_403378  | * | mov esi, 1 ",msvc,1
"add esp, 0Ch  | * | cmp edx, 0Ah ",msvc,1
"mov esi, 1  | * | jl short loc_40106B ",msvc,1
"cmp edx, 0Ah  | * | mov eax, 0Ah ",msvc,1
"jl short loc_40106B  | * | lea ecx, [ecx+0] ",msvc,1
"mov eax, 0Ah  | * | loc_401060:  ",msvc,1
"lea ecx, [ecx+0]  | * | mov esi, eax ",msvc,1
"loc_401060:   | * | lea eax, [esi+esi*4] ",msvc,1
"mov esi, eax  | * | add eax, eax ",msvc,1
"lea eax, [esi+esi*4]  | * | cmp eax, edx ",msvc,1
"add eax, eax  | * | jle short loc_401060 ",msvc,1
"cmp eax, edx  | * | loc_40106B:  ",msvc,1
"jle short loc_401060  | * | mov ebx, edx ",msvc,1
"loc_40106B:   | * | mov [ebp+var_4], 0 ",msvc,1
"mov ebx, edx  | * | cmp ebx, dword_403370 ",msvc,1
"mov [ebp+var_4], 0  | * | jg loc_4010FA ",msvc,1
"cmp ebx, dword_403370  | * | jmp short loc_401088 ",msvc,1
jg loc_4010FA  | * | loc_401082:  ,msvc,1
"jmp short loc_401088  | * | mov edx, dword_403378 ",msvc,1
loc_401082:   | * | loc_401088:  ,msvc,1
"mov edx, dword_403378  | * | mov eax, dword_403374 ",msvc,1
loc_401088:   | * | inc eax ,msvc,1
"mov eax, dword_403374  | * | mov dword_403374, eax ",msvc,1
"inc eax  | * | mov ecx, ebx ",msvc,1
"mov dword_403374, eax  | * | mov edi, 0Ah ",msvc,1
"mov ecx, ebx  | * | jmp short loc_4010AB ",msvc,1
"mov edi, 0Ah  | * | align 10h ",msvc,1
jmp short loc_4010AB  | * | loc_4010A0:  ,msvc,1
"align 10h  | * | mov edx, dword_403378 ",msvc,1
"loc_4010A0:   | * | mov eax, dword_403374 ",msvc,1
"mov edx, dword_403378  | * | loc_4010AB:  ",msvc,1
"mov eax, dword_403374  | * | cmp ecx, edx ",msvc,1
loc_4010AB:   | * | jl short loc_4010CE ,msvc,1
"cmp ecx, edx  | * | cmp ecx, dword_403370 ",msvc,1
jl short loc_4010CE  | * | jg short loc_4010CE ,msvc,1
"cmp ecx, dword_403370  | * | cmp ecx, ebx ",msvc,1
jg short loc_4010CE  | * | jz short loc_4010CE ,msvc,1
"cmp ecx, ebx  | * | cmp dword_403380[ecx*4], eax ",msvc,1
jz short loc_4010CE  | * | jz short loc_4010CE ,msvc,1
"cmp dword_403380[ecx*4], eax  | * | inc [ebp+var_4] ",msvc,1
"jz short loc_4010CE  | * | mov dword_403380[ecx*4], eax ",msvc,1
inc [ebp+var_4]  | * | loc_4010CE:  ,msvc,1
"mov dword_403380[ecx*4], eax  | * | mov eax, 66666667h ",msvc,1
loc_4010CE:   | * | imul ecx ,msvc,1
"mov eax, 66666667h  | * | sar edx, 2 ",msvc,1
"imul ecx  | * | mov eax, edx ",msvc,1
"sar edx, 2  | * | shr eax, 1Fh ",msvc,1
"mov eax, edx  | * | add eax, edx ",msvc,1
"shr eax, 1Fh  | * | lea edx, [eax+eax*4] ",msvc,1
"add eax, edx  | * | add edx, edx ",msvc,1
"lea edx, [eax+eax*4]  | * | sub ecx, edx ",msvc,1
"add edx, edx  | * | imul ecx, esi ",msvc,1
"sub ecx, edx  | * | add ecx, eax ",msvc,1
"imul ecx, esi  | * | dec edi ",msvc,1
"add ecx, eax  | * | jnz short loc_4010A0 ",msvc,1
dec edi  | * | inc ebx ,msvc,1
"jnz short loc_4010A0  | * | cmp ebx, dword_403370 ",msvc,1
inc ebx  | * | jle short loc_401082 ,msvc,1
"cmp ebx, dword_403370  | * | mov edi, [ebp+var_8] ",msvc,1
jle short loc_401082  | * | loc_4010FA:  ,msvc,1
"mov edi, [ebp+var_8]  | * | mov eax, [ebp+var_4] ",msvc,1
loc_4010FA:   | * | cdq ,msvc,1
"mov eax, [ebp+var_4]  | * | sub eax, edx ",msvc,1
"cdq  | * | sar eax, 1 ",msvc,1
"sub eax, edx  | * | push eax ",msvc,1
"sar eax, 1  | * | push edi ",msvc,1
push eax  | * | push offset aCaseDD  ,msvc,1
push edi  | * | call ds:printf ,msvc,1
push offset aCaseDD   | * | inc edi ,msvc,1
"call ds:printf  | * | add esp, 0Ch ",msvc,1
"inc edi  | * | mov [ebp+var_8], edi ",msvc,1
"add esp, 0Ch  | * | cmp edi, [ebp+var_C] ",msvc,1
"mov [ebp+var_8], edi  | * | jle loc_401030 ",msvc,1
"cmp edi, [ebp+var_C]  | * | pop esi ",msvc,1
jle loc_401030  | * | pop ebx ,msvc,1
pop esi  | * | loc_401121:  ,msvc,1
"pop ebx  | * | xor eax, eax ",msvc,1
loc_401121:   | * | pop edi ,msvc,1
"xor eax, eax  | * | mov esp, ebp ",msvc,1
pop edi  | * | pop ebp ,msvc,1
"mov esp, ebp  | * | retn ",msvc,1
pop ebp  | * | _main endp ,msvc,1
retn  | * | sub_401517 proc near  ,msvc,1
_main endp  | * | push offset ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z  ,msvc,1
sub_401517 proc near   | * | call ds:SetUnhandledExceptionFilter ,msvc,1
"push offset ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z   | * | xor eax, eax ",msvc,1
call ds:SetUnhandledExceptionFilter  | * | retn ,msvc,1
"xor eax, eax  | * | sub_401517 endp ",msvc,1
retn  | * | align 2 ,msvc,1
sub_401517 endp  | * | sub_4015E4 proc near  ,msvc,1
"align 2  | * | mov edi, edi ",msvc,1
sub_4015E4 proc near   | * | push esi ,msvc,1
"mov edi, edi  | * | mov eax, offset unk_4021E8 ",msvc,1
"push esi  | * | mov esi, offset unk_4021E8 ",msvc,1
"mov eax, offset unk_4021E8  | * | push edi ",msvc,1
"mov esi, offset unk_4021E8  | * | mov edi, eax ",msvc,1
"push edi  | * | cmp eax, esi ",msvc,2
"mov edi, eax  | * | jnb short loc_401607 ",msvc,1
"cmp eax, esi  | * | loc_4015F8:  ",msvc,1
"jnb short loc_401607  | * | mov eax, [edi] ",msvc,1
"loc_4015F8:   | * | test eax, eax ",msvc,1
"mov eax, [edi]  | * | jz short loc_401600 ",msvc,1
"test eax, eax  | * | call eax ",msvc,2
jz short loc_401600  | * | loc_401600:  ,msvc,1
"call eax  | * | add edi, 4 ",msvc,2
"loc_401600:   | * | cmp edi, esi ",msvc,1
"add edi, 4  | * | jb short loc_4015F8 ",msvc,1
"cmp edi, esi  | * | loc_401607:  ",msvc,1
jb short loc_4015F8  | * | pop edi ,msvc,1
loc_401607:   | * | pop esi ,msvc,1
pop edi  | * | retn ,msvc,2
pop esi  | * | sub_4015E4 endp ,msvc,1
retn  | * | sub_40160A proc near  ,msvc,1
"sub_4015E4 endp  | * | mov edi, edi ",msvc,1
sub_40160A proc near   | * | push esi ,msvc,1
"mov edi, edi  | * | mov eax, offset unk_4021F0 ",msvc,1
"push esi  | * | mov esi, offset unk_4021F0 ",msvc,1
"mov eax, offset unk_4021F0  | * | push edi ",msvc,1
"mov esi, offset unk_4021F0  | * | mov edi, eax ",msvc,1
"mov edi, eax  | * | jnb short loc_40162D ",msvc,1
"cmp eax, esi  | * | loc_40161E:  ",msvc,1
"jnb short loc_40162D  | * | mov eax, [edi] ",msvc,1
"loc_40161E:   | * | test eax, eax ",msvc,1
"mov eax, [edi]  | * | jz short loc_401626 ",msvc,1
jz short loc_401626  | * | loc_401626:  ,msvc,1
"loc_401626:   | * | cmp edi, esi ",msvc,1
"add edi, 4  | * | jb short loc_40161E ",msvc,1
"cmp edi, esi  | * | loc_40162D:  ",msvc,1
jb short loc_40161E  | * | pop edi ,msvc,1
loc_40162D:   | * | pop esi ,msvc,1
pop esi  | * | sub_40160A endp ,msvc,1
retn  | * | align 10h ,msvc,1
sub_40160A endp  | * | align 10h ,msvc,1
align 10h  | * | align 10h ,msvc,2
align 10h  | * | sub_401846 proc near  ,msvc,1
"align 10h  | * | xor eax, eax ",msvc,1
sub_401846 proc near   | * | retn ,msvc,1
"xor eax, eax  | * | sub_401846 endp ",msvc,1
retn  | * | align 100h ,msvc,1
sub_401846 endp  | * | dd 180h dup(?) ,msvc,1
align 100h  | * | _text ends ,msvc,1
