idiom,label,count
var_2C = dword ptr -2Ch  | * | var_10 = dword ptr -10h ,data,4
var_28 = dword ptr -28h  | * | ExceptionInfo = dword ptr 4 ,data,1
"push ebx  | * | mov eax, [esp+2Ch+ExceptionInfo] ",gcc,1
"sub esp, 28h  | * | mov eax, [eax] ",gcc,1
"mov eax, [esp+2Ch+ExceptionInfo]  | * | mov eax, [eax] ",gcc,1
"mov eax, [eax]  | * | cmp eax, 0C0000091h ",gcc,1
"mov eax, [eax]  | * | ja short loc_401160 ",gcc,1
"cmp eax, 0C0000091h  | * | cmp eax, 0C000008Dh ",gcc,1
ja short loc_401160  | * | jb short loc_401177 ,gcc,1
"cmp eax, 0C000008Dh  | * | loc_40112A:  ",gcc,1
"jb short loc_401177  | * | mov ebx, 1 ",gcc,1
loc_40112A:   | * | loc_40112F:  ,gcc,1
"mov ebx, 1  | * | mov [esp+2Ch+var_28], 0  ",gcc,1
"loc_40112F:   | * | mov [esp+2Ch+var_2C], 8  ",gcc,1
"mov [esp+2Ch+var_28], 0   | * | call _signal ",gcc,3
"mov [esp+2Ch+var_2C], 8   | * | cmp eax, 1 ",gcc,1
call _signal  | * | jz loc_401240 ,gcc,1
"cmp eax, 1  | * | test eax, eax ",gcc,4
jz loc_401240  | * | jnz loc_4011F4 ,gcc,1
"test eax, eax  | * | loc_401154:  ",gcc,1
"jnz loc_4011F4  | * | xor eax, eax ",gcc,1
loc_401154:   | * | loc_401156:  ,gcc,1
"xor eax, eax  | * | add esp, 28h ",gcc,1
loc_401156:   | * | pop ebx ,gcc,1
"add esp, 28h  | * | retn 4 ",gcc,1
pop ebx  | * | align 10h ,gcc,12
retn 4  | * | loc_401160:  ,gcc,1
"align 10h  | * | cmp eax, 0C0000094h ",gcc,1
loc_401160:   | * | jz short loc_4011B2 ,gcc,1
"cmp eax, 0C0000094h  | * | cmp eax, 0C0000096h ",gcc,1
jz short loc_4011B2  | * | jz short loc_401185 ,gcc,1
"cmp eax, 0C0000096h  | * | cmp eax, 0C0000093h ",gcc,1
jz short loc_401185  | * | jnz short loc_401154 ,gcc,1
"cmp eax, 0C0000093h  | * | jmp short loc_40112A ",gcc,1
jnz short loc_401154  | * | loc_401177:  ,gcc,1
"jmp short loc_40112A  | * | cmp eax, 0C0000005h ",gcc,1
loc_401177:   | * | jz short loc_4011C0 ,gcc,1
"cmp eax, 0C0000005h  | * | cmp eax, 0C000001Dh ",gcc,1
jz short loc_4011C0  | * | jnz short loc_401154 ,gcc,1
"cmp eax, 0C000001Dh  | * | loc_401185:  ",gcc,1
"jnz short loc_401154  | * | mov [esp+2Ch+var_28], 0  ",gcc,1
"loc_401185:   | * | mov [esp+2Ch+var_2C], 4  ",gcc,1
"mov [esp+2Ch+var_2C], 4   | * | cmp eax, 1 ",gcc,1
call _signal  | * | jz short loc_401207 ,gcc,1
jz short loc_401207  | * | jz short loc_401154 ,gcc,1
"test eax, eax  | * | mov [esp+2Ch+var_2C], 4 ",gcc,1
jz short loc_401154  | * | call eax ,gcc,1
"mov [esp+2Ch+var_2C], 4  | * | mov eax, 0FFFFFFFFh ",gcc,1
call eax  | * | jmp short loc_401156 ,gcc,1
"mov eax, 0FFFFFFFFh  | * | loc_4011B2:  ",gcc,1
"jmp short loc_401156  | * | xor ebx, ebx ",gcc,1
loc_4011B2:   | * | jmp loc_40112F ,gcc,1
"xor ebx, ebx  | * | align 10h ",gcc,6
jmp loc_40112F  | * | loc_4011C0:  ,gcc,1
"align 10h  | * | mov [esp+2Ch+var_28], 0  ",gcc,1
"loc_4011C0:   | * | mov [esp+2Ch+var_2C], 0Bh  ",gcc,1
"mov [esp+2Ch+var_2C], 0Bh   | * | cmp eax, 1 ",gcc,1
call _signal  | * | jz short loc_401223 ,gcc,1
jz short loc_401223  | * | jz loc_401154 ,gcc,1
"test eax, eax  | * | mov [esp+2Ch+var_2C], 0Bh ",gcc,1
jz loc_401154  | * | call eax ,gcc,1
"mov [esp+2Ch+var_2C], 0Bh  | * | mov eax, 0FFFFFFFFh ",gcc,1
call eax  | * | jmp loc_401156 ,gcc,2
"mov eax, 0FFFFFFFFh  | * | loc_4011F4:  ",gcc,1
"jmp loc_401156  | * | mov [esp+2Ch+var_2C], 8 ",gcc,1
loc_4011F4:   | * | call eax ,gcc,1
"mov [esp+2Ch+var_2C], 8  | * | mov eax, 0FFFFFFFFh ",gcc,1
"mov eax, 0FFFFFFFFh  | * | loc_401207:  ",gcc,1
"jmp loc_401156  | * | mov [esp+2Ch+var_28], 1  ",gcc,2
"loc_401207:   | * | mov [esp+2Ch+var_2C], 4  ",gcc,1
"mov [esp+2Ch+var_28], 1   | * | call _signal ",gcc,3
"mov [esp+2Ch+var_2C], 4   | * | or eax, 0FFFFFFFFh ",gcc,1
call _signal  | * | jmp loc_401156 ,gcc,2
"or eax, 0FFFFFFFFh  | * | loc_401223:  ",gcc,1
"loc_401223:   | * | mov [esp+2Ch+var_2C], 0Bh  ",gcc,1
"mov [esp+2Ch+var_2C], 0Bh   | * | or eax, 0FFFFFFFFh ",gcc,1
"or eax, 0FFFFFFFFh  | * | align 10h ",gcc,1
jmp loc_401156  | * | loc_401240:  ,gcc,1
"align 10h  | * | mov [esp+2Ch+var_28], 1  ",gcc,2
"loc_401240:   | * | mov [esp+2Ch+var_2C], 8  ",gcc,1
"mov [esp+2Ch+var_2C], 8   | * | test ebx, ebx ",gcc,1
"call _signal  | * | mov eax, 0FFFFFFFFh ",gcc,1
"test ebx, ebx  | * | jz loc_401156 ",gcc,1
"mov eax, 0FFFFFFFFh  | * | mov [esp+2Ch+var_10], eax ",gcc,1
jz loc_401156  | * | call _fpreset ,gcc,1
"mov [esp+2Ch+var_10], eax  | * | mov eax, [esp+2Ch+var_10] ",gcc,3
call _fpreset  | * | jmp loc_401156 ,gcc,1
"mov eax, [esp+2Ch+var_10]  | * | __gnu_exception_handler@4 endp ",gcc,1
jmp loc_401156  | * | align 10h ,gcc,1
__gnu_exception_handler@4 endp  | * | align 10h ,gcc,1
align 10h  | * | public _WinMainCRTStartup ,gcc,1
align 10h  | * | _WinMainCRTStartup proc near ,gcc,1
"_WinMainCRTStartup proc near  | * | sub esp, 1Ch ",gcc,1
"sub esp, 1Ch  | * | call ds:__imp____set_app_type ",gcc,1
"mov [esp+1Ch+var_1C], 2  | * | call ___mingw_CRTStartup ",gcc,1
call ds:__imp____set_app_type  | * | _WinMainCRTStartup endp ,gcc,1
call ___mingw_CRTStartup  | * | align 10h ,gcc,1
_WinMainCRTStartup endp  | * | public _atexit ,gcc,1
align 10h  | * | _atexit proc near  ,gcc,1
"public _atexit  | * | mov eax, ds:__imp__atexit ",gcc,1
_atexit proc near   | * | jmp eax ,gcc,1
"mov eax, ds:__imp__atexit  | * | _atexit endp ",gcc,1
jmp eax  | * | align 10h ,gcc,2
_atexit endp  | * | public __onexit ,gcc,1
align 10h  | * | __onexit proc near ,gcc,1
"public __onexit  | * | mov eax, ds:__imp___onexit ",gcc,1
__onexit proc near  | * | jmp eax ,gcc,1
"mov eax, ds:__imp___onexit  | * | __onexit endp ",gcc,1
__onexit endp  | * | public ___gcc_register_frame ,gcc,1
align 10h  | * | ___gcc_register_frame proc near  ,gcc,1
"mov ecx, ___JCR_END__  | * | jz short locret_401322 ",gcc,1
"test ecx, ecx  | * | push ebp ",gcc,1
"jz short locret_401322  | * | mov ebp, esp ",gcc,1
"push ebp  | * | sub esp, 18h ",gcc,12
"mov ebp, esp  | * | mov [esp+1Ch+lpModuleName], offset ModuleName  ",gcc,1
"sub esp, 18h  | * | call _GetModuleHandleA@4  ",gcc,1
"mov [esp+1Ch+lpModuleName], offset ModuleName   | * | push edx ",gcc,1
"call _GetModuleHandleA@4   | * | test eax, eax ",gcc,1
push edx  | * | jz short loc_401324 ,gcc,1
"test eax, eax  | * | mov [esp+1Ch+lpProcName], offset ProcName  ",gcc,1
"jz short loc_401324  | * | mov [esp+1Ch+lpModuleName], eax  ",gcc,1
"mov [esp+1Ch+lpProcName], offset ProcName   | * | call _GetProcAddress@8  ",gcc,1
"mov [esp+1Ch+lpModuleName], eax   | * | sub esp, 8 ",gcc,1
call _GetProcAddress@8   | * | loc_401314:  ,gcc,1
"sub esp, 8  | * | test eax, eax ",gcc,1
loc_401314:   | * | jz short locret_401321 ,gcc,1
"test eax, eax  | * | mov [esp+1Ch+lpModuleName], offset ___JCR_END__ ",gcc,1
jz short locret_401321  | * | call eax ,gcc,1
"mov [esp+1Ch+lpModuleName], offset ___JCR_END__  | * | locret_401321:  ",gcc,1
call eax  | * | leave ,gcc,1
locret_401321:   | * | locret_401322:  ,gcc,1
leave  | * | retn ,gcc,1
locret_401322:   | * | align 4 ,gcc,1
retn  | * | loc_401324:  ,gcc,1
"align 4  | * | mov eax, 0 ",gcc,1
loc_401324:   | * | jmp short loc_401314 ,gcc,1
"mov eax, 0  | * | ___gcc_register_frame endp ",gcc,1
jmp short loc_401314  | * | align 4 ,gcc,1
___gcc_register_frame endp  | * | public ___gcc_deregister_frame ,gcc,1
align 4  | * | ___gcc_deregister_frame proc near  ,gcc,1
public ___gcc_deregister_frame  | * | push ebp ,gcc,1
"___gcc_deregister_frame proc near   | * | mov ebp, esp ",gcc,1
push ebp  | * | pop ebp ,gcc,1
"mov ebp, esp  | * | retn ",gcc,1
pop ebp  | * | ___gcc_deregister_frame endp ,gcc,1
retn  | * | align 4 ,gcc,125
___gcc_deregister_frame endp  | * | public _main ,gcc,1
align 4  | * | _main proc near  ,gcc,1
lpuexcpt = dword ptr -98h  | * | var_8E = byte ptr -8Eh ,data,1
var_94 = dword ptr -94h  | * | var_8D = byte ptr -8Dh ,data,1
var_8E = byte ptr -8Eh  | * | fctx = SjLj_Function_Context ptr -8Ch ,data,1
var_8D = byte ptr -8Dh  | * | var_58 = byte ptr -58h ,data,1
fctx = SjLj_Function_Context ptr -8Ch  | * | var_40 = dword ptr -40h ,data,1
var_58 = byte ptr -58h  | * | var_3C = dword ptr -3Ch ,data,1
var_40 = dword ptr -40h  | * | var_38 = dword ptr -38h ,data,3
var_3C = dword ptr -3Ch  | * | var_34 = dword ptr -34h ,data,12
var_38 = dword ptr -38h  | * | var_30 = dword ptr -30h ,data,3
var_34 = dword ptr -34h  | * | var_2C = dword ptr -2Ch ,data,3
var_30 = dword ptr -30h  | * | var_28 = dword ptr -28h ,data,4
var_2C = dword ptr -2Ch  | * | var_24 = dword ptr -24h ,data,27
var_28 = dword ptr -28h  | * | var_20 = dword ptr -20h ,data,9
var_24 = dword ptr -24h  | * | var_1C = dword ptr -1Ch ,data,3
var_20 = dword ptr -20h  | * | var_18 = byte ptr -18h ,data,4
var_1C = dword ptr -1Ch  | * | argc = dword ptr 8 ,data,1
var_18 = byte ptr -18h  | * | argv = dword ptr 0Ch ,data,1
argc = dword ptr 8  | * | envp = dword ptr 10h ,data,1
"lea ecx, [esp+4]  | * | push dword ptr [ecx-4] ",gcc,1
"and esp, 0FFFFFFF0h  | * | push ebp ",gcc,1
"push dword ptr [ecx-4]  | * | mov ebp, esp ",gcc,1
push ebp  | * | push edi ,gcc,8
"mov ebp, esp  | * | push esi ",gcc,7
push edi  | * | push ebx ,gcc,89
push esi  | * | push ecx ,gcc,2
"push ebx  | * | sub esp, 98h ",gcc,1
"push ecx  | * | mov [ebp+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"sub esp, 98h  | * | mov [ebp+fctx.lsda], offset dword_412224 ",gcc,1
"mov [ebp+fctx.personality], offset ___gxx_personality_sj0  | * | lea eax, [ebp+fctx.jbuf] ",gcc,5
"mov [ebp+fctx.lsda], offset dword_412224  | * | lea edx, [ebp+var_18] ",gcc,1
"lea eax, [ebp+fctx.jbuf]  | * | mov [eax], edx ",gcc,5
"lea edx, [ebp+var_18]  | * | mov edx, offset loc_401605 ",gcc,1
"mov [eax], edx  | * | mov [eax+4], edx ",gcc,5
"mov edx, offset loc_401605  | * | mov [eax+8], esp ",gcc,1
"mov [eax+4], edx  | * | lea eax, [ebp+fctx] ",gcc,5
"mov [eax+8], esp  | * | mov [esp], eax  ",gcc,5
"lea eax, [ebp+fctx]  | * | call __Unwind_SjLj_Register ",gcc,5
"mov [esp], eax   | * | call ___main ",gcc,1
"call __Unwind_SjLj_Register  | * | lea eax, [ebp+var_3C] ",gcc,1
"call ___main  | * | mov [esp+4], eax ",gcc,1
"lea eax, [ebp+var_3C]  | * | mov dword ptr [esp], offset aD  ",gcc,1
"mov [esp+4], eax  | * | call _scanf ",gcc,1
"mov dword ptr [esp], offset aD   | * | mov [ebp+var_1C], 1 ",gcc,1
call _scanf  | * | jmp loc_4015AD ,gcc,1
"mov [ebp+var_1C], 1  | * | loc_40139E:  ",gcc,1
"jmp loc_4015AD  | * | mov dword ptr [esp+8], offset _b ",gcc,1
"loc_40139E:   | * | mov dword ptr [esp+4], offset _a ",gcc,1
"mov dword ptr [esp+8], offset _b  | * | mov dword ptr [esp], offset aDD  ",gcc,1
"mov dword ptr [esp+4], offset _a  | * | call _scanf ",gcc,1
"mov dword ptr [esp], offset aDD   | * | mov [ebp+var_28], 0 ",gcc,1
"call _scanf  | * | mov eax, ds:_a ",gcc,1
"mov [ebp+var_28], 0  | * | mov [ebp+var_40], eax ",gcc,1
"mov eax, ds:_a  | * | jmp short loc_4013EB ",gcc,1
"mov [ebp+var_40], eax  | * | loc_4013CB:  ",gcc,1
jmp short loc_4013EB  | * | inc [ebp+var_28] ,gcc,1
"loc_4013CB:   | * | mov ecx, [ebp+var_40] ",gcc,1
"inc [ebp+var_28]  | * | mov edx, 66666667h ",gcc,1
"mov ecx, [ebp+var_40]  | * | mov eax, ecx ",gcc,3
"mov edx, 66666667h  | * | imul edx ",gcc,3
"mov eax, ecx  | * | sar edx, 2 ",gcc,3
"imul edx  | * | mov eax, ecx ",gcc,3
"sar edx, 2  | * | sar eax, 1Fh ",gcc,3
"mov eax, ecx  | * | mov ecx, edx ",gcc,1
"sar eax, 1Fh  | * | sub ecx, eax ",gcc,1
"mov ecx, edx  | * | mov eax, ecx ",gcc,1
"sub ecx, eax  | * | mov [ebp+var_40], eax ",gcc,1
"mov eax, ecx  | * | loc_4013EB:  ",gcc,1
"mov [ebp+var_40], eax  | * | mov eax, [ebp+var_40] ",gcc,1
"loc_4013EB:   | * | test eax, eax ",gcc,1
"mov eax, [ebp+var_40]  | * | setnle al ",gcc,1
"test eax, eax  | * | test al, al ",gcc,1
setnle al  | * | jnz short loc_4013CB ,gcc,1
"test al, al  | * | mov [ebp+var_2C], 1 ",gcc,1
"jnz short loc_4013CB  | * | mov [ebp+var_24], 1 ",gcc,1
"mov [ebp+var_2C], 1  | * | jmp short loc_401419 ",gcc,1
"mov [ebp+var_24], 1  | * | loc_401407:  ",gcc,1
"jmp short loc_401419  | * | mov edx, [ebp+var_2C] ",gcc,1
"loc_401407:   | * | mov eax, edx ",gcc,1
"mov edx, [ebp+var_2C]  | * | shl eax, 2 ",gcc,1
"mov eax, edx  | * | add eax, edx ",gcc,3
"shl eax, 2  | * | shl eax, 1 ",gcc,2
"add eax, edx  | * | mov [ebp+var_2C], eax ",gcc,1
"shl eax, 1  | * | inc [ebp+var_24] ",gcc,1
"mov [ebp+var_2C], eax  | * | loc_401419:  ",gcc,1
"inc [ebp+var_24]  | * | mov eax, [ebp+var_24] ",gcc,2
"loc_401419:   | * | cmp eax, [ebp+var_28] ",gcc,1
"mov eax, [ebp+var_24]  | * | setl al ",gcc,2
"cmp eax, [ebp+var_28]  | * | test al, al ",gcc,2
setl al  | * | jnz short loc_401407 ,gcc,1
"test al, al  | * | mov [ebp+var_30], 0 ",gcc,1
"jnz short loc_401407  | * | mov eax, ds:_a ",gcc,1
"mov [ebp+var_30], 0  | * | mov [ebp+var_20], eax ",gcc,1
"mov eax, ds:_a  | * | jmp loc_40157D ",gcc,1
"mov [ebp+var_20], eax  | * | loc_40143A:  ",gcc,1
"jmp loc_40157D  | * | mov eax, [ebp+var_20] ",gcc,1
"loc_40143A:   | * | mov [ebp+var_40], eax ",gcc,1
"mov eax, [ebp+var_20]  | * | lea eax, [ebp+var_58] ",gcc,1
"mov [ebp+var_40], eax  | * | mov [ebp+fctx.call_site], 1 ",gcc,1
"lea eax, [ebp+var_58]  | * | mov ecx, eax ",gcc,4
"mov [ebp+fctx.call_site], 1  | * | call __ZNSt3setIiSt4lessIiESaIiEEC1Ev  ",gcc,1
"mov ecx, eax  | * | mov [ebp+var_24], 0 ",gcc,1
call __ZNSt3setIiSt4lessIiESaIiEEC1Ev   | * | jmp loc_401555 ,gcc,1
"mov [ebp+var_24], 0  | * | loc_401460:  ",gcc,1
"jmp loc_401555  | * | mov ecx, [ebp+var_40] ",gcc,1
"loc_401460:   | * | mov edx, 66666667h ",gcc,1
"mov eax, ecx  | * | mov ebx, edx ",gcc,1
"sar eax, 1Fh  | * | sub ebx, eax ",gcc,1
"mov ebx, edx  | * | mov ecx, [ebp+var_40] ",gcc,1
"sub ebx, eax  | * | mov edx, 66666667h ",gcc,1
"mov eax, ecx  | * | sub edx, eax ",gcc,1
"sar eax, 1Fh  | * | mov eax, edx ",gcc,1
"sub edx, eax  | * | shl eax, 2 ",gcc,1
"add eax, edx  | * | mov edx, ecx ",gcc,1
"shl eax, 1  | * | sub edx, eax ",gcc,1
"mov edx, ecx  | * | mov eax, edx ",gcc,1
"sub edx, eax  | * | imul eax, [ebp+var_2C] ",gcc,1
"mov eax, edx  | * | add eax, ebx ",gcc,1
"imul eax, [ebp+var_2C]  | * | mov [ebp+var_40], eax ",gcc,1
"add eax, ebx  | * | mov [ebp+var_8D], 0 ",gcc,1
"mov [ebp+var_40], eax  | * | mov [ebp+var_8E], 0 ",gcc,1
"mov [ebp+var_8D], 0  | * | mov eax, [ebp+var_40] ",gcc,1
"mov [ebp+var_8E], 0  | * | cmp [ebp+var_20], eax ",gcc,1
"mov eax, [ebp+var_40]  | * | jge short loc_40151E ",gcc,1
"cmp [ebp+var_20], eax  | * | mov edx, [ebp+var_40] ",gcc,1
"jge short loc_40151E  | * | mov eax, ds:_b ",gcc,1
"mov edx, [ebp+var_40]  | * | cmp edx, eax ",gcc,1
"mov eax, ds:_b  | * | jg short loc_40151E ",gcc,1
"cmp edx, eax  | * | lea eax, [ebp+var_58] ",gcc,1
"jg short loc_40151E  | * | mov [ebp+fctx.call_site], 2 ",gcc,1
"mov [ebp+fctx.call_site], 2  | * | call __ZNKSt3setIiSt4lessIiESaIiEE3endEv  ",gcc,1
"mov ecx, eax  | * | mov [ebp+var_38], eax ",gcc,1
"call __ZNKSt3setIiSt4lessIiESaIiEE3endEv   | * | mov [ebp+var_8D], 1 ",gcc,1
"mov [ebp+var_38], eax  | * | lea eax, [ebp+var_58] ",gcc,1
"mov [ebp+var_8D], 1  | * | lea edx, [ebp+var_40] ",gcc,1
"lea eax, [ebp+var_58]  | * | mov [esp], edx ",gcc,2
"lea edx, [ebp+var_40]  | * | mov ecx, eax ",gcc,1
"mov [esp], edx  | * | call __ZNSt3setIiSt4lessIiESaIiEE4findERKi  ",gcc,1
"mov ecx, eax  | * | sub esp, 4 ",gcc,24
"call __ZNSt3setIiSt4lessIiESaIiEE4findERKi   | * | mov [ebp+var_34], eax ",gcc,1
"sub esp, 4  | * | mov [ebp+var_8E], 1 ",gcc,1
"mov [ebp+var_34], eax  | * | lea eax, [ebp+var_34] ",gcc,1
"mov [ebp+var_8E], 1  | * | lea edx, [ebp+var_38] ",gcc,1
"lea eax, [ebp+var_34]  | * | mov [esp], edx ",gcc,1
"lea edx, [ebp+var_38]  | * | mov ecx, eax ",gcc,1
"mov [esp], edx  | * | call __ZNKSt23_Rb_tree_const_iteratorIiEeqERKS0_  ",gcc,1
"call __ZNKSt23_Rb_tree_const_iteratorIiEeqERKS0_   | * | test al, al ",gcc,1
"sub esp, 4  | * | jz short loc_40151E ",gcc,1
"test al, al  | * | mov al, 1 ",gcc,3
jz short loc_40151E  | * | jmp short loc_401520 ,gcc,1
"mov al, 1  | * | loc_40151E:  ",gcc,1
"jmp short loc_401520  | * | mov al, 0 ",gcc,1
loc_40151E:   | * | loc_401520:  ,gcc,1
"mov al, 0  | * | cmp [ebp+var_8E], 0 ",gcc,1
"loc_401520:   | * | cmp [ebp+var_8D], 0 ",gcc,1
"cmp [ebp+var_8E], 0  | * | test al, al ",gcc,1
"cmp [ebp+var_8D], 0  | * | jz short loc_401552 ",gcc,1
"test al, al  | * | lea eax, [ebp+var_58] ",gcc,2
"jz short loc_401552  | * | lea edx, [ebp+var_40] ",gcc,1
"lea edx, [ebp+var_40]  | * | mov [ebp+fctx.call_site], 3 ",gcc,1
"mov [esp], edx  | * | mov ecx, eax ",gcc,4
"mov [ebp+fctx.call_site], 3  | * | call __ZNSt3setIiSt4lessIiESaIiEE6insertERKi  ",gcc,1
call __ZNSt3setIiSt4lessIiESaIiEE6insertERKi   | * | inc [ebp+var_30] ,gcc,1
"sub esp, 4  | * | loc_401552:  ",gcc,1
inc [ebp+var_30]  | * | inc [ebp+var_24] ,gcc,1
loc_401552:   | * | loc_401555:  ,gcc,1
"loc_401555:   | * | cmp eax, [ebp+var_28] ",gcc,1
setl al  | * | jnz loc_401460 ,gcc,1
"jnz loc_401460  | * | mov [ebp+fctx.call_site], 1 ",gcc,1
"mov [ebp+fctx.call_site], 1  | * | call __ZNSt3setIiSt4lessIiESaIiEED1Ev  ",gcc,1
"mov ecx, eax  | * | inc [ebp+var_20] ",gcc,1
call __ZNSt3setIiSt4lessIiESaIiEED1Ev   | * | loc_40157D:  ,gcc,1
"inc [ebp+var_20]  | * | mov eax, ds:_b ",gcc,1
"loc_40157D:   | * | cmp [ebp+var_20], eax ",gcc,1
"mov eax, ds:_b  | * | setle al ",gcc,1
"cmp [ebp+var_20], eax  | * | test al, al ",gcc,1
setle al  | * | jnz loc_40143A ,gcc,1
"test al, al  | * | mov eax, [ebp+var_30] ",gcc,1
"jnz loc_40143A  | * | mov [esp+8], eax ",gcc,1
"mov eax, [ebp+var_30]  | * | mov eax, [ebp+var_1C] ",gcc,1
"mov [esp+8], eax  | * | mov [esp+4], eax ",gcc,1
"mov eax, [ebp+var_1C]  | * | mov dword ptr [esp], offset aCaseDD  ",gcc,1
"mov [esp+4], eax  | * | call _printf ",gcc,1
"mov dword ptr [esp], offset aCaseDD   | * | inc [ebp+var_1C] ",gcc,1
call _printf  | * | loc_4015AD:  ,gcc,1
"inc [ebp+var_1C]  | * | mov eax, [ebp+var_3C] ",gcc,1
"loc_4015AD:   | * | cmp [ebp+var_1C], eax ",gcc,1
"mov eax, [ebp+var_3C]  | * | setle al ",gcc,1
"cmp [ebp+var_1C], eax  | * | test al, al ",gcc,1
setle al  | * | jnz loc_40139E ,gcc,1
"test al, al  | * | mov eax, 0 ",gcc,1
"jnz loc_40139E  | * | mov [ebp+var_94], eax ",gcc,1
"mov eax, 0  | * | jmp short loc_401638 ",gcc,1
"mov [ebp+var_94], eax  | * | loc_4015CB:  ",gcc,1
"jmp short loc_401638  | * | mov eax, edx ",gcc,1
"loc_4015CB:   | * | cmp [ebp+var_8E], 0 ",gcc,1
"mov eax, edx  | * | cmp [ebp+var_8D], 0 ",gcc,1
"cmp [ebp+var_8E], 0  | * | mov [ebp+lpuexcpt], eax ",gcc,1
"cmp [ebp+var_8D], 0  | * | jmp short loc_4015E9 ",gcc,1
"mov [ebp+lpuexcpt], eax  | * | loc_4015E3:  ",gcc,1
"jmp short loc_4015E9  | * | mov [ebp+lpuexcpt], edx ",gcc,1
loc_4015E3:   | * | loc_4015E9:  ,gcc,1
"mov [ebp+lpuexcpt], edx  | * | lea eax, [ebp+var_58] ",gcc,1
"loc_4015E9:   | * | mov [ebp+fctx.call_site], 0 ",gcc,1
"mov [ebp+fctx.call_site], 0  | * | call __ZNSt3setIiSt4lessIiESaIiEED1Ev  ",gcc,1
"mov ecx, eax  | * | mov eax, [ebp+lpuexcpt] ",gcc,2
call __ZNSt3setIiSt4lessIiESaIiEED1Ev   | * | jmp short loc_401626 ,gcc,1
"mov eax, [ebp+lpuexcpt]  | * | loc_401605:  ",gcc,1
"jmp short loc_401626  | * | lea ebp, [ebp+18h] ",gcc,1
"loc_401605:   | * | mov edx, [ebp+fctx.data] ",gcc,1
"lea ebp, [ebp+18h]  | * | mov eax, [ebp+fctx.call_site] ",gcc,3
"mov edx, [ebp+fctx.data]  | * | cmp eax, 1 ",gcc,2
"mov eax, [ebp+fctx.call_site]  | * | jz short loc_4015CB ",gcc,1
"cmp eax, 1  | * | cmp eax, 2 ",gcc,1
jz short loc_4015CB  | * | jz short loc_4015E3 ,gcc,1
"cmp eax, 2  | * | test eax, eax ",gcc,1
jz short loc_4015E3  | * | jz short loc_401624 ,gcc,1
"test eax, eax  | * | ud2 ",gcc,1
jz short loc_401624  | * | loc_401624:  ,gcc,1
"ud2  | * | mov eax, edx ",gcc,3
loc_401624:   | * | loc_401626:  ,gcc,1
"mov eax, edx  | * | mov [esp], eax  ",gcc,3
"loc_401626:   | * | mov [ebp+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp], eax   | * | call __Unwind_SjLj_Resume ",gcc,5
"mov [ebp+fctx.call_site], 0FFFFFFFFh  | * | loc_401638:  ",gcc,1
"call __Unwind_SjLj_Resume  | * | lea eax, [ebp+fctx] ",gcc,5
"loc_401638:   | * | mov [esp], eax  ",gcc,1
"lea eax, [ebp+fctx]  | * | call __Unwind_SjLj_Unregister ",gcc,5
"mov [esp], eax   | * | mov eax, [ebp+var_94] ",gcc,1
"call __Unwind_SjLj_Unregister  | * | lea esp, [ebp-10h] ",gcc,1
"mov eax, [ebp+var_94]  | * | pop ecx ",gcc,1
"lea esp, [ebp-10h]  | * | pop ebx ",gcc,1
pop ecx  | * | pop esi ,gcc,3
pop ebx  | * | pop edi ,gcc,133
pop esi  | * | pop ebp ,gcc,99
"pop edi  | * | lea esp, [ecx-4] ",gcc,1
pop ebp  | * | retn ,gcc,1
"lea esp, [ecx-4]  | * | _main endp ",gcc,1
retn  | * | __ZL12read_sleb128PKhPl proc near  ,gcc,1
_main endp  | * | push edi ,gcc,1
__ZL12read_sleb128PKhPl proc near   | * | push esi ,gcc,1
"push esi  | * | mov edi, edx ",gcc,1
"push ebx  | * | xor esi, esi ",gcc,1
"mov edi, edx  | * | xor ecx, ecx ",gcc,1
"xor esi, esi  | * | lea esi, [esi+0] ",gcc,1
"xor ecx, ecx  | * | loc_401664:  ",gcc,1
"lea esi, [esi+0]  | * | mov dl, [eax] ",gcc,1
loc_401664:   | * | inc eax ,gcc,1
"mov dl, [eax]  | * | mov ebx, edx ",gcc,1
"inc eax  | * | and ebx, 7Fh ",gcc,1
"mov ebx, edx  | * | shl ebx, cl ",gcc,1
"and ebx, 7Fh  | * | or esi, ebx ",gcc,1
"shl ebx, cl  | * | add ecx, 7 ",gcc,2
"or esi, ebx  | * | test dl, dl ",gcc,1
"add ecx, 7  | * | js short loc_401664 ",gcc,1
"test dl, dl  | * | cmp ecx, 1Fh ",gcc,1
js short loc_401664  | * | ja short loc_40168A ,gcc,1
"cmp ecx, 1Fh  | * | and edx, 40h ",gcc,1
ja short loc_40168A  | * | jz short loc_40168A ,gcc,1
"and edx, 40h  | * | mov edx, 0FFFFFFFFh ",gcc,1
"jz short loc_40168A  | * | shl edx, cl ",gcc,1
"mov edx, 0FFFFFFFFh  | * | or esi, edx ",gcc,1
"shl edx, cl  | * | loc_40168A:  ",gcc,1
"or esi, edx  | * | mov [edi], esi ",gcc,1
loc_40168A:   | * | pop ebx ,gcc,1
"mov [edi], esi  | * | pop esi ",gcc,1
pop esi  | * | retn ,gcc,29
pop edi  | * | __ZL12read_sleb128PKhPl endp ,gcc,1
retn  | * | __ZL16get_adjusted_ptrPKSt9type_infoS1_PPv proc near ,gcc,1
var_28 = dword ptr -28h  | * | var_10 = dword ptr -10h ,data,3
"push esi  | * | sub esp, 20h ",gcc,11
"push ebx  | * | mov esi, eax ",gcc,7
"sub esp, 20h  | * | mov ebx, edx ",gcc,1
"mov esi, eax  | * | mov edi, ecx ",gcc,1
"mov ebx, edx  | * | mov eax, [ecx] ",gcc,1
"mov edi, ecx  | * | mov [esp+2Ch+var_10], eax ",gcc,1
"mov eax, [ecx]  | * | mov eax, [edx] ",gcc,1
"mov [esp+2Ch+var_10], eax  | * | mov ecx, edx ",gcc,1
"mov eax, [edx]  | * | call dword ptr [eax+8] ",gcc,1
"mov ecx, edx  | * | test al, al ",gcc,1
call dword ptr [eax+8]  | * | jz short loc_4016B7 ,gcc,1
"test al, al  | * | mov eax, [esp+2Ch+var_10] ",gcc,2
"jz short loc_4016B7  | * | mov eax, [eax] ",gcc,1
"mov eax, [esp+2Ch+var_10]  | * | mov [esp+2Ch+var_10], eax ",gcc,1
"mov eax, [eax]  | * | loc_4016B7:  ",gcc,1
"mov [esp+2Ch+var_10], eax  | * | mov eax, [esi] ",gcc,1
"loc_4016B7:   | * | mov [esp+2Ch+var_24], 1 ",gcc,1
"mov eax, [esi]  | * | lea edx, [esp+2Ch+var_10] ",gcc,1
"mov [esp+2Ch+var_24], 1  | * | mov [esp+2Ch+var_28], edx ",gcc,1
"lea edx, [esp+2Ch+var_10]  | * | mov [esp+2Ch+var_2C], ebx ",gcc,1
"mov [esp+2Ch+var_28], edx  | * | mov ecx, esi ",gcc,1
"mov [esp+2Ch+var_2C], ebx  | * | call dword ptr [eax+10h] ",gcc,1
"mov ecx, esi  | * | sub esp, 0Ch ",gcc,2
"call dword ptr [eax+10h]  | * | test al, al ",gcc,1
"sub esp, 0Ch  | * | jz short loc_4016E8 ",gcc,1
"jz short loc_4016E8  | * | mov [edi], eax ",gcc,1
"mov eax, [esp+2Ch+var_10]  | * | mov al, 1 ",gcc,1
"mov [edi], eax  | * | add esp, 20h ",gcc,1
"mov al, 1  | * | pop ebx ",gcc,6
"add esp, 20h  | * | pop esi ",gcc,11
pop edi  | * | align 4 ,gcc,15
retn  | * | loc_4016E8:  ,gcc,1
"align 4  | * | xor eax, eax ",gcc,7
"loc_4016E8:   | * | add esp, 20h ",gcc,1
"xor eax, eax  | * | pop ebx ",gcc,22
pop edi  | * | __ZL16get_adjusted_ptrPKSt9type_infoS1_PPv endp ,gcc,1
__ZL16get_adjusted_ptrPKSt9type_infoS1_PPv endp  | * | __ZL21base_of_encoded_valuehP15_Unwind_Context proc near ,gcc,1
"__ZL21base_of_encoded_valuehP15_Unwind_Context proc near  | * | sub esp, 1Ch ",gcc,1
"sub esp, 1Ch  | * | jz short loc_40171C ",gcc,1
"cmp al, 0FFh  | * | and eax, 70h ",gcc,1
"jz short loc_40171C  | * | cmp al, 20h  ",gcc,1
"and eax, 70h  | * | jz short loc_401738 ",gcc,1
"cmp al, 20h   | * | jbe short loc_401718 ",gcc,1
"jz short loc_401738  | * | cmp al, 40h  ",gcc,1
jbe short loc_401718  | * | jz short loc_40172C ,gcc,1
"cmp al, 40h   | * | cmp al, 50h  ",gcc,1
jz short loc_40172C  | * | jz short loc_40171C ,gcc,1
"cmp al, 50h   | * | cmp al, 30h  ",gcc,1
jz short loc_40171C  | * | jz short loc_401744 ,gcc,1
"cmp al, 30h   | * | loc_401710:  ",gcc,1
jz short loc_401744  | * | call _abort ,gcc,1
loc_401710:   | * | align 4 ,gcc,1
call _abort  | * | loc_401718:  ,gcc,1
"align 4  | * | test al, al ",gcc,1
loc_401718:   | * | jnz short loc_401724 ,gcc,1
"test al, al  | * | loc_40171C:  ",gcc,1
"jnz short loc_401724  | * | xor eax, eax ",gcc,1
"loc_40171C:   | * | add esp, 1Ch ",gcc,1
"xor eax, eax  | * | retn ",gcc,5
"add esp, 1Ch  | * | align 4 ",gcc,3
retn  | * | loc_401724:  ,gcc,1
"align 4  | * | cmp al, 10h ",gcc,1
loc_401724:   | * | jnz short loc_401710 ,gcc,1
"cmp al, 10h  | * | jmp short loc_40171C ",gcc,1
jnz short loc_401710  | * | align 4 ,gcc,1
jmp short loc_40171C  | * | loc_40172C:  ,gcc,1
"align 4  | * | mov [esp+1Ch+context], edx  ",gcc,1
loc_40172C:   | * | call __Unwind_GetRegionStart ,gcc,1
"mov [esp+1Ch+context], edx   | * | add esp, 1Ch ",gcc,3
call __Unwind_GetRegionStart  | * | retn ,gcc,1
"add esp, 1Ch  | * | loc_401738:  ",gcc,1
"retn  | * | mov [esp+1Ch+context], edx  ",gcc,2
loc_401738:   | * | call __Unwind_GetTextRelBase ,gcc,1
call __Unwind_GetTextRelBase  | * | retn ,gcc,1
"add esp, 1Ch  | * | loc_401744:  ",gcc,1
loc_401744:   | * | call __Unwind_GetDataRelBase ,gcc,1
call __Unwind_GetDataRelBase  | * | retn ,gcc,1
"add esp, 1Ch  | * | __ZL21base_of_encoded_valuehP15_Unwind_Context endp ",gcc,1
retn  | * | __ZL28read_encoded_value_with_basehjPKhPj proc near ,gcc,1
var_30 = dword ptr -30h  | * | arg_0 = byte ptr 4 ,data,1
push ebp  | * | push esi ,gcc,54
"push esi  | * | sub esp, 2Ch ",gcc,24
"push ebx  | * | mov esi, ecx ",gcc,11
"sub esp, 2Ch  | * | mov bl, al ",gcc,1
"mov esi, ecx  | * | cmp al, 50h  ",gcc,1
"mov bl, al  | * | jz loc_40180C ",gcc,1
"cmp al, 50h   | * | and eax, 0Fh ",gcc,1
"jz loc_40180C  | * | cmp al, 0Ch  ",gcc,1
"and eax, 0Fh  | * | jbe short loc_401770 ",gcc,1
"cmp al, 0Ch   | * | def_401775:  ",gcc,1
jbe short loc_401770  | * | call _abort  ,gcc,1
def_401775:   | * | align 10h ,gcc,1
call _abort   | * | loc_401770:  ,gcc,1
"align 10h  | * | mov edi, edx ",gcc,1
"loc_401770:   | * | movzx eax, al ",gcc,1
"mov edi, edx  | * | jmp ds:jpt_401775[eax*4]  ",gcc,1
"movzx eax, al  | * | loc_40177C:  ",gcc,1
"jmp ds:jpt_401775[eax*4]   | * | mov edx, [ecx]  ",gcc,1
"loc_40177C:   | * | lea eax, [ecx+4] ",gcc,1
"mov edx, [ecx]   | * | loc_401781:  ",gcc,1
"lea eax, [ecx+4]  | * | test edx, edx ",gcc,1
loc_401781:   | * | jz short loc_40179B ,gcc,1
"test edx, edx  | * | mov cl, bl ",gcc,1
"jz short loc_40179B  | * | and ecx, 70h ",gcc,1
"mov cl, bl  | * | cmp cl, 10h ",gcc,1
"and ecx, 70h  | * | jz loc_401828 ",gcc,1
"cmp cl, 10h  | * | loc_401793:  ",gcc,1
"jz loc_401828  | * | add edx, edi ",gcc,1
"loc_401793:   | * | test bl, bl ",gcc,1
"add edx, edi  | * | jns short loc_40179B ",gcc,1
"test bl, bl  | * | mov edx, [edx] ",gcc,1
jns short loc_40179B  | * | loc_40179B:  ,gcc,1
"mov edx, [edx]  | * | mov ecx, dword ptr [esp+3Ch+arg_0] ",gcc,1
"loc_40179B:   | * | mov [ecx], edx ",gcc,1
"mov ecx, dword ptr [esp+3Ch+arg_0]  | * | add esp, 2Ch ",gcc,2
"mov [ecx], edx  | * | pop ebx ",gcc,2
"add esp, 2Ch  | * | pop esi ",gcc,47
pop edi  | * | retn ,gcc,60
pop ebp  | * | align 4 ,gcc,51
retn  | * | loc_4017AC:  ,gcc,1
"align 4  | * | mov edx, [ecx]  ",gcc,1
"loc_4017AC:   | * | lea eax, [ecx+8] ",gcc,1
"mov edx, [ecx]   | * | jmp short loc_401781 ",gcc,1
"lea eax, [ecx+8]  | * | align 4 ",gcc,1
jmp short loc_401781  | * | loc_4017B4:  ,gcc,1
"align 4  | * | lea edx, [esp+3Ch+var_20]  ",gcc,1
"loc_4017B4:   | * | mov eax, ecx ",gcc,1
"lea edx, [esp+3Ch+var_20]   | * | call __ZL12read_sleb128PKhPl  ",gcc,1
"mov eax, ecx  | * | mov edx, [esp+3Ch+var_20] ",gcc,1
call __ZL12read_sleb128PKhPl   | * | jmp short loc_401781 ,gcc,1
"mov edx, [esp+3Ch+var_20]  | * | align 4 ",gcc,1
jmp short loc_401781  | * | loc_4017C8:  ,gcc,1
"align 4  | * | mov eax, ecx  ",gcc,1
"loc_4017C8:   | * | xor edx, edx ",gcc,1
"mov eax, ecx   | * | xor ecx, ecx ",gcc,1
"xor edx, edx  | * | mov ebp, ebx ",gcc,1
"xor ecx, ecx  | * | mov [esp+3Ch+var_30], esi ",gcc,1
"mov ebp, ebx  | * | mov esi, edx ",gcc,1
"mov [esp+3Ch+var_30], esi  | * | xchg ax, ax ",gcc,1
"mov esi, edx  | * | loc_4017D8:  ",gcc,1
"xchg ax, ax  | * | mov bl, [eax] ",gcc,2
loc_4017D8:   | * | inc eax ,gcc,1
"mov bl, [eax]  | * | mov edx, ebx ",gcc,5
"inc eax  | * | and edx, 7Fh ",gcc,5
"mov edx, ebx  | * | shl edx, cl ",gcc,5
"and edx, 7Fh  | * | or esi, edx ",gcc,1
"shl edx, cl  | * | add ecx, 7 ",gcc,5
"or esi, edx  | * | test bl, bl ",gcc,1
"add ecx, 7  | * | js short loc_4017D8 ",gcc,1
"test bl, bl  | * | mov edx, esi ",gcc,1
"js short loc_4017D8  | * | mov ebx, ebp ",gcc,1
"mov edx, esi  | * | mov esi, [esp+3Ch+var_30] ",gcc,1
"mov ebx, ebp  | * | jmp short loc_401781 ",gcc,1
"mov esi, [esp+3Ch+var_30]  | * | align 4 ",gcc,1
jmp short loc_401781  | * | loc_4017F8:  ,gcc,1
"align 4  | * | movsx edx, word ptr [ecx]  ",gcc,1
"loc_4017F8:   | * | lea eax, [ecx+2] ",gcc,1
"movsx edx, word ptr [ecx]   | * | jmp short loc_401781 ",gcc,1
"lea eax, [ecx+2]  | * | loc_401800:  ",gcc,1
"jmp short loc_401781  | * | movzx edx, word ptr [ecx]  ",gcc,1
"loc_401800:   | * | lea eax, [ecx+2] ",gcc,1
"movzx edx, word ptr [ecx]   | * | jmp loc_401781 ",gcc,1
"lea eax, [ecx+2]  | * | align 4 ",gcc,1
jmp loc_401781  | * | loc_40180C:  ,gcc,1
"align 4  | * | lea eax, [ecx+3] ",gcc,1
"loc_40180C:   | * | and eax, 0FFFFFFFCh ",gcc,1
"lea eax, [ecx+3]  | * | mov edx, [eax] ",gcc,1
"and eax, 0FFFFFFFCh  | * | add eax, 4 ",gcc,1
"mov edx, [eax]  | * | mov ecx, dword ptr [esp+3Ch+arg_0] ",gcc,1
"add eax, 4  | * | mov [ecx], edx ",gcc,1
retn  | * | loc_401828:  ,gcc,1
"align 4  | * | mov edi, esi ",gcc,2
loc_401828:   | * | jmp loc_401793 ,gcc,1
"mov edi, esi  | * | __ZL28read_encoded_value_with_basehjPKhPj endp ",gcc,1
jmp loc_401793  | * | align 10h ,gcc,1
__ZL28read_encoded_value_with_basehjPKhPj endp  | * | __ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info proc near ,gcc,1
"push ebx  | * | mov edi, eax ",gcc,2
"sub esp, 2Ch  | * | mov esi, edx ",gcc,2
"mov edi, eax  | * | mov [esp+3Ch+var_20], ecx ",gcc,1
"mov esi, edx  | * | test eax, eax ",gcc,1
"mov [esp+3Ch+var_20], ecx  | * | jz loc_40190C ",gcc,1
"test eax, eax  | * | mov [esp+3Ch+context], eax  ",gcc,1
jz loc_40190C  | * | call __Unwind_GetRegionStart ,gcc,1
"mov [esp+3Ch+context], eax   | * | loc_40184F:  ",gcc,1
"call __Unwind_GetRegionStart  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"loc_40184F:   | * | mov [ecx], eax ",gcc,1
"mov ecx, [esp+3Ch+var_20]  | * | mov dl, [esi] ",gcc,2
"mov [ecx], eax  | * | inc esi ",gcc,1
"mov dl, [esi]  | * | cmp dl, 0FFh ",gcc,1
inc esi  | * | jz loc_4018E8 ,gcc,1
"cmp dl, 0FFh  | * | movzx ebp, dl ",gcc,1
"jz loc_4018E8  | * | mov edx, edi ",gcc,1
"movzx ebp, dl  | * | mov eax, ebp ",gcc,1
"mov edx, edi  | * | call __ZL21base_of_encoded_valuehP15_Unwind_Context  ",gcc,1
"mov eax, ebp  | * | mov edx, [esp+3Ch+var_20] ",gcc,1
"call __ZL21base_of_encoded_valuehP15_Unwind_Context   | * | add edx, 4 ",gcc,1
"mov edx, [esp+3Ch+var_20]  | * | mov [esp+3Ch+context], edx  ",gcc,1
"add edx, 4  | * | mov ecx, esi ",gcc,1
"mov [esp+3Ch+context], edx   | * | mov edx, eax ",gcc,1
"mov ecx, esi  | * | mov eax, ebp ",gcc,2
"mov edx, eax  | * | call __ZL28read_encoded_value_with_basehjPKhPj  ",gcc,1
"mov eax, ebp  | * | mov esi, eax ",gcc,1
"call __ZL28read_encoded_value_with_basehjPKhPj   | * | mov dl, [esi] ",gcc,1
"mov esi, eax  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"mov dl, [esi]  | * | mov [ecx+14h], dl ",gcc,2
"mov ecx, [esp+3Ch+var_20]  | * | lea eax, [esi+1] ",gcc,2
"mov [ecx+14h], dl  | * | inc dl ",gcc,2
"lea eax, [esi+1]  | * | jz short loc_4018FF ",gcc,1
inc dl  | * | loc_401894:  ,gcc,1
"jz short loc_4018FF  | * | xor edi, edi ",gcc,1
"loc_401894:   | * | xor ecx, ecx ",gcc,1
"xor edi, edi  | * | loc_401898:  ",gcc,1
"xor ecx, ecx  | * | mov bl, [eax] ",gcc,2
loc_401898:   | * | inc eax ,gcc,1
"and edx, 7Fh  | * | or edi, edx ",gcc,3
"or edi, edx  | * | test bl, bl ",gcc,3
"add ecx, 7  | * | js short loc_401898 ",gcc,1
"test bl, bl  | * | add edi, eax ",gcc,2
"js short loc_401898  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"add edi, eax  | * | mov [ecx+0Ch], edi ",gcc,1
"mov ecx, [esp+3Ch+var_20]  | * | loc_4018B4:  ",gcc,1
"mov [ecx+0Ch], edi  | * | mov dl, [eax] ",gcc,1
"loc_4018B4:   | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"mov dl, [eax]  | * | mov [ecx+15h], dl ",gcc,1
"mov ecx, [esp+3Ch+var_20]  | * | inc eax ",gcc,1
"mov [ecx+15h], dl  | * | xor edi, edi ",gcc,1
"inc eax  | * | xor ecx, ecx ",gcc,1
"xor edi, edi  | * | xchg ax, ax ",gcc,1
"xor ecx, ecx  | * | loc_4018C4:  ",gcc,1
loc_4018C4:   | * | inc eax ,gcc,1
"add ecx, 7  | * | js short loc_4018C4 ",gcc,1
"js short loc_4018C4  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"add edi, eax  | * | mov [ecx+10h], edi ",gcc,1
"mov ecx, [esp+3Ch+var_20]  | * | add esp, 2Ch ",gcc,1
"mov [ecx+10h], edi  | * | pop ebx ",gcc,1
pop ebp  | * | loc_4018E8:  ,gcc,1
"retn  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"loc_4018E8:   | * | mov [ecx+4], eax ",gcc,1
"mov [ecx+4], eax  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"lea eax, [esi+1]  | * | jnz short loc_401894 ",gcc,1
inc dl  | * | loc_4018FF:  ,gcc,1
"jnz short loc_401894  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"loc_4018FF:   | * | mov dword ptr [ecx+0Ch], 0 ",gcc,1
"mov ecx, [esp+3Ch+var_20]  | * | jmp short loc_4018B4 ",gcc,1
"mov dword ptr [ecx+0Ch], 0  | * | loc_40190C:  ",gcc,1
"jmp short loc_4018B4  | * | xor eax, eax ",gcc,1
loc_40190C:   | * | jmp loc_40184F ,gcc,1
"xor eax, eax  | * | __ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info endp ",gcc,1
jmp loc_40184F  | * | align 4 ,gcc,1
__ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info endp  | * | __ZL15get_ttype_entryP16lsda_header_infom proc near ,gcc,1
"push esi  | * | sub esp, 24h ",gcc,8
"sub esp, 24h  | * | mov bl, [eax+14h] ",gcc,1
"mov esi, eax  | * | movzx eax, bl ",gcc,1
"mov bl, [eax+14h]  | * | cmp bl, 0FFh ",gcc,1
"movzx eax, bl  | * | jz short loc_401980 ",gcc,1
"cmp bl, 0FFh  | * | and ebx, 7 ",gcc,1
"jz short loc_401980  | * | cmp bl, 2 ",gcc,1
"and ebx, 7  | * | jz short loc_401978 ",gcc,1
"cmp bl, 2  | * | jbe short loc_401940 ",gcc,1
"jz short loc_401978  | * | cmp bl, 3 ",gcc,1
jbe short loc_401940  | * | jz short loc_401944 ,gcc,1
"cmp bl, 3  | * | cmp bl, 4 ",gcc,1
jz short loc_401944  | * | jz short loc_40196C ,gcc,1
"cmp bl, 4  | * | loc_40193A:  ",gcc,1
jz short loc_40196C  | * | call _abort ,gcc,1
loc_40193A:   | * | align 10h ,gcc,1
call _abort  | * | loc_401940:  ,gcc,1
"align 10h  | * | test bl, bl ",gcc,1
loc_401940:   | * | jnz short loc_40193A ,gcc,1
"test bl, bl  | * | loc_401944:  ",gcc,1
"jnz short loc_40193A  | * | lea ecx, ds:0[edx*4] ",gcc,1
loc_401944:   | * | neg ecx ,gcc,1
"lea ecx, ds:0[edx*4]  | * | loc_40194D:  ",gcc,1
"neg ecx  | * | add ecx, [esi+0Ch] ",gcc,1
"loc_40194D:   | * | mov edx, [esi+8] ",gcc,1
"add ecx, [esi+0Ch]  | * | lea ebx, [esp+2Ch+var_10] ",gcc,1
"mov edx, [esi+8]  | * | mov dword ptr [esp+2Ch+var_2C], ebx  ",gcc,1
"lea ebx, [esp+2Ch+var_10]  | * | call __ZL28read_encoded_value_with_basehjPKhPj  ",gcc,1
"mov dword ptr [esp+2Ch+var_2C], ebx   | * | mov eax, dword ptr [esp+2Ch+var_10] ",gcc,1
"call __ZL28read_encoded_value_with_basehjPKhPj   | * | add esp, 24h ",gcc,1
"mov eax, dword ptr [esp+2Ch+var_10]  | * | pop ebx ",gcc,1
"add esp, 24h  | * | pop esi ",gcc,13
pop ebx  | * | retn ,gcc,30
pop esi  | * | align 4 ,gcc,11
retn  | * | loc_40196C:  ,gcc,1
"align 4  | * | lea ecx, ds:0[edx*8] ",gcc,1
loc_40196C:   | * | neg ecx ,gcc,1
"lea ecx, ds:0[edx*8]  | * | jmp short loc_40194D ",gcc,1
neg ecx  | * | align 4 ,gcc,1
jmp short loc_40194D  | * | loc_401978:  ,gcc,1
"align 4  | * | lea ecx, [edx+edx] ",gcc,1
loc_401978:   | * | neg ecx ,gcc,1
"lea ecx, [edx+edx]  | * | jmp short loc_40194D ",gcc,1
neg ecx  | * | align 10h ,gcc,1
jmp short loc_40194D  | * | loc_401980:  ,gcc,1
"align 10h  | * | xor ecx, ecx ",gcc,1
loc_401980:   | * | jmp short loc_40194D ,gcc,1
"xor ecx, ecx  | * | __ZL15get_ttype_entryP16lsda_header_infom endp ",gcc,1
jmp short loc_40194D  | * | __ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl proc near ,gcc,1
"push esi  | * | sub esp, 1Ch ",gcc,17
"sub esp, 1Ch  | * | mov ebp, edx ",gcc,1
"mov edi, eax  | * | mov [esp+2Ch+var_20], ecx ",gcc,1
"mov ebp, edx  | * | mov esi, [esp+2Ch+arg_0] ",gcc,1
"mov [esp+2Ch+var_20], ecx  | * | not esi ",gcc,1
"mov esi, [esp+2Ch+arg_0]  | * | add esi, [eax+0Ch] ",gcc,1
not esi  | * | loc_40199C:  ,gcc,1
"add esi, [eax+0Ch]  | * | xor edx, edx ",gcc,1
"loc_40199C:   | * | xor ecx, ecx ",gcc,1
"xor edx, edx  | * | loc_4019A0:  ",gcc,1
"xor ecx, ecx  | * | mov al, [esi] ",gcc,1
loc_4019A0:   | * | inc esi ,gcc,1
"mov al, [esi]  | * | mov ebx, eax ",gcc,1
"inc esi  | * | and ebx, 7Fh ",gcc,1
"mov ebx, eax  | * | shl ebx, cl ",gcc,1
"and ebx, 7Fh  | * | or edx, ebx ",gcc,1
"or edx, ebx  | * | test al, al ",gcc,1
"add ecx, 7  | * | js short loc_4019A0 ",gcc,1
"test al, al  | * | test edx, edx ",gcc,1
js short loc_4019A0  | * | jz short loc_4019D7 ,gcc,1
"test edx, edx  | * | mov eax, edi ",gcc,1
jz short loc_4019D7  | * | call __ZL15get_ttype_entryP16lsda_header_infom  ,gcc,1
"mov eax, edi  | * | lea ecx, [esp+2Ch+var_20] ",gcc,1
"call __ZL15get_ttype_entryP16lsda_header_infom   | * | mov edx, ebp ",gcc,1
"lea ecx, [esp+2Ch+var_20]  | * | call __ZL16get_adjusted_ptrPKSt9type_infoS1_PPv  ",gcc,1
"mov edx, ebp  | * | test al, al ",gcc,1
call __ZL16get_adjusted_ptrPKSt9type_infoS1_PPv   | * | jz short loc_40199C ,gcc,1
"jz short loc_40199C  | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | pop esi ",gcc,27
pop ebp  | * | loc_4019D7:  ,gcc,1
"retn  | * | xor eax, eax ",gcc,2
"loc_4019D7:   | * | add esp, 1Ch ",gcc,1
pop ebp  | * | __ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl endp ,gcc,1
__ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl endp  | * | public ___gxx_personality_sj0 ,gcc,1
align 4  | * | ___gxx_personality_sj0 proc near  ,gcc,1
lpfctx = dword ptr -0BCh  | * | v = dword ptr -0B4h ,data,1
ip_before_insn = dword ptr -0B8h  | * | var_A4 = dword ptr -0A4h ,data,1
v = dword ptr -0B4h  | * | var_A0 = dword ptr -0A0h ,data,1
var_A4 = dword ptr -0A4h  | * | var_98 = dword ptr -98h ,data,1
var_A0 = dword ptr -0A0h  | * | var_94 = dword ptr -94h ,data,1
var_98 = dword ptr -98h  | * | var_90 = dword ptr -90h ,data,1
var_94 = dword ptr -94h  | * | val = dword ptr -8Ch ,data,1
var_90 = dword ptr -90h  | * | var_86 = byte ptr -86h ,data,1
val = dword ptr -8Ch  | * | var_85 = byte ptr -85h ,data,1
var_86 = byte ptr -86h  | * | var_84 = dword ptr -84h ,data,1
var_85 = byte ptr -85h  | * | fctx = SjLj_Function_Context ptr -80h ,data,1
var_84 = dword ptr -84h  | * | var_5C = dword ptr -5Ch ,data,1
fctx = SjLj_Function_Context ptr -80h  | * | var_58 = dword ptr -58h ,data,1
var_5C = dword ptr -5Ch  | * | var_44 = dword ptr -44h ,data,1
var_58 = dword ptr -58h  | * | var_40 = dword ptr -40h ,data,1
var_44 = dword ptr -44h  | * | var_3C = dword ptr -3Ch ,data,3
var_3C = dword ptr -3Ch  | * | var_34 = byte ptr -34h ,data,1
var_38 = dword ptr -38h  | * | var_2C = dword ptr -2Ch ,data,1
var_34 = byte ptr -34h  | * | var_28 = dword ptr -28h ,data,1
var_28 = dword ptr -28h  | * | var_20 = byte ptr -20h ,data,3
var_24 = dword ptr -24h  | * | var_1C = byte ptr -1Ch ,data,2
var_20 = byte ptr -20h  | * | arg_0 = dword ptr 4 ,data,1
var_1C = byte ptr -1Ch  | * | arg_4 = dword ptr 8 ,data,1
arg_0 = dword ptr 4  | * | arg_8 = dword ptr 0Ch ,data,38
arg_4 = dword ptr 8  | * | arg_C = dword ptr 10h ,data,19
arg_8 = dword ptr 0Ch  | * | arg_10 = dword ptr 14h ,data,5
arg_C = dword ptr 10h  | * | context = dword ptr 18h ,data,1
"push esi  | * | sub esp, 0ACh ",gcc,1
"push ebx  | * | mov eax, [esp+0BCh+arg_8] ",gcc,1
"sub esp, 0ACh  | * | mov edx, [esp+0BCh+arg_C] ",gcc,1
"mov eax, [esp+0BCh+arg_8]  | * | mov [esp+0BCh+var_A4], eax ",gcc,1
"mov edx, [esp+0BCh+arg_C]  | * | mov [esp+0BCh+var_A0], edx ",gcc,1
"mov [esp+0BCh+var_A4], eax  | * | mov [esp+0BCh+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov [esp+0BCh+var_A0], edx  | * | mov [esp+0BCh+fctx.lsda], offset dword_412250 ",gcc,1
"mov [esp+0BCh+fctx.personality], offset ___gxx_personality_sj0  | * | lea edx, [esp+0BCh+var_1C] ",gcc,1
"mov [esp+0BCh+fctx.lsda], offset dword_412250  | * | mov [esp+0BCh+fctx.jbuf], edx ",gcc,1
"lea edx, [esp+0BCh+var_1C]  | * | mov [esp+0BCh+var_5C], offset loc_401F34 ",gcc,1
"mov [esp+0BCh+fctx.jbuf], edx  | * | mov [esp+0BCh+var_58], esp ",gcc,1
"mov [esp+0BCh+var_5C], offset loc_401F34  | * | lea eax, [esp+0BCh+fctx] ",gcc,1
"mov [esp+0BCh+var_58], esp  | * | mov [esp+0BCh+lpfctx], eax  ",gcc,1
"lea eax, [esp+0BCh+fctx]  | * | call __Unwind_SjLj_Register ",gcc,1
"mov [esp+0BCh+lpfctx], eax   | * | mov [esp+0BCh+var_44], 0 ",gcc,1
"call __Unwind_SjLj_Register  | * | mov [esp+0BCh+var_40], 0 ",gcc,1
"mov [esp+0BCh+var_44], 0  | * | cmp [esp+0BCh+arg_0], 1 ",gcc,1
"mov [esp+0BCh+var_40], 0  | * | jz short loc_401A74 ",gcc,1
"cmp [esp+0BCh+arg_0], 1  | * | mov [esp+0BCh+var_A4], 3 ",gcc,1
jz short loc_401A74  | * | loc_401A59:  ,gcc,1
"mov [esp+0BCh+var_A4], 3  | * | lea edx, [esp+0BCh+fctx] ",gcc,1
"loc_401A59:   | * | mov [esp+0BCh+lpfctx], edx  ",gcc,1
"lea edx, [esp+0BCh+fctx]  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+0BCh+lpfctx], edx   | * | mov eax, [esp+0BCh+var_A4] ",gcc,1
"call __Unwind_SjLj_Unregister  | * | add esp, 0ACh ",gcc,1
"mov eax, [esp+0BCh+var_A4]  | * | pop ebx ",gcc,1
"add esp, 0ACh  | * | pop esi ",gcc,1
pop ebp  | * | loc_401A74:  ,gcc,1
"retn  | * | mov eax, [esp+0BCh+var_A4] ",gcc,1
"loc_401A74:   | * | mov edx, [esp+0BCh+var_A0] ",gcc,1
"mov eax, [esp+0BCh+var_A4]  | * | add eax, 0BCD4D500h ",gcc,1
"mov edx, [esp+0BCh+var_A0]  | * | adc edx, 0B8B1AABCh ",gcc,1
"add eax, 0BCD4D500h  | * | mov [esp+0BCh+var_86], 1 ",gcc,1
"adc edx, 0B8B1AABCh  | * | cmp edx, 0 ",gcc,1
"mov [esp+0BCh+var_86], 1  | * | ja short loc_401A9B ",gcc,1
"cmp edx, 0  | * | cmp eax, 1 ",gcc,2
ja short loc_401A9B  | * | ja short loc_401A9B ,gcc,1
"cmp eax, 1  | * | mov [esp+0BCh+var_86], 0 ",gcc,1
ja short loc_401A9B  | * | loc_401A9B:  ,gcc,1
"mov [esp+0BCh+var_86], 0  | * | cmp [esp+0BCh+arg_4], 6 ",gcc,1
loc_401A9B:   | * | jz loc_401C68 ,gcc,1
"cmp [esp+0BCh+arg_4], 6  | * | loc_401AA9:  ",gcc,1
"jz loc_401C68  | * | mov edx, [esp+0BCh+context] ",gcc,1
"loc_401AA9:   | * | mov [esp+0BCh+lpfctx], edx  ",gcc,1
"mov edx, [esp+0BCh+context]  | * | mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh ",gcc,2
"mov [esp+0BCh+lpfctx], edx   | * | call __Unwind_GetLanguageSpecificData ",gcc,1
"mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh  | * | mov [esp+0BCh+var_94], eax ",gcc,1
"call __Unwind_GetLanguageSpecificData  | * | test eax, eax ",gcc,1
"mov [esp+0BCh+var_94], eax  | * | jz loc_401D3C ",gcc,1
"test eax, eax  | * | mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh ",gcc,2
"jz loc_401D3C  | * | lea ecx, [esp+0BCh+var_34] ",gcc,1
"mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh  | * | mov edx, [esp+0BCh+var_94] ",gcc,2
"lea ecx, [esp+0BCh+var_34]  | * | mov eax, [esp+0BCh+context] ",gcc,2
"mov edx, [esp+0BCh+var_94]  | * | call __ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info  ",gcc,2
"mov eax, [esp+0BCh+context]  | * | mov [esp+0BCh+var_A4], eax ",gcc,1
"call __ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info   | * | movzx eax, [esp+0BCh+var_20] ",gcc,1
"mov [esp+0BCh+var_A4], eax  | * | mov edx, [esp+0BCh+context] ",gcc,1
"movzx eax, [esp+0BCh+var_20]  | * | call __ZL21base_of_encoded_valuehP15_Unwind_Context  ",gcc,3
"mov edx, [esp+0BCh+context]  | * | mov [esp+0BCh+var_2C], eax ",gcc,2
"call __ZL21base_of_encoded_valuehP15_Unwind_Context   | * | lea eax, [esp+0BCh+var_40] ",gcc,1
"mov [esp+0BCh+var_2C], eax  | * | mov [esp+0BCh+ip_before_insn], eax  ",gcc,1
"lea eax, [esp+0BCh+var_40]  | * | mov eax, [esp+0BCh+context] ",gcc,1
"mov [esp+0BCh+ip_before_insn], eax   | * | mov [esp+0BCh+lpfctx], eax  ",gcc,1
"mov eax, [esp+0BCh+context]  | * | call __Unwind_GetIPInfo ",gcc,1
"mov [esp+0BCh+lpfctx], eax   | * | mov esi, eax ",gcc,1
"call __Unwind_GetIPInfo  | * | cmp [esp+0BCh+var_40], 1 ",gcc,1
"mov esi, eax  | * | sbb esi, 0 ",gcc,1
"cmp [esp+0BCh+var_40], 1  | * | cmp esi, 0 ",gcc,1
"sbb esi, 0  | * | jl loc_401D3C ",gcc,1
"cmp esi, 0  | * | jz loc_401D0C ",gcc,1
"jl loc_401D3C  | * | mov eax, [esp+0BCh+var_A4] ",gcc,1
"jz loc_401D0C  | * | xchg ax, ax ",gcc,1
"mov eax, [esp+0BCh+var_A4]  | * | loc_401B40:  ",gcc,1
"xchg ax, ax  | * | xor ebp, ebp ",gcc,1
"loc_401B40:   | * | xor ecx, ecx ",gcc,1
"xor ebp, ebp  | * | loc_401B44:  ",gcc,1
loc_401B44:   | * | inc eax ,gcc,1
"and edx, 7Fh  | * | or ebp, edx ",gcc,1
"or ebp, edx  | * | test bl, bl ",gcc,1
"add ecx, 7  | * | js short loc_401B44 ",gcc,1
"test bl, bl  | * | xor edi, edi ",gcc,1
"js short loc_401B44  | * | xor ecx, ecx ",gcc,1
"xor edi, edi  | * | nop ",gcc,1
"xor ecx, ecx  | * | loc_401B5C:  ",gcc,1
"nop  | * | mov bl, [eax] ",gcc,1
loc_401B5C:   | * | inc eax ,gcc,1
"add ecx, 7  | * | js short loc_401B5C ",gcc,1
"test bl, bl  | * | dec esi ",gcc,1
js short loc_401B5C  | * | jnz short loc_401B40 ,gcc,1
"dec esi  | * | mov ebx, ebp ",gcc,1
jnz short loc_401B40  | * | inc ebx ,gcc,1
"mov ebx, ebp  | * | mov [esp+0BCh+val], ebx ",gcc,1
"inc ebx  | * | test edi, edi ",gcc,1
"mov [esp+0BCh+val], ebx  | * | jz loc_401DF7 ",gcc,1
"test edi, edi  | * | mov eax, [esp+0BCh+var_24] ",gcc,1
"jz loc_401DF7  | * | lea eax, [eax+edi-1] ",gcc,1
"mov eax, [esp+0BCh+var_24]  | * | mov [esp+0BCh+var_98], eax ",gcc,1
"lea eax, [eax+edi-1]  | * | test ebx, ebx ",gcc,1
"mov [esp+0BCh+var_98], eax  | * | jz loc_401D3C ",gcc,1
"test ebx, ebx  | * | test eax, eax ",gcc,1
jz loc_401D3C  | * | jz loc_401E02 ,gcc,1
"test eax, eax  | * | mov edx, [esp+0BCh+arg_4] ",gcc,1
"jz loc_401E02  | * | and edx, 8 ",gcc,1
"mov edx, [esp+0BCh+arg_4]  | * | mov [esp+0BCh+var_84], edx ",gcc,1
"and edx, 8  | * | jnz loc_401F0B ",gcc,1
"mov [esp+0BCh+var_84], edx  | * | cmp [esp+0BCh+var_86], 0 ",gcc,1
jnz loc_401F0B  | * | jnz loc_401F18 ,gcc,1
"cmp [esp+0BCh+var_86], 0  | * | mov eax, [esp+0BCh+arg_10] ",gcc,1
"jnz loc_401F18  | * | test byte ptr [eax], 1 ",gcc,1
"mov eax, [esp+0BCh+arg_10]  | * | jz loc_401F25 ",gcc,1
"test byte ptr [eax], 1  | * | mov eax, [eax-30h] ",gcc,1
jz loc_401F25  | * | loc_401BD2:  ,gcc,1
"mov eax, [eax-30h]  | * | mov [esp+0BCh+var_44], eax ",gcc,1
"loc_401BD2:   | * | mov eax, [eax-50h] ",gcc,1
"mov [esp+0BCh+var_44], eax  | * | mov [esp+0BCh+var_90], eax ",gcc,1
"mov eax, [eax-50h]  | * | loc_401BDD:  ",gcc,1
"mov [esp+0BCh+var_90], eax  | * | mov [esp+0BCh+var_85], 0 ",gcc,1
"loc_401BDD:   | * | xchg ax, ax ",gcc,1
"mov [esp+0BCh+var_85], 0  | * | loc_401BE4:  ",gcc,1
"xchg ax, ax  | * | lea edx, [esp+0BCh+var_3C] ",gcc,1
"loc_401BE4:   | * | mov eax, [esp+0BCh+var_98] ",gcc,1
"lea edx, [esp+0BCh+var_3C]  | * | call __ZL12read_sleb128PKhPl  ",gcc,1
"mov eax, [esp+0BCh+var_98]  | * | mov [esp+0BCh+var_A4], eax ",gcc,1
"call __ZL12read_sleb128PKhPl   | * | lea edx, [esp+0BCh+var_38] ",gcc,1
"mov [esp+0BCh+var_A4], eax  | * | call __ZL12read_sleb128PKhPl  ",gcc,1
"lea edx, [esp+0BCh+var_38]  | * | mov edx, [esp+0BCh+var_3C] ",gcc,1
"call __ZL12read_sleb128PKhPl   | * | cmp edx, 0 ",gcc,1
"mov edx, [esp+0BCh+var_3C]  | * | jz loc_401E58 ",gcc,1
"cmp edx, 0  | * | jle loc_401E78 ",gcc,1
"jz loc_401E58  | * | lea eax, [esp+0BCh+var_34] ",gcc,1
jle loc_401E78  | * | call __ZL15get_ttype_entryP16lsda_header_infom  ,gcc,1
"lea eax, [esp+0BCh+var_34]  | * | test eax, eax ",gcc,1
call __ZL15get_ttype_entryP16lsda_header_infom   | * | jz short loc_401C53 ,gcc,1
"test eax, eax  | * | mov esi, [esp+0BCh+var_90] ",gcc,1
"jz short loc_401C53  | * | test esi, esi ",gcc,1
"mov esi, [esp+0BCh+var_90]  | * | jz loc_401E5D ",gcc,1
"test esi, esi  | * | mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh ",gcc,1
"jz loc_401E5D  | * | lea ecx, [esp+0BCh+var_44] ",gcc,1
"mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh  | * | mov edx, [esp+0BCh+var_90] ",gcc,1
"lea ecx, [esp+0BCh+var_44]  | * | call __ZL16get_adjusted_ptrPKSt9type_infoS1_PPv  ",gcc,1
"mov edx, [esp+0BCh+var_90]  | * | test al, al ",gcc,1
call __ZL16get_adjusted_ptrPKSt9type_infoS1_PPv   | * | jz loc_401E5D ,gcc,1
"test al, al  | * | loc_401C53:  ",gcc,1
"jz loc_401E5D  | * | mov eax, [esp+0BCh+var_3C] ",gcc,1
"loc_401C53:   | * | mov [esp+0BCh+var_A4], eax ",gcc,1
"mov eax, [esp+0BCh+var_3C]  | * | mov eax, 3 ",gcc,1
"mov [esp+0BCh+var_A4], eax  | * | jmp loc_401D29 ",gcc,1
"mov eax, 3  | * | loc_401C68:  ",gcc,1
"jmp loc_401D29  | * | cmp [esp+0BCh+var_86], 0 ",gcc,1
loc_401C68:   | * | jnz loc_401AA9 ,gcc,1
"cmp [esp+0BCh+var_86], 0  | * | mov edx, [esp+0BCh+arg_10] ",gcc,1
"jnz loc_401AA9  | * | mov edx, [edx-18h] ",gcc,1
"mov edx, [esp+0BCh+arg_10]  | * | mov [esp+0BCh+var_A4], edx ",gcc,1
"mov edx, [edx-18h]  | * | mov eax, [esp+0BCh+arg_10] ",gcc,1
"mov [esp+0BCh+var_A4], edx  | * | mov eax, [eax-10h] ",gcc,1
"mov eax, [esp+0BCh+arg_10]  | * | mov [esp+0BCh+var_94], eax ",gcc,1
"mov eax, [eax-10h]  | * | mov edx, [esp+0BCh+arg_10] ",gcc,1
"mov [esp+0BCh+var_94], eax  | * | mov edx, [edx-0Ch] ",gcc,1
"mov edx, [esp+0BCh+arg_10]  | * | mov [esp+0BCh+val], edx ",gcc,1
"mov edx, [edx-0Ch]  | * | test edx, edx ",gcc,1
"mov [esp+0BCh+val], edx  | * | jz loc_401DE8 ",gcc,1
"test edx, edx  | * | loc_401CA5:  ",gcc,1
"jz loc_401DE8  | * | mov eax, [esp+0BCh+var_A4] ",gcc,1
"loc_401CA5:   | * | test eax, eax ",gcc,1
"mov eax, [esp+0BCh+var_A4]  | * | jns loc_401D74 ",gcc,1
"jns loc_401D74  | * | lea ecx, [esp+0BCh+var_34] ",gcc,1
"mov eax, [esp+0BCh+context]  | * | movzx eax, [esp+0BCh+var_20] ",gcc,1
"call __ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info   | * | mov edx, [esp+0BCh+context] ",gcc,1
"call __ZL21base_of_encoded_valuehP15_Unwind_Context   | * | movzx eax, [esp+0BCh+var_20] ",gcc,1
"mov [esp+0BCh+var_2C], eax  | * | mov edx, [esp+0BCh+context] ",gcc,1
"mov edx, [esp+0BCh+context]  | * | mov edx, [esp+0BCh+arg_10] ",gcc,1
"call __ZL21base_of_encoded_valuehP15_Unwind_Context   | * | mov [edx-0Ch], eax ",gcc,1
"mov edx, [esp+0BCh+arg_10]  | * | jmp short loc_401D74 ",gcc,1
"mov [edx-0Ch], eax  | * | align 4 ",gcc,1
jmp short loc_401D74  | * | loc_401D0C:  ,gcc,1
"align 4  | * | mov [esp+0BCh+val], 0 ",gcc,1
"loc_401D0C:   | * | mov eax, 1 ",gcc,1
"mov [esp+0BCh+val], 0  | * | loc_401D19:  ",gcc,1
"mov eax, 1  | * | mov [esp+0BCh+var_A4], 0 ",gcc,1
"loc_401D19:   | * | mov [esp+0BCh+var_98], 0 ",gcc,1
"mov [esp+0BCh+var_A4], 0  | * | loc_401D29:  ",gcc,1
"mov [esp+0BCh+var_98], 0  | * | test byte ptr [esp+0BCh+arg_4], 1 ",gcc,1
loc_401D29:   | * | jz short loc_401D4C ,gcc,1
"test byte ptr [esp+0BCh+arg_4], 1  | * | cmp eax, 2 ",gcc,1
jz short loc_401D4C  | * | jnz loc_401E0C ,gcc,1
"cmp eax, 2  | * | loc_401D3C:  ",gcc,1
"jnz loc_401E0C  | * | mov [esp+0BCh+var_A4], 8 ",gcc,1
loc_401D3C:   | * | jmp loc_401A59 ,gcc,1
"mov [esp+0BCh+var_A4], 8  | * | align 4 ",gcc,1
jmp loc_401A59  | * | loc_401D4C:  ,gcc,1
"align 4  | * | test byte ptr [esp+0BCh+arg_4], 8 ",gcc,1
loc_401D4C:   | * | jnz short loc_401D61 ,gcc,1
"test byte ptr [esp+0BCh+arg_4], 8  | * | cmp [esp+0BCh+var_86], 0 ",gcc,1
jnz short loc_401D61  | * | jz loc_401DE1 ,gcc,1
"cmp [esp+0BCh+var_86], 0  | * | loc_401D61:  ",gcc,1
jz loc_401DE1  | * | dec eax ,gcc,1
loc_401D61:   | * | jz loc_401F40 ,gcc,1
"dec eax  | * | mov edx, [esp+0BCh+var_A4] ",gcc,1
"jz loc_401F40  | * | test edx, edx ",gcc,1
"mov edx, [esp+0BCh+var_A4]  | * | js loc_401F45 ",gcc,1
"test edx, edx  | * | loc_401D74:  ",gcc,1
"js loc_401F45  | * | mov eax, [esp+0BCh+arg_10] ",gcc,1
"loc_401D74:   | * | mov [esp+0BCh+v], eax  ",gcc,1
"mov eax, [esp+0BCh+arg_10]  | * | mov [esp+0BCh+ip_before_insn], 0  ",gcc,1
"mov [esp+0BCh+v], eax   | * | mov edx, [esp+0BCh+context] ",gcc,2
"mov [esp+0BCh+ip_before_insn], 0   | * | mov [esp+0BCh+lpfctx], edx  ",gcc,1
"mov [esp+0BCh+lpfctx], edx   | * | call __Unwind_SetGR ",gcc,1
"mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh  | * | mov eax, [esp+0BCh+var_A4] ",gcc,1
"call __Unwind_SetGR  | * | mov [esp+0BCh+v], eax  ",gcc,1
"mov eax, [esp+0BCh+var_A4]  | * | mov [esp+0BCh+ip_before_insn], 1  ",gcc,1
"mov [esp+0BCh+ip_before_insn], 1   | * | mov [esp+0BCh+lpfctx], edx  ",gcc,1
"mov edx, [esp+0BCh+context]  | * | call __Unwind_SetGR ",gcc,1
"mov [esp+0BCh+lpfctx], edx   | * | mov eax, [esp+0BCh+val] ",gcc,1
"call __Unwind_SetGR  | * | mov [esp+0BCh+ip_before_insn], eax  ",gcc,1
"mov eax, [esp+0BCh+val]  | * | mov edx, [esp+0BCh+context] ",gcc,1
"mov [esp+0BCh+ip_before_insn], eax   | * | mov [esp+0BCh+lpfctx], edx  ",gcc,1
"mov edx, [esp+0BCh+context]  | * | call __Unwind_SetIP ",gcc,1
"mov [esp+0BCh+lpfctx], edx   | * | mov [esp+0BCh+var_A4], 7 ",gcc,1
call __Unwind_SetIP  | * | jmp loc_401A59 ,gcc,1
"mov [esp+0BCh+var_A4], 7  | * | loc_401DE1:  ",gcc,1
jmp loc_401A59  | * | dec eax ,gcc,1
loc_401DE1:   | * | jnz loc_401CA5 ,gcc,1
dec eax  | * | loc_401DE8:  ,gcc,1
"jnz loc_401CA5  | * | mov eax, [esp+0BCh+arg_10] ",gcc,1
"loc_401DE8:   | * | mov [esp+0BCh+lpfctx], eax  ",gcc,1
"mov eax, [esp+0BCh+arg_10]  | * | call ___cxa_call_terminate ",gcc,1
"mov [esp+0BCh+lpfctx], eax   | * | loc_401DF7:  ",gcc,1
"call ___cxa_call_terminate  | * | cmp [esp+0BCh+val], 0 ",gcc,1
loc_401DF7:   | * | jz loc_401D3C ,gcc,1
"cmp [esp+0BCh+val], 0  | * | loc_401E02:  ",gcc,1
"jz loc_401D3C  | * | mov eax, 2 ",gcc,2
loc_401E02:   | * | jmp loc_401D19 ,gcc,1
"mov eax, 2  | * | loc_401E0C:  ",gcc,1
"jmp loc_401D19  | * | cmp [esp+0BCh+var_86], 0 ",gcc,1
loc_401E0C:   | * | jnz loc_401EFE ,gcc,1
"cmp [esp+0BCh+var_86], 0  | * | mov edx, [esp+0BCh+var_A4] ",gcc,1
"jnz loc_401EFE  | * | mov eax, [esp+0BCh+arg_10] ",gcc,1
"mov edx, [esp+0BCh+var_A4]  | * | mov [eax-18h], edx ",gcc,1
"mov eax, [esp+0BCh+arg_10]  | * | mov edx, [esp+0BCh+var_98] ",gcc,1
"mov [eax-18h], edx  | * | mov [eax-14h], edx ",gcc,1
"mov edx, [esp+0BCh+var_98]  | * | mov edx, [esp+0BCh+var_94] ",gcc,1
"mov [eax-14h], edx  | * | mov [eax-10h], edx ",gcc,1
"mov edx, [esp+0BCh+var_94]  | * | mov eax, [esp+0BCh+var_44] ",gcc,1
"mov [eax-10h], edx  | * | mov edx, [esp+0BCh+arg_10] ",gcc,1
"mov eax, [esp+0BCh+var_44]  | * | mov [edx-8], eax ",gcc,1
"mov edx, [esp+0BCh+arg_10]  | * | mov eax, [esp+0BCh+val] ",gcc,1
"mov [edx-8], eax  | * | mov [edx-0Ch], eax ",gcc,1
"mov eax, [esp+0BCh+val]  | * | mov [esp+0BCh+var_A4], 6 ",gcc,1
"mov [edx-0Ch], eax  | * | jmp loc_401A59 ",gcc,1
"mov [esp+0BCh+var_A4], 6  | * | align 4 ",gcc,1
jmp loc_401A59  | * | loc_401E58:  ,gcc,1
"align 4  | * | mov [esp+0BCh+var_85], 1 ",gcc,1
loc_401E58:   | * | loc_401E5D:  ,gcc,1
"mov [esp+0BCh+var_85], 1  | * | mov eax, [esp+0BCh+var_38] ",gcc,1
"loc_401E5D:   | * | test eax, eax ",gcc,1
"mov eax, [esp+0BCh+var_38]  | * | jz short loc_401EBD ",gcc,1
"test eax, eax  | * | add eax, [esp+0BCh+var_A4] ",gcc,1
"jz short loc_401EBD  | * | mov [esp+0BCh+var_98], eax ",gcc,1
"add eax, [esp+0BCh+var_A4]  | * | jmp loc_401BE4 ",gcc,1
"mov [esp+0BCh+var_98], eax  | * | align 4 ",gcc,1
jmp loc_401BE4  | * | loc_401E78:  ,gcc,1
"align 4  | * | mov ebx, [esp+0BCh+var_90] ",gcc,1
"loc_401E78:   | * | test ebx, ebx ",gcc,1
"mov ebx, [esp+0BCh+var_90]  | * | jz short loc_401E8F ",gcc,1
"test ebx, ebx  | * | mov ecx, [esp+0BCh+var_84] ",gcc,1
"jz short loc_401E8F  | * | test ecx, ecx ",gcc,1
"mov ecx, [esp+0BCh+var_84]  | * | jnz short loc_401E8F ",gcc,1
"test ecx, ecx  | * | cmp [esp+0BCh+var_86], 0 ",gcc,1
jnz short loc_401E8F  | * | jz short loc_401EDA ,gcc,1
"cmp [esp+0BCh+var_86], 0  | * | loc_401E8F:  ",gcc,1
jz short loc_401EDA  | * | not edx ,gcc,1
"loc_401E8F:   | * | add edx, [esp+0BCh+var_28] ",gcc,1
"not edx  | * | xor esi, esi ",gcc,1
"add edx, [esp+0BCh+var_28]  | * | xor ecx, ecx ",gcc,1
"xor esi, esi  | * | loc_401E9C:  ",gcc,1
"xor ecx, ecx  | * | mov bl, [edx] ",gcc,1
loc_401E9C:   | * | inc edx ,gcc,1
"mov bl, [edx]  | * | mov eax, ebx ",gcc,1
"inc edx  | * | and eax, 7Fh ",gcc,1
"mov eax, ebx  | * | shl eax, cl ",gcc,1
"and eax, 7Fh  | * | or esi, eax ",gcc,1
"shl eax, cl  | * | add ecx, 7 ",gcc,1
"or esi, eax  | * | test bl, bl ",gcc,1
"add ecx, 7  | * | js short loc_401E9C ",gcc,1
"test bl, bl  | * | test esi, esi ",gcc,1
js short loc_401E9C  | * | setz al ,gcc,1
"test esi, esi  | * | loc_401EB4:  ",gcc,1
"setz al  | * | test al, al ",gcc,1
loc_401EB4:   | * | jz short loc_401E5D ,gcc,1
"test al, al  | * | jmp loc_401C53 ",gcc,1
jz short loc_401E5D  | * | loc_401EBD:  ,gcc,1
"jmp loc_401C53  | * | cmp [esp+0BCh+var_85], 0 ",gcc,1
loc_401EBD:   | * | jz loc_401D3C ,gcc,1
"cmp [esp+0BCh+var_85], 0  | * | mov [esp+0BCh+var_A4], 0 ",gcc,1
"mov [esp+0BCh+var_A4], 0  | * | jmp loc_401D29 ",gcc,1
"mov eax, 2  | * | loc_401EDA:  ",gcc,1
"jmp loc_401D29  | * | mov ecx, [esp+0BCh+var_44] ",gcc,1
"loc_401EDA:   | * | mov [esp+0BCh+lpfctx], edx ",gcc,1
"mov ecx, [esp+0BCh+var_44]  | * | mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+0BCh+lpfctx], edx  | * | mov edx, [esp+0BCh+var_90] ",gcc,1
"mov [esp+0BCh+fctx.call_site], 0FFFFFFFFh  | * | lea eax, [esp+0BCh+var_34] ",gcc,1
"mov edx, [esp+0BCh+var_90]  | * | call __ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl  ",gcc,1
"lea eax, [esp+0BCh+var_34]  | * | xor eax, 1 ",gcc,1
call __ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl   | * | jmp short loc_401EB4 ,gcc,1
"xor eax, 1  | * | loc_401EFE:  ",gcc,1
"jmp short loc_401EB4  | * | mov [esp+0BCh+var_A4], 6 ",gcc,1
loc_401EFE:   | * | jmp loc_401A59 ,gcc,1
"mov [esp+0BCh+var_A4], 6  | * | loc_401F0B:  ",gcc,1
"jmp loc_401A59  | * | mov [esp+0BCh+var_90], offset __ZTIN10__cxxabiv115__forced_unwindE  ",gcc,1
loc_401F0B:   | * | jmp loc_401BDD ,gcc,1
"mov [esp+0BCh+var_90], offset __ZTIN10__cxxabiv115__forced_unwindE   | * | loc_401F18:  ",gcc,1
"jmp loc_401BDD  | * | mov [esp+0BCh+var_90], offset __ZTIN10__cxxabiv119__foreign_exceptionE  ",gcc,1
loc_401F18:   | * | jmp loc_401BDD ,gcc,1
"mov [esp+0BCh+var_90], offset __ZTIN10__cxxabiv119__foreign_exceptionE   | * | loc_401F25:  ",gcc,1
"jmp loc_401BDD  | * | mov eax, [esp+0BCh+arg_10] ",gcc,1
"loc_401F25:   | * | add eax, 20h  ",gcc,1
"mov eax, [esp+0BCh+arg_10]  | * | jmp loc_401BD2 ",gcc,1
"add eax, 20h   | * | loc_401F34:  ",gcc,1
"jmp loc_401BD2  | * | mov eax, [esp+0BCh+fctx.data] ",gcc,1
"loc_401F34:   | * | mov [esp+0BCh+lpfctx], eax  ",gcc,1
"mov eax, [esp+0BCh+fctx.data]  | * | call ___cxa_begin_catch ",gcc,1
"mov [esp+0BCh+lpfctx], eax   | * | loc_401F40:  ",gcc,1
call ___cxa_begin_catch  | * | call __ZSt9terminatev  ,gcc,1
loc_401F40:   | * | loc_401F45:  ,gcc,1
"call __ZSt9terminatev   | * | mov [esp+0BCh+fctx.call_site], 1 ",gcc,1
loc_401F45:   | * | call __ZSt10unexpectedv  ,gcc,1
"mov [esp+0BCh+fctx.call_site], 1  | * | ___gxx_personality_sj0 endp ",gcc,1
call __ZSt10unexpectedv   | * | align 4 ,gcc,1
___gxx_personality_sj0 endp  | * | public ___cxa_call_unexpected ,gcc,1
align 4  | * | ___cxa_call_unexpected proc near  ,gcc,1
lpfctx = dword ptr -8Ch  | * | var_84 = dword ptr -84h ,data,1
lptinfo = dword ptr -88h  | * | lpuexcpt = dword ptr -70h ,data,1
var_84 = dword ptr -84h  | * | var_6C = dword ptr -6Ch ,data,1
lpuexcpt = dword ptr -70h  | * | var_68 = dword ptr -68h ,data,1
var_6C = dword ptr -6Ch  | * | var_64 = dword ptr -64h ,data,1
var_68 = dword ptr -68h  | * | fctx = SjLj_Function_Context ptr -60h ,data,2
var_64 = dword ptr -64h  | * | var_3C = dword ptr -3Ch ,data,1
fctx = SjLj_Function_Context ptr -60h  | * | var_38 = dword ptr -38h ,data,1
var_3C = dword ptr -3Ch  | * | var_24 = byte ptr -24h ,data,1
var_38 = dword ptr -38h  | * | var_1C = dword ptr -1Ch ,data,1
var_24 = byte ptr -24h  | * | var_C = byte ptr -0Ch ,data,1
var_1C = dword ptr -1Ch  | * | arg_0 = dword ptr 4 ,data,5
"push ebp  | * | mov [esp+8Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"sub esp, 88h  | * | mov [esp+8Ch+fctx.lsda], offset dword_412260 ",gcc,1
"mov [esp+8Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea eax, [esp+8Ch+var_C] ",gcc,1
"mov [esp+8Ch+fctx.lsda], offset dword_412260  | * | mov [esp+8Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+8Ch+var_C]  | * | mov [esp+8Ch+var_3C], offset loc_401FE8 ",gcc,1
"mov [esp+8Ch+fctx.jbuf], eax  | * | mov [esp+8Ch+var_38], esp ",gcc,1
"mov [esp+8Ch+var_3C], offset loc_401FE8  | * | lea eax, [esp+8Ch+fctx] ",gcc,1
"mov [esp+8Ch+var_38], esp  | * | mov [esp+8Ch+lpfctx], eax  ",gcc,1
"lea eax, [esp+8Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,1
"mov [esp+8Ch+lpfctx], eax   | * | mov edx, [esp+8Ch+arg_0] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov [esp+8Ch+lpfctx], edx  ",gcc,1
"mov edx, [esp+8Ch+arg_0]  | * | call ___cxa_begin_catch ",gcc,1
"mov [esp+8Ch+lpfctx], edx   | * | mov eax, [esp+8Ch+arg_0] ",gcc,1
"call ___cxa_begin_catch  | * | mov eax, [eax-10h] ",gcc,1
"mov eax, [esp+8Ch+arg_0]  | * | mov [esp+8Ch+var_68], eax ",gcc,1
"mov eax, [eax-10h]  | * | mov edx, [esp+8Ch+arg_0] ",gcc,1
"mov [esp+8Ch+var_68], eax  | * | mov edx, [edx-18h] ",gcc,1
"mov edx, [esp+8Ch+arg_0]  | * | mov [esp+8Ch+var_6C], edx ",gcc,1
"mov edx, [edx-18h]  | * | mov eax, [esp+8Ch+arg_0] ",gcc,1
"mov [esp+8Ch+var_6C], edx  | * | mov eax, [eax-24h] ",gcc,1
"mov eax, [esp+8Ch+arg_0]  | * | mov [esp+8Ch+var_64], eax ",gcc,1
"mov eax, [eax-24h]  | * | mov edx, [esp+8Ch+arg_0] ",gcc,1
"mov [esp+8Ch+var_64], eax  | * | mov eax, [edx-0Ch] ",gcc,1
"mov edx, [esp+8Ch+arg_0]  | * | mov [esp+8Ch+var_1C], eax ",gcc,1
"mov eax, [edx-0Ch]  | * | mov eax, [edx-28h] ",gcc,1
"mov [esp+8Ch+var_1C], eax  | * | mov [esp+8Ch+lpfctx], eax  ",gcc,1
"mov eax, [edx-28h]  | * | mov [esp+8Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+8Ch+lpfctx], eax   | * | call __ZN10__cxxabiv112__unexpectedEPFvvE  ",gcc,1
"mov [esp+8Ch+fctx.call_site], 1  | * | loc_401FE8:  ",gcc,1
"call __ZN10__cxxabiv112__unexpectedEPFvvE   | * | mov edx, [esp+8Ch+fctx.data] ",gcc,1
"loc_401FE8:   | * | mov [esp+8Ch+lpuexcpt], edx  ",gcc,1
"mov edx, [esp+8Ch+fctx.data]  | * | mov eax, [esp+8Ch+fctx.call_site] ",gcc,1
"mov [esp+8Ch+lpuexcpt], edx   | * | test eax, eax ",gcc,1
"mov eax, [esp+8Ch+fctx.call_site]  | * | jz short loc_401FFD ",gcc,1
"test eax, eax  | * | dec eax ",gcc,12
jz short loc_401FFD  | * | jz short loc_40205E ,gcc,1
dec eax  | * | ud2 ,gcc,12
jz short loc_40205E  | * | loc_401FFD:  ,gcc,1
"ud2  | * | mov eax, [esp+8Ch+lpuexcpt] ",gcc,1
"loc_401FFD:   | * | mov [esp+8Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+8Ch+lpuexcpt]  | * | call ___cxa_begin_catch ",gcc,1
"mov [esp+8Ch+lpfctx], eax   | * | call ___cxa_get_globals_fast ",gcc,1
"call ___cxa_begin_catch  | * | mov eax, [eax] ",gcc,1
"call ___cxa_get_globals_fast  | * | lea edx, [eax+50h] ",gcc,1
"mov eax, [eax]  | * | mov [esp+8Ch+lpuexcpt], edx ",gcc,1
"lea edx, [eax+50h]  | * | test byte ptr [eax+30h], 1 ",gcc,1
"mov [esp+8Ch+lpuexcpt], edx  | * | jz short loc_402023 ",gcc,1
"test byte ptr [eax+30h], 1  | * | mov eax, [eax] ",gcc,1
"jz short loc_402023  | * | mov [esp+8Ch+lpuexcpt], eax ",gcc,1
"mov eax, [eax]  | * | loc_402023:  ",gcc,1
"mov [esp+8Ch+lpuexcpt], eax  | * | mov [esp+8Ch+fctx.call_site], 2 ",gcc,1
"loc_402023:   | * | lea ecx, [esp+8Ch+var_24] ",gcc,1
"mov [esp+8Ch+fctx.call_site], 2  | * | mov edx, [esp+8Ch+var_68] ",gcc,1
"lea ecx, [esp+8Ch+var_24]  | * | xor eax, eax ",gcc,1
"mov edx, [esp+8Ch+var_68]  | * | call __ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info  ",gcc,1
"xor eax, eax  | * | mov eax, [esp+8Ch+lpuexcpt] ",gcc,1
"call __ZL17parse_lsda_headerP15_Unwind_ContextPKhP16lsda_header_info   | * | mov edx, [eax-50h] ",gcc,1
"mov eax, [esp+8Ch+lpuexcpt]  | * | mov eax, [esp+8Ch+var_6C] ",gcc,1
"mov edx, [eax-50h]  | * | mov [esp+8Ch+lpfctx], eax ",gcc,1
"mov eax, [esp+8Ch+var_6C]  | * | mov ecx, [esp+8Ch+lpuexcpt] ",gcc,1
"mov [esp+8Ch+lpfctx], eax  | * | lea eax, [esp+8Ch+var_24] ",gcc,1
"mov ecx, [esp+8Ch+lpuexcpt]  | * | call __ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl  ",gcc,1
"lea eax, [esp+8Ch+var_24]  | * | test al, al ",gcc,2
call __ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl   | * | jz short loc_402084 ,gcc,1
"test al, al  | * | call ___cxa_rethrow ",gcc,1
jz short loc_402084  | * | loc_40205E:  ,gcc,1
"call ___cxa_rethrow  | * | mov [esp+8Ch+fctx.call_site], 0 ",gcc,1
loc_40205E:   | * | call ___cxa_end_catch ,gcc,1
"mov [esp+8Ch+fctx.call_site], 0  | * | call ___cxa_end_catch ",gcc,1
"call ___cxa_end_catch  | * | mov eax, [esp+8Ch+lpuexcpt] ",gcc,1
"call ___cxa_end_catch  | * | mov [esp+8Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+8Ch+lpuexcpt]  | * | mov [esp+8Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+8Ch+lpfctx], eax   | * | call __Unwind_SjLj_Resume ",gcc,1
"mov [esp+8Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402084:  ",gcc,1
"call __Unwind_SjLj_Resume  | * | mov edx, [esp+8Ch+var_6C] ",gcc,1
"loc_402084:   | * | mov [esp+8Ch+lpfctx], edx ",gcc,1
"mov edx, [esp+8Ch+var_6C]  | * | mov [esp+8Ch+fctx.call_site], 2 ",gcc,1
"mov [esp+8Ch+lpfctx], edx  | * | xor ecx, ecx ",gcc,1
"mov [esp+8Ch+fctx.call_site], 2  | * | mov edx, offset __ZTISt13bad_exception  ",gcc,1
"xor ecx, ecx  | * | lea eax, [esp+8Ch+var_24] ",gcc,1
"mov edx, offset __ZTISt13bad_exception   | * | call __ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl  ",gcc,1
call __ZL20check_exception_specP16lsda_header_infoPKSt9type_infoPvl   | * | jz short loc_4020D1 ,gcc,1
"test al, al  | * | mov [esp+8Ch+lpfctx], 4  ",gcc,1
jz short loc_4020D1  | * | call ___cxa_allocate_exception ,gcc,1
"mov [esp+8Ch+lpfctx], 4   | * | mov dword ptr [eax], offset off_416460 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+8Ch+var_84], offset __ZNSt13bad_exceptionD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416460  | * | mov [esp+8Ch+lptinfo], offset __ZTISt13bad_exception  ",gcc,1
"mov [esp+8Ch+var_84], offset __ZNSt13bad_exceptionD1Ev   | * | mov [esp+8Ch+lpfctx], eax  ",gcc,1
"mov [esp+8Ch+lptinfo], offset __ZTISt13bad_exception   | * | call ___cxa_throw ",gcc,1
"mov [esp+8Ch+lpfctx], eax   | * | loc_4020D1:  ",gcc,1
"call ___cxa_throw  | * | mov eax, [esp+8Ch+var_64] ",gcc,1
"loc_4020D1:   | * | mov [esp+8Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+8Ch+var_64]  | * | call __ZN10__cxxabiv111__terminateEPFvvE  ",gcc,1
"mov [esp+8Ch+lpfctx], eax   | * | ___cxa_call_unexpected endp ",gcc,1
call __ZN10__cxxabiv111__terminateEPFvvE   | * | align 10h ,gcc,1
___cxa_call_unexpected endp  | * | __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ proc near ,gcc,1
align 10h  | * | push ebx ,gcc,1
"__ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ proc near  | * | mov ecx, [eax+0Ch] ",gcc,1
"push ebx  | * | mov ebx, [ecx+8] ",gcc,1
"mov ecx, [eax+0Ch]  | * | mov [eax+0Ch], ebx ",gcc,1
"mov ebx, [ecx+8]  | * | test ebx, ebx ",gcc,1
"mov [eax+0Ch], ebx  | * | jz short loc_4020F1 ",gcc,1
"test ebx, ebx  | * | mov [ebx+4], eax ",gcc,2
jz short loc_4020F1  | * | loc_4020F1:  ,gcc,1
"mov [ebx+4], eax  | * | mov ebx, [eax+4] ",gcc,2
"loc_4020F1:   | * | mov [ecx+4], ebx ",gcc,1
"mov ebx, [eax+4]  | * | cmp [edx], eax ",gcc,2
"mov [ecx+4], ebx  | * | jz short loc_402110 ",gcc,1
"cmp [edx], eax  | * | mov edx, [eax+4] ",gcc,2
"jz short loc_402110  | * | cmp [edx+8], eax ",gcc,1
"mov edx, [eax+4]  | * | jz short loc_40211C ",gcc,1
"cmp [edx+8], eax  | * | mov [edx+0Ch], ecx ",gcc,1
jz short loc_40211C  | * | loc_402106:  ,gcc,1
"mov [edx+0Ch], ecx  | * | mov [ecx+8], eax ",gcc,1
"loc_402106:   | * | mov [eax+4], ecx ",gcc,1
"mov [ecx+8], eax  | * | pop ebx ",gcc,2
"mov [eax+4], ecx  | * | retn ",gcc,4
retn  | * | loc_402110:  ,gcc,1
"align 10h  | * | mov [edx], ecx ",gcc,1
"loc_402110:   | * | mov [ecx+8], eax ",gcc,1
"mov [edx], ecx  | * | mov [eax+4], ecx ",gcc,2
pop ebx  | * | align 4 ,gcc,17
retn  | * | loc_40211C:  ,gcc,1
"align 4  | * | mov [edx+8], ecx ",gcc,1
loc_40211C:   | * | jmp short loc_402106 ,gcc,1
"mov [edx+8], ecx  | * | __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ endp ",gcc,1
jmp short loc_402106  | * | align 4 ,gcc,1
__ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ endp  | * | __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ proc near ,gcc,1
align 4  | * | push ebx ,gcc,2
"__ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ proc near  | * | mov ecx, [eax+8] ",gcc,1
"push ebx  | * | mov ebx, [ecx+0Ch] ",gcc,1
"mov ecx, [eax+8]  | * | mov [eax+8], ebx ",gcc,1
"mov ebx, [ecx+0Ch]  | * | test ebx, ebx ",gcc,1
"mov [eax+8], ebx  | * | jz short loc_402135 ",gcc,1
jz short loc_402135  | * | loc_402135:  ,gcc,1
"loc_402135:   | * | mov [ecx+4], ebx ",gcc,1
"mov [ecx+4], ebx  | * | jz short loc_402154 ",gcc,1
"jz short loc_402154  | * | cmp [edx+0Ch], eax ",gcc,1
"mov edx, [eax+4]  | * | jz short loc_402160 ",gcc,1
"cmp [edx+0Ch], eax  | * | mov [edx+8], ecx ",gcc,1
jz short loc_402160  | * | loc_40214A:  ,gcc,1
"mov [edx+8], ecx  | * | mov [ecx+0Ch], eax ",gcc,1
"loc_40214A:   | * | mov [eax+4], ecx ",gcc,1
"mov [ecx+0Ch], eax  | * | pop ebx ",gcc,2
retn  | * | loc_402154:  ,gcc,1
"align 4  | * | mov [edx], ecx ",gcc,1
"loc_402154:   | * | mov [ecx+0Ch], eax ",gcc,1
retn  | * | loc_402160:  ,gcc,1
"align 10h  | * | mov [edx+0Ch], ecx ",gcc,1
loc_402160:   | * | jmp short loc_40214A ,gcc,1
"mov [edx+0Ch], ecx  | * | __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ endp ",gcc,1
jmp short loc_40214A  | * | align 4 ,gcc,1
__ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ endp  | * | __ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base proc near ,gcc,1
"align 4  | * | mov edx, [eax] ",gcc,2
"__ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base proc near  | * | test edx, edx ",gcc,1
"mov edx, [eax]  | * | jnz short loc_402178 ",gcc,1
"test edx, edx  | * | mov edx, [eax+4] ",gcc,1
"jnz short loc_402178  | * | mov edx, [edx+4] ",gcc,1
"mov edx, [eax+4]  | * | cmp edx, eax ",gcc,1
"mov edx, [edx+4]  | * | jz short loc_402190 ",gcc,1
"cmp edx, eax  | * | loc_402178:  ",gcc,1
"jz short loc_402190  | * | mov ecx, [eax+8] ",gcc,1
"loc_402178:   | * | test ecx, ecx ",gcc,1
"mov ecx, [eax+8]  | * | jnz short loc_402186 ",gcc,1
"test ecx, ecx  | * | jmp short loc_402194 ",gcc,1
jnz short loc_402186  | * | align 4 ,gcc,1
jmp short loc_402194  | * | loc_402184:  ,gcc,1
"align 4  | * | mov ecx, edx ",gcc,1
loc_402184:   | * | loc_402186:  ,gcc,1
"mov ecx, edx  | * | mov edx, [ecx+0Ch] ",gcc,1
"loc_402186:   | * | test edx, edx ",gcc,1
"mov edx, [ecx+0Ch]  | * | jnz short loc_402184 ",gcc,1
"test edx, edx  | * | mov eax, ecx ",gcc,1
jnz short loc_402184  | * | retn ,gcc,1
"mov eax, ecx  | * | loc_402190:  ",gcc,1
"retn  | * | mov eax, [edx+0Ch] ",gcc,1
loc_402190:   | * | retn ,gcc,1
"mov eax, [edx+0Ch]  | * | loc_402194:  ",gcc,1
"retn  | * | mov edx, [eax+4] ",gcc,2
"loc_402194:   | * | cmp eax, [edx+8] ",gcc,1
"mov edx, [eax+4]  | * | jz short loc_4021A2 ",gcc,1
"cmp eax, [edx+8]  | * | jmp short loc_4021AB ",gcc,1
jz short loc_4021A2  | * | align 10h ,gcc,1
jmp short loc_4021AB  | * | loc_4021A0:  ,gcc,1
"align 10h  | * | mov edx, eax ",gcc,3
loc_4021A0:   | * | loc_4021A2:  ,gcc,1
"mov edx, eax  | * | mov eax, [edx+4] ",gcc,3
"loc_4021A2:   | * | cmp [eax+8], edx ",gcc,1
"mov eax, [edx+4]  | * | jz short loc_4021A0 ",gcc,1
"cmp [eax+8], edx  | * | retn ",gcc,1
jz short loc_4021A0  | * | loc_4021AB:  ,gcc,1
"retn  | * | mov eax, edx ",gcc,3
loc_4021AB:   | * | retn ,gcc,1
"mov eax, edx  | * | __ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base endp ",gcc,1
retn  | * | align 10h ,gcc,37
__ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base endp  | * | public __ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base ,gcc,1
align 10h  | * | __ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base proc near ,gcc,1
"__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base proc near  | * | mov ecx, [esp+arg_0] ",gcc,1
"mov ecx, [esp+arg_0]  | * | test eax, eax ",gcc,2
"mov eax, [ecx+0Ch]  | * | jnz short loc_4021C2 ",gcc,1
"test eax, eax  | * | jmp short loc_4021CA ",gcc,1
jnz short loc_4021C2  | * | align 10h ,gcc,1
jmp short loc_4021CA  | * | loc_4021C0:  ,gcc,1
"align 10h  | * | mov eax, edx ",gcc,1
loc_4021C0:   | * | loc_4021C2:  ,gcc,1
"mov eax, edx  | * | mov edx, [eax+8] ",gcc,2
"loc_4021C2:   | * | test edx, edx ",gcc,1
"mov edx, [eax+8]  | * | jnz short loc_4021C0 ",gcc,1
"test edx, edx  | * | retn ",gcc,2
jnz short loc_4021C0  | * | loc_4021CA:  ,gcc,1
"retn  | * | mov edx, [ecx+4] ",gcc,2
"loc_4021CA:   | * | cmp ecx, [edx+0Ch] ",gcc,1
"mov edx, [ecx+4]  | * | jz short loc_4021D6 ",gcc,1
"cmp ecx, [edx+0Ch]  | * | jmp short loc_4021E4 ",gcc,1
jz short loc_4021D6  | * | loc_4021D4:  ,gcc,1
"jmp short loc_4021E4  | * | mov edx, eax ",gcc,1
loc_4021D4:   | * | loc_4021D6:  ,gcc,1
"loc_4021D6:   | * | cmp [eax+0Ch], edx ",gcc,1
"mov eax, [edx+4]  | * | jz short loc_4021D4 ",gcc,1
"cmp [eax+0Ch], edx  | * | cmp eax, [edx+0Ch] ",gcc,2
jz short loc_4021D4  | * | jz short loc_4021E4 ,gcc,1
"cmp eax, [edx+0Ch]  | * | retn ",gcc,2
jz short loc_4021E4  | * | loc_4021E4:  ,gcc,1
loc_4021E4:   | * | retn ,gcc,1
"mov eax, edx  | * | __ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base endp ",gcc,1
__ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base endp  | * | public __ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base ,gcc,1
align 4  | * | __ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base proc near ,gcc,1
"__ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base proc near  | * | mov ecx, [esp+arg_0] ",gcc,1
"mov eax, [ecx+0Ch]  | * | jnz short loc_4021FA ",gcc,1
"test eax, eax  | * | jmp short loc_402202 ",gcc,1
jnz short loc_4021FA  | * | align 4 ,gcc,1
jmp short loc_402202  | * | loc_4021F8:  ,gcc,1
"align 4  | * | mov eax, edx ",gcc,1
loc_4021F8:   | * | loc_4021FA:  ,gcc,1
"loc_4021FA:   | * | test edx, edx ",gcc,1
"mov edx, [eax+8]  | * | jnz short loc_4021F8 ",gcc,1
jnz short loc_4021F8  | * | loc_402202:  ,gcc,1
"loc_402202:   | * | cmp ecx, [edx+0Ch] ",gcc,1
"mov edx, [ecx+4]  | * | jz short loc_40220E ",gcc,1
"cmp ecx, [edx+0Ch]  | * | jmp short loc_40221C ",gcc,1
jz short loc_40220E  | * | loc_40220C:  ,gcc,1
"jmp short loc_40221C  | * | mov edx, eax ",gcc,1
loc_40220C:   | * | loc_40220E:  ,gcc,1
"loc_40220E:   | * | cmp [eax+0Ch], edx ",gcc,1
"mov eax, [edx+4]  | * | jz short loc_40220C ",gcc,1
jz short loc_40220C  | * | jz short loc_40221C ,gcc,1
jz short loc_40221C  | * | loc_40221C:  ,gcc,1
loc_40221C:   | * | retn ,gcc,1
"mov eax, edx  | * | __ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base endp ",gcc,1
__ZSt18_Rb_tree_incrementPKSt18_Rb_tree_node_base endp  | * | public __ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base ,gcc,1
align 10h  | * | __ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base proc near ,gcc,1
"__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base proc near  | * | mov eax, [esp+arg_0] ",gcc,1
"mov eax, [esp+arg_0]  | * | __ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base endp ",gcc,1
jmp __ZStL23local_Rb_tree_decrementPSt18_Rb_tree_node_base   | * | align 4 ,gcc,2
__ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base endp  | * | public __ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base ,gcc,1
align 4  | * | __ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base proc near ,gcc,1
"__ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base proc near  | * | mov eax, [esp+arg_0] ",gcc,1
"mov eax, [esp+arg_0]  | * | __ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base endp ",gcc,1
__ZSt18_Rb_tree_decrementPKSt18_Rb_tree_node_base endp  | * | public __ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ ,gcc,1
align 4  | * | __ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ proc near ,gcc,1
"mov edx, [esp+arg_4]  | * | jmp __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov eax, [esp+arg_0]  | * | __ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ endp ",gcc,1
jmp __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_   | * | align 4 ,gcc,1
__ZSt20_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_ endp  | * | public __ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ ,gcc,1
align 4  | * | __ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ proc near ,gcc,1
"mov edx, [esp+arg_4]  | * | jmp __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov eax, [esp+arg_0]  | * | __ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ endp ",gcc,1
jmp __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_   | * | align 4 ,gcc,1
__ZSt21_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_ endp  | * | public __ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ ,gcc,1
align 4  | * | __ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ proc near ,gcc,1
var_14 = dword ptr -14h  | * | arg_4 = dword ptr 8 ,data,30
arg_0 = byte ptr 4  | * | arg_8 = dword ptr 0Ch ,data,1
push esi  | * | push eax ,gcc,2
"push ebx  | * | mov esi, [esp+14h+arg_4] ",gcc,1
"push eax  | * | mov eax, [esp+14h+arg_8] ",gcc,1
"mov esi, [esp+14h+arg_4]  | * | mov edi, [esp+14h+arg_C] ",gcc,1
"mov eax, [esp+14h+arg_8]  | * | lea ebp, [edi+4] ",gcc,1
"mov edi, [esp+14h+arg_C]  | * | mov [esi+4], eax ",gcc,1
"lea ebp, [edi+4]  | * | mov dword ptr [esi+8], 0 ",gcc,1
"mov [esi+4], eax  | * | mov dword ptr [esi+0Ch], 0 ",gcc,1
"mov dword ptr [esi+8], 0  | * | mov dword ptr [esi], 0 ",gcc,1
"mov dword ptr [esi+0Ch], 0  | * | cmp [esp+14h+arg_0], 0 ",gcc,1
"mov dword ptr [esi], 0  | * | jz short loc_4022E8 ",gcc,1
"cmp [esp+14h+arg_0], 0  | * | mov [eax+8], esi ",gcc,1
"jz short loc_4022E8  | * | cmp eax, edi ",gcc,1
"mov [eax+8], esi  | * | jz loc_40235A ",gcc,1
"cmp eax, edi  | * | cmp [edi+8], eax ",gcc,1
jz loc_40235A  | * | jz loc_402365 ,gcc,1
"cmp [edi+8], eax  | * | xchg ax, ax ",gcc,1
jz loc_402365  | * | loc_4022A0:  ,gcc,1
"xchg ax, ax  | * | mov edx, [edi+4] ",gcc,1
loc_4022A0:   | * | loc_4022A3:  ,gcc,1
"mov edx, [edi+4]  | * | cmp esi, edx ",gcc,1
loc_4022A3:   | * | jz short loc_4022DC ,gcc,1
"cmp esi, edx  | * | loc_4022A7:  ",gcc,1
"jz short loc_4022DC  | * | mov ebx, [esi+4] ",gcc,1
"loc_4022A7:   | * | mov eax, [ebx] ",gcc,1
"mov ebx, [esi+4]  | * | test eax, eax ",gcc,1
"mov eax, [ebx]  | * | jnz short loc_4022DC ",gcc,1
"test eax, eax  | * | mov ecx, [ebx+4] ",gcc,2
"jnz short loc_4022DC  | * | mov eax, [ecx+8] ",gcc,1
"mov ecx, [ebx+4]  | * | cmp ebx, eax ",gcc,1
"mov eax, [ecx+8]  | * | jz short loc_402314 ",gcc,1
"cmp ebx, eax  | * | test eax, eax ",gcc,1
jz short loc_402314  | * | jz short loc_4022F8 ,gcc,1
"test eax, eax  | * | cmp dword ptr [eax], 0 ",gcc,2
jz short loc_4022F8  | * | jnz short loc_4022F8 ,gcc,1
"cmp dword ptr [eax], 0  | * | loc_4022C3:  ",gcc,1
"jnz short loc_4022F8  | * | mov dword ptr [ebx], 1 ",gcc,1
"loc_4022C3:   | * | mov dword ptr [eax], 1 ",gcc,1
"mov dword ptr [ebx], 1  | * | mov dword ptr [ecx], 0 ",gcc,1
"mov dword ptr [eax], 1  | * | mov esi, ecx ",gcc,1
"mov dword ptr [ecx], 0  | * | cmp esi, edx ",gcc,1
"mov esi, ecx  | * | jnz short loc_4022A7 ",gcc,1
"cmp esi, edx  | * | nop ",gcc,1
jnz short loc_4022A7  | * | loc_4022DC:  ,gcc,1
"nop  | * | mov dword ptr [edx], 1 ",gcc,1
loc_4022DC:   | * | pop ecx ,gcc,1
"mov dword ptr [edx], 1  | * | pop ebx ",gcc,1
pop ebp  | * | loc_4022E8:  ,gcc,1
"retn  | * | mov [eax+0Ch], esi ",gcc,1
"loc_4022E8:   | * | cmp [edi+0Ch], eax ",gcc,1
"mov [eax+0Ch], esi  | * | jnz short loc_4022A0 ",gcc,1
"cmp [edi+0Ch], eax  | * | mov [edi+0Ch], esi ",gcc,1
jnz short loc_4022A0  | * | jmp short loc_4022A0 ,gcc,1
"mov [edi+0Ch], esi  | * | align 4 ",gcc,1
jmp short loc_4022A0  | * | loc_4022F8:  ,gcc,1
"align 4  | * | cmp [ebx+8], esi ",gcc,1
loc_4022F8:   | * | jz short loc_402344 ,gcc,1
"cmp [ebx+8], esi  | * | loc_4022FD:  ",gcc,1
"jz short loc_402344  | * | mov dword ptr [ebx], 1 ",gcc,1
"loc_4022FD:   | * | mov dword ptr [ecx], 0 ",gcc,1
"mov dword ptr [ebx], 1  | * | mov edx, ebp ",gcc,2
"mov dword ptr [ecx], 0  | * | mov eax, ecx ",gcc,2
"mov edx, ebp  | * | call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov eax, ecx  | * | jmp short loc_4022A0 ",gcc,1
call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_   | * | loc_402314:  ,gcc,1
"jmp short loc_4022A0  | * | mov eax, [ecx+0Ch] ",gcc,1
"loc_402314:   | * | test eax, eax ",gcc,1
"mov eax, [ecx+0Ch]  | * | jz short loc_402320 ",gcc,1
jz short loc_402320  | * | jz short loc_4022C3 ,gcc,1
"cmp dword ptr [eax], 0  | * | loc_402320:  ",gcc,1
"jz short loc_4022C3  | * | cmp [ebx+0Ch], esi ",gcc,1
loc_402320:   | * | jz short loc_40236D ,gcc,1
"cmp [ebx+0Ch], esi  | * | loc_402325:  ",gcc,1
"jz short loc_40236D  | * | mov dword ptr [ebx], 1 ",gcc,1
"loc_402325:   | * | mov dword ptr [ecx], 0 ",gcc,1
"mov edx, ebp  | * | call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov eax, ecx  | * | mov edx, [edi+4] ",gcc,1
call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_   | * | jmp loc_4022A3 ,gcc,1
"mov edx, [edi+4]  | * | align 4 ",gcc,1
jmp loc_4022A3  | * | loc_402344:  ,gcc,1
"align 4  | * | mov edx, ebp ",gcc,1
"loc_402344:   | * | mov eax, ebx ",gcc,1
"mov edx, ebp  | * | mov [esp+14h+var_14], ecx ",gcc,2
"mov eax, ebx  | * | call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov [esp+14h+var_14], ecx  | * | mov esi, ebx ",gcc,2
"call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_   | * | mov ebx, [ebx+4] ",gcc,1
"mov esi, ebx  | * | mov ecx, [esp+14h+var_14] ",gcc,2
"mov ebx, [ebx+4]  | * | jmp short loc_4022FD ",gcc,1
"mov ecx, [esp+14h+var_14]  | * | loc_40235A:  ",gcc,1
"jmp short loc_4022FD  | * | mov [edi+4], esi ",gcc,1
"loc_40235A:   | * | mov [edi+0Ch], esi ",gcc,1
"mov [edi+4], esi  | * | jmp loc_4022A0 ",gcc,1
"mov [edi+0Ch], esi  | * | loc_402365:  ",gcc,1
"jmp loc_4022A0  | * | mov [edi+8], esi ",gcc,1
loc_402365:   | * | jmp loc_4022A0 ,gcc,1
"mov [edi+8], esi  | * | loc_40236D:  ",gcc,1
"jmp loc_4022A0  | * | mov edx, ebp ",gcc,1
"loc_40236D:   | * | mov eax, ebx ",gcc,1
"mov eax, ebx  | * | call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_   | * | mov ebx, [ebx+4] ",gcc,1
"mov ebx, [ebx+4]  | * | jmp short loc_402325 ",gcc,1
"mov ecx, [esp+14h+var_14]  | * | __ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ endp ",gcc,1
jmp short loc_402325  | * | align 4 ,gcc,1
__ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_ endp  | * | public __ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ ,gcc,1
align 4  | * | __ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ proc near ,gcc,1
var_18 = dword ptr -18h  | * | arg_0 = dword ptr 4 ,data,24
"push esi  | * | sub esp, 8 ",gcc,1
"push ebx  | * | mov eax, [esp+18h+arg_0] ",gcc,1
"sub esp, 8  | * | mov ecx, [esp+18h+arg_4] ",gcc,1
"mov eax, [esp+18h+arg_0]  | * | mov edx, [eax+8] ",gcc,1
"mov ecx, [esp+18h+arg_4]  | * | test edx, edx ",gcc,1
"mov edx, [eax+8]  | * | jz loc_402500 ",gcc,1
"test edx, edx  | * | mov ebx, [eax+0Ch] ",gcc,1
"jz loc_402500  | * | test ebx, ebx ",gcc,1
"mov ebx, [eax+0Ch]  | * | jz loc_402503 ",gcc,1
"test ebx, ebx  | * | mov ebp, ebx ",gcc,1
jz loc_402503  | * | jmp short loc_4023B2 ,gcc,1
"mov ebp, ebx  | * | align 10h ",gcc,1
jmp short loc_4023B2  | * | loc_4023B0:  ,gcc,1
"align 10h  | * | mov ebp, esi ",gcc,1
loc_4023B0:   | * | loc_4023B2:  ,gcc,1
"mov ebp, esi  | * | mov esi, [ebp+8] ",gcc,1
"loc_4023B2:   | * | test esi, esi ",gcc,1
"mov esi, [ebp+8]  | * | jnz short loc_4023B0 ",gcc,1
"test esi, esi  | * | mov edi, [ebp+0Ch] ",gcc,1
"jnz short loc_4023B0  | * | cmp ebp, eax ",gcc,1
"mov edi, [ebp+0Ch]  | * | jz loc_40268C ",gcc,1
"cmp ebp, eax  | * | mov [edx+4], ebp ",gcc,1
"jz loc_40268C  | * | mov [ebp+8], edx ",gcc,1
"mov [edx+4], ebp  | * | cmp ebx, ebp ",gcc,1
"mov [ebp+8], edx  | * | jz loc_4025B8 ",gcc,1
"cmp ebx, ebp  | * | mov esi, [ebp+4] ",gcc,1
"jz loc_4025B8  | * | test edi, edi ",gcc,1
"mov esi, [ebp+4]  | * | jz loc_4025C7 ",gcc,1
"test edi, edi  | * | mov [edi+4], esi ",gcc,1
"jz loc_4025C7  | * | mov edx, [ebp+4] ",gcc,1
"mov [edi+4], esi  | * | loc_4023E3:  ",gcc,1
"mov edx, [ebp+4]  | * | mov [edx+8], edi ",gcc,1
"loc_4023E3:   | * | mov [ebp+0Ch], ebx ",gcc,1
"mov [edx+8], edi  | * | mov edx, [eax+0Ch] ",gcc,1
"mov [ebp+0Ch], ebx  | * | mov [edx+4], ebp ",gcc,1
"mov edx, [eax+0Ch]  | * | loc_4023EF:  ",gcc,1
"mov [edx+4], ebp  | * | cmp [ecx+4], eax ",gcc,1
loc_4023EF:   | * | jz loc_4025AC ,gcc,1
"cmp [ecx+4], eax  | * | mov edx, [eax+4] ",gcc,1
"jz loc_4025AC  | * | cmp [edx+8], eax ",gcc,1
"mov edx, [eax+4]  | * | jz loc_4025BF ",gcc,1
"cmp [edx+8], eax  | * | mov [edx+0Ch], ebp ",gcc,1
jz loc_4025BF  | * | loc_402407:  ,gcc,1
"mov [edx+0Ch], ebp  | * | mov [ebp+4], edx ",gcc,1
"loc_402407:   | * | mov ebx, [ebp+0] ",gcc,1
"mov [ebp+4], edx  | * | mov edx, [eax] ",gcc,1
"mov ebx, [ebp+0]  | * | mov [ebp+0], edx ",gcc,1
"mov edx, [eax]  | * | mov [eax], ebx ",gcc,1
"mov [ebp+0], edx  | * | mov ebp, eax ",gcc,1
"mov [eax], ebx  | * | loc_402416:  ",gcc,1
"mov ebp, eax  | * | test ebx, ebx ",gcc,1
loc_402416:   | * | jz short loc_40243C ,gcc,1
"test ebx, ebx  | * | lea eax, [ecx+4] ",gcc,1
"jz short loc_40243C  | * | mov [esp+18h+var_14], eax ",gcc,1
"lea eax, [ecx+4]  | * | lea esi, [esi+0] ",gcc,1
"mov [esp+18h+var_14], eax  | * | loc_402424:  ",gcc,1
"lea esi, [esi+0]  | * | cmp [ecx+4], edi ",gcc,1
loc_402424:   | * | jz loc_402560 ,gcc,1
"cmp [ecx+4], edi  | * | test edi, edi ",gcc,1
jz loc_402560  | * | jz short loc_402448 ,gcc,1
"test edi, edi  | * | cmp dword ptr [edi], 1 ",gcc,2
jz short loc_402448  | * | jz short loc_402448 ,gcc,1
"cmp dword ptr [edi], 1  | * | loc_402436:  ",gcc,1
"jz short loc_402448  | * | mov dword ptr [edi], 1 ",gcc,1
loc_402436:   | * | loc_40243C:  ,gcc,1
"mov dword ptr [edi], 1  | * | mov eax, ebp ",gcc,1
"loc_40243C:   | * | add esp, 8 ",gcc,1
"mov eax, ebp  | * | pop ebx ",gcc,6
"add esp, 8  | * | pop esi ",gcc,1
retn  | * | loc_402448:  ,gcc,1
"align 4  | * | mov ebx, [esi+8] ",gcc,1
"loc_402448:   | * | cmp ebx, edi ",gcc,1
"mov ebx, [esi+8]  | * | jz short loc_4024A8 ",gcc,1
"cmp ebx, edi  | * | mov edx, [ebx] ",gcc,1
"jz short loc_4024A8  | * | test edx, edx ",gcc,1
"mov edx, [ebx]  | * | jz short loc_402484 ",gcc,1
"test edx, edx  | * | loc_402455:  ",gcc,1
"jz short loc_402484  | * | mov edx, [ebx+0Ch] ",gcc,1
"loc_402455:   | * | test edx, edx ",gcc,1
"mov edx, [ebx+0Ch]  | * | jz short loc_402465 ",gcc,1
"test edx, edx  | * | cmp dword ptr [edx], 1 ",gcc,3
jz short loc_402465  | * | jnz loc_402570 ,gcc,1
"cmp dword ptr [edx], 1  | * | loc_402465:  ",gcc,1
"jnz loc_402570  | * | mov eax, [ebx+8] ",gcc,1
"loc_402465:   | * | test eax, eax ",gcc,1
"mov eax, [ebx+8]  | * | jz short loc_402475 ",gcc,1
"test eax, eax  | * | cmp dword ptr [eax], 1 ",gcc,2
jz short loc_402475  | * | jnz loc_402544 ,gcc,1
"cmp dword ptr [eax], 1  | * | loc_402475:  ",gcc,1
"jnz loc_402544  | * | mov dword ptr [ebx], 0 ",gcc,1
"loc_402475:   | * | mov eax, [esi+4] ",gcc,1
"mov dword ptr [ebx], 0  | * | loc_40247E:  ",gcc,1
"mov eax, [esi+4]  | * | mov edi, esi ",gcc,1
"loc_40247E:   | * | mov esi, eax ",gcc,1
"mov edi, esi  | * | jmp short loc_402424 ",gcc,1
"mov esi, eax  | * | loc_402484:  ",gcc,1
"jmp short loc_402424  | * | mov dword ptr [ebx], 1 ",gcc,1
"loc_402484:   | * | mov dword ptr [esi], 0 ",gcc,1
"mov dword ptr [ebx], 1  | * | mov edx, [esp+18h+var_14] ",gcc,1
"mov dword ptr [esi], 0  | * | mov eax, esi ",gcc,2
"mov edx, [esp+18h+var_14]  | * | mov [esp+18h+var_18], ecx ",gcc,2
"mov eax, esi  | * | call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov [esp+18h+var_18], ecx  | * | mov ebx, [esi+8] ",gcc,1
"call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_   | * | mov ecx, [esp+18h+var_18] ",gcc,1
"mov ebx, [esi+8]  | * | jmp short loc_402455 ",gcc,1
"mov ecx, [esp+18h+var_18]  | * | align 4 ",gcc,1
jmp short loc_402455  | * | loc_4024A8:  ,gcc,1
"align 4  | * | mov eax, [esi+0Ch] ",gcc,1
"loc_4024A8:   | * | mov edi, [eax] ",gcc,1
"mov eax, [esi+0Ch]  | * | test edi, edi ",gcc,1
"mov edi, [eax]  | * | jz short loc_4024DC ",gcc,1
"test edi, edi  | * | loc_4024B1:  ",gcc,1
"jz short loc_4024DC  | * | mov edi, [eax+8] ",gcc,1
"loc_4024B1:   | * | test edi, edi ",gcc,1
"mov edi, [eax+8]  | * | jz short loc_4024C1 ",gcc,1
jz short loc_4024C1  | * | jnz loc_4025F0 ,gcc,1
"cmp dword ptr [edi], 1  | * | loc_4024C1:  ",gcc,1
"jnz loc_4025F0  | * | mov edx, [eax+0Ch] ",gcc,1
"loc_4024C1:   | * | test edx, edx ",gcc,1
"mov edx, [eax+0Ch]  | * | jz short loc_4024D1 ",gcc,1
jz short loc_4024D1  | * | jnz loc_4025CE ,gcc,1
"cmp dword ptr [edx], 1  | * | loc_4024D1:  ",gcc,1
"jnz loc_4025CE  | * | mov dword ptr [eax], 0 ",gcc,1
"loc_4024D1:   | * | mov eax, [esi+4] ",gcc,1
"mov dword ptr [eax], 0  | * | jmp short loc_40247E ",gcc,1
"mov eax, [esi+4]  | * | loc_4024DC:  ",gcc,1
"jmp short loc_40247E  | * | mov dword ptr [eax], 1 ",gcc,1
"loc_4024DC:   | * | mov dword ptr [esi], 0 ",gcc,1
"mov dword ptr [eax], 1  | * | mov edx, [esp+18h+var_14] ",gcc,2
"mov eax, esi  | * | call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov [esp+18h+var_18], ecx  | * | mov eax, [esi+0Ch] ",gcc,1
"call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_   | * | mov ecx, [esp+18h+var_18] ",gcc,1
"mov eax, [esi+0Ch]  | * | jmp short loc_4024B1 ",gcc,1
"mov ecx, [esp+18h+var_18]  | * | align 10h ",gcc,1
jmp short loc_4024B1  | * | loc_402500:  ,gcc,1
"align 10h  | * | mov edx, [eax+0Ch] ",gcc,1
loc_402500:   | * | loc_402503:  ,gcc,1
"mov edx, [eax+0Ch]  | * | mov ebp, eax ",gcc,1
loc_402503:   | * | loc_402505:  ,gcc,1
"mov ebp, eax  | * | mov esi, [ebp+4] ",gcc,1
"loc_402505:   | * | test edx, edx ",gcc,1
"mov esi, [ebp+4]  | * | jz short loc_40250F ",gcc,1
"test edx, edx  | * | mov [edx+4], esi ",gcc,1
jz short loc_40250F  | * | loc_40250F:  ,gcc,1
"mov [edx+4], esi  | * | cmp [ecx+4], eax ",gcc,1
loc_40250F:   | * | jz loc_402661 ,gcc,1
"cmp [ecx+4], eax  | * | mov ebx, [eax+4] ",gcc,1
"jz loc_402661  | * | cmp [ebx+8], eax ",gcc,1
"mov ebx, [eax+4]  | * | jz loc_402669 ",gcc,1
"cmp [ebx+8], eax  | * | mov [ebx+0Ch], edx ",gcc,1
jz loc_402669  | * | loc_402527:  ,gcc,1
"mov [ebx+0Ch], edx  | * | cmp [ecx+8], eax ",gcc,1
loc_402527:   | * | jz loc_402645 ,gcc,1
"cmp [ecx+8], eax  | * | loc_402530:  ",gcc,1
"jz loc_402645  | * | cmp [ecx+0Ch], eax ",gcc,1
loc_402530:   | * | jz loc_402627 ,gcc,1
"cmp [ecx+0Ch], eax  | * | loc_402539:  ",gcc,1
"jz loc_402627  | * | mov ebx, [ebp+0] ",gcc,1
"loc_402539:   | * | mov edi, edx ",gcc,1
"mov ebx, [ebp+0]  | * | jmp loc_402416 ",gcc,2
"mov edi, edx  | * | align 4 ",gcc,1
jmp loc_402416  | * | loc_402544:  ,gcc,1
"align 4  | * | mov edx, [esi] ",gcc,1
"loc_402544:   | * | mov [ebx], edx ",gcc,1
"mov edx, [esi]  | * | mov dword ptr [esi], 1 ",gcc,1
"mov [ebx], edx  | * | loc_40254E:  ",gcc,1
"mov dword ptr [esi], 1  | * | mov dword ptr [eax], 1 ",gcc,1
loc_40254E:   | * | loc_402554:  ,gcc,1
"loc_402554:   | * | mov eax, esi ",gcc,1
"mov edx, [esp+18h+var_14]  | * | call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov eax, esi  | * | nop ",gcc,1
call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_   | * | loc_402560:  ,gcc,1
"nop  | * | test edi, edi ",gcc,1
loc_402560:   | * | jz loc_40243C ,gcc,1
"test edi, edi  | * | jmp loc_402436 ",gcc,1
jz loc_40243C  | * | align 10h ,gcc,1
jmp loc_402436  | * | loc_402570:  ,gcc,1
"align 10h  | * | mov eax, [ebx+8] ",gcc,1
"loc_402570:   | * | test eax, eax ",gcc,1
"mov eax, [ebx+8]  | * | jz short loc_40257C ",gcc,1
jz short loc_40257C  | * | jnz short loc_402544 ,gcc,1
"cmp dword ptr [eax], 1  | * | loc_40257C:  ",gcc,1
"jnz short loc_402544  | * | mov dword ptr [edx], 1 ",gcc,1
"loc_40257C:   | * | mov dword ptr [ebx], 0 ",gcc,1
"mov dword ptr [edx], 1  | * | mov edx, [esp+18h+var_14] ",gcc,2
"mov dword ptr [ebx], 0  | * | mov eax, ebx ",gcc,1
"mov edx, [esp+18h+var_14]  | * | call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_  ",gcc,2
"mov eax, ebx  | * | mov edx, [esi+8] ",gcc,1
"call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_   | * | mov eax, [edx+8] ",gcc,1
"mov edx, [esi+8]  | * | mov ecx, [esi] ",gcc,1
"mov eax, [edx+8]  | * | mov [edx], ecx ",gcc,1
"mov ecx, [esi]  | * | mov dword ptr [esi], 1 ",gcc,3
"mov [edx], ecx  | * | test eax, eax ",gcc,1
"mov dword ptr [esi], 1  | * | jnz short loc_40254E ",gcc,1
"test eax, eax  | * | jmp short loc_402554 ",gcc,1
jnz short loc_40254E  | * | align 4 ,gcc,1
jmp short loc_402554  | * | loc_4025AC:  ,gcc,1
"align 4  | * | mov [ecx+4], ebp ",gcc,1
"loc_4025AC:   | * | mov edx, [eax+4] ",gcc,1
"mov [ecx+4], ebp  | * | jmp loc_402407 ",gcc,1
"mov edx, [eax+4]  | * | align 4 ",gcc,1
jmp loc_402407  | * | loc_4025B8:  ,gcc,1
"align 4  | * | mov esi, ebp ",gcc,1
loc_4025B8:   | * | jmp loc_4023EF ,gcc,1
"mov esi, ebp  | * | loc_4025BF:  ",gcc,1
"jmp loc_4023EF  | * | mov [edx+8], ebp ",gcc,1
loc_4025BF:   | * | jmp loc_402407 ,gcc,1
"mov [edx+8], ebp  | * | loc_4025C7:  ",gcc,1
"jmp loc_402407  | * | mov edx, esi ",gcc,1
loc_4025C7:   | * | jmp loc_4023E3 ,gcc,1
"mov edx, esi  | * | loc_4025CE:  ",gcc,1
"jmp loc_4023E3  | * | mov ecx, [esi] ",gcc,1
"loc_4025CE:   | * | mov [eax], ecx ",gcc,1
"mov [eax], ecx  | * | loc_4025D8:  ",gcc,1
"mov dword ptr [esi], 1  | * | mov dword ptr [edx], 1 ",gcc,1
loc_4025D8:   | * | loc_4025DE:  ,gcc,1
"loc_4025DE:   | * | mov eax, esi ",gcc,1
"mov eax, esi  | * | mov edi, ebx ",gcc,1
call __ZStL25local_Rb_tree_rotate_leftPSt18_Rb_tree_node_baseRS0_   | * | jmp loc_402560 ,gcc,1
"mov edi, ebx  | * | loc_4025F0:  ",gcc,1
"jmp loc_402560  | * | mov edx, [eax+0Ch] ",gcc,1
"loc_4025F0:   | * | test edx, edx ",gcc,1
"mov edx, [eax+0Ch]  | * | jz short loc_4025FC ",gcc,1
jz short loc_4025FC  | * | jnz short loc_4025CE ,gcc,1
"cmp dword ptr [edx], 1  | * | loc_4025FC:  ",gcc,1
"jnz short loc_4025CE  | * | mov dword ptr [edi], 1 ",gcc,1
"loc_4025FC:   | * | mov dword ptr [eax], 0 ",gcc,1
"mov dword ptr [edi], 1  | * | mov edx, [esp+18h+var_14] ",gcc,1
"mov dword ptr [eax], 0  | * | call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_  ",gcc,1
"mov edx, [esp+18h+var_14]  | * | mov eax, [esi+0Ch] ",gcc,1
"call __ZStL26local_Rb_tree_rotate_rightPSt18_Rb_tree_node_baseRS0_   | * | mov edx, [eax+0Ch] ",gcc,1
"mov eax, [esi+0Ch]  | * | mov ecx, [esi] ",gcc,1
"mov edx, [eax+0Ch]  | * | mov [eax], ecx ",gcc,1
"mov [eax], ecx  | * | test edx, edx ",gcc,1
"mov dword ptr [esi], 1  | * | jnz short loc_4025D8 ",gcc,1
"test edx, edx  | * | jmp short loc_4025DE ",gcc,1
jnz short loc_4025D8  | * | loc_402627:  ,gcc,1
"jmp short loc_4025DE  | * | mov ebx, [eax+8] ",gcc,1
"loc_402627:   | * | test ebx, ebx ",gcc,1
"mov ebx, [eax+8]  | * | jz short loc_40267C ",gcc,1
"test ebx, ebx  | * | mov ebx, edx ",gcc,1
jz short loc_40267C  | * | jmp short loc_402636 ,gcc,1
"mov ebx, edx  | * | align 4 ",gcc,1
jmp short loc_402636  | * | loc_402634:  ,gcc,1
"align 4  | * | mov ebx, eax ",gcc,2
loc_402634:   | * | loc_402636:  ,gcc,1
"mov ebx, eax  | * | mov eax, [ebx+0Ch] ",gcc,1
"loc_402636:   | * | test eax, eax ",gcc,1
"mov eax, [ebx+0Ch]  | * | jnz short loc_402634 ",gcc,1
"test eax, eax  | * | mov [ecx+0Ch], ebx ",gcc,1
jnz short loc_402634  | * | jmp loc_402539 ,gcc,1
"mov [ecx+0Ch], ebx  | * | loc_402645:  ",gcc,1
"jmp loc_402539  | * | mov edi, [eax+0Ch] ",gcc,1
"loc_402645:   | * | test edi, edi ",gcc,1
"mov edi, [eax+0Ch]  | * | jz short loc_402671 ",gcc,1
"test edi, edi  | * | mov edi, edx ",gcc,1
jz short loc_402671  | * | jmp short loc_402652 ,gcc,1
"mov edi, edx  | * | loc_402650:  ",gcc,1
"jmp short loc_402652  | * | mov edi, ebx ",gcc,1
loc_402650:   | * | loc_402652:  ,gcc,1
"mov edi, ebx  | * | mov ebx, [edi+8] ",gcc,1
"loc_402652:   | * | test ebx, ebx ",gcc,1
"mov ebx, [edi+8]  | * | jnz short loc_402650 ",gcc,1
"test ebx, ebx  | * | mov [ecx+8], edi ",gcc,1
jnz short loc_402650  | * | jmp loc_402530 ,gcc,1
"mov [ecx+8], edi  | * | loc_402661:  ",gcc,1
"jmp loc_402530  | * | mov [ecx+4], edx ",gcc,1
loc_402661:   | * | jmp loc_402527 ,gcc,1
"mov [ecx+4], edx  | * | loc_402669:  ",gcc,1
"jmp loc_402527  | * | mov [ebx+8], edx ",gcc,1
loc_402669:   | * | jmp loc_402527 ,gcc,1
"mov [ebx+8], edx  | * | loc_402671:  ",gcc,1
"jmp loc_402527  | * | mov ebx, [eax+4] ",gcc,1
"loc_402671:   | * | mov [ecx+8], ebx ",gcc,1
"mov ebx, [eax+4]  | * | jmp loc_402530 ",gcc,1
"mov [ecx+8], ebx  | * | loc_40267C:  ",gcc,1
"jmp loc_402530  | * | mov eax, [eax+4] ",gcc,1
"loc_40267C:   | * | mov [ecx+0Ch], eax ",gcc,1
"mov eax, [eax+4]  | * | mov ebx, [ebp+0] ",gcc,1
"mov [ecx+0Ch], eax  | * | mov edi, edx ",gcc,1
"mov edi, edx  | * | loc_40268C:  ",gcc,1
"jmp loc_402416  | * | mov edx, edi ",gcc,1
loc_40268C:   | * | jmp loc_402505 ,gcc,1
"mov edx, edi  | * | __ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ endp ",gcc,1
jmp loc_402505  | * | align 4 ,gcc,1
__ZSt28_Rb_tree_rebalance_for_erasePSt18_Rb_tree_node_baseRS_ endp  | * | public __ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_ ,gcc,1
align 4  | * | __ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_ proc near ,gcc,1
"mov edx, [esp+arg_0]  | * | xor eax, eax ",gcc,1
"mov ecx, [esp+arg_4]  | * | test edx, edx ",gcc,1
"xor eax, eax  | * | jnz short loc_4026AB ",gcc,1
"test edx, edx  | * | jmp short locret_4026B5 ",gcc,1
jnz short loc_4026AB  | * | loc_4026A4:  ,gcc,1
"jmp short locret_4026B5  | * | cmp edx, ecx ",gcc,1
loc_4026A4:   | * | jz short locret_4026B5 ,gcc,1
"cmp edx, ecx  | * | loc_4026A8:  ",gcc,1
"jz short locret_4026B5  | * | mov edx, [edx+4] ",gcc,1
loc_4026A8:   | * | loc_4026AB:  ,gcc,1
"mov edx, [edx+4]  | * | cmp dword ptr [edx], 1 ",gcc,1
loc_4026AB:   | * | jnz short loc_4026A4 ,gcc,1
"cmp dword ptr [edx], 1  | * | inc eax ",gcc,1
"jnz short loc_4026A4  | * | cmp edx, ecx ",gcc,1
inc eax  | * | jnz short loc_4026A8 ,gcc,1
"cmp edx, ecx  | * | locret_4026B5:  ",gcc,1
jnz short loc_4026A8  | * | retn ,gcc,1
locret_4026B5:   | * | __ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_ endp ,gcc,1
__ZSt20_Rb_tree_black_countPKSt18_Rb_tree_node_baseS1_ endp  | * | public __ZdlPv ,gcc,1
align 4  | * | __ZdlPv proc near  ,gcc,1
"__ZdlPv proc near   | * | mov eax, [esp+arg_0] ",gcc,1
"mov eax, [esp+arg_0]  | * | jz short locret_4026C8 ",gcc,1
"test eax, eax  | * | jmp _free ",gcc,1
jz short locret_4026C8  | * | align 4 ,gcc,1
jmp _free  | * | locret_4026C8:  ,gcc,1
align 4  | * | retn ,gcc,2
locret_4026C8:   | * | __ZdlPv endp ,gcc,1
__ZdlPv endp  | * | public __ZSt21__throw_bad_exceptionv ,gcc,1
align 4  | * | __ZSt21__throw_bad_exceptionv proc near ,gcc,1
thrown_size = dword ptr -1Ch  | * | var_14 = dword ptr -14h ,data,8
"sub esp, 1Ch  | * | call ___cxa_allocate_exception ",gcc,8
"mov [esp+1Ch+thrown_size], 4   | * | mov dword ptr [eax], offset off_416460 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+1Ch+var_14], offset __ZNSt13bad_exceptionD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416460  | * | mov [esp+1Ch+lptinfo], offset __ZTISt13bad_exception  ",gcc,1
"mov [esp+1Ch+var_14], offset __ZNSt13bad_exceptionD1Ev   | * | mov [esp+1Ch+thrown_size], eax  ",gcc,1
"mov [esp+1Ch+lptinfo], offset __ZTISt13bad_exception   | * | call ___cxa_throw ",gcc,1
"mov [esp+1Ch+thrown_size], eax   | * | __ZSt21__throw_bad_exceptionv endp ",gcc,1
call ___cxa_throw  | * | align 4 ,gcc,7
__ZSt21__throw_bad_exceptionv endp  | * | public __ZSt17__throw_bad_allocv ,gcc,1
align 4  | * | __ZSt17__throw_bad_allocv proc near  ,gcc,1
"mov [esp+1Ch+thrown_size], 4   | * | mov dword ptr [eax], offset off_416560 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+1Ch+var_14], offset __ZNSt9bad_allocD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416560  | * | mov [esp+1Ch+lptinfo], offset __ZTISt9bad_alloc  ",gcc,1
"mov [esp+1Ch+var_14], offset __ZNSt9bad_allocD1Ev   | * | mov [esp+1Ch+thrown_size], eax  ",gcc,1
"mov [esp+1Ch+lptinfo], offset __ZTISt9bad_alloc   | * | call ___cxa_throw ",gcc,1
"mov [esp+1Ch+thrown_size], eax   | * | __ZSt17__throw_bad_allocv endp ",gcc,1
__ZSt17__throw_bad_allocv endp  | * | public __ZSt16__throw_bad_castv ,gcc,1
align 4  | * | __ZSt16__throw_bad_castv proc near ,gcc,1
"mov [esp+1Ch+thrown_size], 4   | * | mov dword ptr [eax], offset off_416548 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+1Ch+var_14], offset __ZNSt8bad_castD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416548  | * | mov [esp+1Ch+lptinfo], offset __ZTISt8bad_cast  ",gcc,1
"mov [esp+1Ch+var_14], offset __ZNSt8bad_castD1Ev   | * | mov [esp+1Ch+thrown_size], eax  ",gcc,1
"mov [esp+1Ch+lptinfo], offset __ZTISt8bad_cast   | * | call ___cxa_throw ",gcc,1
"mov [esp+1Ch+thrown_size], eax   | * | __ZSt16__throw_bad_castv endp ",gcc,1
__ZSt16__throw_bad_castv endp  | * | public __ZSt18__throw_bad_typeidv ,gcc,1
align 4  | * | __ZSt18__throw_bad_typeidv proc near ,gcc,1
"mov [esp+1Ch+thrown_size], 4   | * | mov dword ptr [eax], offset off_416388 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+1Ch+var_14], offset __ZNSt10bad_typeidD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416388  | * | mov [esp+1Ch+lptinfo], offset __ZTISt10bad_typeid  ",gcc,1
"mov [esp+1Ch+var_14], offset __ZNSt10bad_typeidD1Ev   | * | mov [esp+1Ch+thrown_size], eax  ",gcc,1
"mov [esp+1Ch+lptinfo], offset __ZTISt10bad_typeid   | * | call ___cxa_throw ",gcc,1
"mov [esp+1Ch+thrown_size], eax   | * | __ZSt18__throw_bad_typeidv endp ",gcc,1
__ZSt18__throw_bad_typeidv endp  | * | public __ZSt19__throw_logic_errorPKc ,gcc,1
align 4  | * | __ZSt19__throw_logic_errorPKc proc near  ,gcc,1
lpfctx = dword ptr -6Ch  | * | var_64 = dword ptr -64h ,data,17
lptinfo = dword ptr -68h  | * | var_58 = dword ptr -58h ,data,10
var_64 = dword ptr -64h  | * | fctx = SjLj_Function_Context ptr -50h ,data,13
var_58 = dword ptr -58h  | * | var_2C = dword ptr -2Ch ,data,11
fctx = SjLj_Function_Context ptr -50h  | * | var_28 = dword ptr -28h ,data,19
var_2C = dword ptr -2Ch  | * | var_11 = byte ptr -11h ,data,11
var_28 = dword ptr -28h  | * | var_10 = byte ptr -10h ,data,10
var_11 = byte ptr -11h  | * | var_C = byte ptr -0Ch ,data,11
var_10 = byte ptr -10h  | * | arg_0 = dword ptr 4 ,data,10
var_C = byte ptr -0Ch  | * | arg_10 = dword ptr 14h ,data,13
arg_0 = dword ptr 4  | * | lpuexcpt = dword ptr 18h ,data,11
arg_10 = dword ptr 14h  | * | arg_1C = dword ptr 20h ,data,14
lpuexcpt = dword ptr 18h  | * | arg_20 = dword ptr 24h ,data,16
arg_1C = dword ptr 20h  | * | arg_58 = byte ptr 5Ch ,data,11
"push ebp  | * | mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,13
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_412270 ",gcc,1
"mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea eax, [esp+6Ch+var_C] ",gcc,14
"mov [esp+6Ch+fctx.lsda], offset dword_412270  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402839 ",gcc,1
"mov [esp+6Ch+fctx.jbuf], eax  | * | mov [esp+6Ch+var_28], esp ",gcc,17
"mov [esp+6Ch+var_2C], offset loc_402839  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+var_28], esp  | * | mov [esp+6Ch+lpfctx], eax  ",gcc,14
"lea eax, [esp+6Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,14
"mov [esp+6Ch+lpfctx], eax   | * | mov [esp+6Ch+lpfctx], 8  ",gcc,10
call __Unwind_SjLj_Register  | * | call ___cxa_allocate_exception ,gcc,13
"mov [esp+6Ch+lpfctx], 8   | * | mov [esp+6Ch+var_58], eax ",gcc,10
"call ___cxa_allocate_exception  | * | lea eax, [esp+6Ch+var_11] ",gcc,10
"mov [esp+6Ch+var_58], eax  | * | mov [esp+6Ch+lptinfo], eax  ",gcc,10
"lea eax, [esp+6Ch+var_11]  | * | mov eax, [esp+6Ch+arg_0] ",gcc,10
"mov [esp+6Ch+lptinfo], eax   | * | mov [esp+6Ch+lpfctx], eax ",gcc,10
"mov eax, [esp+6Ch+arg_0]  | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,10
"mov [esp+6Ch+lpfctx], eax  | * | lea ecx, [esp+6Ch+var_10] ",gcc,10
"mov [esp+6Ch+fctx.call_site], 1  | * | call __ZNSsC1EPKcRKSaIcE  ",gcc,11
"lea ecx, [esp+6Ch+var_10]  | * | sub esp, 8 ",gcc,10
"call __ZNSsC1EPKcRKSaIcE   | * | lea eax, [esp+6Ch+var_10] ",gcc,10
"sub esp, 8  | * | mov [esp+6Ch+lpfctx], eax  ",gcc,14
"lea eax, [esp+6Ch+var_10]  | * | mov [esp+6Ch+fctx.call_site], 2 ",gcc,9
"mov [esp+6Ch+lpfctx], eax   | * | mov ecx, [esp+6Ch+var_58] ",gcc,9
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt11logic_errorC1ERKSs  ",gcc,2
"mov ecx, [esp+6Ch+var_58]  | * | push eax  ",gcc,7
"call __ZNSt11logic_errorC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
push eax   | * | call __ZNSsD1Ev  ,gcc,7
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt11logic_errorD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt11logic_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt11logic_errorD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt11logic_error   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+6Ch+var_58]  | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,10
"mov [esp+6Ch+lpfctx], eax   | * | call ___cxa_throw ",gcc,11
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402839:  ",gcc,1
"call ___cxa_throw  | * | mov eax, [esp+arg_20] ",gcc,11
"loc_402839:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_20]  | * | mov eax, [esp+arg_1C] ",gcc,9
"mov [esp+lpuexcpt], eax  | * | test eax, eax ",gcc,9
"mov eax, [esp+arg_1C]  | * | jz short loc_402857 ",gcc,1
jz short loc_402857  | * | jz short loc_40284E ,gcc,1
jz short loc_40284E  | * | loc_40284E:  ,gcc,1
"ud2  | * | lea ecx, [esp+arg_58] ",gcc,10
loc_40284E:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402857:  ",gcc,1
"call __ZNSsD1Ev   | * | mov eax, [esp+arg_10] ",gcc,9
"loc_402857:   | * | mov [esp+0], eax  ",gcc,1
"mov eax, [esp+arg_10]  | * | call ___cxa_free_exception ",gcc,11
"mov [esp+0], eax   | * | mov eax, [esp+lpuexcpt] ",gcc,11
"call ___cxa_free_exception  | * | mov [esp+0], eax  ",gcc,11
"mov eax, [esp+lpuexcpt]  | * | mov [esp+arg_1C], 0FFFFFFFFh ",gcc,16
"mov [esp+0], eax   | * | call __Unwind_SjLj_Resume ",gcc,16
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt19__throw_logic_errorPKc endp ",gcc,1
call __Unwind_SjLj_Resume  | * | align 4 ,gcc,13
__ZSt19__throw_logic_errorPKc endp  | * | public __ZSt20__throw_domain_errorPKc ,gcc,1
align 4  | * | __ZSt20__throw_domain_errorPKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_412278 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_412278  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402925 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_402925  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt12domain_errorC1ERKSs  ",gcc,1
"mov ecx, [esp+6Ch+var_58]  | * | push edx  ",gcc,1
"call __ZNSt12domain_errorC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
push edx   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt12domain_errorD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt12domain_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt12domain_errorD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt12domain_error   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402925:  ",gcc,1
"loc_402925:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_402943 ",gcc,1
jz short loc_402943  | * | jz short loc_40293A ,gcc,1
jz short loc_40293A  | * | loc_40293A:  ,gcc,1
loc_40293A:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402943:  ",gcc,1
"loc_402943:   | * | mov [esp+0], eax  ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt20__throw_domain_errorPKc endp ",gcc,1
__ZSt20__throw_domain_errorPKc endp  | * | public __ZSt24__throw_invalid_argumentPKc ,gcc,1
align 4  | * | __ZSt24__throw_invalid_argumentPKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_412280 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_412280  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402A11 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_402A11  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt16invalid_argumentC1ERKSs  ",gcc,1
"mov ecx, [esp+6Ch+var_58]  | * | push ecx  ",gcc,1
"call __ZNSt16invalid_argumentC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
push ecx   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt16invalid_argumentD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt16invalid_argument  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt16invalid_argumentD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt16invalid_argument   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402A11:  ",gcc,1
"loc_402A11:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_402A2F ",gcc,1
jz short loc_402A2F  | * | jz short loc_402A26 ,gcc,1
jz short loc_402A26  | * | loc_402A26:  ,gcc,1
loc_402A26:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402A2F:  ",gcc,1
"loc_402A2F:   | * | mov [esp+0], eax  ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt24__throw_invalid_argumentPKc endp ",gcc,1
call __Unwind_SjLj_Resume  | * | align 10h ,gcc,3
__ZSt24__throw_invalid_argumentPKc endp  | * | public __ZSt20__throw_length_errorPKc ,gcc,1
align 10h  | * | __ZSt20__throw_length_errorPKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_412288 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_412288  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402AFD ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_402AFD  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt12length_errorC1ERKSs  ",gcc,1
"mov ecx, [esp+6Ch+var_58]  | * | push ebp  ",gcc,1
"call __ZNSt12length_errorC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
push ebp   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt12length_errorD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt12length_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt12length_errorD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt12length_error   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402AFD:  ",gcc,1
"loc_402AFD:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_402B1B ",gcc,1
jz short loc_402B1B  | * | jz short loc_402B12 ,gcc,1
jz short loc_402B12  | * | loc_402B12:  ,gcc,1
loc_402B12:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402B1B:  ",gcc,1
"loc_402B1B:   | * | mov [esp+0], eax  ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt20__throw_length_errorPKc endp ",gcc,1
__ZSt20__throw_length_errorPKc endp  | * | public __ZSt20__throw_out_of_rangePKc ,gcc,1
align 4  | * | __ZSt20__throw_out_of_rangePKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_412290 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_412290  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402BE9 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_402BE9  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt12out_of_rangeC1ERKSs  ",gcc,1
"call __ZNSt12out_of_rangeC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt12out_of_rangeD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt12out_of_range  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt12out_of_rangeD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt12out_of_range   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402BE9:  ",gcc,1
"loc_402BE9:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_402C07 ",gcc,1
jz short loc_402C07  | * | jz short loc_402BFE ,gcc,1
jz short loc_402BFE  | * | loc_402BFE:  ,gcc,1
loc_402BFE:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402C07:  ",gcc,1
"loc_402C07:   | * | mov [esp+0], eax  ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt20__throw_out_of_rangePKc endp ",gcc,1
__ZSt20__throw_out_of_rangePKc endp  | * | public __ZSt21__throw_runtime_errorPKc ,gcc,1
align 4  | * | __ZSt21__throw_runtime_errorPKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_412298 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_412298  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402CD5 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_402CD5  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt13runtime_errorC1ERKSs  ",gcc,2
"call __ZNSt13runtime_errorC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt13runtime_errorD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt13runtime_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt13runtime_errorD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt13runtime_error   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402CD5:  ",gcc,1
"loc_402CD5:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_402CF3 ",gcc,1
jz short loc_402CF3  | * | jz short loc_402CEA ,gcc,1
jz short loc_402CEA  | * | loc_402CEA:  ,gcc,1
loc_402CEA:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402CF3:  ",gcc,1
"loc_402CF3:   | * | mov [esp+0], eax  ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt21__throw_runtime_errorPKc endp ",gcc,1
__ZSt21__throw_runtime_errorPKc endp  | * | public __ZSt19__throw_range_errorPKc ,gcc,1
align 4  | * | __ZSt19__throw_range_errorPKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_4122A0 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4122A0  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402DC1 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_402DC1  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt11range_errorC1ERKSs  ",gcc,1
"call __ZNSt11range_errorC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt11range_errorD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt11range_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt11range_errorD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt11range_error   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402DC1:  ",gcc,1
"loc_402DC1:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_402DDF ",gcc,1
jz short loc_402DDF  | * | jz short loc_402DD6 ,gcc,1
jz short loc_402DD6  | * | loc_402DD6:  ,gcc,1
loc_402DD6:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402DDF:  ",gcc,1
"loc_402DDF:   | * | mov [esp+0], eax  ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt19__throw_range_errorPKc endp ",gcc,1
__ZSt19__throw_range_errorPKc endp  | * | public __ZSt22__throw_overflow_errorPKc ,gcc,1
align 10h  | * | __ZSt22__throw_overflow_errorPKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_4122A8 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4122A8  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402EAD ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_402EAD  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt14overflow_errorC1ERKSs  ",gcc,1
"call __ZNSt14overflow_errorC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt14overflow_errorD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt14overflow_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt14overflow_errorD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt14overflow_error   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402EAD:  ",gcc,1
"loc_402EAD:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_402ECB ",gcc,1
jz short loc_402ECB  | * | jz short loc_402EC2 ,gcc,1
jz short loc_402EC2  | * | loc_402EC2:  ,gcc,1
loc_402EC2:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402ECB:  ",gcc,1
"loc_402ECB:   | * | mov [esp+0], eax  ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt22__throw_overflow_errorPKc endp ",gcc,1
__ZSt22__throw_overflow_errorPKc endp  | * | public __ZSt23__throw_underflow_errorPKc ,gcc,1
align 4  | * | __ZSt23__throw_underflow_errorPKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_4122B0 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4122B0  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_402F99 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_402F99  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 2  | * | call __ZNSt15underflow_errorC1ERKSs  ",gcc,1
"call __ZNSt15underflow_errorC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt15underflow_errorD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTISt15underflow_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt15underflow_errorD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt15underflow_error   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_402F99:  ",gcc,1
"loc_402F99:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_402FB7 ",gcc,1
jz short loc_402FB7  | * | jz short loc_402FAE ,gcc,1
jz short loc_402FAE  | * | loc_402FAE:  ,gcc,1
loc_402FAE:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_402FB7:  ",gcc,1
"loc_402FB7:   | * | mov [esp+0], eax  ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt23__throw_underflow_errorPKc endp ",gcc,1
__ZSt23__throw_underflow_errorPKc endp  | * | public __ZSt19__throw_ios_failurePKc ,gcc,1
align 4  | * | __ZSt19__throw_ios_failurePKc proc near ,gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_4122B8 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4122B8  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_40307D ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_40307D  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"lea eax, [esp+6Ch+var_10]  | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | call __ZNSt8ios_base7failureC1ERKSs  ",gcc,1
"call __ZNSt8ios_base7failureC1ERKSs   | * | lea ecx, [esp+6Ch+var_10] ",gcc,1
"lea ecx, [esp+6Ch+var_10]  | * | mov [esp+6Ch+var_64], offset __ZNSt8ios_base7failureD1Ev  ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+6Ch+lptinfo], offset __ZTINSt8ios_base7failureE  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt8ios_base7failureD1Ev   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTINSt8ios_base7failureE   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_40307D:  ",gcc,1
"loc_40307D:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_20]  | * | mov eax, [esp+arg_10] ",gcc,2
"mov [esp+lpuexcpt], eax  | * | mov [esp+0], eax  ",gcc,2
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt19__throw_ios_failurePKc endp ",gcc,1
__ZSt19__throw_ios_failurePKc endp  | * | public __ZSt20__throw_system_errori ,gcc,1
align 4  | * | __ZSt20__throw_system_errori proc near ,gcc,1
lptinfo = dword ptr -68h  | * | var_5C = dword ptr -5Ch ,data,2
var_64 = dword ptr -64h  | * | lpuexcpt = dword ptr -58h ,data,1
var_5C = dword ptr -5Ch  | * | var_54 = dword ptr -54h ,data,5
lpuexcpt = dword ptr -58h  | * | fctx = SjLj_Function_Context ptr -50h ,data,1
var_54 = dword ptr -54h  | * | var_2C = dword ptr -2Ch ,data,7
var_2C = dword ptr -2Ch  | * | var_11 = dword ptr -11h ,data,1
var_28 = dword ptr -28h  | * | var_C = byte ptr -0Ch ,data,3
var_11 = dword ptr -11h  | * | arg_0 = dword ptr 4 ,data,3
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset word_4122BE ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset word_4122BE  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_4031B9 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_4031B9  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | mov [esp+6Ch+lpfctx], 10h  ",gcc,2
"mov [esp+6Ch+lpfctx], 10h   | * | mov [esp+6Ch+var_5C], eax ",gcc,2
call ___cxa_allocate_exception  | * | call __ZSt16generic_categoryv  ,gcc,1
"mov [esp+6Ch+var_5C], eax  | * | mov [esp+6Ch+lpuexcpt], eax ",gcc,1
"call __ZSt16generic_categoryv   | * | mov edx, eax ",gcc,1
"mov [esp+6Ch+lpuexcpt], eax  | * | mov eax, [eax] ",gcc,1
"mov edx, eax  | * | mov ecx, [esp+6Ch+arg_0] ",gcc,1
"mov eax, [eax]  | * | mov [esp+6Ch+lptinfo], ecx  ",gcc,1
"mov ecx, [esp+6Ch+arg_0]  | * | mov [esp+6Ch+lpfctx], edx ",gcc,1
"mov [esp+6Ch+lptinfo], ecx   | * | mov eax, [eax+0Ch] ",gcc,1
"mov [esp+6Ch+lpfctx], edx  | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov eax, [eax+0Ch]  | * | lea ecx, [esp+6Ch+var_11+1] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 1  | * | call eax ",gcc,1
"lea ecx, [esp+6Ch+var_11+1]  | * | sub esp, 8 ",gcc,4
"call eax  | * | lea eax, [esp+6Ch+var_11+1] ",gcc,1
"lea eax, [esp+6Ch+var_11+1]  | * | mov [esp+6Ch+fctx.call_site], 2 ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | mov ecx, [esp+6Ch+var_5C] ",gcc,1
"mov ecx, [esp+6Ch+var_5C]  | * | push ecx ",gcc,1
"call __ZNSt13runtime_errorC1ERKSs   | * | mov edx, [esp+6Ch+var_11+1] ",gcc,1
"push ecx  | * | mov [esp+6Ch+var_54], edx ",gcc,1
"mov edx, [esp+6Ch+var_11+1]  | * | mov ebp, ds:__CRT_MT ",gcc,1
"mov [esp+6Ch+var_54], edx  | * | test ebp, ebp ",gcc,1
"mov ebp, ds:__CRT_MT  | * | jnz short loc_40318C ",gcc,1
"test ebp, ebp  | * | mov ecx, [esp+6Ch+var_54] ",gcc,1
"jnz short loc_40318C  | * | mov eax, [ecx-4] ",gcc,1
"mov ecx, [esp+6Ch+var_54]  | * | lea edx, [eax-1] ",gcc,1
"mov eax, [ecx-4]  | * | mov [ecx-4], edx ",gcc,2
"lea edx, [eax-1]  | * | loc_403150:  ",gcc,1
"mov [ecx-4], edx  | * | test eax, eax ",gcc,3
loc_403150:   | * | jle short loc_4031A3 ,gcc,1
"test eax, eax  | * | loc_403154:  ",gcc,1
"jle short loc_4031A3  | * | mov eax, [esp+6Ch+var_5C] ",gcc,1
"loc_403154:   | * | mov dword ptr [eax], offset off_416448 ",gcc,1
"mov eax, [esp+6Ch+var_5C]  | * | mov edx, [esp+6Ch+arg_0] ",gcc,1
"mov dword ptr [eax], offset off_416448  | * | mov [eax+8], edx ",gcc,1
"mov edx, [esp+6Ch+arg_0]  | * | mov ecx, [esp+6Ch+lpuexcpt] ",gcc,1
"mov [eax+8], edx  | * | mov [eax+0Ch], ecx ",gcc,1
"mov ecx, [esp+6Ch+lpuexcpt]  | * | mov [esp+6Ch+var_64], offset __ZNSt12system_errorD1Ev  ",gcc,1
"mov [eax+0Ch], ecx  | * | mov [esp+6Ch+lptinfo], offset __ZTISt12system_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt12system_errorD1Ev   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt12system_error   | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_40318C:  ",gcc,1
"call ___cxa_throw  | * | mov [esp+6Ch+lptinfo], 0FFFFFFFFh  ",gcc,2
"loc_40318C:   | * | mov eax, edx ",gcc,1
"mov [esp+6Ch+lptinfo], 0FFFFFFFFh   | * | sub eax, 4 ",gcc,2
"mov eax, edx  | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"sub eax, 4  | * | call __ZN9__gnu_cxx18__exchange_and_addEPVii  ",gcc,4
"mov [esp+6Ch+lpfctx], eax   | * | jmp short loc_403150 ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | loc_4031A3:  ,gcc,1
"jmp short loc_403150  | * | mov ecx, [esp+6Ch+var_54] ",gcc,1
"loc_4031A3:   | * | sub ecx, 0Ch  ",gcc,1
"mov ecx, [esp+6Ch+var_54]  | * | lea eax, [esp+6Ch+var_11] ",gcc,2
"sub ecx, 0Ch   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,3
"lea eax, [esp+6Ch+var_11]  | * | call __ZNSs4_Rep10_M_destroyERKSaIcE  ",gcc,4
"mov [esp+6Ch+lpfctx], eax   | * | push edx  ",gcc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | jmp short loc_403154 ,gcc,1
push edx   | * | loc_4031B9:  ,gcc,1
"jmp short loc_403154  | * | mov eax, [esp+6Ch+fctx.data] ",gcc,1
"loc_4031B9:   | * | mov [esp+6Ch+lpuexcpt], eax ",gcc,1
"mov eax, [esp+6Ch+fctx.data]  | * | mov eax, [esp+6Ch+fctx.call_site] ",gcc,1
"mov [esp+6Ch+lpuexcpt], eax  | * | test eax, eax ",gcc,1
"mov eax, [esp+6Ch+fctx.call_site]  | * | jz short loc_4031D7 ",gcc,1
jz short loc_4031D7  | * | jz short loc_4031CE ,gcc,1
jz short loc_4031CE  | * | loc_4031CE:  ,gcc,1
"ud2  | * | lea ecx, [esp+6Ch+var_11+1] ",gcc,1
loc_4031CE:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+6Ch+var_11+1]  | * | loc_4031D7:  ",gcc,1
"call __ZNSsD1Ev   | * | mov eax, [esp+6Ch+var_5C] ",gcc,1
"loc_4031D7:   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+6Ch+var_5C]  | * | call ___cxa_free_exception ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | mov edx, [esp+6Ch+lpuexcpt] ",gcc,1
"call ___cxa_free_exception  | * | mov [esp+6Ch+lpfctx], edx  ",gcc,1
"mov edx, [esp+6Ch+lpuexcpt]  | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+6Ch+lpfctx], edx   | * | call __Unwind_SjLj_Resume ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | __ZSt20__throw_system_errori endp ",gcc,1
__ZSt20__throw_system_errori endp  | * | public __ZSt20__throw_future_errori ,gcc,1
align 4  | * | __ZSt20__throw_future_errori proc near ,gcc,1
var_64 = dword ptr -64h  | * | var_58 = dword ptr -58h ,data,1
var_58 = dword ptr -58h  | * | fctx = SjLj_Function_Context ptr -50h ,data,5
var_2C = dword ptr -2Ch  | * | var_12 = byte ptr -12h ,data,2
var_28 = dword ptr -28h  | * | var_11 = dword ptr -11h ,data,2
var_12 = byte ptr -12h  | * | var_C = byte ptr -0Ch ,data,2
var_C = byte ptr -0Ch  | * | arg_C = dword ptr 10h ,data,2
arg_0 = dword ptr 4  | * | lpuexcpt = dword ptr 14h ,data,1
arg_C = dword ptr 10h  | * | arg_1C = dword ptr 20h ,data,1
lpuexcpt = dword ptr 14h  | * | arg_20 = dword ptr 24h ,data,3
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset word_4122C6 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset word_4122C6  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_403310 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_403310  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
call ___cxa_allocate_exception  | * | call __ZSt15future_categoryv  ,gcc,1
"mov [esp+6Ch+var_5C], eax  | * | mov [esp+6Ch+var_54], eax ",gcc,1
"call __ZSt15future_categoryv   | * | lea eax, [esp+6Ch+var_12] ",gcc,1
"mov [esp+6Ch+var_54], eax  | * | mov [esp+6Ch+lptinfo], eax  ",gcc,1
"lea eax, [esp+6Ch+var_12]  | * | mov [esp+6Ch+lpfctx], offset aStdFutureError  ",gcc,1
"mov [esp+6Ch+lptinfo], eax   | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], offset aStdFutureError   | * | lea ecx, [esp+6Ch+var_11+1] ",gcc,1
"call __ZNSsC1EPKcRKSaIcE   | * | lea edx, [esp+6Ch+var_11+1] ",gcc,1
"sub esp, 8  | * | mov [esp+6Ch+lpfctx], edx  ",gcc,1
"lea edx, [esp+6Ch+var_11+1]  | * | mov [esp+6Ch+fctx.call_site], 2 ",gcc,1
"mov [esp+6Ch+lpfctx], edx   | * | mov ecx, [esp+6Ch+var_5C] ",gcc,1
"mov ecx, [esp+6Ch+var_5C]  | * | push eax ",gcc,1
"call __ZNSt11logic_errorC1ERKSs   | * | mov ecx, [esp+6Ch+var_11+1] ",gcc,1
"push eax  | * | mov [esp+6Ch+var_58], ecx ",gcc,1
"mov ecx, [esp+6Ch+var_11+1]  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov [esp+6Ch+var_58], ecx  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_4032E3 ",gcc,1
"test eax, eax  | * | mov edx, [esp+6Ch+var_58] ",gcc,1
"jnz short loc_4032E3  | * | mov eax, [edx-4] ",gcc,1
"mov edx, [esp+6Ch+var_58]  | * | lea edx, [eax-1] ",gcc,1
"mov eax, [edx-4]  | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
"lea edx, [eax-1]  | * | mov [ecx-4], edx ",gcc,2
"mov ecx, [esp+6Ch+var_58]  | * | loc_4032A3:  ",gcc,1
loc_4032A3:   | * | jle short loc_4032FA ,gcc,1
"test eax, eax  | * | loc_4032A7:  ",gcc,1
"jle short loc_4032FA  | * | mov eax, [esp+6Ch+var_5C] ",gcc,1
"loc_4032A7:   | * | mov dword ptr [eax], offset off_416400 ",gcc,1
"mov eax, [esp+6Ch+var_5C]  | * | mov eax, [esp+6Ch+arg_0] ",gcc,1
"mov dword ptr [eax], offset off_416400  | * | mov edx, [esp+6Ch+var_5C] ",gcc,1
"mov eax, [esp+6Ch+arg_0]  | * | mov [edx+8], eax ",gcc,1
"mov edx, [esp+6Ch+var_5C]  | * | mov eax, [esp+6Ch+var_54] ",gcc,1
"mov [edx+8], eax  | * | mov [edx+0Ch], eax ",gcc,1
"mov eax, [esp+6Ch+var_54]  | * | mov [esp+6Ch+var_64], offset __ZNSt12future_errorD1Ev  ",gcc,1
"mov [edx+0Ch], eax  | * | mov [esp+6Ch+lptinfo], offset __ZTISt12future_error  ",gcc,1
"mov [esp+6Ch+var_64], offset __ZNSt12future_errorD1Ev   | * | mov [esp+6Ch+lpfctx], edx  ",gcc,1
"mov [esp+6Ch+lptinfo], offset __ZTISt12future_error   | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+6Ch+lpfctx], edx   | * | call ___cxa_throw ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_4032E3:  ",gcc,1
"loc_4032E3:   | * | mov eax, ecx ",gcc,1
"mov eax, ecx  | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | jmp short loc_4032A3 ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | loc_4032FA:  ,gcc,1
"jmp short loc_4032A3  | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
"loc_4032FA:   | * | sub ecx, 0Ch  ",gcc,1
"mov ecx, [esp+6Ch+var_58]  | * | lea eax, [esp+6Ch+var_11] ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | push eax ",gcc,3
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | jmp short loc_4032A7 ,gcc,1
push eax  | * | loc_403310:  ,gcc,1
"jmp short loc_4032A7  | * | mov edx, [esp+arg_20] ",gcc,1
"loc_403310:   | * | mov [esp+lpuexcpt], edx ",gcc,1
"mov edx, [esp+arg_20]  | * | mov eax, [esp+arg_1C] ",gcc,1
"mov [esp+lpuexcpt], edx  | * | test eax, eax ",gcc,1
"mov eax, [esp+arg_1C]  | * | jz short loc_40332E ",gcc,1
jz short loc_40332E  | * | jz short loc_403325 ,gcc,1
jz short loc_403325  | * | loc_403325:  ,gcc,1
loc_403325:   | * | call __ZNSsD1Ev  ,gcc,1
"lea ecx, [esp+arg_58]  | * | loc_40332E:  ",gcc,1
"call __ZNSsD1Ev   | * | mov eax, [esp+arg_C] ",gcc,1
"loc_40332E:   | * | mov [esp+0], eax  ",gcc,1
"mov eax, [esp+arg_C]  | * | call ___cxa_free_exception ",gcc,1
"mov [esp+0], eax   | * | mov edx, [esp+lpuexcpt] ",gcc,1
"call ___cxa_free_exception  | * | mov [esp+0], edx  ",gcc,1
"mov edx, [esp+lpuexcpt]  | * | mov [esp+arg_1C], 0FFFFFFFFh ",gcc,3
"mov [esp+0], edx   | * | call __Unwind_SjLj_Resume ",gcc,4
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt20__throw_future_errori endp ",gcc,1
__ZSt20__throw_future_errori endp  | * | public __ZSt25__throw_bad_function_callv ,gcc,1
align 10h  | * | __ZSt25__throw_bad_function_callv proc near ,gcc,1
"mov [esp+1Ch+thrown_size], 4   | * | mov dword ptr [eax], offset off_416530 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+1Ch+var_14], offset __ZNSt17bad_function_callD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416530  | * | mov [esp+1Ch+lptinfo], offset __ZTISt17bad_function_call  ",gcc,1
"mov [esp+1Ch+var_14], offset __ZNSt17bad_function_callD1Ev   | * | mov [esp+1Ch+thrown_size], eax  ",gcc,1
"mov [esp+1Ch+lptinfo], offset __ZTISt17bad_function_call   | * | call ___cxa_throw ",gcc,1
"mov [esp+1Ch+thrown_size], eax   | * | __ZSt25__throw_bad_function_callv endp ",gcc,1
call ___cxa_throw  | * | align 10h ,gcc,1
__ZSt25__throw_bad_function_callv endp  | * | public __ZSt19__throw_regex_errorNSt15regex_constants10error_typeE ,gcc,1
align 10h  | * | __ZSt19__throw_regex_errorNSt15regex_constants10error_typeE proc near ,gcc,1
lpfctx = dword ptr -5Ch  | * | var_54 = dword ptr -54h ,data,8
lptinfo = dword ptr -58h  | * | var_48 = dword ptr -48h ,data,2
var_54 = dword ptr -54h  | * | fctx = SjLj_Function_Context ptr -40h ,data,7
var_48 = dword ptr -48h  | * | var_1C = dword ptr -1Ch ,data,3
fctx = SjLj_Function_Context ptr -40h  | * | var_18 = dword ptr -18h ,data,19
var_1C = dword ptr -1Ch  | * | var_C = byte ptr -0Ch ,data,19
"push ebp  | * | mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,14
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset word_4122CE ",gcc,1
"mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea eax, [esp+5Ch+var_C] ",gcc,19
"mov [esp+5Ch+fctx.lsda], offset word_4122CE  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_403401 ",gcc,1
"mov [esp+5Ch+fctx.jbuf], eax  | * | mov [esp+5Ch+var_18], esp ",gcc,19
"mov [esp+5Ch+var_1C], offset loc_403401  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+var_18], esp  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,13
"lea eax, [esp+5Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,13
"mov [esp+5Ch+lpfctx], eax   | * | mov [esp+5Ch+lpfctx], 0Ch  ",gcc,1
"mov [esp+5Ch+lpfctx], 0Ch   | * | mov [esp+5Ch+var_48], eax ",gcc,1
"call ___cxa_allocate_exception  | * | mov eax, [esp+5Ch+arg_0] ",gcc,1
"mov [esp+5Ch+var_48], eax  | * | mov [esp+5Ch+lpfctx], eax ",gcc,1
"mov eax, [esp+5Ch+arg_0]  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+5Ch+lpfctx], eax  | * | mov ecx, [esp+5Ch+var_48] ",gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | call __ZNSt11regex_errorC1ENSt15regex_constants10error_typeE  ",gcc,1
"mov ecx, [esp+5Ch+var_48]  | * | push eax ",gcc,1
"call __ZNSt11regex_errorC1ENSt15regex_constants10error_typeE   | * | mov [esp+5Ch+var_54], offset __ZNSt11regex_errorD1Ev  ",gcc,1
"push eax  | * | mov [esp+5Ch+lptinfo], offset __ZTISt11regex_error  ",gcc,1
"mov [esp+5Ch+var_54], offset __ZNSt11regex_errorD1Ev   | * | mov eax, [esp+5Ch+var_48] ",gcc,1
"mov [esp+5Ch+lptinfo], offset __ZTISt11regex_error   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+5Ch+var_48]  | * | mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | call ___cxa_throw ",gcc,2
"mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_403401:  ",gcc,1
"loc_403401:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZSt19__throw_regex_errorNSt15regex_constants10error_typeE endp ",gcc,1
__ZSt19__throw_regex_errorNSt15regex_constants10error_typeE endp  | * | public __Znwj ,gcc,1
align 4  | * | __Znwj proc near  ,gcc,1
lptinfo = dword ptr -58h  | * | var_44 = dword ptr -44h ,data,4
var_44 = dword ptr -44h  | * | var_1C = dword ptr -1Ch ,data,9
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_4122D4 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4122D4  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_4034E2 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_4034E2  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, [esp+5Ch+arg_0] ",gcc,4
"call __Unwind_SjLj_Register  | * | test eax, eax ",gcc,6
"mov eax, [esp+5Ch+arg_0]  | * | jnz short loc_403487 ",gcc,1
"test eax, eax  | * | mov [esp+5Ch+arg_0], 1 ",gcc,1
jnz short loc_403487  | * | jmp short loc_403487 ,gcc,1
"mov [esp+5Ch+arg_0], 1  | * | align 4 ",gcc,1
jmp short loc_403487  | * | loc_403474:  ,gcc,1
"align 4  | * | mov eax, ds:___new_handler ",gcc,1
"loc_403474:   | * | test eax, eax ",gcc,1
"mov eax, ds:___new_handler  | * | jz short loc_4034B0 ",gcc,1
"test eax, eax  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,3
jz short loc_4034B0  | * | call eax  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | loc_403487:  ",gcc,1
"call eax   | * | mov eax, [esp+5Ch+arg_0] ",gcc,1
"loc_403487:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+5Ch+arg_0]  | * | call _malloc ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov [esp+5Ch+var_44], eax ",gcc,1
"call _malloc  | * | test eax, eax ",gcc,4
"mov [esp+5Ch+var_44], eax  | * | jz short loc_403474 ",gcc,1
"test eax, eax  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"jz short loc_403474  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"lea eax, [esp+5Ch+fctx]  | * | call __Unwind_SjLj_Unregister ",gcc,15
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, [esp+5Ch+var_44] ",gcc,5
"call __Unwind_SjLj_Unregister  | * | add esp, 58h ",gcc,7
"mov eax, [esp+5Ch+var_44]  | * | pop ebp ",gcc,5
"add esp, 58h  | * | retn ",gcc,12
pop ebp  | * | loc_4034B0:  ,gcc,1
"retn  | * | mov [esp+5Ch+lpfctx], 4  ",gcc,1
loc_4034B0:   | * | call ___cxa_allocate_exception ,gcc,1
"mov [esp+5Ch+lpfctx], 4   | * | mov dword ptr [eax], offset off_416560 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+5Ch+var_54], offset __ZNSt9bad_allocD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416560  | * | mov [esp+5Ch+lptinfo], offset __ZTISt9bad_alloc  ",gcc,1
"mov [esp+5Ch+var_54], offset __ZNSt9bad_allocD1Ev   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov [esp+5Ch+lptinfo], offset __ZTISt9bad_alloc   | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | loc_4034E2:  ",gcc,1
"call ___cxa_throw  | * | mov eax, [esp+5Ch+fctx.data] ",gcc,1
"loc_4034E2:   | * | cmp [esp+5Ch+fctx.data+4], 0FFFFFFFFh ",gcc,1
"mov eax, [esp+5Ch+fctx.data]  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"cmp [esp+5Ch+fctx.data+4], 0FFFFFFFFh  | * | mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | jz short loc_4034FD ",gcc,1
"mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh  | * | call __Unwind_SjLj_Resume ",gcc,1
jz short loc_4034FD  | * | loc_4034FD:  ,gcc,1
call __Unwind_SjLj_Resume  | * | call ___cxa_call_unexpected ,gcc,13
loc_4034FD:   | * | __Znwj endp ,gcc,1
call ___cxa_call_unexpected  | * | align 4 ,gcc,7
__Znwj endp  | * | public __ZNSt9exceptionD1Ev ,gcc,1
align 4  | * | __ZNSt9exceptionD1Ev proc near  ,gcc,1
"__ZNSt9exceptionD1Ev proc near   | * | mov dword ptr [ecx], offset off_416578 ",gcc,1
"mov dword ptr [ecx], offset off_416578  | * | __ZNSt9exceptionD1Ev endp ",gcc,1
__ZNSt9exceptionD1Ev endp  | * | public __ZNSt13bad_exceptionD1Ev ,gcc,1
align 4  | * | __ZNSt13bad_exceptionD1Ev proc near  ,gcc,1
"public __ZNSt13bad_exceptionD1Ev  | * | mov dword ptr [ecx], offset off_416578 ",gcc,1
__ZNSt13bad_exceptionD1Ev proc near   | * | retn ,gcc,1
"mov dword ptr [ecx], offset off_416578  | * | __ZNSt13bad_exceptionD1Ev endp ",gcc,1
__ZNSt13bad_exceptionD1Ev endp  | * | public __ZN10__cxxabiv115__forced_unwindD1Ev ,gcc,1
align 4  | * | __ZN10__cxxabiv115__forced_unwindD1Ev proc near ,gcc,1
"__ZN10__cxxabiv115__forced_unwindD1Ev proc near  | * | mov dword ptr [ecx], offset off_416258 ",gcc,1
"mov dword ptr [ecx], offset off_416258  | * | __ZN10__cxxabiv115__forced_unwindD1Ev endp ",gcc,1
__ZN10__cxxabiv115__forced_unwindD1Ev endp  | * | public __ZN10__cxxabiv119__foreign_exceptionD1Ev ,gcc,1
align 4  | * | __ZN10__cxxabiv119__foreign_exceptionD1Ev proc near ,gcc,1
"__ZN10__cxxabiv119__foreign_exceptionD1Ev proc near  | * | mov dword ptr [ecx], offset off_4162C8 ",gcc,1
"mov dword ptr [ecx], offset off_4162C8  | * | __ZN10__cxxabiv119__foreign_exceptionD1Ev endp ",gcc,1
__ZN10__cxxabiv119__foreign_exceptionD1Ev endp  | * | public __ZNKSt9exception4whatEv ,gcc,1
align 4  | * | __ZNKSt9exception4whatEv proc near  ,gcc,1
"__ZNKSt9exception4whatEv proc near   | * | mov eax, offset aStdException  ",gcc,1
"mov eax, offset aStdException   | * | __ZNKSt9exception4whatEv endp ",gcc,1
__ZNKSt9exception4whatEv endp  | * | public __ZNKSt13bad_exception4whatEv ,gcc,1
align 4  | * | __ZNKSt13bad_exception4whatEv proc near  ,gcc,1
"__ZNKSt13bad_exception4whatEv proc near   | * | mov eax, offset aStdBadExceptio  ",gcc,1
"mov eax, offset aStdBadExceptio   | * | __ZNKSt13bad_exception4whatEv endp ",gcc,1
__ZNKSt13bad_exception4whatEv endp  | * | public __ZN10__cxxabiv119__foreign_exceptionD0Ev ,gcc,1
align 4  | * | __ZN10__cxxabiv119__foreign_exceptionD0Ev proc near ,gcc,1
"sub esp, 1Ch  | * | mov [esp+1Ch+var_1C], ecx  ",gcc,8
"mov dword ptr [ecx], offset off_4162C8  | * | call __ZdlPv  ",gcc,1
"mov [esp+1Ch+var_1C], ecx   | * | add esp, 1Ch ",gcc,9
call __ZdlPv   | * | retn ,gcc,8
"add esp, 1Ch  | * | __ZN10__cxxabiv119__foreign_exceptionD0Ev endp ",gcc,1
__ZN10__cxxabiv119__foreign_exceptionD0Ev endp  | * | public __ZN10__cxxabiv115__forced_unwindD0Ev ,gcc,1
align 4  | * | __ZN10__cxxabiv115__forced_unwindD0Ev proc near ,gcc,1
"mov dword ptr [ecx], offset off_416258  | * | call __ZdlPv  ",gcc,1
"add esp, 1Ch  | * | __ZN10__cxxabiv115__forced_unwindD0Ev endp ",gcc,1
__ZN10__cxxabiv115__forced_unwindD0Ev endp  | * | public __ZNSt9exceptionD0Ev ,gcc,1
align 4  | * | __ZNSt9exceptionD0Ev proc near  ,gcc,1
"mov dword ptr [ecx], offset off_416578  | * | call __ZdlPv  ",gcc,2
"add esp, 1Ch  | * | __ZNSt9exceptionD0Ev endp ",gcc,1
__ZNSt9exceptionD0Ev endp  | * | public __ZNSt13bad_exceptionD0Ev ,gcc,1
align 4  | * | __ZNSt13bad_exceptionD0Ev proc near  ,gcc,1
"add esp, 1Ch  | * | __ZNSt13bad_exceptionD0Ev endp ",gcc,1
__ZNSt13bad_exceptionD0Ev endp  | * | public __ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv ,gcc,1
align 4  | * | __ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv proc near ,gcc,1
var_28 = dword ptr -28h  | * | var_1C = dword ptr -1Ch ,data,1
var_24 = dword ptr -24h  | * | var_18 = dword ptr -18h ,data,1
var_1C = dword ptr -1Ch  | * | var_14 = dword ptr -14h ,data,66
var_18 = dword ptr -18h  | * | var_10 = dword ptr -10h ,data,10
var_14 = dword ptr -14h  | * | arg_0 = dword ptr 4 ,data,19
var_10 = dword ptr -10h  | * | arg_4 = dword ptr 8 ,data,8
"push ebx  | * | mov ebx, [esp+2Ch+arg_4] ",gcc,2
"sub esp, 28h  | * | mov [esp+2Ch+var_1C], 0 ",gcc,1
"mov ebx, [esp+2Ch+arg_4]  | * | mov [esp+2Ch+var_18], 0 ",gcc,1
"mov [esp+2Ch+var_1C], 0  | * | mov [esp+2Ch+var_14], 10h ",gcc,1
"mov [esp+2Ch+var_18], 0  | * | mov [esp+2Ch+var_10], 0 ",gcc,1
"mov [esp+2Ch+var_14], 10h  | * | mov eax, [ecx] ",gcc,1
"mov [esp+2Ch+var_10], 0  | * | lea edx, [esp+2Ch+var_1C] ",gcc,1
"mov eax, [ecx]  | * | mov [esp+2Ch+var_24], edx ",gcc,1
"lea edx, [esp+2Ch+var_1C]  | * | mov edx, [ebx] ",gcc,1
"mov [esp+2Ch+var_24], edx  | * | mov [esp+2Ch+var_28], edx ",gcc,1
"mov edx, [ebx]  | * | mov edx, [esp+2Ch+arg_0] ",gcc,1
"mov [esp+2Ch+var_28], edx  | * | mov [esp+2Ch+var_2C], edx ",gcc,1
"mov edx, [esp+2Ch+arg_0]  | * | call dword ptr [eax+18h] ",gcc,1
"mov [esp+2Ch+var_2C], edx  | * | sub esp, 0Ch ",gcc,1
"call dword ptr [eax+18h]  | * | mov eax, [esp+2Ch+var_18] ",gcc,1
"sub esp, 0Ch  | * | and eax, 6 ",gcc,1
"mov eax, [esp+2Ch+var_18]  | * | cmp eax, 6 ",gcc,1
"and eax, 6  | * | jz short loc_4035F0 ",gcc,1
"cmp eax, 6  | * | xor eax, eax ",gcc,1
"jz short loc_4035F0  | * | add esp, 28h ",gcc,1
"add esp, 28h  | * | retn 8 ",gcc,4
retn 8  | * | loc_4035F0:  ,gcc,1
"align 10h  | * | mov eax, [esp+2Ch+var_1C] ",gcc,1
"loc_4035F0:   | * | mov [ebx], eax ",gcc,1
"mov eax, [esp+2Ch+var_1C]  | * | mov al, 1 ",gcc,1
"mov [ebx], eax  | * | add esp, 28h ",gcc,3
pop ebx  | * | __ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv endp ,gcc,1
retn 8  | * | align 10h ,gcc,4
__ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PPv endp  | * | public __ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_ ,gcc,1
align 10h  | * | __ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_ proc near ,gcc,1
"mov eax, [esp+arg_4]  | * | setz al ",gcc,1
"cmp [esp+arg_C], eax  | * | movzx eax, al ",gcc,1
"setz al  | * | lea eax, [eax+eax*4+1] ",gcc,1
"movzx eax, al  | * | retn 10h ",gcc,1
"lea eax, [eax+eax*4+1]  | * | __ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_ endp ",gcc,1
retn 10h  | * | align 4 ,gcc,1
__ZNK10__cxxabiv117__class_type_info20__do_find_public_srcEiPKvPKS0_S2_ endp  | * | public __ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE ,gcc,1
align 4  | * | __ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE proc near ,gcc,1
var_1C = dword ptr -1Ch  | * | arg_4 = dword ptr 8 ,data,6
"push ebx  | * | mov ebx, [esp+1Ch+arg_8] ",gcc,1
"sub esp, 18h  | * | mov eax, [esp+1Ch+arg_0] ",gcc,7
"mov ebx, [esp+1Ch+arg_8]  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | call __ZNKSt9type_infoeqERKS_  ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | push edx ",gcc,3
"call __ZNKSt9type_infoeqERKS_   | * | test al, al ",gcc,7
push edx  | * | jz short loc_403650 ,gcc,1
"test al, al  | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"jz short loc_403650  | * | mov [ebx], eax ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | mov dword ptr [ebx+0Ch], 8 ",gcc,1
"mov [ebx], eax  | * | mov dword ptr [ebx+4], 6 ",gcc,1
"mov dword ptr [ebx+0Ch], 8  | * | mov al, 1 ",gcc,1
"mov dword ptr [ebx+4], 6  | * | add esp, 18h ",gcc,1
"add esp, 18h  | * | retn 0Ch ",gcc,15
retn 0Ch  | * | loc_403650:  ,gcc,1
"align 10h  | * | xor eax, eax ",gcc,4
"loc_403650:   | * | add esp, 18h ",gcc,1
pop ebx  | * | __ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE endp ,gcc,1
retn 0Ch  | * | align 4 ,gcc,13
__ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE endp  | * | public __ZN10__cxxabiv117__class_type_infoD1Ev ,gcc,1
align 4  | * | __ZN10__cxxabiv117__class_type_infoD1Ev proc near ,gcc,1
"__ZN10__cxxabiv117__class_type_infoD1Ev proc near  | * | mov dword ptr [ecx], offset off_416288 ",gcc,1
"mov dword ptr [ecx], offset off_416288  | * | __ZN10__cxxabiv117__class_type_infoD1Ev endp ",gcc,1
jmp __ZNSt9type_infoD1Ev   | * | align 4 ,gcc,1
__ZN10__cxxabiv117__class_type_infoD1Ev endp  | * | public __ZN10__cxxabiv117__class_type_infoD0Ev ,gcc,1
align 4  | * | __ZN10__cxxabiv117__class_type_infoD0Ev proc near ,gcc,1
"push ebx  | * | mov ebx, ecx ",gcc,83
"sub esp, 18h  | * | call __ZN10__cxxabiv117__class_type_infoD1Ev  ",gcc,1
"mov ebx, ecx  | * | mov [esp+1Ch+var_1C], ebx  ",gcc,20
call __ZN10__cxxabiv117__class_type_infoD1Ev   | * | call __ZdlPv  ,gcc,1
"mov [esp+1Ch+var_1C], ebx   | * | add esp, 18h ",gcc,25
call __ZdlPv   | * | pop ebx ,gcc,25
"add esp, 18h  | * | retn ",gcc,45
pop ebx  | * | __ZN10__cxxabiv117__class_type_infoD0Ev endp ,gcc,1
retn  | * | public __ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE ,gcc,1
__ZN10__cxxabiv117__class_type_infoD0Ev endp  | * | __ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE proc near ,gcc,1
var_1C = dword ptr -1Ch  | * | arg_8 = dword ptr 0Ch ,data,1
arg_C = dword ptr 10h  | * | arg_14 = dword ptr 18h ,data,3
arg_10 = dword ptr 14h  | * | arg_18 = dword ptr 1Ch ,data,2
"push esi  | * | sub esp, 14h ",gcc,20
"sub esp, 14h  | * | mov ebx, [esp+1Ch+arg_C] ",gcc,1
"mov esi, ecx  | * | cmp ebx, [esp+1Ch+arg_14] ",gcc,1
"mov ebx, [esp+1Ch+arg_C]  | * | jz short loc_4036C4 ",gcc,1
"cmp ebx, [esp+1Ch+arg_14]  | * | loc_403691:  ",gcc,1
"jz short loc_4036C4  | * | mov eax, [esp+1Ch+arg_8] ",gcc,1
"loc_403691:   | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | mov ecx, esi ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | call __ZNKSt9type_infoeqERKS_  ",gcc,1
"mov ecx, esi  | * | push ecx ",gcc,1
push ecx  | * | jz short loc_4036B8 ,gcc,1
"test al, al  | * | mov eax, [esp+1Ch+arg_18] ",gcc,1
"jz short loc_4036B8  | * | mov [eax], ebx ",gcc,1
"mov eax, [esp+1Ch+arg_18]  | * | mov edx, [esp+1Ch+arg_4] ",gcc,1
"mov [eax], ebx  | * | mov [eax+4], edx ",gcc,1
"mov edx, [esp+1Ch+arg_4]  | * | mov dword ptr [eax+0Ch], 1 ",gcc,1
"mov [eax+4], edx  | * | loc_4036B8:  ",gcc,1
"mov dword ptr [eax+0Ch], 1  | * | xor eax, eax ",gcc,1
"loc_4036B8:   | * | add esp, 14h ",gcc,1
"add esp, 14h  | * | pop esi ",gcc,24
pop ebx  | * | retn 1Ch ,gcc,1
retn 1Ch  | * | loc_4036C4:  ,gcc,1
"align 4  | * | mov eax, [esp+1Ch+arg_10] ",gcc,1
"loc_4036C4:   | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov eax, [esp+1Ch+arg_10]  | * | call __ZNKSt9type_infoeqERKS_  ",gcc,1
push edx  | * | jz short loc_403691 ,gcc,1
"test al, al  | * | mov edx, [esp+1Ch+arg_4] ",gcc,1
"jz short loc_403691  | * | mov eax, [esp+1Ch+arg_18] ",gcc,1
"mov edx, [esp+1Ch+arg_4]  | * | mov [eax+8], edx ",gcc,1
"mov eax, [esp+1Ch+arg_18]  | * | jmp short loc_4036B8 ",gcc,1
"mov [eax+8], edx  | * | __ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE endp ",gcc,1
jmp short loc_4036B8  | * | align 4 ,gcc,1
__ZNK10__cxxabiv117__class_type_info12__do_dyncastEiNS0_10__sub_kindEPKS0_PKvS3_S5_RNS0_16__dyncast_resultE endp  | * | public __ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj ,gcc,1
align 4  | * | __ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj proc near ,gcc,1
var_1C = dword ptr -1Ch  | * | this = dword ptr 4 ,data,8
var_18 = dword ptr -18h  | * | arg_4 = dword ptr 8 ,data,3
this = dword ptr 4  | * | arg_8 = dword ptr 0Ch ,data,34
"sub esp, 14h  | * | mov ebx, [esp+1Ch+this] ",gcc,1
"mov esi, ecx  | * | mov [esp+1Ch+var_1C], ebx ",gcc,1
"mov ebx, [esp+1Ch+this]  | * | call __ZNKSt9type_infoeqERKS_  ",gcc,1
"mov [esp+1Ch+var_1C], ebx  | * | push ecx ",gcc,1
push ecx  | * | jnz short loc_403730 ,gcc,1
"test al, al  | * | cmp [esp+1Ch+arg_8], 3 ",gcc,1
jnz short loc_403730  | * | jbe short loc_403710 ,gcc,1
"cmp [esp+1Ch+arg_8], 3  | * | xor eax, eax ",gcc,1
"jbe short loc_403710  | * | add esp, 14h ",gcc,1
pop ebx  | * | retn 0Ch ,gcc,10
pop esi  | * | align 10h ,gcc,6
retn 0Ch  | * | loc_403710:  ,gcc,1
"align 10h  | * | mov eax, [ebx] ",gcc,1
"loc_403710:   | * | mov edx, [esp+1Ch+arg_4] ",gcc,1
"mov eax, [ebx]  | * | mov [esp+1Ch+var_18], edx ",gcc,1
"mov edx, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_1C], esi ",gcc,1
"mov [esp+1Ch+var_18], edx  | * | mov ecx, ebx ",gcc,1
"mov [esp+1Ch+var_1C], esi  | * | call dword ptr [eax+14h] ",gcc,1
"mov ecx, ebx  | * | sub esp, 8 ",gcc,7
"call dword ptr [eax+14h]  | * | add esp, 14h ",gcc,1
"sub esp, 8  | * | pop ebx ",gcc,6
retn 0Ch  | * | loc_403730:  ,gcc,1
"align 10h  | * | mov al, 1 ",gcc,2
"loc_403730:   | * | add esp, 14h ",gcc,1
pop esi  | * | __ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj endp ,gcc,1
__ZNK10__cxxabiv117__class_type_info10__do_catchEPKSt9type_infoPPvj endp  | * | public __ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE ,gcc,1
align 4  | * | __ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE proc near ,gcc,1
var_3C = dword ptr -3Ch  | * | var_28 = dword ptr -28h ,data,3
var_24 = dword ptr -24h  | * | arg_0 = dword ptr 4 ,data,2
var_20 = dword ptr -20h  | * | arg_4 = dword ptr 8 ,data,9
"push ebx  | * | mov [esp+3Ch+var_2C], ecx ",gcc,1
"sub esp, 2Ch  | * | mov ebp, [esp+3Ch+arg_0] ",gcc,1
"mov [esp+3Ch+var_2C], ecx  | * | mov edx, [esp+3Ch+arg_4] ",gcc,1
"mov ebp, [esp+3Ch+arg_0]  | * | mov [esp+3Ch+var_24], edx ",gcc,1
"mov edx, [esp+3Ch+arg_4]  | * | mov edi, [esp+3Ch+arg_8] ",gcc,1
"mov [esp+3Ch+var_24], edx  | * | mov esi, [esp+3Ch+arg_C] ",gcc,1
"mov edi, [esp+3Ch+arg_8]  | * | mov edx, [esp+3Ch+arg_10] ",gcc,1
"mov esi, [esp+3Ch+arg_C]  | * | mov [esp+3Ch+var_20], edx ",gcc,1
"mov edx, [esp+3Ch+arg_10]  | * | mov edx, [esp+3Ch+arg_14] ",gcc,1
"mov [esp+3Ch+var_20], edx  | * | mov [esp+3Ch+var_28], edx ",gcc,1
"mov edx, [esp+3Ch+arg_14]  | * | mov ebx, [esp+3Ch+arg_18] ",gcc,1
"mov [esp+3Ch+var_28], edx  | * | mov [esp+3Ch+var_3C], edi ",gcc,1
"mov ebx, [esp+3Ch+arg_18]  | * | call __ZNKSt9type_infoeqERKS_  ",gcc,1
"mov [esp+3Ch+var_3C], edi  | * | push ecx ",gcc,1
push ecx  | * | jz short loc_4037A8 ,gcc,1
"test al, al  | * | mov [ebx], esi ",gcc,1
"jz short loc_4037A8  | * | mov edx, [esp+3Ch+var_24] ",gcc,1
"mov [ebx], esi  | * | mov [ebx+4], edx ",gcc,1
"mov edx, [esp+3Ch+var_24]  | * | test ebp, ebp ",gcc,1
"mov [ebx+4], edx  | * | js short loc_4037EC ",gcc,1
"test ebp, ebp  | * | add esi, ebp ",gcc,1
"js short loc_4037EC  | * | xor eax, eax ",gcc,1
"add esi, ebp  | * | cmp [esp+3Ch+var_28], esi ",gcc,1
"xor eax, eax  | * | setz al ",gcc,3
"cmp [esp+3Ch+var_28], esi  | * | lea eax, [eax+eax*4+1] ",gcc,1
"setz al  | * | mov [ebx+0Ch], eax ",gcc,1
"lea eax, [eax+eax*4+1]  | * | loc_40379B:  ",gcc,1
"mov [ebx+0Ch], eax  | * | xor eax, eax ",gcc,1
"loc_40379B:   | * | add esp, 2Ch ",gcc,1
pop edi  | * | retn 1Ch ,gcc,1
retn 1Ch  | * | loc_4037A8:  ,gcc,1
"align 4  | * | cmp esi, [esp+3Ch+var_28] ",gcc,1
loc_4037A8:   | * | jz short loc_4037FC ,gcc,1
"cmp esi, [esp+3Ch+var_28]  | * | loc_4037AE:  ",gcc,1
"jz short loc_4037FC  | * | mov eax, [esp+3Ch+var_2C] ",gcc,1
"loc_4037AE:   | * | mov ecx, [eax+8] ",gcc,1
"mov eax, [esp+3Ch+var_2C]  | * | mov eax, [ecx] ",gcc,1
"mov ecx, [eax+8]  | * | mov [esp+3Ch+arg_18], ebx ",gcc,1
"mov eax, [ecx]  | * | mov edx, [esp+3Ch+var_28] ",gcc,1
"mov [esp+3Ch+arg_18], ebx  | * | mov [esp+3Ch+arg_14], edx ",gcc,1
"mov edx, [esp+3Ch+var_28]  | * | mov edx, [esp+3Ch+var_20] ",gcc,1
"mov [esp+3Ch+arg_14], edx  | * | mov [esp+3Ch+arg_10], edx ",gcc,1
"mov edx, [esp+3Ch+var_20]  | * | mov [esp+3Ch+arg_C], esi ",gcc,1
"mov [esp+3Ch+arg_10], edx  | * | mov [esp+3Ch+arg_8], edi ",gcc,1
"mov [esp+3Ch+arg_C], esi  | * | mov edx, [esp+3Ch+var_24] ",gcc,1
"mov [esp+3Ch+arg_8], edi  | * | mov [esp+3Ch+arg_4], edx ",gcc,1
"mov edx, [esp+3Ch+var_24]  | * | mov [esp+3Ch+arg_0], ebp ",gcc,1
"mov [esp+3Ch+arg_4], edx  | * | mov eax, [eax+1Ch] ",gcc,1
"mov [esp+3Ch+arg_0], ebp  | * | add esp, 2Ch ",gcc,1
"mov eax, [eax+1Ch]  | * | pop ebx ",gcc,1
pop edi  | * | jmp eax ,gcc,3
jmp eax  | * | loc_4037EC:  ,gcc,1
"align 4  | * | cmp ebp, 0FFFFFFFEh ",gcc,1
loc_4037EC:   | * | jnz short loc_40379B ,gcc,1
"cmp ebp, 0FFFFFFFEh  | * | mov dword ptr [ebx+0Ch], 1 ",gcc,1
jnz short loc_40379B  | * | jmp short loc_40379B ,gcc,1
"mov dword ptr [ebx+0Ch], 1  | * | align 4 ",gcc,1
jmp short loc_40379B  | * | loc_4037FC:  ,gcc,1
"align 4  | * | mov edx, [esp+3Ch+var_20] ",gcc,1
"loc_4037FC:   | * | mov [esp+3Ch+var_3C], edx ",gcc,1
"mov edx, [esp+3Ch+var_20]  | * | mov ecx, [esp+3Ch+var_2C] ",gcc,1
"mov [esp+3Ch+var_3C], edx  | * | call __ZNKSt9type_infoeqERKS_  ",gcc,1
"mov ecx, [esp+3Ch+var_2C]  | * | push edx ",gcc,1
push edx  | * | jz short loc_4037AE ,gcc,1
"test al, al  | * | mov edx, [esp+3Ch+var_24] ",gcc,1
"jz short loc_4037AE  | * | mov [ebx+8], edx ",gcc,1
"mov edx, [esp+3Ch+var_24]  | * | jmp short loc_40379B ",gcc,1
"mov [ebx+8], edx  | * | __ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE endp ",gcc,1
jmp short loc_40379B  | * | align 4 ,gcc,1
__ZNK10__cxxabiv120__si_class_type_info12__do_dyncastEiNS_17__class_type_info10__sub_kindEPKS1_PKvS4_S6_RNS1_16__dyncast_resultE endp  | * | public __ZN10__cxxabiv120__si_class_type_infoD1Ev ,gcc,1
align 4  | * | __ZN10__cxxabiv120__si_class_type_infoD1Ev proc near ,gcc,1
"__ZN10__cxxabiv120__si_class_type_infoD1Ev proc near  | * | mov dword ptr [ecx], offset off_4162E8 ",gcc,1
"mov dword ptr [ecx], offset off_4162E8  | * | __ZN10__cxxabiv120__si_class_type_infoD1Ev endp ",gcc,1
jmp __ZN10__cxxabiv117__class_type_infoD1Ev   | * | align 4 ,gcc,1
__ZN10__cxxabiv120__si_class_type_infoD1Ev endp  | * | public __ZN10__cxxabiv120__si_class_type_infoD0Ev ,gcc,1
align 4  | * | __ZN10__cxxabiv120__si_class_type_infoD0Ev proc near ,gcc,1
"sub esp, 18h  | * | call __ZN10__cxxabiv120__si_class_type_infoD1Ev  ",gcc,1
call __ZN10__cxxabiv120__si_class_type_infoD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZN10__cxxabiv120__si_class_type_infoD0Ev endp ,gcc,1
retn  | * | public __ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE ,gcc,1
__ZN10__cxxabiv120__si_class_type_infoD0Ev endp  | * | __ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE proc near ,gcc,1
var_28 = dword ptr -28h  | * | arg_0 = dword ptr 4 ,data,4
var_24 = dword ptr -24h  | * | arg_4 = dword ptr 8 ,data,8
"sub esp, 1Ch  | * | mov esi, [esp+2Ch+arg_0] ",gcc,1
"mov ebx, ecx  | * | mov edi, [esp+2Ch+arg_4] ",gcc,1
"mov esi, [esp+2Ch+arg_0]  | * | mov ebp, [esp+2Ch+arg_8] ",gcc,1
"mov edi, [esp+2Ch+arg_4]  | * | mov [esp+2Ch+var_24], ebp ",gcc,1
"mov ebp, [esp+2Ch+arg_8]  | * | mov [esp+2Ch+var_28], edi ",gcc,1
"mov [esp+2Ch+var_24], ebp  | * | mov [esp+2Ch+var_2C], esi ",gcc,1
"mov [esp+2Ch+var_28], edi  | * | call __ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE  ",gcc,1
"mov [esp+2Ch+var_2C], esi  | * | sub esp, 0Ch ",gcc,1
"call __ZNK10__cxxabiv117__class_type_info11__do_upcastEPKS0_PKvRNS0_15__upcast_resultE   | * | test al, al ",gcc,1
"sub esp, 0Ch  | * | jz short loc_403878 ",gcc,1
"jz short loc_403878  | * | add esp, 1Ch ",gcc,1
pop edi  | * | retn 0Ch ,gcc,17
pop ebp  | * | loc_403878:  ,gcc,1
"retn 0Ch  | * | mov ecx, [ebx+8] ",gcc,1
"loc_403878:   | * | mov eax, [ecx] ",gcc,1
"mov ecx, [ebx+8]  | * | mov [esp+2Ch+arg_8], ebp ",gcc,1
"mov eax, [ecx]  | * | mov [esp+2Ch+arg_4], edi ",gcc,1
"mov [esp+2Ch+arg_8], ebp  | * | mov [esp+2Ch+arg_0], esi ",gcc,1
"mov [esp+2Ch+arg_4], edi  | * | mov eax, [eax+18h] ",gcc,1
"mov [esp+2Ch+arg_0], esi  | * | add esp, 1Ch ",gcc,1
"mov eax, [eax+18h]  | * | pop ebx ",gcc,1
pop ebp  | * | __ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE endp ,gcc,1
jmp eax  | * | align 4 ,gcc,1
__ZNK10__cxxabiv120__si_class_type_info11__do_upcastEPKNS_17__class_type_infoEPKvRNS1_15__upcast_resultE endp  | * | public __ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_ ,gcc,1
align 4  | * | __ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_ proc near ,gcc,1
var_3C = dword ptr -3Ch  | * | this = dword ptr 4 ,data,4
"push ebx  | * | mov edx, ecx ",gcc,1
"sub esp, 2Ch  | * | mov ebp, [esp+3Ch+this] ",gcc,2
"mov edx, ecx  | * | mov ebx, [esp+3Ch+arg_4] ",gcc,1
"mov ebp, [esp+3Ch+this]  | * | mov edi, [esp+3Ch+arg_8] ",gcc,2
"mov ebx, [esp+3Ch+arg_4]  | * | mov esi, [esp+3Ch+arg_C] ",gcc,1
"mov edi, [esp+3Ch+arg_8]  | * | cmp esi, ebx ",gcc,1
"mov esi, [esp+3Ch+arg_C]  | * | jz short loc_4038D8 ",gcc,1
"cmp esi, ebx  | * | loc_4038B5:  ",gcc,1
"jz short loc_4038D8  | * | mov ecx, [edx+8] ",gcc,1
"loc_4038B5:   | * | mov eax, [ecx] ",gcc,1
"mov ecx, [edx+8]  | * | mov [esp+3Ch+arg_C], esi ",gcc,1
"mov eax, [ecx]  | * | mov [esp+3Ch+arg_8], edi ",gcc,1
"mov [esp+3Ch+arg_C], esi  | * | mov [esp+3Ch+arg_4], ebx ",gcc,1
"mov [esp+3Ch+arg_8], edi  | * | mov [esp+3Ch+this], ebp ",gcc,1
"mov [esp+3Ch+arg_4], ebx  | * | mov eax, [eax+20h] ",gcc,1
"mov [esp+3Ch+this], ebp  | * | add esp, 2Ch ",gcc,1
"mov eax, [eax+20h]  | * | pop ebx ",gcc,1
jmp eax  | * | loc_4038D8:  ,gcc,1
"align 4  | * | mov [esp+3Ch+var_3C], edi ",gcc,1
"loc_4038D8:   | * | mov [esp+3Ch+var_20], edx ",gcc,1
"mov [esp+3Ch+var_3C], edi  | * | call __ZNKSt9type_infoeqERKS_  ",gcc,1
"mov [esp+3Ch+var_20], edx  | * | push edx ",gcc,1
"push edx  | * | mov edx, [esp+3Ch+var_20] ",gcc,1
"test al, al  | * | jz short loc_4038B5 ",gcc,1
"mov edx, [esp+3Ch+var_20]  | * | mov eax, 6 ",gcc,1
"jz short loc_4038B5  | * | add esp, 2Ch ",gcc,1
"mov eax, 6  | * | pop ebx ",gcc,1
pop edi  | * | retn 10h ,gcc,8
pop ebp  | * | __ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_ endp ,gcc,1
retn 10h  | * | public ___cxa_call_terminate ,gcc,1
__ZNK10__cxxabiv120__si_class_type_info20__do_find_public_srcEiPKvPKNS_17__class_type_infoES2_ endp  | * | ___cxa_call_terminate proc near  ,gcc,1
"push ebx  | * | mov ebx, [esp+1Ch+arg_0] ",gcc,3
"sub esp, 18h  | * | test ebx, ebx ",gcc,3
"mov ebx, [esp+1Ch+arg_0]  | * | jz short loc_403938 ",gcc,1
"test ebx, ebx  | * | mov [esp+1Ch+var_1C], ebx  ",gcc,1
jz short loc_403938  | * | call ___cxa_begin_catch ,gcc,1
"mov [esp+1Ch+var_1C], ebx   | * | mov eax, [ebx] ",gcc,1
"call ___cxa_begin_catch  | * | mov edx, [ebx+4] ",gcc,1
"mov eax, [ebx]  | * | add eax, 0BCD4D500h ",gcc,1
"mov edx, [ebx+4]  | * | adc edx, 0B8B1AABCh ",gcc,1
"add eax, 0BCD4D500h  | * | cmp edx, 0 ",gcc,1
"adc edx, 0B8B1AABCh  | * | ja short loc_403938 ",gcc,1
ja short loc_403938  | * | ja short loc_403938 ,gcc,1
"cmp eax, 1  | * | mov eax, [ebx-24h] ",gcc,1
"ja short loc_403938  | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"mov eax, [ebx-24h]  | * | call __ZN10__cxxabiv111__terminateEPFvvE  ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | align 4 ",gcc,1
call __ZN10__cxxabiv111__terminateEPFvvE   | * | loc_403938:  ,gcc,1
align 4  | * | call __ZSt9terminatev  ,gcc,3
loc_403938:   | * | ___cxa_call_terminate endp ,gcc,1
call __ZSt9terminatev   | * | align 10h ,gcc,1
___cxa_call_terminate endp  | * | public __ZN10__cxxabiv111__terminateEPFvvE ,gcc,1
align 10h  | * | __ZN10__cxxabiv111__terminateEPFvvE proc near ,gcc,1
lpfctx = dword ptr -5Ch  | * | var_1C = dword ptr -1Ch ,data,5
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_4122E8 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4122E8  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_403985 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_403985  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
call __Unwind_SjLj_Register  | * | call [esp+5Ch+arg_0] ,gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | loc_403980:  ",gcc,1
call [esp+5Ch+arg_0]  | * | call _abort ,gcc,1
loc_403980:   | * | loc_403985:  ,gcc,1
"call _abort  | * | mov eax, [esp+5Ch+fctx.data] ",gcc,1
"loc_403985:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+5Ch+fctx.data]  | * | call ___cxa_begin_catch ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | jmp short loc_403980 ",gcc,1
call ___cxa_begin_catch  | * | __ZN10__cxxabiv111__terminateEPFvvE endp ,gcc,1
jmp short loc_403980  | * | align 4 ,gcc,1
__ZN10__cxxabiv111__terminateEPFvvE endp  | * | public __ZSt9terminatev ,gcc,1
align 4  | * | __ZSt9terminatev proc near  ,gcc,1
var_18 = dword ptr -18h  | * | arg_1C = dword ptr 20h ,data,4
var_C = byte ptr -0Ch  | * | lpuexcpt = dword ptr 24h ,data,4
arg_1C = dword ptr 20h  | * | arg_24 = dword ptr 28h ,data,12
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_4122F8 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4122F8  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_4039EF ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_4039EF  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE  ",gcc,1
"mov eax, ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE   | * | jz short loc_4039DB ",gcc,1
"test eax, eax  | * | loc_4039D1:  ",gcc,1
"jz short loc_4039DB  | * | mov eax, [eax] ",gcc,1
"loc_4039D1:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov eax, [eax]  | * | call __ZN10__cxxabiv111__terminateEPFvvE  ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | loc_4039DB:  ",gcc,1
"call __ZN10__cxxabiv111__terminateEPFvvE   | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
loc_4039DB:   | * | call __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | mov ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE, eax  ",gcc,2
call __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv   | * | jmp short loc_4039D1 ,gcc,1
"mov ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE, eax   | * | loc_4039EF:  ",gcc,1
"jmp short loc_4039D1  | * | mov eax, [esp+lpuexcpt] ",gcc,1
"loc_4039EF:   | * | cmp [esp+arg_24], 0FFFFFFFFh ",gcc,1
"mov eax, [esp+lpuexcpt]  | * | mov [esp+0], eax  ",gcc,8
"cmp [esp+arg_24], 0FFFFFFFFh  | * | mov [esp+arg_1C], 0FFFFFFFFh ",gcc,7
"mov [esp+0], eax   | * | jz short loc_403A0A ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | call __Unwind_SjLj_Resume ",gcc,8
jz short loc_403A0A  | * | loc_403A0A:  ,gcc,1
loc_403A0A:   | * | __ZSt9terminatev endp ,gcc,1
call ___cxa_call_unexpected  | * | align 10h ,gcc,5
__ZSt9terminatev endp  | * | public __ZN10__cxxabiv112__unexpectedEPFvvE ,gcc,1
align 10h  | * | __ZN10__cxxabiv112__unexpectedEPFvvE proc near ,gcc,1
"__ZN10__cxxabiv112__unexpectedEPFvvE proc near  | * | sub esp, 0Ch ",gcc,1
"sub esp, 0Ch  | * | call __ZSt9terminatev  ",gcc,1
call [esp+0Ch+arg_0]  | * | __ZN10__cxxabiv112__unexpectedEPFvvE endp ,gcc,1
call __ZSt9terminatev   | * | public __ZSt10unexpectedv ,gcc,1
__ZN10__cxxabiv112__unexpectedEPFvvE endp  | * | __ZSt10unexpectedv proc near  ,gcc,1
"__ZSt10unexpectedv proc near   | * | sub esp, 1Ch ",gcc,1
"sub esp, 1Ch  | * | test eax, eax ",gcc,2
"mov eax, ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE   | * | jz short loc_403A32 ",gcc,1
"test eax, eax  | * | loc_403A28:  ",gcc,1
"jz short loc_403A32  | * | mov eax, [eax] ",gcc,1
"loc_403A28:   | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"mov eax, [eax]  | * | call __ZN10__cxxabiv112__unexpectedEPFvvE  ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | loc_403A32:  ",gcc,1
call __ZN10__cxxabiv112__unexpectedEPFvvE   | * | call __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv  ,gcc,1
"loc_403A32:   | * | mov ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE, eax  ",gcc,1
call __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv   | * | jmp short loc_403A28 ,gcc,1
"mov ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE, eax   | * | __ZSt10unexpectedv endp ",gcc,1
jmp short loc_403A28  | * | align 10h ,gcc,1
__ZSt10unexpectedv endp  | * | public __ZSt13set_terminatePFvvE ,gcc,1
align 10h  | * | __ZSt13set_terminatePFvvE proc near ,gcc,1
lpfctx = dword ptr -5Ch  | * | fctx = SjLj_Function_Context ptr -40h ,data,6
var_C = byte ptr -0Ch  | * | arg_1C = dword ptr 20h ,data,7
arg_0 = dword ptr 4  | * | lpuexcpt = dword ptr 24h ,data,6
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412308 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412308  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_403ABA ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_403ABA  | * | lea edx, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+var_18], esp  | * | mov [esp+5Ch+lpfctx], edx  ",gcc,5
"lea edx, [esp+5Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,5
"mov [esp+5Ch+lpfctx], edx   | * | mov eax, ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE  ",gcc,1
"mov eax, ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE   | * | jz short loc_403AA0 ",gcc,1
"test eax, eax  | * | mov edx, [eax] ",gcc,5
"jz short loc_403AA0  | * | mov [esp+5Ch+var_44], edx ",gcc,1
"mov edx, [eax]  | * | loc_403A83:  ",gcc,1
"mov [esp+5Ch+var_44], edx  | * | mov edx, [esp+5Ch+arg_0] ",gcc,2
"loc_403A83:   | * | mov [eax], edx ",gcc,1
"mov edx, [esp+5Ch+arg_0]  | * | lea eax, [esp+5Ch+fctx] ",gcc,2
"mov [eax], edx  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,2
pop ebp  | * | align 10h ,gcc,12
retn  | * | loc_403AA0:  ,gcc,1
"align 10h  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,2
loc_403AA0:   | * | call __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv  ,gcc,1
"call __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv   | * | mov edx, [eax] ",gcc,1
"mov ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE, eax   | * | mov [esp+5Ch+var_44], edx ",gcc,1
"mov edx, [eax]  | * | jmp short loc_403A83 ",gcc,1
"mov [esp+5Ch+var_44], edx  | * | loc_403ABA:  ",gcc,1
"jmp short loc_403A83  | * | mov eax, [esp+lpuexcpt] ",gcc,1
"loc_403ABA:   | * | cmp [esp+arg_24], 0FFFFFFFFh ",gcc,1
"mov [esp+0], eax   | * | jz short loc_403AD5 ",gcc,1
jz short loc_403AD5  | * | loc_403AD5:  ,gcc,1
loc_403AD5:   | * | __ZSt13set_terminatePFvvE endp ,gcc,1
__ZSt13set_terminatePFvvE endp  | * | public __ZSt14set_unexpectedPFvvE ,gcc,1
align 4  | * | __ZSt14set_unexpectedPFvvE proc near ,gcc,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412318 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412318  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_403B56 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_403B56  | * | lea edx, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], edx   | * | mov eax, ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE  ",gcc,1
"mov eax, ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE   | * | jz short loc_403B3C ",gcc,1
"jz short loc_403B3C  | * | mov [esp+5Ch+var_44], edx ",gcc,1
"mov edx, [eax]  | * | loc_403B1F:  ",gcc,1
"loc_403B1F:   | * | mov [eax], edx ",gcc,1
retn  | * | loc_403B3C:  ,gcc,1
"align 4  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,3
loc_403B3C:   | * | call __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | mov ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE, eax  ",gcc,1
"call __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv   | * | mov edx, [eax] ",gcc,1
"mov ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE, eax   | * | mov [esp+5Ch+var_44], edx ",gcc,1
"mov edx, [eax]  | * | jmp short loc_403B1F ",gcc,1
"mov [esp+5Ch+var_44], edx  | * | loc_403B56:  ",gcc,1
"jmp short loc_403B1F  | * | mov eax, [esp+lpuexcpt] ",gcc,1
"loc_403B56:   | * | cmp [esp+arg_24], 0FFFFFFFFh ",gcc,1
"mov [esp+0], eax   | * | jz short loc_403B71 ",gcc,1
jz short loc_403B71  | * | loc_403B71:  ,gcc,1
loc_403B71:   | * | __ZSt14set_unexpectedPFvvE endp ,gcc,1
__ZSt14set_unexpectedPFvvE endp  | * | public ___cxa_get_exception_ptr ,gcc,1
align 4  | * | ___cxa_get_exception_ptr proc near ,gcc,1
"___cxa_get_exception_ptr proc near  | * | mov eax, [esp+arg_0] ",gcc,1
"mov eax, [esp+arg_0]  | * | retn ",gcc,3
"mov eax, [eax-8]  | * | ___cxa_get_exception_ptr endp ",gcc,1
retn  | * | public ___cxa_begin_catch ,gcc,1
___cxa_get_exception_ptr endp  | * | ___cxa_begin_catch proc near  ,gcc,1
___cxa_begin_catch proc near   | * | push edi ,gcc,1
"push esi  | * | mov esi, [esp+0Ch+arg_0] ",gcc,1
push ebx  | * | call ___cxa_get_globals ,gcc,2
"mov esi, [esp+0Ch+arg_0]  | * | mov edx, [eax] ",gcc,1
"call ___cxa_get_globals  | * | lea edi, [esi-30h] ",gcc,1
"mov edx, [eax]  | * | mov ecx, [esi] ",gcc,1
"lea edi, [esi-30h]  | * | mov ebx, [esi+4] ",gcc,1
"mov ecx, [esi]  | * | add ecx, 0BCD4D500h ",gcc,1
"mov ebx, [esi+4]  | * | adc ebx, 0B8B1AABCh ",gcc,1
"add ecx, 0BCD4D500h  | * | cmp ebx, 0 ",gcc,3
"adc ebx, 0B8B1AABCh  | * | ja short loc_403BAC ",gcc,1
"cmp ebx, 0  | * | cmp ecx, 1 ",gcc,1
ja short loc_403BAC  | * | jbe short loc_403BB8 ,gcc,1
"cmp ecx, 1  | * | loc_403BAC:  ",gcc,1
"jbe short loc_403BB8  | * | test edx, edx ",gcc,1
loc_403BAC:   | * | jnz short loc_403BE1 ,gcc,1
"test edx, edx  | * | mov [eax], edi ",gcc,1
"jnz short loc_403BE1  | * | xor eax, eax ",gcc,1
"mov [eax], edi  | * | pop ebx ",gcc,1
"xor eax, eax  | * | pop esi ",gcc,3
pop edi  | * | loc_403BB8:  ,gcc,1
"retn  | * | mov ecx, [esi-1Ch] ",gcc,1
"loc_403BB8:   | * | test ecx, ecx ",gcc,1
"mov ecx, [esi-1Ch]  | * | js short loc_403BD8 ",gcc,1
"test ecx, ecx  | * | lea ebx, [ecx+1] ",gcc,1
js short loc_403BD8  | * | loc_403BC2:  ,gcc,1
"lea ebx, [ecx+1]  | * | mov [esi-1Ch], ebx ",gcc,1
loc_403BC2:   | * | dec dword ptr [eax+4] ,gcc,1
"mov [esi-1Ch], ebx  | * | cmp edi, edx ",gcc,1
dec dword ptr [eax+4]  | * | jz short loc_403BD1 ,gcc,1
"cmp edi, edx  | * | mov [esi-20h], edx ",gcc,1
"jz short loc_403BD1  | * | mov [eax], edi ",gcc,1
"mov [esi-20h], edx  | * | loc_403BD1:  ",gcc,1
"mov [eax], edi  | * | mov eax, [esi-8] ",gcc,1
loc_403BD1:   | * | pop ebx ,gcc,1
"mov eax, [esi-8]  | * | pop esi ",gcc,1
pop edi  | * | loc_403BD8:  ,gcc,1
"retn  | * | mov ebx, 1 ",gcc,1
"loc_403BD8:   | * | sub ebx, ecx ",gcc,1
"mov ebx, 1  | * | jmp short loc_403BC2 ",gcc,1
"sub ebx, ecx  | * | loc_403BE1:  ",gcc,1
jmp short loc_403BC2  | * | call __ZSt9terminatev  ,gcc,1
loc_403BE1:   | * | ___cxa_begin_catch endp ,gcc,1
call __ZSt9terminatev   | * | align 4 ,gcc,2
___cxa_begin_catch endp  | * | public ___cxa_end_catch ,gcc,1
align 4  | * | ___cxa_end_catch proc near  ,gcc,1
___cxa_end_catch proc near   | * | push ebx  ,gcc,1
push ebx   | * | call ___cxa_get_globals_fast ,gcc,1
"sub esp, 18h  | * | mov edx, [eax] ",gcc,2
"call ___cxa_get_globals_fast  | * | test edx, edx ",gcc,1
"mov edx, [eax]  | * | jz short loc_403C1F ",gcc,1
"test edx, edx  | * | mov ecx, [edx+30h] ",gcc,2
"jz short loc_403C1F  | * | mov ebx, [edx+34h] ",gcc,1
"mov ecx, [edx+30h]  | * | add ecx, 0BCD4D500h ",gcc,2
"mov ebx, [edx+34h]  | * | adc ebx, 0B8B1AABCh ",gcc,2
"adc ebx, 0B8B1AABCh  | * | jbe short loc_403C24 ",gcc,1
"cmp ebx, 0  | * | loc_403C0E:  ",gcc,1
"jbe short loc_403C24  | * | mov dword ptr [eax], 0 ",gcc,1
"loc_403C0E:   | * | add edx, 30h  ",gcc,1
"mov dword ptr [eax], 0  | * | mov [esp+1Ch+lpuexcpt], edx  ",gcc,1
"add edx, 30h   | * | call __Unwind_DeleteException ",gcc,2
"mov [esp+1Ch+lpuexcpt], edx   | * | loc_403C1F:  ",gcc,1
"call __Unwind_DeleteException  | * | add esp, 18h ",gcc,1
loc_403C1F:   | * | pop ebx ,gcc,1
pop ebx  | * | loc_403C24:  ,gcc,1
"retn  | * | cmp ecx, 1 ",gcc,1
loc_403C24:   | * | ja short loc_403C0E ,gcc,1
"cmp ecx, 1  | * | mov ecx, [edx+14h] ",gcc,1
"ja short loc_403C0E  | * | test ecx, ecx ",gcc,1
"mov ecx, [edx+14h]  | * | js short loc_403C40 ",gcc,1
"test ecx, ecx  | * | dec ecx ",gcc,5
js short loc_403C40  | * | jz short loc_403C4C ,gcc,1
"dec ecx  | * | cmp ecx, 0FFFFFFFFh ",gcc,1
jz short loc_403C4C  | * | jz short loc_403C5E ,gcc,1
"cmp ecx, 0FFFFFFFFh  | * | loc_403C38:  ",gcc,1
"jz short loc_403C5E  | * | mov [edx+14h], ecx ",gcc,1
"loc_403C38:   | * | add esp, 18h ",gcc,1
"mov [edx+14h], ecx  | * | pop ebx ",gcc,1
pop ebx  | * | loc_403C40:  ,gcc,1
retn  | * | inc ecx ,gcc,1
loc_403C40:   | * | jnz short loc_403C38 ,gcc,1
"inc ecx  | * | mov ebx, [edx+10h] ",gcc,1
"jnz short loc_403C38  | * | mov [eax], ebx ",gcc,1
"mov ebx, [edx+10h]  | * | jmp short loc_403C38 ",gcc,1
"mov [eax], ebx  | * | align 4 ",gcc,1
jmp short loc_403C38  | * | loc_403C4C:  ,gcc,1
"align 4  | * | mov ecx, [edx+10h] ",gcc,1
"loc_403C4C:   | * | mov [eax], ecx ",gcc,1
"mov ecx, [edx+10h]  | * | add edx, 30h  ",gcc,1
"mov [eax], ecx  | * | mov [esp+1Ch+lpuexcpt], edx  ",gcc,1
"mov [esp+1Ch+lpuexcpt], edx   | * | jmp short loc_403C1F ",gcc,1
call __Unwind_DeleteException  | * | loc_403C5E:  ,gcc,1
jmp short loc_403C1F  | * | call __ZSt9terminatev  ,gcc,1
loc_403C5E:   | * | ___cxa_end_catch endp ,gcc,1
___cxa_end_catch endp  | * | public __ZSt18uncaught_exceptionv ,gcc,1
align 4  | * | __ZSt18uncaught_exceptionv proc near ,gcc,1
"public __ZSt18uncaught_exceptionv  | * | sub esp, 0Ch ",gcc,1
__ZSt18uncaught_exceptionv proc near  | * | call ___cxa_get_globals ,gcc,1
"sub esp, 0Ch  | * | mov eax, [eax+4] ",gcc,1
"call ___cxa_get_globals  | * | test eax, eax ",gcc,2
"mov eax, [eax+4]  | * | setnz al ",gcc,1
"test eax, eax  | * | add esp, 0Ch ",gcc,2
setnz al  | * | retn ,gcc,1
"add esp, 0Ch  | * | __ZSt18uncaught_exceptionv endp ",gcc,1
retn  | * | public ___shmem_init_eh_globals ,gcc,1
__ZSt18uncaught_exceptionv endp  | * | ___shmem_init_eh_globals proc near  ,gcc,1
"___shmem_init_eh_globals proc near   | * | mov eax, [esp+arg_0] ",gcc,1
"mov eax, [esp+arg_0]  | * | mov dword ptr [eax+4], 0 ",gcc,1
"mov dword ptr [eax], 0  | * | retn ",gcc,2
"mov dword ptr [eax+4], 0  | * | ___shmem_init_eh_globals endp ",gcc,1
___shmem_init_eh_globals endp  | * | __ZL15eh_globals_dtorPv proc near  ,gcc,1
"push ebx  | * | mov esi, [esp+1Ch+arg_0] ",gcc,4
"sub esp, 14h  | * | test esi, esi ",gcc,1
"mov esi, [esp+1Ch+arg_0]  | * | jz short loc_403CC4 ",gcc,1
"test esi, esi  | * | mov eax, [esi] ",gcc,1
"jz short loc_403CC4  | * | test eax, eax ",gcc,1
"mov eax, [esi]  | * | jz short loc_403CB4 ",gcc,1
"test eax, eax  | * | nop ",gcc,2
jz short loc_403CB4  | * | loc_403CA0:  ,gcc,1
"nop  | * | mov ebx, [eax+10h] ",gcc,1
"loc_403CA0:   | * | add eax, 30h  ",gcc,1
"mov ebx, [eax+10h]  | * | mov [esp+1Ch+lpuexcpt], eax  ",gcc,1
"add eax, 30h   | * | call __Unwind_DeleteException ",gcc,1
"mov [esp+1Ch+lpuexcpt], eax   | * | mov eax, ebx ",gcc,1
"call __Unwind_DeleteException  | * | test ebx, ebx ",gcc,1
"mov eax, ebx  | * | jnz short loc_403CA0 ",gcc,1
"test ebx, ebx  | * | loc_403CB4:  ",gcc,1
"jnz short loc_403CA0  | * | mov [esp+1Ch+arg_0], esi  ",gcc,1
"loc_403CB4:   | * | add esp, 14h ",gcc,1
"mov [esp+1Ch+arg_0], esi   | * | pop ebx ",gcc,1
pop ebx  | * | jmp _free ,gcc,1
jmp _free  | * | loc_403CC4:  ,gcc,1
"align 4  | * | add esp, 14h ",gcc,1
loc_403CC4:   | * | pop ebx ,gcc,1
pop esi  | * | __ZL15eh_globals_dtorPv endp ,gcc,1
__ZL15eh_globals_dtorPv endp  | * | public ___shmem_init_init ,gcc,1
align 4  | * | ___shmem_init_init proc near  ,gcc,1
key = dword ptr -2Ch  | * | var_14 = dword ptr -14h ,data,1
dtor = dword ptr -28h  | * | var_10 = byte ptr -10h ,data,1
"push ebx  | * | mov ebx, [esp+2Ch+arg_0] ",gcc,2
"sub esp, 28h  | * | mov [esp+2Ch+var_10], 0 ",gcc,1
"mov ebx, [esp+2Ch+arg_0]  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov [esp+2Ch+var_10], 0  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_403CF4 ",gcc,1
"test eax, eax  | * | xor edx, edx ",gcc,5
"jnz short loc_403CF4  | * | mov eax, [esp+2Ch+var_14] ",gcc,1
"xor edx, edx  | * | mov [ebx], eax ",gcc,1
"mov eax, [esp+2Ch+var_14]  | * | mov [ebx+4], dl ",gcc,2
"mov [ebx+4], dl  | * | pop ebx ",gcc,2
"add esp, 28h  | * | retn ",gcc,7
retn  | * | loc_403CF4:  ,gcc,1
"align 4  | * | mov [esp+2Ch+dtor], offset __ZL15eh_globals_dtorPv  ",gcc,1
"loc_403CF4:   | * | lea eax, [esp+2Ch+var_14] ",gcc,1
"mov [esp+2Ch+dtor], offset __ZL15eh_globals_dtorPv   | * | mov [esp+2Ch+key], eax  ",gcc,1
"lea eax, [esp+2Ch+var_14]  | * | call ___gthr_win32_key_create ",gcc,1
"mov [esp+2Ch+key], eax   | * | test eax, eax ",gcc,1
call ___gthr_win32_key_create  | * | setz dl ,gcc,1
"test eax, eax  | * | mov eax, [esp+2Ch+var_14] ",gcc,1
"setz dl  | * | mov [ebx], eax ",gcc,1
pop ebx  | * | ___shmem_init_init endp ,gcc,1
___shmem_init_init endp  | * | public __Z26__shmem_grabber_eh_globalsv ,gcc,1
align 4  | * | __Z26__shmem_grabber_eh_globalsv proc near ,gcc,1
name = dword ptr -1Ch  | * | initfunc = dword ptr -14h ,data,8
"sub esp, 1Ch  | * | mov [esp+1Ch+size], 8  ",gcc,3
"mov [esp+1Ch+initfunc], offset ___shmem_init_eh_globals   | * | mov [esp+1Ch+name], offset name  ",gcc,1
"mov [esp+1Ch+size], 8   | * | call ___shmem_grab ",gcc,3
"mov [esp+1Ch+name], offset name   | * | add esp, 1Ch ",gcc,1
call ___shmem_grab  | * | retn ,gcc,8
"add esp, 1Ch  | * | __Z26__shmem_grabber_eh_globalsv endp ",gcc,1
__Z26__shmem_grabber_eh_globalsv endp  | * | public __Z20__shmem_grabber_initv ,gcc,1
align 10h  | * | __Z20__shmem_grabber_initv proc near  ,gcc,1
"mov [esp+1Ch+initfunc], offset ___shmem_init_init   | * | mov [esp+1Ch+name], offset aInit  ",gcc,1
"mov [esp+1Ch+name], offset aInit   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __Z20__shmem_grabber_initv endp ",gcc,1
__Z20__shmem_grabber_initv endp  | * | public ___cxa_get_globals_fast ,gcc,1
align 4  | * | ___cxa_get_globals_fast proc near  ,gcc,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412328 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412328  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_403E2F ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_403E2F  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, ds:___shmem_ptr_init ",gcc,1
"mov eax, ds:___shmem_ptr_init  | * | jz short loc_403E18 ",gcc,1
"test eax, eax  | * | loc_403DA1:  ",gcc,1
"jz short loc_403E18  | * | cmp byte ptr [eax+4], 0 ",gcc,1
loc_403DA1:   | * | jz short loc_403DDC ,gcc,1
"cmp byte ptr [eax+4], 0  | * | mov eax, ds:___shmem_ptr_init ",gcc,2
"jz short loc_403DDC  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_init  | * | jz short loc_403E04 ",gcc,1
"test eax, eax  | * | loc_403DB0:  ",gcc,1
"jz short loc_403E04  | * | mov eax, [eax] ",gcc,1
"loc_403DB0:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov eax, [eax]  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,3
"mov [esp+5Ch+lpfctx], eax   | * | call ___gthr_win32_getspecific ",gcc,2
"mov [esp+5Ch+fctx.call_site], 1  | * | mov [esp+5Ch+var_44], eax ",gcc,4
call ___gthr_win32_getspecific  | * | loc_403DC6:  ,gcc,1
"mov [esp+5Ch+var_44], eax  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"loc_403DC6:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
retn  | * | loc_403DDC:  ,gcc,1
"align 4  | * | mov eax, ds:___shmem_ptr_eh_globals ",gcc,1
"loc_403DDC:   | * | mov [esp+5Ch+var_44], eax ",gcc,1
"mov eax, ds:___shmem_ptr_eh_globals  | * | test eax, eax ",gcc,2
"mov [esp+5Ch+var_44], eax  | * | jnz short loc_403DC6 ",gcc,1
jnz short loc_403DC6  | * | call __Z26__shmem_grabber_eh_globalsv  ,gcc,1
"call __Z26__shmem_grabber_eh_globalsv   | * | mov ds:___shmem_ptr_eh_globals, eax ",gcc,2
"mov [esp+5Ch+var_44], eax  | * | jmp short loc_403DC6 ",gcc,1
"mov ds:___shmem_ptr_eh_globals, eax  | * | align 4 ",gcc,2
jmp short loc_403DC6  | * | loc_403E04:  ,gcc,1
loc_403E04:   | * | call __Z20__shmem_grabber_initv  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | mov ds:___shmem_ptr_init, eax ",gcc,4
call __Z20__shmem_grabber_initv   | * | jmp short loc_403DB0 ,gcc,1
"mov ds:___shmem_ptr_init, eax  | * | loc_403E18:  ",gcc,1
"jmp short loc_403DB0  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
loc_403E18:   | * | call __Z20__shmem_grabber_initv  ,gcc,1
call __Z20__shmem_grabber_initv   | * | jmp loc_403DA1 ,gcc,1
"mov ds:___shmem_ptr_init, eax  | * | loc_403E2F:  ",gcc,1
"jmp loc_403DA1  | * | mov eax, [esp+lpuexcpt] ",gcc,1
"loc_403E2F:   | * | cmp [esp+arg_24], 0FFFFFFFFh ",gcc,1
"mov [esp+0], eax   | * | jz short loc_403E4A ",gcc,1
jz short loc_403E4A  | * | loc_403E4A:  ,gcc,1
loc_403E4A:   | * | ___cxa_get_globals_fast endp ,gcc,1
___cxa_get_globals_fast endp  | * | public ___cxa_get_globals ,gcc,1
align 10h  | * | ___cxa_get_globals proc near  ,gcc,1
lpfctx = dword ptr -5Ch  | * | var_44 = dword ptr -44h ,data,1
ptr = dword ptr -58h  | * | fctx = SjLj_Function_Context ptr -40h ,data,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412338 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412338  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_403F89 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_403F89  | * | lea edx, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], edx   | * | mov eax, ds:___shmem_ptr_init ",gcc,1
"mov eax, ds:___shmem_ptr_init  | * | jz loc_403F60 ",gcc,1
"test eax, eax  | * | loc_403E91:  ",gcc,1
"jz loc_403F60  | * | cmp byte ptr [eax+4], 0 ",gcc,1
loc_403E91:   | * | jz short loc_403ED0 ,gcc,1
"jz short loc_403ED0  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_init  | * | jz short loc_403EF8 ",gcc,1
"test eax, eax  | * | loc_403EA0:  ",gcc,1
"jz short loc_403EF8  | * | mov eax, [eax] ",gcc,1
"loc_403EA0:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"call ___gthr_win32_getspecific  | * | test eax, eax ",gcc,1
"mov [esp+5Ch+var_44], eax  | * | jz short loc_403F0C ",gcc,1
"test eax, eax  | * | loc_403EBA:  ",gcc,1
"jz short loc_403F0C  | * | lea edx, [esp+5Ch+fctx] ",gcc,1
"loc_403EBA:   | * | mov [esp+5Ch+lpfctx], edx  ",gcc,1
"lea edx, [esp+5Ch+fctx]  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+5Ch+lpfctx], edx   | * | mov eax, [esp+5Ch+var_44] ",gcc,1
retn  | * | loc_403ED0:  ,gcc,1
"align 10h  | * | mov eax, ds:___shmem_ptr_eh_globals ",gcc,1
"loc_403ED0:   | * | mov [esp+5Ch+var_44], eax ",gcc,1
"mov [esp+5Ch+var_44], eax  | * | jnz short loc_403EBA ",gcc,1
jnz short loc_403EBA  | * | call __Z26__shmem_grabber_eh_globalsv  ,gcc,1
"mov [esp+5Ch+var_44], eax  | * | jmp short loc_403EBA ",gcc,1
jmp short loc_403EBA  | * | loc_403EF8:  ,gcc,1
loc_403EF8:   | * | call __Z20__shmem_grabber_initv  ,gcc,1
call __Z20__shmem_grabber_initv   | * | jmp short loc_403EA0 ,gcc,1
"mov ds:___shmem_ptr_init, eax  | * | loc_403F0C:  ",gcc,1
"jmp short loc_403EA0  | * | mov [esp+5Ch+lpfctx], 8  ",gcc,1
loc_403F0C:   | * | call _malloc ,gcc,1
"mov [esp+5Ch+lpfctx], 8   | * | mov [esp+5Ch+var_44], eax ",gcc,1
"mov [esp+5Ch+var_44], eax  | * | jz short loc_403F78 ",gcc,1
"test eax, eax  | * | mov eax, ds:___shmem_ptr_init ",gcc,1
"jz short loc_403F78  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_init  | * | jz short loc_403F7D ",gcc,1
"test eax, eax  | * | loc_403F29:  ",gcc,1
"jz short loc_403F7D  | * | mov edx, [esp+5Ch+var_44] ",gcc,1
"loc_403F29:   | * | mov [esp+5Ch+ptr], edx  ",gcc,1
"mov edx, [esp+5Ch+var_44]  | * | mov eax, [eax] ",gcc,1
"mov [esp+5Ch+ptr], edx   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | call ___gthr_win32_setspecific ",gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | test eax, eax ",gcc,7
call ___gthr_win32_setspecific  | * | jnz short loc_403F78 ,gcc,1
"test eax, eax  | * | mov eax, [esp+5Ch+var_44] ",gcc,1
"jnz short loc_403F78  | * | mov dword ptr [eax], 0 ",gcc,1
"mov eax, [esp+5Ch+var_44]  | * | mov dword ptr [eax+4], 0 ",gcc,1
"mov dword ptr [eax], 0  | * | jmp loc_403EBA ",gcc,1
"mov dword ptr [eax+4], 0  | * | align 10h ",gcc,1
jmp loc_403EBA  | * | loc_403F60:  ,gcc,1
loc_403F60:   | * | call __Z20__shmem_grabber_initv  ,gcc,1
call __Z20__shmem_grabber_initv   | * | jmp loc_403E91 ,gcc,1
"mov ds:___shmem_ptr_init, eax  | * | align 4 ",gcc,1
jmp loc_403E91  | * | loc_403F78:  ,gcc,1
loc_403F78:   | * | loc_403F7D:  ,gcc,1
call __ZSt9terminatev   | * | call __Z20__shmem_grabber_initv  ,gcc,1
"loc_403F7D:   | * | mov ds:___shmem_ptr_init, eax ",gcc,1
call __Z20__shmem_grabber_initv   | * | jmp short loc_403F29 ,gcc,1
"mov ds:___shmem_ptr_init, eax  | * | loc_403F89:  ",gcc,1
"jmp short loc_403F29  | * | mov eax, [esp+lpuexcpt] ",gcc,1
"loc_403F89:   | * | cmp [esp+arg_24], 0FFFFFFFFh ",gcc,1
"mov [esp+0], eax   | * | jz short loc_403FA4 ",gcc,1
jz short loc_403FA4  | * | loc_403FA4:  ,gcc,1
loc_403FA4:   | * | ___cxa_get_globals endp ,gcc,1
___cxa_get_globals endp  | * | __ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception proc near ,gcc,1
"push ebx  | * | mov ecx, [esp+1Ch+arg_4] ",gcc,1
"sub esp, 18h  | * | cmp [esp+1Ch+arg_0], 1 ",gcc,1
"mov ecx, [esp+1Ch+arg_4]  | * | ja short loc_403FD6 ",gcc,1
"cmp [esp+1Ch+arg_0], 1  | * | mov eax, [ecx-2Ch] ",gcc,1
"ja short loc_403FD6  | * | lea ebx, [ecx+20h] ",gcc,1
"mov eax, [ecx-2Ch]  | * | test eax, eax ",gcc,1
"lea ebx, [ecx+20h]  | * | jz short loc_403FC9 ",gcc,1
"test eax, eax  | * | mov ecx, ebx ",gcc,1
jz short loc_403FC9  | * | call eax ,gcc,1
"mov ecx, ebx  | * | loc_403FC9:  ",gcc,1
"call eax  | * | mov [esp+1Ch+arg_0], ebx  ",gcc,1
"loc_403FC9:   | * | add esp, 18h ",gcc,1
"mov [esp+1Ch+arg_0], ebx   | * | pop ebx ",gcc,1
"add esp, 18h  | * | jmp ___cxa_free_exception ",gcc,1
pop ebx  | * | loc_403FD6:  ,gcc,1
"jmp ___cxa_free_exception  | * | mov eax, [ecx-24h] ",gcc,1
"loc_403FD6:   | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"mov eax, [ecx-24h]  | * | call __ZN10__cxxabiv111__terminateEPFvvE  ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | __ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception endp ",gcc,1
call __ZN10__cxxabiv111__terminateEPFvvE   | * | align 4 ,gcc,1
__ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception endp  | * | public ___cxa_throw ,gcc,1
align 4  | * | ___cxa_throw proc near  ,gcc,1
lpuexcpt = dword ptr -1Ch  | * | lptinfo = dword ptr 8 ,data,1
"sub esp, 18h  | * | mov dword ptr [ebx-60h], 1 ",gcc,1
"mov ebx, [esp+1Ch+arg_0]  | * | mov eax, [esp+1Ch+lptinfo] ",gcc,1
"mov dword ptr [ebx-60h], 1  | * | mov [ebx-50h], eax ",gcc,1
"mov eax, [esp+1Ch+lptinfo]  | * | mov eax, [esp+1Ch+arg_8] ",gcc,1
"mov [ebx-50h], eax  | * | mov [ebx-4Ch], eax ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | mov eax, ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE  ",gcc,1
"mov [ebx-4Ch], eax  | * | test eax, eax ",gcc,1
"mov eax, ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE   | * | jz short loc_40404A ",gcc,1
"test eax, eax  | * | loc_40400A:  ",gcc,1
"jz short loc_40404A  | * | mov eax, [eax] ",gcc,1
"loc_40400A:   | * | mov [ebx-48h], eax ",gcc,1
"mov eax, [eax]  | * | mov eax, ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE  ",gcc,1
"mov [ebx-48h], eax  | * | test eax, eax ",gcc,1
"mov eax, ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE   | * | jz short loc_404056 ",gcc,1
"test eax, eax  | * | loc_404018:  ",gcc,1
"jz short loc_404056  | * | mov eax, [eax] ",gcc,1
"loc_404018:   | * | mov [ebx-44h], eax ",gcc,1
"mov eax, [eax]  | * | mov dword ptr [ebx-20h], 432B2B00h ",gcc,1
"mov [ebx-44h], eax  | * | mov dword ptr [ebx-1Ch], 474E5543h ",gcc,1
"mov dword ptr [ebx-20h], 432B2B00h  | * | mov dword ptr [ebx-18h], offset __ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception  ",gcc,1
"mov dword ptr [ebx-1Ch], 474E5543h  | * | sub ebx, 20h  ",gcc,1
"mov dword ptr [ebx-18h], offset __ZL23__gxx_exception_cleanup19_Unwind_Reason_CodeP17_Unwind_Exception   | * | mov [esp+1Ch+lpuexcpt], ebx  ",gcc,1
"sub ebx, 20h   | * | call __Unwind_SjLj_RaiseException ",gcc,1
"mov [esp+1Ch+lpuexcpt], ebx   | * | mov [esp+1Ch+lpuexcpt], ebx  ",gcc,1
call __Unwind_SjLj_RaiseException  | * | call ___cxa_begin_catch ,gcc,1
"mov [esp+1Ch+lpuexcpt], ebx   | * | call __ZSt9terminatev  ",gcc,1
call ___cxa_begin_catch  | * | loc_40404A:  ,gcc,1
call __ZSt9terminatev   | * | call __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv  ,gcc,1
"loc_40404A:   | * | mov ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE, eax  ",gcc,1
call __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv   | * | jmp short loc_40400A ,gcc,1
"mov ds:__ZN10__cxxabiv135__shmem_ptr___unexpected_handler_shE, eax   | * | loc_404056:  ",gcc,1
jmp short loc_40400A  | * | call __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv  ,gcc,1
"loc_404056:   | * | mov ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE, eax  ",gcc,1
call __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv   | * | jmp short loc_404018 ,gcc,1
"mov ds:__ZN10__cxxabiv134__shmem_ptr___terminate_handler_shE, eax   | * | ___cxa_throw endp ",gcc,1
jmp short loc_404018  | * | align 4 ,gcc,1
___cxa_throw endp  | * | public ___cxa_rethrow ,gcc,1
align 4  | * | ___cxa_rethrow proc near  ,gcc,1
___cxa_rethrow proc near   | * | push ebx ,gcc,1
call ___cxa_get_globals  | * | inc dword ptr [eax+4] ,gcc,1
"mov edx, [eax]  | * | test edx, edx ",gcc,1
inc dword ptr [eax+4]  | * | jz short loc_4040A6 ,gcc,1
"jz short loc_4040A6  | * | mov ebx, [edx+34h] ",gcc,1
"adc ebx, 0B8B1AABCh  | * | jbe short loc_4040AB ",gcc,1
"cmp ebx, 0  | * | loc_40408D:  ",gcc,1
"jbe short loc_4040AB  | * | mov dword ptr [eax], 0 ",gcc,1
loc_40408D:   | * | loc_404093:  ,gcc,1
"mov dword ptr [eax], 0  | * | lea ebx, [edx+30h] ",gcc,1
"loc_404093:   | * | mov [esp+1Ch+lpuexcpt], ebx  ",gcc,1
"lea ebx, [edx+30h]  | * | call __Unwind_SjLj_Resume_or_Rethrow ",gcc,1
"mov [esp+1Ch+lpuexcpt], ebx   | * | db 89h ",gcc,1
call __Unwind_SjLj_Resume_or_Rethrow  | * | db 1Ch ,gcc,1
db 89h  | * | db 24h  ,gcc,1
db 1Ch  | * | db 0E8h ,gcc,1
db 24h   | * | db 0DAh ,gcc,1
db 0E8h  | * | db 0FAh ,gcc,1
db 0DAh  | * | db 0FFh ,gcc,1
db 0FAh  | * | db 0FFh ,gcc,1
db 0FFh  | * | loc_4040A6:  ,gcc,1
db 0FFh  | * | call __ZSt9terminatev  ,gcc,1
loc_4040A6:   | * | loc_4040AB:  ,gcc,1
"call __ZSt9terminatev   | * | cmp ecx, 1 ",gcc,1
loc_4040AB:   | * | ja short loc_40408D ,gcc,1
"cmp ecx, 1  | * | neg dword ptr [edx+14h] ",gcc,1
ja short loc_40408D  | * | jmp short loc_404093 ,gcc,1
neg dword ptr [edx+14h]  | * | ___cxa_rethrow endp ,gcc,1
jmp short loc_404093  | * | align 4 ,gcc,1
___cxa_rethrow endp  | * | ___tcf_0 proc near  ,gcc,1
"___tcf_0 proc near   | * | mov eax, ds:__CRT_MT ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_4040C4 ",gcc,1
"test eax, eax  | * | retn ",gcc,2
jnz short loc_4040C4  | * | align 4 ,gcc,1
retn  | * | loc_4040C4:  ,gcc,1
"align 4  | * | sub esp, 1Ch ",gcc,2
"loc_4040C4:   | * | mov [esp+1Ch+mutex], offset __ZN12_GLOBAL__N_115emergency_mutexE  ",gcc,1
"sub esp, 1Ch  | * | call ___gthr_win32_mutex_destroy ",gcc,1
"mov [esp+1Ch+mutex], offset __ZN12_GLOBAL__N_115emergency_mutexE   | * | add esp, 1Ch ",gcc,1
call ___gthr_win32_mutex_destroy  | * | retn ,gcc,1
"add esp, 1Ch  | * | ___tcf_0 endp ",gcc,1
___tcf_0 endp  | * | public ___cxa_allocate_exception ,gcc,1
align 4  | * | ___cxa_allocate_exception proc near  ,gcc,1
var_54 = dword ptr -54h  | * | var_44 = dword ptr -44h ,data,2
var_48 = dword ptr -48h  | * | fctx = SjLj_Function_Context ptr -40h ,data,1
var_18 = dword ptr -18h  | * | thrown_size = dword ptr 4 ,data,1
thrown_size = dword ptr 4  | * | lpuexcpt = dword ptr 24h ,data,1
"push ebp  | * | sub esp, 54h ",gcc,2
"push edi  | * | mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,2
"sub esp, 54h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412348 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412348  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_40422D ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_40422D  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, [esp+5Ch+thrown_size] ",gcc,1
"call __Unwind_SjLj_Register  | * | add eax, 60h  ",gcc,1
"mov eax, [esp+5Ch+thrown_size]  | * | mov [esp+5Ch+var_44], eax ",gcc,1
"add eax, 60h   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov [esp+5Ch+var_44], eax  | * | call _malloc ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov [esp+5Ch+var_48], eax ",gcc,1
"mov [esp+5Ch+var_48], eax  | * | jz short loc_404160 ",gcc,1
"test eax, eax  | * | loc_404128:  ",gcc,1
jz short loc_404160  | * | call ___cxa_get_globals ,gcc,1
loc_404128:   | * | inc dword ptr [eax+4] ,gcc,1
"call ___cxa_get_globals  | * | mov ecx, 60h  ",gcc,1
"inc dword ptr [eax+4]  | * | xor eax, eax ",gcc,2
"mov ecx, 60h   | * | mov edi, [esp+5Ch+var_48] ",gcc,1
"xor eax, eax  | * | rep stosb ",gcc,2
"mov edi, [esp+5Ch+var_48]  | * | mov eax, [esp+5Ch+var_48] ",gcc,1
"rep stosb  | * | add eax, 60h  ",gcc,1
"mov eax, [esp+5Ch+var_48]  | * | mov [esp+5Ch+var_48], eax ",gcc,1
"add eax, 60h   | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+var_48], eax  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, [esp+5Ch+var_48] ",gcc,3
"call __Unwind_SjLj_Unregister  | * | add esp, 54h ",gcc,3
"mov eax, [esp+5Ch+var_48]  | * | pop edi ",gcc,1
"add esp, 54h  | * | pop ebp ",gcc,2
retn  | * | loc_404160:  ,gcc,1
"align 10h  | * | mov ecx, ds:__CRT_MT ",gcc,1
"loc_404160:   | * | test ecx, ecx ",gcc,1
"mov ecx, ds:__CRT_MT  | * | jnz loc_40420C ",gcc,1
"test ecx, ecx  | * | loc_40416E:  ",gcc,1
"jnz loc_40420C  | * | mov edx, ds:__ZL14emergency_used  ",gcc,1
"loc_40416E:   | * | cmp [esp+5Ch+var_44], 200h ",gcc,1
"mov edx, ds:__ZL14emergency_used   | * | ja loc_404204 ",gcc,1
"cmp [esp+5Ch+var_44], 200h  | * | mov eax, edx ",gcc,1
"ja loc_404204  | * | xor ecx, ecx ",gcc,1
"mov eax, edx  | * | jmp short loc_404190 ",gcc,1
"xor ecx, ecx  | * | loc_404188:  ",gcc,1
"jmp short loc_404190  | * | shr eax, 1 ",gcc,1
loc_404188:   | * | inc ecx ,gcc,1
"shr eax, 1  | * | cmp ecx, 20h  ",gcc,2
inc ecx  | * | jz short loc_404204 ,gcc,1
"cmp ecx, 20h   | * | loc_404190:  ",gcc,1
"jz short loc_404204  | * | test al, 1 ",gcc,1
loc_404190:   | * | jnz short loc_404188 ,gcc,1
"test al, 1  | * | mov eax, 1 ",gcc,2
"jnz short loc_404188  | * | shl eax, cl ",gcc,1
"mov eax, 1  | * | or eax, edx ",gcc,2
"shl eax, cl  | * | mov ds:__ZL14emergency_used, eax  ",gcc,1
"or eax, edx  | * | shl ecx, 9 ",gcc,1
"mov ds:__ZL14emergency_used, eax   | * | add ecx, offset __ZL16emergency_buffer  ",gcc,1
"shl ecx, 9  | * | mov [esp+5Ch+var_48], ecx ",gcc,1
"add ecx, offset __ZL16emergency_buffer   | * | mov edx, ds:__CRT_MT ",gcc,1
"mov [esp+5Ch+var_48], ecx  | * | test edx, edx ",gcc,1
"mov edx, ds:__CRT_MT  | * | jz loc_404128 ",gcc,1
"test edx, edx  | * | mov [esp+5Ch+lpfctx], offset __ZN12_GLOBAL__N_115emergency_mutexE  ",gcc,1
"jz loc_404128  | * | mov [esp+5Ch+fctx.call_site], 2 ",gcc,1
"mov [esp+5Ch+lpfctx], offset __ZN12_GLOBAL__N_115emergency_mutexE   | * | call ___gthr_win32_mutex_unlock ",gcc,4
"mov [esp+5Ch+fctx.call_site], 2  | * | test eax, eax ",gcc,4
call ___gthr_win32_mutex_unlock  | * | jz loc_404128 ,gcc,1
"test eax, eax  | * | mov [esp+5Ch+lpfctx], 4  ",gcc,5
jz loc_404128  | * | call ___cxa_allocate_exception ,gcc,1
"mov [esp+5Ch+lpfctx], 4   | * | mov dword ptr [eax], offset off_416358 ",gcc,4
"call ___cxa_allocate_exception  | * | mov [esp+5Ch+var_54], offset __ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev  ",gcc,4
"mov dword ptr [eax], offset off_416358  | * | mov [esp+5Ch+lptinfo], offset __ZTIN9__gnu_cxx26__concurrence_unlock_errorE  ",gcc,4
"mov [esp+5Ch+var_54], offset __ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,4
"mov [esp+5Ch+lptinfo], offset __ZTIN9__gnu_cxx26__concurrence_unlock_errorE   | * | call ___cxa_throw ",gcc,4
"mov [esp+5Ch+lpfctx], eax   | * | align 4 ",gcc,2
call ___cxa_throw  | * | loc_404204:  ,gcc,1
loc_404204:   | * | align 4 ,gcc,1
call __ZSt9terminatev   | * | loc_40420C:  ,gcc,1
"align 4  | * | mov [esp+5Ch+lpfctx], offset __ZN12_GLOBAL__N_115emergency_mutexE  ",gcc,2
"loc_40420C:   | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+5Ch+lpfctx], offset __ZN12_GLOBAL__N_115emergency_mutexE   | * | call ___gthr_win32_mutex_lock ",gcc,4
call ___gthr_win32_mutex_lock  | * | jz loc_40416E ,gcc,1
"test eax, eax  | * | call __ZN9__gnu_cxx30__throw_concurrence_lock_errorEv  ",gcc,2
jz loc_40416E  | * | loc_40422D:  ,gcc,1
"call __ZN9__gnu_cxx30__throw_concurrence_lock_errorEv   | * | mov eax, [esp+lpuexcpt] ",gcc,2
"loc_40422D:   | * | mov edx, [esp+arg_24] ",gcc,1
"mov eax, [esp+lpuexcpt]  | * | mov ecx, [esp+arg_1C] ",gcc,4
"mov edx, [esp+arg_24]  | * | test ecx, ecx ",gcc,4
"mov ecx, [esp+arg_1C]  | * | jz short loc_404242 ",gcc,1
jz short loc_404242  | * | jz short loc_404242 ,gcc,1
dec ecx  | * | ud2 ,gcc,4
jz short loc_404242  | * | loc_404242:  ,gcc,1
"ud2  | * | mov [esp+0], eax  ",gcc,2
"loc_404242:   | * | mov [esp+arg_1C], 0FFFFFFFFh ",gcc,1
"mov [esp+0], eax   | * | inc edx ",gcc,4
"mov [esp+arg_1C], 0FFFFFFFFh  | * | jz short loc_404255 ",gcc,1
inc edx  | * | call __Unwind_SjLj_Resume ,gcc,4
jz short loc_404255  | * | loc_404255:  ,gcc,1
loc_404255:   | * | ___cxa_allocate_exception endp ,gcc,1
___cxa_allocate_exception endp  | * | public ___cxa_free_exception ,gcc,1
align 4  | * | ___cxa_free_exception proc near  ,gcc,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412358 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412358  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_404364 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_404364  | * | lea ecx, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+var_18], esp  | * | mov [esp+5Ch+lpfctx], ecx  ",gcc,1
"lea ecx, [esp+5Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,1
"mov [esp+5Ch+lpfctx], ecx   | * | mov eax, [esp+5Ch+arg_0] ",gcc,1
"call __Unwind_SjLj_Register  | * | cmp [esp+5Ch+arg_0], offset __ZL16emergency_buffer  ",gcc,1
"mov eax, [esp+5Ch+arg_0]  | * | jb short loc_4042A8 ",gcc,1
"cmp [esp+5Ch+arg_0], offset __ZL16emergency_buffer   | * | cmp [esp+5Ch+arg_0], offset __ZL15dependents_used  ",gcc,1
jb short loc_4042A8  | * | jb short loc_4042C4 ,gcc,1
"cmp [esp+5Ch+arg_0], offset __ZL15dependents_used   | * | loc_4042A8:  ",gcc,1
"jb short loc_4042C4  | * | sub eax, 60h  ",gcc,1
"loc_4042A8:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"sub eax, 60h   | * | call _free ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | loc_4042B3:  ",gcc,1
"call _free  | * | lea eax, [esp+5Ch+fctx] ",gcc,2
"loc_4042B3:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | add esp, 58h ",gcc,7
call __Unwind_SjLj_Unregister  | * | pop ebp ,gcc,8
pop ebp  | * | loc_4042C4:  ,gcc,1
"retn  | * | sub eax, offset __ZL16emergency_buffer  ",gcc,1
"loc_4042C4:   | * | shr eax, 9 ",gcc,1
"sub eax, offset __ZL16emergency_buffer   | * | mov [esp+5Ch+var_44], eax ",gcc,1
"shr eax, 9  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov [esp+5Ch+var_44], eax  | * | test eax, eax ",gcc,2
"mov eax, ds:__CRT_MT  | * | jnz short loc_4042EC ",gcc,1
"test eax, eax  | * | mov eax, 0FFFFFFFEh ",gcc,4
"jnz short loc_4042EC  | * | mov cl, byte ptr [esp+5Ch+var_44] ",gcc,1
"mov eax, 0FFFFFFFEh  | * | rol eax, cl ",gcc,4
"mov cl, byte ptr [esp+5Ch+var_44]  | * | and ds:__ZL14emergency_used, eax  ",gcc,2
"rol eax, cl  | * | jmp short loc_4042B3 ",gcc,1
"and ds:__ZL14emergency_used, eax   | * | loc_4042EC:  ",gcc,1
"jmp short loc_4042B3  | * | mov [esp+5Ch+lpfctx], offset __ZN12_GLOBAL__N_115emergency_mutexE  ",gcc,1
"loc_4042EC:   | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
call ___gthr_win32_mutex_lock  | * | jnz short loc_404379 ,gcc,1
"jnz short loc_404379  | * | mov cl, byte ptr [esp+5Ch+var_44] ",gcc,1
"rol eax, cl  | * | mov eax, ds:__CRT_MT ",gcc,2
"and ds:__ZL14emergency_used, eax   | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jz short loc_4042B3 ",gcc,1
"test eax, eax  | * | mov [esp+5Ch+lpfctx], offset __ZN12_GLOBAL__N_115emergency_mutexE  ",gcc,3
"jz short loc_4042B3  | * | mov [esp+5Ch+fctx.call_site], 2 ",gcc,1
call ___gthr_win32_mutex_unlock  | * | jz loc_4042B3 ,gcc,1
jz loc_4042B3  | * | call ___cxa_allocate_exception ,gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | loc_404364:  ",gcc,1
"call ___cxa_throw  | * | mov eax, [esp+lpuexcpt] ",gcc,2
"loc_404364:   | * | mov edx, [esp+arg_24] ",gcc,1
"mov ecx, [esp+arg_1C]  | * | jz short loc_404386 ",gcc,1
jz short loc_404386  | * | jz short loc_404386 ,gcc,1
jz short loc_404386  | * | loc_404379:  ,gcc,1
"ud2  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,2
loc_404379:   | * | call __ZN9__gnu_cxx30__throw_concurrence_lock_errorEv  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | loc_404386:  ",gcc,1
"call __ZN9__gnu_cxx30__throw_concurrence_lock_errorEv   | * | mov [esp+0], eax  ",gcc,2
"loc_404386:   | * | mov [esp+arg_1C], 0FFFFFFFFh ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | jz short loc_404399 ",gcc,1
jz short loc_404399  | * | loc_404399:  ,gcc,1
loc_404399:   | * | ___cxa_free_exception endp ,gcc,1
___cxa_free_exception endp  | * | public ___cxa_allocate_dependent_exception ,gcc,1
align 10h  | * | ___cxa_allocate_dependent_exception proc near ,gcc,1
"sub esp, 54h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412368 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412368  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_4044D1 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_4044D1  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov [esp+5Ch+lpfctx], 50h  ",gcc,1
call __Unwind_SjLj_Register  | * | call _malloc ,gcc,1
"mov [esp+5Ch+lpfctx], 50h   | * | mov [esp+5Ch+var_44], eax ",gcc,1
"mov [esp+5Ch+var_44], eax  | * | jz short loc_404414 ",gcc,1
"test eax, eax  | * | loc_4043E9:  ",gcc,1
jz short loc_404414  | * | call ___cxa_get_globals ,gcc,1
loc_4043E9:   | * | inc dword ptr [eax+4] ,gcc,1
"call ___cxa_get_globals  | * | mov ecx, 50h  ",gcc,1
"mov ecx, 50h   | * | mov edi, [esp+5Ch+var_44] ",gcc,1
"mov edi, [esp+5Ch+var_44]  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"rep stosb  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+5Ch+var_44]  | * | pop edi ",gcc,1
pop ebp  | * | loc_404414:  ,gcc,1
"retn  | * | mov eax, ds:__CRT_MT ",gcc,1
"loc_404414:   | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz loc_4044B0 ",gcc,1
"test eax, eax  | * | loc_404421:  ",gcc,1
"jnz loc_4044B0  | * | mov edx, ds:__ZL15dependents_used  ",gcc,1
"loc_404421:   | * | mov eax, edx ",gcc,1
"mov edx, ds:__ZL15dependents_used   | * | xor ecx, ecx ",gcc,1
"mov eax, edx  | * | jmp short loc_404438 ",gcc,1
"xor ecx, ecx  | * | align 10h ",gcc,1
jmp short loc_404438  | * | loc_404430:  ,gcc,1
"align 10h  | * | shr eax, 1 ",gcc,1
loc_404430:   | * | inc ecx ,gcc,1
inc ecx  | * | jz short loc_4044A8 ,gcc,1
"cmp ecx, 20h   | * | loc_404438:  ",gcc,1
"jz short loc_4044A8  | * | test al, 1 ",gcc,1
loc_404438:   | * | jnz short loc_404430 ,gcc,1
"jnz short loc_404430  | * | shl eax, cl ",gcc,1
"shl eax, cl  | * | mov ds:__ZL15dependents_used, eax  ",gcc,1
"or eax, edx  | * | lea eax, [ecx+ecx*4] ",gcc,1
"mov ds:__ZL15dependents_used, eax   | * | shl eax, 4 ",gcc,1
"lea eax, [ecx+ecx*4]  | * | add eax, offset __ZL17dependents_buffer  ",gcc,1
"shl eax, 4  | * | mov [esp+5Ch+var_44], eax ",gcc,1
"add eax, offset __ZL17dependents_buffer   | * | mov eax, ds:__CRT_MT ",gcc,1
"mov eax, ds:__CRT_MT  | * | jz short loc_4043E9 ",gcc,1
"jz short loc_4043E9  | * | mov [esp+5Ch+fctx.call_site], 2 ",gcc,1
call ___gthr_win32_mutex_unlock  | * | jz loc_4043E9 ,gcc,1
jz loc_4043E9  | * | call ___cxa_allocate_exception ,gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | loc_4044A8:  ",gcc,1
call ___cxa_throw  | * | call __ZSt9terminatev  ,gcc,1
loc_4044A8:   | * | align 10h ,gcc,1
call __ZSt9terminatev   | * | loc_4044B0:  ,gcc,1
"align 10h  | * | mov [esp+5Ch+lpfctx], offset __ZN12_GLOBAL__N_115emergency_mutexE  ",gcc,1
"loc_4044B0:   | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
call ___gthr_win32_mutex_lock  | * | jz loc_404421 ,gcc,1
jz loc_404421  | * | loc_4044D1:  ,gcc,1
"loc_4044D1:   | * | mov edx, [esp+arg_24] ",gcc,1
"mov ecx, [esp+arg_1C]  | * | jz short loc_4044E6 ",gcc,1
jz short loc_4044E6  | * | jz short loc_4044E6 ,gcc,1
jz short loc_4044E6  | * | loc_4044E6:  ,gcc,1
"loc_4044E6:   | * | mov [esp+arg_1C], 0FFFFFFFFh ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | jz short loc_4044F9 ",gcc,1
jz short loc_4044F9  | * | loc_4044F9:  ,gcc,1
loc_4044F9:   | * | ___cxa_allocate_dependent_exception endp ,gcc,1
___cxa_allocate_dependent_exception endp  | * | public ___cxa_free_dependent_exception ,gcc,1
align 10h  | * | ___cxa_free_dependent_exception proc near ,gcc,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412378 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412378  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_404610 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_404610  | * | lea edx, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], edx   | * | mov eax, [esp+5Ch+arg_0] ",gcc,1
"call __Unwind_SjLj_Register  | * | cmp [esp+5Ch+arg_0], offset __ZL17dependents_buffer  ",gcc,1
"mov eax, [esp+5Ch+arg_0]  | * | jb short loc_40454C ",gcc,1
"cmp [esp+5Ch+arg_0], offset __ZL17dependents_buffer   | * | cmp [esp+5Ch+arg_0], offset __ZN12_GLOBAL__N_1L24system_category_instanceE  ",gcc,1
jb short loc_40454C  | * | jb short loc_404568 ,gcc,1
"cmp [esp+5Ch+arg_0], offset __ZN12_GLOBAL__N_1L24system_category_instanceE   | * | loc_40454C:  ",gcc,1
"jb short loc_404568  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
loc_40454C:   | * | call _free ,gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | loc_404554:  ",gcc,1
"loc_404554:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
retn  | * | loc_404568:  ,gcc,1
"align 4  | * | sub eax, offset __ZL17dependents_buffer  ",gcc,1
"loc_404568:   | * | mov ecx, 0CCCCCCCDh ",gcc,1
"sub eax, offset __ZL17dependents_buffer   | * | mul ecx ",gcc,1
"mov ecx, 0CCCCCCCDh  | * | shr edx, 6 ",gcc,1
"mul ecx  | * | mov [esp+5Ch+var_44], edx ",gcc,1
"shr edx, 6  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov [esp+5Ch+var_44], edx  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_404598 ",gcc,1
"jnz short loc_404598  | * | mov cl, byte ptr [esp+5Ch+var_44] ",gcc,1
"mov cl, byte ptr [esp+5Ch+var_44]  | * | and ds:__ZL15dependents_used, eax  ",gcc,2
"rol eax, cl  | * | jmp short loc_404554 ",gcc,1
"and ds:__ZL15dependents_used, eax   | * | align 4 ",gcc,1
jmp short loc_404554  | * | loc_404598:  ,gcc,1
"loc_404598:   | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
call ___gthr_win32_mutex_lock  | * | jnz short loc_404625 ,gcc,1
"jnz short loc_404625  | * | mov cl, byte ptr [esp+5Ch+var_44] ",gcc,1
"and ds:__ZL15dependents_used, eax   | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jz short loc_404554 ",gcc,1
"jz short loc_404554  | * | mov [esp+5Ch+fctx.call_site], 2 ",gcc,1
call ___gthr_win32_mutex_unlock  | * | jz loc_404554 ,gcc,1
jz loc_404554  | * | call ___cxa_allocate_exception ,gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | loc_404610:  ",gcc,1
"loc_404610:   | * | mov edx, [esp+arg_24] ",gcc,1
"mov ecx, [esp+arg_1C]  | * | jz short loc_404632 ",gcc,1
jz short loc_404632  | * | jz short loc_404632 ,gcc,1
jz short loc_404632  | * | loc_404625:  ,gcc,1
loc_404625:   | * | call __ZN9__gnu_cxx30__throw_concurrence_lock_errorEv  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | loc_404632:  ",gcc,1
"loc_404632:   | * | mov [esp+arg_1C], 0FFFFFFFFh ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | jz short loc_404645 ",gcc,1
jz short loc_404645  | * | loc_404645:  ,gcc,1
loc_404645:   | * | ___cxa_free_dependent_exception endp ,gcc,1
___cxa_free_dependent_exception endp  | * | public __ZNKSt9bad_alloc4whatEv ,gcc,1
align 4  | * | __ZNKSt9bad_alloc4whatEv proc near  ,gcc,1
"__ZNKSt9bad_alloc4whatEv proc near   | * | mov eax, offset aStdBadAlloc  ",gcc,1
"mov eax, offset aStdBadAlloc   | * | __ZNKSt9bad_alloc4whatEv endp ",gcc,1
__ZNKSt9bad_alloc4whatEv endp  | * | public __ZNSt9bad_allocD1Ev ,gcc,1
align 4  | * | __ZNSt9bad_allocD1Ev proc near  ,gcc,1
"public __ZNSt9bad_allocD1Ev  | * | mov dword ptr [ecx], offset off_416560 ",gcc,1
__ZNSt9bad_allocD1Ev proc near   | * | jmp __ZNSt9exceptionD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416560  | * | __ZNSt9bad_allocD1Ev endp ",gcc,1
jmp __ZNSt9exceptionD1Ev   | * | align 10h ,gcc,1
__ZNSt9bad_allocD1Ev endp  | * | public __ZNSt9bad_allocD0Ev ,gcc,1
align 10h  | * | __ZNSt9bad_allocD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt9bad_allocD1Ev  ",gcc,1
call __ZNSt9bad_allocD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt9bad_allocD0Ev endp ,gcc,1
retn  | * | public __ZNKSt8bad_cast4whatEv ,gcc,1
__ZNSt9bad_allocD0Ev endp  | * | __ZNKSt8bad_cast4whatEv proc near  ,gcc,1
"__ZNKSt8bad_cast4whatEv proc near   | * | mov eax, offset aStdBadCast  ",gcc,1
"mov eax, offset aStdBadCast   | * | __ZNKSt8bad_cast4whatEv endp ",gcc,1
__ZNKSt8bad_cast4whatEv endp  | * | public __ZNSt8bad_castD1Ev ,gcc,1
align 10h  | * | __ZNSt8bad_castD1Ev proc near  ,gcc,1
"public __ZNSt8bad_castD1Ev  | * | mov dword ptr [ecx], offset off_416548 ",gcc,1
__ZNSt8bad_castD1Ev proc near   | * | jmp __ZNSt9exceptionD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416548  | * | __ZNSt8bad_castD1Ev endp ",gcc,1
jmp __ZNSt9exceptionD1Ev   | * | align 4 ,gcc,6
__ZNSt8bad_castD1Ev endp  | * | public __ZNSt8bad_castD0Ev ,gcc,1
align 4  | * | __ZNSt8bad_castD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt8bad_castD1Ev  ",gcc,1
call __ZNSt8bad_castD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt8bad_castD0Ev endp ,gcc,1
retn  | * | public __ZNKSt10bad_typeid4whatEv ,gcc,1
__ZNSt8bad_castD0Ev endp  | * | __ZNKSt10bad_typeid4whatEv proc near  ,gcc,1
"__ZNKSt10bad_typeid4whatEv proc near   | * | mov eax, offset aStdBadTypeid  ",gcc,1
"mov eax, offset aStdBadTypeid   | * | __ZNKSt10bad_typeid4whatEv endp ",gcc,1
__ZNKSt10bad_typeid4whatEv endp  | * | public __ZNSt10bad_typeidD1Ev ,gcc,1
align 4  | * | __ZNSt10bad_typeidD1Ev proc near  ,gcc,1
"public __ZNSt10bad_typeidD1Ev  | * | mov dword ptr [ecx], offset off_416388 ",gcc,1
__ZNSt10bad_typeidD1Ev proc near   | * | jmp __ZNSt9exceptionD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416388  | * | __ZNSt10bad_typeidD1Ev endp ",gcc,1
__ZNSt10bad_typeidD1Ev endp  | * | public __ZNSt10bad_typeidD0Ev ,gcc,1
align 4  | * | __ZNSt10bad_typeidD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt10bad_typeidD1Ev  ",gcc,1
call __ZNSt10bad_typeidD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt10bad_typeidD0Ev endp ,gcc,1
retn  | * | __ZNK12_GLOBAL__N_122generic_error_category4nameEv proc near ,gcc,1
"__ZNK12_GLOBAL__N_122generic_error_category4nameEv proc near  | * | mov eax, offset aGeneric  ",gcc,1
"mov eax, offset aGeneric   | * | __ZNK12_GLOBAL__N_122generic_error_category4nameEv endp ",gcc,1
__ZNK12_GLOBAL__N_122generic_error_category4nameEv endp  | * | __ZNK12_GLOBAL__N_121system_error_category4nameEv proc near ,gcc,1
"__ZNK12_GLOBAL__N_121system_error_category4nameEv proc near  | * | mov eax, offset aSystem  ",gcc,1
"mov eax, offset aSystem   | * | __ZNK12_GLOBAL__N_121system_error_category4nameEv endp ",gcc,1
__ZNK12_GLOBAL__N_121system_error_category4nameEv endp  | * | public __ZNSt14error_categoryD1Ev ,gcc,1
align 10h  | * | __ZNSt14error_categoryD1Ev proc near  ,gcc,1
"__ZNSt14error_categoryD1Ev proc near   | * | mov dword ptr [ecx], offset off_4164A8 ",gcc,1
"mov dword ptr [ecx], offset off_4164A8  | * | __ZNSt14error_categoryD1Ev endp ",gcc,1
__ZNSt14error_categoryD1Ev endp  | * | public __ZNKSt14error_category23default_error_conditionEi ,gcc,1
align 4  | * | __ZNKSt14error_category23default_error_conditionEi proc near ,gcc,1
"__ZNKSt14error_category23default_error_conditionEi proc near  | * | mov edx, ecx ",gcc,1
"mov edx, ecx  | * | retn 4 ",gcc,1
"mov eax, [esp+this]  | * | __ZNKSt14error_category23default_error_conditionEi endp ",gcc,1
retn 4  | * | align 4 ,gcc,26
__ZNKSt14error_category23default_error_conditionEi endp  | * | public __ZNKSt14error_category10equivalentEiRKSt15error_condition ,gcc,1
align 4  | * | __ZNKSt14error_category10equivalentEiRKSt15error_condition proc near ,gcc,1
"push ebx  | * | mov ebx, [esp+1Ch+arg_4] ",gcc,1
"sub esp, 18h  | * | mov eax, [ecx] ",gcc,2
"mov ebx, [esp+1Ch+arg_4]  | * | mov edx, [esp+1Ch+arg_0] ",gcc,1
"mov eax, [ecx]  | * | mov [esp+1Ch+var_1C], edx ",gcc,1
"mov edx, [esp+1Ch+arg_0]  | * | call dword ptr [eax+10h] ",gcc,1
"mov [esp+1Ch+var_1C], edx  | * | push ecx ",gcc,1
"call dword ptr [eax+10h]  | * | cmp [ebx+4], edx ",gcc,1
push ecx  | * | jz short loc_404718 ,gcc,1
"cmp [ebx+4], edx  | * | xor eax, eax ",gcc,1
"jz short loc_404718  | * | add esp, 18h ",gcc,1
"add esp, 18h  | * | retn 8 ",gcc,9
retn 8  | * | loc_404718:  ,gcc,1
"align 4  | * | cmp [ebx], eax ",gcc,1
loc_404718:   | * | setz al ,gcc,1
"cmp [ebx], eax  | * | add esp, 18h ",gcc,1
setz al  | * | pop ebx ,gcc,2
pop ebx  | * | __ZNKSt14error_category10equivalentEiRKSt15error_condition endp ,gcc,1
retn 8  | * | public __ZNKSt14error_category10equivalentERKSt10error_codei ,gcc,1
__ZNKSt14error_category10equivalentEiRKSt15error_condition endp  | * | __ZNKSt14error_category10equivalentERKSt10error_codei proc near ,gcc,1
"mov eax, [esp+arg_0]  | * | jz short loc_404734 ",gcc,1
"cmp [eax+4], ecx  | * | xor eax, eax ",gcc,1
jz short loc_404734  | * | retn 8 ,gcc,1
"xor eax, eax  | * | align 4 ",gcc,6
retn 8  | * | loc_404734:  ,gcc,1
"align 4  | * | mov edx, [esp+arg_4] ",gcc,1
"loc_404734:   | * | cmp [eax], edx ",gcc,1
"mov edx, [esp+arg_4]  | * | setz al ",gcc,1
"cmp [eax], edx  | * | retn 8 ",gcc,1
setz al  | * | __ZNKSt14error_category10equivalentERKSt10error_codei endp ,gcc,1
retn 8  | * | __ZN12_GLOBAL__N_121system_error_categoryD1Ev proc near ,gcc,1
"__ZN12_GLOBAL__N_121system_error_categoryD1Ev proc near  | * | mov dword ptr [ecx], offset off_4164A8 ",gcc,1
"mov dword ptr [ecx], offset off_4164A8  | * | __ZN12_GLOBAL__N_121system_error_categoryD1Ev endp ",gcc,1
__ZN12_GLOBAL__N_121system_error_categoryD1Ev endp  | * | __ZN12_GLOBAL__N_122generic_error_categoryD1Ev proc near ,gcc,1
"__ZN12_GLOBAL__N_122generic_error_categoryD1Ev proc near  | * | mov dword ptr [ecx], offset off_4164A8 ",gcc,1
"mov dword ptr [ecx], offset off_4164A8  | * | __ZN12_GLOBAL__N_122generic_error_categoryD1Ev endp ",gcc,1
__ZN12_GLOBAL__N_122generic_error_categoryD1Ev endp  | * | ___tcf_0_0 proc near  ,gcc,1
"align 10h  | * | mov ds:__ZN12_GLOBAL__N_1L25generic_category_instanceE, offset off_4164A8  ",gcc,1
___tcf_0_0 proc near   | * | retn ,gcc,1
"mov ds:__ZN12_GLOBAL__N_1L25generic_category_instanceE, offset off_4164A8   | * | ___tcf_0_0 endp ",gcc,1
___tcf_0_0 endp  | * | ___tcf_1 proc near  ,gcc,1
"align 4  | * | mov ds:__ZN12_GLOBAL__N_1L24system_category_instanceE, offset off_4164A8  ",gcc,1
___tcf_1 proc near   | * | retn ,gcc,1
"mov ds:__ZN12_GLOBAL__N_1L24system_category_instanceE, offset off_4164A8   | * | ___tcf_1 endp ",gcc,1
___tcf_1 endp  | * | __ZNK12_GLOBAL__N_122generic_error_category7messageEi proc near ,gcc,1
var_2C = dword ptr -2Ch  | * | var_D = byte ptr -0Dh ,data,6
var_28 = dword ptr -28h  | * | this = dword ptr 4 ,data,13
var_D = byte ptr -0Dh  | * | arg_4 = dword ptr 8 ,data,4
"sub esp, 28h  | * | mov eax, [esp+2Ch+arg_4] ",gcc,2
"mov ebx, ecx  | * | mov [esp+2Ch+var_2C], eax  ",gcc,2
"mov eax, [esp+2Ch+arg_4]  | * | call _strerror ",gcc,2
"mov [esp+2Ch+var_2C], eax   | * | lea edx, [esp+2Ch+var_D] ",gcc,2
"call _strerror  | * | mov [esp+2Ch+var_28], edx ",gcc,2
"lea edx, [esp+2Ch+var_D]  | * | mov [esp+2Ch+var_2C], eax ",gcc,2
"mov [esp+2Ch+var_28], edx  | * | mov ecx, ebx ",gcc,2
"mov [esp+2Ch+var_2C], eax  | * | call __ZNSsC1EPKcRKSaIcE  ",gcc,2
"call __ZNSsC1EPKcRKSaIcE   | * | mov eax, ebx ",gcc,2
"sub esp, 8  | * | add esp, 28h ",gcc,2
"mov eax, ebx  | * | pop ebx ",gcc,28
pop ebx  | * | __ZNK12_GLOBAL__N_122generic_error_category7messageEi endp ,gcc,1
retn 8  | * | __ZNK12_GLOBAL__N_121system_error_category7messageEi proc near ,gcc,1
pop ebx  | * | __ZNK12_GLOBAL__N_121system_error_category7messageEi endp ,gcc,1
retn 8  | * | public __ZNSt14error_categoryD0Ev ,gcc,1
__ZNK12_GLOBAL__N_121system_error_category7messageEi endp  | * | __ZNSt14error_categoryD0Ev proc near  ,gcc,1
"mov dword ptr [ecx], offset off_4164A8  | * | call __ZdlPv  ",gcc,3
"add esp, 1Ch  | * | __ZNSt14error_categoryD0Ev endp ",gcc,1
__ZNSt14error_categoryD0Ev endp  | * | __ZN12_GLOBAL__N_122generic_error_categoryD0Ev proc near ,gcc,1
"add esp, 1Ch  | * | __ZN12_GLOBAL__N_122generic_error_categoryD0Ev endp ",gcc,1
__ZN12_GLOBAL__N_122generic_error_categoryD0Ev endp  | * | __ZN12_GLOBAL__N_121system_error_categoryD0Ev proc near ,gcc,1
"add esp, 1Ch  | * | __ZN12_GLOBAL__N_121system_error_categoryD0Ev endp ",gcc,1
__ZN12_GLOBAL__N_121system_error_categoryD0Ev endp  | * | public __ZNSt12system_errorD1Ev ,gcc,1
align 10h  | * | __ZNSt12system_errorD1Ev proc near  ,gcc,1
"public __ZNSt12system_errorD1Ev  | * | mov dword ptr [ecx], offset off_416448 ",gcc,1
__ZNSt12system_errorD1Ev proc near   | * | jmp __ZNSt13runtime_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416448  | * | __ZNSt12system_errorD1Ev endp ",gcc,1
jmp __ZNSt13runtime_errorD1Ev   | * | align 4 ,gcc,4
__ZNSt12system_errorD1Ev endp  | * | public __ZNSt12system_errorD0Ev ,gcc,1
align 4  | * | __ZNSt12system_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt12system_errorD1Ev  ",gcc,1
call __ZNSt12system_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt12system_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt14error_categoryC1Ev ,gcc,1
__ZNSt12system_errorD0Ev endp  | * | __ZNSt14error_categoryC1Ev proc near  ,gcc,1
"__ZNSt14error_categoryC1Ev proc near   | * | mov dword ptr [ecx], offset off_4164A8 ",gcc,1
"mov dword ptr [ecx], offset off_4164A8  | * | __ZNSt14error_categoryC1Ev endp ",gcc,1
__ZNSt14error_categoryC1Ev endp  | * | public __ZSt15system_categoryv ,gcc,1
align 4  | * | __ZSt15system_categoryv proc near ,gcc,1
"public __ZSt15system_categoryv  | * | mov eax, offset __ZN12_GLOBAL__N_1L24system_category_instanceE  ",gcc,1
__ZSt15system_categoryv proc near  | * | retn ,gcc,1
"mov eax, offset __ZN12_GLOBAL__N_1L24system_category_instanceE   | * | __ZSt15system_categoryv endp ",gcc,1
__ZSt15system_categoryv endp  | * | public __ZSt16generic_categoryv ,gcc,1
align 4  | * | __ZSt16generic_categoryv proc near  ,gcc,1
"public __ZSt16generic_categoryv  | * | mov eax, offset __ZN12_GLOBAL__N_1L25generic_category_instanceE  ",gcc,1
__ZSt16generic_categoryv proc near   | * | retn ,gcc,1
"mov eax, offset __ZN12_GLOBAL__N_1L25generic_category_instanceE   | * | __ZSt16generic_categoryv endp ",gcc,1
__ZSt16generic_categoryv endp  | * | public __ZNKSt10error_code23default_error_conditionEv ,gcc,1
align 4  | * | __ZNKSt10error_code23default_error_conditionEv proc near ,gcc,1
"sub esp, 1Ch  | * | mov edx, [eax] ",gcc,1
"mov eax, [ecx+4]  | * | mov ecx, [ecx] ",gcc,1
"mov edx, [eax]  | * | mov [esp+1Ch+var_1C], ecx ",gcc,1
"mov ecx, [ecx]  | * | mov ecx, eax ",gcc,1
"mov [esp+1Ch+var_1C], ecx  | * | call dword ptr [edx+10h] ",gcc,1
"mov ecx, eax  | * | push ecx ",gcc,1
"call dword ptr [edx+10h]  | * | add esp, 1Ch ",gcc,1
push ecx  | * | retn ,gcc,1
"add esp, 1Ch  | * | __ZNKSt10error_code23default_error_conditionEv endp ",gcc,1
__ZNKSt10error_code23default_error_conditionEv endp  | * | __ZNK12_GLOBAL__N_121future_error_category4nameEv proc near ,gcc,1
"__ZNK12_GLOBAL__N_121future_error_category4nameEv proc near  | * | mov eax, offset aFuture  ",gcc,1
"mov eax, offset aFuture   | * | __ZNK12_GLOBAL__N_121future_error_category4nameEv endp ",gcc,1
__ZNK12_GLOBAL__N_121future_error_category4nameEv endp  | * | public __ZNSt12future_errorD1Ev ,gcc,1
align 4  | * | __ZNSt12future_errorD1Ev proc near  ,gcc,1
"public __ZNSt12future_errorD1Ev  | * | mov dword ptr [ecx], offset off_416400 ",gcc,1
__ZNSt12future_errorD1Ev proc near   | * | jmp __ZNSt11logic_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416400  | * | __ZNSt12future_errorD1Ev endp ",gcc,1
jmp __ZNSt11logic_errorD1Ev   | * | align 4 ,gcc,4
__ZNSt12future_errorD1Ev endp  | * | public __ZNSt12future_errorD0Ev ,gcc,1
align 4  | * | __ZNSt12future_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt12future_errorD1Ev  ",gcc,1
call __ZNSt12future_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt12future_errorD0Ev endp ,gcc,1
retn  | * | __ZN12_GLOBAL__N_121future_error_categoryD1Ev proc near ,gcc,1
"__ZN12_GLOBAL__N_121future_error_categoryD1Ev proc near  | * | mov dword ptr [ecx], offset off_414308 ",gcc,1
"mov dword ptr [ecx], offset off_414308  | * | __ZN12_GLOBAL__N_121future_error_categoryD1Ev endp ",gcc,1
jmp __ZNSt14error_categoryD1Ev   | * | align 4 ,gcc,1
__ZN12_GLOBAL__N_121future_error_categoryD1Ev endp  | * | ___tcf_0_1 proc near  ,gcc,1
"align 4  | * | mov ds:__ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec, offset off_414308  ",gcc,1
"___tcf_0_1 proc near   | * | mov ecx, offset __ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec  ",gcc,1
"mov ds:__ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec, offset off_414308   | * | jmp __ZNSt14error_categoryD1Ev  ",gcc,1
"mov ecx, offset __ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec   | * | ___tcf_0_1 endp ",gcc,1
jmp __ZNSt14error_categoryD1Ev   | * | __ZN12_GLOBAL__N_121future_error_categoryD0Ev proc near ,gcc,1
"sub esp, 18h  | * | mov dword ptr [ecx], offset off_414308 ",gcc,1
"mov ebx, ecx  | * | call __ZNSt14error_categoryD1Ev  ",gcc,1
"mov dword ptr [ecx], offset off_414308  | * | mov [esp+1Ch+var_1C], ebx  ",gcc,1
call __ZNSt14error_categoryD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZN12_GLOBAL__N_121future_error_categoryD0Ev endp ,gcc,1
__ZN12_GLOBAL__N_121future_error_categoryD0Ev endp  | * | public __ZNKSt12future_error4whatEv ,gcc,1
align 10h  | * | __ZNKSt12future_error4whatEv proc near  ,gcc,1
lpfctx = dword ptr -6Ch  | * | fctx = SjLj_Function_Context ptr -50h ,data,1
var_68 = dword ptr -68h  | * | var_11 = dword ptr -11h ,data,1
fctx = SjLj_Function_Context ptr -50h  | * | this = dword ptr 4 ,data,1
"push esi  | * | sub esp, 64h ",gcc,1
"sub esp, 64h  | * | mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov ebx, ecx  | * | mov [esp+6Ch+fctx.lsda], offset dword_412388 ",gcc,1
"mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea esi, [esp+6Ch+fctx] ",gcc,3
"mov [esp+6Ch+fctx.lsda], offset dword_412388  | * | mov [esp+6Ch+lpfctx], esi  ",gcc,1
"lea esi, [esp+6Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,3
"mov [esp+6Ch+lpfctx], esi   | * | mov eax, [ebx+0Ch] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov edx, [eax] ",gcc,1
"mov eax, [ebx+0Ch]  | * | mov ecx, [ebx+8] ",gcc,1
"mov edx, [eax]  | * | mov [esp+6Ch+var_68], ecx ",gcc,1
"mov ecx, [ebx+8]  | * | mov [esp+6Ch+lpfctx], eax ",gcc,1
"mov [esp+6Ch+var_68], ecx  | * | mov eax, [edx+0Ch] ",gcc,1
"mov [esp+6Ch+lpfctx], eax  | * | mov [esp+6Ch+fctx.call_site], 0 ",gcc,1
"mov eax, [edx+0Ch]  | * | lea ecx, [esp+6Ch+var_11+1] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0  | * | call eax ",gcc,1
"call eax  | * | mov ebx, [esp+6Ch+var_11+1] ",gcc,1
"sub esp, 8  | * | mov edx, ds:__CRT_MT ",gcc,1
"mov ebx, [esp+6Ch+var_11+1]  | * | test edx, edx ",gcc,1
"mov edx, ds:__CRT_MT  | * | jnz short loc_404944 ",gcc,1
"test edx, edx  | * | mov eax, [ebx-4] ",gcc,2
"jnz short loc_404944  | * | lea edx, [eax-1] ",gcc,1
"mov eax, [ebx-4]  | * | mov [ebx-4], edx ",gcc,3
"lea edx, [eax-1]  | * | test eax, eax ",gcc,8
"mov [ebx-4], edx  | * | jle short loc_40495B ",gcc,1
"test eax, eax  | * | loc_404931:  ",gcc,1
"jle short loc_40495B  | * | mov [esp+6Ch+lpfctx], esi  ",gcc,1
loc_404931:   | * | call __Unwind_SjLj_Unregister ,gcc,1
"mov [esp+6Ch+lpfctx], esi   | * | mov eax, ebx ",gcc,2
"call __Unwind_SjLj_Unregister  | * | add esp, 64h ",gcc,3
"add esp, 64h  | * | pop esi ",gcc,2
retn  | * | loc_404944:  ,gcc,1
"align 4  | * | mov [esp+6Ch+var_68], 0FFFFFFFFh  ",gcc,2
"loc_404944:   | * | lea eax, [ebx-4] ",gcc,1
"mov [esp+6Ch+var_68], 0FFFFFFFFh   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,2
"lea eax, [ebx-4]  | * | call __ZN9__gnu_cxx18__exchange_and_addEPVii  ",gcc,3
"mov [esp+6Ch+lpfctx], eax   | * | test eax, eax ",gcc,2
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | jg short loc_404931 ,gcc,1
"test eax, eax  | * | loc_40495B:  ",gcc,1
"jg short loc_404931  | * | lea ecx, [ebx-0Ch]  ",gcc,1
"loc_40495B:   | * | lea eax, [esp+6Ch+var_11] ",gcc,1
"lea ecx, [ebx-0Ch]   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | mov [esp+6Ch+lpfctx], esi  ",gcc,1
push eax  | * | call __Unwind_SjLj_Unregister ,gcc,1
pop esi  | * | __ZNKSt12future_error4whatEv endp ,gcc,1
__ZNKSt12future_error4whatEv endp  | * | __ZNK12_GLOBAL__N_121future_error_category7messageEi proc near ,gcc,1
var_68 = dword ptr -68h  | * | var_58 = dword ptr -58h ,data,1
var_2C = dword ptr -2Ch  | * | var_D = dword ptr -0Dh ,data,5
var_D = dword ptr -0Dh  | * | arg_4 = dword ptr 8 ,data,2
this = dword ptr 4  | * | arg_10 = dword ptr 14h ,data,1
arg_4 = dword ptr 8  | * | lpuexcpt = dword ptr 18h ,data,3
"push ebp  | * | mov [esp+6Ch+var_58], ecx ",gcc,2
"sub esp, 68h  | * | mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,2
"mov [esp+6Ch+var_58], ecx  | * | mov [esp+6Ch+fctx.lsda], offset dword_41238C ",gcc,1
"mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea eax, [esp+6Ch+var_D+1] ",gcc,2
"mov [esp+6Ch+fctx.lsda], offset dword_41238C  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_D+1]  | * | mov [esp+6Ch+var_2C], offset loc_404AD1 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_404AD1  | * | lea edx, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+var_28], esp  | * | mov [esp+6Ch+lpfctx], edx  ",gcc,3
"lea edx, [esp+6Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,3
"mov [esp+6Ch+lpfctx], edx   | * | lea eax, [esp+6Ch+var_D] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov [esp+6Ch+var_64], eax  ",gcc,1
"lea eax, [esp+6Ch+var_D]  | * | mov [esp+6Ch+var_68], 0 ",gcc,3
"mov [esp+6Ch+var_64], eax   | * | mov [esp+6Ch+lpfctx], 0 ",gcc,2
"mov [esp+6Ch+var_68], 0  | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+6Ch+lpfctx], 0  | * | call __ZNSs12_S_constructEjcRKSaIcE  ",gcc,5
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | mov edx, [esp+6Ch+var_58] ",gcc,1
"call __ZNSs12_S_constructEjcRKSaIcE   | * | mov [edx], eax ",gcc,3
"mov edx, [esp+6Ch+var_58]  | * | cmp [esp+6Ch+arg_4], 2 ",gcc,1
"mov [edx], eax  | * | jz loc_404A84 ",gcc,1
"cmp [esp+6Ch+arg_4], 2  | * | jg short loc_404A30 ",gcc,1
"jz loc_404A84  | * | cmp [esp+6Ch+arg_4], 1 ",gcc,1
jg short loc_404A30  | * | jz loc_404AAC ,gcc,1
"cmp [esp+6Ch+arg_4], 1  | * | loc_4049F6:  ",gcc,1
"jz loc_404AAC  | * | mov [esp+6Ch+var_68], 0Dh  ",gcc,1
"loc_4049F6:   | * | mov [esp+6Ch+lpfctx], offset aUnknownError  ",gcc,1
"mov [esp+6Ch+var_68], 0Dh   | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], offset aUnknownError   | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 1  | * | call __ZNSs6assignEPKcj  ",gcc,5
"mov ecx, [esp+6Ch+var_58]  | * | loc_404A16:  ",gcc,1
"call __ZNSs6assignEPKcj   | * | sub esp, 8 ",gcc,1
"loc_404A16:   | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"lea eax, [esp+6Ch+fctx]  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"call __Unwind_SjLj_Unregister  | * | add esp, 68h ",gcc,2
"mov eax, [esp+6Ch+var_58]  | * | pop ebp ",gcc,1
"add esp, 68h  | * | retn 8 ",gcc,1
pop ebp  | * | loc_404A30:  ,gcc,1
"retn 8  | * | cmp [esp+6Ch+arg_4], 3 ",gcc,1
loc_404A30:   | * | jz short loc_404A60 ,gcc,1
"cmp [esp+6Ch+arg_4], 3  | * | cmp [esp+6Ch+arg_4], 4 ",gcc,1
jz short loc_404A60  | * | jnz short loc_4049F6 ,gcc,1
"cmp [esp+6Ch+arg_4], 4  | * | mov [esp+6Ch+var_68], 0Eh  ",gcc,1
"jnz short loc_4049F6  | * | mov [esp+6Ch+lpfctx], offset aBrokenPromise  ",gcc,1
"mov [esp+6Ch+var_68], 0Eh   | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], offset aBrokenPromise   | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
"mov ecx, [esp+6Ch+var_58]  | * | jmp short loc_404A16 ",gcc,2
call __ZNSs6assignEPKcj   | * | loc_404A60:  ,gcc,1
"jmp short loc_404A16  | * | mov [esp+6Ch+var_68], 13h  ",gcc,1
"loc_404A60:   | * | mov [esp+6Ch+lpfctx], offset aNoAssociatedSt  ",gcc,1
"mov [esp+6Ch+var_68], 13h   | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], offset aNoAssociatedSt   | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
call __ZNSs6assignEPKcj   | * | align 4 ,gcc,2
jmp short loc_404A16  | * | loc_404A84:  ,gcc,1
"align 4  | * | mov [esp+6Ch+var_68], 19h  ",gcc,1
"loc_404A84:   | * | mov [esp+6Ch+lpfctx], offset aPromiseAlready  ",gcc,1
"mov [esp+6Ch+var_68], 19h   | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], offset aPromiseAlready   | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
"mov ecx, [esp+6Ch+var_58]  | * | jmp loc_404A16 ",gcc,2
jmp loc_404A16  | * | loc_404AAC:  ,gcc,1
"align 4  | * | mov [esp+6Ch+var_68], 18h  ",gcc,1
"loc_404AAC:   | * | mov [esp+6Ch+lpfctx], offset aFutureAlreadyR  ",gcc,1
"mov [esp+6Ch+var_68], 18h   | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], offset aFutureAlreadyR   | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
call __ZNSs6assignEPKcj   | * | loc_404AD1:  ,gcc,1
"jmp loc_404A16  | * | mov eax, [esp+arg_20] ",gcc,1
"loc_404AD1:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_20]  | * | mov ecx, [esp+arg_10] ",gcc,3
"mov [esp+lpuexcpt], eax  | * | call __ZNSsD1Ev  ",gcc,4
"mov ecx, [esp+arg_10]  | * | mov edx, [esp+lpuexcpt] ",gcc,1
"call __ZNSsD1Ev   | * | mov [esp+0], edx  ",gcc,3
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZNK12_GLOBAL__N_121future_error_category7messageEi endp ",gcc,1
__ZNK12_GLOBAL__N_121future_error_category7messageEi endp  | * | public __ZSt15future_categoryv ,gcc,1
align 4  | * | __ZSt15future_categoryv proc near  ,gcc,1
"__ZSt15future_categoryv proc near   | * | cmp ds:__ZGVZN12_GLOBAL__N_126__future_category_instanceEvE5__fec, 0  ",gcc,1
"cmp ds:__ZGVZN12_GLOBAL__N_126__future_category_instanceEvE5__fec, 0   | * | mov eax, offset __ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec  ",gcc,1
jz short loc_404B08  | * | retn ,gcc,1
"mov eax, offset __ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec   | * | align 4 ",gcc,1
retn  | * | loc_404B08:  ,gcc,1
"loc_404B08:   | * | mov [esp+1Ch+var_1C], offset __ZGVZN12_GLOBAL__N_126__future_category_instanceEvE5__fec  ",gcc,1
"sub esp, 1Ch  | * | call ___cxa_guard_acquire ",gcc,1
"mov [esp+1Ch+var_1C], offset __ZGVZN12_GLOBAL__N_126__future_category_instanceEvE5__fec   | * | test eax, eax ",gcc,1
call ___cxa_guard_acquire  | * | jz short loc_404B47 ,gcc,1
"test eax, eax  | * | mov ecx, offset __ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec  ",gcc,1
jz short loc_404B47  | * | call __ZNSt14error_categoryC1Ev  ,gcc,1
"mov ecx, offset __ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec   | * | mov ds:__ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec, offset off_414308  ",gcc,1
"call __ZNSt14error_categoryC1Ev   | * | mov [esp+1Ch+var_1C], offset __ZGVZN12_GLOBAL__N_126__future_category_instanceEvE5__fec  ",gcc,1
"mov ds:__ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec, offset off_414308   | * | call ___cxa_guard_release ",gcc,1
"mov [esp+1Ch+var_1C], offset __ZGVZN12_GLOBAL__N_126__future_category_instanceEvE5__fec   | * | mov [esp+1Ch+var_1C], offset ___tcf_0_1  ",gcc,1
call ___cxa_guard_release  | * | call _atexit ,gcc,1
"mov [esp+1Ch+var_1C], offset ___tcf_0_1   | * | loc_404B47:  ",gcc,1
"call _atexit  | * | mov eax, offset __ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec  ",gcc,1
"loc_404B47:   | * | add esp, 1Ch ",gcc,1
"mov eax, offset __ZZN12_GLOBAL__N_126__future_category_instanceEvE5__fec   | * | retn ",gcc,1
"add esp, 1Ch  | * | __ZSt15future_categoryv endp ",gcc,1
retn  | * | public __ZNSt17bad_function_callD1Ev ,gcc,1
__ZSt15future_categoryv endp  | * | __ZNSt17bad_function_callD1Ev proc near  ,gcc,1
"public __ZNSt17bad_function_callD1Ev  | * | mov dword ptr [ecx], offset off_416530 ",gcc,1
__ZNSt17bad_function_callD1Ev proc near   | * | jmp __ZNSt9exceptionD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416530  | * | __ZNSt17bad_function_callD1Ev endp ",gcc,1
__ZNSt17bad_function_callD1Ev endp  | * | public __ZNSt17bad_function_callD0Ev ,gcc,1
align 4  | * | __ZNSt17bad_function_callD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt17bad_function_callD1Ev  ",gcc,1
call __ZNSt17bad_function_callD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt17bad_function_callD0Ev endp ,gcc,1
retn  | * | public __ZNKSt11logic_error4whatEv ,gcc,1
__ZNSt17bad_function_callD0Ev endp  | * | __ZNKSt11logic_error4whatEv proc near  ,gcc,1
"__ZNKSt11logic_error4whatEv proc near   | * | mov eax, [ecx+4] ",gcc,1
"mov eax, [ecx+4]  | * | __ZNKSt11logic_error4whatEv endp ",gcc,1
retn  | * | public __ZNKSt13runtime_error4whatEv ,gcc,1
__ZNKSt11logic_error4whatEv endp  | * | __ZNKSt13runtime_error4whatEv proc near  ,gcc,1
"__ZNKSt13runtime_error4whatEv proc near   | * | mov eax, [ecx+4] ",gcc,1
"mov eax, [ecx+4]  | * | __ZNKSt13runtime_error4whatEv endp ",gcc,1
retn  | * | public __ZNSt13runtime_errorD1Ev ,gcc,1
__ZNKSt13runtime_error4whatEv endp  | * | __ZNSt13runtime_errorD1Ev proc near  ,gcc,1
"sub esp, 24h  | * | mov dword ptr [ecx], offset off_416478 ",gcc,1
"mov ebx, ecx  | * | mov esi, [ecx+4] ",gcc,3
"mov dword ptr [ecx], offset off_416478  | * | mov edx, ds:__CRT_MT ",gcc,1
"mov esi, [ecx+4]  | * | test edx, edx ",gcc,2
"mov edx, ds:__CRT_MT  | * | jnz short loc_404BB0 ",gcc,1
"test edx, edx  | * | mov eax, [esi-4] ",gcc,2
"jnz short loc_404BB0  | * | lea edx, [eax-1] ",gcc,1
"mov eax, [esi-4]  | * | mov [esi-4], edx ",gcc,4
"mov [esi-4], edx  | * | jle short loc_404BC7 ",gcc,1
"test eax, eax  | * | loc_404BA3:  ",gcc,1
"jle short loc_404BC7  | * | mov ecx, ebx ",gcc,1
loc_404BA3:   | * | call __ZNSt9exceptionD1Ev  ,gcc,1
"mov ecx, ebx  | * | add esp, 24h ",gcc,6
call __ZNSt9exceptionD1Ev   | * | pop ebx ,gcc,6
pop esi  | * | loc_404BB0:  ,gcc,1
"retn  | * | mov [esp+2Ch+var_28], 0FFFFFFFFh  ",gcc,2
"loc_404BB0:   | * | lea eax, [esi-4] ",gcc,1
"mov [esp+2Ch+var_28], 0FFFFFFFFh   | * | mov [esp+2Ch+var_2C], eax  ",gcc,6
"lea eax, [esi-4]  | * | call __ZN9__gnu_cxx18__exchange_and_addEPVii  ",gcc,5
"mov [esp+2Ch+var_2C], eax   | * | test eax, eax ",gcc,8
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | jg short loc_404BA3 ,gcc,1
"test eax, eax  | * | loc_404BC7:  ",gcc,1
"jg short loc_404BA3  | * | lea ecx, [esi-0Ch]  ",gcc,1
"loc_404BC7:   | * | lea eax, [esp+2Ch+var_D] ",gcc,1
"lea ecx, [esi-0Ch]   | * | mov [esp+2Ch+var_2C], eax  ",gcc,3
"lea eax, [esp+2Ch+var_D]  | * | call __ZNSs4_Rep10_M_destroyERKSaIcE  ",gcc,3
"mov [esp+2Ch+var_2C], eax   | * | push eax  ",gcc,2
"call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | mov ecx, ebx ",gcc,3
push eax   | * | call __ZNSt9exceptionD1Ev  ,gcc,2
pop esi  | * | __ZNSt13runtime_errorD1Ev endp ,gcc,1
retn  | * | public __ZNSt13runtime_errorD0Ev ,gcc,1
__ZNSt13runtime_errorD1Ev endp  | * | __ZNSt13runtime_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt13runtime_errorD1Ev  ",gcc,1
call __ZNSt13runtime_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt13runtime_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt15underflow_errorD1Ev ,gcc,1
__ZNSt13runtime_errorD0Ev endp  | * | __ZNSt15underflow_errorD1Ev proc near  ,gcc,1
"public __ZNSt15underflow_errorD1Ev  | * | mov dword ptr [ecx], offset off_416500 ",gcc,1
__ZNSt15underflow_errorD1Ev proc near   | * | jmp __ZNSt13runtime_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416500  | * | __ZNSt15underflow_errorD1Ev endp ",gcc,1
__ZNSt15underflow_errorD1Ev endp  | * | public __ZNSt15underflow_errorD0Ev ,gcc,1
align 4  | * | __ZNSt15underflow_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt15underflow_errorD1Ev  ",gcc,1
call __ZNSt15underflow_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt15underflow_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt14overflow_errorD1Ev ,gcc,1
__ZNSt15underflow_errorD0Ev endp  | * | __ZNSt14overflow_errorD1Ev proc near  ,gcc,1
"public __ZNSt14overflow_errorD1Ev  | * | mov dword ptr [ecx], offset off_4164E8 ",gcc,1
__ZNSt14overflow_errorD1Ev proc near   | * | jmp __ZNSt13runtime_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_4164E8  | * | __ZNSt14overflow_errorD1Ev endp ",gcc,1
__ZNSt14overflow_errorD1Ev endp  | * | public __ZNSt14overflow_errorD0Ev ,gcc,1
align 4  | * | __ZNSt14overflow_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt14overflow_errorD1Ev  ",gcc,1
call __ZNSt14overflow_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt14overflow_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt11range_errorD1Ev ,gcc,1
__ZNSt14overflow_errorD0Ev endp  | * | __ZNSt11range_errorD1Ev proc near  ,gcc,1
"public __ZNSt11range_errorD1Ev  | * | mov dword ptr [ecx], offset off_4163B8 ",gcc,1
__ZNSt11range_errorD1Ev proc near   | * | jmp __ZNSt13runtime_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_4163B8  | * | __ZNSt11range_errorD1Ev endp ",gcc,1
jmp __ZNSt13runtime_errorD1Ev   | * | align 10h ,gcc,1
__ZNSt11range_errorD1Ev endp  | * | public __ZNSt11range_errorD0Ev ,gcc,1
align 10h  | * | __ZNSt11range_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt11range_errorD1Ev  ",gcc,1
call __ZNSt11range_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt11range_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt11logic_errorD1Ev ,gcc,1
__ZNSt11range_errorD0Ev endp  | * | __ZNSt11logic_errorD1Ev proc near  ,gcc,1
"sub esp, 24h  | * | mov dword ptr [ecx], offset off_4163A0 ",gcc,1
"mov dword ptr [ecx], offset off_4163A0  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov esi, [ecx+4]  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_404C9C ",gcc,1
"test eax, eax  | * | mov eax, [esi-4] ",gcc,1
"jnz short loc_404C9C  | * | lea edx, [eax-1] ",gcc,1
"mov [esi-4], edx  | * | jle short loc_404CB3 ",gcc,1
"test eax, eax  | * | loc_404C8E:  ",gcc,1
"jle short loc_404CB3  | * | mov ecx, ebx ",gcc,1
loc_404C8E:   | * | call __ZNSt9exceptionD1Ev  ,gcc,1
retn  | * | loc_404C9C:  ,gcc,1
"align 4  | * | mov [esp+2Ch+var_28], 0FFFFFFFFh  ",gcc,3
"loc_404C9C:   | * | lea eax, [esi-4] ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | jg short loc_404C8E ,gcc,1
"test eax, eax  | * | loc_404CB3:  ",gcc,1
"jg short loc_404C8E  | * | lea ecx, [esi-0Ch]  ",gcc,1
"loc_404CB3:   | * | lea eax, [esp+2Ch+var_D] ",gcc,1
"mov [esp+2Ch+var_2C], eax   | * | push ecx  ",gcc,1
push ecx   | * | call __ZNSt9exceptionD1Ev  ,gcc,1
pop esi  | * | __ZNSt11logic_errorD1Ev endp ,gcc,1
retn  | * | public __ZNSt11logic_errorD0Ev ,gcc,1
__ZNSt11logic_errorD1Ev endp  | * | __ZNSt11logic_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt11logic_errorD1Ev  ",gcc,1
call __ZNSt11logic_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt11logic_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt12out_of_rangeD1Ev ,gcc,1
__ZNSt11logic_errorD0Ev endp  | * | __ZNSt12out_of_rangeD1Ev proc near  ,gcc,1
"public __ZNSt12out_of_rangeD1Ev  | * | mov dword ptr [ecx], offset off_416430 ",gcc,1
__ZNSt12out_of_rangeD1Ev proc near   | * | jmp __ZNSt11logic_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416430  | * | __ZNSt12out_of_rangeD1Ev endp ",gcc,1
__ZNSt12out_of_rangeD1Ev endp  | * | public __ZNSt12out_of_rangeD0Ev ,gcc,1
align 4  | * | __ZNSt12out_of_rangeD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt12out_of_rangeD1Ev  ",gcc,1
call __ZNSt12out_of_rangeD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt12out_of_rangeD0Ev endp ,gcc,1
retn  | * | public __ZNSt12length_errorD1Ev ,gcc,1
__ZNSt12out_of_rangeD0Ev endp  | * | __ZNSt12length_errorD1Ev proc near  ,gcc,1
"public __ZNSt12length_errorD1Ev  | * | mov dword ptr [ecx], offset off_416418 ",gcc,1
__ZNSt12length_errorD1Ev proc near   | * | jmp __ZNSt11logic_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416418  | * | __ZNSt12length_errorD1Ev endp ",gcc,1
__ZNSt12length_errorD1Ev endp  | * | public __ZNSt12length_errorD0Ev ,gcc,1
align 4  | * | __ZNSt12length_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt12length_errorD1Ev  ",gcc,1
call __ZNSt12length_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt12length_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt16invalid_argumentD1Ev ,gcc,1
__ZNSt12length_errorD0Ev endp  | * | __ZNSt16invalid_argumentD1Ev proc near  ,gcc,1
"public __ZNSt16invalid_argumentD1Ev  | * | mov dword ptr [ecx], offset off_416518 ",gcc,1
__ZNSt16invalid_argumentD1Ev proc near   | * | jmp __ZNSt11logic_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416518  | * | __ZNSt16invalid_argumentD1Ev endp ",gcc,1
__ZNSt16invalid_argumentD1Ev endp  | * | public __ZNSt16invalid_argumentD0Ev ,gcc,1
align 4  | * | __ZNSt16invalid_argumentD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt16invalid_argumentD1Ev  ",gcc,1
call __ZNSt16invalid_argumentD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt16invalid_argumentD0Ev endp ,gcc,1
retn  | * | public __ZNSt12domain_errorD1Ev ,gcc,1
__ZNSt16invalid_argumentD0Ev endp  | * | __ZNSt12domain_errorD1Ev proc near  ,gcc,1
"public __ZNSt12domain_errorD1Ev  | * | mov dword ptr [ecx], offset off_4163E8 ",gcc,1
__ZNSt12domain_errorD1Ev proc near   | * | jmp __ZNSt11logic_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_4163E8  | * | __ZNSt12domain_errorD1Ev endp ",gcc,1
jmp __ZNSt11logic_errorD1Ev   | * | align 10h ,gcc,1
__ZNSt12domain_errorD1Ev endp  | * | public __ZNSt12domain_errorD0Ev ,gcc,1
align 10h  | * | __ZNSt12domain_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt12domain_errorD1Ev  ",gcc,1
call __ZNSt12domain_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt12domain_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt11logic_errorC1ERKSs ,gcc,1
__ZNSt12domain_errorD0Ev endp  | * | __ZNSt11logic_errorC1ERKSs proc near  ,gcc,1
var_18 = dword ptr -18h  | * | this = dword ptr 4 ,data,30
this = dword ptr 4  | * | lpuexcpt = dword ptr 18h ,data,2
"push ebp  | * | mov [esp+5Ch+var_48], ecx ",gcc,2
"sub esp, 58h  | * | mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,3
"mov [esp+5Ch+var_48], ecx  | * | mov [esp+5Ch+fctx.lsda], offset dword_412394 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412394  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_404DE7 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_404DE7  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov dword ptr [eax], offset off_4163A0 ",gcc,1
"mov eax, [esp+5Ch+var_48]  | * | mov ecx, eax ",gcc,2
"mov dword ptr [eax], offset off_4163A0  | * | add ecx, 4 ",gcc,1
"mov ecx, eax  | * | mov eax, [esp+5Ch+this] ",gcc,3
"add ecx, 4  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,3
"mov eax, [esp+5Ch+this]  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,3
"mov [esp+5Ch+lpfctx], eax   | * | call __ZNSsC1ERKSs  ",gcc,3
"mov [esp+5Ch+fctx.call_site], 1  | * | push eax ",gcc,1
"call __ZNSsC1ERKSs   | * | lea eax, [esp+5Ch+fctx] ",gcc,3
"push eax  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,3
"add esp, 58h  | * | retn 4 ",gcc,3
pop ebp  | * | loc_404DE7:  ,gcc,1
"retn 4  | * | mov eax, [esp+arg_20] ",gcc,3
"loc_404DE7:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov [esp+lpuexcpt], eax  | * | call __ZNSt9exceptionD1Ev  ",gcc,2
"mov ecx, [esp+arg_10]  | * | mov eax, [esp+lpuexcpt] ",gcc,2
"call __ZNSt9exceptionD1Ev   | * | mov [esp+0], eax  ",gcc,2
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZNSt11logic_errorC1ERKSs endp ",gcc,1
call __Unwind_SjLj_Resume  | * | public __ZNSt12domain_errorC1ERKSs ,gcc,1
__ZNSt11logic_errorC1ERKSs endp  | * | __ZNSt12domain_errorC1ERKSs proc near  ,gcc,1
"sub esp, 18h  | * | mov eax, [esp+1Ch+this] ",gcc,8
"mov ebx, ecx  | * | mov [esp+1Ch+var_1C], eax  ",gcc,7
"mov eax, [esp+1Ch+this]  | * | call __ZNSt11logic_errorC1ERKSs  ",gcc,4
"mov [esp+1Ch+var_1C], eax   | * | push eax ",gcc,6
"call __ZNSt11logic_errorC1ERKSs   | * | mov dword ptr [ebx], offset off_4163E8 ",gcc,1
"push eax  | * | add esp, 18h ",gcc,7
"mov dword ptr [ebx], offset off_4163E8  | * | pop ebx ",gcc,1
"add esp, 18h  | * | retn 4 ",gcc,10
pop ebx  | * | __ZNSt12domain_errorC1ERKSs endp ,gcc,1
retn 4  | * | public __ZNSt16invalid_argumentC1ERKSs ,gcc,1
__ZNSt12domain_errorC1ERKSs endp  | * | __ZNSt16invalid_argumentC1ERKSs proc near ,gcc,1
"call __ZNSt11logic_errorC1ERKSs   | * | mov dword ptr [ebx], offset off_416518 ",gcc,1
"mov dword ptr [ebx], offset off_416518  | * | pop ebx ",gcc,1
pop ebx  | * | __ZNSt16invalid_argumentC1ERKSs endp ,gcc,1
retn 4  | * | public __ZNSt12length_errorC1ERKSs ,gcc,1
__ZNSt16invalid_argumentC1ERKSs endp  | * | __ZNSt12length_errorC1ERKSs proc near  ,gcc,1
"call __ZNSt11logic_errorC1ERKSs   | * | mov dword ptr [ebx], offset off_416418 ",gcc,1
"mov dword ptr [ebx], offset off_416418  | * | pop ebx ",gcc,1
pop ebx  | * | __ZNSt12length_errorC1ERKSs endp ,gcc,1
retn 4  | * | public __ZNSt12out_of_rangeC1ERKSs ,gcc,1
__ZNSt12length_errorC1ERKSs endp  | * | __ZNSt12out_of_rangeC1ERKSs proc near  ,gcc,1
"call __ZNSt11logic_errorC1ERKSs   | * | mov dword ptr [ebx], offset off_416430 ",gcc,1
"mov dword ptr [ebx], offset off_416430  | * | pop ebx ",gcc,1
pop ebx  | * | __ZNSt12out_of_rangeC1ERKSs endp ,gcc,1
retn 4  | * | public __ZNSt13runtime_errorC1ERKSs ,gcc,1
__ZNSt12out_of_rangeC1ERKSs endp  | * | __ZNSt13runtime_errorC1ERKSs proc near  ,gcc,1
"mov [esp+5Ch+var_48], ecx  | * | mov [esp+5Ch+fctx.lsda], offset word_41239A ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset word_41239A  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_404EFB ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_404EFB  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov dword ptr [eax], offset off_416478 ",gcc,1
"mov dword ptr [eax], offset off_416478  | * | add ecx, 4 ",gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | push edx ",gcc,1
"push edx  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
pop ebp  | * | loc_404EFB:  ,gcc,1
"loc_404EFB:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZNSt13runtime_errorC1ERKSs endp ",gcc,1
call __Unwind_SjLj_Resume  | * | public __ZNSt11range_errorC1ERKSs ,gcc,1
__ZNSt13runtime_errorC1ERKSs endp  | * | __ZNSt11range_errorC1ERKSs proc near  ,gcc,1
"mov eax, [esp+1Ch+this]  | * | call __ZNSt13runtime_errorC1ERKSs  ",gcc,3
"mov [esp+1Ch+var_1C], eax   | * | push ecx ",gcc,1
"call __ZNSt13runtime_errorC1ERKSs   | * | mov dword ptr [ebx], offset off_4163B8 ",gcc,1
"push ecx  | * | add esp, 18h ",gcc,1
"mov dword ptr [ebx], offset off_4163B8  | * | pop ebx ",gcc,1
pop ebx  | * | __ZNSt11range_errorC1ERKSs endp ,gcc,1
retn 4  | * | public __ZNSt14overflow_errorC1ERKSs ,gcc,1
__ZNSt11range_errorC1ERKSs endp  | * | __ZNSt14overflow_errorC1ERKSs proc near  ,gcc,1
"call __ZNSt13runtime_errorC1ERKSs   | * | mov dword ptr [ebx], offset off_4164E8 ",gcc,1
"mov dword ptr [ebx], offset off_4164E8  | * | pop ebx ",gcc,1
pop ebx  | * | __ZNSt14overflow_errorC1ERKSs endp ,gcc,1
retn 4  | * | public __ZNSt15underflow_errorC1ERKSs ,gcc,1
__ZNSt14overflow_errorC1ERKSs endp  | * | __ZNSt15underflow_errorC1ERKSs proc near ,gcc,1
"call __ZNSt13runtime_errorC1ERKSs   | * | mov dword ptr [ebx], offset off_416500 ",gcc,1
"mov dword ptr [ebx], offset off_416500  | * | pop ebx ",gcc,1
pop ebx  | * | __ZNSt15underflow_errorC1ERKSs endp ,gcc,1
retn 4  | * | __ZNSs6appendEjc_part_22 proc near  ,gcc,1
var_2C = dword ptr -2Ch  | * | arg_4 = byte ptr 8 ,data,1
"push ebx  | * | mov ebp, ecx ",gcc,3
"sub esp, 1Ch  | * | mov bl, [esp+2Ch+arg_4] ",gcc,1
"mov ebp, ecx  | * | mov edx, [ecx] ",gcc,1
"mov bl, [esp+2Ch+arg_4]  | * | mov ecx, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | mov esi, 3FFFFFFCh ",gcc,1
"mov ecx, [edx-0Ch]  | * | sub esi, ecx ",gcc,1
"mov esi, 3FFFFFFCh  | * | cmp [esp+2Ch+arg_0], esi ",gcc,1
"sub esi, ecx  | * | ja short loc_405000 ",gcc,1
"cmp [esp+2Ch+arg_0], esi  | * | mov esi, [esp+2Ch+arg_0] ",gcc,1
"ja short loc_405000  | * | add esi, ecx ",gcc,1
"mov esi, [esp+2Ch+arg_0]  | * | cmp esi, [edx-8] ",gcc,1
"add esi, ecx  | * | jbe short loc_404FEC ",gcc,1
"cmp esi, [edx-8]  | * | loc_404FAA:  ",gcc,1
"jbe short loc_404FEC  | * | mov [esp+2Ch+var_2C], esi  ",gcc,1
"loc_404FAA:   | * | mov ecx, ebp ",gcc,1
"mov [esp+2Ch+var_2C], esi   | * | call __ZNSs7reserveEj  ",gcc,1
"mov ecx, ebp  | * | push edi ",gcc,1
"call __ZNSs7reserveEj   | * | mov edx, [ebp+0] ",gcc,1
"push edi  | * | mov ecx, [edx-0Ch] ",gcc,1
"mov edx, [ebp+0]  | * | add edx, ecx ",gcc,1
"mov ecx, [edx-0Ch]  | * | cmp [esp+2Ch+arg_0], 1 ",gcc,1
"add edx, ecx  | * | jz short loc_404FFC ",gcc,1
"cmp [esp+2Ch+arg_0], 1  | * | loc_404FC4:  ",gcc,1
"jz short loc_404FFC  | * | mov edi, edx ",gcc,1
"loc_404FC4:   | * | mov ecx, [esp+2Ch+arg_0] ",gcc,1
"mov edi, edx  | * | mov al, bl ",gcc,1
"mov ecx, [esp+2Ch+arg_0]  | * | rep stosb ",gcc,1
"mov al, bl  | * | loc_404FCE:  ",gcc,1
"rep stosb  | * | mov eax, [ebp+0] ",gcc,1
"loc_404FCE:   | * | mov dword ptr [eax-4], 0 ",gcc,1
"mov eax, [ebp+0]  | * | mov [eax-0Ch], esi ",gcc,1
"mov dword ptr [eax-4], 0  | * | mov byte ptr [eax+esi], 0 ",gcc,1
"mov [eax-0Ch], esi  | * | xor eax, eax ",gcc,1
"mov byte ptr [eax+esi], 0  | * | add esp, 1Ch ",gcc,1
pop edi  | * | retn 8 ,gcc,5
retn 8  | * | loc_404FEC:  ,gcc,1
"align 4  | * | mov eax, [edx-4] ",gcc,1
"loc_404FEC:   | * | test eax, eax ",gcc,1
"mov eax, [edx-4]  | * | jg short loc_404FAA ",gcc,1
"test eax, eax  | * | add edx, ecx ",gcc,1
"jg short loc_404FAA  | * | cmp [esp+2Ch+arg_0], 1 ",gcc,1
"add edx, ecx  | * | jnz short loc_404FC4 ",gcc,1
"cmp [esp+2Ch+arg_0], 1  | * | loc_404FFC:  ",gcc,1
"jnz short loc_404FC4  | * | mov [edx], bl ",gcc,1
loc_404FFC:   | * | jmp short loc_404FCE ,gcc,1
"mov [edx], bl  | * | loc_405000:  ",gcc,1
"jmp short loc_404FCE  | * | mov [esp+2Ch+var_2C], offset aBasicStringApp  ",gcc,1
loc_405000:   | * | call __ZSt20__throw_length_errorPKc  ,gcc,1
"mov [esp+2Ch+var_2C], offset aBasicStringApp   | * | __ZNSs6appendEjc_part_22 endp ",gcc,1
call __ZSt20__throw_length_errorPKc   | * | public __ZNKSt8ios_base7failure4whatEv ,gcc,1
__ZNSs6appendEjc_part_22 endp  | * | __ZNKSt8ios_base7failure4whatEv proc near ,gcc,1
"__ZNKSt8ios_base7failure4whatEv proc near  | * | mov eax, [ecx+4] ",gcc,1
"mov eax, [ecx+4]  | * | __ZNKSt8ios_base7failure4whatEv endp ",gcc,1
retn  | * | public __ZNSt8ios_base7failureD1Ev ,gcc,1
__ZNKSt8ios_base7failure4whatEv endp  | * | __ZNSt8ios_base7failureD1Ev proc near  ,gcc,1
"sub esp, 24h  | * | mov dword ptr [ecx], offset off_416370 ",gcc,1
"mov dword ptr [ecx], offset off_416370  | * | mov edx, ds:__CRT_MT ",gcc,1
"mov edx, ds:__CRT_MT  | * | jnz short loc_405044 ",gcc,1
"jnz short loc_405044  | * | lea edx, [eax-1] ",gcc,1
"mov [esi-4], edx  | * | jle short loc_40505B ",gcc,1
"test eax, eax  | * | loc_405037:  ",gcc,1
"jle short loc_40505B  | * | mov ecx, ebx ",gcc,1
loc_405037:   | * | call __ZNSt9exceptionD1Ev  ,gcc,1
pop esi  | * | loc_405044:  ,gcc,1
"loc_405044:   | * | lea eax, [esi-4] ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | jg short loc_405037 ,gcc,1
"test eax, eax  | * | loc_40505B:  ",gcc,1
"jg short loc_405037  | * | lea ecx, [esi-0Ch]  ",gcc,1
"loc_40505B:   | * | lea eax, [esp+2Ch+var_D] ",gcc,1
pop esi  | * | __ZNSt8ios_base7failureD1Ev endp ,gcc,1
retn  | * | public __ZNSt8ios_base7failureD0Ev ,gcc,1
__ZNSt8ios_base7failureD1Ev endp  | * | __ZNSt8ios_base7failureD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt8ios_base7failureD1Ev  ",gcc,1
call __ZNSt8ios_base7failureD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt8ios_base7failureD0Ev endp ,gcc,1
retn  | * | public __ZNSt8ios_base7failureC1ERKSs ,gcc,1
__ZNSt8ios_base7failureD0Ev endp  | * | __ZNSt8ios_base7failureC1ERKSs proc near ,gcc,1
var_4C = dword ptr -4Ch  | * | var_1C = dword ptr -1Ch ,data,1
this = dword ptr 4  | * | lpuexcpt = dword ptr 14h ,data,1
lpuexcpt = dword ptr 14h  | * | arg_1C = dword ptr 20h ,data,1
arg_14 = dword ptr 18h  | * | arg_20 = dword ptr 24h ,data,1
"push ebp  | * | mov [esp+5Ch+var_4C], ecx ",gcc,1
"mov [esp+5Ch+var_4C], ecx  | * | mov [esp+5Ch+fctx.lsda], offset dword_4123E4 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4123E4  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_4050FF ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_4050FF  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, [esp+5Ch+var_4C] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov dword ptr [eax], offset off_416370 ",gcc,1
"mov eax, [esp+5Ch+var_4C]  | * | mov ecx, eax ",gcc,1
"mov dword ptr [eax], offset off_416370  | * | add ecx, 4 ",gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | push ecx ",gcc,1
"push ecx  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
pop ebp  | * | loc_4050FF:  ,gcc,1
"loc_4050FF:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_20]  | * | mov eax, [esp+arg_24] ",gcc,1
"mov [esp+lpuexcpt], eax  | * | mov [esp+arg_14], eax ",gcc,1
"mov eax, [esp+arg_24]  | * | mov ecx, [esp+arg_C] ",gcc,1
"mov [esp+arg_14], eax  | * | call __ZNSt9exceptionD1Ev  ",gcc,1
"mov ecx, [esp+arg_C]  | * | mov eax, [esp+lpuexcpt] ",gcc,1
"call __ZNSt9exceptionD1Ev   | * | cmp [esp+arg_14], 0FFFFFFFFh ",gcc,1
"cmp [esp+arg_14], 0FFFFFFFFh  | * | mov [esp+arg_1C], 0FFFFFFFFh ",gcc,1
"mov [esp+0], eax   | * | jz short loc_405133 ",gcc,1
jz short loc_405133  | * | loc_405133:  ,gcc,1
loc_405133:   | * | __ZNSt8ios_base7failureC1ERKSs endp ,gcc,1
call ___cxa_call_unexpected  | * | public __ZN9__gnu_cxx18__exchange_and_addEPVii ,gcc,1
__ZNSt8ios_base7failureC1ERKSs endp  | * | __ZN9__gnu_cxx18__exchange_and_addEPVii proc near ,gcc,1
"mov edx, [esp+arg_0]  | * | lea esi, [esi+0] ",gcc,2
"mov eax, 1  | * | loc_405144:  ",gcc,1
"lea esi, [esi+0]  | * | xchg eax, __ZN9__gnu_cxx15_Atomicity_lockILi0EE17_S_atomicity_lockE  ",gcc,2
"loc_405144:   | * | test eax, eax ",gcc,1
"xchg eax, __ZN9__gnu_cxx15_Atomicity_lockILi0EE17_S_atomicity_lockE   | * | jnz short loc_405144 ",gcc,1
"test eax, eax  | * | mov eax, [edx] ",gcc,2
"jnz short loc_405144  | * | mov ecx, [edx] ",gcc,1
"mov eax, [edx]  | * | add ecx, [esp+arg_4] ",gcc,1
"mov ecx, [edx]  | * | mov [edx], ecx ",gcc,1
"add ecx, [esp+arg_4]  | * | mov __ZN9__gnu_cxx15_Atomicity_lockILi0EE17_S_atomicity_lockE, 0  ",gcc,1
"mov [edx], ecx  | * | retn ",gcc,1
"mov __ZN9__gnu_cxx15_Atomicity_lockILi0EE17_S_atomicity_lockE, 0   | * | __ZN9__gnu_cxx18__exchange_and_addEPVii endp ",gcc,1
__ZN9__gnu_cxx18__exchange_and_addEPVii endp  | * | public __ZN9__gnu_cxx12__atomic_addEPVii ,gcc,1
align 4  | * | __ZN9__gnu_cxx12__atomic_addEPVii proc near ,gcc,1
"mov eax, 1  | * | loc_405170:  ",gcc,1
"loc_405170:   | * | test eax, eax ",gcc,1
"xchg eax, __ZN9__gnu_cxx15_Atomicity_lockILi0EE17_S_atomicity_lockE   | * | jnz short loc_405170 ",gcc,1
"jnz short loc_405170  | * | mov eax, [edx] ",gcc,1
"mov eax, [edx]  | * | add eax, [esp+arg_4] ",gcc,1
"mov eax, [edx]  | * | mov [edx], eax ",gcc,1
"add eax, [esp+arg_4]  | * | mov __ZN9__gnu_cxx15_Atomicity_lockILi0EE17_S_atomicity_lockE, 0  ",gcc,1
"mov [edx], eax  | * | retn ",gcc,1
"mov __ZN9__gnu_cxx15_Atomicity_lockILi0EE17_S_atomicity_lockE, 0   | * | __ZN9__gnu_cxx12__atomic_addEPVii endp ",gcc,1
__ZN9__gnu_cxx12__atomic_addEPVii endp  | * | public __ZNSt11regex_errorD1Ev ,gcc,1
align 10h  | * | __ZNSt11regex_errorD1Ev proc near  ,gcc,1
"public __ZNSt11regex_errorD1Ev  | * | mov dword ptr [ecx], offset off_4163D0 ",gcc,1
__ZNSt11regex_errorD1Ev proc near   | * | jmp __ZNSt13runtime_errorD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_4163D0  | * | __ZNSt11regex_errorD1Ev endp ",gcc,1
__ZNSt11regex_errorD1Ev endp  | * | public __ZNSt11regex_errorD0Ev ,gcc,1
align 4  | * | __ZNSt11regex_errorD0Ev proc near  ,gcc,1
"sub esp, 18h  | * | call __ZNSt11regex_errorD1Ev  ",gcc,1
call __ZNSt11regex_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZNSt11regex_errorD0Ev endp ,gcc,1
retn  | * | public __ZNSt11regex_errorC1ENSt15regex_constants10error_typeE ,gcc,1
__ZNSt11regex_errorD0Ev endp  | * | __ZNSt11regex_errorC1ENSt15regex_constants10error_typeE proc near ,gcc,1
lpfctx = dword ptr -6Ch  | * | var_58 = dword ptr -58h ,data,1
var_68 = dword ptr -68h  | * | var_54 = dword ptr -54h ,data,2
var_C = byte ptr -0Ch  | * | lpuexcpt = dword ptr 14h ,data,1
arg_0 = dword ptr 4  | * | arg_1C = dword ptr 20h ,data,1
"mov [esp+6Ch+var_58], ecx  | * | mov [esp+6Ch+fctx.lsda], offset dword_4123F4 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4123F4  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_4052A1 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_4052A1  | * | lea edx, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+lpfctx], edx   | * | lea eax, [esp+6Ch+var_12] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov [esp+6Ch+var_68], eax  ",gcc,1
"lea eax, [esp+6Ch+var_12]  | * | mov [esp+6Ch+lpfctx], offset aRegexError  ",gcc,1
"mov [esp+6Ch+var_68], eax   | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+6Ch+lpfctx], offset aRegexError   | * | lea ecx, [esp+6Ch+var_11+1] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | call __ZNSsC1EPKcRKSaIcE  ",gcc,1
"call __ZNSsC1EPKcRKSaIcE   | * | lea ecx, [esp+6Ch+var_11+1] ",gcc,1
"sub esp, 8  | * | mov [esp+6Ch+lpfctx], ecx  ",gcc,1
"lea ecx, [esp+6Ch+var_11+1]  | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], ecx   | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 1  | * | call __ZNSt13runtime_errorC1ERKSs  ",gcc,1
"mov ecx, [esp+6Ch+var_58]  | * | push edx ",gcc,1
"call __ZNSt13runtime_errorC1ERKSs   | * | mov eax, [esp+6Ch+var_11+1] ",gcc,1
"push edx  | * | mov [esp+6Ch+var_54], eax ",gcc,1
"mov eax, [esp+6Ch+var_11+1]  | * | mov ecx, ds:__CRT_MT ",gcc,1
"mov [esp+6Ch+var_54], eax  | * | test ecx, ecx ",gcc,1
"mov ecx, ds:__CRT_MT  | * | jnz short loc_405274 ",gcc,1
"test ecx, ecx  | * | mov edx, [esp+6Ch+var_54] ",gcc,1
"jnz short loc_405274  | * | mov eax, [edx-4] ",gcc,1
"mov edx, [esp+6Ch+var_54]  | * | lea edx, [eax-1] ",gcc,1
"mov eax, [edx-4]  | * | mov ecx, [esp+6Ch+var_54] ",gcc,1
"mov ecx, [esp+6Ch+var_54]  | * | test eax, eax ",gcc,1
"mov [ecx-4], edx  | * | jle short loc_40528B ",gcc,1
"test eax, eax  | * | loc_40524F:  ",gcc,1
"jle short loc_40528B  | * | mov ecx, [esp+6Ch+var_58] ",gcc,1
"loc_40524F:   | * | mov dword ptr [ecx], offset off_4163D0 ",gcc,1
"mov ecx, [esp+6Ch+var_58]  | * | mov eax, [esp+6Ch+arg_0] ",gcc,1
"mov dword ptr [ecx], offset off_4163D0  | * | mov [ecx+8], eax ",gcc,1
"mov eax, [esp+6Ch+arg_0]  | * | lea ecx, [esp+6Ch+fctx] ",gcc,1
"mov [ecx+8], eax  | * | mov [esp+6Ch+lpfctx], ecx  ",gcc,1
"lea ecx, [esp+6Ch+fctx]  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+6Ch+lpfctx], ecx   | * | add esp, 68h ",gcc,1
"add esp, 68h  | * | retn 4 ",gcc,1
retn 4  | * | loc_405274:  ,gcc,1
"loc_405274:   | * | sub eax, 4 ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | jg short loc_40524F ,gcc,1
"test eax, eax  | * | loc_40528B:  ",gcc,1
"jg short loc_40524F  | * | mov ecx, [esp+6Ch+var_54] ",gcc,1
"loc_40528B:   | * | sub ecx, 0Ch  ",gcc,1
call __ZNSs4_Rep10_M_destroyERKSaIcE   | * | jmp short loc_40524F ,gcc,1
push eax  | * | loc_4052A1:  ,gcc,1
"jmp short loc_40524F  | * | mov eax, [esp+arg_20] ",gcc,1
"loc_4052A1:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_20]  | * | lea ecx, [esp+arg_58] ",gcc,1
"lea ecx, [esp+arg_58]  | * | mov edx, [esp+lpuexcpt] ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZNSt11regex_errorC1ENSt15regex_constants10error_typeE endp ",gcc,1
__ZNSt11regex_errorC1ENSt15regex_constants10error_typeE endp  | * | public __ZSt15set_new_handlerPFvvE ,gcc,1
align 4  | * | __ZSt15set_new_handlerPFvvE proc near ,gcc,1
"__ZSt15set_new_handlerPFvvE proc near  | * | mov eax, ds:___new_handler ",gcc,1
"mov eax, ds:___new_handler  | * | mov ds:___new_handler, edx ",gcc,1
"mov edx, [esp+arg_0]  | * | retn ",gcc,1
"mov ds:___new_handler, edx  | * | __ZSt15set_new_handlerPFvvE endp ",gcc,1
retn  | * | public ___cxa_pure_virtual ,gcc,1
__ZSt15set_new_handlerPFvvE endp  | * | ___cxa_pure_virtual proc near  ,gcc,1
"sub esp, 1Ch  | * | mov [esp+1Ch+var_18], offset aPureVirtualMet  ",gcc,1
"mov [esp+1Ch+var_14], 1Bh   | * | mov [esp+1Ch+var_1C], 2  ",gcc,1
"mov [esp+1Ch+var_18], offset aPureVirtualMet   | * | call _write ",gcc,1
"mov [esp+1Ch+var_1C], 2   | * | call __ZSt9terminatev  ",gcc,2
call _write  | * | ___cxa_pure_virtual endp ,gcc,1
call __ZSt9terminatev   | * | public ___cxa_deleted_virtual ,gcc,1
___cxa_pure_virtual endp  | * | ___cxa_deleted_virtual proc near ,gcc,1
"sub esp, 1Ch  | * | mov [esp+1Ch+var_18], offset aDeletedVirtual  ",gcc,1
"mov [esp+1Ch+var_14], 1Eh   | * | mov [esp+1Ch+var_1C], 2  ",gcc,1
"mov [esp+1Ch+var_18], offset aDeletedVirtual   | * | call _write ",gcc,1
call _write  | * | ___cxa_deleted_virtual endp ,gcc,1
call __ZSt9terminatev   | * | public __ZNSt9type_infoD1Ev ,gcc,1
___cxa_deleted_virtual endp  | * | __ZNSt9type_infoD1Ev proc near  ,gcc,1
"__ZNSt9type_infoD1Ev proc near   | * | mov dword ptr [ecx], offset off_4165A8 ",gcc,1
"mov dword ptr [ecx], offset off_4165A8  | * | __ZNSt9type_infoD1Ev endp ",gcc,1
__ZNSt9type_infoD1Ev endp  | * | public __ZNKSt9type_info14__is_pointer_pEv ,gcc,1
align 4  | * | __ZNKSt9type_info14__is_pointer_pEv proc near ,gcc,1
"__ZNKSt9type_info14__is_pointer_pEv proc near  | * | xor eax, eax ",gcc,1
"xor eax, eax  | * | __ZNKSt9type_info14__is_pointer_pEv endp ",gcc,1
__ZNKSt9type_info14__is_pointer_pEv endp  | * | public __ZNKSt9type_info15__is_function_pEv ,gcc,1
align 4  | * | __ZNKSt9type_info15__is_function_pEv proc near ,gcc,1
"__ZNKSt9type_info15__is_function_pEv proc near  | * | xor eax, eax ",gcc,1
"xor eax, eax  | * | __ZNKSt9type_info15__is_function_pEv endp ",gcc,1
__ZNKSt9type_info15__is_function_pEv endp  | * | public __ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv ,gcc,1
align 10h  | * | __ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv proc near ,gcc,1
"public __ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv  | * | xor eax, eax ",gcc,1
__ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv proc near  | * | retn 8 ,gcc,1
"xor eax, eax  | * | __ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv endp ",gcc,1
retn 8  | * | align 4 ,gcc,16
__ZNKSt9type_info11__do_upcastEPKN10__cxxabiv117__class_type_infoEPPv endp  | * | public __ZNSt9type_infoD0Ev ,gcc,1
align 4  | * | __ZNSt9type_infoD0Ev proc near  ,gcc,1
"mov dword ptr [ecx], offset off_4165A8  | * | call __ZdlPv  ",gcc,1
"add esp, 1Ch  | * | __ZNSt9type_infoD0Ev endp ",gcc,1
__ZNSt9type_infoD0Ev endp  | * | public __ZNKSt9type_infoeqERKS_ ,gcc,1
align 10h  | * | __ZNKSt9type_infoeqERKS_ proc near  ,gcc,1
"sub esp, 1Ch  | * | cmp eax, ecx ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | jz short loc_405384 ",gcc,1
"cmp eax, ecx  | * | mov edx, [ecx+4] ",gcc,1
"jz short loc_405384  | * | cmp byte ptr [edx], 2Ah  ",gcc,1
"mov edx, [ecx+4]  | * | jz short loc_40537B ",gcc,1
"cmp byte ptr [edx], 2Ah   | * | mov eax, [eax+4] ",gcc,1
"jz short loc_40537B  | * | cmp byte ptr [eax], 2Ah  ",gcc,1
"mov eax, [eax+4]  | * | jz short loc_40538C ",gcc,1
"cmp byte ptr [eax], 2Ah   | * | mov [esp+1Ch+var_18], eax  ",gcc,1
"jz short loc_40538C  | * | mov [esp+1Ch+var_1C], edx  ",gcc,1
"mov [esp+1Ch+var_18], eax   | * | call _strcmp ",gcc,2
"mov [esp+1Ch+var_1C], edx   | * | test eax, eax ",gcc,4
call _strcmp  | * | jz short loc_405384 ,gcc,1
"test eax, eax  | * | loc_40537B:  ",gcc,1
"jz short loc_405384  | * | xor eax, eax ",gcc,1
"loc_40537B:   | * | add esp, 1Ch ",gcc,1
"xor eax, eax  | * | retn 4 ",gcc,1
retn 4  | * | loc_405384:  ,gcc,1
"align 4  | * | mov al, 1 ",gcc,1
"loc_405384:   | * | add esp, 1Ch ",gcc,1
"mov al, 1  | * | retn 4 ",gcc,1
"add esp, 1Ch  | * | loc_40538C:  ",gcc,1
retn 4  | * | inc eax ,gcc,1
"loc_40538C:   | * | mov [esp+1Ch+var_18], eax  ",gcc,1
"inc eax  | * | mov [esp+1Ch+var_1C], edx  ",gcc,1
call _strcmp  | * | jnz short loc_40537B ,gcc,1
"test eax, eax  | * | jmp short loc_405384 ",gcc,1
jnz short loc_40537B  | * | __ZNKSt9type_infoeqERKS_ endp ,gcc,1
jmp short loc_405384  | * | align 10h ,gcc,1
__ZNKSt9type_infoeqERKS_ endp  | * | public __ZNKSt9type_info10__do_catchEPKS_PPvj ,gcc,1
align 10h  | * | __ZNKSt9type_info10__do_catchEPKS_PPvj proc near ,gcc,1
"sub esp, 1Ch  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov eax, [esp+1Ch+this]  | * | call __ZNKSt9type_infoeqERKS_  ",gcc,1
"call __ZNKSt9type_infoeqERKS_   | * | add esp, 1Ch ",gcc,1
push edx  | * | retn 0Ch ,gcc,1
"add esp, 1Ch  | * | __ZNKSt9type_info10__do_catchEPKS_PPvj endp ",gcc,1
__ZNKSt9type_info10__do_catchEPKS_PPvj endp  | * | public ___shmem_init___terminate_handler_sh ,gcc,1
align 4  | * | ___shmem_init___terminate_handler_sh proc near ,gcc,1
"___shmem_init___terminate_handler_sh proc near  | * | mov eax, [esp+arg_0] ",gcc,1
"mov dword ptr [eax], offset __ZN9__gnu_cxx27__verbose_terminate_handlerEv   | * | ___shmem_init___terminate_handler_sh endp ",gcc,1
___shmem_init___terminate_handler_sh endp  | * | public __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv ,gcc,1
align 4  | * | __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv proc near ,gcc,1
"sub esp, 1Ch  | * | mov [esp+1Ch+size], 4  ",gcc,5
"mov [esp+1Ch+initfunc], offset ___shmem_init___terminate_handler_sh   | * | mov [esp+1Ch+name], offset aTerminateHandl  ",gcc,1
"mov [esp+1Ch+size], 4   | * | call ___shmem_grab ",gcc,5
"mov [esp+1Ch+name], offset aTerminateHandl   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv endp ",gcc,1
__ZN10__cxxabiv138__shmem_grabber___terminate_handler_shEv endp  | * | public ___shmem_init___unexpected_handler_sh ,gcc,1
align 4  | * | ___shmem_init___unexpected_handler_sh proc near ,gcc,1
"___shmem_init___unexpected_handler_sh proc near  | * | mov eax, [esp+arg_0] ",gcc,1
"mov dword ptr [eax], offset __ZSt9terminatev   | * | ___shmem_init___unexpected_handler_sh endp ",gcc,1
___shmem_init___unexpected_handler_sh endp  | * | public __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv ,gcc,1
align 4  | * | __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv proc near ,gcc,1
"mov [esp+1Ch+initfunc], offset ___shmem_init___unexpected_handler_sh   | * | mov [esp+1Ch+name], offset aUnexpectedHand  ",gcc,1
"mov [esp+1Ch+name], offset aUnexpectedHand   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv endp ",gcc,1
__ZN10__cxxabiv139__shmem_grabber___unexpected_handler_shEv endp  | * | __ZN12_GLOBAL__N_1L4initEv proc near  ,gcc,1
"__ZN12_GLOBAL__N_1L4initEv proc near   | * | mov eax, ds:__CRT_MT ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_40542C ",gcc,1
"test eax, eax  | * | mov ds:__ZN12_GLOBAL__N_1L12static_mutexE, offset __ZN12_GLOBAL__N_110fake_mutexE  ",gcc,1
jnz short loc_40542C  | * | retn ,gcc,1
"mov ds:__ZN12_GLOBAL__N_1L12static_mutexE, offset __ZN12_GLOBAL__N_110fake_mutexE   | * | loc_40542C:  ",gcc,1
"retn  | * | sub esp, 1Ch ",gcc,1
"loc_40542C:   | * | mov [esp+1Ch+mutex], offset __ZN12_GLOBAL__N_110fake_mutexE  ",gcc,1
"sub esp, 1Ch  | * | call ___gthr_win32_recursive_mutex_init_function ",gcc,1
"mov [esp+1Ch+mutex], offset __ZN12_GLOBAL__N_110fake_mutexE   | * | mov ds:__ZN12_GLOBAL__N_1L12static_mutexE, offset __ZN12_GLOBAL__N_110fake_mutexE  ",gcc,1
"call ___gthr_win32_recursive_mutex_init_function  | * | add esp, 1Ch ",gcc,1
"mov ds:__ZN12_GLOBAL__N_1L12static_mutexE, offset __ZN12_GLOBAL__N_110fake_mutexE   | * | retn ",gcc,1
"add esp, 1Ch  | * | __ZN12_GLOBAL__N_1L4initEv endp ",gcc,1
__ZN12_GLOBAL__N_1L4initEv endp  | * | public ___cxa_guard_acquire ,gcc,1
align 4  | * | ___cxa_guard_acquire proc near  ,gcc,1
func = dword ptr -58h  | * | lpuexcpt = dword ptr -44h ,data,1
lpuexcpt = dword ptr -44h  | * | var_1C = dword ptr -1Ch ,data,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_4123FC ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4123FC  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_405599 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_405599  | * | lea edx, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], edx   | * | mov edx, [esp+5Ch+arg_0] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov al, [edx] ",gcc,1
"mov edx, [esp+5Ch+arg_0]  | * | test al, al ",gcc,1
"mov al, [edx]  | * | jnz short loc_4054F0 ",gcc,1
"test al, al  | * | mov eax, ds:__CRT_MT ",gcc,1
"jnz short loc_4054F0  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jz short loc_405510 ",gcc,1
"test eax, eax  | * | mov [esp+5Ch+func], offset __ZN12_GLOBAL__N_1L4initEv  ",gcc,1
"jz short loc_405510  | * | mov [esp+5Ch+lpfctx], offset __data_start__  ",gcc,1
"mov [esp+5Ch+func], offset __ZN12_GLOBAL__N_1L4initEv   | * | mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+5Ch+lpfctx], offset __data_start__   | * | call ___gthr_win32_once ",gcc,1
"mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh  | * | mov eax, ds:__ZN12_GLOBAL__N_1L12static_mutexE  ",gcc,1
"call ___gthr_win32_once  | * | mov ecx, ds:__CRT_MT ",gcc,1
"mov eax, ds:__ZN12_GLOBAL__N_1L12static_mutexE   | * | test ecx, ecx ",gcc,1
"mov ecx, ds:__CRT_MT  | * | jnz short loc_405538 ",gcc,1
"test ecx, ecx  | * | loc_4054BE:  ",gcc,1
"jnz short loc_405538  | * | mov eax, [esp+5Ch+arg_0] ",gcc,1
"loc_4054BE:   | * | cmp byte ptr [eax], 0 ",gcc,1
"mov eax, [esp+5Ch+arg_0]  | * | jnz short loc_4054DC ",gcc,1
"cmp byte ptr [eax], 0  | * | cmp byte ptr [eax+1], 0 ",gcc,2
jnz short loc_4054DC  | * | jz short loc_405523 ,gcc,1
"cmp byte ptr [eax+1], 0  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
jz short loc_405523  | * | call __ZN10__cxxabiv1L30throw_recursive_init_exceptionEv  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | align 4 ",gcc,1
call __ZN10__cxxabiv1L30throw_recursive_init_exceptionEv   | * | loc_4054DC:  ,gcc,1
"align 4  | * | mov eax, ds:__ZN12_GLOBAL__N_1L12static_mutexE  ",gcc,2
"loc_4054DC:   | * | mov edx, ds:__CRT_MT ",gcc,1
"mov eax, ds:__ZN12_GLOBAL__N_1L12static_mutexE   | * | test edx, edx ",gcc,1
"mov edx, ds:__CRT_MT  | * | jnz loc_405574 ",gcc,1
"test edx, edx  | * | nop ",gcc,1
jnz loc_405574  | * | loc_4054F0:  ,gcc,1
"nop  | * | mov [esp+5Ch+lpuexcpt], 0 ",gcc,1
loc_4054F0:   | * | loc_4054F8:  ,gcc,1
"mov [esp+5Ch+lpuexcpt], 0  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"loc_4054F8:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, [esp+5Ch+lpuexcpt] ",gcc,1
"mov eax, [esp+5Ch+lpuexcpt]  | * | pop ebp ",gcc,1
retn  | * | loc_405510:  ,gcc,1
"align 10h  | * | mov eax, [esp+5Ch+arg_0] ",gcc,1
"loc_405510:   | * | cmp byte ptr [eax], 0 ",gcc,1
"mov eax, [esp+5Ch+arg_0]  | * | jnz short loc_4054F0 ",gcc,1
jnz short loc_4054F0  | * | jnz loc_4055C3 ,gcc,1
"cmp byte ptr [eax+1], 0  | * | loc_405523:  ",gcc,1
"jnz loc_4055C3  | * | mov edx, [esp+5Ch+arg_0] ",gcc,1
"loc_405523:   | * | mov byte ptr [edx+1], 1 ",gcc,1
"mov edx, [esp+5Ch+arg_0]  | * | mov [esp+5Ch+lpuexcpt], 1 ",gcc,1
"mov byte ptr [edx+1], 1  | * | jmp short loc_4054F8 ",gcc,1
"mov [esp+5Ch+lpuexcpt], 1  | * | align 4 ",gcc,1
jmp short loc_4054F8  | * | loc_405538:  ,gcc,1
"align 4  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,2
loc_405538:   | * | call ___gthr_win32_recursive_mutex_lock ,gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | test eax, eax ",gcc,1
call ___gthr_win32_recursive_mutex_lock  | * | jz loc_4054BE ,gcc,1
jz loc_4054BE  | * | call ___cxa_allocate_exception ,gcc,1
"mov [esp+5Ch+lpfctx], 4   | * | mov dword ptr [eax], offset off_416340 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+5Ch+var_54], offset __ZN9__gnu_cxx24__concurrence_lock_errorD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416340  | * | mov [esp+5Ch+func], offset __ZTIN9__gnu_cxx24__concurrence_lock_errorE  ",gcc,1
"mov [esp+5Ch+var_54], offset __ZN9__gnu_cxx24__concurrence_lock_errorD1Ev   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov [esp+5Ch+func], offset __ZTIN9__gnu_cxx24__concurrence_lock_errorE   | * | call ___cxa_throw ",gcc,1
call ___cxa_throw  | * | loc_405574:  ,gcc,1
"loc_405574:   | * | mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | call ___gthr_win32_recursive_mutex_unlock ",gcc,4
"mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh  | * | test eax, eax ",gcc,1
call ___gthr_win32_recursive_mutex_unlock  | * | jz loc_4054F0 ,gcc,1
"test eax, eax  | * | loc_40558C:  ",gcc,1
"jz loc_4054F0  | * | mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
loc_40558C:   | * | call __ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_405599:  ",gcc,1
"call __ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv   | * | mov eax, [esp+5Ch+fctx.data] ",gcc,1
"loc_405599:   | * | mov [esp+5Ch+lpuexcpt], eax ",gcc,1
"mov eax, [esp+5Ch+fctx.data]  | * | mov eax, ds:__ZN12_GLOBAL__N_1L12static_mutexE  ",gcc,1
"mov [esp+5Ch+lpuexcpt], eax  | * | cmp ds:__CRT_MT, 0 ",gcc,1
"mov eax, ds:__ZN12_GLOBAL__N_1L12static_mutexE   | * | jnz short loc_4055D0 ",gcc,1
"cmp ds:__CRT_MT, 0  | * | loc_4055AF:  ",gcc,1
"jnz short loc_4055D0  | * | mov edx, [esp+5Ch+lpuexcpt] ",gcc,1
"loc_4055AF:   | * | mov [esp+5Ch+lpfctx], edx  ",gcc,1
"mov edx, [esp+5Ch+lpuexcpt]  | * | mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+5Ch+lpfctx], edx   | * | call __Unwind_SjLj_Resume ",gcc,1
"mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_4055C3:  ",gcc,1
"call __Unwind_SjLj_Resume  | * | mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
loc_4055C3:   | * | call __ZN10__cxxabiv1L30throw_recursive_init_exceptionEv  ,gcc,1
"mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_4055D0:  ",gcc,1
"call __ZN10__cxxabiv1L30throw_recursive_init_exceptionEv   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"loc_4055D0:   | * | mov [esp+5Ch+fctx.call_site], 0 ",gcc,1
"mov [esp+5Ch+fctx.call_site], 0  | * | test eax, eax ",gcc,1
call ___gthr_win32_recursive_mutex_unlock  | * | jz short loc_4055AF ,gcc,1
"test eax, eax  | * | jmp short loc_40558C ",gcc,1
jz short loc_4055AF  | * | ___cxa_guard_acquire endp ,gcc,1
jmp short loc_40558C  | * | align 4 ,gcc,1
___cxa_guard_acquire endp  | * | public ___cxa_guard_abort ,gcc,1
align 4  | * | ___cxa_guard_abort proc near ,gcc,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412404 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412404  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_40565E ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_40565E  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov byte ptr [eax+1], 0 ",gcc,2
"mov eax, [esp+5Ch+arg_0]  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov byte ptr [eax+1], 0  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_405640 ",gcc,1
"test eax, eax  | * | loc_40562D:  ",gcc,1
"jnz short loc_405640  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"loc_40562D:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
retn  | * | loc_405640:  ,gcc,1
"align 10h  | * | mov eax, ds:__ZN12_GLOBAL__N_1L12static_mutexE  ",gcc,1
"loc_405640:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov eax, ds:__ZN12_GLOBAL__N_1L12static_mutexE   | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,2
call ___gthr_win32_recursive_mutex_unlock  | * | jz short loc_40562D ,gcc,1
"test eax, eax  | * | call __ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv  ",gcc,2
jz short loc_40562D  | * | loc_40565E:  ,gcc,1
"call __ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv   | * | mov eax, [esp+lpuexcpt] ",gcc,2
"loc_40565E:   | * | cmp [esp+arg_24], 0FFFFFFFFh ",gcc,1
"mov [esp+0], eax   | * | jz short loc_405679 ",gcc,1
jz short loc_405679  | * | loc_405679:  ,gcc,1
loc_405679:   | * | ___cxa_guard_abort endp ,gcc,1
___cxa_guard_abort endp  | * | public ___cxa_guard_release ,gcc,1
align 10h  | * | ___cxa_guard_release proc near  ,gcc,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_412414 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_412414  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_4056FA ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_4056FA  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov eax, [esp+5Ch+arg_0]  | * | mov byte ptr [eax], 1 ",gcc,1
"mov byte ptr [eax+1], 0  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov byte ptr [eax], 1  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_4056DC ",gcc,1
"test eax, eax  | * | loc_4056C8:  ",gcc,1
"jnz short loc_4056DC  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"loc_4056C8:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
retn  | * | loc_4056DC:  ,gcc,1
"loc_4056DC:   | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
call ___gthr_win32_recursive_mutex_unlock  | * | jz short loc_4056C8 ,gcc,1
jz short loc_4056C8  | * | loc_4056FA:  ,gcc,1
"loc_4056FA:   | * | cmp [esp+arg_24], 0FFFFFFFFh ",gcc,1
"mov [esp+0], eax   | * | jz short loc_405715 ",gcc,1
jz short loc_405715  | * | loc_405715:  ,gcc,1
loc_405715:   | * | ___cxa_guard_release endp ,gcc,1
___cxa_guard_release endp  | * | public __ZN9__gnu_cxx27__verbose_terminate_handlerEv ,gcc,1
align 4  | * | __ZN9__gnu_cxx27__verbose_terminate_handlerEv proc near ,gcc,1
lpfctx = dword ptr -6Ch  | * | lpoutlen = dword ptr -64h ,data,1
lpout = dword ptr -68h  | * | lpstatus = dword ptr -60h ,data,1
lpoutlen = dword ptr -64h  | * | lpmangled = dword ptr -5Ch ,data,1
lpstatus = dword ptr -60h  | * | var_58 = dword ptr -58h ,data,1
lpmangled = dword ptr -5Ch  | * | var_54 = dword ptr -54h ,data,1
var_2C = dword ptr -2Ch  | * | status = dword ptr -10h ,data,1
"sub esp, 68h  | * | mov [esp+6Ch+fctx.lsda], offset dword_412424 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_412424  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_405889 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_405889  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | cmp ds:__ZZN9__gnu_cxx27__verbose_terminate_handlerEvE11terminating, 0  ",gcc,1
call __Unwind_SjLj_Register  | * | jnz loc_40584E ,gcc,1
"cmp ds:__ZZN9__gnu_cxx27__verbose_terminate_handlerEvE11terminating, 0   | * | mov ds:__ZZN9__gnu_cxx27__verbose_terminate_handlerEvE11terminating, 1  ",gcc,1
jnz loc_40584E  | * | call ___cxa_current_exception_type ,gcc,1
"mov ds:__ZZN9__gnu_cxx27__verbose_terminate_handlerEvE11terminating, 1   | * | test eax, eax ",gcc,1
call ___cxa_current_exception_type  | * | jz loc_4058AE ,gcc,1
"test eax, eax  | * | mov eax, [eax+4] ",gcc,2
"jz loc_4058AE  | * | mov [esp+6Ch+lpmangled], eax ",gcc,1
"mov eax, [eax+4]  | * | cmp byte ptr [eax], 2Ah  ",gcc,1
"mov [esp+6Ch+lpmangled], eax  | * | setz al ",gcc,1
"cmp byte ptr [eax], 2Ah   | * | movzx eax, al ",gcc,1
"setz al  | * | add [esp+6Ch+lpmangled], eax ",gcc,1
"movzx eax, al  | * | mov [esp+6Ch+status], 0FFFFFFFFh ",gcc,1
"add [esp+6Ch+lpmangled], eax  | * | lea eax, [esp+6Ch+status] ",gcc,1
"mov [esp+6Ch+status], 0FFFFFFFFh  | * | mov [esp+6Ch+lpstatus], eax  ",gcc,1
"lea eax, [esp+6Ch+status]  | * | mov [esp+6Ch+lpoutlen], 0  ",gcc,1
"mov [esp+6Ch+lpstatus], eax   | * | mov [esp+6Ch+lpout], 0  ",gcc,1
"mov [esp+6Ch+lpoutlen], 0   | * | mov eax, [esp+6Ch+lpmangled] ",gcc,1
"mov [esp+6Ch+lpout], 0   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+6Ch+lpmangled]  | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | call ___cxa_demangle ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | mov [esp+6Ch+var_54], eax ",gcc,1
"call ___cxa_demangle  | * | mov eax, ds:__imp___iob ",gcc,1
"mov [esp+6Ch+var_54], eax  | * | add eax, 40h  ",gcc,1
"mov eax, ds:__imp___iob  | * | mov [esp+6Ch+var_58], eax ",gcc,1
"add eax, 40h   | * | mov [esp+6Ch+lpstatus], eax  ",gcc,2
"mov [esp+6Ch+var_58], eax  | * | mov [esp+6Ch+lpoutlen], 30h  ",gcc,1
"mov [esp+6Ch+lpstatus], eax   | * | mov [esp+6Ch+lpout], 1  ",gcc,5
"mov [esp+6Ch+lpoutlen], 30h   | * | mov [esp+6Ch+lpfctx], offset aTerminateCalle  ",gcc,1
"mov [esp+6Ch+lpout], 1   | * | call _fwrite ",gcc,5
"mov [esp+6Ch+lpfctx], offset aTerminateCalle   | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"call _fwrite  | * | cmp [esp+6Ch+status], 0 ",gcc,1
"mov eax, [esp+6Ch+var_58]  | * | mov [esp+6Ch+lpout], eax  ",gcc,1
"cmp [esp+6Ch+status], 0  | * | jz short loc_405840 ",gcc,1
"mov [esp+6Ch+lpout], eax   | * | mov eax, [esp+6Ch+lpmangled] ",gcc,1
"jz short loc_405840  | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+6Ch+lpmangled]  | * | call _fputs ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | loc_405804:  ",gcc,1
"call _fputs  | * | mov eax, ds:__imp___iob ",gcc,1
"loc_405804:   | * | add eax, 40h  ",gcc,1
"mov eax, ds:__imp___iob  | * | mov [esp+6Ch+lpstatus], eax  ",gcc,3
"add eax, 40h   | * | mov [esp+6Ch+lpoutlen], 2  ",gcc,1
"mov [esp+6Ch+lpoutlen], 2   | * | mov [esp+6Ch+lpfctx], offset asc_4145E5  ",gcc,1
"mov [esp+6Ch+lpfctx], offset asc_4145E5   | * | cmp [esp+6Ch+status], 0 ",gcc,1
call _fwrite  | * | jz short loc_40587B ,gcc,1
"cmp [esp+6Ch+status], 0  | * | loc_405833:  ",gcc,1
"jz short loc_40587B  | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
loc_405833:   | * | call ___cxa_rethrow ,gcc,1
"mov [esp+6Ch+fctx.call_site], 1  | * | loc_405840:  ",gcc,1
"call ___cxa_rethrow  | * | mov eax, [esp+6Ch+var_54] ",gcc,1
"loc_405840:   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+6Ch+var_54]  | * | call _fputs ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | jmp short loc_405804 ",gcc,1
call _fputs  | * | loc_40584E:  ,gcc,1
"jmp short loc_405804  | * | mov eax, ds:__imp___iob ",gcc,1
"loc_40584E:   | * | add eax, 40h  ",gcc,1
"add eax, 40h   | * | mov [esp+6Ch+lpoutlen], 1Dh  ",gcc,1
"mov [esp+6Ch+lpoutlen], 1Dh   | * | mov [esp+6Ch+lpfctx], offset aTerminateCalle_0  ",gcc,1
"mov [esp+6Ch+lpfctx], offset aTerminateCalle_0   | * | call _abort ",gcc,1
call _fwrite  | * | loc_40587B:  ,gcc,1
"call _abort  | * | mov eax, [esp+6Ch+var_54] ",gcc,1
"loc_40587B:   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+6Ch+var_54]  | * | call _free ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | jmp short loc_405833 ",gcc,1
call _free  | * | loc_405889:  ,gcc,1
"jmp short loc_405833  | * | mov eax, [esp+6Ch+fctx.data] ",gcc,1
"loc_405889:   | * | cmp [esp+6Ch+fctx.data+4], 1 ",gcc,1
"mov eax, [esp+6Ch+fctx.data]  | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"cmp [esp+6Ch+fctx.data+4], 1  | * | jz short loc_4058D8 ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | call ___cxa_begin_catch ",gcc,1
"jz short loc_4058D8  | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
call ___cxa_begin_catch  | * | call ___cxa_end_catch ,gcc,2
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_4058A9:  ",gcc,1
call ___cxa_end_catch  | * | call _abort ,gcc,1
loc_4058A9:   | * | loc_4058AE:  ,gcc,1
"call _abort  | * | mov eax, ds:__imp___iob ",gcc,1
"loc_4058AE:   | * | add eax, 40h  ",gcc,1
"add eax, 40h   | * | mov [esp+6Ch+lpoutlen], 2Dh  ",gcc,1
"mov [esp+6Ch+lpoutlen], 2Dh   | * | mov [esp+6Ch+lpfctx], offset aTerminateCalle_1  ",gcc,1
"mov [esp+6Ch+lpfctx], offset aTerminateCalle_1   | * | jmp short loc_4058A9 ",gcc,1
call _fwrite  | * | loc_4058D8:  ,gcc,1
jmp short loc_4058A9  | * | call ___cxa_begin_catch ,gcc,1
"loc_4058D8:   | * | mov edx, [eax] ",gcc,1
"call ___cxa_begin_catch  | * | mov ecx, eax ",gcc,1
"mov edx, [eax]  | * | call dword ptr [edx+8] ",gcc,1
"mov ecx, eax  | * | mov [esp+6Ch+var_58], eax ",gcc,1
"call dword ptr [edx+8]  | * | mov eax, ds:__imp___iob ",gcc,1
"mov [esp+6Ch+var_58], eax  | * | add eax, 40h  ",gcc,1
"mov eax, ds:__imp___iob  | * | mov [esp+6Ch+lpmangled], eax ",gcc,1
"mov [esp+6Ch+lpmangled], eax  | * | mov [esp+6Ch+lpoutlen], 0Bh  ",gcc,1
"mov [esp+6Ch+lpoutlen], 0Bh   | * | mov [esp+6Ch+lpfctx], offset aWhat  ",gcc,1
"mov [esp+6Ch+lpfctx], offset aWhat   | * | mov eax, [esp+6Ch+lpmangled] ",gcc,1
"call _fwrite  | * | mov [esp+6Ch+lpout], eax  ",gcc,1
"mov eax, [esp+6Ch+lpmangled]  | * | mov eax, [esp+6Ch+var_58] ",gcc,1
"mov [esp+6Ch+lpout], eax   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+6Ch+var_58]  | * | call _fputs ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | mov eax, [esp+6Ch+lpmangled] ",gcc,1
"call _fputs  | * | mov [esp+6Ch+lpout], eax  ",gcc,1
"mov eax, [esp+6Ch+lpmangled]  | * | mov [esp+6Ch+lpfctx], 0Ah  ",gcc,1
"mov [esp+6Ch+lpout], eax   | * | call _fputc ",gcc,1
"mov [esp+6Ch+lpfctx], 0Ah   | * | call ___cxa_end_catch ",gcc,1
call _fputc  | * | jmp loc_4058A9 ,gcc,1
call ___cxa_end_catch  | * | __ZN9__gnu_cxx27__verbose_terminate_handlerEv endp ,gcc,1
jmp loc_4058A9  | * | align 4 ,gcc,1
__ZN9__gnu_cxx27__verbose_terminate_handlerEv endp  | * | public __ZN9__gnu_cxx20recursive_init_errorD1Ev ,gcc,1
align 4  | * | __ZN9__gnu_cxx20recursive_init_errorD1Ev proc near ,gcc,1
"public __ZN9__gnu_cxx20recursive_init_errorD1Ev  | * | mov dword ptr [ecx], offset off_416328 ",gcc,1
__ZN9__gnu_cxx20recursive_init_errorD1Ev proc near  | * | jmp __ZNSt9exceptionD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416328  | * | __ZN9__gnu_cxx20recursive_init_errorD1Ev endp ",gcc,1
__ZN9__gnu_cxx20recursive_init_errorD1Ev endp  | * | public __ZN9__gnu_cxx20recursive_init_errorD0Ev ,gcc,1
align 4  | * | __ZN9__gnu_cxx20recursive_init_errorD0Ev proc near ,gcc,1
"sub esp, 18h  | * | call __ZN9__gnu_cxx20recursive_init_errorD1Ev  ",gcc,1
call __ZN9__gnu_cxx20recursive_init_errorD1Ev   | * | call __ZdlPv  ,gcc,1
pop ebx  | * | __ZN9__gnu_cxx20recursive_init_errorD0Ev endp ,gcc,1
retn  | * | public ___cxa_current_exception_type ,gcc,1
__ZN9__gnu_cxx20recursive_init_errorD0Ev endp  | * | ___cxa_current_exception_type proc near  ,gcc,1
"public ___cxa_current_exception_type  | * | sub esp, 0Ch ",gcc,1
___cxa_current_exception_type proc near   | * | call ___cxa_get_globals ,gcc,1
"sub esp, 0Ch  | * | mov eax, [eax] ",gcc,1
"mov eax, [eax]  | * | jz short loc_405990 ",gcc,1
"test eax, eax  | * | test byte ptr [eax+30h], 1 ",gcc,1
jz short loc_405990  | * | jnz short loc_405988 ,gcc,1
"test byte ptr [eax+30h], 1  | * | loc_405980:  ",gcc,1
"jnz short loc_405988  | * | mov eax, [eax] ",gcc,1
loc_405980:   | * | loc_405982:  ,gcc,1
"mov eax, [eax]  | * | add esp, 0Ch ",gcc,1
loc_405982:   | * | retn ,gcc,1
"add esp, 0Ch  | * | align 4 ",gcc,1
retn  | * | loc_405988:  ,gcc,1
"align 4  | * | mov eax, [eax] ",gcc,1
"loc_405988:   | * | sub eax, 50h  ",gcc,1
"mov eax, [eax]  | * | jmp short loc_405980 ",gcc,1
"sub eax, 50h   | * | align 10h ",gcc,1
jmp short loc_405980  | * | loc_405990:  ,gcc,1
loc_405990:   | * | jmp short loc_405982 ,gcc,1
"xor eax, eax  | * | ___cxa_current_exception_type endp ",gcc,1
jmp short loc_405982  | * | _d_make_comp proc near  ,gcc,1
_d_make_comp proc near   | * | push ebp ,gcc,1
"push esi  | * | mov edi, [esp+10h+arg_0] ",gcc,1
"push ebx  | * | cmp edx, 46h  ",gcc,1
"mov edi, [esp+10h+arg_0]  | * | ja short def_4059A1  ",gcc,1
"cmp edx, 46h   | * | jmp ds:jpt_4059A1[edx*4]  ",gcc,1
ja short def_4059A1   | * | loc_4059A8:  ,gcc,1
"jmp ds:jpt_4059A1[edx*4]   | * | test ecx, ecx  ",gcc,1
loc_4059A8:   | * | jz short def_4059A1  ,gcc,1
"test ecx, ecx   | * | loc_4059AC:  ",gcc,1
"jz short def_4059A1   | * | mov esi, [eax+14h]  ",gcc,1
"loc_4059AC:   | * | cmp esi, [eax+18h] ",gcc,1
"mov esi, [eax+14h]   | * | jl short loc_4059C0 ",gcc,1
"cmp esi, [eax+18h]  | * | def_4059A1:  ",gcc,1
"jl short loc_4059C0  | * | xor ebx, ebx  ",gcc,1
"def_4059A1:   | * | mov eax, ebx ",gcc,1
"xor ebx, ebx   | * | pop ebx ",gcc,1
"mov eax, ebx  | * | pop esi ",gcc,2
retn  | * | loc_4059C0:  ,gcc,1
"align 10h  | * | lea ebp, [esi+esi*2] ",gcc,1
"loc_4059C0:   | * | mov ebx, [eax+10h] ",gcc,1
"lea ebp, [esi+esi*2]  | * | lea ebx, [ebx+ebp*4] ",gcc,1
"mov ebx, [eax+10h]  | * | inc esi ",gcc,1
"lea ebx, [ebx+ebp*4]  | * | mov [eax+14h], esi ",gcc,1
"inc esi  | * | test ebx, ebx ",gcc,1
"mov [eax+14h], esi  | * | jz short def_4059A1  ",gcc,1
"test ebx, ebx  | * | mov [ebx], edx ",gcc,1
"jz short def_4059A1   | * | mov [ebx+4], ecx ",gcc,1
"mov [ebx], edx  | * | mov [ebx+8], edi ",gcc,1
"mov [ebx+4], ecx  | * | mov eax, ebx ",gcc,1
"mov [ebx+8], edi  | * | pop ebx ",gcc,1
pop ebp  | * | loc_4059E0:  ,gcc,1
"retn  | * | test ecx, ecx  ",gcc,1
loc_4059E0:   | * | jz short def_4059A1  ,gcc,1
"test ecx, ecx   | * | loc_4059E4:  ",gcc,1
"jz short def_4059A1   | * | test edi, edi  ",gcc,1
loc_4059E4:   | * | jz short def_4059A1  ,gcc,1
"test edi, edi   | * | mov esi, [eax+14h] ",gcc,1
"jz short def_4059A1   | * | cmp esi, [eax+18h] ",gcc,1
"mov esi, [eax+14h]  | * | jge short def_4059A1  ",gcc,1
"cmp esi, [eax+18h]  | * | jmp short loc_4059C0 ",gcc,1
jge short def_4059A1   | * | _d_make_comp endp ,gcc,1
jmp short loc_4059C0  | * | align 4 ,gcc,1
_d_make_comp endp  | * | _d_make_name proc near  ,gcc,1
align 4  | * | push edi ,gcc,2
_d_make_name proc near   | * | push esi ,gcc,1
"push esi  | * | mov ebx, eax ",gcc,3
"push ebx  | * | mov esi, [eax+14h] ",gcc,1
"mov ebx, eax  | * | cmp esi, [eax+18h] ",gcc,1
"mov esi, [eax+14h]  | * | jge short loc_405A1A ",gcc,1
"cmp esi, [eax+18h]  | * | lea edi, [esi+esi*2] ",gcc,1
"jge short loc_405A1A  | * | mov eax, [eax+10h] ",gcc,1
"lea edi, [esi+esi*2]  | * | lea eax, [eax+edi*4] ",gcc,1
"mov eax, [eax+10h]  | * | inc esi ",gcc,1
"lea eax, [eax+edi*4]  | * | mov [ebx+14h], esi ",gcc,1
"inc esi  | * | test eax, eax ",gcc,1
"mov [ebx+14h], esi  | * | jz short loc_405A1A ",gcc,1
"test eax, eax  | * | test edx, edx ",gcc,2
jz short loc_405A1A  | * | jz short loc_405A1A ,gcc,1
"test edx, edx  | * | test ecx, ecx ",gcc,1
jz short loc_405A1A  | * | jnz short loc_405A20 ,gcc,1
"test ecx, ecx  | * | loc_405A1A:  ",gcc,1
"jnz short loc_405A20  | * | xor eax, eax ",gcc,1
loc_405A1A:   | * | pop ebx ,gcc,1
pop edi  | * | loc_405A20:  ,gcc,1
"retn  | * | mov dword ptr [eax], 0 ",gcc,1
"loc_405A20:   | * | mov [eax+4], edx ",gcc,1
"mov dword ptr [eax], 0  | * | mov [eax+8], ecx ",gcc,1
"mov [eax+4], edx  | * | pop ebx ",gcc,1
"mov [eax+8], ecx  | * | pop esi ",gcc,1
pop edi  | * | _d_make_name endp ,gcc,1
retn  | * | _d_cv_qualifiers proc near  ,gcc,1
_d_cv_qualifiers proc near   | * | push ebp ,gcc,1
push esi  | * | push ebx ,gcc,2
"push ebx  | * | mov ebx, eax ",gcc,16
"push ebx  | * | mov ebp, edx ",gcc,1
"mov ebx, eax  | * | mov edi, ecx ",gcc,2
"mov ebp, edx  | * | mov eax, [eax+0Ch] ",gcc,1
"mov edi, ecx  | * | mov al, [eax] ",gcc,1
"mov eax, [eax+0Ch]  | * | mov esi, edx ",gcc,1
"mov al, [eax]  | * | jmp short loc_405A7C ",gcc,1
"mov esi, edx  | * | loc_405A44:  ",gcc,1
"jmp short loc_405A7C  | * | cmp al, 56h  ",gcc,1
loc_405A44:   | * | jz short loc_405A94 ,gcc,1
"cmp al, 56h   | * | cmp al, 4Bh  ",gcc,2
jz short loc_405A94  | * | jnz short loc_405AB4 ,gcc,1
"cmp al, 4Bh   | * | inc dword ptr [ebx+0Ch] ",gcc,1
"jnz short loc_405AB4  | * | cmp edi, 1 ",gcc,1
"inc dword ptr [ebx+0Ch]  | * | sbb edx, edx ",gcc,3
"cmp edi, 1  | * | and edx, 0FFFFFFFDh ",gcc,3
"sbb edx, edx  | * | add edx, 1Ch ",gcc,1
"and edx, 0FFFFFFFDh  | * | add dword ptr [ebx+30h], 6 ",gcc,1
"add edx, 1Ch  | * | loc_405A5E:  ",gcc,1
"add dword ptr [ebx+30h], 6  | * | mov [esp+14h+var_14], 0 ",gcc,1
"loc_405A5E:   | * | xor ecx, ecx ",gcc,1
"mov [esp+14h+var_14], 0  | * | mov eax, ebx ",gcc,1
"xor ecx, ecx  | * | call _d_make_comp ",gcc,1
"mov eax, ebx  | * | mov [esi], eax ",gcc,6
"call _d_make_comp  | * | test eax, eax ",gcc,6
"mov [esi], eax  | * | jz short loc_405AA8 ",gcc,1
"test eax, eax  | * | lea esi, [eax+4] ",gcc,1
"jz short loc_405AA8  | * | mov eax, [ebx+0Ch] ",gcc,1
"lea esi, [eax+4]  | * | mov al, [eax] ",gcc,1
"mov eax, [ebx+0Ch]  | * | loc_405A7C:  ",gcc,1
"mov al, [eax]  | * | cmp al, 72h  ",gcc,1
loc_405A7C:   | * | jnz short loc_405A44 ,gcc,1
"cmp al, 72h   | * | inc dword ptr [ebx+0Ch] ",gcc,1
"jnz short loc_405A44  | * | cmp edi, 1 ",gcc,1
"sbb edx, edx  | * | add edx, 1Ah ",gcc,1
"and edx, 0FFFFFFFDh  | * | add dword ptr [ebx+30h], 9 ",gcc,2
"add edx, 1Ah  | * | jmp short loc_405A5E ",gcc,1
"add dword ptr [ebx+30h], 9  | * | loc_405A94:  ",gcc,1
jmp short loc_405A5E  | * | inc dword ptr [ebx+0Ch] ,gcc,1
"loc_405A94:   | * | cmp edi, 1 ",gcc,1
"sbb edx, edx  | * | add edx, 1Bh ",gcc,1
"add edx, 1Bh  | * | jmp short loc_405A5E ",gcc,1
"add dword ptr [ebx+30h], 9  | * | loc_405AA8:  ",gcc,1
"jmp short loc_405A5E  | * | xor esi, esi ",gcc,1
loc_405AA8:   | * | loc_405AAA:  ,gcc,1
"xor esi, esi  | * | mov eax, esi ",gcc,1
loc_405AAA:   | * | pop edx ,gcc,1
"mov eax, esi  | * | pop ebx ",gcc,17
pop edx  | * | pop esi ,gcc,1
retn  | * | loc_405AB4:  ,gcc,1
"align 4  | * | test edi, edi ",gcc,2
loc_405AB4:   | * | jnz short loc_405AAA ,gcc,1
"test edi, edi  | * | cmp al, 46h  ",gcc,1
jnz short loc_405AAA  | * | jnz short loc_405AAA ,gcc,1
"cmp al, 46h   | * | cmp esi, ebp ",gcc,1
jnz short loc_405AAA  | * | jnz short loc_405ADC ,gcc,1
"cmp esi, ebp  | * | jmp short loc_405AAA ",gcc,1
jnz short loc_405ADC  | * | align 4 ,gcc,1
jmp short loc_405AAA  | * | loc_405AC4:  ,gcc,1
"align 4  | * | cmp eax, 19h ",gcc,1
loc_405AC4:   | * | jz short loc_405AF0 ,gcc,1
"cmp eax, 19h  | * | cmp eax, 17h ",gcc,1
jz short loc_405AF0  | * | jnz short loc_405AD5 ,gcc,1
"cmp eax, 17h  | * | mov dword ptr [ebp+0], 1Ah ",gcc,1
jnz short loc_405AD5  | * | loc_405AD5:  ,gcc,1
"mov dword ptr [ebp+0], 1Ah  | * | add ebp, 4 ",gcc,1
"loc_405AD5:   | * | cmp esi, ebp ",gcc,1
"add ebp, 4  | * | jz short loc_405AAA ",gcc,1
"cmp esi, ebp  | * | loc_405ADC:  ",gcc,1
"jz short loc_405AAA  | * | mov ebp, [ebp+0] ",gcc,1
"loc_405ADC:   | * | mov eax, [ebp+0] ",gcc,1
"mov ebp, [ebp+0]  | * | cmp eax, 18h ",gcc,1
"mov eax, [ebp+0]  | * | jnz short loc_405AC4 ",gcc,1
"cmp eax, 18h  | * | mov dword ptr [ebp+0], 1Bh ",gcc,1
jnz short loc_405AC4  | * | jmp short loc_405AD5 ,gcc,1
"mov dword ptr [ebp+0], 1Bh  | * | loc_405AF0:  ",gcc,1
"jmp short loc_405AD5  | * | mov dword ptr [ebp+0], 1Ch ",gcc,1
loc_405AF0:   | * | jmp short loc_405AD5 ,gcc,1
"mov dword ptr [ebp+0], 1Ch  | * | _d_cv_qualifiers endp ",gcc,1
jmp short loc_405AD5  | * | align 4 ,gcc,1
_d_cv_qualifiers endp  | * | _d_substitution proc near  ,gcc,1
var_20 = dword ptr -20h  | * | var_14 = dword ptr -14h ,data,1
"mov ecx, eax  | * | cmp byte ptr [eax], 53h  ",gcc,1
"mov eax, [eax+0Ch]  | * | jz short loc_405B0C ",gcc,1
"cmp byte ptr [eax], 53h   | * | xor eax, eax ",gcc,1
jz short loc_405B0C  | * | retn ,gcc,1
retn  | * | loc_405B0C:  ,gcc,1
align 4  | * | push ebp ,gcc,2
loc_405B0C:   | * | push edi ,gcc,1
"push esi  | * | sub esp, 10h ",gcc,11
"push ebx  | * | mov ebx, edx ",gcc,1
"sub esp, 10h  | * | lea edx, [eax+1] ",gcc,1
"mov ebx, edx  | * | mov [ecx+0Ch], edx ",gcc,1
"lea edx, [eax+1]  | * | movsx edx, byte ptr [eax+1] ",gcc,1
"mov [ecx+0Ch], edx  | * | test dl, dl ",gcc,1
"movsx edx, byte ptr [eax+1]  | * | jz short loc_405B80 ",gcc,1
"test dl, dl  | * | add eax, 2 ",gcc,3
"jz short loc_405B80  | * | mov [ecx+0Ch], eax ",gcc,1
"add eax, 2  | * | cmp dl, 5Fh  ",gcc,1
"mov [ecx+0Ch], eax  | * | jnz short loc_405B70 ",gcc,1
"cmp dl, 5Fh   | * | xor ebx, ebx ",gcc,1
jnz short loc_405B70  | * | loc_405B30:  ,gcc,1
"xor ebx, ebx  | * | cmp ebx, [ecx+20h] ",gcc,1
loc_405B30:   | * | jnb short loc_405B66 ,gcc,1
"cmp ebx, [ecx+20h]  | * | inc dword ptr [ecx+28h] ",gcc,1
"jnb short loc_405B66  | * | mov eax, [ecx+1Ch] ",gcc,1
"inc dword ptr [ecx+28h]  | * | mov eax, [eax+ebx*4] ",gcc,1
"mov eax, [ecx+1Ch]  | * | loc_405B3E:  ",gcc,1
"mov eax, [eax+ebx*4]  | * | add esp, 10h ",gcc,1
loc_405B3E:   | * | pop ebx ,gcc,1
"add esp, 10h  | * | pop esi ",gcc,14
retn  | * | loc_405B48:  ,gcc,1
"align 4  | * | mov ebx, 1 ",gcc,1
loc_405B48:   | * | loc_405B4D:  ,gcc,1
"mov ebx, 1  | * | mov eax, offset _standard_subs ",gcc,1
"loc_405B4D:   | * | xchg ax, ax ",gcc,1
"mov eax, offset _standard_subs  | * | loc_405B54:  ",gcc,1
"xchg ax, ax  | * | cmp dl, [eax] ",gcc,1
loc_405B54:   | * | jz loc_405BF4 ,gcc,1
"cmp dl, [eax]  | * | add eax, 1Ch ",gcc,1
"jz loc_405BF4  | * | cmp eax, offset unk_4157E4 ",gcc,1
"add eax, 1Ch  | * | jnz short loc_405B54 ",gcc,1
"cmp eax, offset unk_4157E4  | * | loc_405B66:  ",gcc,1
"jnz short loc_405B54  | * | xor eax, eax ",gcc,1
"loc_405B66:   | * | add esp, 10h ",gcc,1
pop ebp  | * | loc_405B70:  ,gcc,1
"retn  | * | lea eax, [edx-30h] ",gcc,1
"loc_405B70:   | * | cmp al, 9 ",gcc,1
"lea eax, [edx-30h]  | * | jbe short loc_405B9C ",gcc,1
"cmp al, 9  | * | lea eax, [edx-41h] ",gcc,1
"jbe short loc_405B9C  | * | cmp al, 19h ",gcc,1
"lea eax, [edx-41h]  | * | jbe short loc_405B9C ",gcc,1
"cmp al, 19h  | * | xchg ax, ax ",gcc,1
jbe short loc_405B9C  | * | loc_405B80:  ,gcc,1
"xchg ax, ax  | * | test byte ptr [ecx+8], 8 ",gcc,1
loc_405B80:   | * | jnz short loc_405B48 ,gcc,1
"test byte ptr [ecx+8], 8  | * | test ebx, ebx ",gcc,1
jnz short loc_405B48  | * | jz short loc_405BEC ,gcc,1
"test ebx, ebx  | * | mov eax, [ecx+0Ch] ",gcc,1
"jz short loc_405BEC  | * | mov al, [eax] ",gcc,1
"mov eax, [ecx+0Ch]  | * | sub eax, 43h  ",gcc,1
"mov al, [eax]  | * | xor ebx, ebx ",gcc,1
"sub eax, 43h   | * | cmp al, 1 ",gcc,1
"xor ebx, ebx  | * | setbe bl ",gcc,1
"cmp al, 1  | * | jmp short loc_405B4D ",gcc,1
setbe bl  | * | align 4 ,gcc,1
jmp short loc_405B4D  | * | loc_405B9C:  ,gcc,1
"loc_405B9C:   | * | lea ebx, [edx-30h] ",gcc,1
"xor eax, eax  | * | cmp bl, 9 ",gcc,1
"lea ebx, [edx-30h]  | * | ja short loc_405BD0 ",gcc,1
"cmp bl, 9  | * | xchg ax, ax ",gcc,1
ja short loc_405BD0  | * | loc_405BA8:  ,gcc,1
"xchg ax, ax  | * | lea ebx, [eax+eax*8] ",gcc,1
"loc_405BA8:   | * | lea ebx, [edx+ebx*4-30h] ",gcc,1
"lea ebx, [eax+eax*8]  | * | loc_405BAF:  ",gcc,1
"lea ebx, [edx+ebx*4-30h]  | * | cmp eax, ebx ",gcc,1
loc_405BAF:   | * | ja short loc_405B66 ,gcc,1
"cmp eax, ebx  | * | mov eax, [ecx+0Ch] ",gcc,1
"ja short loc_405B66  | * | movsx edx, byte ptr [eax] ",gcc,1
"mov eax, [ecx+0Ch]  | * | test dl, dl ",gcc,1
"movsx edx, byte ptr [eax]  | * | jz short loc_405BC6 ",gcc,1
"test dl, dl  | * | inc eax ",gcc,1
"jz short loc_405BC6  | * | mov [ecx+0Ch], eax ",gcc,1
"inc eax  | * | cmp dl, 5Fh  ",gcc,1
"mov [ecx+0Ch], eax  | * | jz short loc_405BE4 ",gcc,1
"cmp dl, 5Fh   | * | loc_405BC6:  ",gcc,1
"jz short loc_405BE4  | * | mov eax, ebx ",gcc,1
"loc_405BC6:   | * | lea ebx, [edx-30h] ",gcc,1
"mov eax, ebx  | * | cmp bl, 9 ",gcc,1
"lea ebx, [edx-30h]  | * | jbe short loc_405BA8 ",gcc,1
"cmp bl, 9  | * | loc_405BD0:  ",gcc,1
"jbe short loc_405BA8  | * | lea ebx, [edx-41h] ",gcc,1
"loc_405BD0:   | * | cmp bl, 19h ",gcc,1
"lea ebx, [edx-41h]  | * | ja short loc_405B66 ",gcc,1
"cmp bl, 19h  | * | lea ebx, [eax+eax*8] ",gcc,1
"ja short loc_405B66  | * | lea ebx, [edx+ebx*4-37h] ",gcc,1
"lea ebx, [eax+eax*8]  | * | jmp short loc_405BAF ",gcc,1
"lea ebx, [edx+ebx*4-37h]  | * | align 4 ",gcc,1
jmp short loc_405BAF  | * | loc_405BE4:  ,gcc,1
align 4  | * | inc ebx ,gcc,1
loc_405BE4:   | * | jmp loc_405B30 ,gcc,1
inc ebx  | * | align 4 ,gcc,1
jmp loc_405B30  | * | loc_405BEC:  ,gcc,1
"align 4  | * | xor ebx, ebx ",gcc,1
loc_405BEC:   | * | jmp loc_405B4D ,gcc,1
"xor ebx, ebx  | * | align 4 ",gcc,4
jmp loc_405B4D  | * | loc_405BF4:  ,gcc,1
"align 4  | * | mov edx, [eax+14h] ",gcc,1
"loc_405BF4:   | * | mov [esp+20h+var_20], edx ",gcc,1
"mov edx, [eax+14h]  | * | test edx, edx ",gcc,1
"mov [esp+20h+var_20], edx  | * | jz loc_405C88 ",gcc,1
"test edx, edx  | * | mov edi, [eax+18h] ",gcc,1
"jz loc_405C88  | * | mov [esp+20h+var_14], edi ",gcc,1
"mov edi, [eax+18h]  | * | mov edx, [ecx+14h] ",gcc,1
"mov [esp+20h+var_14], edi  | * | mov ebp, [ecx+18h] ",gcc,1
"mov edx, [ecx+14h]  | * | mov [esp+20h+var_18], ebp ",gcc,1
"mov ebp, [ecx+18h]  | * | cmp edx, ebp ",gcc,1
"mov [esp+20h+var_18], ebp  | * | jge short loc_405C84 ",gcc,1
"cmp edx, ebp  | * | lea esi, [edx+edx*2] ",gcc,1
"jge short loc_405C84  | * | mov ebp, [ecx+10h] ",gcc,1
"lea esi, [edx+edx*2]  | * | lea edi, [ebp+esi*4+0] ",gcc,1
"mov ebp, [ecx+10h]  | * | inc edx ",gcc,1
"lea edi, [ebp+esi*4+0]  | * | mov [ecx+14h], edx ",gcc,1
"inc edx  | * | test edi, edi ",gcc,1
"mov [ecx+14h], edx  | * | jz short loc_405C3C ",gcc,1
"test edi, edi  | * | mov dword ptr [edi], 16h ",gcc,1
"jz short loc_405C3C  | * | mov esi, [esp+20h+var_20] ",gcc,1
"mov dword ptr [edi], 16h  | * | mov [edi+4], esi ",gcc,1
"mov esi, [esp+20h+var_20]  | * | mov ebp, [esp+20h+var_14] ",gcc,1
"mov [edi+4], esi  | * | mov [edi+8], ebp ",gcc,1
"mov ebp, [esp+20h+var_14]  | * | loc_405C3C:  ",gcc,1
"mov [edi+8], ebp  | * | mov [ecx+2Ch], edi ",gcc,1
loc_405C3C:   | * | loc_405C3F:  ,gcc,1
"mov [ecx+2Ch], edi  | * | test ebx, ebx ",gcc,1
loc_405C3F:   | * | jz short loc_405C7C ,gcc,1
"test ebx, ebx  | * | mov esi, [eax+0Ch] ",gcc,1
"jz short loc_405C7C  | * | mov ebx, [eax+10h] ",gcc,1
"mov esi, [eax+0Ch]  | * | loc_405C49:  ",gcc,1
"mov ebx, [eax+10h]  | * | add [ecx+30h], ebx ",gcc,1
"loc_405C49:   | * | cmp edx, [esp+20h+var_18] ",gcc,1
"add [ecx+30h], ebx  | * | jge loc_405B66 ",gcc,1
"cmp edx, [esp+20h+var_18]  | * | lea edi, [edx+edx*2] ",gcc,1
"jge loc_405B66  | * | mov eax, [ecx+10h] ",gcc,1
"lea edi, [edx+edx*2]  | * | lea eax, [eax+edi*4] ",gcc,2
"mov eax, [ecx+10h]  | * | inc edx ",gcc,1
"lea eax, [eax+edi*4]  | * | mov [ecx+14h], edx ",gcc,1
"inc edx  | * | test eax, eax ",gcc,13
"mov [ecx+14h], edx  | * | jz loc_405B66 ",gcc,1
"test eax, eax  | * | mov dword ptr [eax], 16h ",gcc,1
"jz loc_405B66  | * | mov [eax+4], esi ",gcc,1
"mov dword ptr [eax], 16h  | * | mov [eax+8], ebx ",gcc,1
"mov [eax+4], esi  | * | jmp loc_405B3E ",gcc,1
"mov [eax+8], ebx  | * | loc_405C7C:  ",gcc,1
"jmp loc_405B3E  | * | mov esi, [eax+4] ",gcc,1
"loc_405C7C:   | * | mov ebx, [eax+8] ",gcc,1
"mov esi, [eax+4]  | * | jmp short loc_405C49 ",gcc,1
"mov ebx, [eax+8]  | * | loc_405C84:  ",gcc,1
"jmp short loc_405C49  | * | xor edi, edi ",gcc,1
loc_405C84:   | * | jmp short loc_405C3C ,gcc,1
"xor edi, edi  | * | loc_405C88:  ",gcc,1
"jmp short loc_405C3C  | * | mov esi, [ecx+18h] ",gcc,1
"loc_405C88:   | * | mov [esp+20h+var_18], esi ",gcc,1
"mov esi, [ecx+18h]  | * | mov edx, [ecx+14h] ",gcc,1
"mov [esp+20h+var_18], esi  | * | jmp short loc_405C3F ",gcc,1
"mov edx, [ecx+14h]  | * | _d_substitution endp ",gcc,1
jmp short loc_405C3F  | * | _d_append_char proc near  ,gcc,1
"push ebx  | * | mov bl, dl ",gcc,1
"sub esp, 28h  | * | mov ecx, [eax+100h] ",gcc,1
"mov bl, dl  | * | cmp ecx, 0FFh ",gcc,1
"mov ecx, [eax+100h]  | * | jz short loc_405CC0 ",gcc,1
"cmp ecx, 0FFh  | * | lea edx, [ecx+1] ",gcc,1
jz short loc_405CC0  | * | loc_405CAB:  ,gcc,1
"lea edx, [ecx+1]  | * | mov [eax+ecx], bl ",gcc,1
"loc_405CAB:   | * | mov [eax+100h], edx ",gcc,1
"mov [eax+ecx], bl  | * | mov [eax+104h], bl ",gcc,1
"mov [eax+100h], edx  | * | add esp, 28h ",gcc,1
"mov [eax+104h], bl  | * | pop ebx ",gcc,1
retn  | * | loc_405CC0:  ,gcc,1
"align 10h  | * | mov byte ptr [eax+0FFh], 0 ",gcc,1
"loc_405CC0:   | * | mov edx, [eax+10Ch] ",gcc,1
"mov byte ptr [eax+0FFh], 0  | * | mov [esp+2Ch+var_24], edx ",gcc,1
"mov edx, [eax+10Ch]  | * | mov [esp+2Ch+var_28], 0FFh ",gcc,1
"mov [esp+2Ch+var_24], edx  | * | mov [esp+2Ch+var_2C], eax ",gcc,1
"mov [esp+2Ch+var_28], 0FFh  | * | mov [esp+2Ch+var_10], eax ",gcc,1
"mov [esp+2Ch+var_2C], eax  | * | call dword ptr [eax+108h] ",gcc,1
call dword ptr [eax+108h]  | * | inc dword ptr [eax+120h] ,gcc,2
"mov eax, [esp+2Ch+var_10]  | * | mov edx, 1 ",gcc,1
"inc dword ptr [eax+120h]  | * | xor ecx, ecx ",gcc,1
"mov edx, 1  | * | jmp short loc_405CAB ",gcc,1
"xor ecx, ecx  | * | _d_append_char endp ",gcc,1
jmp short loc_405CAB  | * | align 4 ,gcc,1
_d_append_char endp  | * | _d_number_isra_0 proc near  ,gcc,1
_d_number_isra_0 proc near   | * | push esi ,gcc,1
"push esi  | * | mov esi, eax ",gcc,1
"push ebx  | * | mov eax, [eax] ",gcc,1
"mov esi, eax  | * | movsx ecx, byte ptr [eax] ",gcc,1
"mov eax, [eax]  | * | cmp cl, 6Eh  ",gcc,1
"movsx ecx, byte ptr [eax]  | * | jz short loc_405D3C ",gcc,1
"cmp cl, 6Eh   | * | xor edi, edi ",gcc,1
jz short loc_405D3C  | * | loc_405D0D:  ,gcc,1
"xor edi, edi  | * | lea eax, [ecx-30h] ",gcc,1
"loc_405D0D:   | * | cmp al, 9 ",gcc,1
"lea eax, [ecx-30h]  | * | ja short loc_405D4C ",gcc,1
"cmp al, 9  | * | mov edx, [esi] ",gcc,1
ja short loc_405D4C  | * | inc edx ,gcc,1
"mov edx, [esi]  | * | xor eax, eax ",gcc,1
"inc edx  | * | lea esi, [esi+0] ",gcc,1
"xor eax, eax  | * | loc_405D1C:  ",gcc,1
"lea esi, [esi+0]  | * | lea eax, [eax+eax*4] ",gcc,1
"loc_405D1C:   | * | lea eax, [ecx+eax*2-30h] ",gcc,1
"lea eax, [eax+eax*4]  | * | mov [esi], edx ",gcc,1
"lea eax, [ecx+eax*2-30h]  | * | movsx ecx, byte ptr [edx] ",gcc,1
"mov [esi], edx  | * | inc edx ",gcc,1
"movsx ecx, byte ptr [edx]  | * | lea ebx, [ecx-30h] ",gcc,1
"inc edx  | * | cmp bl, 9 ",gcc,1
"lea ebx, [ecx-30h]  | * | jbe short loc_405D1C ",gcc,1
"cmp bl, 9  | * | loc_405D31:  ",gcc,1
"jbe short loc_405D1C  | * | test edi, edi ",gcc,1
loc_405D31:   | * | jz short loc_405D37 ,gcc,1
"test edi, edi  | * | neg eax ",gcc,1
jz short loc_405D37  | * | loc_405D37:  ,gcc,1
neg eax  | * | pop ebx ,gcc,1
loc_405D37:   | * | pop esi ,gcc,1
retn  | * | loc_405D3C:  ,gcc,1
"align 4  | * | lea edx, [eax+1] ",gcc,5
"loc_405D3C:   | * | mov [esi], edx ",gcc,1
"lea edx, [eax+1]  | * | movsx ecx, byte ptr [eax+1] ",gcc,1
"mov [esi], edx  | * | mov edi, 1 ",gcc,1
"movsx ecx, byte ptr [eax+1]  | * | jmp short loc_405D0D ",gcc,1
"mov edi, 1  | * | loc_405D4C:  ",gcc,1
"jmp short loc_405D0D  | * | xor eax, eax ",gcc,1
loc_405D4C:   | * | jmp short loc_405D31 ,gcc,1
"xor eax, eax  | * | _d_number_isra_0 endp ",gcc,1
jmp short loc_405D31  | * | _d_number_component proc near  ,gcc,1
_d_number_isra_0 endp  | * | push ebx ,gcc,1
"_d_number_component proc near   | * | mov ecx, [eax+14h] ",gcc,1
"push ebx  | * | cmp ecx, [eax+18h] ",gcc,1
"mov ecx, [eax+14h]  | * | jge short loc_405D80 ",gcc,1
"cmp ecx, [eax+18h]  | * | lea ebx, [ecx+ecx*2] ",gcc,1
"jge short loc_405D80  | * | mov edx, [eax+10h] ",gcc,1
"lea ebx, [ecx+ecx*2]  | * | lea ebx, [edx+ebx*4] ",gcc,1
"mov edx, [eax+10h]  | * | inc ecx ",gcc,1
"lea ebx, [edx+ebx*4]  | * | mov [eax+14h], ecx ",gcc,1
"inc ecx  | * | test ebx, ebx ",gcc,1
"mov [eax+14h], ecx  | * | jz short loc_405D7B ",gcc,1
"test ebx, ebx  | * | mov dword ptr [ebx], 3Ch  ",gcc,1
"jz short loc_405D7B  | * | add eax, 0Ch ",gcc,1
"mov dword ptr [ebx], 3Ch   | * | call _d_number_isra_0 ",gcc,1
"add eax, 0Ch  | * | mov [ebx+4], eax ",gcc,1
call _d_number_isra_0  | * | loc_405D7B:  ,gcc,1
"mov [ebx+4], eax  | * | mov eax, ebx ",gcc,1
loc_405D7B:   | * | pop ebx ,gcc,1
"mov eax, ebx  | * | retn ",gcc,2
retn  | * | loc_405D80:  ,gcc,1
"align 10h  | * | xor ebx, ebx ",gcc,1
"loc_405D80:   | * | mov eax, ebx ",gcc,1
"xor ebx, ebx  | * | pop ebx ",gcc,1
pop ebx  | * | _d_number_component endp ,gcc,1
_d_number_component endp  | * | _d_compact_number proc near  ,gcc,1
"_d_compact_number proc near   | * | mov ebx, eax ",gcc,1
"push ebx  | * | mov edx, [eax+0Ch] ",gcc,1
"mov ebx, eax  | * | mov al, [edx] ",gcc,2
"mov edx, [eax+0Ch]  | * | cmp al, 5Fh  ",gcc,1
"mov al, [edx]  | * | jz short loc_405DB0 ",gcc,1
"cmp al, 5Fh   | * | cmp al, 6Eh  ",gcc,1
jz short loc_405DB0  | * | jz short loc_405DA8 ,gcc,1
"cmp al, 6Eh   | * | lea eax, [ebx+0Ch] ",gcc,1
jz short loc_405DA8  | * | call _d_number_isra_0 ,gcc,1
"lea eax, [ebx+0Ch]  | * | mov edx, [ebx+0Ch] ",gcc,2
"call _d_number_isra_0  | * | cmp byte ptr [edx], 5Fh  ",gcc,1
"mov edx, [ebx+0Ch]  | * | jz short loc_405DB8 ",gcc,1
"cmp byte ptr [edx], 5Fh   | * | loc_405DA8:  ",gcc,1
"jz short loc_405DB8  | * | mov eax, 0FFFFFFFFh ",gcc,1
loc_405DA8:   | * | pop ebx ,gcc,1
"mov eax, 0FFFFFFFFh  | * | retn ",gcc,1
retn  | * | loc_405DB0:  ,gcc,1
loc_405DB0:   | * | loc_405DB2:  ,gcc,1
"xor eax, eax  | * | inc edx ",gcc,1
"loc_405DB2:   | * | mov [ebx+0Ch], edx ",gcc,1
inc edx  | * | pop ebx ,gcc,1
"mov [ebx+0Ch], edx  | * | retn ",gcc,1
pop ebx  | * | loc_405DB8:  ,gcc,1
retn  | * | inc eax ,gcc,1
loc_405DB8:   | * | jmp short loc_405DB2 ,gcc,1
inc eax  | * | _d_compact_number endp ,gcc,1
jmp short loc_405DB2  | * | align 4 ,gcc,1
_d_compact_number endp  | * | _d_template_param proc near  ,gcc,1
align 4  | * | push esi ,gcc,1
_d_template_param proc near   | * | push ebx ,gcc,1
"push ebx  | * | mov eax, [eax+0Ch] ",gcc,1
"mov ebx, eax  | * | cmp byte ptr [eax], 54h  ",gcc,1
"mov eax, [eax+0Ch]  | * | jz short loc_405DD0 ",gcc,1
"cmp byte ptr [eax], 54h   | * | loc_405DC8:  ",gcc,1
"jz short loc_405DD0  | * | xor eax, eax ",gcc,1
loc_405DC8:   | * | pop ebx ,gcc,1
retn  | * | loc_405DD0:  ,gcc,1
align 10h  | * | inc eax ,gcc,2
"loc_405DD0:   | * | mov [ebx+0Ch], eax ",gcc,1
"inc eax  | * | mov eax, ebx ",gcc,3
"mov [ebx+0Ch], eax  | * | call _d_compact_number ",gcc,2
"mov eax, ebx  | * | mov ecx, eax ",gcc,1
"call _d_compact_number  | * | test eax, eax ",gcc,2
"mov ecx, eax  | * | js short loc_405DC8 ",gcc,1
"test eax, eax  | * | inc dword ptr [ebx+28h] ",gcc,1
"js short loc_405DC8  | * | mov edx, [ebx+14h] ",gcc,1
"inc dword ptr [ebx+28h]  | * | cmp edx, [ebx+18h] ",gcc,1
"mov edx, [ebx+14h]  | * | jge short loc_405DC8 ",gcc,1
"cmp edx, [ebx+18h]  | * | lea esi, [edx+edx*2] ",gcc,4
"jge short loc_405DC8  | * | mov eax, [ebx+10h] ",gcc,1
"lea esi, [edx+edx*2]  | * | lea eax, [eax+esi*4] ",gcc,2
"mov eax, [ebx+10h]  | * | inc edx ",gcc,10
"lea eax, [eax+esi*4]  | * | mov [ebx+14h], edx ",gcc,2
"mov [ebx+14h], edx  | * | jz short loc_405DC8 ",gcc,1
"test eax, eax  | * | mov dword ptr [eax], 5 ",gcc,1
"jz short loc_405DC8  | * | mov [eax+4], ecx ",gcc,1
"mov dword ptr [eax], 5  | * | pop ebx ",gcc,1
"mov [eax+4], ecx  | * | pop esi ",gcc,1
pop esi  | * | _d_template_param endp ,gcc,1
_d_template_param endp  | * | _d_discriminator proc near  ,gcc,1
"align 4  | * | mov edx, [eax+0Ch] ",gcc,1
"_d_discriminator proc near   | * | cmp byte ptr [edx], 5Fh  ",gcc,1
"mov edx, [eax+0Ch]  | * | jz short loc_405E1C ",gcc,1
"cmp byte ptr [edx], 5Fh   | * | mov eax, 1 ",gcc,1
jz short loc_405E1C  | * | retn ,gcc,1
"mov eax, 1  | * | align 4 ",gcc,1
retn  | * | loc_405E1C:  ,gcc,1
align 4  | * | inc edx ,gcc,3
"loc_405E1C:   | * | mov [eax+0Ch], edx ",gcc,1
"inc edx  | * | add eax, 0Ch ",gcc,1
"mov [eax+0Ch], edx  | * | call _d_number_isra_0 ",gcc,1
"add eax, 0Ch  | * | not eax ",gcc,1
"call _d_number_isra_0  | * | shr eax, 1Fh ",gcc,1
not eax  | * | retn ,gcc,2
"shr eax, 1Fh  | * | _d_discriminator endp ",gcc,1
_d_discriminator endp  | * | _d_source_name proc near  ,gcc,1
var_28 = dword ptr -28h  | * | var_14 = dword ptr -14h ,data,2
var_24 = dword ptr -24h  | * | var_10 = dword ptr -10h ,data,3
"sub esp, 28h  | * | lea eax, [eax+0Ch] ",gcc,1
"mov ebx, eax  | * | call _d_number_isra_0 ",gcc,1
"lea eax, [eax+0Ch]  | * | mov ecx, eax ",gcc,1
"call _d_number_isra_0  | * | test eax, eax ",gcc,1
"mov ecx, eax  | * | jle loc_405EE4 ",gcc,1
"test eax, eax  | * | mov edx, [ebx+0Ch] ",gcc,3
"jle loc_405EE4  | * | mov eax, [ebx+4] ",gcc,1
"mov edx, [ebx+0Ch]  | * | sub eax, edx ",gcc,1
"mov eax, [ebx+4]  | * | cmp ecx, eax ",gcc,1
"sub eax, edx  | * | jg loc_405EE8 ",gcc,1
"cmp ecx, eax  | * | lea eax, [edx+ecx] ",gcc,1
"jg loc_405EE8  | * | mov [ebx+0Ch], eax ",gcc,1
"lea eax, [edx+ecx]  | * | test byte ptr [ebx+8], 4 ",gcc,1
"mov [ebx+0Ch], eax  | * | jnz short loc_405EA4 ",gcc,1
"test byte ptr [ebx+8], 4  | * | loc_405E64:  ",gcc,1
"jnz short loc_405EA4  | * | cmp ecx, 9 ",gcc,1
loc_405E64:   | * | jle short loc_405E95 ,gcc,1
"cmp ecx, 9  | * | mov [esp+2Ch+var_24], 8  ",gcc,1
"jle short loc_405E95  | * | mov [esp+2Ch+var_28], offset aGlobal  ",gcc,1
"mov [esp+2Ch+var_24], 8   | * | mov [esp+2Ch+var_2C], edx  ",gcc,1
"mov [esp+2Ch+var_28], offset aGlobal   | * | mov [esp+2Ch+var_14], edx ",gcc,1
"mov [esp+2Ch+var_2C], edx   | * | mov [esp+2Ch+var_10], ecx ",gcc,1
"mov [esp+2Ch+var_14], edx  | * | call _memcmp ",gcc,1
"mov [esp+2Ch+var_10], ecx  | * | test eax, eax ",gcc,1
"call _memcmp  | * | mov edx, [esp+2Ch+var_14] ",gcc,1
"test eax, eax  | * | mov ecx, [esp+2Ch+var_10] ",gcc,1
"mov edx, [esp+2Ch+var_14]  | * | jz short loc_405EB0 ",gcc,1
"mov ecx, [esp+2Ch+var_10]  | * | loc_405E95:  ",gcc,1
"jz short loc_405EB0  | * | mov eax, ebx ",gcc,1
loc_405E95:   | * | call _d_make_name ,gcc,1
"mov eax, ebx  | * | loc_405E9C:  ",gcc,1
"call _d_make_name  | * | mov [ebx+2Ch], eax ",gcc,1
loc_405E9C:   | * | loc_405E9F:  ,gcc,1
"mov [ebx+2Ch], eax  | * | add esp, 28h ",gcc,1
loc_405E9F:   | * | pop ebx ,gcc,1
pop ebx  | * | loc_405EA4:  ,gcc,1
"retn  | * | cmp byte ptr [eax], 24h  ",gcc,1
loc_405EA4:   | * | jnz short loc_405E64 ,gcc,1
"cmp byte ptr [eax], 24h   | * | inc eax ",gcc,1
"jnz short loc_405E64  | * | mov [ebx+0Ch], eax ",gcc,1
inc eax  | * | jmp short loc_405E64 ,gcc,1
"mov [ebx+0Ch], eax  | * | align 10h ",gcc,1
jmp short loc_405E64  | * | loc_405EB0:  ,gcc,1
"align 10h  | * | mov al, [edx+8] ",gcc,1
"loc_405EB0:   | * | cmp al, 2Eh  ",gcc,1
"mov al, [edx+8]  | * | jz short loc_405EBF ",gcc,1
"cmp al, 2Eh   | * | cmp al, 5Fh  ",gcc,2
jz short loc_405EBF  | * | jz short loc_405EBF ,gcc,1
"cmp al, 5Fh   | * | cmp al, 24h  ",gcc,3
jz short loc_405EBF  | * | jnz short loc_405E95 ,gcc,1
"cmp al, 24h   | * | loc_405EBF:  ",gcc,1
"jnz short loc_405E95  | * | cmp byte ptr [edx+9], 4Eh  ",gcc,1
loc_405EBF:   | * | jnz short loc_405E95 ,gcc,1
"cmp byte ptr [edx+9], 4Eh   | * | mov eax, [ebx+30h] ",gcc,1
"jnz short loc_405E95  | * | add eax, 16h ",gcc,1
"mov eax, [ebx+30h]  | * | sub eax, ecx ",gcc,1
"add eax, 16h  | * | mov [ebx+30h], eax ",gcc,1
"sub eax, ecx  | * | mov ecx, 15h ",gcc,1
"mov [ebx+30h], eax  | * | mov edx, offset aAnonymousNames  ",gcc,1
"mov ecx, 15h  | * | mov eax, ebx ",gcc,1
"mov edx, offset aAnonymousNames   | * | call _d_make_name ",gcc,1
"mov eax, ebx  | * | jmp short loc_405E9C ",gcc,1
call _d_make_name  | * | align 4 ,gcc,1
jmp short loc_405E9C  | * | loc_405EE4:  ,gcc,1
loc_405EE4:   | * | jmp short loc_405E9F ,gcc,1
"xor eax, eax  | * | loc_405EE8:  ",gcc,1
"jmp short loc_405E9F  | * | xor eax, eax ",gcc,1
loc_405EE8:   | * | jmp short loc_405E9C ,gcc,1
"xor eax, eax  | * | _d_source_name endp ",gcc,1
jmp short loc_405E9C  | * | _d_call_offset proc near  ,gcc,1
_d_source_name endp  | * | push esi ,gcc,1
_d_call_offset proc near   | * | push ebx ,gcc,1
"push ebx  | * | test edx, edx ",gcc,1
"mov ebx, eax  | * | jnz short loc_405F08 ",gcc,1
"test edx, edx  | * | mov eax, [eax+0Ch] ",gcc,1
"jnz short loc_405F08  | * | movsx edx, byte ptr [eax] ",gcc,1
"mov eax, [eax+0Ch]  | * | test dl, dl ",gcc,1
"movsx edx, byte ptr [eax]  | * | jnz short loc_405F04 ",gcc,1
"test dl, dl  | * | loc_405EFE:  ",gcc,1
"jnz short loc_405F04  | * | xor eax, eax ",gcc,1
loc_405EFE:   | * | loc_405F00:  ,gcc,1
loc_405F00:   | * | pop esi ,gcc,1
retn  | * | loc_405F04:  ,gcc,1
align 4  | * | inc eax ,gcc,3
"loc_405F04:   | * | mov [ebx+0Ch], eax ",gcc,1
inc eax  | * | loc_405F08:  ,gcc,1
"mov [ebx+0Ch], eax  | * | cmp edx, 68h  ",gcc,1
loc_405F08:   | * | jz short loc_405F34 ,gcc,1
"cmp edx, 68h   | * | cmp edx, 76h  ",gcc,1
jz short loc_405F34  | * | jnz short loc_405EFE ,gcc,1
"cmp edx, 76h   | * | lea esi, [ebx+0Ch] ",gcc,1
"jnz short loc_405EFE  | * | mov eax, esi ",gcc,1
"lea esi, [ebx+0Ch]  | * | call _d_number_isra_0 ",gcc,1
"mov eax, esi  | * | mov eax, [ebx+0Ch] ",gcc,1
"call _d_number_isra_0  | * | cmp byte ptr [eax], 5Fh  ",gcc,1
"mov eax, [ebx+0Ch]  | * | jnz short loc_405EFE ",gcc,2
"cmp byte ptr [eax], 5Fh   | * | inc eax ",gcc,3
"jnz short loc_405EFE  | * | mov [ebx+0Ch], eax ",gcc,2
"inc eax  | * | mov eax, esi ",gcc,1
"mov [ebx+0Ch], eax  | * | call _d_number_isra_0 ",gcc,1
"mov eax, esi  | * | jmp short loc_405F3C ",gcc,1
call _d_number_isra_0  | * | align 4 ,gcc,1
jmp short loc_405F3C  | * | loc_405F34:  ,gcc,1
"align 4  | * | lea eax, [ebx+0Ch] ",gcc,1
loc_405F34:   | * | call _d_number_isra_0 ,gcc,1
"lea eax, [ebx+0Ch]  | * | loc_405F3C:  ",gcc,1
"call _d_number_isra_0  | * | mov eax, [ebx+0Ch] ",gcc,1
"loc_405F3C:   | * | cmp byte ptr [eax], 5Fh  ",gcc,1
"inc eax  | * | mov eax, 1 ",gcc,1
"mov [ebx+0Ch], eax  | * | jmp short loc_405F00 ",gcc,1
"mov eax, 1  | * | _d_call_offset endp ",gcc,1
jmp short loc_405F00  | * | align 10h ,gcc,1
_d_call_offset endp  | * | _d_lookup_template_argument_isra_5 proc near ,gcc,1
"align 10h  | * | mov ecx, [eax+110h] ",gcc,1
"_d_lookup_template_argument_isra_5 proc near  | * | test ecx, ecx ",gcc,1
"mov ecx, [eax+110h]  | * | jz short loc_405F90 ",gcc,1
"test ecx, ecx  | * | mov edx, [edx] ",gcc,1
"jz short loc_405F90  | * | mov eax, [ecx+4] ",gcc,1
"mov edx, [edx]  | * | mov eax, [eax+8] ",gcc,1
"mov eax, [ecx+4]  | * | test eax, eax ",gcc,1
"mov eax, [eax+8]  | * | jz short loc_405F88 ",gcc,1
"test eax, eax  | * | cmp dword ptr [eax], 2Bh  ",gcc,4
jz short loc_405F88  | * | jnz short loc_405F88 ,gcc,1
"cmp dword ptr [eax], 2Bh   | * | cmp edx, 0 ",gcc,1
jnz short loc_405F88  | * | jg short loc_405F7D ,gcc,1
"cmp edx, 0  | * | jmp short loc_405F86 ",gcc,1
jg short loc_405F7D  | * | align 4 ,gcc,1
jmp short loc_405F86  | * | loc_405F74:  ,gcc,1
"align 4  | * | cmp dword ptr [eax], 2Bh  ",gcc,2
loc_405F74:   | * | jnz short loc_405F88 ,gcc,1
"cmp dword ptr [eax], 2Bh   | * | test edx, edx ",gcc,1
jnz short loc_405F88  | * | jz short loc_405F8C ,gcc,1
"test edx, edx  | * | loc_405F7D:  ",gcc,1
jz short loc_405F8C  | * | dec edx ,gcc,1
"loc_405F7D:   | * | mov eax, [eax+8] ",gcc,1
"dec edx  | * | test eax, eax ",gcc,3
"mov eax, [eax+8]  | * | jnz short loc_405F74 ",gcc,1
jnz short loc_405F74  | * | loc_405F86:  ,gcc,1
retn  | * | jz short loc_405F8C ,gcc,1
loc_405F86:   | * | loc_405F88:  ,gcc,1
"jz short loc_405F8C  | * | xor eax, eax ",gcc,1
loc_405F88:   | * | retn ,gcc,1
retn  | * | loc_405F8C:  ,gcc,1
"align 4  | * | mov eax, [eax+4] ",gcc,5
loc_405F8C:   | * | retn ,gcc,1
"mov eax, [eax+4]  | * | loc_405F90:  ",gcc,1
"retn  | * | mov dword ptr [eax+118h], 1 ",gcc,1
"loc_405F90:   | * | xor eax, eax ",gcc,1
"mov dword ptr [eax+118h], 1  | * | retn ",gcc,1
"xor eax, eax  | * | _d_lookup_template_argument_isra_5 endp ",gcc,1
_d_lookup_template_argument_isra_5 endp  | * | _d_find_pack proc near  ,gcc,1
align 10h  | * | push esi ,gcc,1
_d_find_pack proc near   | * | push ebx ,gcc,1
"push ecx  | * | mov ebx, edx ",gcc,1
"mov esi, eax  | * | test edx, edx ",gcc,1
"mov ebx, edx  | * | jz short loc_405FC8  ",gcc,1
"test edx, edx  | * | loc_405FAB:  ",gcc,1
"jz short loc_405FC8   | * | cmp dword ptr [ebx], 45h  ",gcc,1
loc_405FAB:   | * | jbe short loc_405FD0 ,gcc,1
"cmp dword ptr [ebx], 45h   | * | def_405FD2:  ",gcc,1
"jbe short loc_405FD0  | * | mov edx, [ebx+4]  ",gcc,1
"def_405FD2:   | * | mov eax, esi ",gcc,1
"mov edx, [ebx+4]   | * | call _d_find_pack ",gcc,1
"mov eax, esi  | * | test eax, eax ",gcc,4
call _d_find_pack  | * | jnz short loc_405FCA ,gcc,1
"test eax, eax  | * | loc_405FBE:  ",gcc,1
"jnz short loc_405FCA  | * | mov ebx, [ebx+8]  ",gcc,1
"loc_405FBE:   | * | test ebx, ebx ",gcc,1
"mov ebx, [ebx+8]   | * | jnz short loc_405FAB ",gcc,1
"test ebx, ebx  | * | lea esi, [esi+0] ",gcc,1
jnz short loc_405FAB  | * | loc_405FC8:  ,gcc,1
"lea esi, [esi+0]  | * | xor eax, eax  ",gcc,1
loc_405FC8:   | * | loc_405FCA:  ,gcc,1
"xor eax, eax   | * | pop esi ",gcc,1
loc_405FCA:   | * | pop ebx ,gcc,1
pop esi  | * | pop esi ,gcc,2
retn  | * | loc_405FD0:  ,gcc,1
"align 10h  | * | mov edx, [ebx] ",gcc,1
loc_405FD0:   | * | jmp ds:jpt_405FD2[edx*4]  ,gcc,1
"mov edx, [ebx]  | * | align 4 ",gcc,2
jmp ds:jpt_405FD2[edx*4]   | * | loc_405FDC:  ,gcc,1
"align 4  | * | lea edx, [ebx+4]  ",gcc,1
"loc_405FDC:   | * | mov eax, esi ",gcc,1
"lea edx, [ebx+4]   | * | call _d_lookup_template_argument_isra_5 ",gcc,1
call _d_lookup_template_argument_isra_5  | * | jz short loc_405FC8  ,gcc,1
jz short loc_405FC8   | * | jnz short loc_405FC8  ,gcc,1
"cmp dword ptr [eax], 2Bh   | * | pop esi ",gcc,1
jnz short loc_405FC8   | * | pop ebx ,gcc,1
pop esi  | * | _d_find_pack endp ,gcc,1
_d_find_pack endp  | * | _d_append_string proc near  ,gcc,1
var_38 = dword ptr -38h  | * | var_20 = byte ptr -20h ,data,2
"sub esp, 2Ch  | * | xor eax, eax ",gcc,1
"mov esi, eax  | * | mov ecx, 0FFFFFFFFh ",gcc,1
"xor eax, eax  | * | mov edi, edx ",gcc,5
"mov ecx, 0FFFFFFFFh  | * | repne scasb ",gcc,15
"mov edi, edx  | * | not ecx ",gcc,6
repne scasb  | * | dec ecx ,gcc,6
not ecx  | * | jz short loc_406078 ,gcc,1
"dec ecx  | * | mov ebx, [esi+100h] ",gcc,1
"jz short loc_406078  | * | mov edi, edx ",gcc,1
"mov ebx, [esi+100h]  | * | lea ebp, [edx+ecx] ",gcc,1
"mov edi, edx  | * | jmp short loc_406033 ",gcc,1
"lea ebp, [edx+ecx]  | * | align 4 ",gcc,1
jmp short loc_406033  | * | loc_40601C:  ,gcc,1
"align 4  | * | mov edx, ebx ",gcc,2
loc_40601C:   | * | inc ebx ,gcc,1
"mov edx, ebx  | * | loc_40601F:  ",gcc,1
"inc ebx  | * | mov [esi+edx], al ",gcc,1
"loc_40601F:   | * | mov [esi+100h], ebx ",gcc,1
"mov [esi+edx], al  | * | mov [esi+104h], al ",gcc,3
"mov [esi+100h], ebx  | * | inc edi ",gcc,1
"mov [esi+104h], al  | * | cmp edi, ebp ",gcc,1
inc edi  | * | jz short loc_406078 ,gcc,1
"cmp edi, ebp  | * | loc_406033:  ",gcc,1
"jz short loc_406078  | * | mov al, [edi] ",gcc,1
"loc_406033:   | * | cmp ebx, 0FFh ",gcc,1
"mov al, [edi]  | * | jnz short loc_40601C ",gcc,1
"cmp ebx, 0FFh  | * | mov byte ptr [esi+0FFh], 0 ",gcc,1
"jnz short loc_40601C  | * | mov edx, [esi+10Ch] ",gcc,1
"mov byte ptr [esi+0FFh], 0  | * | mov [esp+3Ch+var_34], edx ",gcc,1
"mov edx, [esi+10Ch]  | * | mov [esp+3Ch+var_38], 0FFh ",gcc,1
"mov [esp+3Ch+var_34], edx  | * | mov [esp+3Ch+var_3C], esi ",gcc,1
"mov [esp+3Ch+var_38], 0FFh  | * | mov [esp+3Ch+var_20], al ",gcc,1
"mov [esp+3Ch+var_3C], esi  | * | call dword ptr [esi+108h] ",gcc,1
"mov [esp+3Ch+var_20], al  | * | inc dword ptr [esi+120h] ",gcc,1
"call dword ptr [esi+108h]  | * | mov ebx, 1 ",gcc,1
"inc dword ptr [esi+120h]  | * | xor edx, edx ",gcc,3
"mov ebx, 1  | * | mov al, [esp+3Ch+var_20] ",gcc,1
"xor edx, edx  | * | jmp short loc_40601F ",gcc,1
"mov al, [esp+3Ch+var_20]  | * | align 4 ",gcc,1
jmp short loc_40601F  | * | loc_406078:  ,gcc,1
"align 4  | * | add esp, 2Ch ",gcc,1
loc_406078:   | * | pop ebx ,gcc,1
pop ebp  | * | _d_append_string endp ,gcc,1
retn  | * | _d_expr_primary proc near  ,gcc,1
_d_expr_primary proc near   | * | push ebp ,gcc,1
"sub esp, 1Ch  | * | mov eax, [eax+0Ch] ",gcc,2
"mov esi, eax  | * | cmp byte ptr [eax], 4Ch  ",gcc,1
"mov eax, [eax+0Ch]  | * | jz short loc_40609C ",gcc,1
"cmp byte ptr [eax], 4Ch   | * | loc_406091:  ",gcc,1
"jz short loc_40609C  | * | xor eax, eax ",gcc,1
"loc_406091:   | * | add esp, 1Ch ",gcc,1
retn  | * | loc_40609C:  ,gcc,1
"loc_40609C:   | * | mov [esi+0Ch], edx ",gcc,1
"lea edx, [eax+1]  | * | mov cl, [eax+1] ",gcc,1
"mov [esi+0Ch], edx  | * | cmp cl, 5Fh  ",gcc,1
"mov cl, [eax+1]  | * | jz loc_40614A ",gcc,1
"cmp cl, 5Fh   | * | cmp cl, 5Ah  ",gcc,1
jz loc_40614A  | * | jnz short loc_4060D8 ,gcc,1
"cmp cl, 5Ah   | * | loc_4060B3:  ",gcc,1
jnz short loc_4060D8  | * | inc edx ,gcc,1
"loc_4060B3:   | * | mov [esi+0Ch], edx ",gcc,1
"inc edx  | * | xor edx, edx ",gcc,2
"mov [esi+0Ch], edx  | * | mov eax, esi ",gcc,1
"xor edx, edx  | * | call _d_encoding ",gcc,8
"mov eax, esi  | * | mov edx, [esi+0Ch] ",gcc,2
"call _d_encoding  | * | mov cl, [edx] ",gcc,1
"mov edx, [esi+0Ch]  | * | cmp cl, 45h  ",gcc,2
"mov cl, [edx]  | * | jnz short loc_406091 ",gcc,1
"cmp cl, 45h   | * | loc_4060CA:  ",gcc,1
jnz short loc_406091  | * | inc edx ,gcc,1
"loc_4060CA:   | * | mov [esi+0Ch], edx ",gcc,1
"inc edx  | * | add esp, 1Ch ",gcc,1
"mov [esi+0Ch], edx  | * | pop ebx ",gcc,1
retn  | * | loc_4060D8:  ,gcc,1
"align 4  | * | mov eax, esi ",gcc,2
loc_4060D8:   | * | call _d_type ,gcc,1
"mov eax, esi  | * | mov edi, eax ",gcc,3
"call _d_type  | * | test eax, eax ",gcc,5
"mov edi, eax  | * | jz short loc_406091 ",gcc,1
"test eax, eax  | * | cmp dword ptr [eax], 23h  ",gcc,1
jz short loc_406091  | * | jz loc_406184 ,gcc,1
"cmp dword ptr [eax], 23h   | * | loc_4060EE:  ",gcc,1
"jz loc_406184  | * | mov edx, [esi+0Ch] ",gcc,1
"loc_4060EE:   | * | mov bl, [edx] ",gcc,1
"mov edx, [esi+0Ch]  | * | cmp bl, 6Eh  ",gcc,1
"mov bl, [edx]  | * | jz short loc_40616C ",gcc,1
"cmp bl, 6Eh   | * | mov ebp, 37h  ",gcc,1
jz short loc_40616C  | * | loc_4060FD:  ,gcc,1
"mov ebp, 37h   | * | cmp bl, 45h  ",gcc,1
loc_4060FD:   | * | jz loc_40619D ,gcc,1
"cmp bl, 45h   | * | test bl, bl ",gcc,1
jz loc_40619D  | * | jz short loc_406091 ,gcc,1
"test bl, bl  | * | lea ecx, [edx+1] ",gcc,1
jz short loc_406091  | * | jmp short loc_406119 ,gcc,1
"lea ecx, [edx+1]  | * | align 10h ",gcc,1
jmp short loc_406119  | * | loc_406110:  ,gcc,1
align 10h  | * | inc ecx ,gcc,2
"loc_406110:   | * | test bl, bl ",gcc,1
inc ecx  | * | jz loc_406091 ,gcc,1
"test bl, bl  | * | loc_406119:  ",gcc,1
"jz loc_406091  | * | mov [esi+0Ch], ecx ",gcc,1
"loc_406119:   | * | mov bl, [ecx] ",gcc,1
"mov [esi+0Ch], ecx  | * | cmp bl, 45h  ",gcc,1
"mov bl, [ecx]  | * | jnz short loc_406110 ",gcc,1
"cmp bl, 45h   | * | sub ecx, edx ",gcc,1
jnz short loc_406110  | * | loc_406125:  ,gcc,1
"sub ecx, edx  | * | mov eax, esi ",gcc,1
loc_406125:   | * | call _d_make_name ,gcc,1
"mov eax, esi  | * | mov [esp+2Ch+var_2C], eax ",gcc,1
"call _d_make_name  | * | mov ecx, edi ",gcc,1
"mov [esp+2Ch+var_2C], eax  | * | mov edx, ebp ",gcc,1
"mov ecx, edi  | * | mov eax, esi ",gcc,2
"mov edx, ebp  | * | call _d_make_comp ",gcc,1
"call _d_make_comp  | * | mov cl, [edx] ",gcc,1
"mov cl, [edx]  | * | jnz loc_406091 ",gcc,1
"cmp cl, 45h   | * | jmp short loc_4060CA ",gcc,1
jnz loc_406091  | * | loc_40614A:  ,gcc,1
"jmp short loc_4060CA  | * | lea edx, [eax+2] ",gcc,1
"loc_40614A:   | * | mov [esi+0Ch], edx ",gcc,1
"lea edx, [eax+2]  | * | mov cl, [eax+2] ",gcc,1
"mov [esi+0Ch], edx  | * | cmp cl, 5Ah  ",gcc,1
"mov cl, [eax+2]  | * | jz loc_4060B3 ",gcc,1
"cmp cl, 5Ah   | * | xor eax, eax ",gcc,1
"jz loc_4060B3  | * | cmp cl, 45h  ",gcc,1
"xor eax, eax  | * | jnz loc_406091 ",gcc,1
"cmp cl, 45h   | * | jmp loc_4060CA ",gcc,1
jnz loc_406091  | * | loc_40616C:  ,gcc,1
"jmp loc_4060CA  | * | lea eax, [edx+1] ",gcc,1
"loc_40616C:   | * | mov [esi+0Ch], eax ",gcc,1
"lea eax, [edx+1]  | * | mov bl, [edx+1] ",gcc,1
"mov [esi+0Ch], eax  | * | mov edx, eax ",gcc,1
"mov bl, [edx+1]  | * | mov ebp, 38h  ",gcc,1
"mov edx, eax  | * | jmp loc_4060FD ",gcc,1
"mov ebp, 38h   | * | align 4 ",gcc,1
jmp loc_4060FD  | * | loc_406184:  ,gcc,1
"loc_406184:   | * | mov ebx, [eax+10h] ",gcc,1
"mov eax, [eax+4]  | * | test ebx, ebx ",gcc,1
"mov ebx, [eax+10h]  | * | jz loc_4060EE ",gcc,1
"test ebx, ebx  | * | mov eax, [eax+4] ",gcc,1
"jz loc_4060EE  | * | sub [esi+30h], eax ",gcc,1
"mov eax, [eax+4]  | * | jmp loc_4060EE ",gcc,1
"sub [esi+30h], eax  | * | loc_40619D:  ",gcc,1
"jmp loc_4060EE  | * | xor ecx, ecx ",gcc,1
loc_40619D:   | * | jmp short loc_406125 ,gcc,1
"xor ecx, ecx  | * | _d_expr_primary endp ",gcc,1
jmp short loc_406125  | * | align 4 ,gcc,1
_d_expr_primary endp  | * | _d_template_args proc near  ,gcc,1
"sub esp, 20h  | * | mov edi, [eax+2Ch] ",gcc,1
"mov ebx, eax  | * | mov ecx, [eax+0Ch] ",gcc,1
"mov edi, [eax+2Ch]  | * | mov al, [ecx] ",gcc,1
"mov ecx, [eax+0Ch]  | * | sub eax, 49h  ",gcc,1
"mov al, [ecx]  | * | cmp al, 1 ",gcc,1
"sub eax, 49h   | * | ja short loc_406231 ",gcc,1
"cmp al, 1  | * | lea edx, [ecx+1] ",gcc,1
"ja short loc_406231  | * | mov [ebx+0Ch], edx ",gcc,1
"lea edx, [ecx+1]  | * | mov al, [ecx+1] ",gcc,1
"mov [ebx+0Ch], edx  | * | cmp al, 45h  ",gcc,1
"mov al, [ecx+1]  | * | jz loc_40626E ",gcc,1
"cmp al, 45h   | * | mov [esp+2Ch+var_10], 0 ",gcc,1
"jz loc_40626E  | * | lea esi, [esp+2Ch+var_10] ",gcc,1
"mov [esp+2Ch+var_10], 0  | * | jmp short loc_40620E ",gcc,1
"lea esi, [esp+2Ch+var_10]  | * | align 4 ",gcc,2
jmp short loc_40620E  | * | loc_4061DC:  ,gcc,1
"align 4  | * | mov eax, ebx ",gcc,11
loc_4061DC:   | * | call _d_type ,gcc,1
"mov eax, ebx  | * | loc_4061E3:  ",gcc,1
loc_4061E3:   | * | jz short loc_406231 ,gcc,1
"test eax, eax  | * | mov [esp+2Ch+var_2C], 0 ",gcc,2
"jz short loc_406231  | * | mov ecx, eax ",gcc,1
"mov [esp+2Ch+var_2C], 0  | * | mov edx, 2Bh  ",gcc,2
"mov ecx, eax  | * | mov eax, ebx ",gcc,28
"mov edx, 2Bh   | * | call _d_make_comp ",gcc,2
"mov [esi], eax  | * | jz short loc_406231 ",gcc,1
"test eax, eax  | * | lea esi, [eax+8] ",gcc,3
"jz short loc_406231  | * | mov edx, [ebx+0Ch] ",gcc,1
"lea esi, [eax+8]  | * | mov al, [edx] ",gcc,1
"mov edx, [ebx+0Ch]  | * | cmp al, 45h  ",gcc,1
"mov al, [edx]  | * | jz short loc_40625C ",gcc,1
"cmp al, 45h   | * | loc_40620E:  ",gcc,1
"jz short loc_40625C  | * | cmp al, 49h  ",gcc,1
loc_40620E:   | * | jl short loc_4061DC ,gcc,1
"cmp al, 49h   | * | cmp al, 4Ah  ",gcc,1
jl short loc_4061DC  | * | jle short loc_406244 ,gcc,1
"cmp al, 4Ah   | * | cmp al, 4Ch  ",gcc,1
jle short loc_406244  | * | jz short loc_406250 ,gcc,1
"cmp al, 4Ch   | * | cmp al, 58h  ",gcc,1
jz short loc_406250  | * | jnz short loc_4061DC ,gcc,1
"cmp al, 58h   | * | inc edx ",gcc,1
"jnz short loc_4061DC  | * | mov [ebx+0Ch], edx ",gcc,1
"inc edx  | * | mov eax, ebx ",gcc,3
"mov [ebx+0Ch], edx  | * | call _d_expression ",gcc,2
"mov eax, ebx  | * | mov edx, [ebx+0Ch] ",gcc,2
"call _d_expression  | * | cmp byte ptr [edx], 45h  ",gcc,1
"mov edx, [ebx+0Ch]  | * | jz short loc_40623C ",gcc,1
"cmp byte ptr [edx], 45h   | * | loc_406231:  ",gcc,1
"jz short loc_40623C  | * | xor eax, eax ",gcc,1
loc_406231:   | * | loc_406233:  ,gcc,1
"xor eax, eax  | * | add esp, 20h ",gcc,1
loc_406233:   | * | pop ebx ,gcc,1
retn  | * | loc_40623C:  ,gcc,1
"loc_40623C:   | * | mov [ebx+0Ch], edx ",gcc,1
inc edx  | * | jmp short loc_4061E3 ,gcc,1
"mov [ebx+0Ch], edx  | * | align 4 ",gcc,2
jmp short loc_4061E3  | * | loc_406244:  ,gcc,1
loc_406244:   | * | call _d_template_args ,gcc,1
"mov eax, ebx  | * | jmp short loc_4061E3 ",gcc,2
call _d_template_args  | * | align 10h ,gcc,1
jmp short loc_4061E3  | * | loc_406250:  ,gcc,1
"align 10h  | * | mov eax, ebx ",gcc,2
loc_406250:   | * | call _d_expr_primary ,gcc,1
call _d_expr_primary  | * | align 4 ,gcc,1
jmp short loc_4061E3  | * | loc_40625C:  ,gcc,1
"loc_40625C:   | * | mov [ebx+0Ch], edx ",gcc,1
"inc edx  | * | mov [ebx+2Ch], edi ",gcc,1
"mov [ebx+0Ch], edx  | * | mov eax, [esp+2Ch+var_10] ",gcc,1
"mov [ebx+2Ch], edi  | * | add esp, 20h ",gcc,1
"mov eax, [esp+2Ch+var_10]  | * | pop ebx ",gcc,1
pop edi  | * | loc_40626E:  ,gcc,1
"retn  | * | add ecx, 2 ",gcc,1
"loc_40626E:   | * | mov [ebx+0Ch], ecx ",gcc,1
"add ecx, 2  | * | mov [esp+2Ch+var_2C], 0 ",gcc,1
"mov [ebx+0Ch], ecx  | * | xor ecx, ecx ",gcc,1
"xor ecx, ecx  | * | mov eax, ebx ",gcc,3
"mov eax, ebx  | * | jmp short loc_406233 ",gcc,1
call _d_make_comp  | * | _d_template_args endp ,gcc,1
jmp short loc_406233  | * | align 4 ,gcc,1
_d_template_args endp  | * | _d_name proc near  ,gcc,1
"sub esp, 2Ch  | * | mov eax, [eax+0Ch] ",gcc,3
"mov esi, eax  | * | mov dl, [eax] ",gcc,1
"mov eax, [eax+0Ch]  | * | sub edx, 4Ch  ",gcc,1
"mov dl, [eax]  | * | cmp dl, 0Eh ",gcc,1
"sub edx, 4Ch   | * | jbe short loc_4062C4 ",gcc,1
"cmp dl, 0Eh  | * | def_4062C7:  ",gcc,1
"jbe short loc_4062C4  | * | mov eax, esi  ",gcc,1
def_4062C7:   | * | call _d_unqualified_name ,gcc,1
"mov eax, esi   | * | mov ebx, eax ",gcc,2
"call _d_unqualified_name  | * | mov eax, [esi+0Ch] ",gcc,1
"mov ebx, eax  | * | cmp byte ptr [eax], 49h  ",gcc,2
"mov eax, [esi+0Ch]  | * | jz loc_40643F ",gcc,1
"cmp byte ptr [eax], 49h   | * | loc_4062B7:  ",gcc,1
"jz loc_40643F  | * | mov eax, ebx ",gcc,1
"loc_4062B7:   | * | add esp, 2Ch ",gcc,1
retn  | * | loc_4062C4:  ,gcc,1
"align 4  | * | movzx edx, dl ",gcc,1
loc_4062C4:   | * | jmp ds:jpt_4062C7[edx*4]  ,gcc,1
"movzx edx, dl  | * | align 10h ",gcc,1
jmp ds:jpt_4062C7[edx*4]   | * | loc_4062D0:  ,gcc,1
align 10h  | * | inc eax  ,gcc,1
"loc_4062D0:   | * | mov [esi+0Ch], eax ",gcc,1
"inc eax   | * | xor edx, edx ",gcc,1
"mov [esi+0Ch], eax  | * | mov eax, esi ",gcc,1
"mov eax, esi  | * | mov ebx, eax ",gcc,6
"call _d_encoding  | * | mov edx, [esi+0Ch] ",gcc,1
"mov ebx, eax  | * | cmp byte ptr [edx], 45h  ",gcc,1
"mov edx, [esi+0Ch]  | * | jz loc_406504 ",gcc,1
"cmp byte ptr [edx], 45h   | * | loc_4062EB:  ",gcc,1
"jz loc_406504  | * | xor ebx, ebx ",gcc,1
"loc_4062EB:   | * | lea esi, [esi+0] ",gcc,1
"xor ebx, ebx  | * | loc_4062F0:  ",gcc,1
"lea esi, [esi+0]  | * | mov eax, ebx ",gcc,2
"loc_4062F0:   | * | add esp, 2Ch ",gcc,1
retn  | * | loc_4062FC:  ,gcc,1
"align 4  | * | cmp byte ptr [eax+1], 74h  ",gcc,1
loc_4062FC:   | * | jz loc_4063FC ,gcc,1
"cmp byte ptr [eax+1], 74h   | * | xor edx, edx ",gcc,1
"jz loc_4063FC  | * | mov eax, esi ",gcc,1
"xor edx, edx  | * | call _d_substitution ",gcc,2
"call _d_substitution  | * | mov eax, [esi+0Ch] ",gcc,1
"mov eax, [esi+0Ch]  | * | jnz short loc_4062B7 ",gcc,1
"cmp byte ptr [eax], 49h   | * | loc_406319:  ",gcc,1
"jnz short loc_4062B7  | * | mov eax, esi ",gcc,1
loc_406319:   | * | call _d_template_args ,gcc,1
"mov eax, esi  | * | mov [esp+3Ch+var_3C], eax ",gcc,2
"call _d_template_args  | * | mov ecx, ebx ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 4 ",gcc,5
"mov ecx, ebx  | * | mov eax, esi ",gcc,4
"mov edx, 4  | * | call _d_make_comp ",gcc,5
call _d_make_comp  | * | jmp short loc_4062B7 ,gcc,1
"mov ebx, eax  | * | align 4 ",gcc,1
jmp short loc_4062B7  | * | loc_406338:  ,gcc,1
align 4  | * | inc eax  ,gcc,1
"loc_406338:   | * | mov [esi+0Ch], eax ",gcc,1
"inc eax   | * | mov ecx, 1 ",gcc,1
"mov [esi+0Ch], eax  | * | lea edx, [esp+3Ch+var_20] ",gcc,1
"mov ecx, 1  | * | mov eax, esi ",gcc,1
"lea edx, [esp+3Ch+var_20]  | * | call _d_cv_qualifiers ",gcc,2
"mov eax, esi  | * | mov ebp, eax ",gcc,2
"call _d_cv_qualifiers  | * | test eax, eax ",gcc,3
"mov ebp, eax  | * | jz short loc_4062EB ",gcc,1
"test eax, eax  | * | mov eax, [esi+0Ch] ",gcc,1
"jz short loc_4062EB  | * | mov bl, [eax] ",gcc,1
"mov eax, [esi+0Ch]  | * | xor edi, edi ",gcc,1
"mov bl, [eax]  | * | lea esi, [esi+0] ",gcc,1
"xor edi, edi  | * | loc_40635C:  ",gcc,1
"lea esi, [esi+0]  | * | test bl, bl ",gcc,1
loc_40635C:   | * | jz short loc_4063D8 ,gcc,1
"test bl, bl  | * | loc_406360:  ",gcc,1
"jz short loc_4063D8  | * | cmp bl, 44h  ",gcc,1
loc_406360:   | * | jz loc_4064BC ,gcc,1
"cmp bl, 44h   | * | loc_406369:  ",gcc,1
"jz loc_4064BC  | * | lea edx, [ebx-30h] ",gcc,1
"loc_406369:   | * | cmp dl, 9 ",gcc,1
"lea edx, [ebx-30h]  | * | jbe loc_406464 ",gcc,1
"cmp dl, 9  | * | lea edx, [ebx-61h] ",gcc,1
"jbe loc_406464  | * | cmp dl, 19h ",gcc,1
"lea edx, [ebx-61h]  | * | jbe loc_406464 ",gcc,1
"cmp dl, 19h  | * | cmp bl, 43h  ",gcc,1
jbe loc_406464  | * | jz loc_406464 ,gcc,1
"cmp bl, 43h   | * | cmp bl, 55h  ",gcc,1
jz loc_406464  | * | jz loc_406464 ,gcc,2
"cmp bl, 55h   | * | cmp bl, 4Ch  ",gcc,1
"cmp bl, 4Ch   | * | cmp bl, 53h  ",gcc,1
jz loc_406464  | * | jz loc_4064F0 ,gcc,1
"cmp bl, 53h   | * | cmp bl, 49h  ",gcc,1
jz loc_4064F0  | * | jz loc_4064D8 ,gcc,1
"cmp bl, 49h   | * | cmp bl, 54h  ",gcc,1
jz loc_4064D8  | * | jz loc_406595 ,gcc,1
"cmp bl, 54h   | * | cmp bl, 45h  ",gcc,1
jz loc_406595  | * | jz loc_4065EF ,gcc,1
"cmp bl, 45h   | * | cmp bl, 4Dh  ",gcc,1
jz loc_4065EF  | * | jnz short loc_4063D8 ,gcc,1
"cmp bl, 4Dh   | * | test edi, edi ",gcc,1
jnz short loc_4063D8  | * | jz short loc_4063D8 ,gcc,1
"test edi, edi  | * | lea edx, [eax+1] ",gcc,1
"jz short loc_4063D8  | * | mov [esi+0Ch], edx ",gcc,1
"lea edx, [eax+1]  | * | mov bl, [eax+1] ",gcc,1
"mov [esi+0Ch], edx  | * | mov eax, edx ",gcc,1
"mov bl, [eax+1]  | * | test bl, bl ",gcc,1
"mov eax, edx  | * | jnz short loc_406360 ",gcc,1
"test bl, bl  | * | loc_4063D8:  ",gcc,1
"jnz short loc_406360  | * | mov dword ptr [ebp+0], 0 ",gcc,1
"loc_4063D8:   | * | xor ebx, ebx ",gcc,1
"mov dword ptr [ebp+0], 0  | * | jmp loc_4062F0 ",gcc,1
jmp loc_4062F0  | * | loc_4063E8:  ,gcc,1
"align 4  | * | mov eax, esi  ",gcc,1
loc_4063E8:   | * | call _d_unqualified_name ,gcc,1
"call _d_unqualified_name  | * | mov eax, ebx ",gcc,1
"mov ebx, eax  | * | add esp, 2Ch ",gcc,2
retn  | * | loc_4063FC:  ,gcc,1
"align 4  | * | add eax, 2 ",gcc,1
"loc_4063FC:   | * | mov [esi+0Ch], eax ",gcc,1
"add eax, 2  | * | mov eax, esi ",gcc,1
"mov [esi+0Ch], eax  | * | call _d_unqualified_name ",gcc,1
"call _d_unqualified_name  | * | mov ecx, 3 ",gcc,1
"mov ebx, eax  | * | mov edx, offset aStd  ",gcc,1
"mov ecx, 3  | * | mov eax, esi ",gcc,1
"mov edx, offset aStd   | * | call _d_make_name ",gcc,1
"mov eax, esi  | * | mov [esp+3Ch+var_3C], ebx ",gcc,1
"call _d_make_name  | * | mov ecx, eax ",gcc,1
"mov [esp+3Ch+var_3C], ebx  | * | mov edx, 1 ",gcc,1
"mov ecx, eax  | * | mov eax, esi ",gcc,2
"mov edx, 1  | * | call _d_make_comp ",gcc,2
"call _d_make_comp  | * | add dword ptr [esi+30h], 3 ",gcc,1
"mov ebx, eax  | * | mov eax, [esi+0Ch] ",gcc,1
"add dword ptr [esi+30h], 3  | * | cmp byte ptr [eax], 49h  ",gcc,1
"mov eax, [esi+0Ch]  | * | jnz loc_4062B7 ",gcc,1
"cmp byte ptr [eax], 49h   | * | loc_40643F:  ",gcc,1
"jnz loc_4062B7  | * | test ebx, ebx ",gcc,1
loc_40643F:   | * | jz loc_4062EB ,gcc,1
"test ebx, ebx  | * | mov eax, [esi+20h] ",gcc,1
"jz loc_4062EB  | * | cmp eax, [esi+24h] ",gcc,1
"mov eax, [esi+20h]  | * | jge loc_4062EB ",gcc,1
"cmp eax, [esi+24h]  | * | mov edx, [esi+1Ch] ",gcc,2
"jge loc_4062EB  | * | mov [edx+eax*4], ebx ",gcc,1
"mov edx, [esi+1Ch]  | * | inc eax ",gcc,2
"mov [edx+eax*4], ebx  | * | mov [esi+20h], eax ",gcc,1
inc eax  | * | jmp loc_406319 ,gcc,1
"mov [esi+20h], eax  | * | align 4 ",gcc,1
jmp loc_406319  | * | loc_406464:  ,gcc,1
loc_406464:   | * | call _d_unqualified_name ,gcc,1
"mov eax, esi  | * | loc_40646B:  ",gcc,1
"call _d_unqualified_name  | * | test edi, edi ",gcc,1
loc_40646B:   | * | jz short loc_4064B8 ,gcc,1
"test edi, edi  | * | mov edx, 1 ",gcc,1
jz short loc_4064B8  | * | loc_406474:  ,gcc,1
"mov edx, 1  | * | mov [esp+3Ch+var_3C], eax ",gcc,1
"loc_406474:   | * | mov ecx, edi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov eax, esi ",gcc,1
"mov ecx, edi  | * | call _d_make_comp ",gcc,1
call _d_make_comp  | * | loc_406482:  ,gcc,1
"mov edi, eax  | * | cmp bl, 53h  ",gcc,1
loc_406482:   | * | jz short loc_4064AD ,gcc,1
"cmp bl, 53h   | * | mov eax, [esi+0Ch] ",gcc,1
"jz short loc_4064AD  | * | cmp byte ptr [eax], 45h  ",gcc,1
"mov eax, [esi+0Ch]  | * | jz short loc_4064D0 ",gcc,1
"cmp byte ptr [eax], 45h   | * | test edi, edi ",gcc,1
jz short loc_4064D0  | * | jz loc_4063D8 ,gcc,1
"test edi, edi  | * | mov eax, [esi+20h] ",gcc,1
"jz loc_4063D8  | * | cmp eax, [esi+24h] ",gcc,1
"mov eax, [esi+20h]  | * | jge loc_4063D8 ",gcc,1
"jge loc_4063D8  | * | mov [edx+eax*4], edi ",gcc,1
"mov [edx+eax*4], edi  | * | mov [esi+20h], eax ",gcc,1
inc eax  | * | loc_4064AD:  ,gcc,1
"mov [esi+20h], eax  | * | mov eax, [esi+0Ch] ",gcc,1
"loc_4064AD:   | * | mov bl, [eax] ",gcc,1
"mov eax, [esi+0Ch]  | * | jmp loc_40635C ",gcc,1
"mov bl, [eax]  | * | align 4 ",gcc,1
jmp loc_40635C  | * | loc_4064B8:  ,gcc,1
"align 4  | * | mov edi, eax ",gcc,2
loc_4064B8:   | * | jmp short loc_406482 ,gcc,1
"mov edi, eax  | * | loc_4064BC:  ",gcc,1
"jmp short loc_406482  | * | mov al, [eax+1] ",gcc,1
"loc_4064BC:   | * | cmp al, 54h  ",gcc,1
"mov al, [eax+1]  | * | jz short loc_4064C7 ",gcc,1
"cmp al, 54h   | * | cmp al, 74h  ",gcc,1
jz short loc_4064C7  | * | jnz short loc_406464 ,gcc,1
"cmp al, 74h   | * | loc_4064C7:  ",gcc,1
"jnz short loc_406464  | * | mov eax, esi ",gcc,1
loc_4064C7:   | * | call _d_type ,gcc,1
"mov eax, esi  | * | jmp short loc_40646B ",gcc,1
call _d_type  | * | loc_4064D0:  ,gcc,1
"jmp short loc_40646B  | * | mov bl, 45h  ",gcc,1
loc_4064D0:   | * | jmp loc_406369 ,gcc,1
"mov bl, 45h   | * | align 4 ",gcc,1
jmp loc_406369  | * | loc_4064D8:  ,gcc,1
loc_4064D8:   | * | jz loc_4063D8 ,gcc,1
"test edi, edi  | * | mov eax, esi ",gcc,2
jz loc_4063D8  | * | call _d_template_args ,gcc,1
"mov eax, esi  | * | mov edx, 4 ",gcc,1
call _d_template_args  | * | jmp short loc_406474 ,gcc,1
"mov edx, 4  | * | align 10h ",gcc,1
jmp short loc_406474  | * | loc_4064F0:  ,gcc,1
"align 10h  | * | mov edx, 1 ",gcc,1
"loc_4064F0:   | * | mov eax, esi ",gcc,1
"mov edx, 1  | * | call _d_substitution ",gcc,1
"mov eax, esi  | * | jmp loc_40646B ",gcc,2
call _d_substitution  | * | align 4 ,gcc,1
jmp loc_40646B  | * | loc_406504:  ,gcc,1
"align 4  | * | lea eax, [edx+1] ",gcc,1
"loc_406504:   | * | mov [esi+0Ch], eax ",gcc,1
"lea eax, [edx+1]  | * | mov al, [edx+1] ",gcc,1
"mov [esi+0Ch], eax  | * | cmp al, 73h  ",gcc,1
"mov al, [edx+1]  | * | jz loc_4065C4 ",gcc,1
"cmp al, 73h   | * | cmp al, 64h  ",gcc,1
jz loc_4065C4  | * | jz loc_4065A1 ,gcc,1
"cmp al, 64h   | * | mov edi, 0FFFFFFFFh ",gcc,1
jz loc_4065A1  | * | loc_406522:  ,gcc,1
"mov edi, 0FFFFFFFFh  | * | mov eax, esi ",gcc,1
loc_406522:   | * | call _d_name ,gcc,1
"call _d_name  | * | test eax, eax ",gcc,3
"mov ebp, eax  | * | jz short loc_40654A ",gcc,1
"test eax, eax  | * | mov eax, [eax] ",gcc,2
"jz short loc_40654A  | * | cmp eax, 40h  ",gcc,1
"mov eax, [eax]  | * | jz short loc_40654A ",gcc,1
"cmp eax, 40h   | * | cmp eax, 42h  ",gcc,1
jz short loc_40654A  | * | jz short loc_40654A ,gcc,1
"cmp eax, 42h   | * | mov eax, esi ",gcc,1
jz short loc_40654A  | * | call _d_discriminator ,gcc,1
call _d_discriminator  | * | jz loc_4062EB ,gcc,2
"test eax, eax  | * | loc_40654A:  ",gcc,1
"jz loc_4062EB  | * | cmp edi, 0FFFFFFFFh ",gcc,1
loc_40654A:   | * | jz short loc_4065C0 ,gcc,1
"cmp edi, 0FFFFFFFFh  | * | mov eax, [esi+14h] ",gcc,1
"jz short loc_4065C0  | * | cmp eax, [esi+18h] ",gcc,1
"mov eax, [esi+14h]  | * | jge short loc_406591 ",gcc,1
"cmp eax, [esi+18h]  | * | lea ecx, [eax+eax*2] ",gcc,1
"jge short loc_406591  | * | mov edx, [esi+10h] ",gcc,1
"lea ecx, [eax+eax*2]  | * | lea edx, [edx+ecx*4] ",gcc,1
"mov edx, [esi+10h]  | * | inc eax ",gcc,1
"lea edx, [edx+ecx*4]  | * | mov [esi+14h], eax ",gcc,1
"inc eax  | * | test edx, edx ",gcc,1
"mov [esi+14h], eax  | * | jz short loc_406591 ",gcc,1
"test edx, edx  | * | mov dword ptr [edx], 41h  ",gcc,1
"jz short loc_406591  | * | mov [edx+8], edi ",gcc,1
"mov dword ptr [edx], 41h   | * | mov [edx+4], ebp ",gcc,1
"mov [edx+8], edi  | * | loc_406574:  ",gcc,1
"mov [edx+4], ebp  | * | mov [esp+3Ch+var_3C], edx ",gcc,1
loc_406574:   | * | loc_406577:  ,gcc,1
"mov [esp+3Ch+var_3C], edx  | * | mov ecx, ebx ",gcc,1
"loc_406577:   | * | mov edx, 2 ",gcc,1
"mov edx, 2  | * | call _d_make_comp ",gcc,1
"call _d_make_comp  | * | mov eax, ebx ",gcc,1
pop ebp  | * | loc_406591:  ,gcc,1
"retn  | * | xor edx, edx ",gcc,1
loc_406591:   | * | jmp short loc_406574 ,gcc,1
"xor edx, edx  | * | loc_406595:  ",gcc,1
"jmp short loc_406574  | * | mov eax, esi ",gcc,1
loc_406595:   | * | call _d_template_param ,gcc,1
call _d_template_param  | * | loc_4065A1:  ,gcc,1
"jmp loc_40646B  | * | add edx, 2 ",gcc,1
"loc_4065A1:   | * | mov [esi+0Ch], edx ",gcc,1
"add edx, 2  | * | mov eax, esi ",gcc,2
"mov [esi+0Ch], edx  | * | call _d_compact_number ",gcc,1
"mov edi, eax  | * | jns loc_406522 ",gcc,1
"test eax, eax  | * | xor ebx, ebx ",gcc,1
jns loc_406522  | * | jmp loc_4062F0 ,gcc,1
jmp loc_4062F0  | * | loc_4065C0:  ,gcc,1
"align 10h  | * | mov edx, ebp ",gcc,1
loc_4065C0:   | * | jmp short loc_406574 ,gcc,1
"mov edx, ebp  | * | loc_4065C4:  ",gcc,1
"jmp short loc_406574  | * | add edx, 2 ",gcc,1
"loc_4065C4:   | * | mov [esi+0Ch], edx ",gcc,1
"mov [esi+0Ch], edx  | * | call _d_discriminator ",gcc,1
"test eax, eax  | * | mov ecx, 0Eh ",gcc,1
"jz loc_4062EB  | * | mov edx, offset aStringLiteral  ",gcc,1
"mov ecx, 0Eh  | * | mov eax, esi ",gcc,1
"mov edx, offset aStringLiteral   | * | call _d_make_name ",gcc,1
call _d_make_name  | * | jmp short loc_406577 ,gcc,1
"mov [esp+3Ch+var_3C], eax  | * | loc_4065EF:  ",gcc,1
"jmp short loc_406577  | * | mov [ebp+0], edi ",gcc,1
"loc_4065EF:   | * | test edi, edi ",gcc,1
"mov [ebp+0], edi  | * | jz loc_4062EB ",gcc,1
"test edi, edi  | * | mov eax, [esi+0Ch] ",gcc,1
"jz loc_4062EB  | * | cmp byte ptr [eax], 45h  ",gcc,1
"mov eax, [esi+0Ch]  | * | jnz loc_4062EB ",gcc,1
"cmp byte ptr [eax], 45h   | * | inc eax ",gcc,1
"jnz loc_4062EB  | * | mov [esi+0Ch], eax ",gcc,1
"inc eax  | * | mov ebx, [esp+3Ch+var_20] ",gcc,1
"mov [esi+0Ch], eax  | * | jmp loc_4062B7 ",gcc,1
"mov ebx, [esp+3Ch+var_20]  | * | _d_name endp ",gcc,1
jmp loc_4062B7  | * | align 4 ,gcc,1
_d_name endp  | * | _d_type proc near  ,gcc,1
"sub esp, 2Ch  | * | mov ecx, [eax+0Ch] ",gcc,1
"mov ebx, eax  | * | movsx eax, byte ptr [ecx] ",gcc,1
"mov ecx, [eax+0Ch]  | * | cmp al, 72h  ",gcc,1
"movsx eax, byte ptr [ecx]  | * | jz short loc_406648 ",gcc,1
"cmp al, 72h   | * | cmp al, 56h  ",gcc,1
jz short loc_406648  | * | jz short loc_406648 ,gcc,2
"cmp al, 4Bh   | * | lea edx, [eax-30h]  ",gcc,1
"jz short loc_406648  | * | cmp dl, 4Ah ",gcc,1
"lea edx, [eax-30h]   | * | ja def_40663E  ",gcc,1
"cmp dl, 4Ah  | * | movzx edx, dl ",gcc,1
ja def_40663E   | * | jmp ds:jpt_40663E[edx*4]  ,gcc,1
"movzx edx, dl  | * | align 4 ",gcc,3
jmp ds:jpt_40663E[edx*4]   | * | loc_406648:  ,gcc,1
"align 4  | * | xor ecx, ecx ",gcc,1
"loc_406648:   | * | lea edx, [esp+3Ch+var_20] ",gcc,1
"mov eax, ebx  | * | mov esi, eax ",gcc,41
"mov esi, eax  | * | jz short def_40663E  ",gcc,1
"test eax, eax  | * | mov eax, ebx ",gcc,8
jz short def_40663E   | * | call _d_type ,gcc,1
"mov [esi], eax  | * | jz short def_40663E  ",gcc,1
"test eax, eax  | * | mov edx, [esp+3Ch+var_20] ",gcc,1
"jz short def_40663E   | * | test edx, edx ",gcc,1
"mov edx, [esp+3Ch+var_20]  | * | jz short def_40663E  ",gcc,1
"test edx, edx  | * | mov eax, [ebx+20h] ",gcc,2
"jz short def_40663E   | * | cmp eax, [ebx+24h] ",gcc,1
"mov eax, [ebx+20h]  | * | jge short def_40663E  ",gcc,1
"cmp eax, [ebx+24h]  | * | mov ecx, [ebx+1Ch] ",gcc,2
"jge short def_40663E   | * | mov [ecx+eax*4], edx ",gcc,1
"mov ecx, [ebx+1Ch]  | * | inc eax ",gcc,2
"mov [ecx+eax*4], edx  | * | mov [ebx+20h], eax ",gcc,2
"inc eax  | * | mov eax, [esp+3Ch+var_20] ",gcc,1
"mov [ebx+20h], eax  | * | add esp, 2Ch ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | pop ebx ",gcc,1
pop ebp  | * | loc_40668E:  ,gcc,1
"retn  | * | mov eax, ebx  ",gcc,1
loc_40668E:   | * | call _d_expression ,gcc,1
"mov eax, ebx   | * | mov [esp+3Ch+var_3C], 0 ",gcc,7
"call _d_expression  | * | mov ecx, eax ",gcc,2
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 3Dh  ",gcc,1
"mov edx, 3Dh   | * | call _d_make_comp ",gcc,1
"mov eax, ebx  | * | mov [esp+3Ch+var_20], eax ",gcc,14
"mov [esp+3Ch+var_20], eax  | * | jz short def_40663E  ",gcc,1
"test eax, eax  | * | mov ecx, [ebx+0Ch] ",gcc,1
"jz short def_40663E   | * | mov dl, [ecx] ",gcc,1
"mov ecx, [ebx+0Ch]  | * | test dl, dl ",gcc,1
"mov dl, [ecx]  | * | jz short def_40663E  ",gcc,1
"test dl, dl  | * | inc ecx ",gcc,1
"jz short def_40663E   | * | mov [ebx+0Ch], ecx ",gcc,1
"inc ecx  | * | cmp dl, 45h  ",gcc,1
"mov [ebx+0Ch], ecx  | * | jz short loc_4066F8 ",gcc,1
"cmp dl, 45h   | * | def_40663E:  ",gcc,1
"jz short loc_4066F8  | * | xor eax, eax  ",gcc,1
def_40663E:   | * | loc_4066C6:  ,gcc,1
"xor eax, eax   | * | add esp, 2Ch ",gcc,1
loc_4066C6:   | * | pop ebx ,gcc,1
pop ebp  | * | loc_4066CE:  ,gcc,1
retn  | * | inc ecx  ,gcc,1
"loc_4066CE:   | * | mov [ebx+0Ch], ecx ",gcc,1
"inc ecx   | * | mov eax, ebx ",gcc,8
"mov [ebx+0Ch], ecx  | * | call _d_source_name ",gcc,2
"mov eax, ebx  | * | mov [esp+3Ch+var_3C], 0 ",gcc,15
"call _d_source_name  | * | mov ecx, eax ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 24h  ",gcc,1
"mov edx, 24h   | * | call _d_make_comp ",gcc,1
"call _d_make_comp  | * | xchg ax, ax ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | loc_4066F4:  ",gcc,1
"xchg ax, ax  | * | test eax, eax ",gcc,1
loc_4066F4:   | * | jz short def_40663E  ,gcc,1
"test eax, eax  | * | loc_4066F8:  ",gcc,1
"jz short def_40663E   | * | mov edx, [ebx+20h] ",gcc,1
"loc_4066F8:   | * | cmp edx, [ebx+24h] ",gcc,1
"mov edx, [ebx+20h]  | * | jge short def_40663E  ",gcc,1
"cmp edx, [ebx+24h]  | * | mov ecx, [ebx+1Ch] ",gcc,2
"jge short def_40663E   | * | mov [ecx+edx*4], eax ",gcc,1
"mov ecx, [ebx+1Ch]  | * | inc edx ",gcc,2
"mov [ecx+edx*4], eax  | * | mov [ebx+20h], edx ",gcc,2
"inc edx  | * | mov eax, [esp+3Ch+var_20] ",gcc,1
"mov [ebx+20h], edx  | * | jmp short loc_4066C6 ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | loc_406710:  ",gcc,1
"jmp short loc_4066C6  | * | mov eax, ebx  ",gcc,1
loc_406710:   | * | call _d_name ,gcc,1
"mov eax, ebx   | * | loc_406717:  ",gcc,1
"call _d_name  | * | mov [esp+3Ch+var_20], eax ",gcc,1
loc_406717:   | * | jmp short loc_4066F4 ,gcc,1
"mov [esp+3Ch+var_20], eax  | * | loc_40671D:  ",gcc,1
"jmp short loc_4066F4  | * | lea esi, [ecx+1]  ",gcc,1
"loc_40671D:   | * | mov [ebx+0Ch], esi ",gcc,1
"lea esi, [ecx+1]   | * | mov al, [ecx+1] ",gcc,1
"mov [ebx+0Ch], esi  | * | cmp al, 5Fh  ",gcc,1
"mov al, [ecx+1]  | * | jz loc_406CD3 ",gcc,1
"cmp al, 5Fh   | * | sub eax, 30h  ",gcc,2
"jz loc_406CD3  | * | cmp al, 9 ",gcc,1
"sub eax, 30h   | * | ja loc_406CF2 ",gcc,1
"cmp al, 9  | * | lea eax, [ecx+2] ",gcc,1
ja loc_406CF2  | * | loc_40673C:  ,gcc,1
"lea eax, [ecx+2]  | * | mov ecx, eax ",gcc,1
"loc_40673C:   | * | mov [ebx+0Ch], eax ",gcc,1
"mov ecx, eax  | * | inc eax ",gcc,1
"mov [ebx+0Ch], eax  | * | mov dl, [ecx] ",gcc,1
"inc eax  | * | sub edx, 30h  ",gcc,1
"mov dl, [ecx]  | * | cmp dl, 9 ",gcc,1
"sub edx, 30h   | * | jbe short loc_40673C ",gcc,1
"cmp dl, 9  | * | sub ecx, esi ",gcc,1
"jbe short loc_40673C  | * | mov edx, esi ",gcc,1
"sub ecx, esi  | * | mov eax, ebx ",gcc,1
"mov edx, esi  | * | call _d_make_name ",gcc,1
"mov eax, ebx  | * | mov edi, eax ",gcc,5
"call _d_make_name  | * | test eax, eax ",gcc,1
"mov edi, eax  | * | jz short loc_4067D4 ",gcc,1
"test eax, eax  | * | loc_40675D:  ",gcc,1
"jz short loc_4067D4  | * | mov esi, [ebx+0Ch] ",gcc,1
"loc_40675D:   | * | cmp byte ptr [esi], 5Fh  ",gcc,1
"mov esi, [ebx+0Ch]  | * | jnz short loc_4067D4 ",gcc,1
"cmp byte ptr [esi], 5Fh   | * | loc_406765:  ",gcc,1
jnz short loc_4067D4  | * | inc esi ,gcc,1
"loc_406765:   | * | mov [ebx+0Ch], esi ",gcc,1
"inc esi  | * | mov eax, ebx ",gcc,1
"mov [ebx+0Ch], esi  | * | call _d_type ",gcc,1
"mov eax, ebx  | * | mov [esp+3Ch+var_3C], eax ",gcc,15
"call _d_type  | * | mov ecx, edi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 26h  ",gcc,1
"mov ecx, edi  | * | mov eax, ebx ",gcc,3
"mov edx, 26h   | * | call _d_make_comp ",gcc,1
"mov eax, ebx  | * | jmp short loc_406717 ",gcc,1
call _d_make_comp  | * | loc_406783:  ,gcc,1
jmp short loc_406717  | * | inc ecx  ,gcc,1
"loc_406783:   | * | mov [ebx+0Ch], ecx ",gcc,1
"mov [ebx+0Ch], ecx  | * | call _d_type ",gcc,6
"call _d_type  | * | mov ecx, eax ",gcc,14
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 21h  ",gcc,1
"mov edx, 21h   | * | call _d_make_comp ",gcc,1
call _d_make_comp  | * | jmp loc_4066F4 ,gcc,8
"mov [esp+3Ch+var_20], eax  | * | loc_4067AC:  ",gcc,1
"jmp loc_4066F4  | * | lea eax, [ecx+1]  ",gcc,2
"loc_4067AC:   | * | mov [ebx+0Ch], eax ",gcc,1
"lea eax, [ecx+1]   | * | cmp byte ptr [ecx+1], 59h  ",gcc,1
"mov [ebx+0Ch], eax  | * | jz loc_406CE7 ",gcc,1
"cmp byte ptr [ecx+1], 59h   | * | loc_4067BC:  ",gcc,1
"jz loc_406CE7  | * | mov edx, 1 ",gcc,1
"loc_4067BC:   | * | mov eax, ebx ",gcc,1
"mov edx, 1  | * | call _d_bare_function_type ",gcc,1
"call _d_bare_function_type  | * | cmp byte ptr [edx], 45h  ",gcc,1
"mov edx, [ebx+0Ch]  | * | jz loc_406A1A ",gcc,1
"cmp byte ptr [edx], 45h   | * | loc_4067D4:  ",gcc,1
"jz loc_406A1A  | * | xor eax, eax ",gcc,1
loc_4067D4:   | * | jmp loc_406717 ,gcc,1
"xor eax, eax  | * | loc_4067DB:  ",gcc,1
jmp loc_406717  | * | inc ecx  ,gcc,2
"loc_4067DB:   | * | mov [ebx+0Ch], ecx ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 22h  ",gcc,1
"mov edx, 22h   | * | call _d_make_comp ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | loc_406804:  ",gcc,1
"loc_406804:   | * | mov [ebx+0Ch], eax ",gcc,1
"lea eax, [ecx+1]   | * | mov al, [ecx+1] ",gcc,1
"mov [ebx+0Ch], eax  | * | test al, al ",gcc,1
"mov al, [ecx+1]  | * | jz def_40663E  ",gcc,1
"test al, al  | * | lea edx, [ecx+2] ",gcc,1
"jz def_40663E   | * | mov [ebx+0Ch], edx ",gcc,1
"lea edx, [ecx+2]  | * | sub eax, 46h  ",gcc,1
"mov [ebx+0Ch], edx  | * | cmp al, 30h ",gcc,1
"sub eax, 46h   | * | ja def_40663E  ",gcc,1
"cmp al, 30h  | * | movzx eax, al ",gcc,1
ja def_40663E   | * | jmp ds:jpt_406829[eax*4]  ,gcc,1
"movzx eax, al  | * | loc_406830:  ",gcc,1
jmp ds:jpt_406829[eax*4]   | * | inc ecx  ,gcc,1
"loc_406830:   | * | mov [ebx+0Ch], ecx ",gcc,1
"mov eax, ebx  | * | mov ebp, eax ",gcc,5
"call _d_type  | * | lea edi, [esp+3Ch+var_20] ",gcc,1
"mov ebp, eax  | * | mov ecx, 1 ",gcc,1
"lea edi, [esp+3Ch+var_20]  | * | mov edx, edi ",gcc,1
"mov ecx, 1  | * | mov eax, ebx ",gcc,1
"mov edx, edi  | * | call _d_cv_qualifiers ",gcc,1
"mov esi, eax  | * | jz loc_4067D4 ",gcc,1
jz loc_4067D4  | * | call _d_type ,gcc,1
"mov [esi], eax  | * | jz loc_4067D4 ",gcc,1
"test eax, eax  | * | cmp esi, edi ",gcc,1
jz loc_4067D4  | * | jz short loc_406895 ,gcc,1
"cmp esi, edi  | * | cmp dword ptr [eax], 25h  ",gcc,1
jz short loc_406895  | * | jz short loc_406895 ,gcc,1
"cmp dword ptr [eax], 25h   | * | mov edx, [esp+3Ch+var_20] ",gcc,1
"jz short loc_406895  | * | test edx, edx ",gcc,1
"mov edx, [esp+3Ch+var_20]  | * | jz loc_4067D4 ",gcc,1
"jz loc_4067D4  | * | cmp eax, [ebx+24h] ",gcc,1
"mov eax, [ebx+20h]  | * | jge loc_4067D4 ",gcc,1
"jge loc_4067D4  | * | mov [ecx+eax*4], edx ",gcc,1
inc eax  | * | loc_406895:  ,gcc,1
"mov [ebx+20h], eax  | * | mov eax, [esp+3Ch+var_20] ",gcc,1
"loc_406895:   | * | mov [esp+3Ch+var_3C], eax ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | mov ecx, ebp ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 27h  ",gcc,1
"mov ecx, ebp  | * | mov eax, ebx ",gcc,6
"mov edx, 27h   | * | call _d_make_comp ",gcc,1
"mov eax, ebx  | * | jmp loc_406717 ",gcc,2
call _d_make_comp  | * | loc_4068AF:  ,gcc,1
"loc_4068AF:   | * | mov [ebx+0Ch], ecx ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 20h  ",gcc,1
"mov edx, 20h   | * | call _d_make_comp ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | loc_4068D8:  ",gcc,1
jmp loc_4066F4  | * | inc ecx  ,gcc,2
"loc_4068D8:   | * | mov [ebx+0Ch], ecx ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 1Eh ",gcc,1
"mov edx, 1Eh  | * | call _d_make_comp ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | loc_406901:  ",gcc,1
"loc_406901:   | * | mov [ebx+0Ch], ecx ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 1Fh ",gcc,1
"mov edx, 1Fh  | * | call _d_make_comp ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | loc_40692A:  ",gcc,1
"jmp loc_4066F4  | * | mov al, [ecx+1]  ",gcc,1
"loc_40692A:   | * | lea edx, [eax-30h] ",gcc,1
"mov al, [ecx+1]   | * | cmp dl, 9 ",gcc,1
"lea edx, [eax-30h]  | * | jbe short loc_406944 ",gcc,1
"cmp dl, 9  | * | cmp al, 5Fh  ",gcc,1
jbe short loc_406944  | * | jz short loc_406944 ,gcc,1
"cmp al, 5Fh   | * | sub eax, 41h  ",gcc,1
"jz short loc_406944  | * | cmp al, 19h ",gcc,1
"sub eax, 41h   | * | ja loc_406D0C ",gcc,1
"cmp al, 19h  | * | loc_406944:  ",gcc,1
"ja loc_406D0C  | * | xor edx, edx ",gcc,1
"loc_406944:   | * | mov eax, ebx ",gcc,1
"call _d_substitution  | * | mov edx, [ebx+0Ch] ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | cmp byte ptr [edx], 49h  ",gcc,2
"mov edx, [ebx+0Ch]  | * | jnz loc_4066C6 ",gcc,1
"cmp byte ptr [edx], 49h   | * | loc_40695D:  ",gcc,1
"jnz loc_4066C6  | * | mov eax, ebx ",gcc,1
loc_40695D:   | * | call _d_template_args ,gcc,1
"call _d_template_args  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"mov ecx, [esp+3Ch+var_20]  | * | mov eax, ebx ",gcc,4
"mov [esp+3Ch+var_20], eax  | * | loc_406980:  ",gcc,1
"jmp loc_4066F4  | * | mov eax, ebx  ",gcc,1
loc_406980:   | * | call _d_template_param ,gcc,1
"mov eax, ebx   | * | mov [esp+3Ch+var_20], eax ",gcc,1
"call _d_template_param  | * | mov edx, [ebx+0Ch] ",gcc,1
"mov edx, [ebx+0Ch]  | * | jnz loc_4066F4 ",gcc,1
"cmp byte ptr [edx], 49h   | * | test eax, eax ",gcc,1
jnz loc_4066F4  | * | jz def_40663E  ,gcc,1
"test eax, eax  | * | mov edx, [ebx+20h] ",gcc,1
"jz def_40663E   | * | cmp edx, [ebx+24h] ",gcc,1
"mov edx, [ebx+20h]  | * | jge def_40663E  ",gcc,1
"jge def_40663E   | * | mov [ecx+edx*4], eax ",gcc,1
inc edx  | * | jmp short loc_40695D ,gcc,1
"mov [ebx+20h], edx  | * | loc_4069B7:  ",gcc,1
jmp short loc_40695D  | * | inc ecx  ,gcc,1
"loc_4069B7:   | * | mov [ebx+0Ch], ecx ",gcc,1
"call _d_source_name  | * | mov [esp+3Ch+var_20], eax ",gcc,1
"mov esi, eax  | * | mov eax, ebx ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | call _d_type ",gcc,1
"mov eax, ebx  | * | mov [esp+3Ch+var_3C], esi ",gcc,1
"mov [esp+3Ch+var_3C], esi  | * | mov edx, 1Dh ",gcc,1
"mov edx, 1Dh  | * | call _d_make_comp ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | loc_4069E9:  ",gcc,1
"jmp loc_4066F4  | * | lea eax, [eax+eax*4-1E5h]  ",gcc,1
"loc_4069E9:   | * | lea esi, ds:415300h[eax*4] ",gcc,1
"lea eax, [eax+eax*4-1E5h]   | * | mov edx, [ebx+14h] ",gcc,1
"lea esi, ds:415300h[eax*4]  | * | cmp edx, [ebx+18h] ",gcc,1
"mov edx, [ebx+14h]  | * | jl loc_406CB0 ",gcc,1
"cmp edx, [ebx+18h]  | * | mov esi, large ds:4 ",gcc,1
"jl loc_406CB0  | * | xor eax, eax ",gcc,1
"mov esi, large ds:4  | * | loc_406A0B:  ",gcc,1
"xor eax, eax  | * | mov edx, [esi+4] ",gcc,1
"loc_406A0B:   | * | add [ebx+30h], edx ",gcc,1
"mov edx, [esi+4]  | * | inc ecx ",gcc,1
"add [ebx+30h], edx  | * | mov [ebx+0Ch], ecx ",gcc,1
inc ecx  | * | jmp loc_4066C6 ,gcc,1
"mov [ebx+0Ch], ecx  | * | loc_406A1A:  ",gcc,1
jmp loc_4066C6  | * | inc edx ,gcc,1
"loc_406A1A:   | * | mov [ebx+0Ch], edx ",gcc,1
inc edx  | * | jmp loc_406717 ,gcc,1
"mov [ebx+0Ch], edx  | * | loc_406A23:  ",gcc,1
"jmp loc_406717  | * | cmp byte ptr [ecx+2], 5Fh  ",gcc,1
loc_406A23:   | * | jz loc_406D4C ,gcc,1
"cmp byte ptr [ecx+2], 5Fh   | * | mov eax, ebx ",gcc,1
jz loc_406D4C  | * | call _d_number_component ,gcc,1
call _d_number_component  | * | loc_406A36:  ,gcc,1
"mov esi, eax  | * | test esi, esi ",gcc,1
loc_406A36:   | * | jz loc_4067D4 ,gcc,1
"test esi, esi  | * | mov eax, [ebx+0Ch] ",gcc,1
"jz loc_4067D4  | * | cmp byte ptr [eax], 5Fh  ",gcc,1
"mov eax, [ebx+0Ch]  | * | jnz loc_4067D4 ",gcc,1
"jnz loc_4067D4  | * | mov [ebx+0Ch], eax ",gcc,1
"mov [ebx+0Ch], eax  | * | call _d_type ",gcc,1
"call _d_type  | * | mov ecx, esi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 29h  ",gcc,1
"mov ecx, esi  | * | mov eax, ebx ",gcc,13
"mov edx, 29h   | * | call _d_make_comp ",gcc,1
call _d_make_comp  | * | loc_406A6B:  ,gcc,1
"jmp loc_406717  | * | mov edx, [ebx+14h]  ",gcc,1
"loc_406A6B:   | * | cmp edx, [ebx+18h] ",gcc,1
"mov edx, [ebx+14h]   | * | jge loc_406CDA ",gcc,6
"cmp edx, [ebx+18h]  | * | lea ecx, [edx+edx*2] ",gcc,7
"jge loc_406CDA  | * | mov eax, [ebx+10h] ",gcc,6
"lea ecx, [edx+edx*2]  | * | lea eax, [eax+ecx*4] ",gcc,8
"lea eax, [eax+ecx*4]  | * | mov [ebx+14h], edx ",gcc,7
"mov [ebx+14h], edx  | * | jz loc_406D6B ",gcc,7
"test eax, eax  | * | mov dword ptr [eax], 23h  ",gcc,8
"jz loc_406D6B  | * | mov dword ptr [eax+4], offset off_415558  ",gcc,1
"mov dword ptr [eax], 23h   | * | mov edx, offset off_415558  ",gcc,1
"mov dword ptr [eax+4], offset off_415558   | * | xchg ax, ax ",gcc,1
"mov edx, offset off_415558   | * | loc_406AA0:  ",gcc,1
"xchg ax, ax  | * | mov edx, [edx+4] ",gcc,1
"loc_406AA0:   | * | add [ebx+30h], edx ",gcc,1
"mov edx, [edx+4]  | * | jmp loc_4066C6 ",gcc,1
"add [ebx+30h], edx  | * | loc_406AAB:  ",gcc,1
"jmp loc_4066C6  | * | mov edx, [ebx+14h]  ",gcc,2
"loc_406AAB:   | * | cmp edx, [ebx+18h] ",gcc,1
"jz loc_406D6B  | * | mov dword ptr [eax+4], offset off_41556C  ",gcc,1
"mov dword ptr [eax], 23h   | * | mov edx, offset off_41556C  ",gcc,1
"mov dword ptr [eax+4], offset off_41556C   | * | jmp short loc_406AA0 ",gcc,1
"mov edx, offset off_41556C   | * | loc_406AE0:  ",gcc,1
"jmp short loc_406AA0  | * | mov edx, [ebx+14h]  ",gcc,1
"loc_406AE0:   | * | cmp edx, [ebx+18h] ",gcc,1
"jz loc_406D6B  | * | mov dword ptr [eax+4], offset off_415544  ",gcc,1
"mov dword ptr [eax], 23h   | * | mov edx, offset off_415544  ",gcc,1
"mov dword ptr [eax+4], offset off_415544   | * | jmp short loc_406AA0 ",gcc,1
"mov edx, offset off_415544   | * | loc_406B15:  ",gcc,1
"jmp short loc_406AA0  | * | mov eax, ebx  ",gcc,1
loc_406B15:   | * | call _d_type ,gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 45h  ",gcc,2
"mov edx, 45h   | * | call _d_make_comp ",gcc,2
"mov [esp+3Ch+var_20], eax  | * | loc_406B3A:  ",gcc,1
"jmp loc_4066F4  | * | mov edx, [ebx+14h]  ",gcc,1
"loc_406B3A:   | * | cmp edx, [ebx+18h] ",gcc,1
"jz loc_406D6B  | * | mov dword ptr [eax+4], offset off_415580  ",gcc,1
"mov dword ptr [eax], 23h   | * | mov edx, offset off_415580  ",gcc,1
"mov dword ptr [eax+4], offset off_415580   | * | jmp loc_406AA0 ",gcc,1
"mov edx, offset off_415580   | * | loc_406B72:  ",gcc,1
"jmp loc_406AA0  | * | mov edx, [ebx+14h]  ",gcc,2
"loc_406B72:   | * | cmp edx, [ebx+18h] ",gcc,1
"jz loc_406D6B  | * | mov dword ptr [eax+4], offset off_41551C  ",gcc,1
"mov dword ptr [eax], 23h   | * | mov edx, offset off_41551C  ",gcc,1
"mov dword ptr [eax+4], offset off_41551C   | * | jmp loc_406AA0 ",gcc,1
"mov edx, offset off_41551C   | * | loc_406BAA:  ",gcc,1
"jmp loc_406AA0  | * | mov ecx, 4  ",gcc,1
"loc_406BAA:   | * | mov edx, offset aAuto  ",gcc,1
"mov ecx, 4   | * | mov eax, ebx ",gcc,1
"mov edx, offset aAuto   | * | call _d_make_name ",gcc,1
"mov eax, ebx  | * | jmp loc_4066C6 ",gcc,1
call _d_make_name  | * | loc_406BC0:  ,gcc,1
"jmp loc_4066C6  | * | mov eax, [ebx+14h]  ",gcc,1
"loc_406BC0:   | * | cmp eax, [ebx+18h] ",gcc,1
"mov eax, [ebx+14h]   | * | jge loc_406D34 ",gcc,1
"cmp eax, [ebx+18h]  | * | lea esi, [eax+eax*2] ",gcc,1
"jge loc_406D34  | * | mov edx, [ebx+10h] ",gcc,1
"lea esi, [eax+eax*2]  | * | lea esi, [edx+esi*4] ",gcc,1
"mov edx, [ebx+10h]  | * | inc eax ",gcc,1
"lea esi, [edx+esi*4]  | * | mov [ebx+14h], eax ",gcc,1
inc eax  | * | loc_406BD9:  ,gcc,1
"mov [ebx+14h], eax  | * | mov [esp+3Ch+var_20], esi ",gcc,1
"loc_406BD9:   | * | mov dword ptr [esi], 28h  ",gcc,1
"mov [esp+3Ch+var_20], esi  | * | mov al, [ecx+2] ",gcc,1
"mov dword ptr [esi], 28h   | * | sub eax, 30h  ",gcc,1
"mov al, [ecx+2]  | * | cmp al, 9 ",gcc,1
"sub eax, 30h   | * | setbe al ",gcc,1
"cmp al, 9  | * | movzx eax, al ",gcc,1
"setbe al  | * | mov [esi+8], ax ",gcc,1
"movzx eax, al  | * | test ax, ax ",gcc,1
"mov [esi+8], ax  | * | jnz loc_406D3B ",gcc,1
"test ax, ax  | * | loc_406BFE:  ",gcc,1
"jnz loc_406D3B  | * | mov eax, ebx ",gcc,1
loc_406BFE:   | * | call _d_type ,gcc,1
"mov eax, ebx  | * | mov [esi+4], eax ",gcc,1
"call _d_type  | * | mov eax, [esp+3Ch+var_20] ",gcc,1
"mov [esi+4], eax  | * | mov esi, [eax+4] ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | test esi, esi ",gcc,1
"mov esi, [eax+4]  | * | jz def_40663E  ",gcc,1
"test esi, esi  | * | lea eax, [ebx+0Ch] ",gcc,1
jz def_40663E   | * | call _d_number_isra_0 ,gcc,1
"call _d_number_isra_0  | * | mov al, [edx] ",gcc,1
"mov edx, [ebx+0Ch]  | * | test al, al ",gcc,1
"mov al, [edx]  | * | jz loc_406D2D ",gcc,1
"test al, al  | * | inc edx ",gcc,1
"jz loc_406D2D  | * | mov [ebx+0Ch], edx ",gcc,1
"mov [ebx+0Ch], edx  | * | cmp al, 73h  ",gcc,1
"xor edx, edx  | * | setz dl ",gcc,1
"cmp al, 73h   | * | loc_406C37:  ",gcc,1
"setz dl  | * | mov eax, [esp+3Ch+var_20] ",gcc,1
"loc_406C37:   | * | mov [eax+0Ah], dx ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | jmp loc_4066C6 ",gcc,1
"mov [eax+0Ah], dx  | * | loc_406C44:  ",gcc,1
"loc_406C44:   | * | cmp edx, [ebx+18h] ",gcc,1
"jz loc_406D6B  | * | mov dword ptr [eax+4], offset off_415508  ",gcc,1
"mov dword ptr [eax], 23h   | * | mov edx, offset off_415508  ",gcc,1
"mov dword ptr [eax+4], offset off_415508   | * | jmp loc_406AA0 ",gcc,1
"mov edx, offset off_415508   | * | loc_406C7C:  ",gcc,1
"loc_406C7C:   | * | cmp edx, [ebx+18h] ",gcc,1
"mov edx, [ebx+14h]   | * | jge short loc_406CDA ",gcc,1
"jge short loc_406CDA  | * | mov eax, [ebx+10h] ",gcc,1
"jz loc_406D6B  | * | mov dword ptr [eax+4], offset off_415530  ",gcc,1
"mov dword ptr [eax], 23h   | * | mov edx, offset off_415530  ",gcc,1
"mov dword ptr [eax+4], offset off_415530   | * | jmp loc_406AA0 ",gcc,1
"mov edx, offset off_415530   | * | loc_406CB0:  ",gcc,1
"jmp loc_406AA0  | * | lea edi, [edx+edx*2] ",gcc,1
"loc_406CB0:   | * | mov eax, [ebx+10h] ",gcc,1
"lea eax, [eax+edi*4]  | * | mov [ebx+14h], edx ",gcc,1
"mov [ebx+14h], edx  | * | jz loc_406D60 ",gcc,1
"jz loc_406D60  | * | mov [eax+4], esi ",gcc,1
"mov dword ptr [eax], 23h   | * | jmp loc_406A0B ",gcc,1
"mov [eax+4], esi  | * | loc_406CD3:  ",gcc,1
"jmp loc_406A0B  | * | xor edi, edi ",gcc,1
loc_406CD3:   | * | jmp loc_406765 ,gcc,1
"xor edi, edi  | * | loc_406CDA:  ",gcc,1
"jmp loc_406765  | * | mov edx, large ds:4 ",gcc,1
"loc_406CDA:   | * | xor eax, eax ",gcc,1
"mov edx, large ds:4  | * | jmp loc_406AA0 ",gcc,1
"xor eax, eax  | * | loc_406CE7:  ",gcc,1
"jmp loc_406AA0  | * | add ecx, 2 ",gcc,1
"loc_406CE7:   | * | mov [ebx+0Ch], ecx ",gcc,1
"add ecx, 2  | * | jmp loc_4067BC ",gcc,1
"mov [ebx+0Ch], ecx  | * | loc_406CF2:  ",gcc,1
"jmp loc_4067BC  | * | mov eax, ebx ",gcc,1
loc_406CF2:   | * | call _d_expression ,gcc,1
"call _d_expression  | * | test eax, eax ",gcc,1
"mov edi, eax  | * | jnz loc_40675D ",gcc,1
"test eax, eax  | * | xor eax, eax ",gcc,3
jnz loc_40675D  | * | jmp loc_406717 ,gcc,1
jmp loc_406717  | * | loc_406D0C:  ,gcc,1
loc_406D0C:   | * | call _d_name ,gcc,1
"mov [esp+3Ch+var_20], eax  | * | jz def_40663E  ",gcc,1
"test eax, eax  | * | cmp dword ptr [eax], 16h ",gcc,1
jz def_40663E   | * | jnz loc_4066F8 ,gcc,1
"cmp dword ptr [eax], 16h  | * | jmp loc_4066C6 ",gcc,1
jnz loc_4066F8  | * | loc_406D2D:  ,gcc,1
"jmp loc_4066C6  | * | xor edx, edx ",gcc,1
loc_406D2D:   | * | jmp loc_406C37 ,gcc,1
"xor edx, edx  | * | loc_406D34:  ",gcc,1
"jmp loc_406C37  | * | xor esi, esi ",gcc,1
loc_406D34:   | * | jmp loc_406BD9 ,gcc,1
"xor esi, esi  | * | loc_406D3B:  ",gcc,1
"jmp loc_406BD9  | * | lea eax, [ebx+0Ch] ",gcc,1
loc_406D3B:   | * | call _d_number_isra_0 ,gcc,1
"lea eax, [ebx+0Ch]  | * | mov esi, [esp+3Ch+var_20] ",gcc,1
call _d_number_isra_0  | * | jmp loc_406BFE ,gcc,1
"mov esi, [esp+3Ch+var_20]  | * | loc_406D4C:  ",gcc,1
"jmp loc_406BFE  | * | add ecx, 3 ",gcc,1
"loc_406D4C:   | * | mov [ebx+0Ch], ecx ",gcc,1
"add ecx, 3  | * | mov eax, ebx ",gcc,1
"mov [ebx+0Ch], ecx  | * | call _d_expression ",gcc,1
call _d_expression  | * | jmp loc_406A36 ,gcc,1
"mov esi, eax  | * | loc_406D60:  ",gcc,1
"jmp loc_406A36  | * | mov esi, large ds:4 ",gcc,1
loc_406D60:   | * | jmp loc_406A0B ,gcc,1
"mov esi, large ds:4  | * | loc_406D6B:  ",gcc,1
"jmp loc_406A0B  | * | mov edx, large ds:4 ",gcc,1
loc_406D6B:   | * | jmp loc_406AA0 ,gcc,1
"mov edx, large ds:4  | * | _d_type endp ",gcc,1
jmp loc_406AA0  | * | align 4 ,gcc,1
_d_type endp  | * | _d_operator_name proc near  ,gcc,1
"mov esi, eax  | * | mov bl, [eax] ",gcc,1
"mov eax, [eax+0Ch]  | * | test bl, bl ",gcc,1
"mov bl, [eax]  | * | jz short loc_406DF4 ",gcc,1
"test bl, bl  | * | lea edx, [eax+1] ",gcc,1
"jz short loc_406DF4  | * | mov [esi+0Ch], edx ",gcc,1
"lea edx, [eax+1]  | * | mov dl, [eax+1] ",gcc,3
"mov [esi+0Ch], edx  | * | mov [esp+3Ch+var_1D], dl ",gcc,1
"mov dl, [eax+1]  | * | test dl, dl ",gcc,1
"mov [esp+3Ch+var_1D], dl  | * | jz short loc_406DA1 ",gcc,1
"jz short loc_406DA1  | * | mov [esi+0Ch], eax ",gcc,1
"add eax, 2  | * | loc_406DA1:  ",gcc,1
"mov [esi+0Ch], eax  | * | cmp bl, 76h  ",gcc,1
loc_406DA1:   | * | jnz loc_406E4C ,gcc,1
"cmp bl, 76h   | * | mov al, [esp+3Ch+var_1D] ",gcc,1
"jnz loc_406E4C  | * | sub eax, 30h  ",gcc,1
"mov al, [esp+3Ch+var_1D]  | * | cmp al, 9 ",gcc,1
"sub eax, 30h   | * | ja short loc_406DF9 ",gcc,1
"cmp al, 9  | * | mov eax, esi ",gcc,1
ja short loc_406DF9  | * | call _d_source_name ,gcc,1
"mov eax, esi  | * | mov ecx, eax ",gcc,1
"call _d_source_name  | * | mov edx, [esi+14h] ",gcc,1
"mov ecx, eax  | * | cmp edx, [esi+18h] ",gcc,1
"mov edx, [esi+14h]  | * | jge short loc_406E2C ",gcc,2
"cmp edx, [esi+18h]  | * | lea ebx, [edx+edx*2] ",gcc,1
"jge short loc_406E2C  | * | mov eax, [esi+10h] ",gcc,2
"lea ebx, [edx+edx*2]  | * | lea eax, [eax+ebx*4] ",gcc,1
"mov eax, [esi+10h]  | * | inc edx ",gcc,2
"lea eax, [eax+ebx*4]  | * | mov [esi+14h], edx ",gcc,1
"mov [esi+14h], edx  | * | jz short loc_406E2C ",gcc,2
"test eax, eax  | * | test ecx, ecx ",gcc,1
jz short loc_406E2C  | * | jz short loc_406E2C ,gcc,1
"test ecx, ecx  | * | mov dword ptr [eax], 2Eh  ",gcc,1
"jz short loc_406E2C  | * | movsx edx, [esp+3Ch+var_1D] ",gcc,1
"mov dword ptr [eax], 2Eh   | * | sub edx, 30h  ",gcc,1
"movsx edx, [esp+3Ch+var_1D]  | * | mov [eax+4], edx ",gcc,1
"sub edx, 30h   | * | mov [eax+8], ecx ",gcc,1
"mov [eax+4], edx  | * | jmp short loc_406E2E ",gcc,1
"mov [eax+8], ecx  | * | align 4 ",gcc,1
jmp short loc_406E2E  | * | loc_406DF4:  ,gcc,1
"align 4  | * | mov [esp+3Ch+var_1D], 0 ",gcc,1
loc_406DF4:   | * | loc_406DF9:  ,gcc,1
"mov [esp+3Ch+var_1D], 0  | * | mov edi, 39h  ",gcc,1
"loc_406DF9:   | * | xor edx, edx ",gcc,1
"mov edi, 39h   | * | loc_406E00:  ",gcc,1
"xor edx, edx  | * | mov eax, edi ",gcc,1
"loc_406E00:   | * | sub eax, edx ",gcc,1
"mov eax, edi  | * | mov ecx, eax ",gcc,3
"sub eax, edx  | * | shr ecx, 1Fh ",gcc,1
"mov ecx, eax  | * | add eax, ecx ",gcc,1
"shr ecx, 1Fh  | * | sar eax, 1 ",gcc,1
"add eax, ecx  | * | add eax, edx ",gcc,1
"sar eax, 1  | * | mov ecx, eax ",gcc,1
"add eax, edx  | * | shl ecx, 4 ",gcc,1
"mov ecx, eax  | * | lea ebp, _cplus_demangle_operators[ecx] ",gcc,1
"shl ecx, 4  | * | mov ecx, ds:_cplus_demangle_operators[ecx] ",gcc,1
"lea ebp, _cplus_demangle_operators[ecx]  | * | cmp bl, [ecx] ",gcc,1
"mov ecx, ds:_cplus_demangle_operators[ecx]  | * | jz short loc_406E38 ",gcc,1
"cmp bl, [ecx]  | * | jge short loc_406E47 ",gcc,1
jz short loc_406E38  | * | loc_406E26:  ,gcc,1
"jge short loc_406E47  | * | mov edi, eax ",gcc,1
loc_406E26:   | * | loc_406E28:  ,gcc,1
"mov edi, eax  | * | cmp edx, edi ",gcc,1
loc_406E28:   | * | jnz short loc_406E00 ,gcc,1
"cmp edx, edi  | * | loc_406E2C:  ",gcc,1
"jnz short loc_406E00  | * | xor eax, eax ",gcc,1
loc_406E2C:   | * | loc_406E2E:  ,gcc,1
"xor eax, eax  | * | add esp, 2Ch ",gcc,1
loc_406E2E:   | * | pop ebx ,gcc,1
retn  | * | loc_406E38:  ,gcc,1
"align 4  | * | mov cl, [ecx+1] ",gcc,1
"loc_406E38:   | * | cmp [esp+3Ch+var_1D], cl ",gcc,1
"mov cl, [ecx+1]  | * | jz short loc_406E78 ",gcc,1
"cmp [esp+3Ch+var_1D], cl  | * | cmp cl, [esp+3Ch+var_1D] ",gcc,1
jz short loc_406E78  | * | jg short loc_406E26 ,gcc,1
"cmp cl, [esp+3Ch+var_1D]  | * | loc_406E47:  ",gcc,1
"jg short loc_406E26  | * | lea edx, [eax+1] ",gcc,1
loc_406E47:   | * | jmp short loc_406E28 ,gcc,1
"lea edx, [eax+1]  | * | loc_406E4C:  ",gcc,1
"jmp short loc_406E28  | * | cmp bl, 63h  ",gcc,1
loc_406E4C:   | * | jnz short loc_406DF9 ,gcc,1
"cmp bl, 63h   | * | cmp [esp+3Ch+var_1D], 76h  ",gcc,1
jnz short loc_406DF9  | * | jnz short loc_406DF9 ,gcc,1
"cmp [esp+3Ch+var_1D], 76h   | * | mov eax, esi ",gcc,1
jnz short loc_406DF9  | * | call _d_type ,gcc,1
"mov eax, esi  | * | mov [esp+3Ch+var_3C], 0 ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 2Fh  ",gcc,1
"mov edx, 2Fh   | * | call _d_make_comp ",gcc,1
"mov eax, esi  | * | jmp short loc_406E2E ",gcc,1
call _d_make_comp  | * | align 4 ,gcc,1
jmp short loc_406E2E  | * | loc_406E78:  ,gcc,1
"align 4  | * | mov edx, [esi+14h] ",gcc,1
"loc_406E78:   | * | cmp edx, [esi+18h] ",gcc,1
"cmp edx, [esi+18h]  | * | lea ecx, [edx+edx*2] ",gcc,1
"lea eax, [eax+ecx*4]  | * | mov [esi+14h], edx ",gcc,1
"test eax, eax  | * | mov dword ptr [eax], 2Dh  ",gcc,1
"jz short loc_406E2C  | * | mov [eax+4], ebp ",gcc,1
"mov dword ptr [eax], 2Dh   | * | jmp short loc_406E2E ",gcc,1
"mov [eax+4], ebp  | * | _d_operator_name endp ",gcc,1
jmp short loc_406E2E  | * | _d_parmlist proc near  ,gcc,1
"sub esp, 24h  | * | mov [esp+2Ch+var_10], 0 ",gcc,1
"mov ebx, eax  | * | mov eax, [eax+0Ch] ",gcc,1
"mov [esp+2Ch+var_10], 0  | * | mov al, [eax] ",gcc,1
"mov eax, [eax+0Ch]  | * | test al, al ",gcc,1
"mov al, [eax]  | * | jz short loc_406F00 ",gcc,1
"test al, al  | * | cmp al, 45h  ",gcc,2
jz short loc_406F00  | * | jz short loc_406F00 ,gcc,2
"cmp al, 45h   | * | cmp al, 2Eh  ",gcc,1
"cmp al, 2Eh   | * | lea esi, [esp+2Ch+var_10] ",gcc,1
jz short loc_406F00  | * | jmp short loc_406EF5 ,gcc,1
jmp short loc_406EF5  | * | loc_406EC4:  ,gcc,1
"align 4  | * | mov [esp+2Ch+var_2C], 0 ",gcc,1
"loc_406EC4:   | * | mov ecx, eax ",gcc,1
"mov [esp+2Ch+var_2C], 0  | * | mov edx, 2Ah  ",gcc,3
"mov edx, 2Ah   | * | call _d_make_comp ",gcc,3
"mov [esi], eax  | * | jz short loc_406F00 ",gcc,1
"jz short loc_406F00  | * | mov eax, [ebx+0Ch] ",gcc,1
"lea esi, [eax+8]  | * | mov dl, [eax] ",gcc,1
"mov eax, [ebx+0Ch]  | * | test dl, dl ",gcc,1
"mov dl, [eax]  | * | jz short loc_406F08 ",gcc,1
"test dl, dl  | * | cmp dl, 45h  ",gcc,1
jz short loc_406F08  | * | jz short loc_406F08 ,gcc,2
"cmp dl, 45h   | * | cmp dl, 2Eh  ",gcc,1
"cmp dl, 2Eh   | * | loc_406EF5:  ",gcc,1
"jz short loc_406F08  | * | mov eax, ebx ",gcc,1
loc_406EF5:   | * | call _d_type ,gcc,1
"mov eax, ebx  | * | test eax, eax ",gcc,10
call _d_type  | * | jnz short loc_406EC4 ,gcc,1
"test eax, eax  | * | loc_406F00:  ",gcc,1
"jnz short loc_406EC4  | * | xor eax, eax ",gcc,1
"loc_406F00:   | * | add esp, 24h ",gcc,1
pop esi  | * | loc_406F08:  ,gcc,1
"retn  | * | mov eax, [esp+2Ch+var_10] ",gcc,1
"loc_406F08:   | * | test eax, eax ",gcc,1
"mov eax, [esp+2Ch+var_10]  | * | jz short loc_406F00 ",gcc,1
"test eax, eax  | * | mov edx, [eax+8] ",gcc,1
"jz short loc_406F00  | * | test edx, edx ",gcc,1
"mov edx, [eax+8]  | * | jz short loc_406F1D ",gcc,1
"test edx, edx  | * | loc_406F17:  ",gcc,1
"jz short loc_406F1D  | * | add esp, 24h ",gcc,1
loc_406F17:   | * | pop ebx ,gcc,1
pop esi  | * | loc_406F1D:  ,gcc,1
"loc_406F1D:   | * | cmp dword ptr [edx], 23h  ",gcc,1
"mov edx, [eax+4]  | * | jnz short loc_406F17 ",gcc,1
"cmp dword ptr [edx], 23h   | * | mov edx, [edx+4] ",gcc,2
"jnz short loc_406F17  | * | cmp dword ptr [edx+10h], 9 ",gcc,1
"mov edx, [edx+4]  | * | jnz short loc_406F17 ",gcc,1
"cmp dword ptr [edx+10h], 9  | * | mov edx, [edx+4] ",gcc,1
"jnz short loc_406F17  | * | sub [ebx+30h], edx ",gcc,1
"mov edx, [edx+4]  | * | mov dword ptr [eax+4], 0 ",gcc,1
"sub [ebx+30h], edx  | * | jmp short loc_406F17 ",gcc,1
"mov dword ptr [eax+4], 0  | * | _d_parmlist endp ",gcc,1
jmp short loc_406F17  | * | align 10h ,gcc,1
_d_parmlist endp  | * | _d_unqualified_name proc near  ,gcc,1
_d_unqualified_name proc near   | * | push ebp ,gcc,1
"mov ebx, eax  | * | mov dl, [eax] ",gcc,1
"mov eax, [eax+0Ch]  | * | lea ecx, [edx-30h] ",gcc,1
"mov dl, [eax]  | * | cmp cl, 9 ",gcc,1
"lea ecx, [edx-30h]  | * | jbe loc_406FEC ",gcc,1
"cmp cl, 9  | * | lea ecx, [edx-61h] ",gcc,1
"jbe loc_406FEC  | * | cmp cl, 19h ",gcc,1
"lea ecx, [edx-61h]  | * | jbe short loc_406F9C ",gcc,1
"cmp cl, 19h  | * | lea ecx, [edx-43h] ",gcc,1
"jbe short loc_406F9C  | * | cmp cl, 1 ",gcc,1
"lea ecx, [edx-43h]  | * | jbe loc_407118 ",gcc,1
"cmp cl, 1  | * | cmp dl, 4Ch  ",gcc,1
jbe loc_407118  | * | jz loc_40705C ,gcc,1
"cmp dl, 4Ch   | * | cmp dl, 55h  ",gcc,1
jz loc_40705C  | * | jnz short loc_406F8D ,gcc,1
"cmp dl, 55h   | * | mov dl, [eax+1] ",gcc,1
"jnz short loc_406F8D  | * | cmp dl, 6Ch  ",gcc,1
"mov dl, [eax+1]  | * | jz loc_407088 ",gcc,1
"cmp dl, 6Ch   | * | cmp dl, 74h  ",gcc,1
jz loc_407088  | * | jz short loc_406FFC ,gcc,1
"cmp dl, 74h   | * | loc_406F8D:  ",gcc,1
"jz short loc_406FFC  | * | xor ebp, ebp ",gcc,1
loc_406F8D:   | * | loc_406F8F:  ,gcc,1
"xor ebp, ebp  | * | mov eax, ebp ",gcc,1
"loc_406F8F:   | * | add esp, 1Ch ",gcc,1
retn  | * | loc_406F9C:  ,gcc,1
loc_406F9C:   | * | call _d_operator_name ,gcc,1
"call _d_operator_name  | * | test eax, eax ",gcc,2
"mov ebp, eax  | * | jz short loc_406F8D ",gcc,1
"test eax, eax  | * | cmp dword ptr [eax], 2Dh  ",gcc,1
jz short loc_406F8D  | * | jnz short loc_406F8F ,gcc,1
"cmp dword ptr [eax], 2Dh   | * | mov edx, [eax+4] ",gcc,1
"jnz short loc_406F8F  | * | mov eax, [ebx+30h] ",gcc,1
"mov edx, [eax+4]  | * | add eax, [edx+8] ",gcc,1
"mov eax, [ebx+30h]  | * | add eax, 7 ",gcc,1
"add eax, [edx+8]  | * | mov [ebx+30h], eax ",gcc,1
"add eax, 7  | * | mov esi, [edx] ",gcc,1
"mov [ebx+30h], eax  | * | mov edi, offset unk_414ADC ",gcc,1
"mov esi, [edx]  | * | mov ecx, 3 ",gcc,1
"mov edi, offset unk_414ADC  | * | repe cmpsb ",gcc,1
"mov ecx, 3  | * | jnz short loc_406F8F ",gcc,1
"repe cmpsb  | * | mov eax, ebx ",gcc,1
jnz short loc_406F8F  | * | call _d_source_name ,gcc,1
"mov eax, ebx  | * | mov [esp+2Ch+var_2C], eax ",gcc,1
"call _d_source_name  | * | mov ecx, ebp ",gcc,1
"mov [esp+2Ch+var_2C], eax  | * | mov edx, 31h  ",gcc,1
"mov edx, 31h   | * | call _d_make_comp ",gcc,2
call _d_make_comp  | * | jmp short loc_406F8F ,gcc,1
"mov ebp, eax  | * | align 4 ",gcc,1
jmp short loc_406F8F  | * | loc_406FEC:  ,gcc,1
"loc_406FEC:   | * | add esp, 1Ch ",gcc,1
pop edi  | * | jmp _d_source_name ,gcc,1
jmp _d_source_name  | * | loc_406FFC:  ,gcc,1
"loc_406FFC:   | * | mov [ebx+0Ch], edx ",gcc,1
"lea edx, [eax+1]  | * | cmp byte ptr [eax+1], 74h  ",gcc,1
"mov [ebx+0Ch], edx  | * | jnz short loc_406F8D ",gcc,1
"cmp byte ptr [eax+1], 74h   | * | add eax, 2 ",gcc,1
"jnz short loc_406F8D  | * | mov [ebx+0Ch], eax ",gcc,1
"add eax, 2  | * | mov eax, ebx ",gcc,2
call _d_compact_number  | * | js loc_406F8D ,gcc,2
"test eax, eax  | * | mov edx, [ebx+14h] ",gcc,2
"js loc_406F8D  | * | cmp edx, [ebx+18h] ",gcc,2
"mov edx, [ebx+14h]  | * | jge loc_406F8D ",gcc,2
"jge loc_406F8D  | * | mov ecx, [ebx+10h] ",gcc,2
"lea esi, [edx+edx*2]  | * | lea ebp, [ecx+esi*4] ",gcc,1
"mov ecx, [ebx+10h]  | * | inc edx ",gcc,3
"lea ebp, [ecx+esi*4]  | * | mov [ebx+14h], edx ",gcc,1
"inc edx  | * | test ebp, ebp ",gcc,2
"mov [ebx+14h], edx  | * | jz loc_406F8D ",gcc,2
"test ebp, ebp  | * | mov dword ptr [ebp+0], 42h  ",gcc,1
"jz loc_406F8D  | * | mov [ebp+4], eax ",gcc,1
"mov dword ptr [ebp+0], 42h   | * | mov eax, [ebx+20h] ",gcc,1
"mov [ebp+4], eax  | * | cmp eax, [ebx+24h] ",gcc,1
"mov eax, [ebx+20h]  | * | jge loc_406F8D ",gcc,2
"cmp eax, [ebx+24h]  | * | jmp loc_407108 ",gcc,1
jge loc_406F8D  | * | align 4 ,gcc,1
jmp loc_407108  | * | loc_40705C:  ,gcc,1
"loc_40705C:   | * | mov [ebx+0Ch], eax ",gcc,1
"mov [ebx+0Ch], eax  | * | call _d_source_name ",gcc,1
"call _d_source_name  | * | test eax, eax ",gcc,1
"mov ebp, eax  | * | jz loc_406F8D ",gcc,1
jz loc_406F8D  | * | call _d_discriminator ,gcc,1
call _d_discriminator  | * | jnz loc_406F8F ,gcc,1
"test eax, eax  | * | jmp loc_406F8D ",gcc,1
jnz loc_406F8F  | * | align 4 ,gcc,1
jmp loc_406F8D  | * | loc_407088:  ,gcc,1
"loc_407088:   | * | mov [ebx+0Ch], edx ",gcc,1
"lea edx, [eax+1]  | * | cmp byte ptr [eax+1], 6Ch  ",gcc,1
"mov [ebx+0Ch], edx  | * | jnz loc_406F8D ",gcc,1
"cmp byte ptr [eax+1], 6Ch   | * | add eax, 2 ",gcc,1
"jnz loc_406F8D  | * | mov [ebx+0Ch], eax ",gcc,1
"mov [ebx+0Ch], eax  | * | call _d_parmlist ",gcc,1
"call _d_parmlist  | * | test eax, eax ",gcc,1
"mov esi, eax  | * | jz loc_406F8D ",gcc,1
"jz loc_406F8D  | * | cmp byte ptr [edx], 45h  ",gcc,1
"mov edx, [ebx+0Ch]  | * | jnz loc_406F8D ",gcc,1
"cmp byte ptr [edx], 45h   | * | inc edx ",gcc,1
"jnz loc_406F8D  | * | mov [ebx+0Ch], edx ",gcc,1
"mov [ebx+0Ch], edx  | * | call _d_compact_number ",gcc,1
"cmp edx, [ebx+18h]  | * | lea edi, [edx+edx*2] ",gcc,1
"lea edi, [edx+edx*2]  | * | lea ebp, [ecx+edi*4] ",gcc,1
"lea ebp, [ecx+edi*4]  | * | mov [ebx+14h], edx ",gcc,1
"test ebp, ebp  | * | mov dword ptr [ebp+0], 40h  ",gcc,1
"jz loc_406F8D  | * | mov [ebp+4], esi ",gcc,1
"mov dword ptr [ebp+0], 40h   | * | mov [ebp+8], eax ",gcc,1
"mov [ebp+4], esi  | * | mov eax, [ebx+20h] ",gcc,1
"mov [ebp+8], eax  | * | cmp eax, [ebx+24h] ",gcc,1
"cmp eax, [ebx+24h]  | * | loc_407108:  ",gcc,1
"jge loc_406F8D  | * | mov edx, [ebx+1Ch] ",gcc,1
"loc_407108:   | * | mov [edx+eax*4], ebp ",gcc,1
"mov edx, [ebx+1Ch]  | * | inc eax ",gcc,1
"mov [edx+eax*4], ebp  | * | mov [ebx+20h], eax ",gcc,1
inc eax  | * | jmp loc_406F8F ,gcc,1
"mov [ebx+20h], eax  | * | align 4 ",gcc,1
jmp loc_406F8F  | * | loc_407118:  ,gcc,1
"align 4  | * | mov ecx, [ebx+2Ch] ",gcc,1
"loc_407118:   | * | test ecx, ecx ",gcc,1
"mov ecx, [ebx+2Ch]  | * | jz short loc_40712A ",gcc,1
"test ecx, ecx  | * | mov esi, [ecx] ",gcc,1
"jz short loc_40712A  | * | test esi, esi ",gcc,1
"mov esi, [ecx]  | * | jz short loc_40719C ",gcc,1
"test esi, esi  | * | cmp esi, 16h ",gcc,1
jz short loc_40719C  | * | jz short loc_40719C ,gcc,1
"cmp esi, 16h  | * | loc_40712A:  ",gcc,1
"jz short loc_40719C  | * | cmp dl, 43h  ",gcc,1
loc_40712A:   | * | jz short loc_4071A6 ,gcc,1
"cmp dl, 43h   | * | cmp dl, 44h  ",gcc,1
jz short loc_4071A6  | * | jnz loc_406F8D ,gcc,1
"cmp dl, 44h   | * | mov dl, [eax+1] ",gcc,1
"jnz loc_406F8D  | * | cmp dl, 31h  ",gcc,1
"mov dl, [eax+1]  | * | jz loc_407230 ",gcc,1
"cmp dl, 31h   | * | jg loc_407203 ",gcc,1
"jz loc_407230  | * | cmp dl, 30h  ",gcc,1
jg loc_407203  | * | jnz loc_406F8D ,gcc,1
"cmp dl, 30h   | * | mov edx, 1 ",gcc,1
jnz loc_406F8D  | * | loc_407158:  ,gcc,1
"mov edx, 1  | * | add eax, 2 ",gcc,2
"loc_407158:   | * | mov [ebx+0Ch], eax ",gcc,1
"add eax, 2  | * | mov eax, [ebx+14h] ",gcc,2
"mov [ebx+0Ch], eax  | * | cmp eax, [ebx+18h] ",gcc,2
"mov eax, [ebx+14h]  | * | jge loc_406F8D ",gcc,2
"cmp eax, [ebx+18h]  | * | lea edi, [eax+eax*2] ",gcc,2
"jge loc_406F8D  | * | mov esi, [ebx+10h] ",gcc,2
"lea edi, [eax+eax*2]  | * | lea ebp, [esi+edi*4] ",gcc,2
"mov esi, [ebx+10h]  | * | inc eax ",gcc,2
"lea ebp, [esi+edi*4]  | * | mov [ebx+14h], eax ",gcc,2
"inc eax  | * | test ebp, ebp ",gcc,2
"mov [ebx+14h], eax  | * | jz loc_406F8D ",gcc,2
"test ebp, ebp  | * | test ecx, ecx ",gcc,2
jz loc_406F8D  | * | jz loc_406F8D ,gcc,2
"test ecx, ecx  | * | mov dword ptr [ebp+0], 8 ",gcc,1
"jz loc_406F8D  | * | mov [ebp+4], edx ",gcc,2
"mov dword ptr [ebp+0], 8  | * | mov [ebp+8], ecx ",gcc,1
"mov [ebp+4], edx  | * | jmp loc_406F8F ",gcc,2
"mov [ebp+8], ecx  | * | align 4 ",gcc,1
jmp loc_406F8F  | * | loc_40719C:  ,gcc,1
"align 4  | * | mov edx, [ecx+8] ",gcc,1
"loc_40719C:   | * | add [ebx+30h], edx ",gcc,1
"mov edx, [ecx+8]  | * | mov dl, [eax] ",gcc,1
"add [ebx+30h], edx  | * | jmp short loc_40712A ",gcc,1
"mov dl, [eax]  | * | loc_4071A6:  ",gcc,1
"jmp short loc_40712A  | * | mov dl, [eax+1] ",gcc,1
"loc_4071A6:   | * | cmp dl, 32h  ",gcc,1
"mov dl, [eax+1]  | * | jz loc_407241 ",gcc,1
"cmp dl, 32h   | * | jg short loc_40721B ",gcc,1
"jz loc_407241  | * | cmp dl, 31h  ",gcc,1
jg short loc_40721B  | * | jnz loc_406F8D ,gcc,1
"cmp dl, 31h   | * | mov edx, 1 ",gcc,1
jnz loc_406F8D  | * | loc_4071C2:  ,gcc,1
"loc_4071C2:   | * | mov [ebx+0Ch], eax ",gcc,1
"test ecx, ecx  | * | mov dword ptr [ebp+0], 7 ",gcc,1
"mov dword ptr [ebp+0], 7  | * | mov [ebp+8], ecx ",gcc,1
"mov [ebp+8], ecx  | * | loc_407203:  ",gcc,1
"jmp loc_406F8F  | * | cmp dl, 32h  ",gcc,1
loc_407203:   | * | jz short loc_40724B ,gcc,1
"cmp dl, 32h   | * | cmp dl, 35h  ",gcc,1
jz short loc_40724B  | * | jnz loc_406F8D ,gcc,1
"cmp dl, 35h   | * | mov edx, 4 ",gcc,2
jnz loc_406F8D  | * | jmp loc_407158 ,gcc,1
"mov edx, 4  | * | loc_40721B:  ",gcc,1
"jmp loc_407158  | * | cmp dl, 33h  ",gcc,1
loc_40721B:   | * | jz short loc_40723A ,gcc,1
"cmp dl, 33h   | * | cmp dl, 35h  ",gcc,1
jz short loc_40723A  | * | jnz loc_406F8D ,gcc,1
jnz loc_406F8D  | * | jmp short loc_4071C2 ,gcc,1
"mov edx, 4  | * | loc_407230:  ",gcc,1
"jmp short loc_4071C2  | * | mov edx, 2 ",gcc,2
loc_407230:   | * | jmp loc_407158 ,gcc,1
"mov edx, 2  | * | loc_40723A:  ",gcc,1
"jmp loc_407158  | * | mov edx, 3 ",gcc,1
loc_40723A:   | * | jmp short loc_4071C2 ,gcc,1
"mov edx, 3  | * | loc_407241:  ",gcc,1
loc_407241:   | * | jmp loc_4071C2 ,gcc,1
"mov edx, 2  | * | loc_40724B:  ",gcc,1
"jmp loc_4071C2  | * | mov edx, 3 ",gcc,1
loc_40724B:   | * | jmp loc_407158 ,gcc,1
"mov edx, 3  | * | _d_unqualified_name endp ",gcc,1
jmp loc_407158  | * | align 4 ,gcc,1
_d_unqualified_name endp  | * | _d_expression proc near  ,gcc,1
var_3C = dword ptr -3Ch  | * | var_20 = dword ptr -20h ,data,4
"sub esp, 2Ch  | * | mov edx, [eax+0Ch] ",gcc,1
"mov edx, [eax+0Ch]  | * | cmp al, 4Ch  ",gcc,1
"mov al, [edx]  | * | jz loc_4074B8 ",gcc,1
"cmp al, 4Ch   | * | cmp al, 54h  ",gcc,1
jz loc_4074B8  | * | jz loc_4074C8 ,gcc,1
"cmp al, 54h   | * | cmp al, 73h  ",gcc,1
jz loc_4074C8  | * | jz loc_407344 ,gcc,1
"cmp al, 73h   | * | cmp al, 66h  ",gcc,1
jz loc_407344  | * | jz short loc_4072FC ,gcc,1
"cmp al, 66h   | * | lea ecx, [eax-30h] ",gcc,1
"jz short loc_4072FC  | * | cmp cl, 9 ",gcc,1
"lea ecx, [eax-30h]  | * | ja short loc_4072B4 ",gcc,1
"cmp cl, 9  | * | loc_40728A:  ",gcc,1
"ja short loc_4072B4  | * | mov eax, ebx ",gcc,1
loc_40728A:   | * | call _d_unqualified_name ,gcc,1
"call _d_unqualified_name  | * | test eax, eax ",gcc,1
"mov esi, eax  | * | jz loc_407335 ",gcc,1
"test eax, eax  | * | mov eax, [ebx+0Ch] ",gcc,1
"jz loc_407335  | * | cmp byte ptr [eax], 49h  ",gcc,1
"mov eax, [ebx+0Ch]  | * | jz loc_407558 ",gcc,1
"cmp byte ptr [eax], 49h   | * | loc_4072A7:  ",gcc,1
"jz loc_407558  | * | mov eax, esi ",gcc,1
"loc_4072A7:   | * | add esp, 2Ch ",gcc,1
retn  | * | loc_4072B4:  ,gcc,1
"align 4  | * | cmp al, 6Fh  ",gcc,1
loc_4072B4:   | * | jz loc_4074A0 ,gcc,1
"cmp al, 6Fh   | * | cmp al, 69h  ",gcc,1
jz loc_4074A0  | * | jz loc_407577 ,gcc,1
"cmp al, 69h   | * | cmp al, 74h  ",gcc,1
jz loc_407577  | * | jnz short loc_407302 ,gcc,1
"cmp al, 74h   | * | cmp byte ptr [edx+1], 6Ch  ",gcc,1
jnz short loc_407302  | * | jnz short loc_407302 ,gcc,1
"cmp byte ptr [edx+1], 6Ch   | * | mov eax, ebx ",gcc,1
jnz short loc_407302  | * | call _d_type ,gcc,1
call _d_type  | * | loc_4072D7:  ,gcc,1
"mov esi, eax  | * | add dword ptr [ebx+0Ch], 2 ",gcc,1
"loc_4072D7:   | * | mov edx, 45h  ",gcc,1
"add dword ptr [ebx+0Ch], 2  | * | mov eax, ebx ",gcc,1
"mov edx, 45h   | * | call _d_exprlist ",gcc,4
"call _d_exprlist  | * | mov ecx, esi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 2Ch  ",gcc,1
"mov edx, 2Ch   | * | call _d_make_comp ",gcc,1
call _d_make_comp  | * | jmp short loc_4072A7 ,gcc,1
"mov esi, eax  | * | loc_4072FC:  ",gcc,1
"jmp short loc_4072A7  | * | cmp byte ptr [edx+1], 70h  ",gcc,1
loc_4072FC:   | * | jz short loc_40737C ,gcc,1
"cmp byte ptr [edx+1], 70h   | * | loc_407302:  ",gcc,1
"jz short loc_40737C  | * | mov eax, ebx ",gcc,1
loc_407302:   | * | call _d_operator_name ,gcc,1
"mov ebp, eax  | * | jz short loc_407335 ",gcc,1
"jz short loc_407335  | * | cmp eax, 2Dh  ",gcc,1
"mov eax, [eax]  | * | jz loc_4074D8 ",gcc,1
"cmp eax, 2Dh   | * | cmp eax, 2Eh  ",gcc,1
jz loc_4074D8  | * | jz loc_4073C0 ,gcc,1
"cmp eax, 2Eh   | * | cmp eax, 2Fh  ",gcc,1
jz loc_4073C0  | * | jz loc_407514 ,gcc,1
"cmp eax, 2Fh   | * | cmp eax, 2Dh  ",gcc,1
jz loc_407514  | * | jz loc_4075D4 ,gcc,1
"cmp eax, 2Dh   | * | loc_407335:  ",gcc,1
"jz loc_4075D4  | * | xor esi, esi ",gcc,1
"loc_407335:   | * | mov eax, esi ",gcc,1
"xor esi, esi  | * | add esp, 2Ch ",gcc,1
retn  | * | loc_407344:  ,gcc,1
"align 4  | * | mov al, [edx+1] ",gcc,1
"loc_407344:   | * | cmp al, 72h  ",gcc,1
"mov al, [edx+1]  | * | jz loc_407588 ",gcc,1
"cmp al, 72h   | * | cmp al, 70h  ",gcc,1
jz loc_407588  | * | jnz short loc_407302 ,gcc,1
"cmp al, 70h   | * | add edx, 2 ",gcc,1
"jnz short loc_407302  | * | mov [ebx+0Ch], edx ",gcc,1
"add edx, 2  | * | mov eax, ebx ",gcc,2
call _d_make_comp  | * | jmp loc_4072A7 ,gcc,7
"mov esi, eax  | * | loc_40737C:  ",gcc,1
"jmp loc_4072A7  | * | lea eax, [edx+2] ",gcc,1
"loc_40737C:   | * | mov [ebx+0Ch], eax ",gcc,1
"lea eax, [edx+2]  | * | cmp byte ptr [edx+2], 54h  ",gcc,1
"mov [ebx+0Ch], eax  | * | jz loc_4075C4 ",gcc,1
"cmp byte ptr [edx+2], 54h   | * | mov eax, ebx ",gcc,1
jz loc_4075C4  | * | call _d_compact_number ,gcc,1
"mov eax, ebx  | * | inc eax ",gcc,1
call _d_compact_number  | * | jz short loc_407335 ,gcc,1
inc eax  | * | loc_407396:  ,gcc,1
"jz short loc_407335  | * | mov edx, [ebx+14h] ",gcc,1
"loc_407396:   | * | cmp edx, [ebx+18h] ",gcc,1
"mov edx, [ebx+14h]  | * | jge short loc_407335 ",gcc,1
"jge short loc_407335  | * | mov ecx, [ebx+10h] ",gcc,1
"lea esi, [edx+edx*2]  | * | lea esi, [ecx+esi*4] ",gcc,1
"lea esi, [ecx+esi*4]  | * | mov [ebx+14h], edx ",gcc,1
"inc edx  | * | test esi, esi ",gcc,1
"mov [ebx+14h], edx  | * | jz short loc_407335 ",gcc,1
"test esi, esi  | * | mov dword ptr [esi], 6 ",gcc,1
"jz short loc_407335  | * | mov [esi+4], eax ",gcc,1
"mov dword ptr [esi], 6  | * | jmp loc_4072A7 ",gcc,1
"mov [esi+4], eax  | * | align 10h ",gcc,1
jmp loc_4072A7  | * | loc_4073C0:  ,gcc,1
"align 10h  | * | mov edx, [ebp+4] ",gcc,1
"loc_4073C0:   | * | mov [esp+3Ch+var_24], 0 ",gcc,1
"mov edx, [ebp+4]  | * | loc_4073CB:  ",gcc,1
"mov [esp+3Ch+var_24], 0  | * | cmp edx, 1 ",gcc,1
loc_4073CB:   | * | jz loc_407762 ,gcc,1
"cmp edx, 1  | * | jle loc_407688 ",gcc,1
"jz loc_407762  | * | cmp edx, 2 ",gcc,1
jle loc_407688  | * | jz loc_4075FC ,gcc,1
"cmp edx, 2  | * | cmp edx, 3 ",gcc,1
jz loc_4075FC  | * | jnz loc_407335 ,gcc,1
"cmp edx, 3  | * | mov edi, offset unk_414AEB ",gcc,1
"jnz loc_407335  | * | mov ecx, 3 ",gcc,1
"mov edi, offset unk_414AEB  | * | mov esi, [esp+3Ch+var_24] ",gcc,1
"mov ecx, 3  | * | repe cmpsb ",gcc,10
"mov esi, [esp+3Ch+var_24]  | * | jz loc_4076CB ",gcc,1
"repe cmpsb  | * | mov eax, [esp+3Ch+var_24] ",gcc,1
"jz loc_4076CB  | * | cmp byte ptr [eax], 6Eh  ",gcc,1
"mov eax, [esp+3Ch+var_24]  | * | jnz loc_407335 ",gcc,1
"cmp byte ptr [eax], 6Eh   | * | mov al, [eax+1] ",gcc,1
"jnz loc_407335  | * | cmp al, 77h  ",gcc,1
"mov al, [eax+1]  | * | jz short loc_40741E ",gcc,1
"cmp al, 77h   | * | cmp al, 61h  ",gcc,1
jz short loc_40741E  | * | jnz loc_407335 ,gcc,1
"cmp al, 61h   | * | loc_40741E:  ",gcc,1
"jnz loc_407335  | * | mov edx, 5Fh  ",gcc,1
"loc_40741E:   | * | mov eax, ebx ",gcc,1
"mov edx, 5Fh   | * | call _d_exprlist ",gcc,1
"call _d_exprlist  | * | mov eax, ebx ",gcc,1
"mov esi, eax  | * | call _d_type ",gcc,1
"call _d_type  | * | mov eax, [ebx+0Ch] ",gcc,1
"mov edi, eax  | * | mov dl, [eax] ",gcc,1
"mov eax, [ebx+0Ch]  | * | cmp dl, 45h  ",gcc,1
"mov dl, [eax]  | * | jz loc_407717 ",gcc,1
"cmp dl, 45h   | * | cmp dl, 70h  ",gcc,1
jz loc_407717  | * | jz loc_407741 ,gcc,1
"cmp dl, 70h   | * | cmp dl, 69h  ",gcc,1
jz loc_407741  | * | jnz loc_407335 ,gcc,1
"cmp dl, 69h   | * | cmp byte ptr [eax+1], 6Ch  ",gcc,1
jnz loc_407335  | * | jnz loc_407335 ,gcc,1
"cmp byte ptr [eax+1], 6Ch   | * | mov eax, ebx ",gcc,1
jnz loc_407335  | * | call _d_expression ,gcc,1
"mov eax, ebx  | * | loc_407466:  ",gcc,1
"call _d_expression  | * | mov [esp+3Ch+var_3C], eax ",gcc,2
"loc_407466:   | * | mov ecx, edi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 36h  ",gcc,1
"mov edx, 36h   | * | call _d_make_comp ",gcc,1
"call _d_make_comp  | * | mov ecx, esi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 35h  ",gcc,1
"mov edx, 35h   | * | call _d_make_comp ",gcc,1
"call _d_make_comp  | * | mov ecx, ebp ",gcc,2
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 34h  ",gcc,1
"mov edx, 34h   | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_4074A0:  ",gcc,1
"jmp loc_4072A7  | * | cmp byte ptr [edx+1], 6Eh  ",gcc,1
loc_4074A0:   | * | jnz loc_407302 ,gcc,1
"cmp byte ptr [edx+1], 6Eh   | * | add edx, 2 ",gcc,1
"jnz loc_407302  | * | mov [ebx+0Ch], edx ",gcc,1
"add edx, 2  | * | jmp loc_40728A ",gcc,1
jmp loc_40728A  | * | loc_4074B8:  ,gcc,1
"loc_4074B8:   | * | add esp, 2Ch ",gcc,1
pop edi  | * | jmp _d_expr_primary ,gcc,1
jmp _d_expr_primary  | * | loc_4074C8:  ,gcc,1
"loc_4074C8:   | * | add esp, 2Ch ",gcc,1
pop edi  | * | jmp _d_template_param ,gcc,1
jmp _d_template_param  | * | loc_4074D8:  ,gcc,1
"align 4  | * | mov edx, [ebp+4] ",gcc,2
"loc_4074D8:   | * | mov ecx, [edx] ",gcc,1
"mov edx, [ebp+4]  | * | mov [esp+3Ch+var_24], ecx ",gcc,1
"mov ecx, [edx]  | * | mov ecx, [edx+8] ",gcc,1
"mov [esp+3Ch+var_24], ecx  | * | sub ecx, 2 ",gcc,1
"mov ecx, [edx+8]  | * | add [ebx+30h], ecx ",gcc,1
"sub ecx, 2  | * | mov edi, offset unk_414ADF ",gcc,1
"add [ebx+30h], ecx  | * | mov ecx, 3 ",gcc,1
"mov edi, offset unk_414ADF  | * | mov esi, [esp+3Ch+var_24] ",gcc,1
"mov esi, [esp+3Ch+var_24]  | * | setnbe cl ",gcc,1
repe cmpsb  | * | setb byte ptr [esp+3Ch+var_20] ,gcc,1
"setnbe cl  | * | cmp cl, byte ptr [esp+3Ch+var_20] ",gcc,1
setb byte ptr [esp+3Ch+var_20]  | * | jz loc_4076AC ,gcc,1
"cmp cl, byte ptr [esp+3Ch+var_20]  | * | loc_40750C:  ",gcc,1
"jz loc_4076AC  | * | mov edx, [edx+0Ch] ",gcc,1
loc_40750C:   | * | jmp loc_4073CB ,gcc,1
"mov edx, [edx+0Ch]  | * | loc_407514:  ",gcc,1
"jmp loc_4073CB  | * | xor esi, esi ",gcc,1
loc_407514:   | * | loc_407516:  ,gcc,1
"xor esi, esi  | * | mov eax, [ebx+0Ch] ",gcc,1
"loc_407516:   | * | cmp byte ptr [eax], 5Fh  ",gcc,1
"mov eax, [ebx+0Ch]  | * | jz loc_4075E4 ",gcc,1
"cmp byte ptr [eax], 5Fh   | * | loc_407522:  ",gcc,1
"jz loc_4075E4  | * | mov eax, ebx ",gcc,1
loc_407522:   | * | call _d_expression ,gcc,1
"mov eax, ebx  | * | loc_407529:  ",gcc,1
"loc_407529:   | * | test esi, esi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | jz short loc_407541 ",gcc,1
"test esi, esi  | * | mov ecx, eax ",gcc,1
"jz short loc_407541  | * | mov edx, 33h  ",gcc,1
"mov edx, 33h   | * | call _d_make_comp ",gcc,2
call _d_make_comp  | * | loc_407541:  ,gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov ecx, ebp ",gcc,1
"loc_407541:   | * | mov edx, 31h  ",gcc,1
"mov esi, eax  | * | align 4 ",gcc,5
jmp loc_4072A7  | * | loc_407558:  ,gcc,1
loc_407558:   | * | call _d_template_args ,gcc,1
"call _d_template_args  | * | mov ecx, esi ",gcc,2
"mov esi, eax  | * | loc_407577:  ",gcc,1
"jmp loc_4072A7  | * | cmp byte ptr [edx+1], 6Ch  ",gcc,1
loc_407577:   | * | jnz loc_407302 ,gcc,1
"cmp byte ptr [edx+1], 6Ch   | * | xor esi, esi ",gcc,1
jnz loc_407302  | * | jmp loc_4072D7 ,gcc,1
"xor esi, esi  | * | loc_407588:  ",gcc,1
"jmp loc_4072D7  | * | add edx, 2 ",gcc,1
"loc_407588:   | * | mov [ebx+0Ch], edx ",gcc,1
"mov [ebx+0Ch], edx  | * | call _d_type ",gcc,2
"call _d_type  | * | mov eax, ebx ",gcc,1
"mov esi, eax  | * | call _d_unqualified_name ",gcc,1
"call _d_unqualified_name  | * | mov edx, [ebx+0Ch] ",gcc,1
"mov edi, eax  | * | cmp byte ptr [edx], 49h  ",gcc,1
"mov edx, [ebx+0Ch]  | * | jz loc_4076E9 ",gcc,1
"cmp byte ptr [edx], 49h   | * | mov [esp+3Ch+var_3C], eax ",gcc,1
jz loc_4076E9  | * | loc_4075AF:  ,gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov ecx, esi ",gcc,1
"loc_4075AF:   | * | mov edx, 1 ",gcc,1
"mov esi, eax  | * | loc_4075C4:  ",gcc,1
"jmp loc_4072A7  | * | add edx, 3 ",gcc,1
"loc_4075C4:   | * | mov [ebx+0Ch], edx ",gcc,1
"add edx, 3  | * | xor eax, eax ",gcc,1
"mov [ebx+0Ch], edx  | * | jmp loc_407396 ",gcc,1
jmp loc_407396  | * | loc_4075D4:  ,gcc,1
"loc_4075D4:   | * | mov [esp+3Ch+var_24], 0 ",gcc,1
"mov edx, [ebp+4]  | * | jmp loc_40750C ",gcc,1
"mov [esp+3Ch+var_24], 0  | * | loc_4075E4:  ",gcc,1
jmp loc_40750C  | * | inc eax ,gcc,1
"loc_4075E4:   | * | mov [ebx+0Ch], eax ",gcc,1
"inc eax  | * | mov edx, 45h  ",gcc,1
"mov [ebx+0Ch], eax  | * | mov eax, ebx ",gcc,3
"mov eax, ebx  | * | jmp loc_407529 ",gcc,1
call _d_exprlist  | * | align 4 ,gcc,1
jmp loc_407529  | * | loc_4075FC:  ,gcc,1
loc_4075FC:   | * | call _d_expression ,gcc,1
"call _d_expression  | * | mov edi, offset unk_414AE2 ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | mov ecx, 3 ",gcc,1
"mov edi, offset unk_414AE2  | * | mov esi, [esp+3Ch+var_24] ",gcc,1
"mov esi, [esp+3Ch+var_24]  | * | jz loc_4076BB ",gcc,1
"repe cmpsb  | * | mov edi, offset unk_414AE5 ",gcc,1
"jz loc_4076BB  | * | mov ecx, 3 ",gcc,1
"mov edi, offset unk_414AE5  | * | mov esi, [esp+3Ch+var_24] ",gcc,1
"mov esi, [esp+3Ch+var_24]  | * | jz short loc_407645 ",gcc,1
"repe cmpsb  | * | mov edi, offset unk_414AE8 ",gcc,1
"jz short loc_407645  | * | mov ecx, 3 ",gcc,1
"mov edi, offset unk_414AE8  | * | mov esi, [esp+3Ch+var_24] ",gcc,1
"mov esi, [esp+3Ch+var_24]  | * | jnz loc_407709 ",gcc,1
repe cmpsb  | * | loc_407645:  ,gcc,1
"jnz loc_407709  | * | mov eax, ebx ",gcc,1
loc_407645:   | * | call _d_unqualified_name ,gcc,1
"call _d_unqualified_name  | * | mov eax, [ebx+0Ch] ",gcc,1
"mov esi, eax  | * | cmp byte ptr [eax], 49h  ",gcc,1
"mov eax, [ebx+0Ch]  | * | jz loc_407722 ",gcc,1
"cmp byte ptr [eax], 49h   | * | loc_40765A:  ",gcc,1
"jz loc_407722  | * | mov [esp+3Ch+var_3C], esi ",gcc,1
"loc_40765A:   | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"mov [esp+3Ch+var_3C], esi  | * | mov edx, 33h  ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 32h  ",gcc,1
"mov edx, 32h   | * | call _d_make_comp ",gcc,1
jmp loc_4072A7  | * | loc_407688:  ,gcc,1
"align 4  | * | test edx, edx ",gcc,1
loc_407688:   | * | jnz loc_407335 ,gcc,1
"test edx, edx  | * | mov [esp+3Ch+var_3C], 0 ",gcc,1
"jnz loc_407335  | * | mov ecx, ebp ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 30h  ",gcc,1
"mov edx, 30h   | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_4076AC:  ",gcc,1
"jmp loc_4072A7  | * | mov eax, ebx ",gcc,1
loc_4076AC:   | * | call _d_type ,gcc,1
call _d_type  | * | jmp loc_407541 ,gcc,1
"mov [esp+3Ch+var_3C], eax  | * | loc_4076BB:  ",gcc,1
"jmp loc_407541  | * | mov edx, 45h  ",gcc,1
"loc_4076BB:   | * | mov eax, ebx ",gcc,1
call _d_exprlist  | * | jmp short loc_40765A ,gcc,1
"mov esi, eax  | * | loc_4076CB:  ",gcc,1
"jmp short loc_40765A  | * | mov eax, ebx ",gcc,1
loc_4076CB:   | * | call _d_expression ,gcc,1
"call _d_expression  | * | mov eax, ebx ",gcc,2
"mov esi, eax  | * | call _d_expression ",gcc,1
"mov edi, eax  | * | call _d_expression ",gcc,1
"mov eax, ebx  | * | jmp loc_407466 ",gcc,2
call _d_expression  | * | loc_4076E9:  ,gcc,1
"jmp loc_407466  | * | mov eax, ebx ",gcc,2
loc_4076E9:   | * | call _d_template_args ,gcc,1
"call _d_template_args  | * | mov ecx, edi ",gcc,1
call _d_make_comp  | * | jmp loc_4075AF ,gcc,1
"mov [esp+3Ch+var_3C], eax  | * | loc_407709:  ",gcc,1
"jmp loc_4075AF  | * | mov eax, ebx ",gcc,1
loc_407709:   | * | call _d_expression ,gcc,1
call _d_expression  | * | jmp loc_40765A ,gcc,1
"mov esi, eax  | * | loc_407717:  ",gcc,1
jmp loc_40765A  | * | inc eax ,gcc,1
"loc_407717:   | * | mov [ebx+0Ch], eax ",gcc,1
"inc eax  | * | xor eax, eax ",gcc,1
"mov [ebx+0Ch], eax  | * | jmp loc_407466 ",gcc,1
"xor eax, eax  | * | loc_407722:  ",gcc,1
loc_407722:   | * | call _d_template_args ,gcc,1
call _d_make_comp  | * | jmp loc_40765A ,gcc,1
"mov esi, eax  | * | loc_407741:  ",gcc,1
"jmp loc_40765A  | * | cmp byte ptr [eax+1], 69h  ",gcc,1
loc_407741:   | * | jnz loc_407335 ,gcc,1
"cmp byte ptr [eax+1], 69h   | * | add eax, 2 ",gcc,1
"jnz loc_407335  | * | mov [ebx+0Ch], eax ",gcc,1
"add eax, 2  | * | mov edx, 45h  ",gcc,1
call _d_exprlist  | * | loc_407762:  ,gcc,1
"jmp loc_407466  | * | xor esi, esi ",gcc,1
"loc_407762:   | * | cmp [esp+3Ch+var_24], 0 ",gcc,1
"xor esi, esi  | * | jz short loc_40777B ",gcc,1
"cmp [esp+3Ch+var_24], 0  | * | mov ecx, [esp+3Ch+var_24] ",gcc,1
"jz short loc_40777B  | * | mov dl, [ecx] ",gcc,1
"mov ecx, [esp+3Ch+var_24]  | * | cmp dl, 70h  ",gcc,1
"mov dl, [ecx]  | * | jz short loc_40778C ",gcc,1
"cmp dl, 70h   | * | cmp dl, 6Dh  ",gcc,1
jz short loc_40778C  | * | jz short loc_40778C ,gcc,1
"cmp dl, 6Dh   | * | loc_40777B:  ",gcc,1
"jz short loc_40778C  | * | cmp eax, 2Fh  ",gcc,1
loc_40777B:   | * | jnz loc_407522 ,gcc,1
"cmp eax, 2Fh   | * | jmp loc_407516 ",gcc,1
jnz loc_407522  | * | align 4 ,gcc,1
jmp loc_407516  | * | loc_40778C:  ,gcc,1
"align 4  | * | mov ecx, [esp+3Ch+var_24] ",gcc,1
"loc_40778C:   | * | cmp dl, [ecx+1] ",gcc,1
"mov ecx, [esp+3Ch+var_24]  | * | jz short loc_407799 ",gcc,1
"cmp dl, [ecx+1]  | * | xor esi, esi ",gcc,1
jz short loc_407799  | * | jmp short loc_40777B ,gcc,1
"xor esi, esi  | * | loc_407799:  ",gcc,1
"jmp short loc_40777B  | * | mov edx, [ebx+0Ch] ",gcc,1
"loc_407799:   | * | cmp byte ptr [edx], 5Fh  ",gcc,1
"mov edx, [ebx+0Ch]  | * | jz short loc_4077A8 ",gcc,1
"cmp byte ptr [edx], 5Fh   | * | mov esi, 1 ",gcc,1
jz short loc_4077A8  | * | jmp short loc_40777B ,gcc,1
"mov esi, 1  | * | loc_4077A8:  ",gcc,1
jmp short loc_40777B  | * | inc edx ,gcc,1
"loc_4077A8:   | * | mov [ebx+0Ch], edx ",gcc,1
"inc edx  | * | xor esi, esi ",gcc,1
"mov [ebx+0Ch], edx  | * | jmp short loc_40777B ",gcc,1
"xor esi, esi  | * | _d_expression endp ",gcc,1
jmp short loc_40777B  | * | _d_exprlist proc near  ,gcc,1
"sub esp, 20h  | * | mov edi, edx ",gcc,1
"mov ebx, eax  | * | mov [esp+2Ch+var_10], 0 ",gcc,1
"mov edi, edx  | * | mov eax, [eax+0Ch] ",gcc,1
"mov [esp+2Ch+var_10], 0  | * | lea esi, [esp+2Ch+var_10] ",gcc,1
"mov eax, [eax+0Ch]  | * | cmp [eax], dl ",gcc,1
"lea esi, [esp+2Ch+var_10]  | * | jz short loc_407820 ",gcc,1
"cmp [eax], dl  | * | lea esi, [esi+0] ",gcc,1
jz short loc_407820  | * | loc_4077D0:  ,gcc,1
loc_4077D0:   | * | call _d_expression ,gcc,1
call _d_expression  | * | jz short loc_407814 ,gcc,1
"jz short loc_407814  | * | mov ecx, eax ",gcc,1
"mov [esi], eax  | * | jz short loc_407814 ",gcc,1
"jz short loc_407814  | * | mov eax, [ebx+0Ch] ",gcc,1
"lea esi, [eax+8]  | * | mov edx, edi ",gcc,1
"mov eax, [ebx+0Ch]  | * | cmp [eax], dl ",gcc,1
"mov edx, edi  | * | jnz short loc_4077D0 ",gcc,1
"cmp [eax], dl  | * | inc eax ",gcc,1
"jnz short loc_4077D0  | * | mov [ebx+0Ch], eax ",gcc,1
"inc eax  | * | mov eax, [esp+2Ch+var_10] ",gcc,1
"mov [ebx+0Ch], eax  | * | loc_40780A:  ",gcc,1
"mov eax, [esp+2Ch+var_10]  | * | add esp, 20h ",gcc,1
loc_40780A:   | * | pop ebx ,gcc,1
retn  | * | loc_407814:  ,gcc,1
"loc_407814:   | * | add esp, 20h ",gcc,1
pop edi  | * | align 10h ,gcc,3
retn  | * | loc_407820:  ,gcc,1
"loc_407820:   | * | mov [ebx+0Ch], eax ",gcc,1
"inc eax  | * | mov [esp+2Ch+var_2C], 0 ",gcc,1
"mov [ebx+0Ch], eax  | * | xor ecx, ecx ",gcc,1
"mov eax, ebx  | * | jmp short loc_40780A ",gcc,1
call _d_make_comp  | * | _d_exprlist endp ,gcc,1
jmp short loc_40780A  | * | align 4 ,gcc,1
_d_exprlist endp  | * | _d_bare_function_type proc near  ,gcc,1
_d_bare_function_type proc near   | * | push esi ,gcc,1
"sub esp, 14h  | * | mov eax, [eax+0Ch] ",gcc,1
"mov ebx, eax  | * | cmp byte ptr [eax], 4Ah  ",gcc,1
"mov eax, [eax+0Ch]  | * | jz short loc_407874 ",gcc,1
"cmp byte ptr [eax], 4Ah   | * | test edx, edx ",gcc,1
jz short loc_407874  | * | jnz short loc_407878 ,gcc,1
"test edx, edx  | * | xor esi, esi ",gcc,1
jnz short loc_407878  | * | loc_407851:  ,gcc,1
"xor esi, esi  | * | mov eax, ebx ",gcc,1
loc_407851:   | * | call _d_parmlist ,gcc,1
call _d_parmlist  | * | jz short loc_407888 ,gcc,1
"test eax, eax  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"jz short loc_407888  | * | mov ecx, esi ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | mov edx, 25h  ",gcc,1
"mov edx, 25h   | * | call _d_make_comp ",gcc,1
"mov eax, ebx  | * | loc_40786D:  ",gcc,1
"call _d_make_comp  | * | add esp, 14h ",gcc,1
loc_40786D:   | * | pop ebx ,gcc,1
retn  | * | loc_407874:  ,gcc,1
"loc_407874:   | * | mov [ebx+0Ch], eax ",gcc,1
inc eax  | * | loc_407878:  ,gcc,1
loc_407878:   | * | call _d_type ,gcc,1
"mov esi, eax  | * | jnz short loc_407851 ",gcc,1
"test eax, eax  | * | lea esi, [esi+0] ",gcc,1
jnz short loc_407851  | * | loc_407888:  ,gcc,1
"lea esi, [esi+0]  | * | xor eax, eax ",gcc,1
loc_407888:   | * | jmp short loc_40786D ,gcc,1
"xor eax, eax  | * | _d_bare_function_type endp ",gcc,1
jmp short loc_40786D  | * | _d_encoding proc near  ,gcc,1
"mov ebx, eax  | * | mov cl, [eax] ",gcc,1
"mov eax, [eax+0Ch]  | * | cmp cl, 47h  ",gcc,1
"mov cl, [eax]  | * | jz loc_407950 ",gcc,1
"cmp cl, 47h   | * | cmp cl, 54h  ",gcc,1
jz loc_407950  | * | jz loc_407950 ,gcc,1
"cmp cl, 54h   | * | mov eax, ebx ",gcc,1
"jz loc_407950  | * | mov [esp+3Ch+var_24], edx ",gcc,1
"mov eax, ebx  | * | call _d_name ",gcc,1
"mov [esp+3Ch+var_24], edx  | * | mov esi, eax ",gcc,1
"mov esi, eax  | * | mov edx, [esp+3Ch+var_24] ",gcc,1
"test eax, eax  | * | jz short loc_407910 ",gcc,1
"mov edx, [esp+3Ch+var_24]  | * | test edx, edx ",gcc,1
jz short loc_407910  | * | jz short loc_4078CB ,gcc,1
"test edx, edx  | * | test byte ptr [ebx+8], 1 ",gcc,1
jz short loc_4078CB  | * | jz short loc_40791F ,gcc,1
"test byte ptr [ebx+8], 1  | * | loc_4078CB:  ",gcc,1
"jz short loc_40791F  | * | mov eax, [ebx+0Ch] ",gcc,1
"loc_4078CB:   | * | mov al, [eax] ",gcc,1
"mov eax, [ebx+0Ch]  | * | test al, al ",gcc,1
"mov al, [eax]  | * | jz short loc_407910 ",gcc,1
jz short loc_407910  | * | jz short loc_407910 ,gcc,1
"cmp al, 45h   | * | mov eax, esi ",gcc,1
jz short loc_407910  | * | loc_4078DA:  ,gcc,1
"mov eax, esi  | * | mov edx, [eax] ",gcc,1
"loc_4078DA:   | * | cmp edx, 4 ",gcc,1
"mov edx, [eax]  | * | jz loc_4079D4 ",gcc,1
"cmp edx, 4  | * | jb short loc_4078F3  ",gcc,1
"jz loc_4079D4  | * | sub edx, 1Ah ",gcc,1
"jb short loc_4078F3   | * | cmp edx, 2 ",gcc,1
"sub edx, 1Ah  | * | jbe loc_40799C ",gcc,1
"cmp edx, 2  | * | loc_4078F3:  ",gcc,1
"jbe loc_40799C  | * | xor edx, edx  ",gcc,1
loc_4078F3:   | * | loc_4078F5:  ,gcc,1
"xor edx, edx   | * | mov eax, ebx ",gcc,1
loc_4078F5:   | * | call _d_bare_function_type ,gcc,1
"call _d_bare_function_type  | * | mov ecx, esi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 3 ",gcc,1
"mov edx, 3  | * | call _d_make_comp ",gcc,1
call _d_make_comp  | * | nop ,gcc,1
"mov esi, eax  | * | loc_407910:  ",gcc,1
"nop  | * | mov eax, esi ",gcc,1
"loc_407910:   | * | add esp, 2Ch ",gcc,1
retn  | * | loc_40791C:  ,gcc,1
"align 4  | * | mov esi, [esi+4] ",gcc,1
loc_40791C:   | * | loc_40791F:  ,gcc,1
"mov esi, [esi+4]  | * | mov eax, [esi] ",gcc,1
"loc_40791F:   | * | lea edx, [eax-1Ah] ",gcc,1
"mov eax, [esi]  | * | cmp edx, 2 ",gcc,1
"lea edx, [eax-1Ah]  | * | jbe short loc_40791C ",gcc,1
"cmp edx, 2  | * | cmp eax, 2 ",gcc,1
jbe short loc_40791C  | * | jnz short loc_407910 ,gcc,1
"cmp eax, 2  | * | mov eax, [esi+8] ",gcc,1
"jnz short loc_407910  | * | mov edx, [eax] ",gcc,1
"mov eax, [esi+8]  | * | sub edx, 1Ah ",gcc,1
"mov edx, [eax]  | * | cmp edx, 2 ",gcc,4
"sub edx, 1Ah  | * | ja short loc_407949 ",gcc,1
"cmp edx, 2  | * | nop ",gcc,1
ja short loc_407949  | * | loc_40793C:  ,gcc,1
"nop  | * | mov eax, [eax+4] ",gcc,1
"loc_40793C:   | * | mov edx, [eax] ",gcc,1
"mov eax, [eax+4]  | * | sub edx, 1Ah ",gcc,2
"sub edx, 1Ah  | * | jbe short loc_40793C ",gcc,1
"cmp edx, 2  | * | loc_407949:  ",gcc,1
"jbe short loc_40793C  | * | mov [esi+8], eax ",gcc,1
loc_407949:   | * | jmp short loc_407910 ,gcc,1
"mov [esi+8], eax  | * | align 10h ",gcc,1
jmp short loc_407910  | * | loc_407950:  ,gcc,1
"align 10h  | * | mov ecx, [ebx+30h] ",gcc,1
"loc_407950:   | * | lea edx, [ecx+14h] ",gcc,1
"mov ecx, [ebx+30h]  | * | mov [ebx+30h], edx ",gcc,1
"lea edx, [ecx+14h]  | * | mov dl, [eax] ",gcc,1
"mov [ebx+30h], edx  | * | cmp dl, 54h  ",gcc,1
"mov dl, [eax]  | * | jz short loc_4079AC ",gcc,1
"cmp dl, 54h   | * | cmp dl, 47h  ",gcc,1
jz short loc_4079AC  | * | jz short loc_407974 ,gcc,1
"cmp dl, 47h   | * | def_407992:  ",gcc,1
"jz short loc_407974  | * | xor esi, esi  ",gcc,1
def_407992:   | * | loc_407967:  ,gcc,1
"xor esi, esi   | * | mov eax, esi ",gcc,1
"loc_407967:   | * | add esp, 2Ch ",gcc,1
retn  | * | loc_407974:  ,gcc,1
"loc_407974:   | * | mov [ebx+0Ch], edx ",gcc,1
"mov [ebx+0Ch], edx  | * | test dl, dl ",gcc,2
"mov dl, [eax+1]  | * | jz short def_407992  ",gcc,2
"test dl, dl  | * | lea ecx, [eax+2] ",gcc,1
"jz short def_407992   | * | mov [ebx+0Ch], ecx ",gcc,1
"lea ecx, [eax+2]  | * | sub edx, 41h  ",gcc,1
"mov [ebx+0Ch], ecx  | * | cmp dl, 31h ",gcc,1
"sub edx, 41h   | * | ja short def_407992  ",gcc,1
"cmp dl, 31h  | * | movzx edx, dl ",gcc,1
ja short def_407992   | * | jmp ds:jpt_407992[edx*4]  ,gcc,1
jmp ds:jpt_407992[edx*4]   | * | loc_40799C:  ,gcc,1
"loc_40799C:   | * | test eax, eax ",gcc,1
"mov eax, [eax+4]  | * | jnz loc_4078DA ",gcc,1
"test eax, eax  | * | jmp loc_4078F3  ",gcc,1
jnz loc_4078DA  | * | loc_4079AC:  ,gcc,1
"jmp loc_4078F3   | * | lea edx, [eax+1] ",gcc,1
"loc_4079AC:   | * | mov [ebx+0Ch], edx ",gcc,1
"jz short def_407992   | * | mov [ebx+0Ch], eax ",gcc,1
"add eax, 2  | * | sub edx, 43h  ",gcc,1
"mov [ebx+0Ch], eax  | * | cmp dl, 33h ",gcc,1
"sub edx, 43h   | * | ja short def_407992  ",gcc,1
"cmp dl, 33h  | * | movzx edx, dl ",gcc,1
ja short def_407992   | * | jmp ds:jpt_4079CA[edx*4]  ,gcc,1
jmp ds:jpt_4079CA[edx*4]   | * | loc_4079D4:  ,gcc,1
"loc_4079D4:   | * | test eax, eax ",gcc,1
"mov eax, [eax+4]  | * | jz short def_4079EE  ",gcc,1
"test eax, eax  | * | loc_4079DB:  ",gcc,1
"jz short def_4079EE   | * | cmp dword ptr [eax], 2Fh  ",gcc,1
loc_4079DB:   | * | jbe short loc_4079EC ,gcc,1
"cmp dword ptr [eax], 2Fh   | * | def_4079EE:  ",gcc,1
"jbe short loc_4079EC  | * | mov edx, 1  ",gcc,1
def_4079EE:   | * | jmp loc_4078F5 ,gcc,1
"mov edx, 1   | * | align 4 ",gcc,1
jmp loc_4078F5  | * | loc_4079EC:  ,gcc,1
loc_4079EC:   | * | jmp ds:jpt_4079EE[edx*4]  ,gcc,1
"mov edx, [eax]  | * | align 4 ",gcc,1
jmp ds:jpt_4079EE[edx*4]   | * | loc_4079F8:  ,gcc,1
"align 4  | * | mov eax, [eax+8]  ",gcc,1
"loc_4079F8:   | * | test eax, eax ",gcc,1
"mov eax, [eax+8]   | * | jnz short loc_4079DB ",gcc,1
"test eax, eax  | * | jmp short def_4079EE  ",gcc,1
jnz short loc_4079DB  | * | align 4 ,gcc,1
jmp short def_4079EE   | * | loc_407A04:  ,gcc,1
"align 4  | * | lea eax, [ebx+0Ch]  ",gcc,1
loc_407A04:   | * | call _d_number_isra_0 ,gcc,1
"lea eax, [ebx+0Ch]   | * | cmp eax, 1 ",gcc,1
call _d_number_isra_0  | * | jle def_407992  ,gcc,1
"cmp eax, 1  | * | mov edi, [ebx+0Ch] ",gcc,1
"jle def_407992   | * | mov dl, [edi] ",gcc,1
"mov edi, [ebx+0Ch]  | * | test dl, dl ",gcc,1
"mov dl, [edi]  | * | jz def_407992  ",gcc,1
"test dl, dl  | * | inc edi ",gcc,1
"jz def_407992   | * | mov [ebx+0Ch], edi ",gcc,1
"inc edi  | * | cmp dl, 5Fh  ",gcc,1
"mov [ebx+0Ch], edi  | * | jnz def_407992  ",gcc,1
"cmp dl, 5Fh   | * | lea ebp, [eax-1] ",gcc,1
"jnz def_407992   | * | mov [esp+3Ch+var_20], 0 ",gcc,1
"lea ebp, [eax-1]  | * | xchg ax, ax ",gcc,1
"mov [esp+3Ch+var_20], 0  | * | loc_407A3C:  ",gcc,1
"xchg ax, ax  | * | mov al, [edi] ",gcc,1
"loc_407A3C:   | * | test al, al ",gcc,1
"mov al, [edi]  | * | jz def_407992  ",gcc,1
"test al, al  | * | cmp al, 24h  ",gcc,2
jz def_407992   | * | jz loc_407D5C ,gcc,1
"cmp al, 24h   | * | xor esi, esi ",gcc,1
jz loc_407D5C  | * | loc_407A50:  ,gcc,1
"xor esi, esi  | * | mov al, [edi+esi] ",gcc,1
"loc_407A50:   | * | test al, al ",gcc,1
"mov al, [edi+esi]  | * | jz short loc_407A60 ",gcc,1
jz short loc_407A60  | * | jz short loc_407A60 ,gcc,1
"cmp al, 24h   | * | inc esi ",gcc,1
"jz short loc_407A60  | * | cmp esi, ebp ",gcc,1
inc esi  | * | jl short loc_407A50 ,gcc,1
"cmp esi, ebp  | * | loc_407A60:  ",gcc,1
"jl short loc_407A50  | * | mov ecx, esi ",gcc,1
"loc_407A60:   | * | mov edx, edi ",gcc,1
"mov edx, edi  | * | call _d_make_name ",gcc,1
"mov eax, ebx  | * | mov edi, [ebx+0Ch] ",gcc,1
"call _d_make_name  | * | add edi, esi ",gcc,1
"mov edi, [ebx+0Ch]  | * | mov [ebx+0Ch], edi ",gcc,2
"add edi, esi  | * | sub ebp, esi ",gcc,1
"mov [ebx+0Ch], edi  | * | test eax, eax ",gcc,1
"sub ebp, esi  | * | jz def_407992  ",gcc,1
"test eax, eax  | * | loc_407A7D:  ",gcc,1
"jz def_407992   | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"loc_407A7D:   | * | test ecx, ecx ",gcc,1
"mov ecx, [esp+3Ch+var_20]  | * | jz loc_407DAC ",gcc,1
"test ecx, ecx  | * | mov [esp+3Ch+var_3C], eax ",gcc,1
"jz loc_407DAC  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 3Ah  ",gcc,1
"mov edx, 3Ah   | * | call _d_make_comp ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | jz def_407992  ",gcc,1
"test eax, eax  | * | loc_407AA8:  ",gcc,1
"jz def_407992   | * | test ebp, ebp ",gcc,1
loc_407AA8:   | * | jg short loc_407A3C ,gcc,1
"test ebp, ebp  | * | mov [esp+3Ch+var_3C], 0 ",gcc,1
"jg short loc_407A3C  | * | mov ecx, [esp+3Ch+var_20] ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 39h  ",gcc,1
"mov edx, 39h   | * | call _d_make_comp ",gcc,1
call _d_make_comp  | * | jmp loc_407910 ,gcc,16
jmp loc_407910  | * | loc_407ACC:  ,gcc,1
"align 4  | * | mov eax, ebx  ",gcc,1
loc_407ACC:   | * | call _d_name ,gcc,1
"call _d_name  | * | mov ecx, eax ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 13h ",gcc,1
"mov edx, 13h  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407AEF:  ",gcc,1
"jmp loc_407910  | * | mov eax, ebx  ",gcc,6
loc_407AEF:   | * | call _d_name ,gcc,1
"mov eax, ebx   | * | mov esi, eax ",gcc,2
"call _d_name  | * | mov eax, ebx ",gcc,1
"mov esi, eax  | * | call _d_number_component ",gcc,1
"call _d_number_component  | * | mov ecx, esi ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov edx, 14h ",gcc,1
"mov edx, 14h  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407B17:  ",gcc,1
"jmp loc_407910  | * | xor edx, edx  ",gcc,2
"loc_407B17:   | * | mov eax, ebx ",gcc,1
"xor edx, edx   | * | call _d_encoding ",gcc,1
"call _d_encoding  | * | mov ecx, eax ",gcc,6
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 15h ",gcc,1
"mov edx, 15h  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407B3C:  ",gcc,1
"jmp loc_407910  | * | mov dl, [eax+2]  ",gcc,1
"loc_407B3C:   | * | test dl, dl ",gcc,1
"mov dl, [eax+2]   | * | jz short loc_407B52 ",gcc,1
"test dl, dl  | * | add eax, 3 ",gcc,1
"jz short loc_407B52  | * | mov [ebx+0Ch], eax ",gcc,1
"add eax, 3  | * | cmp dl, 6Eh  ",gcc,1
"mov [ebx+0Ch], eax  | * | jz loc_407DB5 ",gcc,1
"cmp dl, 6Eh   | * | loc_407B52:  ",gcc,1
"jz loc_407DB5  | * | xor edx, edx ",gcc,1
"loc_407B52:   | * | mov eax, ebx ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 43h  ",gcc,1
"mov edx, 43h   | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407B77:  ",gcc,1
loc_407B77:   | * | call _d_type ,gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 0Eh ",gcc,1
"mov edx, 0Eh  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407B9A:  ",gcc,1
loc_407B9A:   | * | call _d_type ,gcc,1
"call _d_type  | * | lea eax, [ebx+0Ch] ",gcc,1
"mov esi, eax  | * | call _d_number_isra_0 ",gcc,1
"lea eax, [ebx+0Ch]  | * | test eax, eax ",gcc,1
call _d_number_isra_0  | * | js def_407992  ,gcc,1
"js def_407992   | * | cmp byte ptr [edx], 5Fh  ",gcc,1
"mov edx, [ebx+0Ch]  | * | jnz def_407992  ",gcc,1
"cmp byte ptr [edx], 5Fh   | * | inc edx ",gcc,1
"jnz def_407992   | * | mov [ebx+0Ch], edx ",gcc,1
"mov eax, ebx  | * | add dword ptr [ebx+30h], 5 ",gcc,1
"call _d_type  | * | mov [esp+3Ch+var_3C], esi ",gcc,1
"add dword ptr [ebx+30h], 5  | * | mov ecx, eax ",gcc,1
"mov [esp+3Ch+var_3C], esi  | * | mov edx, 0Bh ",gcc,1
"mov edx, 0Bh  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407BE6:  ",gcc,1
"jmp loc_407910  | * | mov edx, 76h  ",gcc,1
"loc_407BE6:   | * | mov eax, ebx ",gcc,1
"mov edx, 76h   | * | call _d_call_offset ",gcc,1
call _d_call_offset  | * | jz def_407992  ,gcc,4
"jz def_407992   | * | mov eax, ebx ",gcc,4
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 10h ",gcc,1
"mov edx, 10h  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407C1F:  ",gcc,1
"jmp loc_407910  | * | mov edx, 68h  ",gcc,1
"loc_407C1F:   | * | mov eax, ebx ",gcc,1
"mov edx, 68h   | * | call _d_call_offset ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 0Fh ",gcc,1
"mov edx, 0Fh  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407C58:  ",gcc,1
"loc_407C58:   | * | mov eax, ebx ",gcc,1
"xor edx, edx   | * | call _d_call_offset ",gcc,1
"xor edx, edx  | * | call _d_call_offset ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 11h ",gcc,1
"mov edx, 11h  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407C9F:  ",gcc,1
"jmp loc_407910  | * | add ecx, 0Fh  ",gcc,1
"loc_407C9F:   | * | mov [ebx+30h], ecx ",gcc,1
"add ecx, 0Fh   | * | mov eax, ebx ",gcc,1
"mov [ebx+30h], ecx  | * | call _d_type ",gcc,2
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 9 ",gcc,1
"mov edx, 9  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407CC8:  ",gcc,1
"jmp loc_407910  | * | add ecx, 0Ah  ",gcc,1
"loc_407CC8:   | * | mov [ebx+30h], ecx ",gcc,1
"add ecx, 0Ah   | * | mov eax, ebx ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 0Ah ",gcc,1
"mov edx, 0Ah  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407CF1:  ",gcc,1
loc_407CF1:   | * | call _d_type ,gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 0Dh ",gcc,1
"mov edx, 0Dh  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407D14:  ",gcc,1
loc_407D14:   | * | call _d_type ,gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 12h ",gcc,1
"mov edx, 12h  | * | call _d_make_comp ",gcc,1
"mov esi, eax  | * | loc_407D37:  ",gcc,1
loc_407D37:   | * | call _d_type ,gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 0Ch ",gcc,1
"mov edx, 0Ch  | * | call _d_make_comp ",gcc,1
jmp loc_407910  | * | loc_407D5C:  ,gcc,1
"align 4  | * | mov al, [edi+1] ",gcc,1
"loc_407D5C:   | * | cmp al, 53h  ",gcc,1
"mov al, [edi+1]  | * | jz loc_407DEE ",gcc,1
"cmp al, 53h   | * | cmp al, 5Fh  ",gcc,1
jz loc_407DEE  | * | jz short loc_407DE7 ,gcc,1
jz short loc_407DE7  | * | jnz def_407992  ,gcc,1
"cmp al, 24h   | * | mov ecx, 24h  ",gcc,1
jnz def_407992   | * | loc_407D78:  ,gcc,1
"mov ecx, 24h   | * | mov edx, [ebx+14h] ",gcc,1
"loc_407D78:   | * | cmp edx, [ebx+18h] ",gcc,1
"mov edx, [ebx+14h]  | * | jge short loc_407DDC ",gcc,1
"jge short loc_407DDC  | * | mov eax, [ebx+10h] ",gcc,1
"mov [ebx+14h], edx  | * | jz short loc_407DDC ",gcc,1
"test eax, eax  | * | mov dword ptr [eax], 3Bh  ",gcc,1
"jz short loc_407DDC  | * | mov [eax+4], ecx ",gcc,1
"mov dword ptr [eax], 3Bh   | * | mov edi, [ebx+0Ch] ",gcc,1
"mov [eax+4], ecx  | * | add edi, 2 ",gcc,1
"add edi, 2  | * | sub ebp, 2 ",gcc,1
"mov [ebx+0Ch], edi  | * | jmp loc_407A7D ",gcc,1
"sub ebp, 2  | * | align 4 ",gcc,1
jmp loc_407A7D  | * | loc_407DAC:  ,gcc,1
"align 4  | * | mov [esp+3Ch+var_20], eax ",gcc,1
loc_407DAC:   | * | jmp loc_407AA8 ,gcc,1
"mov [esp+3Ch+var_20], eax  | * | loc_407DB5:  ",gcc,1
"jmp loc_407AA8  | * | xor edx, edx ",gcc,1
"loc_407DB5:   | * | mov eax, ebx ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, 44h  ",gcc,1
"mov edx, 44h   | * | call _d_make_comp ",gcc,1
jmp loc_407910  | * | loc_407DDC:  ,gcc,1
"align 4  | * | add dword ptr [ebx+0Ch], 2 ",gcc,1
"loc_407DDC:   | * | xor esi, esi ",gcc,1
"add dword ptr [ebx+0Ch], 2  | * | jmp loc_407967 ",gcc,1
"xor esi, esi  | * | loc_407DE7:  ",gcc,1
"jmp loc_407967  | * | mov ecx, 2Eh  ",gcc,1
loc_407DE7:   | * | jmp short loc_407D78 ,gcc,1
"mov ecx, 2Eh   | * | loc_407DEE:  ",gcc,1
"jmp short loc_407D78  | * | mov ecx, 2Fh  ",gcc,1
loc_407DEE:   | * | jmp short loc_407D78 ,gcc,1
"mov ecx, 2Fh   | * | _d_encoding endp ",gcc,1
jmp short loc_407D78  | * | align 4 ,gcc,1
_d_encoding endp  | * | _d_growable_string_callback_adapter proc near ,gcc,1
var_2C = dword ptr -2Ch  | * | arg_0 = dword ptr 4 ,data,1
var_28 = dword ptr -28h  | * | arg_4 = dword ptr 8 ,data,1
"push ebx  | * | mov ebp, [esp+2Ch+arg_4] ",gcc,1
"sub esp, 1Ch  | * | mov ebx, [esp+2Ch+arg_8] ",gcc,1
"mov ebp, [esp+2Ch+arg_4]  | * | mov eax, [ebx+4] ",gcc,1
"mov ebx, [esp+2Ch+arg_8]  | * | lea eax, [ebp+eax+1] ",gcc,1
"mov eax, [ebx+4]  | * | mov esi, [ebx+8] ",gcc,1
"lea eax, [ebp+eax+1]  | * | cmp eax, esi ",gcc,1
"mov esi, [ebx+8]  | * | ja short loc_407E48 ",gcc,1
"cmp eax, esi  | * | loc_407E15:  ",gcc,1
"ja short loc_407E48  | * | mov esi, [ebx+0Ch] ",gcc,1
"loc_407E15:   | * | test esi, esi ",gcc,1
"mov esi, [ebx+0Ch]  | * | jz short loc_407E24 ",gcc,1
"test esi, esi  | * | loc_407E1C:  ",gcc,1
"jz short loc_407E24  | * | add esp, 1Ch ",gcc,1
loc_407E1C:   | * | pop ebx ,gcc,1
pop ebp  | * | loc_407E24:  ,gcc,1
"retn  | * | mov eax, [ebx] ",gcc,1
"loc_407E24:   | * | add eax, [ebx+4] ",gcc,1
"mov eax, [ebx]  | * | mov edi, eax ",gcc,1
"add eax, [ebx+4]  | * | mov esi, [esp+2Ch+arg_0] ",gcc,1
"mov edi, eax  | * | mov ecx, ebp ",gcc,1
"mov esi, [esp+2Ch+arg_0]  | * | rep movsb ",gcc,1
"mov ecx, ebp  | * | mov eax, [ebx] ",gcc,1
"rep movsb  | * | add eax, ebp ",gcc,1
"mov eax, [ebx]  | * | add eax, [ebx+4] ",gcc,1
"add eax, ebp  | * | mov byte ptr [eax], 0 ",gcc,1
"add eax, [ebx+4]  | * | add [ebx+4], ebp ",gcc,1
"mov byte ptr [eax], 0  | * | add esp, 1Ch ",gcc,1
"add [ebx+4], ebp  | * | pop ebx ",gcc,1
pop ebp  | * | loc_407E48:  ,gcc,1
"retn  | * | mov edi, [ebx+0Ch] ",gcc,1
"loc_407E48:   | * | test edi, edi ",gcc,1
"mov edi, [ebx+0Ch]  | * | jnz short loc_407E1C ",gcc,1
"test edi, edi  | * | test esi, esi ",gcc,1
jnz short loc_407E1C  | * | jnz short loc_407E60 ,gcc,1
"test esi, esi  | * | mov esi, 2 ",gcc,1
"jnz short loc_407E60  | * | cmp eax, 2 ",gcc,1
"mov esi, 2  | * | jbe short loc_407E66 ",gcc,1
"cmp eax, 2  | * | lea esi, [esi+0] ",gcc,1
jbe short loc_407E66  | * | loc_407E60:  ,gcc,1
"lea esi, [esi+0]  | * | shl esi, 1 ",gcc,1
"loc_407E60:   | * | cmp eax, esi ",gcc,1
"shl esi, 1  | * | ja short loc_407E60 ",gcc,1
"cmp eax, esi  | * | loc_407E66:  ",gcc,1
"ja short loc_407E60  | * | mov [esp+2Ch+var_28], esi  ",gcc,1
"loc_407E66:   | * | mov eax, [ebx] ",gcc,1
"mov [esp+2Ch+var_28], esi   | * | mov [esp+2Ch+var_2C], eax  ",gcc,1
"mov eax, [ebx]  | * | call _realloc ",gcc,1
call _realloc  | * | jz short loc_407E7F ,gcc,1
"test eax, eax  | * | mov [ebx], eax ",gcc,1
"jz short loc_407E7F  | * | mov [ebx+8], esi ",gcc,1
"mov [ebx], eax  | * | jmp short loc_407E15 ",gcc,1
"mov [ebx+8], esi  | * | loc_407E7F:  ",gcc,1
"jmp short loc_407E15  | * | mov eax, [ebx] ",gcc,1
"loc_407E7F:   | * | mov [esp+2Ch+var_2C], eax  ",gcc,1
"mov eax, [ebx]  | * | call _free ",gcc,1
"mov [esp+2Ch+var_2C], eax   | * | mov dword ptr [ebx], 0 ",gcc,1
"call _free  | * | mov dword ptr [ebx+4], 0 ",gcc,1
"mov dword ptr [ebx], 0  | * | mov dword ptr [ebx+8], 0 ",gcc,1
"mov dword ptr [ebx+4], 0  | * | mov dword ptr [ebx+0Ch], 1 ",gcc,1
"mov dword ptr [ebx+8], 0  | * | jmp loc_407E1C ",gcc,1
"mov dword ptr [ebx+0Ch], 1  | * | _d_growable_string_callback_adapter endp ",gcc,1
jmp loc_407E1C  | * | align 4 ,gcc,1
_d_growable_string_callback_adapter endp  | * | _d_print_comp proc near  ,gcc,1
var_AC = dword ptr -0ACh  | * | var_A4 = dword ptr -0A4h ,data,2
var_A8 = dword ptr -0A8h  | * | var_94 = dword ptr -94h ,data,1
var_A4 = dword ptr -0A4h  | * | var_90 = dword ptr -90h ,data,1
var_94 = dword ptr -94h  | * | var_8C = dword ptr -8Ch ,data,1
var_90 = dword ptr -90h  | * | var_88 = dword ptr -88h ,data,1
var_8C = dword ptr -8Ch  | * | var_84 = dword ptr -84h ,data,1
var_88 = dword ptr -88h  | * | var_80 = dword ptr -80h ,data,1
var_84 = dword ptr -84h  | * | var_7C = dword ptr -7Ch ,data,1
var_80 = dword ptr -80h  | * | var_78 = dword ptr -78h ,data,1
var_7C = dword ptr -7Ch  | * | var_74 = dword ptr -74h ,data,1
var_78 = dword ptr -78h  | * | var_70 = dword ptr -70h ,data,2
var_74 = dword ptr -74h  | * | var_64 = dword ptr -64h ,data,1
var_70 = dword ptr -70h  | * | var_60 = dword ptr -60h ,data,1
var_64 = dword ptr -64h  | * | var_5C = byte ptr -5Ch ,data,1
var_60 = dword ptr -60h  | * | var_58 = dword ptr -58h ,data,2
var_5C = byte ptr -5Ch  | * | var_54 = dword ptr -54h ,data,1
var_58 = dword ptr -58h  | * | var_50 = dword ptr -50h ,data,1
var_54 = dword ptr -54h  | * | var_4C = byte ptr -4Ch ,data,1
var_50 = dword ptr -50h  | * | var_1C = byte ptr -1Ch ,data,1
"push esi  | * | sub esp, 9Ch ",gcc,1
"push ebx  | * | mov ebp, eax ",gcc,1
"sub esp, 9Ch  | * | mov [esp+0ACh+var_8C], edx ",gcc,1
"mov ebp, eax  | * | mov [esp+0ACh+var_90], ecx ",gcc,1
"mov [esp+0ACh+var_8C], edx  | * | test ecx, ecx ",gcc,1
"mov [esp+0ACh+var_90], ecx  | * | jz short loc_407EF8 ",gcc,1
"test ecx, ecx  | * | mov eax, [eax+118h] ",gcc,1
"jz short loc_407EF8  | * | test eax, eax ",gcc,1
"mov eax, [eax+118h]  | * | jnz short def_40A961  ",gcc,1
"test eax, eax  | * | mov ecx, [esp+0ACh+var_90] ",gcc,2
"jnz short def_40A961   | * | mov eax, [ecx] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | cmp eax, 46h  ",gcc,1
"mov eax, [ecx]  | * | jbe short loc_407EF0 ",gcc,1
"cmp eax, 46h   | * | def_407EF0:  ",gcc,1
"jbe short loc_407EF0  | * | mov dword ptr [ebp+118h], 1  ",gcc,1
def_407EF0:   | * | nop ,gcc,1
"mov dword ptr [ebp+118h], 1   | * | def_40A961:  ",gcc,1
"nop  | * | add esp, 9Ch  ",gcc,1
def_40A961:   | * | pop ebx ,gcc,1
"add esp, 9Ch   | * | pop esi ",gcc,1
retn  | * | loc_407EF0:  ,gcc,1
align 10h  | * | jmp ds:jpt_407EF0[eax*4]  ,gcc,1
loc_407EF0:   | * | align 4 ,gcc,1
jmp ds:jpt_407EF0[eax*4]   | * | loc_407EF8:  ,gcc,1
"align 4  | * | mov dword ptr [eax+118h], 1 ",gcc,1
"loc_407EF8:   | * | add esp, 9Ch ",gcc,1
"mov dword ptr [eax+118h], 1  | * | pop ebx ",gcc,1
"add esp, 9Ch  | * | pop esi ",gcc,1
pop ebp  | * | loc_407F0D:  ,gcc,1
"retn  | * | mov esi, [ebp+114h]  ",gcc,1
loc_407F0D:   | * | loc_407F13:  ,gcc,1
"mov esi, [ebp+114h]   | * | mov dword ptr [esp+0ACh+var_5C], esi ",gcc,1
"loc_407F13:   | * | lea eax, [esp+0ACh+var_5C] ",gcc,1
"mov dword ptr [esp+0ACh+var_5C], esi  | * | mov [ebp+114h], eax ",gcc,1
"lea eax, [esp+0ACh+var_5C]  | * | mov ecx, [esp+0ACh+var_90] ",gcc,3
"mov [ebp+114h], eax  | * | mov [esp+0ACh+var_58], ecx ",gcc,4
"mov ecx, [esp+0ACh+var_90]  | * | mov [esp+0ACh+var_54], 0 ",gcc,4
"mov [esp+0ACh+var_58], ecx  | * | mov eax, [ebp+110h] ",gcc,4
"mov [esp+0ACh+var_54], 0  | * | mov [esp+0ACh+var_50], eax ",gcc,5
"mov eax, [ebp+110h]  | * | loc_407F3B:  ",gcc,1
"mov [esp+0ACh+var_50], eax  | * | mov eax, [esp+0ACh+var_90] ",gcc,1
"loc_407F3B:   | * | mov ecx, [eax+4] ",gcc,1
"mov eax, [esp+0ACh+var_90]  | * | loc_407F42:  ",gcc,1
"mov ecx, [eax+4]  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"loc_407F42:   | * | mov eax, ebp ",gcc,1
"mov edx, [esp+0ACh+var_8C]  | * | call _d_print_comp ",gcc,56
"mov eax, ebp  | * | mov edx, [esp+0ACh+var_54] ",gcc,1
"call _d_print_comp  | * | test edx, edx ",gcc,1
"mov edx, [esp+0ACh+var_54]  | * | jnz short loc_407F64 ",gcc,1
"test edx, edx  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"jnz short loc_407F64  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov eax, ebp ",gcc,6
"mov edx, [esp+0ACh+var_8C]  | * | call _d_print_mod ",gcc,3
"mov eax, ebp  | * | loc_407F64:  ",gcc,1
"call _d_print_mod  | * | mov eax, dword ptr [esp+0ACh+var_5C] ",gcc,2
"loc_407F64:   | * | mov [ebp+114h], eax ",gcc,1
"mov eax, dword ptr [esp+0ACh+var_5C]  | * | jmp def_40A961  ",gcc,2
"mov [ebp+114h], eax  | * | loc_407F73:  ",gcc,1
"jmp def_40A961   | * | mov ecx, [esp+0ACh+var_90]  ",gcc,10
"loc_407F73:   | * | mov edx, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | mov eax, ebp ",gcc,1
"mov edx, [ecx+4]  | * | call _d_find_pack ",gcc,1
"mov eax, ebp  | * | xor edi, edi ",gcc,1
"call _d_find_pack  | * | test eax, eax ",gcc,1
"xor edi, edi  | * | jz loc_40AE05 ",gcc,1
jz loc_40AE05  | * | loc_407F8C:  ,gcc,1
"nop  | * | cmp dword ptr [eax], 2Bh  ",gcc,1
loc_407F8C:   | * | jnz loc_409EA2 ,gcc,1
"cmp dword ptr [eax], 2Bh   | * | mov edx, [eax+4] ",gcc,1
"jnz loc_409EA2  | * | test edx, edx ",gcc,1
"mov edx, [eax+4]  | * | jz loc_409EA2 ",gcc,1
"test edx, edx  | * | inc edi ",gcc,1
"jz loc_409EA2  | * | mov eax, [eax+8] ",gcc,1
"inc edi  | * | test eax, eax ",gcc,1
"mov eax, [eax+8]  | * | jnz short loc_407F8C ",gcc,1
"jnz short loc_407F8C  | * | mov ecx, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov [esp+0ACh+var_90], ecx ",gcc,2
"mov ecx, [ecx+4]  | * | loc_407FB3:  ",gcc,1
"mov [esp+0ACh+var_90], ecx  | * | lea esi, [edi-1] ",gcc,1
"loc_407FB3:   | * | mov [esp+0ACh+var_88], esi ",gcc,1
"lea esi, [edi-1]  | * | xor ebx, ebx ",gcc,1
"mov [esp+0ACh+var_88], esi  | * | jmp short loc_407FC9 ",gcc,1
jmp short loc_407FC9  | * | loc_407FC0:  ,gcc,1
align 10h  | * | inc ebx ,gcc,1
"loc_407FC0:   | * | cmp ebx, edi ",gcc,1
inc ebx  | * | jz def_40A961  ,gcc,8
"cmp ebx, edi  | * | loc_407FC9:  ",gcc,1
"jz def_40A961   | * | mov [ebp+11Ch], ebx ",gcc,1
"loc_407FC9:   | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"mov [ebp+11Ch], ebx  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov eax, ebp  | * | cmp [esp+0ACh+var_88], ebx ",gcc,1
call _d_print_comp  | * | jle short loc_407FC0 ,gcc,1
"cmp [esp+0ACh+var_88], ebx  | * | mov eax, [ebp+100h] ",gcc,1
"jle short loc_407FC0  | * | mov esi, offset asc_414E95  ",gcc,1
"mov eax, [ebp+100h]  | * | mov [esp+0ACh+var_84], ebx ",gcc,1
"mov esi, offset asc_414E95   | * | jmp short loc_408018 ",gcc,1
"mov [esp+0ACh+var_84], ebx  | * | align 4 ",gcc,1
jmp short loc_408018  | * | loc_407FF8:  ,gcc,1
"align 4  | * | mov ecx, eax ",gcc,19
loc_407FF8:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_407FFB:  ",gcc,1
"inc eax  | * | mov [ebp+ecx+0], bl ",gcc,1
"loc_407FFB:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+ecx+0], bl  | * | mov [ebp+104h], bl ",gcc,1
"mov [ebp+100h], eax  | * | inc esi ",gcc,2
"mov [ebp+104h], bl  | * | cmp esi, (offset asc_414E95+2)  ",gcc,1
inc esi  | * | jz loc_40985C ,gcc,1
"cmp esi, (offset asc_414E95+2)   | * | loc_408018:  ",gcc,1
"jz loc_40985C  | * | mov bl, [esi] ",gcc,1
"loc_408018:   | * | cmp eax, 0FFh ",gcc,1
"mov bl, [esi]  | * | jnz short loc_407FF8 ",gcc,1
"cmp eax, 0FFh  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,44
"jnz short loc_407FF8  | * | mov eax, [ebp+10Ch] ",gcc,1
"mov byte ptr [ebp+0FFh], 0  | * | mov [esp+0ACh+var_A4], eax ",gcc,71
"mov eax, [ebp+10Ch]  | * | mov [esp+0ACh+var_A8], 0FFh ",gcc,71
"mov [esp+0ACh+var_A4], eax  | * | mov [esp+0ACh+var_AC], ebp ",gcc,72
"mov [esp+0ACh+var_A8], 0FFh  | * | call dword ptr [ebp+108h] ",gcc,32
"mov [esp+0ACh+var_AC], ebp  | * | inc dword ptr [ebp+120h] ",gcc,31
"call dword ptr [ebp+108h]  | * | mov eax, 1 ",gcc,45
"inc dword ptr [ebp+120h]  | * | xor ecx, ecx ",gcc,39
"mov eax, 1  | * | jmp short loc_407FFB ",gcc,1
"xor ecx, ecx  | * | loc_408052:  ",gcc,1
"jmp short loc_407FFB  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408052:   | * | mov ebx, offset aTransactionClo  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408080 ",gcc,1
"mov ebx, offset aTransactionClo   | * | align 10h ",gcc,1
jmp short loc_408080  | * | loc_408060:  ,gcc,1
"align 10h  | * | mov ecx, eax ",gcc,25
loc_408060:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408063:  ",gcc,1
"inc eax  | * | mov [ebp+ecx+0], dl ",gcc,38
"loc_408063:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+ecx+0], dl  | * | mov [ebp+104h], dl ",gcc,38
"mov [ebp+100h], eax  | * | inc ebx ",gcc,38
"mov [ebp+104h], dl  | * | cmp ebx, 414E65h ",gcc,1
inc ebx  | * | jz loc_409CF0 ,gcc,1
"cmp ebx, 414E65h  | * | loc_408080:  ",gcc,1
"jz loc_409CF0  | * | mov dl, [ebx] ",gcc,1
"loc_408080:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408060 ",gcc,1
"jnz short loc_408060  | * | mov eax, [ebp+10Ch] ",gcc,1
"mov [esp+0ACh+var_A8], 0FFh  | * | mov byte ptr [esp+0ACh+var_94], dl ",gcc,38
"mov [esp+0ACh+var_AC], ebp  | * | call dword ptr [ebp+108h] ",gcc,41
"mov byte ptr [esp+0ACh+var_94], dl  | * | inc dword ptr [ebp+120h] ",gcc,38
"mov eax, 1  | * | mov dl, byte ptr [esp+0ACh+var_94] ",gcc,38
"xor ecx, ecx  | * | jmp short loc_408063 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4080C2:  ",gcc,1
"jmp short loc_408063  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4080C2:   | * | mov ebx, offset aNonTransaction  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_4080F0 ",gcc,1
"mov ebx, offset aNonTransaction   | * | align 10h ",gcc,1
jmp short loc_4080F0  | * | loc_4080D0:  ,gcc,1
loc_4080D0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4080D3:  ",gcc,1
"loc_4080D3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E80h ",gcc,1
inc ebx  | * | jz loc_409D1E ,gcc,1
"cmp ebx, 414E80h  | * | loc_4080F0:  ",gcc,1
"jz loc_409D1E  | * | mov dl, [ebx] ",gcc,1
"loc_4080F0:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4080D0 ",gcc,1
"jnz short loc_4080D0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4080D3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408132:  ",gcc,1
"jmp short loc_4080D3  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408132:   | * | mov ebx, offset aGlobalConstruc  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408160 ",gcc,1
"mov ebx, offset aGlobalConstruc   | * | align 10h ",gcc,1
jmp short loc_408160  | * | loc_408140:  ,gcc,1
loc_408140:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408143:  ",gcc,1
"loc_408143:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414F1Dh ",gcc,1
inc ebx  | * | jz loc_409D07 ,gcc,1
"cmp ebx, 414F1Dh  | * | loc_408160:  ",gcc,1
"jz loc_409D07  | * | mov dl, [ebx] ",gcc,1
"loc_408160:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408140 ",gcc,1
"jnz short loc_408140  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408143 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4081A2:  ",gcc,1
"jmp short loc_408143  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4081A2:   | * | mov ebx, offset aGlobalDestruct  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_4081D0 ",gcc,1
"mov ebx, offset aGlobalDestruct   | * | align 10h ",gcc,1
jmp short loc_4081D0  | * | loc_4081B0:  ,gcc,1
loc_4081B0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4081B3:  ",gcc,1
"loc_4081B3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414F3Ah ",gcc,1
inc ebx  | * | jz loc_409D35 ,gcc,1
"cmp ebx, 414F3Ah  | * | loc_4081D0:  ",gcc,1
"jz loc_409D35  | * | mov dl, [ebx] ",gcc,1
"loc_4081D0:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4081B0 ",gcc,1
"jnz short loc_4081B0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4081B3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408212:  ",gcc,1
"jmp short loc_4081B3  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408212:   | * | mov ebx, offset aLambda  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408240 ",gcc,1
"mov ebx, offset aLambda   | * | align 10h ",gcc,1
jmp short loc_408240  | * | loc_408220:  ,gcc,1
loc_408220:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408223:  ",gcc,1
"loc_408223:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414F43h ",gcc,1
inc ebx  | * | jz loc_409B03 ,gcc,1
"cmp ebx, 414F43h  | * | loc_408240:  ",gcc,1
"jz loc_409B03  | * | mov dl, [ebx] ",gcc,1
"loc_408240:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408220 ",gcc,1
"jnz short loc_408220  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408223 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408282:  ",gcc,1
"jmp short loc_408223  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408282:   | * | mov ebx, offset aUnnamedType  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_4082B0 ",gcc,1
"mov ebx, offset aUnnamedType   | * | align 10h ",gcc,1
jmp short loc_4082B0  | * | loc_408290:  ,gcc,1
loc_408290:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408293:  ",gcc,1
"loc_408293:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414F55h ",gcc,1
inc ebx  | * | jz loc_409A4F ,gcc,1
"cmp ebx, 414F55h  | * | loc_4082B0:  ",gcc,1
"jz loc_409A4F  | * | mov dl, [ebx] ",gcc,1
"loc_4082B0:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408290 ",gcc,1
"jnz short loc_408290  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408293 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4082F2:  ",gcc,1
"jmp short loc_408293  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4082F2:   | * | mov ebx, offset aVtableFor  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408320 ",gcc,1
"mov ebx, offset aVtableFor   | * | align 10h ",gcc,1
jmp short loc_408320  | * | loc_408300:  ,gcc,1
loc_408300:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408303:  ",gcc,1
"loc_408303:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414D60h ",gcc,1
inc ebx  | * | jz loc_409A38 ,gcc,1
"cmp ebx, 414D60h  | * | loc_408320:  ",gcc,1
"jz loc_409A38  | * | mov dl, [ebx] ",gcc,1
"loc_408320:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408300 ",gcc,1
"jnz short loc_408300  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408303 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408362:  ",gcc,1
"jmp short loc_408303  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408362:   | * | mov ebx, offset aVttFor  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408390 ",gcc,1
"mov ebx, offset aVttFor   | * | align 10h ",gcc,1
jmp short loc_408390  | * | loc_408370:  ,gcc,1
loc_408370:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408373:  ",gcc,1
"loc_408373:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414D69h ",gcc,1
inc ebx  | * | jz loc_409A21 ,gcc,1
"cmp ebx, 414D69h  | * | loc_408390:  ",gcc,1
"jz loc_409A21  | * | mov dl, [ebx] ",gcc,1
"loc_408390:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408370 ",gcc,1
"jnz short loc_408370  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408373 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4083D2:  ",gcc,1
"jmp short loc_408373  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4083D2:   | * | mov ebx, offset aConstructionVt  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408400 ",gcc,1
"mov ebx, offset aConstructionVt   | * | align 10h ",gcc,1
jmp short loc_408400  | * | loc_4083E0:  ,gcc,1
loc_4083E0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4083E3:  ",gcc,1
"loc_4083E3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414D82h ",gcc,1
inc ebx  | * | jz loc_40998B ,gcc,1
"cmp ebx, 414D82h  | * | loc_408400:  ",gcc,1
"jz loc_40998B  | * | mov dl, [ebx] ",gcc,1
"loc_408400:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4083E0 ",gcc,1
"jnz short loc_4083E0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4083E3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408442:  ",gcc,1
"jmp short loc_4083E3  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408442:   | * | mov ebx, offset aTypeinfoFor  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408470 ",gcc,1
"mov ebx, offset aTypeinfoFor   | * | align 10h ",gcc,1
jmp short loc_408470  | * | loc_408450:  ,gcc,1
loc_408450:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408453:  ",gcc,1
"loc_408453:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414D95h ",gcc,1
inc ebx  | * | jz loc_409974 ,gcc,1
"cmp ebx, 414D95h  | * | loc_408470:  ",gcc,1
"jz loc_409974  | * | mov dl, [ebx] ",gcc,1
"loc_408470:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408450 ",gcc,1
"jnz short loc_408450  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408453 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4084B2:  ",gcc,1
"jmp short loc_408453  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4084B2:   | * | mov ebx, offset aTypeinfoNameFo  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_4084E0 ",gcc,1
"mov ebx, offset aTypeinfoNameFo   | * | align 10h ",gcc,1
jmp short loc_4084E0  | * | loc_4084C0:  ,gcc,1
loc_4084C0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4084C3:  ",gcc,1
"loc_4084C3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414DA8h ",gcc,1
inc ebx  | * | jz loc_40995D ,gcc,1
"cmp ebx, 414DA8h  | * | loc_4084E0:  ",gcc,1
"jz loc_40995D  | * | mov dl, [ebx] ",gcc,1
"loc_4084E0:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4084C0 ",gcc,1
"jnz short loc_4084C0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4084C3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408522:  ",gcc,1
"jmp short loc_4084C3  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408522:   | * | mov ebx, offset aTypeinfoFnFor  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408550 ",gcc,1
"mov ebx, offset aTypeinfoFnFor   | * | align 10h ",gcc,1
jmp short loc_408550  | * | loc_408530:  ,gcc,1
loc_408530:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408533:  ",gcc,1
"loc_408533:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414DB9h ",gcc,1
inc ebx  | * | jz loc_409946 ,gcc,1
"cmp ebx, 414DB9h  | * | loc_408550:  ",gcc,1
"jz loc_409946  | * | mov dl, [ebx] ",gcc,1
"loc_408550:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408530 ",gcc,1
"jnz short loc_408530  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408533 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408592:  ",gcc,1
"jmp short loc_408533  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408592:   | * | mov ebx, offset aNonVirtualThun  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_4085C0 ",gcc,1
"mov ebx, offset aNonVirtualThun   | * | align 10h ",gcc,1
jmp short loc_4085C0  | * | loc_4085A0:  ,gcc,1
loc_4085A0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4085A3:  ",gcc,1
"loc_4085A3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414DCFh ",gcc,1
inc ebx  | * | jz loc_40992F ,gcc,1
"cmp ebx, 414DCFh  | * | loc_4085C0:  ",gcc,1
"jz loc_40992F  | * | mov dl, [ebx] ",gcc,1
"loc_4085C0:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4085A0 ",gcc,1
"jnz short loc_4085A0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4085A3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408602:  ",gcc,1
"jmp short loc_4085A3  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408602:   | * | mov ebx, offset aVirtualThunkTo  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408630 ",gcc,1
"mov ebx, offset aVirtualThunkTo   | * | align 10h ",gcc,1
jmp short loc_408630  | * | loc_408610:  ,gcc,1
loc_408610:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408613:  ",gcc,1
"loc_408613:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414DE1h ",gcc,1
inc ebx  | * | jz loc_409D91 ,gcc,1
"cmp ebx, 414DE1h  | * | loc_408630:  ",gcc,1
"jz loc_409D91  | * | mov dl, [ebx] ",gcc,1
"loc_408630:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408610 ",gcc,1
"jnz short loc_408610  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408613 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408672:  ",gcc,1
"jmp short loc_408613  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408672:   | * | mov ebx, offset aCovariantRetur  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_4086A0 ",gcc,1
"mov ebx, offset aCovariantRetur   | * | align 10h ",gcc,1
jmp short loc_4086A0  | * | loc_408680:  ,gcc,1
loc_408680:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408683:  ",gcc,1
"loc_408683:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414DFCh ",gcc,1
inc ebx  | * | jz loc_409D7A ,gcc,1
"cmp ebx, 414DFCh  | * | loc_4086A0:  ",gcc,1
"jz loc_409D7A  | * | mov dl, [ebx] ",gcc,1
"loc_4086A0:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408680 ",gcc,1
"jnz short loc_408680  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408683 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4086E2:  ",gcc,1
"jmp short loc_408683  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4086E2:   | * | mov ebx, offset aJavaClassFor  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408710 ",gcc,1
"mov ebx, offset aJavaClassFor   | * | align 10h ",gcc,1
jmp short loc_408710  | * | loc_4086F0:  ,gcc,1
loc_4086F0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4086F3:  ",gcc,1
"loc_4086F3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E0Ch ",gcc,1
inc ebx  | * | jz loc_409D63 ,gcc,1
"cmp ebx, 414E0Ch  | * | loc_408710:  ",gcc,1
"jz loc_409D63  | * | mov dl, [ebx] ",gcc,1
"loc_408710:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4086F0 ",gcc,1
"jnz short loc_4086F0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4086F3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408752:  ",gcc,1
"jmp short loc_4086F3  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408752:   | * | mov ebx, offset aGuardVariableF  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408780 ",gcc,1
"mov ebx, offset aGuardVariableF   | * | align 10h ",gcc,1
jmp short loc_408780  | * | loc_408760:  ,gcc,1
loc_408760:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408763:  ",gcc,1
"loc_408763:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E20h ",gcc,1
inc ebx  | * | jz loc_409D4C ,gcc,1
"cmp ebx, 414E20h  | * | loc_408780:  ",gcc,1
"jz loc_409D4C  | * | mov dl, [ebx] ",gcc,1
"loc_408780:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408760 ",gcc,1
"jnz short loc_408760  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408763 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4087C2:  ",gcc,1
"jmp short loc_408763  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4087C2:   | * | mov ebx, offset aReferenceTempo  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_4087F0 ",gcc,1
"mov ebx, offset aReferenceTempo   | * | align 10h ",gcc,1
jmp short loc_4087F0  | * | loc_4087D0:  ,gcc,1
loc_4087D0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4087D3:  ",gcc,1
"loc_4087D3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E36h ",gcc,1
inc ebx  | * | jz loc_409DBF ,gcc,1
"cmp ebx, 414E36h  | * | loc_4087F0:  ",gcc,1
"jz loc_409DBF  | * | mov dl, [ebx] ",gcc,1
"loc_4087F0:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4087D0 ",gcc,1
"jnz short loc_4087D0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4087D3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408832:  ",gcc,1
"jmp short loc_4087D3  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_408832:   | * | mov ebx, offset aHiddenAliasFor  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_408860 ",gcc,1
"mov ebx, offset aHiddenAliasFor   | * | align 10h ",gcc,1
jmp short loc_408860  | * | loc_408840:  ,gcc,1
loc_408840:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408843:  ",gcc,1
"loc_408843:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E4Eh ",gcc,1
inc ebx  | * | jz loc_409DA8 ,gcc,1
"cmp ebx, 414E4Eh  | * | loc_408860:  ",gcc,1
"jz loc_409DA8  | * | mov dl, [ebx] ",gcc,1
"loc_408860:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408840 ",gcc,1
"jnz short loc_408840  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408843 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4088A2:  ",gcc,1
"jmp short loc_408843  | * | mov ecx, [esp+0ACh+var_90]  ",gcc,1
"loc_4088A2:   | * | mov esi, [ecx+8] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | mov edi, [ecx+4] ",gcc,1
"mov esi, [ecx+8]  | * | test esi, esi ",gcc,2
"mov edi, [ecx+4]  | * | jz def_40A961  ",gcc,2
"test esi, esi  | * | mov eax, [ebp+100h] ",gcc,4
"jz def_40A961   | * | xor ebx, ebx ",gcc,4
"mov eax, [ebp+100h]  | * | jmp short loc_4088DC ",gcc,1
jmp short loc_4088DC  | * | loc_4088C0:  ,gcc,1
loc_4088C0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4088C3:  ",gcc,1
"loc_4088C3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp esi, ebx ",gcc,4
"cmp esi, ebx  | * | loc_4088DC:  ",gcc,1
"jz def_40A961   | * | mov dl, [edi+ebx] ",gcc,4
"loc_4088DC:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [edi+ebx]  | * | jnz short loc_4088C0 ",gcc,1
"jnz short loc_4088C0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4088C3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_40891F:  ",gcc,1
"jmp short loc_4088C3  | * | mov esi, [ebp+114h]  ",gcc,1
"loc_40891F:   | * | test esi, esi ",gcc,1
"mov esi, [ebp+114h]   | * | jz loc_407F13 ",gcc,1
"test esi, esi  | * | mov edx, esi ",gcc,1
jz loc_407F13  | * | jmp short loc_40893E ,gcc,1
"mov edx, esi  | * | align 4 ",gcc,1
jmp short loc_40893E  | * | loc_408934:  ,gcc,1
"align 4  | * | mov edx, [edx] ",gcc,1
"loc_408934:   | * | test edx, edx ",gcc,1
"mov edx, [edx]  | * | jz loc_407F13 ",gcc,1
"test edx, edx  | * | loc_40893E:  ",gcc,1
"jz loc_407F13  | * | mov ecx, [edx+8] ",gcc,1
"loc_40893E:   | * | test ecx, ecx ",gcc,1
"mov ecx, [edx+8]  | * | jnz short loc_408934 ",gcc,1
"test ecx, ecx  | * | mov ecx, [edx+4] ",gcc,1
"jnz short loc_408934  | * | mov ecx, [ecx] ",gcc,1
"mov ecx, [edx+4]  | * | lea ebx, [ecx-17h] ",gcc,1
"mov ecx, [ecx]  | * | cmp ebx, 2 ",gcc,1
"lea ebx, [ecx-17h]  | * | ja loc_407F13 ",gcc,1
"cmp ebx, 2  | * | cmp eax, ecx ",gcc,1
ja loc_407F13  | * | jnz short loc_408934 ,gcc,1
"cmp eax, ecx  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"jnz short loc_408934  | * | mov ecx, [esi+4] ",gcc,1
"mov esi, [esp+0ACh+var_90]  | * | mov edx, [esp+0ACh+var_8C] ",gcc,18
"mov ecx, [esi+4]  | * | mov eax, ebp ",gcc,14
"mov eax, ebp  | * | jmp def_40A961  ",gcc,45
call _d_print_comp  | * | loc_408971:  ,gcc,1
"jmp def_40A961   | * | test byte ptr [esp+0ACh+var_8C], 20h  ",gcc,1
loc_408971:   | * | jnz loc_40A416 ,gcc,1
"test byte ptr [esp+0ACh+var_8C], 20h   | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"jnz loc_40A416  | * | cmp dword ptr [ecx+4], 0 ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | jz short loc_408991 ",gcc,1
"cmp dword ptr [ecx+4], 0  | * | test byte ptr [esp+0ACh+var_8C], 40h ",gcc,1
jz short loc_408991  | * | jz loc_40A7BD ,gcc,1
"test byte ptr [esp+0ACh+var_8C], 40h  | * | loc_408991:  ",gcc,1
"jz loc_40A7BD  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_408991:   | * | add ecx, 8 ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov edx, [esp+0ACh+var_8C] ",gcc,2
"add ecx, 8  | * | and edx, 0FFFFFF9Fh ",gcc,1
"mov edx, [esp+0ACh+var_8C]  | * | mov eax, [ebp+114h] ",gcc,1
"and edx, 0FFFFFF9Fh  | * | mov [esp+0ACh+var_AC], eax ",gcc,1
"mov eax, [ebp+114h]  | * | mov eax, ebp ",gcc,1
"mov [esp+0ACh+var_AC], eax  | * | call _d_print_function_type_isra_9 ",gcc,1
call _d_print_function_type_isra_9  | * | loc_4089B4:  ,gcc,1
"loc_4089B4:   | * | test byte ptr [esp+0ACh+var_8C], 4 ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | jnz loc_40A0B7 ",gcc,1
"test byte ptr [esp+0ACh+var_8C], 4  | * | mov esi, [ecx+8] ",gcc,1
"jnz loc_40A0B7  | * | mov edi, [ecx+4] ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_4089F8 ",gcc,1
jmp short loc_4089F8  | * | loc_4089DC:  ,gcc,1
loc_4089DC:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4089DF:  ",gcc,1
"loc_4089DF:   | * | mov [ebp+100h], eax ",gcc,1
"cmp esi, ebx  | * | loc_4089F8:  ",gcc,1
"loc_4089F8:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [edi+ebx]  | * | jnz short loc_4089DC ",gcc,1
"jnz short loc_4089DC  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4089DF ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408A3B:  ",gcc,1
"jmp short loc_4089DF  | * | mov esi, [esp+0ACh+var_90]  ",gcc,1
"loc_408A3B:   | * | mov ecx, [esi+4] ",gcc,1
"mov esi, [esp+0ACh+var_90]   | * | mov edx, [esp+0ACh+var_8C] ",gcc,3
"mov eax, ebp  | * | mov eax, [ebp+100h] ",gcc,12
"call _d_print_comp  | * | test byte ptr [esp+0ACh+var_8C], 4 ",gcc,1
"mov eax, [ebp+100h]  | * | jnz loc_409C37 ",gcc,1
"test byte ptr [esp+0ACh+var_8C], 4  | * | mov ebx, offset unk_414D48 ",gcc,1
jnz loc_409C37  | * | jmp short loc_408A88 ,gcc,1
"mov ebx, offset unk_414D48  | * | align 4 ",gcc,1
jmp short loc_408A88  | * | loc_408A68:  ,gcc,1
loc_408A68:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408A6B:  ",gcc,1
"loc_408A6B:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, offset unk_414D4A ",gcc,1
inc ebx  | * | jz loc_409C57 ,gcc,1
"cmp ebx, offset unk_414D4A  | * | loc_408A88:  ",gcc,1
"jz loc_409C57  | * | mov dl, [ebx] ",gcc,1
"loc_408A88:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408A68 ",gcc,1
"jnz short loc_408A68  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408A6B ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408ACA:  ",gcc,1
"jmp short loc_408A6B  | * | mov edx, [ebp+114h]  ",gcc,1
"loc_408ACA:   | * | mov [esp+0ACh+var_74], edx ",gcc,1
"mov edx, [ebp+114h]   | * | mov dword ptr [ebp+114h], 0 ",gcc,1
"mov [esp+0ACh+var_74], edx  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"mov dword ptr [ebp+114h], 0  | * | mov ebx, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | test ebx, ebx ",gcc,1
"mov ebx, [ecx+4]  | * | jz loc_40AAF1 ",gcc,1
"test ebx, ebx  | * | mov dword ptr [esp+0ACh+var_5C], 0 ",gcc,1
"jz loc_40AAF1  | * | lea esi, [esp+0ACh+var_5C] ",gcc,1
"mov dword ptr [esp+0ACh+var_5C], 0  | * | mov [esp+0ACh+var_80], esi ",gcc,1
"lea esi, [esp+0ACh+var_5C]  | * | mov [ebp+114h], esi ",gcc,1
"mov [esp+0ACh+var_80], esi  | * | mov [esp+0ACh+var_58], ebx ",gcc,1
"mov [ebp+114h], esi  | * | mov [esp+0ACh+var_54], 0 ",gcc,1
"mov [esp+0ACh+var_58], ebx  | * | mov eax, [ebp+110h] ",gcc,1
"mov [esp+0ACh+var_54], 0  | * | mov [esp+0ACh+var_84], eax ",gcc,1
"mov eax, [ebp+110h]  | * | mov [esp+0ACh+var_50], eax ",gcc,1
"mov [esp+0ACh+var_84], eax  | * | mov eax, [ebx] ",gcc,1
"mov [esp+0ACh+var_50], eax  | * | sub eax, 1Ah ",gcc,1
"mov eax, [ebx]  | * | cmp eax, 2 ",gcc,1
"sub eax, 1Ah  | * | ja loc_40AF49 ",gcc,1
"cmp eax, 2  | * | lea eax, [esp+0ACh+var_4C] ",gcc,1
"ja loc_40AF49  | * | mov [esp+0ACh+var_88], 1 ",gcc,1
"lea eax, [esp+0ACh+var_4C]  | * | mov edx, 1 ",gcc,1
"mov [esp+0ACh+var_88], 1  | * | mov esi, [esp+0ACh+var_84] ",gcc,1
"mov edx, 1  | * | mov edi, [esp+0ACh+var_80] ",gcc,1
"mov esi, [esp+0ACh+var_84]  | * | loc_408B44:  ",gcc,1
"mov edi, [esp+0ACh+var_80]  | * | mov ebx, [ebx+4] ",gcc,1
"loc_408B44:   | * | test ebx, ebx ",gcc,1
"mov ebx, [ebx+4]  | * | jz loc_40AAF1 ",gcc,1
"test ebx, ebx  | * | cmp edx, 4 ",gcc,1
jz loc_40AAF1  | * | jz loc_409E93 ,gcc,1
"cmp edx, 4  | * | mov ecx, [ebp+114h] ",gcc,1
"jz loc_409E93  | * | mov [eax], ecx ",gcc,1
"mov ecx, [ebp+114h]  | * | mov ecx, edx ",gcc,1
"mov [eax], ecx  | * | shl ecx, 4 ",gcc,1
"mov ecx, edx  | * | add ecx, edi ",gcc,1
"shl ecx, 4  | * | mov [ebp+114h], ecx ",gcc,1
"add ecx, edi  | * | mov [eax+4], ebx ",gcc,1
"mov [ebp+114h], ecx  | * | mov dword ptr [eax+8], 0 ",gcc,1
"mov [eax+4], ebx  | * | mov [eax+0Ch], esi ",gcc,1
"mov dword ptr [eax+8], 0  | * | inc edx ",gcc,1
"mov [eax+0Ch], esi  | * | add eax, 10h ",gcc,1
"inc edx  | * | mov ecx, [ebx] ",gcc,1
"add eax, 10h  | * | sub ecx, 1Ah ",gcc,1
"mov ecx, [ebx]  | * | cmp ecx, 2 ",gcc,1
"sub ecx, 1Ah  | * | jbe short loc_408B44 ",gcc,1
"cmp ecx, 2  | * | mov [esp+0ACh+var_88], edx ",gcc,1
jbe short loc_408B44  | * | loc_408B8C:  ,gcc,1
"mov [esp+0ACh+var_88], edx  | * | mov eax, [ebx] ",gcc,1
"loc_408B8C:   | * | cmp eax, 4 ",gcc,1
"mov eax, [ebx]  | * | jz loc_40AD5C ",gcc,1
"cmp eax, 4  | * | cmp eax, 2 ",gcc,1
jz loc_40AD5C  | * | jnz loc_408C52 ,gcc,1
"cmp eax, 2  | * | mov eax, [ebx+8] ",gcc,1
"jnz loc_408C52  | * | cmp dword ptr [eax], 41h  ",gcc,1
"mov eax, [ebx+8]  | * | jz loc_40AF76 ",gcc,1
"cmp dword ptr [eax], 41h   | * | loc_408BAC:  ",gcc,1
"jz loc_40AF76  | * | mov edx, [eax] ",gcc,1
"loc_408BAC:   | * | sub edx, 1Ah ",gcc,1
"sub edx, 1Ah  | * | ja loc_408C52 ",gcc,1
"cmp edx, 2  | * | cmp [esp+0ACh+var_88], 3 ",gcc,1
ja loc_408C52  | * | ja loc_40AE2C ,gcc,1
"cmp [esp+0ACh+var_88], 3  | * | mov esi, [esp+0ACh+var_88] ",gcc,1
ja loc_40AE2C  | * | dec esi ,gcc,1
"mov esi, [esp+0ACh+var_88]  | * | mov [esp+0ACh+var_7C], esi ",gcc,1
"dec esi  | * | mov edx, esi ",gcc,1
"mov [esp+0ACh+var_7C], esi  | * | shl edx, 4 ",gcc,1
"mov edx, esi  | * | add edx, [esp+0ACh+var_80] ",gcc,1
"shl edx, 4  | * | mov [esp+0ACh+var_70], ebx ",gcc,1
"add edx, [esp+0ACh+var_80]  | * | mov [esp+0ACh+var_78], ebp ",gcc,1
"mov [esp+0ACh+var_70], ebx  | * | mov ebp, [esp+0ACh+var_88] ",gcc,1
"mov [esp+0ACh+var_78], ebp  | * | jmp short loc_408BFA ",gcc,1
"mov ebp, [esp+0ACh+var_88]  | * | align 4 ",gcc,1
jmp short loc_408BFA  | * | loc_408BE8:  ,gcc,1
"loc_408BE8:   | * | cmp ebp, 4 ",gcc,1
"mov edx, ebx  | * | jz loc_40AE28 ",gcc,1
"cmp ebp, 4  | * | lea ecx, [ebp-1] ",gcc,1
"jz loc_40AE28  | * | mov [esp+0ACh+var_7C], ecx ",gcc,1
"lea ecx, [ebp-1]  | * | loc_408BFA:  ",gcc,1
"mov [esp+0ACh+var_7C], ecx  | * | lea ebx, [edx+10h] ",gcc,1
"loc_408BFA:   | * | mov edi, ebx ",gcc,1
"lea ebx, [edx+10h]  | * | mov esi, edx ",gcc,1
"mov edi, ebx  | * | mov ecx, 4 ",gcc,1
"mov esi, edx  | * | rep movsd ",gcc,1
"mov ecx, 4  | * | mov ecx, [esp+0ACh+var_7C] ",gcc,1
"rep movsd  | * | shl ecx, 4 ",gcc,1
"mov ecx, [esp+0ACh+var_7C]  | * | add ecx, [esp+0ACh+var_80] ",gcc,1
"shl ecx, 4  | * | mov [edx+10h], ecx ",gcc,1
"add ecx, [esp+0ACh+var_80]  | * | mov ecx, ebp ",gcc,1
"mov [edx+10h], ecx  | * | shl ecx, 4 ",gcc,1
"mov ecx, ebp  | * | add ecx, [esp+0ACh+var_80] ",gcc,1
"shl ecx, 4  | * | mov esi, [esp+0ACh+var_78] ",gcc,1
"add ecx, [esp+0ACh+var_80]  | * | mov [esi+114h], ecx ",gcc,1
"mov esi, [esp+0ACh+var_78]  | * | mov [edx+4], eax ",gcc,1
"mov [esi+114h], ecx  | * | mov dword ptr [edx+8], 0 ",gcc,1
"mov [edx+4], eax  | * | mov ecx, [esp+0ACh+var_84] ",gcc,1
"mov dword ptr [edx+8], 0  | * | mov [edx+0Ch], ecx ",gcc,1
"mov ecx, [esp+0ACh+var_84]  | * | inc ebp ",gcc,1
"mov [edx+0Ch], ecx  | * | mov eax, [eax+4] ",gcc,1
"inc ebp  | * | mov edx, [eax] ",gcc,1
"sub edx, 1Ah  | * | jbe short loc_408BE8 ",gcc,1
"cmp edx, 2  | * | mov ebx, [esp+0ACh+var_70] ",gcc,1
"jbe short loc_408BE8  | * | mov [esp+0ACh+var_88], ebp ",gcc,1
"mov ebx, [esp+0ACh+var_70]  | * | mov ebp, esi ",gcc,1
"mov [esp+0ACh+var_88], ebp  | * | loc_408C52:  ",gcc,1
"mov ebp, esi  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"loc_408C52:   | * | mov ecx, [esi+8] ",gcc,1
"mov ecx, [esi+8]  | * | mov eax, ebp ",gcc,7
"mov eax, ebp  | * | cmp dword ptr [ebx], 4 ",gcc,1
call _d_print_comp  | * | jz loc_40AD77 ,gcc,1
"cmp dword ptr [ebx], 4  | * | loc_408C6D:  ",gcc,1
"jz loc_40AD77  | * | mov eax, [esp+0ACh+var_88] ",gcc,1
"loc_408C6D:   | * | test eax, eax ",gcc,1
"mov eax, [esp+0ACh+var_88]  | * | jz loc_40A9C0 ",gcc,1
"test eax, eax  | * | mov edx, [esp+0ACh+var_88] ",gcc,1
jz loc_40A9C0  | * | dec edx ,gcc,1
"mov edx, [esp+0ACh+var_88]  | * | mov eax, edx ",gcc,1
"dec edx  | * | shl eax, 4 ",gcc,1
"mov eax, edx  | * | mov ecx, [esp+0ACh+var_80] ",gcc,1
"shl eax, 4  | * | lea ebx, [ecx+eax+8] ",gcc,1
"mov ecx, [esp+0ACh+var_80]  | * | mov esi, edx ",gcc,1
"lea ebx, [ecx+eax+8]  | * | mov edi, [ebx] ",gcc,1
"mov esi, edx  | * | test edi, edi ",gcc,1
"mov edi, [ebx]  | * | jz short loc_408CA5 ",gcc,1
"test edi, edi  | * | loc_408C93:  ",gcc,1
"jz short loc_408CA5  | * | sub ebx, 10h ",gcc,1
"loc_408C93:   | * | test esi, esi ",gcc,1
"sub ebx, 10h  | * | jz loc_40A9C0 ",gcc,1
"test esi, esi  | * | dec esi ",gcc,1
"jz loc_40A9C0  | * | mov edi, [ebx] ",gcc,1
"dec esi  | * | test edi, edi ",gcc,1
"mov edi, [ebx]  | * | jnz short loc_408C93 ",gcc,1
"test edi, edi  | * | loc_408CA5:  ",gcc,1
"jnz short loc_408C93  | * | mov eax, [ebp+100h] ",gcc,1
"loc_408CA5:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40AE99 ",gcc,1
"cmp eax, 0FFh  | * | loc_408CB6:  ",gcc,1
"jz loc_40AE99  | * | mov byte ptr [ebp+eax+0], 20h  ",gcc,1
loc_408CB6:   | * | inc eax ,gcc,1
"mov byte ptr [ebp+eax+0], 20h   | * | mov [ebp+100h], eax ",gcc,4
"inc eax  | * | mov byte ptr [ebp+104h], 20h  ",gcc,4
"mov [ebp+100h], eax  | * | mov ecx, [ebx-4] ",gcc,1
"mov byte ptr [ebp+104h], 20h   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, [ebx-4]  | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | jmp short loc_408C93 ",gcc,1
call _d_print_mod  | * | loc_408CD9:  ,gcc,1
"jmp short loc_408C93  | * | mov ebx, [ebp+114h]  ",gcc,1
"loc_408CD9:   | * | mov dword ptr [ebp+114h], 0 ",gcc,1
"mov ebx, [ebp+114h]   | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"mov dword ptr [ebp+114h], 0  | * | mov eax, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | test byte ptr [esp+0ACh+var_8C], 4 ",gcc,1
"mov eax, [ecx+4]  | * | jz short loc_408D07 ",gcc,1
"test byte ptr [esp+0ACh+var_8C], 4  | * | mov esi, [eax] ",gcc,1
"jz short loc_408D07  | * | test esi, esi ",gcc,1
"mov esi, [eax]  | * | jnz short loc_408D07 ",gcc,1
"test esi, esi  | * | cmp dword ptr [eax+8], 6 ",gcc,1
jnz short loc_408D07  | * | jz loc_40ABD8 ,gcc,1
"cmp dword ptr [eax+8], 6  | * | loc_408D07:  ",gcc,1
"jz loc_40ABD8  | * | mov ecx, eax ",gcc,1
"loc_408D07:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, eax  | * | mov eax, ebp ",gcc,3
"mov eax, ebp  | * | cmp byte ptr [ebp+104h], 3Ch  ",gcc,1
"call _d_print_comp  | * | mov eax, [ebp+100h] ",gcc,3
"cmp byte ptr [ebp+104h], 3Ch   | * | jz loc_40AA6F ",gcc,1
"mov eax, [ebp+100h]  | * | loc_408D27:  ",gcc,1
"jz loc_40AA6F  | * | cmp eax, 0FFh ",gcc,1
loc_408D27:   | * | jz loc_40A651 ,gcc,1
"cmp eax, 0FFh  | * | lea edx, [eax+1] ",gcc,25
jz loc_40A651  | * | loc_408D35:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 3Ch  ",gcc,1
"loc_408D35:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 3Ch   | * | mov byte ptr [ebp+104h], 3Ch  ",gcc,1
"mov [ebp+100h], edx  | * | mov eax, [esp+0ACh+var_90] ",gcc,1
"mov byte ptr [ebp+104h], 3Ch   | * | mov ecx, [eax+8] ",gcc,1
"mov eax, [esp+0ACh+var_90]  | * | mov edx, [esp+0ACh+var_8C] ",gcc,11
"mov ecx, [eax+8]  | * | mov eax, ebp ",gcc,8
"mov eax, ebp  | * | cmp byte ptr [ebp+104h], 3Eh  ",gcc,1
"cmp byte ptr [ebp+104h], 3Eh   | * | jz loc_40AA4C ",gcc,1
"mov eax, [ebp+100h]  | * | loc_408D6C:  ",gcc,1
"jz loc_40AA4C  | * | cmp eax, 0FFh ",gcc,1
loc_408D6C:   | * | jz loc_40A61D ,gcc,1
jz loc_40A61D  | * | loc_408D7A:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 3Eh  ",gcc,1
"loc_408D7A:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 3Eh   | * | mov byte ptr [ebp+104h], 3Eh  ",gcc,1
"mov [ebp+100h], edx  | * | loc_408D8C:  ",gcc,1
"mov byte ptr [ebp+104h], 3Eh   | * | mov [ebp+114h], ebx ",gcc,1
loc_408D8C:   | * | jmp def_40A961  ,gcc,1
"mov [ebp+114h], ebx  | * | loc_408D97:  ",gcc,1
"jmp def_40A961   | * | mov edx, [esp+0ACh+var_90]  ",gcc,2
"loc_408D97:   | * | add edx, 4 ",gcc,1
"mov edx, [esp+0ACh+var_90]   | * | mov eax, ebp ",gcc,1
"add edx, 4  | * | call _d_lookup_template_argument_isra_5 ",gcc,1
"mov eax, ebp  | * | test eax, eax ",gcc,2
call _d_lookup_template_argument_isra_5  | * | jz loc_40A372 ,gcc,1
jz loc_40A372  | * | jz loc_40A351 ,gcc,1
"cmp dword ptr [eax], 2Bh   | * | loc_408DB6:  ",gcc,1
"jz loc_40A351  | * | mov ebx, [ebp+110h] ",gcc,1
"loc_408DB6:   | * | mov edx, [ebx] ",gcc,1
"mov ebx, [ebp+110h]  | * | mov [ebp+110h], edx ",gcc,1
"mov edx, [ebx]  | * | mov ecx, eax ",gcc,1
"mov [ebp+110h], edx  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov eax, ebp  | * | mov [ebp+110h], ebx ",gcc,1
call _d_print_comp  | * | jmp def_40A961  ,gcc,1
"mov [ebp+110h], ebx  | * | loc_408DDC:  ",gcc,1
"loc_408DDC:   | * | mov esi, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | mov eax, [ebp+100h] ",gcc,2
"mov esi, [ecx+4]  | * | test esi, esi ",gcc,1
"mov eax, [ebp+100h]  | * | jnz loc_409F2A ",gcc,1
"test esi, esi  | * | mov ebx, offset aThis  ",gcc,1
jnz loc_409F2A  | * | jmp short loc_408E18 ,gcc,1
"mov ebx, offset aThis   | * | loc_408DF8:  ",gcc,1
"jmp short loc_408E18  | * | mov ecx, eax ",gcc,1
loc_408DF8:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_408DFB:  ",gcc,1
"loc_408DFB:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414EF8h ",gcc,1
"cmp ebx, 414EF8h  | * | loc_408E18:  ",gcc,1
"jz def_40A961   | * | mov dl, [ebx] ",gcc,3
"loc_408E18:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_408DF8 ",gcc,1
"jnz short loc_408DF8  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_408DFB ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_408E5A:  ",gcc,1
"jmp short loc_408DFB  | * | mov ebx, [ebp+114h]  ",gcc,1
"loc_408E5A:   | * | mov [esp+0ACh+var_78], ebx ",gcc,1
"mov ebx, [ebp+114h]   | * | mov dword ptr [esp+0ACh+var_5C], ebx ",gcc,1
"mov [esp+0ACh+var_78], ebx  | * | lea eax, [esp+0ACh+var_5C] ",gcc,1
"mov dword ptr [esp+0ACh+var_5C], ebx  | * | mov [esp+0ACh+var_80], eax ",gcc,1
"lea eax, [esp+0ACh+var_5C]  | * | mov ebx, eax ",gcc,1
"mov [esp+0ACh+var_80], eax  | * | mov [ebp+114h], eax ",gcc,1
"mov ebx, eax  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"mov eax, [ebp+110h]  | * | mov eax, [esp+0ACh+var_78] ",gcc,1
"mov [esp+0ACh+var_50], eax  | * | test eax, eax ",gcc,1
"mov eax, [esp+0ACh+var_78]  | * | jz loc_40A184 ",gcc,1
"test eax, eax  | * | mov esi, [esp+0ACh+var_78] ",gcc,1
"jz loc_40A184  | * | mov eax, [esi+4] ",gcc,1
"mov esi, [esp+0ACh+var_78]  | * | mov eax, [eax] ",gcc,1
"mov eax, [esi+4]  | * | sub eax, 17h ",gcc,1
"mov eax, [eax]  | * | cmp eax, 2 ",gcc,2
"sub eax, 17h  | * | ja loc_40A184 ",gcc,1
"cmp eax, 2  | * | mov [esp+0ACh+var_88], 1 ",gcc,1
"ja loc_40A184  | * | mov [esp+0ACh+var_7C], ebp ",gcc,1
"mov [esp+0ACh+var_88], 1  | * | mov eax, ebx ",gcc,1
"mov [esp+0ACh+var_7C], ebp  | * | mov ebx, esi ",gcc,1
"mov eax, ebx  | * | mov edx, eax ",gcc,1
"mov ebx, esi  | * | jmp short loc_408ED5 ",gcc,1
"mov edx, eax  | * | align 4 ",gcc,1
jmp short loc_408ED5  | * | loc_408EC8:  ,gcc,1
"align 4  | * | mov eax, [ebx+4] ",gcc,1
"loc_408EC8:   | * | mov eax, [eax] ",gcc,1
"mov eax, [ebx+4]  | * | sub eax, 17h ",gcc,1
"sub eax, 17h  | * | ja short loc_408F2D ",gcc,1
"cmp eax, 2  | * | loc_408ED5:  ",gcc,1
"ja short loc_408F2D  | * | mov eax, [ebx+8] ",gcc,1
"loc_408ED5:   | * | test eax, eax ",gcc,1
"mov eax, [ebx+8]  | * | jnz short loc_408F27 ",gcc,1
"test eax, eax  | * | cmp [esp+0ACh+var_88], 3 ",gcc,1
jnz short loc_408F27  | * | ja loc_40A823 ,gcc,1
"cmp [esp+0ACh+var_88], 3  | * | mov ebp, [esp+0ACh+var_88] ",gcc,1
"ja loc_40A823  | * | shl ebp, 4 ",gcc,1
"mov ebp, [esp+0ACh+var_88]  | * | lea eax, [esp+0ACh+var_1C] ",gcc,1
"shl ebp, 4  | * | add eax, ebp ",gcc,1
"lea eax, [esp+0ACh+var_1C]  | * | lea ecx, [eax-40h] ",gcc,1
"add eax, ebp  | * | mov [esp+0ACh+var_84], ecx ",gcc,1
"lea ecx, [eax-40h]  | * | mov edi, ecx ",gcc,1
"mov [esp+0ACh+var_84], ecx  | * | mov esi, ebx ",gcc,1
"mov edi, ecx  | * | mov ecx, 4 ",gcc,1
"mov esi, ebx  | * | rep movsd ",gcc,1
"mov ecx, 4  | * | mov [eax-40h], edx ",gcc,1
"rep movsd  | * | mov edx, [esp+0ACh+var_80] ",gcc,1
"mov [eax-40h], edx  | * | add edx, ebp ",gcc,1
"mov edx, [esp+0ACh+var_80]  | * | mov eax, [esp+0ACh+var_7C] ",gcc,1
"add edx, ebp  | * | mov [eax+114h], edx ",gcc,1
"mov eax, [esp+0ACh+var_7C]  | * | mov dword ptr [ebx+8], 1 ",gcc,1
"mov [eax+114h], edx  | * | inc [esp+0ACh+var_88] ",gcc,1
"mov dword ptr [ebx+8], 1  | * | loc_408F27:  ",gcc,1
"inc [esp+0ACh+var_88]  | * | mov ebx, [ebx] ",gcc,1
"loc_408F27:   | * | test ebx, ebx ",gcc,1
"mov ebx, [ebx]  | * | jnz short loc_408EC8 ",gcc,1
"test ebx, ebx  | * | loc_408F2D:  ",gcc,1
"jnz short loc_408EC8  | * | mov ebp, [esp+0ACh+var_7C] ",gcc,1
"loc_408F2D:   | * | mov edx, [esp+0ACh+var_90] ",gcc,1
"mov ebp, [esp+0ACh+var_7C]  | * | mov ecx, [edx+8] ",gcc,1
"mov edx, [esp+0ACh+var_90]  | * | mov edx, [esp+0ACh+var_8C] ",gcc,9
"mov ecx, [edx+8]  | * | mov eax, ebp ",gcc,3
"mov eax, ebp  | * | mov ecx, [esp+0ACh+var_78] ",gcc,1
"call _d_print_comp  | * | mov [ebp+114h], ecx ",gcc,1
"mov ecx, [esp+0ACh+var_78]  | * | mov eax, [esp+0ACh+var_54] ",gcc,1
"mov [ebp+114h], ecx  | * | test eax, eax ",gcc,1
"mov eax, [esp+0ACh+var_54]  | * | jnz def_40A961  ",gcc,2
"test eax, eax  | * | cmp [esp+0ACh+var_88], 1 ",gcc,1
jnz def_40A961   | * | jz loc_40A1AB ,gcc,1
"cmp [esp+0ACh+var_88], 1  | * | mov esi, [esp+0ACh+var_88] ",gcc,1
jz loc_40A1AB  | * | dec esi ,gcc,1
"mov esi, [esp+0ACh+var_88]  | * | mov eax, esi ",gcc,1
"dec esi  | * | shl eax, 4 ",gcc,1
"mov eax, esi  | * | mov edx, [esp+0ACh+var_80] ",gcc,1
"shl eax, 4  | * | lea ebx, [edx+eax+4] ",gcc,1
"mov edx, [esp+0ACh+var_80]  | * | mov edi, [esp+0ACh+var_8C] ",gcc,1
"lea ebx, [edx+eax+4]  | * | loc_408F7A:  ",gcc,1
"mov edi, [esp+0ACh+var_8C]  | * | mov ecx, [ebx] ",gcc,1
"loc_408F7A:   | * | mov edx, edi ",gcc,1
"mov ecx, [ebx]  | * | mov eax, ebp ",gcc,1
"mov edx, edi  | * | call _d_print_mod ",gcc,1
"mov eax, ebp  | * | sub ebx, 10h ",gcc,1
"call _d_print_mod  | * | cmp esi, 1 ",gcc,1
"sub ebx, 10h  | * | jz loc_40A1AB ",gcc,1
"cmp esi, 1  | * | dec esi ",gcc,1
jz loc_40A1AB  | * | jmp short loc_408F7A ,gcc,1
dec esi  | * | loc_408F94:  ,gcc,1
"jmp short loc_408F7A  | * | mov eax, [ebp+114h]  ",gcc,1
"loc_408F94:   | * | mov dword ptr [esp+0ACh+var_5C], eax ",gcc,1
"mov eax, [ebp+114h]   | * | lea eax, [esp+0ACh+var_5C] ",gcc,1
"mov dword ptr [esp+0ACh+var_5C], eax  | * | mov [ebp+114h], eax ",gcc,3
"mov eax, [ebp+110h]  | * | mov esi, ecx ",gcc,1
"mov [esp+0ACh+var_50], eax  | * | mov ecx, [ecx+8] ",gcc,1
"mov esi, ecx  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, [ecx+8]  | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | mov eax, [esp+0ACh+var_54] ",gcc,1
"call _d_print_comp  | * | test eax, eax ",gcc,1
"mov eax, [esp+0ACh+var_54]  | * | jnz short loc_408FE7 ",gcc,1
"test eax, eax  | * | mov ecx, esi ",gcc,1
"jnz short loc_408FE7  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov eax, ebp  | * | loc_408FE7:  ",gcc,1
"loc_408FE7:   | * | mov [ebp+114h], eax ",gcc,1
"mov [ebp+114h], eax  | * | loc_408FF6:  ",gcc,1
"loc_408FF6:   | * | cmp word ptr [ecx+0Ah], 0 ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | jnz loc_40A3A7 ",gcc,1
"cmp word ptr [ecx+0Ah], 0  | * | loc_409005:  ",gcc,1
"jnz loc_40A3A7  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"loc_409005:   | * | mov ecx, [esi+4] ",gcc,1
"mov esi, [esp+0ACh+var_90]  | * | cmp dword ptr [ecx+4], offset off_4153A0  ",gcc,1
"mov ecx, [esi+4]  | * | jz loc_40A346 ",gcc,1
"cmp dword ptr [ecx+4], offset off_4153A0   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"jz loc_40A346  | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | mov edx, [ebp+100h] ",gcc,1
"call _d_print_comp  | * | cmp edx, 0FFh ",gcc,1
"mov edx, [ebp+100h]  | * | jz loc_40AA18 ",gcc,1
"cmp edx, 0FFh  | * | lea eax, [edx+1] ",gcc,6
jz loc_40AA18  | * | loc_409039:  ,gcc,1
"lea eax, [edx+1]  | * | mov byte ptr [ebp+edx+0], 20h  ",gcc,1
"loc_409039:   | * | mov [ebp+100h], eax ",gcc,1
"mov byte ptr [ebp+edx+0], 20h   | * | mov byte ptr [ebp+104h], 20h  ",gcc,1
"mov [ebp+100h], eax  | * | loc_40904B:  ",gcc,1
"mov byte ptr [ebp+104h], 20h   | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40904B:   | * | cmp word ptr [ecx+8], 0 ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | jz loc_409EC1 ",gcc,1
"cmp word ptr [ecx+8], 0  | * | mov ebx, offset aAccum  ",gcc,1
jz loc_409EC1  | * | jmp short loc_409084 ,gcc,1
"mov ebx, offset aAccum   | * | align 4 ",gcc,1
jmp short loc_409084  | * | loc_409064:  ,gcc,1
loc_409064:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409067:  ",gcc,1
"loc_409067:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E8Dh ",gcc,1
"cmp ebx, 414E8Dh  | * | loc_409084:  ",gcc,1
"loc_409084:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409064 ",gcc,1
"jnz short loc_409064  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409067 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4090C6:  ",gcc,1
"jmp short loc_409067  | * | mov ecx, [esp+0ACh+var_90]  ",gcc,1
"loc_4090C6:   | * | mov eax, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | test byte ptr [esp+0ACh+var_8C], 4 ",gcc,1
"mov eax, [ecx+4]  | * | jnz loc_40A03F ",gcc,1
"test byte ptr [esp+0ACh+var_8C], 4  | * | mov esi, [eax+4] ",gcc,1
"jnz loc_40A03F  | * | mov edi, [eax] ",gcc,1
"mov esi, [eax+4]  | * | test esi, esi ",gcc,1
"mov edi, [eax]  | * | jz def_40A961  ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_40910C ",gcc,1
jmp short loc_40910C  | * | loc_4090F0:  ,gcc,1
loc_4090F0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4090F3:  ",gcc,1
"loc_4090F3:   | * | mov [ebp+100h], eax ",gcc,1
"cmp esi, ebx  | * | loc_40910C:  ",gcc,1
"loc_40910C:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [edi+ebx]  | * | jnz short loc_4090F0 ",gcc,1
"jnz short loc_4090F0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4090F3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_40914F:  ",gcc,1
"jmp short loc_4090F3  | * | mov esi, [esp+0ACh+var_90]  ",gcc,1
"loc_40914F:   | * | mov ecx, [esi+4] ",gcc,1
call _d_print_comp  | * | loc_409166:  ,gcc,1
"loc_409166:   | * | mov eax, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | mov edx, [eax] ",gcc,1
"mov eax, [ecx+4]  | * | cmp edx, 5 ",gcc,1
"mov edx, [eax]  | * | jz loc_40A9CF ",gcc,1
"cmp edx, 5  | * | loc_409178:  ",gcc,1
"jz loc_40A9CF  | * | cmp edx, 1Fh ",gcc,1
loc_409178:   | * | jz loc_40A1CB ,gcc,1
"cmp edx, 1Fh  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"jz loc_40A1CB  | * | cmp [ecx], edx ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | jz loc_40A1CB ",gcc,1
"cmp [ecx], edx  | * | cmp edx, 20h  ",gcc,1
jz loc_40A1CB  | * | jnz loc_407F0D  ,gcc,1
"cmp edx, 20h   | * | mov ecx, [eax+4] ",gcc,1
"jnz loc_407F0D   | * | mov eax, [ebp+114h] ",gcc,1
"mov ecx, [eax+4]  | * | mov dword ptr [esp+0ACh+var_5C], eax ",gcc,1
"mov eax, [ebp+114h]  | * | lea eax, [esp+0ACh+var_5C] ",gcc,2
"lea eax, [esp+0ACh+var_5C]  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"mov [ebp+114h], eax  | * | mov [esp+0ACh+var_58], esi ",gcc,1
"mov esi, [esp+0ACh+var_90]  | * | mov [esp+0ACh+var_54], 0 ",gcc,1
"mov [esp+0ACh+var_58], esi  | * | mov eax, [ebp+110h] ",gcc,1
"mov eax, [ebp+110h]  | * | test ecx, ecx ",gcc,1
"mov [esp+0ACh+var_50], eax  | * | jnz loc_407F42 ",gcc,1
"test ecx, ecx  | * | jmp loc_407F3B ",gcc,1
jnz loc_407F42  | * | loc_4091D4:  ,gcc,1
"jmp loc_407F3B  | * | mov esi, [esp+0ACh+var_90]  ",gcc,1
"loc_4091D4:   | * | mov ecx, [esi+4] ",gcc,1
"call _d_print_comp  | * | mov ebx, offset aClone  ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_409214 ",gcc,1
"mov ebx, offset aClone   | * | align 4 ",gcc,1
jmp short loc_409214  | * | loc_4091F4:  ,gcc,1
loc_4091F4:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4091F7:  ",gcc,1
"loc_4091F7:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414F5Eh ",gcc,1
inc ebx  | * | jz loc_409865 ,gcc,1
"cmp ebx, 414F5Eh  | * | loc_409214:  ",gcc,1
"jz loc_409865  | * | mov dl, [ebx] ",gcc,1
"loc_409214:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4091F4 ",gcc,1
"jnz short loc_4091F4  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4091F7 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_409256:  ",gcc,1
"jmp short loc_4091F7  | * | mov esi, [esp+0ACh+var_90]  ",gcc,1
"loc_409256:   | * | mov ecx, [esi+4] ",gcc,1
"mov esi, [esp+0ACh+var_90]   | * | test ecx, ecx ",gcc,1
"mov ecx, [esi+4]  | * | jz short loc_40926C ",gcc,1
"test ecx, ecx  | * | mov edx, [esp+0ACh+var_8C] ",gcc,2
"jz short loc_40926C  | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | loc_40926C:  ",gcc,1
"call _d_print_comp  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40926C:   | * | mov eax, [ecx+8] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | test eax, eax ",gcc,1
"mov eax, [ecx+8]  | * | jz def_40A961  ",gcc,1
"test eax, eax  | * | mov ebx, [ebp+100h] ",gcc,1
"jz def_40A961   | * | cmp ebx, 0FDh ",gcc,1
"mov ebx, [ebp+100h]  | * | ja loc_40A582 ",gcc,1
"cmp ebx, 0FDh  | * | loc_40928D:  ",gcc,1
"ja loc_40A582  | * | mov esi, offset asc_414E95  ",gcc,1
loc_40928D:   | * | jmp short loc_4092B4 ,gcc,1
"mov esi, offset asc_414E95   | * | loc_409294:  ",gcc,1
"jmp short loc_4092B4  | * | mov edx, ebx ",gcc,1
loc_409294:   | * | inc ebx ,gcc,1
"mov edx, ebx  | * | loc_409297:  ",gcc,1
"inc ebx  | * | mov [ebp+edx+0], al ",gcc,1
"loc_409297:   | * | mov [ebp+100h], ebx ",gcc,1
"mov [ebp+edx+0], al  | * | mov [ebp+104h], al ",gcc,2
"mov [ebp+100h], ebx  | * | inc esi ",gcc,1
"mov [ebp+104h], al  | * | cmp esi, (offset asc_414E95+2)  ",gcc,1
inc esi  | * | jz loc_409E55 ,gcc,1
"cmp esi, (offset asc_414E95+2)   | * | loc_4092B4:  ",gcc,1
"jz loc_409E55  | * | mov al, [esi] ",gcc,1
"loc_4092B4:   | * | cmp ebx, 0FFh ",gcc,1
"mov al, [esi]  | * | jnz short loc_409294 ",gcc,1
"cmp ebx, 0FFh  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"jnz short loc_409294  | * | mov edx, [ebp+10Ch] ",gcc,1
"mov byte ptr [ebp+0FFh], 0  | * | mov [esp+0ACh+var_A4], edx ",gcc,2
"mov edx, [ebp+10Ch]  | * | mov [esp+0ACh+var_A8], 0FFh ",gcc,2
"mov [esp+0ACh+var_A4], edx  | * | mov [esp+0ACh+var_AC], ebp ",gcc,2
"mov [esp+0ACh+var_A8], 0FFh  | * | mov byte ptr [esp+0ACh+var_94], al ",gcc,2
"mov byte ptr [esp+0ACh+var_94], al  | * | inc dword ptr [ebp+120h] ",gcc,2
"call dword ptr [ebp+108h]  | * | mov ebx, 1 ",gcc,1
"inc dword ptr [ebp+120h]  | * | xor edx, edx ",gcc,8
"mov ebx, 1  | * | mov al, byte ptr [esp+0ACh+var_94] ",gcc,1
"xor edx, edx  | * | jmp short loc_409297 ",gcc,1
"mov al, byte ptr [esp+0ACh+var_94]  | * | loc_4092F7:  ",gcc,1
"jmp short loc_409297  | * | mov edx, [esp+0ACh+var_90]  ",gcc,1
"loc_4092F7:   | * | mov ecx, [edx+8] ",gcc,1
"mov edx, [esp+0ACh+var_90]   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
call _d_print_comp  | * | loc_40930E:  ,gcc,1
"jmp def_40A961   | * | mov eax, [ebp+100h]  ",gcc,3
"loc_40930E:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]   | * | jz loc_40A721 ",gcc,1
jz loc_40A721  | * | loc_409322:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 7Eh  ",gcc,1
"loc_409322:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 7Eh   | * | mov byte ptr [ebp+104h], 7Eh  ",gcc,1
"mov [ebp+100h], edx  | * | mov esi, [esp+0ACh+var_90] ",gcc,2
"mov byte ptr [ebp+104h], 7Eh   | * | mov ecx, [esi+8] ",gcc,1
call _d_print_comp  | * | loc_40934B:  ,gcc,1
"loc_40934B:   | * | mov eax, [ecx+8] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | cmp dword ptr [eax], 35h  ",gcc,1
"mov eax, [ecx+8]  | * | jz loc_40A298 ",gcc,1
"cmp dword ptr [eax], 35h   | * | loc_40935B:  ",gcc,1
"jz loc_40A298  | * | mov dword ptr [ebp+118h], 1 ",gcc,1
loc_40935B:   | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1  | * | loc_40936A:  ",gcc,1
"loc_40936A:   | * | mov ecx, [edx+4] ",gcc,1
"mov edx, [esp+0ACh+var_90]   | * | mov ebx, [edx+8] ",gcc,1
"mov ecx, [edx+4]  | * | test ecx, ecx ",gcc,1
"mov ebx, [edx+8]  | * | jz short loc_409383 ",gcc,1
"jz short loc_409383  | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | loc_409383:  ",gcc,1
"loc_409383:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40A6B9 ",gcc,1
jz loc_40A6B9  | * | loc_409397:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 7Bh  ",gcc,1
"loc_409397:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 7Bh   | * | mov byte ptr [ebp+104h], 7Bh  ",gcc,1
"mov [ebp+100h], edx  | * | mov ecx, ebx ",gcc,1
"mov byte ptr [ebp+104h], 7Bh   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, ebx  | * | mov eax, ebp ",gcc,6
"call _d_print_comp  | * | cmp eax, 0FFh ",gcc,8
"mov eax, [ebp+100h]  | * | jz loc_40A685 ",gcc,1
jz loc_40A685  | * | loc_4093CA:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 7Dh  ",gcc,4
"loc_4093CA:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 7Dh   | * | mov byte ptr [ebp+104h], 7Dh  ",gcc,4
"mov [ebp+100h], edx  | * | jmp def_40A961  ",gcc,7
"mov byte ptr [ebp+104h], 7Dh   | * | loc_4093E1:  ",gcc,1
"jmp def_40A961   | * | mov eax, [esp+0ACh+var_90]  ",gcc,2
"loc_4093E1:   | * | mov ecx, [eax+4] ",gcc,1
"mov eax, [esp+0ACh+var_90]   | * | mov edx, [esp+0ACh+var_8C] ",gcc,2
"mov ecx, [eax+4]  | * | mov eax, ebp ",gcc,7
"mov eax, ebp  | * | mov edx, [esp+0ACh+var_90] ",gcc,1
"call _d_print_comp  | * | mov ecx, [edx+8] ",gcc,1
call _d_print_comp  | * | loc_40940A:  ,gcc,1
"loc_40940A:   | * | mov bl, [ecx+4] ",gcc,1
"mov bl, [ecx+4]  | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40A789 ",gcc,1
jz loc_40A789  | * | loc_409425:  ,gcc,1
"lea edx, [eax+1]  | * | mov [ebp+eax+0], bl ",gcc,1
"loc_409425:   | * | mov [ebp+100h], edx ",gcc,1
"mov [ebp+eax+0], bl  | * | mov [ebp+104h], bl ",gcc,1
"mov [ebp+104h], bl  | * | loc_40943A:  ",gcc,1
"loc_40943A:   | * | mov ecx, [eax+4] ",gcc,1
"mov edx, [esp+0ACh+var_8C]  | * | call _d_print_expr_op ",gcc,6
call _d_print_expr_op  | * | loc_409451:  ,gcc,1
"loc_409451:   | * | mov edx, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | cmp dword ptr [edx], 23h  ",gcc,1
"mov edx, [ecx+4]  | * | jnz loc_409EBA ",gcc,1
"jnz loc_409EBA  | * | mov ebx, [edx+10h] ",gcc,1
"mov edx, [edx+4]  | * | cmp ebx, 1 ",gcc,1
"mov ebx, [edx+10h]  | * | jb short loc_409480 ",gcc,1
"cmp ebx, 1  | * | cmp ebx, 6 ",gcc,1
jb short loc_409480  | * | jbe loc_40A930 ,gcc,1
"cmp ebx, 6  | * | cmp ebx, 7 ",gcc,1
jbe loc_40A930  | * | jz loc_40A8E5 ,gcc,1
"cmp ebx, 7  | * | xchg ax, ax ",gcc,1
jz loc_40A8E5  | * | loc_409480:  ,gcc,1
"xchg ax, ax  | * | mov eax, [ebp+100h] ",gcc,1
"loc_409480:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40A89D ",gcc,1
jz loc_40A89D  | * | loc_409494:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 28h  ",gcc,1
"loc_409494:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 28h   | * | mov byte ptr [ebp+104h], 28h  ",gcc,1
"mov byte ptr [ebp+104h], 28h   | * | mov ecx, [esi+4] ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40A836 ",gcc,1
"jz loc_40A836  | * | mov byte ptr [ebp+eax+0], 29h  ",gcc,1
"lea edx, [eax+1]  | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 29h   | * | mov byte ptr [ebp+104h], 29h  ",gcc,2
"mov [ebp+100h], edx  | * | cmp dword ptr [esi], 38h  ",gcc,1
"mov byte ptr [ebp+104h], 29h   | * | jz loc_40AB00 ",gcc,1
"cmp dword ptr [esi], 38h   | * | loc_4094E7:  ",gcc,1
"jz loc_40AB00  | * | cmp ebx, 8 ",gcc,1
loc_4094E7:   | * | jz loc_40AA92 ,gcc,1
"cmp ebx, 8  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"jz loc_40AA92  | * | mov ecx, [esi+8] ",gcc,1
call _d_print_comp  | * | loc_409507:  ,gcc,1
"loc_409507:   | * | mov ebx, offset aJavaResource  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_409534 ",gcc,1
"mov ebx, offset aJavaResource   | * | loc_409514:  ",gcc,1
"jmp short loc_409534  | * | mov ecx, eax ",gcc,1
loc_409514:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409517:  ",gcc,1
"loc_409517:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414EE4h ",gcc,1
inc ebx  | * | jz loc_409CAB ,gcc,1
"cmp ebx, 414EE4h  | * | loc_409534:  ",gcc,1
"jz loc_409CAB  | * | mov dl, [ebx] ",gcc,1
"loc_409534:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409514 ",gcc,1
"jnz short loc_409514  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409517 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_409576:  ",gcc,1
"jmp short loc_409517  | * | mov dword ptr [ebp+118h], 1  ",gcc,1
loc_409576:   | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1   | * | loc_409585:  ",gcc,1
"loc_409585:   | * | mov ebx, offset aOperator  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_4095B4 ",gcc,1
"mov ebx, offset aOperator   | * | align 4 ",gcc,2
jmp short loc_4095B4  | * | loc_409594:  ,gcc,1
loc_409594:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409597:  ",gcc,1
"loc_409597:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414EAAh ",gcc,2
inc ebx  | * | jz loc_409CC2 ,gcc,1
"cmp ebx, 414EAAh  | * | loc_4095B4:  ",gcc,1
"jz loc_409CC2  | * | mov dl, [ebx] ",gcc,1
"loc_4095B4:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409594 ",gcc,1
"jnz short loc_409594  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409597 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4095F6:  ",gcc,1
"jmp short loc_409597  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4095F6:   | * | mov ebx, offset aOperator  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_409624 ",gcc,1
jmp short loc_409624  | * | loc_409604:  ,gcc,1
loc_409604:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409607:  ",gcc,1
"loc_409607:   | * | mov [ebp+100h], eax ",gcc,1
inc ebx  | * | jz loc_409CD9 ,gcc,1
"cmp ebx, 414EAAh  | * | loc_409624:  ",gcc,1
"jz loc_409CD9  | * | mov dl, [ebx] ",gcc,1
"loc_409624:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409604 ",gcc,1
"jnz short loc_409604  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409607 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_409666:  ",gcc,1
"jmp short loc_409607  | * | mov ecx, [esp+0ACh+var_90]  ",gcc,1
"loc_409666:   | * | mov esi, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | mov edi, [esi+8] ",gcc,1
"mov esi, [ecx+4]  | * | mov eax, [ebp+100h] ",gcc,1
"mov edi, [esi+8]  | * | mov ebx, offset aOperator_0  ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_4096A0 ",gcc,1
"mov ebx, offset aOperator_0   | * | align 10h ",gcc,1
jmp short loc_4096A0  | * | loc_409680:  ,gcc,1
loc_409680:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409683:  ",gcc,1
"loc_409683:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414EA0h ",gcc,1
inc ebx  | * | jz loc_4098A2 ,gcc,1
"cmp ebx, 414EA0h  | * | loc_4096A0:  ",gcc,1
"jz loc_4098A2  | * | mov dl, [ebx] ",gcc,1
"loc_4096A0:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409680 ",gcc,1
"jnz short loc_409680  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409683 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_4096E2:  ",gcc,1
"jmp short loc_409683  | * | mov ecx, [esp+0ACh+var_90]  ",gcc,1
"loc_4096E2:   | * | mov eax, [ecx+8] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | cmp dword ptr [eax], 33h  ",gcc,1
"mov eax, [ecx+8]  | * | jz loc_40A1DA ",gcc,1
"cmp dword ptr [eax], 33h   | * | mov dword ptr [ebp+118h], 1 ",gcc,1
jz loc_40A1DA  | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1  | * | loc_409701:  ",gcc,1
"jmp def_40A961   | * | mov dword ptr [ebp+118h], 1  ",gcc,1
loc_409701:   | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1   | * | loc_409710:  ",gcc,1
"loc_409710:   | * | mov ebx, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | mov ecx, [ecx+8] ",gcc,1
"mov ebx, [ecx+4]  | * | mov [esp+0ACh+var_90], ecx ",gcc,1
"mov ecx, [ecx+8]  | * | mov eax, [ebx] ",gcc,1
"mov [esp+0ACh+var_90], ecx  | * | cmp eax, 2Dh  ",gcc,1
"mov eax, [ebx]  | * | jz loc_40A453 ",gcc,1
"cmp eax, 2Dh   | * | cmp eax, 2Fh  ",gcc,1
jz loc_40A453  | * | jz loc_40A527 ,gcc,1
"cmp eax, 2Fh   | * | mov ecx, ebx ",gcc,1
"jz loc_40A527  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov eax, ebp  | * | loc_40973F:  ",gcc,1
"call _d_print_expr_op  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40973F:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov edx, [esp+0ACh+var_8C]  | * | call _d_print_subexpr ",gcc,11
call _d_print_subexpr  | * | loc_409753:  ,gcc,1
"loc_409753:   | * | mov eax, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]   | * | mov [esp+0ACh+var_A4], eax ",gcc,1
"mov eax, [ecx+4]  | * | mov [esp+0ACh+var_A8], offset aLd  ",gcc,1
"mov [esp+0ACh+var_A4], eax  | * | lea ebx, [esp+0ACh+var_5C] ",gcc,3
"mov [esp+0ACh+var_A8], offset aLd   | * | mov [esp+0ACh+var_AC], ebx  ",gcc,4
"lea ebx, [esp+0ACh+var_5C]  | * | call _sprintf ",gcc,4
"mov [esp+0ACh+var_AC], ebx   | * | xor eax, eax ",gcc,4
"call _sprintf  | * | mov ecx, 0FFFFFFFFh ",gcc,5
"xor eax, eax  | * | mov edi, ebx ",gcc,6
"mov edi, ebx  | * | not ecx ",gcc,6
not ecx  | * | jz def_40A961  ,gcc,1
"dec ecx  | * | mov eax, [ebp+100h] ",gcc,1
"jz def_40A961   | * | mov edi, ebx ",gcc,1
"mov eax, [ebp+100h]  | * | lea esi, [ebx+ecx] ",gcc,1
"mov edi, ebx  | * | jmp short loc_4097B0 ",gcc,1
"lea esi, [ebx+ecx]  | * | align 4 ",gcc,2
jmp short loc_4097B0  | * | loc_409794:  ,gcc,1
"align 4  | * | mov edx, eax ",gcc,2
loc_409794:   | * | inc eax ,gcc,1
"mov edx, eax  | * | loc_409797:  ",gcc,1
"inc eax  | * | mov [ebp+edx+0], bl ",gcc,5
"loc_409797:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+edx+0], bl  | * | mov [ebp+104h], bl ",gcc,5
"mov [ebp+100h], eax  | * | inc edi ",gcc,4
"mov [ebp+104h], bl  | * | cmp edi, esi ",gcc,5
inc edi  | * | jz def_40A961  ,gcc,1
"cmp edi, esi  | * | loc_4097B0:  ",gcc,1
"jz def_40A961   | * | mov bl, [edi] ",gcc,1
"loc_4097B0:   | * | cmp eax, 0FFh ",gcc,1
"mov bl, [edi]  | * | jnz short loc_409794 ",gcc,1
"jnz short loc_409794  | * | mov eax, [ebp+10Ch] ",gcc,1
"mov eax, 1  | * | jmp short loc_409797 ",gcc,1
"xor edx, edx  | * | loc_4097EA:  ",gcc,1
"jmp short loc_409797  | * | mov eax, [ebp+100h]  ",gcc,1
"loc_4097EA:   | * | mov ebx, offset aDecltype  ",gcc,1
"mov eax, [ebp+100h]   | * | jmp short loc_409818 ",gcc,1
"mov ebx, offset aDecltype   | * | align 4 ",gcc,1
jmp short loc_409818  | * | loc_4097F8:  ,gcc,1
loc_4097F8:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4097FB:  ",gcc,1
"loc_4097FB:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414EEFh ",gcc,1
inc ebx  | * | jz loc_409C6E ,gcc,1
"cmp ebx, 414EEFh  | * | loc_409818:  ",gcc,1
"jz loc_409C6E  | * | mov dl, [ebx] ",gcc,1
"loc_409818:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4097F8 ",gcc,1
"jnz short loc_4097F8  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4097FB ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | align 4 ",gcc,1
jmp short loc_4097FB  | * | loc_40985C:  ,gcc,1
"align 4  | * | mov ebx, [esp+0ACh+var_84] ",gcc,1
loc_40985C:   | * | jmp loc_407FC0 ,gcc,1
"mov ebx, [esp+0ACh+var_84]  | * | loc_409865:  ",gcc,1
"jmp loc_407FC0  | * | mov eax, [esp+0ACh+var_90] ",gcc,1
"loc_409865:   | * | mov ecx, [eax+8] ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40A5E9 ",gcc,1
jz loc_40A5E9  | * | loc_40988B:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 5Dh  ",gcc,1
"loc_40988B:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 5Dh   | * | mov byte ptr [ebp+104h], 5Dh  ",gcc,1
"mov byte ptr [ebp+104h], 5Dh   | * | loc_4098A2:  ",gcc,1
"jmp def_40A961   | * | mov ebx, [esi+4] ",gcc,1
"loc_4098A2:   | * | mov dl, [ebx] ",gcc,1
"mov ebx, [esi+4]  | * | sub edx, 61h  ",gcc,1
"mov dl, [ebx]  | * | cmp dl, 19h ",gcc,1
"sub edx, 61h   | * | jbe loc_40A381 ",gcc,1
"cmp dl, 19h  | * | loc_4098B3:  ",gcc,1
"jbe loc_40A381  | * | cmp byte ptr [ebx+edi-1], 20h  ",gcc,1
loc_4098B3:   | * | jnz short loc_4098BB ,gcc,1
"cmp byte ptr [ebx+edi-1], 20h   | * | dec edi ",gcc,1
jnz short loc_4098BB  | * | loc_4098BB:  ,gcc,1
"dec edi  | * | test edi, edi ",gcc,1
loc_4098BB:   | * | jz def_40A961  ,gcc,1
"test edi, edi  | * | mov eax, [ebp+100h] ",gcc,1
"jz def_40A961   | * | xor esi, esi ",gcc,1
"mov eax, [ebp+100h]  | * | mov ecx, ebx ",gcc,1
"xor esi, esi  | * | jmp short loc_4098EC ",gcc,1
"mov ecx, ebx  | * | align 10h ",gcc,1
jmp short loc_4098EC  | * | loc_4098D0:  ,gcc,1
loc_4098D0:   | * | inc eax ,gcc,1
"mov edx, eax  | * | loc_4098D3:  ",gcc,1
"loc_4098D3:   | * | mov [ebp+100h], eax ",gcc,1
inc esi  | * | jz def_40A961  ,gcc,1
"cmp edi, esi  | * | loc_4098EC:  ",gcc,1
"jz def_40A961   | * | mov bl, [ecx+esi] ",gcc,1
"loc_4098EC:   | * | cmp eax, 0FFh ",gcc,1
"mov bl, [ecx+esi]  | * | jnz short loc_4098D0 ",gcc,1
"jnz short loc_4098D0  | * | mov eax, [ebp+10Ch] ",gcc,1
"mov [esp+0ACh+var_A8], 0FFh  | * | mov [esp+0ACh+var_94], ecx ",gcc,1
"mov [esp+0ACh+var_94], ecx  | * | inc dword ptr [ebp+120h] ",gcc,1
"mov eax, 1  | * | mov ecx, [esp+0ACh+var_94] ",gcc,1
"xor edx, edx  | * | jmp short loc_4098D3 ",gcc,1
"mov ecx, [esp+0ACh+var_94]  | * | loc_40992F:  ",gcc,1
"jmp short loc_4098D3  | * | mov edx, [esp+0ACh+var_90] ",gcc,1
"loc_40992F:   | * | mov ecx, [edx+4] ",gcc,1
"mov ecx, [edx+4]  | * | mov eax, ebp ",gcc,7
call _d_print_comp  | * | loc_409946:  ,gcc,1
"jmp def_40A961   | * | mov eax, [esp+0ACh+var_90] ",gcc,6
"loc_409946:   | * | mov ecx, [eax+4] ",gcc,1
call _d_print_comp  | * | loc_40995D:  ,gcc,1
"jmp def_40A961   | * | mov esi, [esp+0ACh+var_90] ",gcc,9
"loc_40995D:   | * | mov ecx, [esi+4] ",gcc,1
call _d_print_comp  | * | loc_409974:  ,gcc,1
"jmp def_40A961   | * | mov edx, [esp+0ACh+var_90] ",gcc,5
"loc_409974:   | * | mov ecx, [edx+4] ",gcc,1
call _d_print_comp  | * | loc_40998B:  ,gcc,1
"loc_40998B:   | * | mov ecx, [esi+4] ",gcc,1
"call _d_print_comp  | * | mov ebx, offset aIn  ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_4099C8 ",gcc,1
"mov ebx, offset aIn   | * | align 4 ",gcc,1
jmp short loc_4099C8  | * | loc_4099AC:  ,gcc,1
loc_4099AC:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_4099AF:  ",gcc,1
"loc_4099AF:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414D87h ",gcc,1
inc ebx  | * | jz short loc_409A0A ,gcc,1
"cmp ebx, 414D87h  | * | loc_4099C8:  ",gcc,1
"jz short loc_409A0A  | * | mov dl, [ebx] ",gcc,1
"loc_4099C8:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_4099AC ",gcc,1
"jnz short loc_4099AC  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_4099AF ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_409A0A:  ",gcc,1
"jmp short loc_4099AF  | * | mov eax, [esp+0ACh+var_90] ",gcc,1
"loc_409A0A:   | * | mov ecx, [eax+8] ",gcc,1
call _d_print_comp  | * | loc_409A21:  ,gcc,1
"loc_409A21:   | * | mov ecx, [edx+4] ",gcc,1
call _d_print_comp  | * | loc_409A38:  ,gcc,1
"loc_409A38:   | * | mov ecx, [eax+4] ",gcc,1
call _d_print_comp  | * | loc_409A4F:  ,gcc,1
"jmp def_40A961   | * | mov ecx, [esp+0ACh+var_90] ",gcc,4
"loc_409A4F:   | * | mov eax, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | inc eax ",gcc,2
"mov eax, [ecx+4]  | * | mov [esp+0ACh+var_A4], eax ",gcc,1
"inc eax  | * | mov [esp+0ACh+var_A8], offset aLd  ",gcc,2
"repne scasb  | * | mov eax, [ebp+100h] ",gcc,3
not ecx  | * | dec ecx ,gcc,3
"mov eax, [ebp+100h]  | * | jz short loc_409ADE ",gcc,1
"dec ecx  | * | mov edi, ebx ",gcc,3
"jz short loc_409ADE  | * | lea esi, [ebx+ecx] ",gcc,1
"mov edi, ebx  | * | jmp short loc_409AA4 ",gcc,1
"lea esi, [ebx+ecx]  | * | loc_409A8C:  ",gcc,1
"jmp short loc_409AA4  | * | mov edx, eax ",gcc,1
loc_409A8C:   | * | inc eax ,gcc,1
"mov edx, eax  | * | loc_409A8F:  ",gcc,1
"loc_409A8F:   | * | mov [ebp+100h], eax ",gcc,1
inc edi  | * | jz short loc_409ADE ,gcc,1
"cmp edi, esi  | * | loc_409AA4:  ",gcc,1
"jz short loc_409ADE  | * | mov bl, [edi] ",gcc,1
"loc_409AA4:   | * | cmp eax, 0FFh ",gcc,1
"mov bl, [edi]  | * | jnz short loc_409A8C ",gcc,1
"jnz short loc_409A8C  | * | mov eax, [ebp+10Ch] ",gcc,1
"mov eax, 1  | * | jmp short loc_409A8F ",gcc,1
"xor edx, edx  | * | loc_409ADE:  ",gcc,1
"jmp short loc_409A8F  | * | cmp eax, 0FFh ",gcc,1
loc_409ADE:   | * | jz loc_40A6ED ,gcc,1
jz loc_40A6ED  | * | loc_409AEC:  ,gcc,1
"loc_409AEC:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+104h], 7Dh   | * | loc_409B03:  ",gcc,1
"loc_409B03:   | * | mov ecx, [edx+4] ",gcc,1
"call _d_print_comp  | * | mov ebx, offset asc_414F44  ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_409B40 ",gcc,1
"mov ebx, offset asc_414F44   | * | align 4 ",gcc,1
jmp short loc_409B40  | * | loc_409B24:  ,gcc,1
loc_409B24:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409B27:  ",gcc,1
"loc_409B27:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414F46h ",gcc,1
inc ebx  | * | jz short loc_409B82 ,gcc,1
"cmp ebx, 414F46h  | * | loc_409B40:  ",gcc,1
"jz short loc_409B82  | * | mov dl, [ebx] ",gcc,1
"loc_409B40:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409B24 ",gcc,1
"jnz short loc_409B24  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409B27 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_409B82:  ",gcc,1
"jmp short loc_409B27  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_409B82:   | * | mov eax, [ecx+8] ",gcc,1
"mov eax, [ecx+8]  | * | mov [esp+0ACh+var_A4], eax ",gcc,1
"mov eax, [ebp+100h]  | * | jz short loc_409C12 ",gcc,1
"jz short loc_409C12  | * | lea esi, [ebx+ecx] ",gcc,1
"mov edi, ebx  | * | jmp short loc_409BD8 ",gcc,1
"lea esi, [ebx+ecx]  | * | align 10h ",gcc,1
jmp short loc_409BD8  | * | loc_409BC0:  ,gcc,1
loc_409BC0:   | * | inc eax ,gcc,1
"mov edx, eax  | * | loc_409BC3:  ",gcc,1
"loc_409BC3:   | * | mov [ebp+100h], eax ",gcc,1
inc edi  | * | jz short loc_409C12 ,gcc,1
"cmp edi, esi  | * | loc_409BD8:  ",gcc,1
"jz short loc_409C12  | * | mov bl, [edi] ",gcc,1
"loc_409BD8:   | * | cmp eax, 0FFh ",gcc,1
"mov bl, [edi]  | * | jnz short loc_409BC0 ",gcc,1
"jnz short loc_409BC0  | * | mov eax, [ebp+10Ch] ",gcc,1
"mov eax, 1  | * | jmp short loc_409BC3 ",gcc,1
"xor edx, edx  | * | loc_409C12:  ",gcc,1
"jmp short loc_409BC3  | * | cmp eax, 0FFh ",gcc,1
loc_409C12:   | * | jz loc_40A5B5 ,gcc,1
jz loc_40A5B5  | * | loc_409C20:  ,gcc,1
"loc_409C20:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+104h], 7Dh   | * | loc_409C37:  ",gcc,1
"jmp def_40A961   | * | cmp eax, 0FFh ",gcc,2
loc_409C37:   | * | jz loc_40AB6D ,gcc,1
jz loc_40AB6D  | * | loc_409C45:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 2Eh  ",gcc,1
"loc_409C45:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+eax+0], 2Eh   | * | mov byte ptr [ebp+104h], 2Eh  ",gcc,1
"mov [ebp+100h], edx  | * | loc_409C57:  ",gcc,1
"mov byte ptr [ebp+104h], 2Eh   | * | mov eax, [esp+0ACh+var_90] ",gcc,1
"loc_409C57:   | * | mov ecx, [eax+8] ",gcc,1
call _d_print_comp  | * | loc_409C6E:  ,gcc,1
"loc_409C6E:   | * | mov ecx, [esi+4] ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40A755 ",gcc,1
jz loc_40A755  | * | loc_409C94:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebp+eax+0], 29h  ",gcc,1
"loc_409C94:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+104h], 29h   | * | loc_409CAB:  ",gcc,1
"loc_409CAB:   | * | mov ecx, [esi+4] ",gcc,1
call _d_print_comp  | * | loc_409CC2:  ,gcc,1
"loc_409CC2:   | * | mov ecx, [esi+8] ",gcc,1
call _d_print_comp  | * | loc_409CD9:  ,gcc,1
"loc_409CD9:   | * | add ecx, 4 ",gcc,1
"add ecx, 4  | * | mov eax, ebp ",gcc,1
"mov edx, [esp+0ACh+var_8C]  | * | call _d_print_cast_isra_10 ",gcc,2
call _d_print_cast_isra_10  | * | loc_409CF0:  ,gcc,1
"loc_409CF0:   | * | mov ecx, [eax+4] ",gcc,1
call _d_print_comp  | * | loc_409D07:  ,gcc,1
"loc_409D07:   | * | mov ecx, [esi+4] ",gcc,1
call _d_print_comp  | * | loc_409D1E:  ,gcc,1
"loc_409D1E:   | * | mov ecx, [edx+4] ",gcc,1
call _d_print_comp  | * | loc_409D35:  ,gcc,1
"loc_409D35:   | * | mov ecx, [eax+4] ",gcc,1
call _d_print_comp  | * | loc_409D4C:  ,gcc,1
"loc_409D4C:   | * | mov ecx, [esi+4] ",gcc,1
call _d_print_comp  | * | loc_409D63:  ,gcc,1
"loc_409D63:   | * | mov ecx, [edx+4] ",gcc,1
call _d_print_comp  | * | loc_409D7A:  ,gcc,1
"loc_409D7A:   | * | mov ecx, [eax+4] ",gcc,1
call _d_print_comp  | * | loc_409D91:  ,gcc,1
"loc_409D91:   | * | mov ecx, [esi+4] ",gcc,1
call _d_print_comp  | * | loc_409DA8:  ,gcc,1
"loc_409DA8:   | * | mov ecx, [esi+4] ",gcc,1
call _d_print_comp  | * | loc_409DBF:  ,gcc,1
"loc_409DBF:   | * | mov ecx, [eax+8] ",gcc,1
"call _d_print_comp  | * | mov ebx, offset aFor  ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_409DFC ",gcc,1
"mov ebx, offset aFor   | * | align 10h ",gcc,1
jmp short loc_409DFC  | * | loc_409DE0:  ,gcc,1
loc_409DE0:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409DE3:  ",gcc,1
"loc_409DE3:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E3Ch ",gcc,1
inc ebx  | * | jz short loc_409E3E ,gcc,1
"cmp ebx, 414E3Ch  | * | loc_409DFC:  ",gcc,1
"jz short loc_409E3E  | * | mov dl, [ebx] ",gcc,1
"loc_409DFC:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409DE0 ",gcc,1
"jnz short loc_409DE0  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409DE3 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_409E3E:  ",gcc,1
"jmp short loc_409DE3  | * | mov edx, [esp+0ACh+var_90] ",gcc,1
"loc_409E3E:   | * | mov ecx, [edx+4] ",gcc,1
call _d_print_comp  | * | loc_409E55:  ,gcc,1
"jmp def_40A961   | * | mov esi, [ebp+120h] ",gcc,1
"loc_409E55:   | * | mov eax, [esp+0ACh+var_90] ",gcc,1
"mov esi, [ebp+120h]  | * | mov ecx, [eax+8] ",gcc,1
"mov eax, ebp  | * | cmp esi, [ebp+120h] ",gcc,1
call _d_print_comp  | * | jnz def_40A961  ,gcc,1
"cmp esi, [ebp+120h]  | * | cmp [ebp+100h], ebx ",gcc,1
jnz def_40A961   | * | jnz def_40A961  ,gcc,1
"cmp [ebp+100h], ebx  | * | sub ebx, 2 ",gcc,1
"jnz def_40A961   | * | mov [ebp+100h], ebx ",gcc,1
"sub ebx, 2  | * | jmp def_40A961  ",gcc,1
"mov [ebp+100h], ebx  | * | loc_409E93:  ",gcc,1
"jmp def_40A961   | * | mov dword ptr [ebp+118h], 1 ",gcc,2
loc_409E93:   | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1  | * | loc_409EA2:  ",gcc,1
"loc_409EA2:   | * | mov ecx, [ecx+4] ",gcc,1
"mov ecx, [ecx+4]  | * | test edi, edi ",gcc,1
"mov [esp+0ACh+var_90], ecx  | * | jnz loc_407FB3 ",gcc,1
"test edi, edi  | * | jmp def_40A961  ",gcc,1
jnz loc_407FB3  | * | loc_409EBA:  ,gcc,1
"jmp def_40A961   | * | xor ebx, ebx ",gcc,1
loc_409EBA:   | * | jmp loc_409480 ,gcc,1
"xor ebx, ebx  | * | loc_409EC1:  ",gcc,1
"jmp loc_409480  | * | mov ebx, offset aFract  ",gcc,1
loc_409EC1:   | * | jmp short loc_409EE8 ,gcc,1
"mov ebx, offset aFract   | * | loc_409EC8:  ",gcc,1
"jmp short loc_409EE8  | * | mov ecx, eax ",gcc,1
loc_409EC8:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409ECB:  ",gcc,1
"loc_409ECB:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E94h ",gcc,1
"cmp ebx, 414E94h  | * | loc_409EE8:  ",gcc,1
"loc_409EE8:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409EC8 ",gcc,1
"jnz short loc_409EC8  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409ECB ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_409F2A:  ",gcc,1
"jmp short loc_409ECB  | * | mov ebx, offset aParm  ",gcc,1
loc_409F2A:   | * | jmp short loc_409F50 ,gcc,1
"mov ebx, offset aParm   | * | align 4 ",gcc,1
jmp short loc_409F50  | * | loc_409F34:  ,gcc,1
loc_409F34:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_409F37:  ",gcc,1
"loc_409F37:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414EFFh ",gcc,1
inc ebx  | * | jz short loc_409F92 ,gcc,1
"cmp ebx, 414EFFh  | * | loc_409F50:  ",gcc,1
"jz short loc_409F92  | * | mov dl, [ebx] ",gcc,1
"loc_409F50:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_409F34 ",gcc,1
"jnz short loc_409F34  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_409F37 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_409F92:  ",gcc,1
"jmp short loc_409F37  | * | mov [esp+0ACh+var_A4], esi ",gcc,1
"loc_409F92:   | * | mov [esp+0ACh+var_A8], offset aLd  ",gcc,1
"mov [esp+0ACh+var_A4], esi  | * | lea ebx, [esp+0ACh+var_5C] ",gcc,1
"mov eax, [ebp+100h]  | * | jz short loc_40A01A ",gcc,1
"jz short loc_40A01A  | * | lea esi, [ebx+ecx] ",gcc,1
"mov edi, ebx  | * | jmp short loc_409FE0 ",gcc,1
jmp short loc_409FE0  | * | loc_409FC8:  ,gcc,1
loc_409FC8:   | * | inc eax ,gcc,1
"mov edx, eax  | * | loc_409FCB:  ",gcc,1
"loc_409FCB:   | * | mov [ebp+100h], eax ",gcc,1
inc edi  | * | jz short loc_40A01A ,gcc,1
"cmp edi, esi  | * | loc_409FE0:  ",gcc,1
"jz short loc_40A01A  | * | mov bl, [edi] ",gcc,1
"loc_409FE0:   | * | cmp eax, 0FFh ",gcc,1
"mov bl, [edi]  | * | jnz short loc_409FC8 ",gcc,1
"jnz short loc_409FC8  | * | mov eax, [ebp+10Ch] ",gcc,1
"mov eax, 1  | * | jmp short loc_409FCB ",gcc,1
"xor edx, edx  | * | loc_40A01A:  ",gcc,1
"jmp short loc_409FCB  | * | cmp eax, 0FFh ",gcc,1
loc_40A01A:   | * | jz loc_40AC10 ,gcc,1
jz loc_40AC10  | * | loc_40A028:  ,gcc,1
"loc_40A028:   | * | mov [ebp+100h], edx ",gcc,1
"mov byte ptr [ebp+104h], 7Dh   | * | loc_40A03F:  ",gcc,1
"jmp def_40A961   | * | mov esi, [eax+0Ch] ",gcc,1
"loc_40A03F:   | * | mov edi, [eax+8] ",gcc,1
"mov esi, [eax+0Ch]  | * | test esi, esi ",gcc,1
"mov edi, [eax+8]  | * | jz def_40A961  ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_40A074 ",gcc,1
jmp short loc_40A074  | * | loc_40A058:  ,gcc,1
loc_40A058:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40A05B:  ",gcc,1
"loc_40A05B:   | * | mov [ebp+100h], eax ",gcc,1
"cmp esi, ebx  | * | loc_40A074:  ",gcc,1
"loc_40A074:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [edi+ebx]  | * | jnz short loc_40A058 ",gcc,1
"jnz short loc_40A058  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40A05B ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_40A0B7:  ",gcc,1
"jmp short loc_40A05B  | * | mov ebx, [ecx+4] ",gcc,1
"loc_40A0B7:   | * | mov edi, [ecx+8] ",gcc,1
"mov ebx, [ecx+4]  | * | add edi, ebx ",gcc,1
"mov edi, [ecx+8]  | * | cmp ebx, edi ",gcc,1
"add edi, ebx  | * | jb short loc_40A0E4 ",gcc,1
"cmp ebx, edi  | * | jmp def_40A961  ",gcc,1
jb short loc_40A0E4  | * | loc_40A0C8:  ,gcc,1
"jmp def_40A961   | * | lea ecx, [edx+1] ",gcc,1
loc_40A0C8:   | * | loc_40A0CB:  ,gcc,1
"lea ecx, [edx+1]  | * | mov [ebp+edx+0], al ",gcc,1
"loc_40A0CB:   | * | mov [ebp+100h], ecx ",gcc,1
"mov [ebp+100h], ecx  | * | loc_40A0DB:  ",gcc,1
"mov [ebp+104h], al  | * | inc ebx ",gcc,1
"loc_40A0DB:   | * | cmp edi, ebx ",gcc,1
inc ebx  | * | jbe def_40A961  ,gcc,1
"cmp edi, ebx  | * | loc_40A0E4:  ",gcc,1
"jbe def_40A961   | * | mov eax, edi ",gcc,1
"loc_40A0E4:   | * | sub eax, ebx ",gcc,1
"mov eax, edi  | * | cmp eax, 3 ",gcc,1
"sub eax, ebx  | * | mov al, [ebx] ",gcc,1
"cmp eax, 3  | * | jle short loc_40A0F3 ",gcc,1
"mov al, [ebx]  | * | cmp al, 5Fh  ",gcc,1
jle short loc_40A0F3  | * | jz short loc_40A13A ,gcc,1
"cmp al, 5Fh   | * | loc_40A0F3:  ",gcc,1
"jz short loc_40A13A  | * | mov edx, [ebp+100h] ",gcc,1
"loc_40A0F3:   | * | cmp edx, 0FFh ",gcc,1
"mov edx, [ebp+100h]  | * | jnz short loc_40A0C8 ",gcc,1
"cmp edx, 0FFh  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,2
"jnz short loc_40A0C8  | * | mov edx, [ebp+10Ch] ",gcc,1
"call dword ptr [ebp+108h]  | * | mov ecx, 1 ",gcc,1
"mov ecx, 1  | * | mov al, byte ptr [esp+0ACh+var_94] ",gcc,1
"xor edx, edx  | * | jmp short loc_40A0CB ",gcc,1
"mov al, byte ptr [esp+0ACh+var_94]  | * | loc_40A13A:  ",gcc,1
"jmp short loc_40A0CB  | * | cmp byte ptr [ebx+1], 5Fh  ",gcc,1
loc_40A13A:   | * | jnz short loc_40A0F3 ,gcc,1
"cmp byte ptr [ebx+1], 5Fh   | * | cmp byte ptr [ebx+2], 55h  ",gcc,1
jnz short loc_40A0F3  | * | jnz short loc_40A0F3 ,gcc,1
"cmp byte ptr [ebx+2], 55h   | * | lea esi, [ebx+3] ",gcc,1
"jnz short loc_40A0F3  | * | cmp edi, esi ",gcc,1
"lea esi, [ebx+3]  | * | jbe short loc_40A0F3 ",gcc,1
"cmp edi, esi  | * | xor ecx, ecx ",gcc,1
"jbe short loc_40A0F3  | * | mov byte ptr [esp+0ACh+var_90], al ",gcc,1
"xor ecx, ecx  | * | mov eax, ecx ",gcc,1
"mov byte ptr [esp+0ACh+var_90], al  | * | jmp short loc_40A168 ",gcc,1
"mov eax, ecx  | * | loc_40A157:  ",gcc,1
"jmp short loc_40A168  | * | sub edx, 30h  ",gcc,1
loc_40A157:   | * | loc_40A15A:  ,gcc,1
"sub edx, 30h   | * | shl eax, 4 ",gcc,1
"loc_40A15A:   | * | add eax, edx ",gcc,1
"shl eax, 4  | * | inc esi ",gcc,1
"add eax, edx  | * | cmp esi, edi ",gcc,1
inc esi  | * | jz loc_40ACAA ,gcc,1
"cmp esi, edi  | * | loc_40A168:  ",gcc,1
"jz loc_40ACAA  | * | movsx edx, byte ptr [esi] ",gcc,1
"loc_40A168:   | * | lea ecx, [edx-30h] ",gcc,1
"movsx edx, byte ptr [esi]  | * | cmp cl, 9 ",gcc,1
"lea ecx, [edx-30h]  | * | jbe short loc_40A157 ",gcc,1
"cmp cl, 9  | * | lea ecx, [edx-41h] ",gcc,1
"jbe short loc_40A157  | * | cmp cl, 5 ",gcc,1
"lea ecx, [edx-41h]  | * | ja loc_40A332 ",gcc,1
"cmp cl, 5  | * | sub edx, 37h  ",gcc,1
ja loc_40A332  | * | jmp short loc_40A15A ,gcc,1
"sub edx, 37h   | * | loc_40A184:  ",gcc,1
"jmp short loc_40A15A  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"loc_40A184:   | * | mov ecx, [esi+8] ",gcc,1
"mov eax, ebp  | * | mov eax, [esp+0ACh+var_78] ",gcc,1
"call _d_print_comp  | * | mov [ebp+114h], eax ",gcc,2
"mov eax, [esp+0ACh+var_78]  | * | cmp [esp+0ACh+var_54], 0 ",gcc,1
"mov [ebp+114h], eax  | * | jnz def_40A961  ",gcc,1
"cmp [esp+0ACh+var_54], 0  | * | loc_40A1AB:  ",gcc,1
"jnz def_40A961   | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40A1AB:   | * | add ecx, 4 ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov eax, [ebp+114h] ",gcc,2
"add ecx, 4  | * | mov [esp+0ACh+var_AC], eax ",gcc,1
"mov eax, [ebp+114h]  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov [esp+0ACh+var_AC], eax  | * | mov eax, ebp ",gcc,2
"mov edx, [esp+0ACh+var_8C]  | * | call _d_print_array_type_isra_7 ",gcc,1
call _d_print_array_type_isra_7  | * | loc_40A1CB:  ,gcc,1
"jmp def_40A961   | * | mov esi, [ebp+114h] ",gcc,1
"loc_40A1CB:   | * | mov [esp+0ACh+var_90], eax ",gcc,1
"mov esi, [ebp+114h]  | * | jmp loc_407F13 ",gcc,1
"mov [esp+0ACh+var_90], eax  | * | loc_40A1DA:  ",gcc,1
"jmp loc_407F13  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40A1DA:   | * | mov edx, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | cmp dword ptr [edx], 2Dh  ",gcc,1
"mov edx, [ecx+4]  | * | jz loc_40ABA1 ",gcc,1
"cmp dword ptr [edx], 2Dh   | * | loc_40A1EA:  ",gcc,1
"jz loc_40ABA1  | * | mov edx, [edx+4] ",gcc,1
"loc_40A1EA:   | * | mov esi, [edx] ",gcc,1
"mov edx, [edx+4]  | * | mov ecx, 3 ",gcc,1
"mov esi, [edx]  | * | mov edi, offset unk_414AE2 ",gcc,1
"mov edi, offset unk_414AE2  | * | mov ecx, [eax+4] ",gcc,1
repe cmpsb  | * | jnz short loc_40A209 ,gcc,1
"mov ecx, [eax+4]  | * | cmp dword ptr [ecx], 3 ",gcc,1
jnz short loc_40A209  | * | jz loc_40AC56 ,gcc,1
"cmp dword ptr [ecx], 3  | * | loc_40A209:  ",gcc,1
"jz loc_40AC56  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"loc_40A209:   | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | loc_40A214:  ",gcc,1
"call _d_print_subexpr  | * | mov ecx, [esp+0ACh+var_90] ",gcc,2
"loc_40A214:   | * | mov eax, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov edx, [eax+4] ",gcc,1
"mov eax, [ecx+4]  | * | mov edx, [edx] ",gcc,1
"mov edx, [eax+4]  | * | mov edi, offset aIx  ",gcc,1
"mov edx, [edx]  | * | mov ecx, 3 ",gcc,1
"mov edi, offset aIx   | * | mov esi, edx ",gcc,1
"mov esi, edx  | * | jz loc_40AB3B ",gcc,1
"repe cmpsb  | * | mov ecx, 3 ",gcc,1
"jz loc_40AB3B  | * | mov esi, edx ",gcc,1
"mov ecx, 3  | * | mov edi, offset unk_414AE2 ",gcc,1
"mov esi, edx  | * | repe cmpsb ",gcc,1
"mov edi, offset unk_414AE2  | * | jnz loc_40AC44 ",gcc,1
repe cmpsb  | * | loc_40A248:  ,gcc,1
"jnz loc_40AC44  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40A248:   | * | mov eax, [ecx+8] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov ecx, [eax+8] ",gcc,2
"mov eax, [ecx+8]  | * | mov edx, [esp+0ACh+var_8C] ",gcc,2
"mov eax, ebp  | * | loc_40A25D:  ",gcc,1
"loc_40A25D:   | * | mov eax, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | cmp dword ptr [eax], 2Dh  ",gcc,1
"mov eax, [ecx+4]  | * | jnz def_40A961  ",gcc,1
"cmp dword ptr [eax], 2Dh   | * | mov eax, [eax+4] ",gcc,1
"jnz def_40A961   | * | cmp dword ptr [eax+8], 1 ",gcc,1
"mov eax, [eax+4]  | * | jnz def_40A961  ",gcc,2
"cmp dword ptr [eax+8], 1  | * | mov eax, [eax+4] ",gcc,1
"jnz def_40A961   | * | cmp byte ptr [eax], 3Eh  ",gcc,1
"cmp byte ptr [eax], 3Eh   | * | mov edx, 29h  ",gcc,1
"jnz def_40A961   | * | mov eax, ebp ",gcc,2
"mov edx, 29h   | * | call _d_append_char ",gcc,1
call _d_append_char  | * | align 4 ,gcc,1
jmp def_40A961   | * | loc_40A298:  ,gcc,1
"align 4  | * | mov edx, [eax+8] ",gcc,1
"loc_40A298:   | * | cmp dword ptr [edx], 36h  ",gcc,1
"mov edx, [eax+8]  | * | jnz loc_40935B ",gcc,1
"cmp dword ptr [edx], 36h   | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"jnz loc_40935B  | * | mov ebx, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov eax, [eax+4] ",gcc,1
"mov ebx, [ecx+4]  | * | mov [esp+0ACh+var_90], eax ",gcc,1
"mov eax, [eax+4]  | * | mov ecx, [edx+4] ",gcc,1
"mov [esp+0ACh+var_90], eax  | * | mov [esp+0ACh+var_84], ecx ",gcc,1
"mov ecx, [edx+4]  | * | mov edx, [edx+8] ",gcc,1
"mov [esp+0ACh+var_84], ecx  | * | mov [esp+0ACh+var_88], edx ",gcc,1
"mov edx, [edx+8]  | * | mov eax, [ebx+4] ",gcc,1
"mov [esp+0ACh+var_88], edx  | * | mov esi, [eax] ",gcc,1
"mov eax, [ebx+4]  | * | mov edi, offset unk_414AEB ",gcc,1
"mov esi, [eax]  | * | mov ecx, 3 ",gcc,1
"mov edi, offset unk_414AEB  | * | repe cmpsb ",gcc,1
"mov ecx, 3  | * | jz loc_40AD11 ",gcc,1
"repe cmpsb  | * | mov edx, offset aNew  ",gcc,1
"jz loc_40AD11  | * | mov eax, ebp ",gcc,1
"mov edx, offset aNew   | * | call _d_append_string ",gcc,1
"mov eax, ebp  | * | mov ecx, [esp+0ACh+var_90] ",gcc,3
"call _d_append_string  | * | cmp dword ptr [ecx+4], 0 ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | jz short loc_40A304 ",gcc,1
"cmp dword ptr [ecx+4], 0  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"jz short loc_40A304  | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | mov edx, 20h  ",gcc,1
"call _d_print_subexpr  | * | mov eax, ebp ",gcc,3
"mov edx, 20h   | * | call _d_append_char ",gcc,2
"mov eax, ebp  | * | loc_40A304:  ",gcc,1
"call _d_append_char  | * | mov ecx, [esp+0ACh+var_84] ",gcc,1
"loc_40A304:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, [esp+0ACh+var_84]  | * | mov eax, ebp ",gcc,2
"mov eax, ebp  | * | cmp [esp+0ACh+var_88], 0 ",gcc,1
call _d_print_comp  | * | jz def_40A961  ,gcc,1
"cmp [esp+0ACh+var_88], 0  | * | mov ecx, [esp+0ACh+var_88] ",gcc,1
"jz def_40A961   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, [esp+0ACh+var_88]  | * | mov eax, ebp ",gcc,2
call _d_print_subexpr  | * | loc_40A332:  ,gcc,1
"jmp def_40A961   | * | lea ecx, [edx-61h] ",gcc,1
"loc_40A332:   | * | cmp cl, 5 ",gcc,1
"lea ecx, [edx-61h]  | * | ja loc_40AEC8 ",gcc,1
"cmp cl, 5  | * | sub edx, 57h  ",gcc,1
ja loc_40AEC8  | * | jmp loc_40A15A ,gcc,1
"sub edx, 57h   | * | loc_40A346:  ",gcc,1
"jmp loc_40A15A  | * | mov eax, [ebp+100h] ",gcc,1
loc_40A346:   | * | jmp loc_40904B ,gcc,1
"mov eax, [ebp+100h]  | * | loc_40A351:  ",gcc,1
"jmp loc_40904B  | * | mov edx, [ebp+11Ch] ",gcc,1
loc_40A351:   | * | jmp short loc_40A361 ,gcc,1
"mov edx, [ebp+11Ch]  | * | align 4 ",gcc,1
jmp short loc_40A361  | * | loc_40A35C:  ,gcc,1
loc_40A35C:   | * | jnz short loc_40A372 ,gcc,1
"cmp dword ptr [eax], 2Bh   | * | loc_40A361:  ",gcc,1
"jnz short loc_40A372  | * | cmp edx, 0 ",gcc,1
loc_40A361:   | * | jle loc_40B002 ,gcc,1
"cmp edx, 0  | * | dec edx ",gcc,1
"jle loc_40B002  | * | mov eax, [eax+8] ",gcc,1
"mov eax, [eax+8]  | * | jnz short loc_40A35C ",gcc,1
"test eax, eax  | * | loc_40A372:  ",gcc,1
"jnz short loc_40A35C  | * | mov dword ptr [ebp+118h], 1 ",gcc,1
loc_40A372:   | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1  | * | loc_40A381:  ",gcc,1
loc_40A381:   | * | jz loc_40AC7B ,gcc,1
"cmp eax, 0FFh  | * | loc_40A38C:  ",gcc,1
"jz loc_40AC7B  | * | mov byte ptr [ebp+eax+0], 20h  ",gcc,1
loc_40A38C:   | * | inc eax ,gcc,1
"mov [ebp+100h], eax  | * | mov ebx, [esi+4] ",gcc,1
"mov byte ptr [ebp+104h], 20h   | * | jmp loc_4098B3 ",gcc,1
"mov ebx, [esi+4]  | * | loc_40A3A7:  ",gcc,1
"jmp loc_4098B3  | * | mov eax, [ebp+100h] ",gcc,1
"loc_40A3A7:   | * | mov ebx, offset aSat  ",gcc,1
"mov eax, [ebp+100h]  | * | jmp short loc_40A3D4 ",gcc,1
"mov ebx, offset aSat   | * | loc_40A3B4:  ",gcc,1
"jmp short loc_40A3D4  | * | mov ecx, eax ",gcc,1
loc_40A3B4:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40A3B7:  ",gcc,1
"loc_40A3B7:   | * | mov [ebp+100h], eax ",gcc,1
"mov [ebp+104h], dl  | * | cmp ebx, 414E86h ",gcc,1
inc ebx  | * | jz loc_409005 ,gcc,1
"cmp ebx, 414E86h  | * | loc_40A3D4:  ",gcc,1
"jz loc_409005  | * | mov dl, [ebx] ",gcc,1
"loc_40A3D4:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebx]  | * | jnz short loc_40A3B4 ",gcc,1
"jnz short loc_40A3B4  | * | mov eax, [ebp+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40A3B7 ",gcc,1
"mov dl, byte ptr [esp+0ACh+var_94]  | * | loc_40A416:  ",gcc,1
"jmp short loc_40A3B7  | * | mov ebx, [esp+0ACh+var_8C] ",gcc,1
"loc_40A416:   | * | and ebx, 0FFFFFF9Fh ",gcc,1
"mov ebx, [esp+0ACh+var_8C]  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"and ebx, 0FFFFFF9Fh  | * | add ecx, 8 ",gcc,1
"add ecx, 8  | * | mov [esp+0ACh+var_AC], eax ",gcc,1
"mov eax, [ebp+114h]  | * | mov edx, ebx ",gcc,1
"mov edx, ebx  | * | call _d_print_function_type_isra_9 ",gcc,1
"mov eax, ebp  | * | mov eax, [esp+0ACh+var_90] ",gcc,1
"call _d_print_function_type_isra_9  | * | mov ecx, [eax+4] ",gcc,1
"mov eax, [esp+0ACh+var_90]  | * | test ecx, ecx ",gcc,1
"mov ecx, [eax+4]  | * | jz def_40A961  ",gcc,1
"test ecx, ecx  | * | mov edx, ebx ",gcc,1
"jz def_40A961   | * | mov eax, ebp ",gcc,1
"mov edx, ebx  | * | call _d_print_comp ",gcc,1
call _d_print_comp  | * | loc_40A453:  ,gcc,1
"jmp def_40A961   | * | mov eax, [ebx+4] ",gcc,1
"loc_40A453:   | * | mov eax, [eax] ",gcc,1
"mov eax, [ebx+4]  | * | mov [esp+0ACh+var_88], eax ",gcc,1
"mov eax, [eax]  | * | mov edi, offset aAd  ",gcc,1
"mov [esp+0ACh+var_88], eax  | * | mov ecx, 3 ",gcc,1
"mov edi, offset aAd   | * | mov esi, eax ",gcc,1
"mov esi, eax  | * | jnz short loc_40A479 ",gcc,1
"repe cmpsb  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"jnz short loc_40A479  | * | cmp dword ptr [ecx], 3 ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | jz loc_40ADE4 ",gcc,1
"cmp dword ptr [ecx], 3  | * | loc_40A479:  ",gcc,1
"jz loc_40ADE4  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40A479:   | * | cmp dword ptr [ecx], 33h  ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | jz loc_40AF56 ",gcc,1
"cmp dword ptr [ecx], 33h   | * | loc_40A486:  ",gcc,1
"jz loc_40AF56  | * | mov ecx, ebx ",gcc,1
"loc_40A486:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov eax, ebp  | * | mov eax, [esp+0ACh+var_88] ",gcc,1
"call _d_print_expr_op  | * | test eax, eax ",gcc,1
"mov eax, [esp+0ACh+var_88]  | * | jz loc_40973F ",gcc,1
"test eax, eax  | * | mov edi, offset aGs  ",gcc,1
"jz loc_40973F  | * | mov ecx, 3 ",gcc,1
"mov edi, offset aGs   | * | mov esi, [esp+0ACh+var_88] ",gcc,1
"mov esi, [esp+0ACh+var_88]  | * | jz loc_40A8D1 ",gcc,1
"repe cmpsb  | * | mov edi, offset unk_414ADF ",gcc,1
"jz loc_40A8D1  | * | mov ecx, 3 ",gcc,1
"mov edi, offset unk_414ADF  | * | mov esi, [esp+0ACh+var_88] ",gcc,1
"mov esi, [esp+0ACh+var_88]  | * | jnz loc_40973F ",gcc,1
"repe cmpsb  | * | mov eax, [ebp+100h] ",gcc,1
"jnz loc_40973F  | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40ADB5 ",gcc,1
"cmp eax, 0FFh  | * | loc_40A4DC:  ",gcc,1
"jz loc_40ADB5  | * | mov byte ptr [ebp+eax+0], 28h  ",gcc,1
loc_40A4DC:   | * | inc eax ,gcc,1
"mov byte ptr [ebp+eax+0], 28h   | * | mov [ebp+100h], eax ",gcc,2
"inc eax  | * | mov byte ptr [ebp+104h], 28h  ",gcc,2
"mov [ebp+100h], eax  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"mov byte ptr [ebp+104h], 28h   | * | mov edx, [esp+0ACh+var_8C] ",gcc,2
"mov eax, [ebp+100h]  | * | jz loc_40AD86 ",gcc,1
"cmp eax, 0FFh  | * | loc_40A50F:  ",gcc,1
"jz loc_40AD86  | * | mov byte ptr [ebp+eax+0], 29h  ",gcc,1
loc_40A50F:   | * | inc eax ,gcc,1
"mov byte ptr [ebp+eax+0], 29h   | * | mov [ebp+100h], eax ",gcc,2
"inc eax  | * | mov byte ptr [ebp+104h], 29h  ",gcc,2
"mov [ebp+100h], eax  | * | jmp def_40A961  ",gcc,2
"mov byte ptr [ebp+104h], 29h   | * | loc_40A527:  ",gcc,1
"jmp def_40A961   | * | mov eax, [ebp+100h] ",gcc,1
"loc_40A527:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40ACE2 ",gcc,1
"cmp eax, 0FFh  | * | loc_40A538:  ",gcc,1
"jz loc_40ACE2  | * | mov byte ptr [ebp+eax+0], 28h  ",gcc,1
loc_40A538:   | * | inc eax ,gcc,1
"mov [ebp+100h], eax  | * | lea ecx, [ebx+4] ",gcc,1
"lea ecx, [ebx+4]  | * | mov eax, ebp ",gcc,1
"call _d_print_cast_isra_10  | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40ACB3 ",gcc,1
"cmp eax, 0FFh  | * | loc_40A56A:  ",gcc,1
"jz loc_40ACB3  | * | mov byte ptr [ebp+eax+0], 29h  ",gcc,1
loc_40A56A:   | * | inc eax ,gcc,1
"mov [ebp+100h], eax  | * | jmp loc_40973F ",gcc,1
"mov byte ptr [ebp+104h], 29h   | * | loc_40A582:  ",gcc,1
"jmp loc_40973F  | * | mov byte ptr [ebp+ebx+0], 0 ",gcc,1
"loc_40A582:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov byte ptr [ebp+ebx+0], 0  | * | mov [esp+0ACh+var_A4], eax ",gcc,1
"mov eax, [ebp+10Ch]  | * | mov [esp+0ACh+var_A8], ebx ",gcc,1
"mov [esp+0ACh+var_A8], ebx  | * | call dword ptr [ebp+108h] ",gcc,1
"mov [esp+0ACh+var_AC], ebp  | * | mov dword ptr [ebp+100h], 0 ",gcc,2
call dword ptr [ebp+108h]  | * | inc dword ptr [ebp+120h] ,gcc,2
"mov dword ptr [ebp+100h], 0  | * | xor ebx, ebx ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40928D ,gcc,1
"xor ebx, ebx  | * | loc_40A5B5:  ",gcc,1
"jmp loc_40928D  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A5B5:   | * | mov eax, [ebp+10Ch] ",gcc,1
"call dword ptr [ebp+108h]  | * | mov edx, 1 ",gcc,13
"inc dword ptr [ebp+120h]  | * | xor eax, eax ",gcc,13
"mov edx, 1  | * | jmp loc_409C20 ",gcc,1
"xor eax, eax  | * | loc_40A5E9:  ",gcc,1
"jmp loc_409C20  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A5E9:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40988B ",gcc,1
"xor eax, eax  | * | loc_40A61D:  ",gcc,1
"jmp loc_40988B  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A61D:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_408D7A ",gcc,1
"xor eax, eax  | * | loc_40A651:  ",gcc,1
"jmp loc_408D7A  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A651:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_408D35 ",gcc,1
"xor eax, eax  | * | loc_40A685:  ",gcc,1
"jmp loc_408D35  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A685:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_4093CA ",gcc,1
"xor eax, eax  | * | loc_40A6B9:  ",gcc,1
"jmp loc_4093CA  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A6B9:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_409397 ",gcc,1
"xor eax, eax  | * | loc_40A6ED:  ",gcc,1
"jmp loc_409397  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A6ED:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_409AEC ",gcc,1
"xor eax, eax  | * | loc_40A721:  ",gcc,1
"jmp loc_409AEC  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A721:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_409322 ",gcc,1
"xor eax, eax  | * | loc_40A755:  ",gcc,1
"jmp loc_409322  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A755:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_409C94 ",gcc,1
"xor eax, eax  | * | loc_40A789:  ",gcc,1
"jmp loc_409C94  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A789:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_409425 ",gcc,1
"xor eax, eax  | * | loc_40A7BD:  ",gcc,1
"jmp loc_409425  | * | mov eax, [ebp+114h] ",gcc,1
"loc_40A7BD:   | * | mov dword ptr [esp+0ACh+var_5C], eax ",gcc,1
"mov eax, [ebp+110h]  | * | mov ecx, [ecx+4] ",gcc,1
"mov [esp+0ACh+var_50], eax  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, [ecx+4]  | * | and edx, 0FFFFFF9Fh ",gcc,1
"mov edx, [esp+0ACh+var_8C]  | * | mov eax, ebp ",gcc,1
"and edx, 0FFFFFF9Fh  | * | call _d_print_comp ",gcc,1
"mov eax, ebp  | * | mov eax, dword ptr [esp+0ACh+var_5C] ",gcc,1
"mov eax, dword ptr [esp+0ACh+var_5C]  | * | mov eax, [esp+0ACh+var_54] ",gcc,1
"mov [ebp+114h], eax  | * | test eax, eax ",gcc,1
"test eax, eax  | * | mov edx, 20h  ",gcc,1
"mov eax, ebp  | * | jmp loc_408991 ",gcc,1
call _d_append_char  | * | loc_40A823:  ,gcc,1
"jmp loc_408991  | * | mov ebp, [esp+0ACh+var_7C] ",gcc,1
"loc_40A823:   | * | mov dword ptr [ebp+118h], 1 ",gcc,1
"mov ebp, [esp+0ACh+var_7C]  | * | jmp def_40A961  ",gcc,1
"mov dword ptr [ebp+118h], 1  | * | loc_40A836:  ",gcc,1
"jmp def_40A961   | * | mov byte ptr [ebp+0FFh], 0 ",gcc,2
"loc_40A836:   | * | mov eax, [ebp+10Ch] ",gcc,1
"call dword ptr [ebp+108h]  | * | mov byte ptr [ebp+0], 29h  ",gcc,1
"inc dword ptr [ebp+120h]  | * | mov dword ptr [ebp+100h], 1 ",gcc,1
"mov byte ptr [ebp+0], 29h   | * | mov byte ptr [ebp+104h], 29h  ",gcc,1
"mov dword ptr [ebp+100h], 1  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"mov byte ptr [ebp+104h], 29h   | * | cmp dword ptr [ecx], 38h  ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | jnz loc_4094E7 ",gcc,1
"cmp dword ptr [ecx], 38h   | * | mov edx, 1 ",gcc,1
jnz loc_4094E7  | * | loc_40A885:  ,gcc,1
"mov edx, 1  | * | mov byte ptr [ebp+edx+0], 2Dh  ",gcc,1
loc_40A885:   | * | inc edx ,gcc,1
"mov byte ptr [ebp+edx+0], 2Dh   | * | mov [ebp+100h], edx ",gcc,1
"inc edx  | * | mov byte ptr [ebp+104h], 2Dh  ",gcc,1
"mov [ebp+100h], edx  | * | jmp loc_4094E7 ",gcc,1
"mov byte ptr [ebp+104h], 2Dh   | * | loc_40A89D:  ",gcc,1
"jmp loc_4094E7  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40A89D:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_409494 ",gcc,1
"xor eax, eax  | * | loc_40A8D1:  ",gcc,1
"jmp loc_409494  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40A8D1:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
call _d_print_comp  | * | loc_40A8E5:  ,gcc,1
"loc_40A8E5:   | * | mov edx, [ecx+8] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov ecx, [edx] ",gcc,1
"mov edx, [ecx+8]  | * | test ecx, ecx ",gcc,1
"mov ecx, [edx]  | * | jnz loc_409480 ",gcc,1
"test ecx, ecx  | * | cmp dword ptr [edx+8], 1 ",gcc,1
jnz loc_409480  | * | jnz loc_409480 ,gcc,2
"cmp dword ptr [edx+8], 1  | * | cmp eax, 37h  ",gcc,1
"cmp eax, 37h   | * | mov eax, [edx+4] ",gcc,1
"jnz loc_409480  | * | mov al, [eax] ",gcc,1
"mov eax, [edx+4]  | * | cmp al, 30h  ",gcc,1
"mov al, [eax]  | * | jz loc_40B018 ",gcc,1
"cmp al, 30h   | * | cmp al, 31h  ",gcc,1
jz loc_40B018  | * | jnz loc_409480 ,gcc,1
"cmp al, 31h   | * | mov edx, offset aTrue  ",gcc,1
"jnz loc_409480  | * | mov eax, ebp ",gcc,1
"mov edx, offset aTrue   | * | call _d_append_string ",gcc,1
call _d_append_string  | * | align 10h ,gcc,2
jmp def_40A961   | * | loc_40A930:  ,gcc,1
"align 10h  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"loc_40A930:   | * | mov ecx, [esi+8] ",gcc,1
"mov esi, [esp+0ACh+var_90]  | * | mov edi, [ecx] ",gcc,1
"mov ecx, [esi+8]  | * | test edi, edi ",gcc,1
"mov edi, [ecx]  | * | jnz loc_409480 ",gcc,1
"test edi, edi  | * | cmp eax, 38h  ",gcc,1
jnz loc_409480  | * | jz loc_40AFDC ,gcc,1
"cmp eax, 38h   | * | loc_40A94A:  ",gcc,1
"jz loc_40AFDC  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"loc_40A94A:   | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | sub ebx, 2  ",gcc,1
"call _d_print_comp  | * | cmp ebx, 4 ",gcc,1
"sub ebx, 2   | * | ja def_40A961  ",gcc,1
"cmp ebx, 4  | * | jmp ds:jpt_40A961[ebx*4]  ",gcc,1
ja def_40A961   | * | loc_40A968:  ,gcc,1
"jmp ds:jpt_40A961[ebx*4]   | * | mov edx, offset aLl  ",gcc,1
"loc_40A968:   | * | mov eax, ebp ",gcc,1
"mov edx, offset aLl   | * | call _d_append_string ",gcc,1
call _d_append_string  | * | loc_40A979:  ,gcc,1
"jmp def_40A961   | * | mov edx, offset aUl  ",gcc,1
"loc_40A979:   | * | mov eax, ebp ",gcc,1
"mov edx, offset aUl   | * | call _d_append_string ",gcc,1
call _d_append_string  | * | loc_40A98A:  ,gcc,1
"jmp def_40A961   | * | mov edx, 6Ch  ",gcc,1
"loc_40A98A:   | * | mov eax, ebp ",gcc,1
"mov edx, 6Ch   | * | call _d_append_char ",gcc,1
call _d_append_char  | * | loc_40A99B:  ,gcc,1
"jmp def_40A961   | * | mov edx, 75h  ",gcc,1
"loc_40A99B:   | * | mov eax, ebp ",gcc,1
"mov edx, 75h   | * | call _d_append_char ",gcc,1
call _d_append_char  | * | loc_40A9AC:  ,gcc,1
"jmp def_40A961   | * | mov edx, offset aUll  ",gcc,1
"loc_40A9AC:   | * | mov eax, ebp ",gcc,1
"mov edx, offset aUll   | * | call _d_append_string ",gcc,1
jmp def_40A961   | * | loc_40A9C0:  ,gcc,1
"align 10h  | * | mov eax, [esp+0ACh+var_74] ",gcc,1
"loc_40A9C0:   | * | mov [ebp+114h], eax ",gcc,1
"mov eax, [esp+0ACh+var_74]  | * | jmp def_40A961  ",gcc,1
"mov [ebp+114h], eax  | * | loc_40A9CF:  ",gcc,1
"jmp def_40A961   | * | lea edx, [eax+4] ",gcc,1
"loc_40A9CF:   | * | mov eax, ebp ",gcc,1
"lea edx, [eax+4]  | * | call _d_lookup_template_argument_isra_5 ",gcc,1
call _d_lookup_template_argument_isra_5  | * | jz short loc_40AA08 ,gcc,1
"jz short loc_40AA08  | * | cmp edx, 2Bh  ",gcc,1
"mov edx, [eax]  | * | jnz loc_409178 ",gcc,1
"cmp edx, 2Bh   | * | mov edx, [ebp+11Ch] ",gcc,1
jnz loc_409178  | * | jmp short loc_40A9FD ,gcc,1
"mov edx, [ebp+11Ch]  | * | loc_40A9F0:  ",gcc,1
jmp short loc_40A9FD  | * | dec edx ,gcc,1
"loc_40A9F0:   | * | mov eax, [eax+8] ",gcc,1
"mov eax, [eax+8]  | * | jz short loc_40AA08 ",gcc,1
jz short loc_40AA08  | * | jnz short loc_40AA08 ,gcc,1
"cmp dword ptr [eax], 2Bh   | * | loc_40A9FD:  ",gcc,1
"jnz short loc_40AA08  | * | cmp edx, 0 ",gcc,1
loc_40A9FD:   | * | jg short loc_40A9F0 ,gcc,1
"cmp edx, 0  | * | jz loc_40AFF0 ",gcc,1
jg short loc_40A9F0  | * | loc_40AA08:  ,gcc,1
"jz loc_40AFF0  | * | mov dword ptr [ebp+118h], 1 ",gcc,1
loc_40AA08:   | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1  | * | align 4 ",gcc,1
jmp def_40A961   | * | loc_40AA18:  ,gcc,1
"align 4  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AA18:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov eax, 1  | * | jmp loc_409039 ",gcc,1
"xor edx, edx  | * | loc_40AA4C:  ",gcc,1
"jmp loc_409039  | * | cmp eax, 0FFh ",gcc,1
loc_40AA4C:   | * | jz loc_40AE6A ,gcc,1
"cmp eax, 0FFh  | * | loc_40AA57:  ",gcc,1
"jz loc_40AE6A  | * | mov byte ptr [ebp+eax+0], 20h  ",gcc,1
loc_40AA57:   | * | inc eax ,gcc,1
"mov [ebp+100h], eax  | * | jmp loc_408D6C ",gcc,1
"mov byte ptr [ebp+104h], 20h   | * | loc_40AA6F:  ",gcc,1
"jmp loc_408D6C  | * | cmp eax, 0FFh ",gcc,1
loc_40AA6F:   | * | jz loc_40AE3B ,gcc,1
"cmp eax, 0FFh  | * | loc_40AA7A:  ",gcc,1
"jz loc_40AE3B  | * | mov byte ptr [ebp+eax+0], 20h  ",gcc,1
loc_40AA7A:   | * | inc eax ,gcc,1
"mov [ebp+100h], eax  | * | jmp loc_408D27 ",gcc,1
"mov byte ptr [ebp+104h], 20h   | * | loc_40AA92:  ",gcc,1
"jmp loc_408D27  | * | mov eax, [ebp+100h] ",gcc,1
"loc_40AA92:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40AFAD ",gcc,1
"cmp eax, 0FFh  | * | loc_40AAA3:  ",gcc,1
"jz loc_40AFAD  | * | mov byte ptr [ebp+eax+0], 5Bh  ",gcc,1
loc_40AAA3:   | * | inc eax ,gcc,1
"mov byte ptr [ebp+eax+0], 5Bh   | * | mov [ebp+100h], eax ",gcc,1
"inc eax  | * | mov byte ptr [ebp+104h], 5Bh  ",gcc,1
"mov [ebp+100h], eax  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"mov byte ptr [ebp+104h], 5Bh   | * | mov ecx, [esi+8] ",gcc,1
"mov eax, [ebp+100h]  | * | jz loc_40AF7E ",gcc,1
"cmp eax, 0FFh  | * | loc_40AAD9:  ",gcc,1
"jz loc_40AF7E  | * | mov byte ptr [ebp+eax+0], 5Dh  ",gcc,1
loc_40AAD9:   | * | inc eax ,gcc,1
"mov byte ptr [ebp+eax+0], 5Dh   | * | mov [ebp+100h], eax ",gcc,1
"inc eax  | * | mov byte ptr [ebp+104h], 5Dh  ",gcc,1
"mov byte ptr [ebp+104h], 5Dh   | * | loc_40AAF1:  ",gcc,1
loc_40AAF1:   | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1  | * | loc_40AB00:  ",gcc,1
"jmp def_40A961   | * | cmp edx, 0FFh ",gcc,1
loc_40AB00:   | * | jnz loc_40A885 ,gcc,1
"jnz loc_40A885  | * | mov eax, [ebp+10Ch] ",gcc,1
"call dword ptr [ebp+108h]  | * | xor edx, edx ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40A885 ,gcc,1
"xor edx, edx  | * | loc_40AB3B:  ",gcc,1
"jmp loc_40A885  | * | mov edx, 5Bh  ",gcc,1
"loc_40AB3B:   | * | mov eax, ebp ",gcc,1
"mov edx, 5Bh   | * | call _d_append_char ",gcc,1
"call _d_append_char  | * | mov eax, [ecx+8] ",gcc,1
"mov eax, ebp  | * | mov edx, 5Dh  ",gcc,1
"call _d_print_comp  | * | mov eax, ebp ",gcc,2
"mov edx, 5Dh   | * | call _d_append_char ",gcc,1
"mov eax, ebp  | * | jmp loc_40A25D ",gcc,1
call _d_append_char  | * | loc_40AB6D:  ,gcc,1
"jmp loc_40A25D  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AB6D:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_409C45 ",gcc,1
"xor eax, eax  | * | loc_40ABA1:  ",gcc,1
"jmp loc_409C45  | * | mov ecx, [edx+4] ",gcc,1
"loc_40ABA1:   | * | cmp dword ptr [ecx+8], 1 ",gcc,1
"mov ecx, [edx+4]  | * | jnz loc_40A1EA ",gcc,1
"cmp dword ptr [ecx+8], 1  | * | mov ecx, [ecx+4] ",gcc,1
"jnz loc_40A1EA  | * | cmp byte ptr [ecx], 3Eh  ",gcc,1
"mov ecx, [ecx+4]  | * | jnz loc_40A1EA ",gcc,1
"cmp byte ptr [ecx], 3Eh   | * | mov edx, 28h  ",gcc,1
"jnz loc_40A1EA  | * | mov eax, ebp ",gcc,1
"mov edx, 28h   | * | call _d_append_char ",gcc,1
"call _d_append_char  | * | mov edx, [ecx+4] ",gcc,1
"mov ecx, [esp+0ACh+var_90]  | * | mov eax, [ecx+8] ",gcc,1
"mov edx, [ecx+4]  | * | jmp loc_40A1EA ",gcc,1
"mov eax, [ecx+8]  | * | align 4 ",gcc,1
jmp loc_40A1EA  | * | loc_40ABD8:  ,gcc,1
"align 4  | * | mov esi, [eax+4] ",gcc,1
"loc_40ABD8:   | * | mov edi, offset aJarray  ",gcc,1
"mov esi, [eax+4]  | * | mov ecx, 6 ",gcc,1
"mov edi, offset aJarray   | * | repe cmpsb ",gcc,1
"mov ecx, 6  | * | jnz loc_408D07 ",gcc,1
"repe cmpsb  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"jnz loc_408D07  | * | mov ecx, [esi+8] ",gcc,1
"mov eax, ebp  | * | mov edx, offset asc_414D52  ",gcc,1
"mov edx, offset asc_414D52   | * | call _d_append_string ",gcc,1
"mov eax, ebp  | * | jmp loc_408D8C ",gcc,1
call _d_append_string  | * | loc_40AC10:  ,gcc,1
"jmp loc_408D8C  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AC10:   | * | mov eax, [ebp+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40A028 ",gcc,1
"xor eax, eax  | * | loc_40AC44:  ",gcc,1
"jmp loc_40A028  | * | mov ecx, eax ",gcc,1
"loc_40AC44:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov eax, ebp  | * | jmp loc_40A248 ",gcc,1
call _d_print_expr_op  | * | loc_40AC56:  ,gcc,1
"jmp loc_40A248  | * | mov eax, [ecx+8] ",gcc,1
"loc_40AC56:   | * | cmp dword ptr [eax], 25h  ",gcc,1
"mov eax, [ecx+8]  | * | jz short loc_40AC68 ",gcc,1
"cmp dword ptr [eax], 25h   | * | mov dword ptr [ebp+118h], 1 ",gcc,1
jz short loc_40AC68  | * | loc_40AC68:  ,gcc,1
"mov dword ptr [ebp+118h], 1  | * | mov ecx, [ecx+4] ",gcc,1
"loc_40AC68:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov ecx, [ecx+4]  | * | mov eax, ebp ",gcc,2
"mov eax, ebp  | * | jmp loc_40A214 ",gcc,1
call _d_print_subexpr  | * | loc_40AC7B:  ,gcc,1
"jmp loc_40A214  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AC7B:   | * | mov eax, [ebp+10Ch] ",gcc,1
"call dword ptr [ebp+108h]  | * | xor eax, eax ",gcc,10
inc dword ptr [ebp+120h]  | * | jmp loc_40A38C ,gcc,1
"xor eax, eax  | * | loc_40ACAA:  ",gcc,1
"jmp loc_40A38C  | * | mov al, byte ptr [esp+0ACh+var_90] ",gcc,1
loc_40ACAA:   | * | jmp loc_40A0F3 ,gcc,1
"mov al, byte ptr [esp+0ACh+var_90]  | * | loc_40ACB3:  ",gcc,1
"jmp loc_40A0F3  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40ACB3:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40A56A ,gcc,1
"xor eax, eax  | * | loc_40ACE2:  ",gcc,1
"jmp loc_40A56A  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40ACE2:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40A538 ,gcc,1
"xor eax, eax  | * | loc_40AD11:  ",gcc,1
"jmp loc_40A538  | * | mov ecx, [esp+0ACh+var_90] ",gcc,1
"loc_40AD11:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov eax, ebp  | * | mov ecx, ebx ",gcc,2
"call _d_print_subexpr  | * | mov edx, [esp+0ACh+var_8C] ",gcc,2
"mov eax, ebp  | * | mov ecx, [esp+0ACh+var_84] ",gcc,1
"call _d_print_expr_op  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
"mov eax, ebp  | * | mov edx, offset asc_414EB4  ",gcc,1
"mov edx, offset asc_414EB4   | * | call _d_append_string ",gcc,1
"mov eax, ebp  | * | mov ecx, [esp+0ACh+var_88] ",gcc,1
"call _d_append_string  | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
call _d_print_subexpr  | * | loc_40AD5C:  ,gcc,1
"jmp def_40A961   | * | mov edx, [esp+0ACh+var_84] ",gcc,1
"loc_40AD5C:   | * | mov [esp+0ACh+var_64], edx ",gcc,1
"mov edx, [esp+0ACh+var_84]  | * | lea eax, [esp+0ACh+var_64] ",gcc,1
"mov [esp+0ACh+var_64], edx  | * | mov [ebp+110h], eax ",gcc,1
"lea eax, [esp+0ACh+var_64]  | * | mov [esp+0ACh+var_60], ebx ",gcc,1
"mov [ebp+110h], eax  | * | jmp loc_408C52 ",gcc,1
"mov [esp+0ACh+var_60], ebx  | * | loc_40AD77:  ",gcc,1
"jmp loc_408C52  | * | mov eax, [esp+0ACh+var_64] ",gcc,1
"loc_40AD77:   | * | mov [ebp+110h], eax ",gcc,1
"mov eax, [esp+0ACh+var_64]  | * | jmp loc_408C6D ",gcc,1
"mov [ebp+110h], eax  | * | loc_40AD86:  ",gcc,1
"jmp loc_408C6D  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AD86:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40A50F ,gcc,1
"xor eax, eax  | * | loc_40ADB5:  ",gcc,1
"jmp loc_40A50F  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40ADB5:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40A4DC ,gcc,1
"xor eax, eax  | * | loc_40ADE4:  ",gcc,1
"jmp loc_40A4DC  | * | mov eax, [ecx+4] ",gcc,1
"loc_40ADE4:   | * | cmp dword ptr [eax], 1 ",gcc,1
"mov eax, [ecx+4]  | * | jnz loc_40A486 ",gcc,1
"cmp dword ptr [eax], 1  | * | mov edx, [ecx+8] ",gcc,1
"jnz loc_40A486  | * | cmp dword ptr [edx], 25h  ",gcc,1
"mov edx, [ecx+8]  | * | jnz loc_40A486 ",gcc,1
"cmp dword ptr [edx], 25h   | * | mov [esp+0ACh+var_90], eax ",gcc,1
jnz loc_40A486  | * | jmp loc_40A486 ,gcc,1
"mov [esp+0ACh+var_90], eax  | * | loc_40AE05:  ",gcc,1
"jmp loc_40A486  | * | mov esi, [esp+0ACh+var_90] ",gcc,1
"loc_40AE05:   | * | mov ecx, [esi+4] ",gcc,1
"mov eax, ebp  | * | mov edx, offset asc_414EF0  ",gcc,1
"mov edx, offset asc_414EF0   | * | call _d_append_string ",gcc,1
call _d_append_string  | * | loc_40AE28:  ,gcc,1
"jmp def_40A961   | * | mov ebp, [esp+0ACh+var_78] ",gcc,1
loc_40AE28:   | * | loc_40AE2C:  ,gcc,1
"mov ebp, [esp+0ACh+var_78]  | * | mov dword ptr [ebp+118h], 1 ",gcc,1
loc_40AE2C:   | * | jmp def_40A961  ,gcc,1
"mov dword ptr [ebp+118h], 1  | * | loc_40AE3B:  ",gcc,1
"loc_40AE3B:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40AA7A ,gcc,1
"xor eax, eax  | * | loc_40AE6A:  ",gcc,1
"jmp loc_40AA7A  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AE6A:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40AA57 ,gcc,1
"xor eax, eax  | * | loc_40AE99:  ",gcc,1
"jmp loc_40AA57  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AE99:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_408CB6 ,gcc,1
"xor eax, eax  | * | loc_40AEC8:  ",gcc,1
"jmp loc_408CB6  | * | mov ecx, eax ",gcc,1
"loc_40AEC8:   | * | mov al, byte ptr [esp+0ACh+var_90] ",gcc,1
"mov ecx, eax  | * | cmp edi, esi ",gcc,1
"mov al, byte ptr [esp+0ACh+var_90]  | * | jbe loc_40A0F3 ",gcc,1
"cmp edi, esi  | * | cmp dl, 5Fh  ",gcc,1
jbe loc_40A0F3  | * | jnz loc_40A0F3 ,gcc,1
"cmp dl, 5Fh   | * | cmp ecx, 0FFh ",gcc,1
jnz loc_40A0F3  | * | ja loc_40A0F3 ,gcc,1
"cmp ecx, 0FFh  | * | mov bl, cl ",gcc,1
"ja loc_40A0F3  | * | cmp dword ptr [ebp+100h], 0FFh ",gcc,1
"mov bl, cl  | * | jnz short loc_40AF2B ",gcc,1
"cmp dword ptr [ebp+100h], 0FFh  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"jnz short loc_40AF2B  | * | mov eax, [ebp+10Ch] ",gcc,1
"mov dword ptr [ebp+100h], 0  | * | loc_40AF2B:  ",gcc,1
"inc dword ptr [ebp+120h]  | * | mov eax, [ebp+100h] ",gcc,1
"loc_40AF2B:   | * | mov [ebp+eax+0], bl ",gcc,1
"mov eax, [ebp+100h]  | * | inc eax ",gcc,1
"mov [ebp+eax+0], bl  | * | mov [ebp+100h], eax ",gcc,1
"inc eax  | * | mov [ebp+104h], bl ",gcc,1
"mov [ebp+100h], eax  | * | mov ebx, esi ",gcc,1
"mov [ebp+104h], bl  | * | jmp loc_40A0DB ",gcc,1
"mov ebx, esi  | * | loc_40AF49:  ",gcc,1
"jmp loc_40A0DB  | * | mov [esp+0ACh+var_88], 1 ",gcc,1
loc_40AF49:   | * | jmp loc_408B8C ,gcc,1
"mov [esp+0ACh+var_88], 1  | * | loc_40AF56:  ",gcc,1
"jmp loc_408B8C  | * | mov ecx, [ecx+4] ",gcc,1
"loc_40AF56:   | * | mov edx, [esp+0ACh+var_8C] ",gcc,1
call _d_print_expr_op  | * | loc_40AF76:  ,gcc,1
"jmp def_40A961   | * | mov eax, [eax+4] ",gcc,1
loc_40AF76:   | * | jmp loc_408BAC ,gcc,1
"mov eax, [eax+4]  | * | loc_40AF7E:  ",gcc,1
"jmp loc_408BAC  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AF7E:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40AAD9 ,gcc,1
"xor eax, eax  | * | loc_40AFAD:  ",gcc,1
"jmp loc_40AAD9  | * | mov byte ptr [ebp+0FFh], 0 ",gcc,1
"loc_40AFAD:   | * | mov eax, [ebp+10Ch] ",gcc,1
inc dword ptr [ebp+120h]  | * | jmp loc_40AAA3 ,gcc,1
"xor eax, eax  | * | loc_40AFDC:  ",gcc,1
"jmp loc_40AAA3  | * | mov edx, 2Dh  ",gcc,1
"loc_40AFDC:   | * | mov eax, ebp ",gcc,1
"mov edx, 2Dh   | * | call _d_append_char ",gcc,1
"mov eax, ebp  | * | mov ecx, [esi+8] ",gcc,1
call _d_append_char  | * | jmp loc_40A94A ,gcc,1
"mov ecx, [esi+8]  | * | loc_40AFF0:  ",gcc,1
"jmp loc_40A94A  | * | mov eax, [eax+4] ",gcc,1
"loc_40AFF0:   | * | test eax, eax ",gcc,1
"mov eax, [eax+4]  | * | jz loc_40AA08 ",gcc,1
jz loc_40AA08  | * | jmp loc_409178 ,gcc,1
"mov edx, [eax]  | * | loc_40B002:  ",gcc,1
jmp loc_409178  | * | jnz loc_40A372 ,gcc,1
"loc_40B002:   | * | mov eax, [eax+4] ",gcc,1
"jnz loc_40A372  | * | test eax, eax ",gcc,1
"mov eax, [eax+4]  | * | jnz loc_408DB6 ",gcc,1
"test eax, eax  | * | jmp loc_40A372 ",gcc,1
jnz loc_408DB6  | * | loc_40B018:  ,gcc,1
"jmp loc_40A372  | * | mov edx, offset aFalse  ",gcc,1
"loc_40B018:   | * | mov eax, ebp ",gcc,1
"mov edx, offset aFalse   | * | call _d_append_string ",gcc,1
call _d_append_string  | * | _d_print_comp endp ,gcc,1
jmp def_40A961   | * | align 4 ,gcc,1
_d_print_comp endp  | * | _d_print_mod proc near  ,gcc,1
var_38 = dword ptr -38h  | * | var_24 = dword ptr -24h ,data,3
var_34 = dword ptr -34h  | * | var_1D = byte ptr -1Dh ,data,2
"sub esp, 2Ch  | * | mov ebp, edx ",gcc,1
"mov ebx, eax  | * | mov eax, [ecx] ",gcc,1
"mov ebp, edx  | * | sub eax, 3  ",gcc,1
"mov eax, [ecx]  | * | cmp eax, 26h ",gcc,1
"sub eax, 3   | * | jbe short loc_40B054 ",gcc,1
"cmp eax, 26h  | * | def_40B054:  ",gcc,1
"jbe short loc_40B054  | * | mov edx, ebp  ",gcc,1
"def_40B054:   | * | mov eax, ebx ",gcc,1
"mov edx, ebp   | * | add esp, 2Ch ",gcc,1
pop edi  | * | jmp _d_print_comp ,gcc,1
jmp _d_print_comp  | * | loc_40B054:  ,gcc,1
align 4  | * | jmp ds:jpt_40B054[eax*4]  ,gcc,1
loc_40B054:   | * | align 4 ,gcc,1
jmp ds:jpt_40B054[eax*4]   | * | loc_40B05C:  ,gcc,1
"align 4  | * | mov eax, [ebx+100h]  ",gcc,7
"loc_40B05C:   | * | mov esi, offset aVector  ",gcc,1
"mov eax, [ebx+100h]   | * | jmp short loc_40B08F ",gcc,1
"mov esi, offset aVector   | * | align 4 ",gcc,1
jmp short loc_40B08F  | * | loc_40B06C:  ,gcc,1
loc_40B06C:   | * | inc eax ,gcc,1
"mov edi, eax  | * | loc_40B06F:  ",gcc,1
"inc eax  | * | mov dl, [esp+3Ch+var_1D] ",gcc,1
"loc_40B06F:   | * | mov [ebx+edi], dl ",gcc,1
"mov dl, [esp+3Ch+var_1D]  | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+edi], dl  | * | mov [ebx+104h], dl ",gcc,1
"mov [ebx+100h], eax  | * | inc esi ",gcc,8
"mov [ebx+104h], dl  | * | cmp esi, 4150D0h ",gcc,1
inc esi  | * | jz loc_40B4AC ,gcc,1
"cmp esi, 4150D0h  | * | loc_40B08F:  ",gcc,1
"jz loc_40B4AC  | * | mov dl, [esi] ",gcc,1
"loc_40B08F:   | * | mov [esp+3Ch+var_1D], dl ",gcc,1
"mov dl, [esi]  | * | cmp eax, 0FFh ",gcc,1
"mov [esp+3Ch+var_1D], dl  | * | jnz short loc_40B06C ",gcc,1
"cmp eax, 0FFh  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,9
"jnz short loc_40B06C  | * | mov eax, [ebx+10Ch] ",gcc,1
"mov byte ptr [ebx+0FFh], 0  | * | mov [esp+3Ch+var_34], eax ",gcc,27
"mov eax, [ebx+10Ch]  | * | mov [esp+3Ch+var_38], 0FFh ",gcc,27
"mov [esp+3Ch+var_34], eax  | * | mov [esp+3Ch+var_3C], ebx ",gcc,27
"mov [esp+3Ch+var_38], 0FFh  | * | mov [esp+3Ch+var_24], ecx ",gcc,3
"mov [esp+3Ch+var_3C], ebx  | * | call dword ptr [ebx+108h] ",gcc,11
"mov [esp+3Ch+var_24], ecx  | * | inc dword ptr [ebx+120h] ",gcc,3
"call dword ptr [ebx+108h]  | * | mov eax, 1 ",gcc,15
"inc dword ptr [ebx+120h]  | * | xor edi, edi ",gcc,1
"mov eax, 1  | * | mov ecx, [esp+3Ch+var_24] ",gcc,1
"xor edi, edi  | * | jmp short loc_40B06F ",gcc,1
"mov ecx, [esp+3Ch+var_24]  | * | align 4 ",gcc,1
jmp short loc_40B06F  | * | loc_40B0D8:  ,gcc,1
"loc_40B0D8:   | * | mov esi, offset aRestrict  ",gcc,1
"mov eax, [ebx+100h]   | * | jmp short loc_40B107 ",gcc,1
"mov esi, offset aRestrict   | * | align 4 ",gcc,1
jmp short loc_40B107  | * | loc_40B0E8:  ,gcc,1
loc_40B0E8:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B0EB:  ",gcc,1
"inc eax  | * | mov [ebx+ecx], dl ",gcc,8
"loc_40B0EB:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+ecx], dl  | * | mov [ebx+104h], dl ",gcc,8
"mov [ebx+104h], dl  | * | cmp esi, 415099h ",gcc,1
inc esi  | * | jz loc_40B278 ,gcc,6
"cmp esi, 415099h  | * | loc_40B107:  ",gcc,1
"jz loc_40B278  | * | mov dl, [esi] ",gcc,6
"loc_40B107:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [esi]  | * | jnz short loc_40B0E8 ",gcc,1
"jnz short loc_40B0E8  | * | mov eax, [ebx+10Ch] ",gcc,1
"mov [esp+3Ch+var_38], 0FFh  | * | mov byte ptr [esp+3Ch+var_24], dl ",gcc,7
"mov byte ptr [esp+3Ch+var_24], dl  | * | inc dword ptr [ebx+120h] ",gcc,7
"inc dword ptr [ebx+120h]  | * | xor ecx, ecx ",gcc,8
"mov eax, 1  | * | mov dl, byte ptr [esp+3Ch+var_24] ",gcc,7
"xor ecx, ecx  | * | jmp short loc_40B0EB ",gcc,1
"mov dl, byte ptr [esp+3Ch+var_24]  | * | align 4 ",gcc,6
jmp short loc_40B0EB  | * | loc_40B14C:  ,gcc,1
"align 4  | * | mov ecx, [ecx+4]  ",gcc,1
loc_40B14C:   | * | jmp def_40B054  ,gcc,1
"mov ecx, [ecx+4]   | * | loc_40B154:  ",gcc,1
"jmp def_40B054   | * | mov eax, [ebx+100h]  ",gcc,1
"loc_40B154:   | * | mov esi, offset aVolatile  ",gcc,1
"mov eax, [ebx+100h]   | * | jmp short loc_40B183 ",gcc,1
"mov esi, offset aVolatile   | * | align 4 ",gcc,1
jmp short loc_40B183  | * | loc_40B164:  ,gcc,1
loc_40B164:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B167:  ",gcc,1
"loc_40B167:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+104h], dl  | * | cmp esi, 4150A3h ",gcc,1
"cmp esi, 4150A3h  | * | loc_40B183:  ",gcc,1
"loc_40B183:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [esi]  | * | jnz short loc_40B164 ",gcc,1
"jnz short loc_40B164  | * | mov eax, [ebx+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40B167 ",gcc,1
jmp short loc_40B167  | * | loc_40B1C8:  ,gcc,1
"loc_40B1C8:   | * | mov esi, offset aConst  ",gcc,1
"mov eax, [ebx+100h]   | * | jmp short loc_40B1F7 ",gcc,1
"mov esi, offset aConst   | * | align 4 ",gcc,1
jmp short loc_40B1F7  | * | loc_40B1D8:  ,gcc,1
loc_40B1D8:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B1DB:  ",gcc,1
"loc_40B1DB:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+104h], dl  | * | cmp esi, 4150AAh ",gcc,1
"cmp esi, 4150AAh  | * | loc_40B1F7:  ",gcc,1
"loc_40B1F7:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [esi]  | * | jnz short loc_40B1D8 ",gcc,1
"jnz short loc_40B1D8  | * | mov eax, [ebx+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40B1DB ",gcc,1
jmp short loc_40B1DB  | * | loc_40B23C:  ,gcc,1
"loc_40B23C:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebx+100h]   | * | jz loc_40B510 ",gcc,1
"cmp eax, 0FFh  | * | lea esi, [eax+1] ",gcc,3
jz loc_40B510  | * | loc_40B250:  ,gcc,1
"lea esi, [eax+1]  | * | mov byte ptr [ebx+eax], 20h  ",gcc,2
"loc_40B250:   | * | mov [ebx+100h], esi ",gcc,1
"mov byte ptr [ebx+eax], 20h   | * | mov byte ptr [ebx+104h], 20h  ",gcc,3
"mov [ebx+100h], esi  | * | mov ecx, [ecx+8] ",gcc,1
"mov byte ptr [ebx+104h], 20h   | * | jmp def_40B054  ",gcc,1
"mov ecx, [ecx+8]  | * | align 4 ",gcc,1
jmp def_40B054   | * | loc_40B26C:  ,gcc,1
"align 4  | * | and ebp, 4  ",gcc,1
loc_40B26C:   | * | jz loc_40B4E4 ,gcc,1
"and ebp, 4   | * | lea esi, [esi+0] ",gcc,1
jz loc_40B4E4  | * | loc_40B278:  ,gcc,1
"lea esi, [esi+0]  | * | add esp, 2Ch ",gcc,1
loc_40B278:   | * | pop ebx ,gcc,1
pop ebp  | * | loc_40B280:  ,gcc,1
"retn  | * | mov eax, [ebx+100h]  ",gcc,1
"loc_40B280:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebx+100h]   | * | jz loc_40B54C ",gcc,1
jz loc_40B54C  | * | loc_40B294:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebx+eax], 26h  ",gcc,1
"loc_40B294:   | * | mov [ebx+100h], edx ",gcc,1
"mov byte ptr [ebx+eax], 26h   | * | mov byte ptr [ebx+104h], 26h  ",gcc,1
"mov [ebx+100h], edx  | * | jmp short loc_40B278 ",gcc,1
"mov byte ptr [ebx+104h], 26h   | * | align 4 ",gcc,1
jmp short loc_40B278  | * | loc_40B2A8:  ,gcc,1
"loc_40B2A8:   | * | mov esi, offset asc_4150AB  ",gcc,1
"mov eax, [ebx+100h]   | * | jmp short loc_40B2D3 ",gcc,1
"mov esi, offset asc_4150AB   | * | align 4 ",gcc,1
jmp short loc_40B2D3  | * | loc_40B2B8:  ,gcc,1
loc_40B2B8:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B2BB:  ",gcc,1
"loc_40B2BB:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+104h], dl  | * | cmp esi, 4150ADh ",gcc,1
inc esi  | * | jz short loc_40B278 ,gcc,1
"cmp esi, 4150ADh  | * | loc_40B2D3:  ",gcc,1
"jz short loc_40B278  | * | mov dl, [esi] ",gcc,1
"loc_40B2D3:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [esi]  | * | jnz short loc_40B2B8 ",gcc,1
"jnz short loc_40B2B8  | * | mov eax, [ebx+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40B2BB ",gcc,1
jmp short loc_40B2BB  | * | loc_40B318:  ,gcc,1
"loc_40B318:   | * | mov esi, offset aComplex  ",gcc,1
"mov eax, [ebx+100h]   | * | jmp short loc_40B347 ",gcc,1
"mov esi, offset aComplex   | * | align 4 ",gcc,1
jmp short loc_40B347  | * | loc_40B328:  ,gcc,1
loc_40B328:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B32B:  ",gcc,1
"loc_40B32B:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+104h], dl  | * | cmp esi, 4150B6h ",gcc,1
"cmp esi, 4150B6h  | * | loc_40B347:  ",gcc,1
"loc_40B347:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [esi]  | * | jnz short loc_40B328 ",gcc,1
"jnz short loc_40B328  | * | mov eax, [ebx+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40B32B ",gcc,1
jmp short loc_40B32B  | * | loc_40B38C:  ,gcc,1
"loc_40B38C:   | * | mov esi, offset aImaginary  ",gcc,1
"mov eax, [ebx+100h]   | * | jmp short loc_40B3BB ",gcc,1
"mov esi, offset aImaginary   | * | align 4 ",gcc,1
jmp short loc_40B3BB  | * | loc_40B39C:  ,gcc,1
loc_40B39C:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B39F:  ",gcc,1
"loc_40B39F:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+104h], dl  | * | cmp esi, 4150C1h ",gcc,1
"cmp esi, 4150C1h  | * | loc_40B3BB:  ",gcc,1
"loc_40B3BB:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [esi]  | * | jnz short loc_40B39C ",gcc,1
"jnz short loc_40B39C  | * | mov eax, [ebx+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40B39F ",gcc,1
"mov dl, byte ptr [esp+3Ch+var_24]  | * | align 10h ",gcc,1
jmp short loc_40B39F  | * | loc_40B400:  ,gcc,1
"align 10h  | * | cmp byte ptr [ebx+104h], 28h  ",gcc,1
loc_40B400:   | * | jz short loc_40B42E ,gcc,1
"cmp byte ptr [ebx+104h], 28h   | * | mov eax, [ebx+100h] ",gcc,1
"jz short loc_40B42E  | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebx+100h]  | * | jz loc_40B5B4 ",gcc,1
jz loc_40B5B4  | * | loc_40B41D:  ,gcc,1
"loc_40B41D:   | * | mov [ebx+100h], esi ",gcc,1
"mov [ebx+100h], esi  | * | loc_40B42E:  ",gcc,1
"mov byte ptr [ebx+104h], 20h   | * | mov ecx, [ecx+4] ",gcc,1
"loc_40B42E:   | * | mov edx, ebp ",gcc,1
"mov ecx, [ecx+4]  | * | mov eax, ebx ",gcc,2
"mov edx, ebp  | * | call _d_print_comp ",gcc,2
"mov eax, ebx  | * | mov eax, [ebx+100h] ",gcc,6
"call _d_print_comp  | * | mov esi, offset asc_4150C2  ",gcc,1
"mov eax, [ebx+100h]  | * | jmp short loc_40B467 ",gcc,1
"mov esi, offset asc_4150C2   | * | align 4 ",gcc,1
jmp short loc_40B467  | * | loc_40B448:  ,gcc,1
loc_40B448:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B44B:  ",gcc,1
"loc_40B44B:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+104h], dl  | * | cmp esi, 4150C5h ",gcc,1
"cmp esi, 4150C5h  | * | loc_40B467:  ",gcc,1
"loc_40B467:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [esi]  | * | jnz short loc_40B448 ",gcc,1
"jnz short loc_40B448  | * | mov eax, [ebx+10Ch] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40B44B ",gcc,1
jmp short loc_40B44B  | * | loc_40B4AC:  ,gcc,1
"align 4  | * | mov ecx, [ecx+4] ",gcc,1
"loc_40B4AC:   | * | mov edx, ebp ",gcc,1
"mov eax, [ebx+100h]  | * | jz loc_40B580 ",gcc,1
jz loc_40B580  | * | loc_40B4CC:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebx+eax], 29h  ",gcc,4
"loc_40B4CC:   | * | mov [ebx+100h], edx ",gcc,1
"mov byte ptr [ebx+eax], 29h   | * | mov byte ptr [ebx+104h], 29h  ",gcc,4
"mov [ebx+100h], edx  | * | jmp loc_40B278 ",gcc,2
"mov byte ptr [ebx+104h], 29h   | * | align 4 ",gcc,1
jmp loc_40B278  | * | loc_40B4E4:  ,gcc,1
"align 4  | * | mov eax, [ebx+100h] ",gcc,1
"loc_40B4E4:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebx+100h]  | * | jz loc_40B5F0 ",gcc,1
jz loc_40B5F0  | * | loc_40B4F8:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebx+eax], 2Ah  ",gcc,1
"loc_40B4F8:   | * | mov [ebx+100h], edx ",gcc,1
"mov byte ptr [ebx+eax], 2Ah   | * | mov byte ptr [ebx+104h], 2Ah  ",gcc,1
"mov byte ptr [ebx+104h], 2Ah   | * | align 10h ",gcc,1
jmp loc_40B278  | * | loc_40B510:  ,gcc,1
"align 10h  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,2
"loc_40B510:   | * | mov eax, [ebx+10Ch] ",gcc,1
"call dword ptr [ebx+108h]  | * | mov esi, 1 ",gcc,3
"inc dword ptr [ebx+120h]  | * | xor eax, eax ",gcc,14
"mov esi, 1  | * | mov ecx, [esp+3Ch+var_24] ",gcc,2
"xor eax, eax  | * | jmp loc_40B250 ",gcc,1
"mov ecx, [esp+3Ch+var_24]  | * | loc_40B54C:  ",gcc,1
"jmp loc_40B250  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40B54C:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov [esp+3Ch+var_38], 0FFh  | * | call dword ptr [ebx+108h] ",gcc,16
"mov [esp+3Ch+var_3C], ebx  | * | inc dword ptr [ebx+120h] ",gcc,16
"call dword ptr [ebx+108h]  | * | mov edx, 1 ",gcc,11
"mov edx, 1  | * | jmp loc_40B294 ",gcc,1
"xor eax, eax  | * | loc_40B580:  ",gcc,1
"jmp loc_40B294  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40B580:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40B4CC ",gcc,1
"xor eax, eax  | * | loc_40B5B4:  ",gcc,1
"jmp loc_40B4CC  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40B5B4:   | * | mov eax, [ebx+10Ch] ",gcc,1
"xor eax, eax  | * | jmp loc_40B41D ",gcc,1
"mov ecx, [esp+3Ch+var_24]  | * | loc_40B5F0:  ",gcc,1
"jmp loc_40B41D  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40B5F0:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40B4F8 ",gcc,1
"xor eax, eax  | * | _d_print_mod endp ",gcc,1
jmp loc_40B4F8  | * | _d_print_mod_list proc near  ,gcc,1
var_58 = dword ptr -58h  | * | var_48 = dword ptr -48h ,data,1
var_48 = dword ptr -48h  | * | var_40 = dword ptr -40h ,data,2
var_44 = dword ptr -44h  | * | var_35 = byte ptr -35h ,data,1
var_40 = dword ptr -40h  | * | arg_0 = dword ptr 4 ,data,1
"push esi  | * | sub esp, 4Ch ",gcc,1
"push ebx  | * | mov [esp+5Ch+var_40], edx ",gcc,1
"sub esp, 4Ch  | * | mov ebx, ecx ",gcc,1
"mov [esp+5Ch+var_40], edx  | * | mov edi, [esp+5Ch+arg_0] ",gcc,1
"mov ebx, ecx  | * | test ecx, ecx ",gcc,1
"mov edi, [esp+5Ch+arg_0]  | * | jz short loc_40B6A8 ",gcc,1
"test ecx, ecx  | * | mov esi, eax ",gcc,1
"jz short loc_40B6A8  | * | mov eax, [eax+118h] ",gcc,1
"mov esi, eax  | * | test eax, eax ",gcc,2
"mov eax, [eax+118h]  | * | jz short loc_40B652 ",gcc,1
"test eax, eax  | * | jmp short loc_40B6A8 ",gcc,1
jz short loc_40B652  | * | align 4 ,gcc,1
jmp short loc_40B6A8  | * | loc_40B648:  ,gcc,1
"align 4  | * | mov eax, [esi+118h] ",gcc,1
"loc_40B648:   | * | test eax, eax ",gcc,1
"mov eax, [esi+118h]  | * | jnz short loc_40B6A8 ",gcc,1
"test eax, eax  | * | loc_40B652:  ",gcc,1
"jnz short loc_40B6A8  | * | mov eax, [ebx+8] ",gcc,1
"loc_40B652:   | * | test eax, eax ",gcc,1
"mov eax, [ebx+8]  | * | jnz short loc_40B6A2 ",gcc,1
"jnz short loc_40B6A2  | * | test edi, edi ",gcc,1
"mov ecx, [ebx+4]  | * | jnz short loc_40B66A ",gcc,1
"test edi, edi  | * | mov eax, [ecx] ",gcc,1
"jnz short loc_40B66A  | * | sub eax, 1Ah ",gcc,1
"mov eax, [ecx]  | * | cmp eax, 2 ",gcc,1
"sub eax, 1Ah  | * | jbe short loc_40B6A2 ",gcc,1
"cmp eax, 2  | * | loc_40B66A:  ",gcc,1
"jbe short loc_40B6A2  | * | mov dword ptr [ebx+8], 1 ",gcc,1
"loc_40B66A:   | * | mov ebp, [esi+110h] ",gcc,1
"mov dword ptr [ebx+8], 1  | * | mov eax, [ebx+0Ch] ",gcc,1
"mov ebp, [esi+110h]  | * | mov [esi+110h], eax ",gcc,1
"mov eax, [ebx+0Ch]  | * | mov eax, [ecx] ",gcc,1
"mov [esi+110h], eax  | * | cmp eax, 25h  ",gcc,1
"mov eax, [ecx]  | * | jz short loc_40B6B0 ",gcc,1
"cmp eax, 25h   | * | cmp eax, 26h  ",gcc,1
jz short loc_40B6B0  | * | jz short loc_40B6D1 ,gcc,1
"cmp eax, 26h   | * | cmp eax, 2 ",gcc,1
jz short loc_40B6D1  | * | jz short loc_40B6F2 ,gcc,1
"cmp eax, 2  | * | mov edx, [esp+5Ch+var_40] ",gcc,1
"jz short loc_40B6F2  | * | mov eax, esi ",gcc,1
"mov edx, [esp+5Ch+var_40]  | * | call _d_print_mod ",gcc,1
"mov eax, esi  | * | mov [esi+110h], ebp ",gcc,4
call _d_print_mod  | * | loc_40B6A2:  ,gcc,1
"mov [esi+110h], ebp  | * | mov ebx, [ebx] ",gcc,1
"loc_40B6A2:   | * | test ebx, ebx ",gcc,1
"mov ebx, [ebx]  | * | jnz short loc_40B648 ",gcc,1
"test ebx, ebx  | * | loc_40B6A8:  ",gcc,1
"jnz short loc_40B648  | * | add esp, 4Ch ",gcc,1
loc_40B6A8:   | * | pop ebx ,gcc,1
"add esp, 4Ch  | * | pop esi ",gcc,4
pop ebp  | * | loc_40B6B0:  ,gcc,1
"retn  | * | add ecx, 8 ",gcc,1
"loc_40B6B0:   | * | mov eax, [ebx] ",gcc,1
"add ecx, 8  | * | mov [esp+5Ch+var_5C], eax ",gcc,1
"mov eax, [ebx]  | * | mov edx, [esp+5Ch+var_40] ",gcc,2
"mov [esp+5Ch+var_5C], eax  | * | mov eax, esi ",gcc,2
"mov edx, [esp+5Ch+var_40]  | * | call _d_print_function_type_isra_9 ",gcc,1
"call _d_print_function_type_isra_9  | * | add esp, 4Ch ",gcc,1
"mov [esi+110h], ebp  | * | pop ebx ",gcc,3
pop ebp  | * | loc_40B6D1:  ,gcc,1
"retn  | * | add ecx, 4 ",gcc,1
"loc_40B6D1:   | * | mov eax, [ebx] ",gcc,1
"add ecx, 4  | * | mov [esp+5Ch+var_5C], eax ",gcc,1
"mov edx, [esp+5Ch+var_40]  | * | call _d_print_array_type_isra_7 ",gcc,1
"call _d_print_array_type_isra_7  | * | add esp, 4Ch ",gcc,1
pop ebp  | * | loc_40B6F2:  ,gcc,1
"retn  | * | mov edi, [esi+114h] ",gcc,1
"loc_40B6F2:   | * | mov dword ptr [esi+114h], 0 ",gcc,1
"mov edi, [esi+114h]  | * | mov ecx, [ecx+4] ",gcc,1
"mov dword ptr [esi+114h], 0  | * | mov edx, [esp+5Ch+var_40] ",gcc,1
"mov ecx, [ecx+4]  | * | mov eax, esi ",gcc,1
"mov edx, [esp+5Ch+var_40]  | * | call _d_print_comp ",gcc,2
"mov eax, esi  | * | mov [esi+114h], edi ",gcc,1
"call _d_print_comp  | * | mov eax, [esi+100h] ",gcc,1
"mov [esi+114h], edi  | * | test byte ptr [esp+5Ch+var_40], 4 ",gcc,1
"mov eax, [esi+100h]  | * | jnz short loc_40B785 ",gcc,1
"test byte ptr [esp+5Ch+var_40], 4  | * | mov edi, offset unk_414D48 ",gcc,1
"jnz short loc_40B785  | * | mov [esp+5Ch+var_44], ebx ",gcc,1
"mov edi, offset unk_414D48  | * | jmp short loc_40B74B ",gcc,1
"mov [esp+5Ch+var_44], ebx  | * | align 10h ",gcc,1
jmp short loc_40B74B  | * | loc_40B730:  ,gcc,1
loc_40B730:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B733:  ",gcc,1
"inc eax  | * | mov [esi+ecx], bl ",gcc,1
"loc_40B733:   | * | mov [esi+100h], eax ",gcc,1
"mov [esi+ecx], bl  | * | mov [esi+104h], bl ",gcc,1
"mov [esi+100h], eax  | * | inc edi ",gcc,2
"mov [esi+104h], bl  | * | cmp edi, offset unk_414D4A ",gcc,1
inc edi  | * | jz short loc_40B7A2 ,gcc,1
"cmp edi, offset unk_414D4A  | * | loc_40B74B:  ",gcc,1
"jz short loc_40B7A2  | * | mov bl, [edi] ",gcc,1
"loc_40B74B:   | * | cmp eax, 0FFh ",gcc,1
"mov bl, [edi]  | * | jnz short loc_40B730 ",gcc,1
"cmp eax, 0FFh  | * | mov byte ptr [esi+0FFh], 0 ",gcc,2
"jnz short loc_40B730  | * | mov eax, [esi+10Ch] ",gcc,1
"mov byte ptr [esi+0FFh], 0  | * | mov [esp+5Ch+var_54], eax ",gcc,3
"mov eax, [esi+10Ch]  | * | mov [esp+5Ch+var_58], 0FFh ",gcc,3
"mov [esp+5Ch+var_54], eax  | * | mov [esp+5Ch+var_5C], esi ",gcc,3
"mov [esp+5Ch+var_58], 0FFh  | * | call dword ptr [esi+108h] ",gcc,2
"mov [esp+5Ch+var_5C], esi  | * | inc dword ptr [esi+120h] ",gcc,2
"call dword ptr [esi+108h]  | * | mov eax, 1 ",gcc,2
"inc dword ptr [esi+120h]  | * | xor ecx, ecx ",gcc,2
"mov eax, 1  | * | jmp short loc_40B733 ",gcc,1
"xor ecx, ecx  | * | loc_40B785:  ",gcc,1
"jmp short loc_40B733  | * | cmp eax, 0FFh ",gcc,1
loc_40B785:   | * | jz short loc_40B7E0 ,gcc,1
jz short loc_40B7E0  | * | loc_40B78F:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [esi+eax], 2Eh  ",gcc,1
"loc_40B78F:   | * | mov [esi+100h], edx ",gcc,1
"mov byte ptr [esi+eax], 2Eh   | * | mov byte ptr [esi+104h], 2Eh  ",gcc,1
"mov [esi+100h], edx  | * | jmp short loc_40B7A6 ",gcc,1
"mov byte ptr [esi+104h], 2Eh   | * | loc_40B7A2:  ",gcc,1
"jmp short loc_40B7A6  | * | mov ebx, [esp+5Ch+var_44] ",gcc,1
loc_40B7A2:   | * | loc_40B7A6:  ,gcc,1
"mov ebx, [esp+5Ch+var_44]  | * | mov eax, [ebx+4] ",gcc,1
"loc_40B7A6:   | * | mov ebx, [eax+8] ",gcc,1
"mov eax, [ebx+4]  | * | mov eax, [ebx] ",gcc,1
"mov ebx, [eax+8]  | * | cmp eax, 41h  ",gcc,1
"mov eax, [ebx]  | * | jnz short loc_40B7BD ",gcc,1
"cmp eax, 41h   | * | jmp short loc_40B814 ",gcc,1
jnz short loc_40B7BD  | * | align 4 ,gcc,1
jmp short loc_40B814  | * | loc_40B7B8:  ,gcc,1
"align 4  | * | mov ebx, [ebx+4] ",gcc,1
"loc_40B7B8:   | * | mov eax, [ebx] ",gcc,1
"mov ebx, [ebx+4]  | * | loc_40B7BD:  ",gcc,1
"mov eax, [ebx]  | * | sub eax, 1Ah ",gcc,1
"loc_40B7BD:   | * | cmp eax, 2 ",gcc,1
"sub eax, 1Ah  | * | jbe short loc_40B7B8 ",gcc,1
"cmp eax, 2  | * | mov ecx, ebx ",gcc,1
"jbe short loc_40B7B8  | * | mov edx, [esp+5Ch+var_40] ",gcc,1
"call _d_print_comp  | * | add esp, 4Ch ",gcc,1
pop ebp  | * | loc_40B7E0:  ,gcc,1
"retn  | * | mov byte ptr [esi+0FFh], 0 ",gcc,1
"loc_40B7E0:   | * | mov eax, [esi+10Ch] ",gcc,1
"call dword ptr [esi+108h]  | * | mov edx, 1 ",gcc,1
"inc dword ptr [esi+120h]  | * | xor eax, eax ",gcc,1
"mov edx, 1  | * | jmp loc_40B78F ",gcc,1
"xor eax, eax  | * | loc_40B814:  ",gcc,1
"jmp loc_40B78F  | * | mov eax, [esi+100h] ",gcc,1
"loc_40B814:   | * | mov edi, offset aDefaultArg  ",gcc,1
"mov eax, [esi+100h]  | * | jmp short loc_40B83C ",gcc,1
"mov edi, offset aDefaultArg   | * | loc_40B821:  ",gcc,1
"jmp short loc_40B83C  | * | mov ecx, eax ",gcc,1
loc_40B821:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40B824:  ",gcc,1
"inc eax  | * | mov [esi+ecx], dl ",gcc,1
"loc_40B824:   | * | mov [esi+100h], eax ",gcc,1
"mov [esi+ecx], dl  | * | mov [esi+104h], dl ",gcc,1
"mov [esi+104h], dl  | * | cmp edi, 41517Dh ",gcc,1
inc edi  | * | jz short loc_40B87E ,gcc,1
"cmp edi, 41517Dh  | * | loc_40B83C:  ",gcc,1
"jz short loc_40B87E  | * | mov dl, [edi] ",gcc,1
"loc_40B83C:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [edi]  | * | jnz short loc_40B821 ",gcc,1
"jnz short loc_40B821  | * | mov eax, [esi+10Ch] ",gcc,1
"mov [esp+5Ch+var_58], 0FFh  | * | mov byte ptr [esp+5Ch+var_48], dl ",gcc,1
"mov [esp+5Ch+var_5C], esi  | * | call dword ptr [esi+108h] ",gcc,3
"mov byte ptr [esp+5Ch+var_48], dl  | * | inc dword ptr [esi+120h] ",gcc,1
"mov eax, 1  | * | mov dl, byte ptr [esp+5Ch+var_48] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40B824 ",gcc,1
"mov dl, byte ptr [esp+5Ch+var_48]  | * | loc_40B87E:  ",gcc,1
"jmp short loc_40B824  | * | mov eax, [ebx+8] ",gcc,1
loc_40B87E:   | * | inc eax ,gcc,1
"mov eax, [ebx+8]  | * | mov [esp+5Ch+var_54], eax ",gcc,1
"inc eax  | * | mov [esp+5Ch+var_58], offset aLd  ",gcc,1
"mov [esp+5Ch+var_54], eax  | * | lea edx, [esp+5Ch+var_35] ",gcc,1
"mov [esp+5Ch+var_58], offset aLd   | * | mov [esp+5Ch+var_5C], edx  ",gcc,1
"lea edx, [esp+5Ch+var_35]  | * | mov [esp+5Ch+var_48], edx ",gcc,1
"mov [esp+5Ch+var_5C], edx   | * | call _sprintf ",gcc,1
"mov [esp+5Ch+var_48], edx  | * | xor eax, eax ",gcc,1
"xor eax, eax  | * | mov edx, [esp+5Ch+var_48] ",gcc,1
"mov ecx, 0FFFFFFFFh  | * | mov edi, edx ",gcc,1
"mov edx, [esp+5Ch+var_48]  | * | repne scasb ",gcc,1
"repne scasb  | * | mov eax, ecx ",gcc,1
"not ecx  | * | mov ecx, [esi+100h] ",gcc,1
"mov eax, ecx  | * | dec eax ",gcc,1
"mov ecx, [esi+100h]  | * | jz short loc_40B924 ",gcc,1
"dec eax  | * | mov edi, edx ",gcc,1
"jz short loc_40B924  | * | add eax, edx ",gcc,1
"mov edi, edx  | * | mov [esp+5Ch+var_44], ebx ",gcc,1
"add eax, edx  | * | mov ebx, eax ",gcc,1
"mov [esp+5Ch+var_44], ebx  | * | jmp short loc_40B8DD ",gcc,1
"mov ebx, eax  | * | loc_40B8C6:  ",gcc,1
"jmp short loc_40B8DD  | * | mov edx, ecx ",gcc,1
loc_40B8C6:   | * | inc ecx ,gcc,1
"mov edx, ecx  | * | loc_40B8C9:  ",gcc,1
"inc ecx  | * | mov [esi+edx], al ",gcc,2
"loc_40B8C9:   | * | mov [esi+100h], ecx ",gcc,1
"mov [esi+100h], ecx  | * | inc edi ",gcc,2
"mov [esi+104h], al  | * | cmp edi, ebx ",gcc,1
inc edi  | * | jz short loc_40B920 ,gcc,1
"cmp edi, ebx  | * | loc_40B8DD:  ",gcc,1
"jz short loc_40B920  | * | mov al, [edi] ",gcc,1
"loc_40B8DD:   | * | cmp ecx, 0FFh ",gcc,1
"mov al, [edi]  | * | jnz short loc_40B8C6 ",gcc,1
"cmp ecx, 0FFh  | * | mov byte ptr [esi+0FFh], 0 ",gcc,2
"jnz short loc_40B8C6  | * | mov edx, [esi+10Ch] ",gcc,1
"mov byte ptr [esi+0FFh], 0  | * | mov [esp+5Ch+var_54], edx ",gcc,2
"mov edx, [esi+10Ch]  | * | mov [esp+5Ch+var_58], 0FFh ",gcc,2
"mov [esp+5Ch+var_54], edx  | * | mov [esp+5Ch+var_5C], esi ",gcc,2
"mov [esp+5Ch+var_58], 0FFh  | * | mov byte ptr [esp+5Ch+var_48], al ",gcc,2
"mov byte ptr [esp+5Ch+var_48], al  | * | inc dword ptr [esi+120h] ",gcc,2
"call dword ptr [esi+108h]  | * | mov ecx, 1 ",gcc,2
"mov ecx, 1  | * | mov al, byte ptr [esp+5Ch+var_48] ",gcc,2
"xor edx, edx  | * | jmp short loc_40B8C9 ",gcc,1
"mov al, byte ptr [esp+5Ch+var_48]  | * | loc_40B920:  ",gcc,1
"jmp short loc_40B8C9  | * | mov ebx, [esp+5Ch+var_44] ",gcc,1
loc_40B920:   | * | loc_40B924:  ,gcc,1
"mov ebx, [esp+5Ch+var_44]  | * | mov edi, offset asc_41517E  ",gcc,1
loc_40B924:   | * | jmp short loc_40B94A ,gcc,1
"mov edi, offset asc_41517E   | * | loc_40B92B:  ",gcc,1
"jmp short loc_40B94A  | * | mov edx, ecx ",gcc,1
loc_40B92B:   | * | inc ecx ,gcc,1
"mov edx, ecx  | * | loc_40B92E:  ",gcc,1
"loc_40B92E:   | * | mov [esi+100h], ecx ",gcc,1
"mov [esi+104h], al  | * | cmp edi, 415181h ",gcc,1
inc edi  | * | jz loc_40B7B8 ,gcc,1
"cmp edi, 415181h  | * | loc_40B94A:  ",gcc,1
"jz loc_40B7B8  | * | mov al, [edi] ",gcc,1
"loc_40B94A:   | * | cmp ecx, 0FFh ",gcc,1
"mov al, [edi]  | * | jnz short loc_40B92B ",gcc,1
"jnz short loc_40B92B  | * | mov edx, [esi+10Ch] ",gcc,1
"xor edx, edx  | * | jmp short loc_40B92E ",gcc,1
"mov al, byte ptr [esp+5Ch+var_48]  | * | _d_print_mod_list endp ",gcc,1
jmp short loc_40B92E  | * | align 10h ,gcc,1
_d_print_mod_list endp  | * | _d_print_array_type_isra_7 proc near  ,gcc,1
var_34 = dword ptr -34h  | * | arg_0 = dword ptr 4 ,data,2
"mov esi, edx  | * | mov ecx, [esp+3Ch+arg_0] ",gcc,1
"mov edi, ecx  | * | test ecx, ecx ",gcc,1
"mov ecx, [esp+3Ch+arg_0]  | * | jz short loc_40B9D1 ",gcc,1
"test ecx, ecx  | * | mov eax, [esp+3Ch+arg_0] ",gcc,1
"jz short loc_40B9D1  | * | lea esi, [esi+0] ",gcc,1
"mov eax, [esp+3Ch+arg_0]  | * | loc_40B9AC:  ",gcc,1
"lea esi, [esi+0]  | * | mov edx, [eax+8] ",gcc,1
"loc_40B9AC:   | * | test edx, edx ",gcc,1
"mov edx, [eax+8]  | * | jz loc_40BA54 ",gcc,1
"test edx, edx  | * | mov eax, [eax] ",gcc,1
"jz loc_40BA54  | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | jnz short loc_40B9AC ",gcc,1
"test eax, eax  | * | mov [esp+3Ch+var_3C], 0 ",gcc,1
"jnz short loc_40B9AC  | * | mov ecx, [esp+3Ch+arg_0] ",gcc,1
"mov [esp+3Ch+var_3C], 0  | * | mov edx, esi ",gcc,3
"mov ecx, [esp+3Ch+arg_0]  | * | mov eax, ebx ",gcc,3
"mov edx, esi  | * | call _d_print_mod_list ",gcc,3
"mov eax, ebx  | * | loc_40B9D1:  ",gcc,1
"call _d_print_mod_list  | * | mov eax, [ebx+100h] ",gcc,1
loc_40B9D1:   | * | loc_40B9D7:  ,gcc,1
"mov eax, [ebx+100h]  | * | cmp eax, 0FFh ",gcc,5
loc_40B9D7:   | * | jz loc_40BB0B ,gcc,1
jz loc_40BB0B  | * | loc_40B9E5:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebx+eax], 20h  ",gcc,1
"loc_40B9E5:   | * | mov [ebx+100h], edx ",gcc,1
"mov [ebx+100h], edx  | * | loc_40B9F6:  ",gcc,1
"mov byte ptr [ebx+104h], 20h   | * | cmp edx, 0FFh ",gcc,1
loc_40B9F6:   | * | jz loc_40BBA4 ,gcc,1
jz loc_40BBA4  | * | loc_40BA05:  ,gcc,1
"lea eax, [edx+1]  | * | mov byte ptr [ebx+edx], 5Bh  ",gcc,1
"loc_40BA05:   | * | mov [ebx+100h], eax ",gcc,1
"mov byte ptr [ebx+edx], 5Bh   | * | mov byte ptr [ebx+104h], 5Bh  ",gcc,1
"mov [ebx+100h], eax  | * | mov ecx, [edi] ",gcc,1
"mov byte ptr [ebx+104h], 5Bh   | * | test ecx, ecx ",gcc,1
"mov ecx, [edi]  | * | jz short loc_40BA2B ",gcc,1
"test ecx, ecx  | * | mov edx, esi ",gcc,1
"jz short loc_40BA2B  | * | mov eax, ebx ",gcc,1
"mov edx, esi  | * | call _d_print_comp ",gcc,1
call _d_print_comp  | * | loc_40BA2B:  ,gcc,1
loc_40BA2B:   | * | jz loc_40BB70 ,gcc,1
jz loc_40BB70  | * | loc_40BA39:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebx+eax], 5Dh  ",gcc,1
"loc_40BA39:   | * | mov [ebx+100h], edx ",gcc,1
"mov byte ptr [ebx+eax], 5Dh   | * | mov byte ptr [ebx+104h], 5Dh  ",gcc,1
"mov [ebx+100h], edx  | * | add esp, 2Ch ",gcc,1
"mov byte ptr [ebx+104h], 5Dh   | * | pop ebx ",gcc,1
retn  | * | loc_40BA54:  ,gcc,1
"loc_40BA54:   | * | cmp dword ptr [eax], 26h  ",gcc,1
"mov eax, [eax+4]  | * | jz loc_40BBD8 ",gcc,1
"cmp dword ptr [eax], 26h   | * | mov eax, [ebx+100h] ",gcc,1
"jz loc_40BBD8  | * | mov ebp, offset asc_415182  ",gcc,1
"mov eax, [ebx+100h]  | * | jmp short loc_40BA8B ",gcc,1
"mov ebp, offset asc_415182   | * | align 10h ",gcc,1
jmp short loc_40BA8B  | * | loc_40BA70:  ,gcc,1
loc_40BA70:   | * | inc eax ,gcc,1
"mov ecx, eax  | * | loc_40BA73:  ",gcc,1
"loc_40BA73:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+100h], eax  | * | inc ebp ",gcc,1
"mov [ebx+104h], dl  | * | cmp ebp, 415184h ",gcc,1
inc ebp  | * | jz short loc_40BAD0 ,gcc,1
"cmp ebp, 415184h  | * | loc_40BA8B:  ",gcc,1
"jz short loc_40BAD0  | * | mov dl, [ebp+0] ",gcc,1
"loc_40BA8B:   | * | cmp eax, 0FFh ",gcc,1
"mov dl, [ebp+0]  | * | jnz short loc_40BA70 ",gcc,1
"jnz short loc_40BA70  | * | mov eax, [ebx+10Ch] ",gcc,1
"mov [esp+3Ch+var_38], 0FFh  | * | mov [esp+3Ch+var_20], dl ",gcc,1
"mov [esp+3Ch+var_20], dl  | * | inc dword ptr [ebx+120h] ",gcc,1
"mov eax, 1  | * | mov dl, [esp+3Ch+var_20] ",gcc,1
"xor ecx, ecx  | * | jmp short loc_40BA73 ",gcc,1
"mov dl, [esp+3Ch+var_20]  | * | align 10h ",gcc,1
jmp short loc_40BA73  | * | loc_40BAD0:  ,gcc,1
"align 10h  | * | mov [esp+3Ch+var_3C], 0 ",gcc,1
"loc_40BAD0:   | * | mov ecx, [esp+3Ch+arg_0] ",gcc,1
"mov eax, ebx  | * | mov edx, [ebx+100h] ",gcc,3
"call _d_print_mod_list  | * | cmp edx, 0FFh ",gcc,2
"mov edx, [ebx+100h]  | * | jz short loc_40BB3F ",gcc,1
jz short loc_40BB3F  | * | loc_40BAF5:  ,gcc,1
"lea eax, [edx+1]  | * | mov byte ptr [ebx+edx], 29h  ",gcc,1
"loc_40BAF5:   | * | mov [ebx+100h], eax ",gcc,1
"mov byte ptr [ebx+edx], 29h   | * | mov byte ptr [ebx+104h], 29h  ",gcc,1
"mov [ebx+100h], eax  | * | jmp loc_40B9D7 ",gcc,1
"mov byte ptr [ebx+104h], 29h   | * | loc_40BB0B:  ",gcc,1
"jmp loc_40B9D7  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BB0B:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40B9E5 ",gcc,1
"xor eax, eax  | * | loc_40BB3F:  ",gcc,1
"jmp loc_40B9E5  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BB3F:   | * | mov eax, [ebx+10Ch] ",gcc,1
"inc dword ptr [ebx+120h]  | * | xor edx, edx ",gcc,6
"mov eax, 1  | * | jmp short loc_40BAF5 ",gcc,1
"xor edx, edx  | * | loc_40BB70:  ",gcc,1
"jmp short loc_40BAF5  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BB70:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40BA39 ",gcc,1
"xor eax, eax  | * | loc_40BBA4:  ",gcc,1
"jmp loc_40BA39  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BBA4:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov eax, 1  | * | jmp loc_40BA05 ",gcc,1
"xor edx, edx  | * | loc_40BBD8:  ",gcc,1
"jmp loc_40BA05  | * | mov [esp+3Ch+var_3C], 0 ",gcc,1
"loc_40BBD8:   | * | mov ecx, [esp+3Ch+arg_0] ",gcc,1
call _d_print_mod_list  | * | jmp loc_40B9F6 ,gcc,1
"mov edx, [ebx+100h]  | * | _d_print_array_type_isra_7 endp ",gcc,1
jmp loc_40B9F6  | * | align 4 ,gcc,1
_d_print_array_type_isra_7 endp  | * | _d_print_function_type_isra_9 proc near  ,gcc,1
var_38 = dword ptr -38h  | * | var_20 = dword ptr -20h ,data,2
"sub esp, 2Ch  | * | mov edi, edx ",gcc,2
"mov ebx, eax  | * | mov [esp+3Ch+var_20], ecx ",gcc,1
"mov edi, edx  | * | mov esi, [esp+3Ch+arg_0] ",gcc,1
"mov [esp+3Ch+var_20], ecx  | * | test esi, esi ",gcc,1
"mov esi, [esp+3Ch+arg_0]  | * | jz short loc_40BC39 ",gcc,1
"test esi, esi  | * | mov eax, [esi+8] ",gcc,1
"jz short loc_40BC39  | * | test eax, eax ",gcc,1
"mov eax, [esi+8]  | * | jnz short loc_40BC39 ",gcc,1
"test eax, eax  | * | mov eax, esi ",gcc,4
jnz short loc_40BC39  | * | loc_40BC18:  ,gcc,1
"mov eax, esi  | * | mov edx, [eax+4] ",gcc,1
"loc_40BC18:   | * | mov edx, [edx] ",gcc,1
"mov edx, [eax+4]  | * | sub edx, 17h  ",gcc,1
"mov edx, [edx]  | * | cmp edx, 10h ",gcc,1
"sub edx, 17h   | * | ja short def_40BC25  ",gcc,1
"cmp edx, 10h  | * | jmp ds:jpt_40BC25[edx*4]  ",gcc,1
ja short def_40BC25   | * | def_40BC25:  ,gcc,1
"jmp ds:jpt_40BC25[edx*4]   | * | mov eax, [eax]  ",gcc,1
"def_40BC25:   | * | test eax, eax ",gcc,1
"mov eax, [eax]   | * | jz short loc_40BC39 ",gcc,1
"test eax, eax  | * | mov ebp, [eax+8] ",gcc,1
"jz short loc_40BC39  | * | test ebp, ebp ",gcc,1
"mov ebp, [eax+8]  | * | jz short loc_40BC18 ",gcc,1
"test ebp, ebp  | * | loc_40BC39:  ",gcc,1
"jz short loc_40BC18  | * | mov ebp, [ebx+114h] ",gcc,1
"loc_40BC39:   | * | mov dword ptr [ebx+114h], 0 ",gcc,1
"mov ebp, [ebx+114h]  | * | mov [esp+3Ch+var_3C], 0 ",gcc,2
"mov dword ptr [ebx+114h], 0  | * | mov ecx, esi ",gcc,2
"mov [esp+3Ch+var_3C], 0  | * | mov edx, edi ",gcc,2
"mov edx, edi  | * | call _d_print_mod_list ",gcc,3
"mov edx, [ebx+100h]  | * | jz loc_40BDC8 ",gcc,1
"cmp edx, 0FFh  | * | loc_40BC6D:  ",gcc,1
"jz loc_40BDC8  | * | lea eax, [edx+1] ",gcc,1
loc_40BC6D:   | * | loc_40BC70:  ,gcc,1
"lea eax, [edx+1]  | * | mov byte ptr [ebx+edx], 28h  ",gcc,1
"loc_40BC70:   | * | mov [ebx+100h], eax ",gcc,1
"mov byte ptr [ebx+edx], 28h   | * | mov byte ptr [ebx+104h], 28h  ",gcc,1
"mov [ebx+100h], eax  | * | mov edx, [esp+3Ch+var_20] ",gcc,1
"mov byte ptr [ebx+104h], 28h   | * | mov ecx, [edx] ",gcc,1
"mov edx, [esp+3Ch+var_20]  | * | test ecx, ecx ",gcc,1
"mov ecx, [edx]  | * | jz short loc_40BC9A ",gcc,1
"test ecx, ecx  | * | mov edx, edi ",gcc,1
"jz short loc_40BC9A  | * | mov eax, ebx ",gcc,1
"mov edx, edi  | * | call _d_print_comp ",gcc,2
call _d_print_comp  | * | loc_40BC9A:  ,gcc,1
loc_40BC9A:   | * | jz loc_40BDFC ,gcc,1
jz loc_40BDFC  | * | loc_40BCA8:  ,gcc,1
"loc_40BCA8:   | * | mov [ebx+100h], edx ",gcc,1
"mov [ebx+100h], edx  | * | mov [esp+3Ch+var_3C], 1 ",gcc,1
"mov byte ptr [ebx+104h], 29h   | * | mov ecx, esi ",gcc,1
"mov [esp+3Ch+var_3C], 1  | * | mov edx, edi ",gcc,1
"mov eax, ebx  | * | mov [ebx+114h], ebp ",gcc,1
"call _d_print_mod_list  | * | add esp, 2Ch ",gcc,1
"mov [ebx+114h], ebp  | * | pop ebx ",gcc,2
retn  | * | loc_40BCDC:  ,gcc,1
"align 4  | * | mov al, [ebx+104h]  ",gcc,1
loc_40BCDC:   | * | loc_40BCE2:  ,gcc,1
"mov al, [ebx+104h]   | * | cmp al, 20h  ",gcc,1
loc_40BCE2:   | * | jz short loc_40BD54 ,gcc,1
"cmp al, 20h   | * | mov edx, [ebx+100h] ",gcc,1
"jz short loc_40BD54  | * | cmp edx, 0FFh ",gcc,1
"mov edx, [ebx+100h]  | * | jz loc_40BE64 ",gcc,1
jz loc_40BE64  | * | loc_40BCFB:  ,gcc,1
"lea eax, [edx+1]  | * | mov byte ptr [ebx+edx], 20h  ",gcc,3
"loc_40BCFB:   | * | mov [ebx+100h], eax ",gcc,1
"mov byte ptr [ebx+edx], 20h   | * | mov byte ptr [ebx+104h], 20h  ",gcc,3
"mov [ebx+100h], eax  | * | cmp eax, 0FFh ",gcc,1
"mov byte ptr [ebx+104h], 20h   | * | jnz short loc_40BD61 ",gcc,1
"cmp eax, 0FFh  | * | loc_40BD13:  ",gcc,1
"jnz short loc_40BD61  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BD13:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp short loc_40BD64 ",gcc,1
"xor eax, eax  | * | loc_40BD44:  ",gcc,1
"jmp short loc_40BD64  | * | mov al, [ebx+104h]  ",gcc,1
"loc_40BD44:   | * | cmp al, 28h  ",gcc,1
"mov al, [ebx+104h]   | * | jz short loc_40BD54 ",gcc,1
"cmp al, 28h   | * | cmp al, 2Ah  ",gcc,1
jz short loc_40BD54  | * | jnz short loc_40BCE2 ,gcc,1
"cmp al, 2Ah   | * | xchg ax, ax ",gcc,1
jnz short loc_40BCE2  | * | loc_40BD54:  ,gcc,1
"xchg ax, ax  | * | mov eax, [ebx+100h] ",gcc,1
"loc_40BD54:   | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebx+100h]  | * | jz short loc_40BD13 ",gcc,1
"cmp eax, 0FFh  | * | loc_40BD61:  ",gcc,1
"jz short loc_40BD13  | * | lea edx, [eax+1] ",gcc,1
loc_40BD61:   | * | loc_40BD64:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebx+eax], 28h  ",gcc,1
"loc_40BD64:   | * | mov [ebx+100h], edx ",gcc,1
"mov byte ptr [ebx+eax], 28h   | * | mov byte ptr [ebx+104h], 28h  ",gcc,2
"mov [ebx+100h], edx  | * | mov ebp, [ebx+114h] ",gcc,1
"mov byte ptr [ebx+104h], 28h   | * | mov dword ptr [ebx+114h], 0 ",gcc,1
"call _d_print_mod_list  | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebx+100h]  | * | jz loc_40BE30 ",gcc,1
jz loc_40BE30  | * | loc_40BDAB:  ,gcc,1
"loc_40BDAB:   | * | mov [ebx+100h], edx ",gcc,1
"mov [ebx+100h], edx  | * | cmp edx, 0FFh ",gcc,1
"mov byte ptr [ebx+104h], 29h   | * | jnz loc_40BC6D ",gcc,1
"cmp edx, 0FFh  | * | loc_40BDC8:  ",gcc,1
"jnz loc_40BC6D  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BDC8:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov eax, 1  | * | jmp loc_40BC70 ",gcc,1
"xor edx, edx  | * | loc_40BDFC:  ",gcc,1
"jmp loc_40BC70  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BDFC:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40BCA8 ",gcc,1
"xor eax, eax  | * | loc_40BE30:  ",gcc,1
"jmp loc_40BCA8  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BE30:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40BDAB ",gcc,1
"xor eax, eax  | * | loc_40BE64:  ",gcc,1
"jmp loc_40BDAB  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BE64:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov eax, 1  | * | jmp loc_40BCFB ",gcc,1
"xor edx, edx  | * | _d_print_function_type_isra_9 endp ",gcc,1
jmp loc_40BCFB  | * | _d_print_cast_isra_10 proc near  ,gcc,1
var_34 = dword ptr -34h  | * | var_20 = dword ptr -20h ,data,2
"mov ebx, eax  | * | mov esi, ecx ",gcc,1
"mov edi, edx  | * | mov ecx, [ecx] ",gcc,1
"mov esi, ecx  | * | cmp dword ptr [ecx], 4 ",gcc,1
"mov ecx, [ecx]  | * | jz short loc_40BEBC ",gcc,1
"cmp dword ptr [ecx], 4  | * | call _d_print_comp ",gcc,1
"jz short loc_40BEBC  | * | add esp, 2Ch ",gcc,1
call _d_print_comp  | * | pop ebx ,gcc,1
retn  | * | loc_40BEBC:  ,gcc,1
"align 4  | * | mov ebp, [eax+114h] ",gcc,1
"loc_40BEBC:   | * | mov dword ptr [eax+114h], 0 ",gcc,1
"mov ebp, [eax+114h]  | * | mov eax, [eax+110h] ",gcc,1
"mov dword ptr [eax+114h], 0  | * | mov [esp+3Ch+var_24], eax ",gcc,1
"mov eax, [eax+110h]  | * | lea eax, [esp+3Ch+var_24] ",gcc,1
"mov [esp+3Ch+var_24], eax  | * | mov [ebx+110h], eax ",gcc,1
"lea eax, [esp+3Ch+var_24]  | * | mov eax, [esi] ",gcc,1
"mov [ebx+110h], eax  | * | mov [esp+3Ch+var_20], eax ",gcc,1
"mov eax, [esi]  | * | mov ecx, [eax+4] ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | mov eax, ebx ",gcc,1
"mov ecx, [eax+4]  | * | call _d_print_comp ",gcc,1
"mov eax, ebx  | * | mov eax, [esp+3Ch+var_24] ",gcc,1
"call _d_print_comp  | * | mov [ebx+110h], eax ",gcc,1
"mov eax, [esp+3Ch+var_24]  | * | cmp byte ptr [ebx+104h], 3Ch  ",gcc,1
"mov [ebx+110h], eax  | * | jz loc_40BFDC ",gcc,1
"cmp byte ptr [ebx+104h], 3Ch   | * | mov eax, [ebx+100h] ",gcc,1
jz loc_40BFDC  | * | loc_40BF0D:  ,gcc,1
loc_40BF0D:   | * | jz short loc_40BF74 ,gcc,1
jz short loc_40BF74  | * | loc_40BF17:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebx+eax], 3Ch  ",gcc,1
"loc_40BF17:   | * | mov [ebx+100h], edx ",gcc,1
"mov byte ptr [ebx+eax], 3Ch   | * | mov byte ptr [ebx+104h], 3Ch  ",gcc,1
"mov [ebx+100h], edx  | * | mov eax, [esi] ",gcc,1
"mov byte ptr [ebx+104h], 3Ch   | * | mov ecx, [eax+8] ",gcc,1
"mov eax, [esi]  | * | mov edx, edi ",gcc,1
"mov ecx, [eax+8]  | * | mov eax, ebx ",gcc,1
"mov eax, ebx  | * | cmp byte ptr [ebx+104h], 3Eh  ",gcc,1
call _d_print_comp  | * | jz loc_40C004 ,gcc,1
"cmp byte ptr [ebx+104h], 3Eh   | * | mov eax, [ebx+100h] ",gcc,1
jz loc_40C004  | * | loc_40BF49:  ,gcc,1
loc_40BF49:   | * | jz short loc_40BFA8 ,gcc,1
jz short loc_40BFA8  | * | loc_40BF53:  ,gcc,1
"lea edx, [eax+1]  | * | mov byte ptr [ebx+eax], 3Eh  ",gcc,1
"loc_40BF53:   | * | mov [ebx+100h], edx ",gcc,1
"mov byte ptr [ebx+eax], 3Eh   | * | mov byte ptr [ebx+104h], 3Eh  ",gcc,1
"mov [ebx+100h], edx  | * | mov [ebx+114h], ebp ",gcc,1
"mov byte ptr [ebx+104h], 3Eh   | * | add esp, 2Ch ",gcc,1
retn  | * | loc_40BF74:  ,gcc,1
"align 4  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,3
"loc_40BF74:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40BF17 ",gcc,1
"xor eax, eax  | * | loc_40BFA8:  ",gcc,1
"jmp loc_40BF17  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40BFA8:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov edx, 1  | * | jmp loc_40BF53 ",gcc,1
"xor eax, eax  | * | loc_40BFDC:  ",gcc,1
"jmp loc_40BF53  | * | mov edx, [ebx+100h] ",gcc,1
"loc_40BFDC:   | * | cmp edx, 0FFh ",gcc,1
"mov edx, [ebx+100h]  | * | jz short loc_40C060 ",gcc,1
jz short loc_40C060  | * | loc_40BFED:  ,gcc,1
"loc_40BFED:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+100h], eax  | * | jmp loc_40BF0D ",gcc,1
"mov byte ptr [ebx+104h], 20h   | * | align 4 ",gcc,2
jmp loc_40BF0D  | * | loc_40C004:  ,gcc,1
"align 4  | * | mov edx, [ebx+100h] ",gcc,1
"loc_40C004:   | * | cmp edx, 0FFh ",gcc,1
"mov edx, [ebx+100h]  | * | jz short loc_40C02C ",gcc,1
jz short loc_40C02C  | * | loc_40C015:  ,gcc,1
"loc_40C015:   | * | mov [ebx+100h], eax ",gcc,1
"mov [ebx+100h], eax  | * | jmp loc_40BF49 ",gcc,1
jmp loc_40BF49  | * | loc_40C02C:  ,gcc,1
"loc_40C02C:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov eax, 1  | * | jmp short loc_40C015 ",gcc,1
"xor edx, edx  | * | align 10h ",gcc,1
jmp short loc_40C015  | * | loc_40C060:  ,gcc,1
"loc_40C060:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov eax, 1  | * | jmp loc_40BFED ",gcc,1
"xor edx, edx  | * | _d_print_cast_isra_10 endp ",gcc,1
jmp loc_40BFED  | * | _d_print_expr_op proc near  ,gcc,1
var_34 = dword ptr -34h  | * | var_20 = byte ptr -20h ,data,1
"cmp dword ptr [ecx], 2Dh   | * | jmp _d_print_comp ",gcc,1
jz short loc_40C0A0  | * | align 10h ,gcc,1
jmp _d_print_comp  | * | loc_40C0A0:  ,gcc,1
align 10h  | * | push ebp ,gcc,1
loc_40C0A0:   | * | push edi ,gcc,1
"push ebx  | * | mov edx, [ecx+4] ",gcc,1
"sub esp, 2Ch  | * | mov edi, [edx+8] ",gcc,1
"mov edx, [ecx+4]  | * | mov ebp, [edx+4] ",gcc,1
"mov edi, [edx+8]  | * | test edi, edi ",gcc,1
"mov ebp, [edx+4]  | * | jz short loc_40C124 ",gcc,1
"test edi, edi  | * | mov edx, [eax+100h] ",gcc,1
"jz short loc_40C124  | * | xor ebx, ebx ",gcc,1
"mov edx, [eax+100h]  | * | jmp short loc_40C0D7 ",gcc,1
jmp short loc_40C0D7  | * | loc_40C0C0:  ,gcc,1
"align 10h  | * | mov esi, edx ",gcc,1
loc_40C0C0:   | * | inc edx ,gcc,1
"mov esi, edx  | * | loc_40C0C3:  ",gcc,1
"inc edx  | * | mov [eax+esi], cl ",gcc,1
"loc_40C0C3:   | * | mov [eax+100h], edx ",gcc,1
"mov [eax+esi], cl  | * | mov [eax+104h], cl ",gcc,1
"mov [eax+100h], edx  | * | inc ebx ",gcc,1
"mov [eax+104h], cl  | * | cmp edi, ebx ",gcc,1
inc ebx  | * | jz short loc_40C124 ,gcc,1
"cmp edi, ebx  | * | loc_40C0D7:  ",gcc,1
"jz short loc_40C124  | * | mov cl, [ebp+ebx+0] ",gcc,1
"loc_40C0D7:   | * | cmp edx, 0FFh ",gcc,1
"mov cl, [ebp+ebx+0]  | * | jnz short loc_40C0C0 ",gcc,1
"cmp edx, 0FFh  | * | mov byte ptr [eax+0FFh], 0 ",gcc,1
"jnz short loc_40C0C0  | * | mov edx, [eax+10Ch] ",gcc,1
"mov byte ptr [eax+0FFh], 0  | * | mov [esp+3Ch+var_34], edx ",gcc,1
"mov edx, [eax+10Ch]  | * | mov [esp+3Ch+var_38], 0FFh ",gcc,1
"mov [esp+3Ch+var_34], edx  | * | mov [esp+3Ch+var_3C], eax ",gcc,1
"mov [esp+3Ch+var_38], 0FFh  | * | mov [esp+3Ch+var_24], eax ",gcc,1
"mov [esp+3Ch+var_3C], eax  | * | mov [esp+3Ch+var_20], cl ",gcc,1
"mov [esp+3Ch+var_24], eax  | * | call dword ptr [eax+108h] ",gcc,1
"mov [esp+3Ch+var_20], cl  | * | mov eax, [esp+3Ch+var_24] ",gcc,1
"mov eax, [esp+3Ch+var_24]  | * | mov edx, 1 ",gcc,1
"inc dword ptr [eax+120h]  | * | xor esi, esi ",gcc,1
"mov edx, 1  | * | mov cl, [esp+3Ch+var_20] ",gcc,1
"xor esi, esi  | * | jmp short loc_40C0C3 ",gcc,1
"mov cl, [esp+3Ch+var_20]  | * | loc_40C124:  ",gcc,1
"jmp short loc_40C0C3  | * | add esp, 2Ch ",gcc,1
loc_40C124:   | * | pop ebx ,gcc,1
pop ebp  | * | _d_print_expr_op endp ,gcc,1
retn  | * | _d_print_subexpr proc near  ,gcc,1
"sub esp, 24h  | * | mov eax, [ecx] ",gcc,1
"mov ebx, eax  | * | cmp eax, 1 ",gcc,1
"mov eax, [ecx]  | * | jbe short loc_40C198 ",gcc,1
"cmp eax, 1  | * | cmp eax, 2Ch  ",gcc,1
jbe short loc_40C198  | * | jz short loc_40C198 ,gcc,1
"cmp eax, 2Ch   | * | cmp eax, 6 ",gcc,1
jz short loc_40C198  | * | jz short loc_40C198 ,gcc,1
"cmp eax, 6  | * | mov eax, [ebx+100h] ",gcc,1
"jz short loc_40C198  | * | cmp eax, 0FFh ",gcc,1
"mov eax, [ebx+100h]  | * | jz loc_40C1D8 ",gcc,1
jz loc_40C1D8  | * | loc_40C158:  ,gcc,1
"lea esi, [eax+1]  | * | mov byte ptr [ebx+eax], 28h  ",gcc,1
"loc_40C158:   | * | mov [ebx+100h], esi ",gcc,1
"mov [ebx+100h], esi  | * | mov eax, ebx ",gcc,1
"mov byte ptr [ebx+104h], 28h   | * | call _d_print_comp ",gcc,1
"mov eax, [ebx+100h]  | * | jz short loc_40C1A4 ",gcc,1
jz short loc_40C1A4  | * | loc_40C180:  ,gcc,1
"loc_40C180:   | * | mov [ebx+100h], edx ",gcc,1
"mov [ebx+100h], edx  | * | add esp, 24h ",gcc,1
"mov byte ptr [ebx+104h], 29h   | * | pop ebx ",gcc,1
retn  | * | loc_40C198:  ,gcc,1
"loc_40C198:   | * | add esp, 24h ",gcc,1
pop ebx  | * | jmp _d_print_comp ,gcc,1
pop esi  | * | loc_40C1A4:  ,gcc,1
"jmp _d_print_comp  | * | mov byte ptr [ebx+0FFh], 0 ",gcc,1
"loc_40C1A4:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov byte ptr [ebx+0FFh], 0  | * | mov [esp+2Ch+var_24], eax ",gcc,2
"mov eax, [ebx+10Ch]  | * | mov [esp+2Ch+var_28], 0FFh ",gcc,2
"mov [esp+2Ch+var_24], eax  | * | mov [esp+2Ch+var_2C], ebx ",gcc,3
"mov [esp+2Ch+var_28], 0FFh  | * | call dword ptr [ebx+108h] ",gcc,1
"mov [esp+2Ch+var_2C], ebx  | * | inc dword ptr [ebx+120h] ",gcc,1
"mov edx, 1  | * | jmp short loc_40C180 ",gcc,1
jmp short loc_40C180  | * | loc_40C1D8:  ,gcc,1
"loc_40C1D8:   | * | mov eax, [ebx+10Ch] ",gcc,1
"mov [esp+2Ch+var_28], 0FFh  | * | mov [esp+2Ch+var_10], edx ",gcc,1
"mov [esp+2Ch+var_2C], ebx  | * | mov [esp+2Ch+var_14], ecx ",gcc,1
"mov [esp+2Ch+var_10], edx  | * | call dword ptr [ebx+108h] ",gcc,1
"mov [esp+2Ch+var_14], ecx  | * | inc dword ptr [ebx+120h] ",gcc,1
"mov esi, 1  | * | mov ecx, [esp+2Ch+var_14] ",gcc,1
"xor eax, eax  | * | mov edx, [esp+2Ch+var_10] ",gcc,1
"mov ecx, [esp+2Ch+var_14]  | * | jmp loc_40C158 ",gcc,1
"mov edx, [esp+2Ch+var_10]  | * | _d_print_subexpr endp ",gcc,1
jmp loc_40C158  | * | _d_demangle_callback_constprop_15 proc near ,gcc,1
var_184 = dword ptr -184h  | * | var_179 = byte ptr -179h ,data,1
var_180 = dword ptr -180h  | * | var_170 = dword ptr -170h ,data,1
var_179 = byte ptr -179h  | * | var_16C = dword ptr -16Ch ,data,1
var_170 = dword ptr -170h  | * | var_168 = dword ptr -168h ,data,1
var_16C = dword ptr -16Ch  | * | var_164 = dword ptr -164h ,data,1
var_168 = dword ptr -168h  | * | var_160 = dword ptr -160h ,data,1
var_164 = dword ptr -164h  | * | var_15C = dword ptr -15Ch ,data,1
var_160 = dword ptr -160h  | * | var_158 = dword ptr -158h ,data,1
var_15C = dword ptr -15Ch  | * | var_154 = dword ptr -154h ,data,1
var_158 = dword ptr -158h  | * | var_150 = dword ptr -150h ,data,1
var_154 = dword ptr -154h  | * | var_14C = dword ptr -14Ch ,data,1
var_150 = dword ptr -150h  | * | var_148 = dword ptr -148h ,data,1
var_14C = dword ptr -14Ch  | * | var_144 = dword ptr -144h ,data,1
var_148 = dword ptr -148h  | * | var_140 = dword ptr -140h ,data,1
var_144 = dword ptr -144h  | * | var_13C = byte ptr -13Ch ,data,1
var_140 = dword ptr -140h  | * | var_3C = dword ptr -3Ch ,data,1
var_13C = byte ptr -13Ch  | * | var_38 = byte ptr -38h ,data,1
var_38 = byte ptr -38h  | * | var_30 = dword ptr -30h ,data,1
"push esi  | * | sub esp, 18Ch ",gcc,1
"sub esp, 18Ch  | * | mov [ebp+var_180], edx ",gcc,1
"mov ebx, eax  | * | mov [ebp+var_184], ecx ",gcc,1
"mov [ebp+var_180], edx  | * | mov al, [eax] ",gcc,1
"mov [ebp+var_184], ecx  | * | mov [ebp+var_179], al ",gcc,1
"mov al, [eax]  | * | cmp al, 5Fh  ",gcc,1
"mov [ebp+var_179], al  | * | jz loc_40C41C ",gcc,1
"cmp al, 5Fh   | * | loc_40C246:  ",gcc,1
"jz loc_40C41C  | * | mov edi, offset aGlobal  ",gcc,1
"loc_40C246:   | * | mov ecx, 8 ",gcc,1
"mov edi, offset aGlobal   | * | mov esi, ebx ",gcc,1
"mov ecx, 8  | * | repe cmpsb ",gcc,1
"mov esi, ebx  | * | jnz short loc_40C271 ",gcc,1
"repe cmpsb  | * | mov al, [ebx+8] ",gcc,1
"jnz short loc_40C271  | * | cmp al, 2Eh  ",gcc,1
"mov al, [ebx+8]  | * | jz loc_40C3F4 ",gcc,1
jz loc_40C3F4  | * | jz loc_40C3F4 ,gcc,2
"cmp al, 24h   | * | loc_40C271:  ",gcc,1
"jz loc_40C3F4  | * | xor esi, esi ",gcc,1
loc_40C271:   | * | loc_40C273:  ,gcc,1
"xor esi, esi  | * | xor eax, eax ",gcc,1
"loc_40C273:   | * | mov ecx, 0FFFFFFFFh ",gcc,1
"not ecx  | * | mov [ebp+var_170], ebx ",gcc,1
"dec ecx  | * | lea eax, [ebx+ecx] ",gcc,1
"mov [ebp+var_170], ebx  | * | mov [ebp+var_16C], eax ",gcc,1
"lea eax, [ebx+ecx]  | * | mov [ebp+var_168], 11h ",gcc,1
"mov [ebp+var_16C], eax  | * | mov [ebp+var_164], ebx ",gcc,1
"mov [ebp+var_168], 11h  | * | lea eax, [ecx+ecx] ",gcc,1
"mov [ebp+var_164], ebx  | * | mov [ebp+var_158], eax ",gcc,1
"lea eax, [ecx+ecx]  | * | mov [ebp+var_15C], 0 ",gcc,1
"mov [ebp+var_158], eax  | * | mov [ebp+var_14C], ecx ",gcc,1
"mov [ebp+var_15C], 0  | * | mov [ebp+var_150], 0 ",gcc,1
"mov [ebp+var_14C], ecx  | * | mov [ebp+var_148], 0 ",gcc,1
"mov [ebp+var_150], 0  | * | mov [ebp+var_144], 0 ",gcc,1
"mov [ebp+var_148], 0  | * | mov [ebp+var_140], 0 ",gcc,1
"mov [ebp+var_144], 0  | * | lea edx, ds:0[ecx*4] ",gcc,1
"mov [ebp+var_140], 0  | * | add eax, edx ",gcc,1
"lea edx, ds:0[ecx*4]  | * | lea eax, ds:12h[eax*4] ",gcc,1
"add eax, edx  | * | mov ecx, 10h ",gcc,1
"lea eax, ds:12h[eax*4]  | * | and eax, 0FFFFFFF0h ",gcc,1
"mov ecx, 10h  | * | call ___chkstk_ms ",gcc,1
"and eax, 0FFFFFFF0h  | * | sub esp, eax ",gcc,2
"call ___chkstk_ms  | * | lea edi, [esp+0Ch] ",gcc,1
"sub esp, eax  | * | lea eax, [edx+12h] ",gcc,1
"lea edi, [esp+0Ch]  | * | xor edx, edx ",gcc,1
"lea eax, [edx+12h]  | * | div ecx ",gcc,1
"xor edx, edx  | * | shl eax, 4 ",gcc,1
div ecx  | * | call ___chkstk_ms ,gcc,1
"shl eax, 4  | * | sub esp, eax ",gcc,1
"call ___chkstk_ms  | * | lea eax, [esp+0Ch] ",gcc,1
"sub esp, eax  | * | mov [ebp+var_160], edi ",gcc,1
"lea eax, [esp+0Ch]  | * | mov [ebp+var_154], eax ",gcc,1
"mov [ebp+var_160], edi  | * | cmp esi, 1 ",gcc,1
"mov [ebp+var_154], eax  | * | jz loc_40C4C4 ",gcc,1
"cmp esi, 1  | * | jnb loc_40C430 ",gcc,1
jz loc_40C4C4  | * | loc_40C334:  ,gcc,1
"jnb loc_40C430  | * | lea eax, [ebp+var_170] ",gcc,1
loc_40C334:   | * | call _d_type ,gcc,1
"lea eax, [ebp+var_170]  | * | mov ebx, eax ",gcc,1
"call _d_type  | * | mov eax, [ebp+var_164] ",gcc,1
"mov ebx, eax  | * | mov al, [eax] ",gcc,1
"mov eax, [ebp+var_164]  | * | mov [ebp+var_179], al ",gcc,2
"mov al, [eax]  | * | loc_40C34F:  ",gcc,1
"mov [ebp+var_179], al  | * | cmp [ebp+var_179], 0 ",gcc,1
loc_40C34F:   | * | jnz loc_40C3E8 ,gcc,1
"cmp [ebp+var_179], 0  | * | loc_40C35C:  ",gcc,1
"jnz loc_40C3E8  | * | test ebx, ebx ",gcc,1
loc_40C35C:   | * | jz loc_40C3E8 ,gcc,1
"test ebx, ebx  | * | mov [ebp+var_3C], 0 ",gcc,1
"jz loc_40C3E8  | * | mov [ebp+var_38], 0 ",gcc,1
"mov [ebp+var_3C], 0  | * | mov [ebp+var_2C], 0 ",gcc,1
"mov [ebp+var_38], 0  | * | mov [ebp+var_28], 0 ",gcc,1
"mov [ebp+var_2C], 0  | * | mov [ebp+var_20], 0 ",gcc,1
"mov [ebp+var_28], 0  | * | mov [ebp+var_1C], 0 ",gcc,1
"mov [ebp+var_20], 0  | * | mov eax, [ebp+var_180] ",gcc,1
"mov [ebp+var_1C], 0  | * | mov [ebp+var_34], eax ",gcc,1
"mov eax, [ebp+var_180]  | * | mov eax, [ebp+var_184] ",gcc,1
"mov [ebp+var_34], eax  | * | mov [ebp+var_30], eax ",gcc,1
"mov eax, [ebp+var_184]  | * | mov [ebp+var_24], 0 ",gcc,1
"mov [ebp+var_30], eax  | * | lea esi, [ebp+var_13C] ",gcc,1
"mov [ebp+var_24], 0  | * | mov ecx, ebx ",gcc,1
"lea esi, [ebp+var_13C]  | * | mov edx, 11h ",gcc,1
"mov edx, 11h  | * | call _d_print_comp ",gcc,1
"mov eax, esi  | * | mov eax, [ebp+var_3C] ",gcc,1
"call _d_print_comp  | * | mov [ebp+eax+var_13C], 0 ",gcc,1
"mov eax, [ebp+var_3C]  | * | mov edx, [ebp+var_30] ",gcc,1
"mov [ebp+eax+var_13C], 0  | * | mov [esp+8], edx ",gcc,1
"mov edx, [ebp+var_30]  | * | mov [esp+4], eax ",gcc,1
"mov [esp+8], edx  | * | mov [esp], esi ",gcc,1
"mov [esp+4], eax  | * | call [ebp+var_34] ",gcc,1
"mov [esp], esi  | * | xor eax, eax ",gcc,1
"call [ebp+var_34]  | * | mov edx, [ebp+var_24] ",gcc,1
"xor eax, eax  | * | test edx, edx ",gcc,1
"mov edx, [ebp+var_24]  | * | setz al ",gcc,1
"test edx, edx  | * | lea esp, [ebp-0Ch] ",gcc,1
"lea esp, [ebp-0Ch]  | * | pop esi ",gcc,6
retn  | * | loc_40C3E8:  ,gcc,1
"loc_40C3E8:   | * | lea esp, [ebp-0Ch] ",gcc,1
retn  | * | loc_40C3F4:  ,gcc,1
"align 4  | * | mov al, [ebx+9] ",gcc,1
"loc_40C3F4:   | * | cmp al, 44h  ",gcc,1
"mov al, [ebx+9]  | * | jz loc_40C627 ",gcc,1
"cmp al, 44h   | * | cmp al, 49h  ",gcc,1
jz loc_40C627  | * | jnz loc_40C271 ,gcc,1
"cmp al, 49h   | * | xor eax, eax ",gcc,1
"jnz loc_40C271  | * | cmp byte ptr [ebx+0Ah], 5Fh  ",gcc,1
"cmp byte ptr [ebx+0Ah], 5Fh   | * | mov esi, eax ",gcc,2
"setz al  | * | shl esi, 1 ",gcc,1
"mov esi, eax  | * | jmp loc_40C273 ",gcc,2
"shl esi, 1  | * | align 4 ",gcc,1
jmp loc_40C273  | * | loc_40C41C:  ,gcc,1
"align 4  | * | cmp byte ptr [ebx+1], 5Ah  ",gcc,1
loc_40C41C:   | * | jnz loc_40C246 ,gcc,1
"cmp byte ptr [ebx+1], 5Ah   | * | mov esi, 1 ",gcc,1
jnz loc_40C246  | * | jmp loc_40C273 ,gcc,1
"mov esi, 1  | * | loc_40C430:  ",gcc,1
"jmp loc_40C273  | * | cmp esi, 3 ",gcc,1
loc_40C430:   | * | ja loc_40C334 ,gcc,1
"cmp esi, 3  | * | lea edx, [ebx+0Bh] ",gcc,1
"ja loc_40C334  | * | mov [ebp+var_164], edx ",gcc,1
"lea edx, [ebx+0Bh]  | * | cmp byte ptr [ebx+0Bh], 5Fh  ",gcc,1
"mov [ebp+var_164], edx  | * | jnz short loc_40C452 ",gcc,1
"cmp byte ptr [ebx+0Bh], 5Fh   | * | cmp byte ptr [ebx+0Ch], 5Ah  ",gcc,1
jnz short loc_40C452  | * | jz loc_40C5F9 ,gcc,1
"cmp byte ptr [ebx+0Ch], 5Ah   | * | loc_40C452:  ",gcc,1
"jz loc_40C5F9  | * | xor eax, eax ",gcc,1
"loc_40C452:   | * | mov ecx, 0FFFFFFFFh ",gcc,1
"not ecx  | * | lea edi, [ebp+var_170] ",gcc,1
"dec ecx  | * | mov eax, edi ",gcc,1
"lea edi, [ebp+var_170]  | * | call _d_make_name ",gcc,1
call _d_make_name  | * | loc_40C46F:  ,gcc,1
"mov ecx, eax  | * | xor edx, edx ",gcc,1
"loc_40C46F:   | * | cmp esi, 2 ",gcc,1
"xor edx, edx  | * | setnz dl ",gcc,1
"cmp esi, 2  | * | add edx, 3Eh  ",gcc,1
"setnz dl  | * | mov dword ptr [esp], 0 ",gcc,1
"add edx, 3Eh   | * | mov eax, edi ",gcc,1
"mov dword ptr [esp], 0  | * | call _d_make_comp ",gcc,1
"mov eax, edi  | * | mov ebx, eax ",gcc,2
"call _d_make_comp  | * | mov edx, [ebp+var_164] ",gcc,2
"mov ebx, eax  | * | xor eax, eax ",gcc,1
"mov edx, [ebp+var_164]  | * | mov ecx, 0FFFFFFFFh ",gcc,1
"repne scasb  | * | lea eax, [edx+ecx-1] ",gcc,1
"not ecx  | * | mov [ebp+var_164], eax ",gcc,1
"lea eax, [edx+ecx-1]  | * | mov al, [eax] ",gcc,1
"mov [ebp+var_164], eax  | * | mov [ebp+var_179], al ",gcc,2
"mov al, [eax]  | * | cmp [ebp+var_179], 0 ",gcc,1
"mov [ebp+var_179], al  | * | jnz loc_40C3E8 ",gcc,1
"cmp [ebp+var_179], 0  | * | jmp loc_40C35C ",gcc,2
jnz loc_40C3E8  | * | align 4 ,gcc,1
jmp loc_40C35C  | * | loc_40C4C4:  ,gcc,1
"align 4  | * | cmp [ebp+var_179], 5Fh  ",gcc,1
loc_40C4C4:   | * | jz short loc_40C4E1 ,gcc,1
"cmp [ebp+var_179], 5Fh   | * | loc_40C4CD:  ",gcc,1
"jz short loc_40C4E1  | * | xor ebx, ebx ",gcc,1
"loc_40C4CD:   | * | cmp [ebp+var_179], 0 ",gcc,1
"xor ebx, ebx  | * | jnz loc_40C3E8 ",gcc,1
jnz loc_40C3E8  | * | loc_40C4E1:  ,gcc,1
"jmp loc_40C35C  | * | lea eax, [ebx+1] ",gcc,1
"loc_40C4E1:   | * | mov [ebp+var_164], eax ",gcc,1
"lea eax, [ebx+1]  | * | mov al, [ebx+1] ",gcc,1
"mov al, [ebx+1]  | * | cmp al, 5Ah  ",gcc,1
"mov [ebp+var_179], al  | * | jnz short loc_40C4CD ",gcc,1
"cmp al, 5Ah   | * | add ebx, 2 ",gcc,1
"jnz short loc_40C4CD  | * | mov [ebp+var_164], ebx ",gcc,1
"add ebx, 2  | * | lea edi, [ebp+var_170] ",gcc,1
"mov [ebp+var_164], ebx  | * | mov edx, 1 ",gcc,1
"lea edi, [ebp+var_170]  | * | mov eax, edi ",gcc,2
"mov edx, 1  | * | call _d_encoding ",gcc,1
"call _d_encoding  | * | test byte ptr [ebp+var_168], 1 ",gcc,1
"mov ebx, eax  | * | jnz short loc_40C530 ",gcc,1
"test byte ptr [ebp+var_168], 1  | * | mov eax, [ebp+var_164] ",gcc,1
"jnz short loc_40C530  | * | mov al, [eax] ",gcc,1
"mov al, [eax]  | * | jmp loc_40C34F ",gcc,1
"mov [ebp+var_179], al  | * | loc_40C530:  ",gcc,1
"jmp loc_40C34F  | * | mov edx, [ebp+var_164] ",gcc,1
"loc_40C530:   | * | mov al, [edx] ",gcc,1
"mov edx, [ebp+var_164]  | * | mov [ebp+var_179], al ",gcc,1
"mov al, [edx]  | * | mov esi, ebx ",gcc,1
"mov [ebp+var_179], al  | * | cmp al, 2Eh  ",gcc,1
"mov esi, ebx  | * | jnz loc_40C34F ",gcc,1
"cmp al, 2Eh   | * | loc_40C548:  ",gcc,1
"jnz loc_40C34F  | * | mov al, [edx+1] ",gcc,1
"loc_40C548:   | * | lea ecx, [eax-61h] ",gcc,1
"mov al, [edx+1]  | * | cmp cl, 19h ",gcc,1
"lea ecx, [eax-61h]  | * | jbe loc_40C5E0 ",gcc,1
"cmp cl, 19h  | * | cmp al, 5Fh  ",gcc,2
jbe loc_40C5E0  | * | jz loc_40C5E0 ,gcc,1
"jz loc_40C5E0  | * | cmp al, 9 ",gcc,1
"sub eax, 30h   | * | ja loc_40C618 ",gcc,1
"cmp al, 9  | * | mov al, [edx] ",gcc,1
"ja loc_40C618  | * | mov ebx, edx ",gcc,1
"mov al, [edx]  | * | loc_40C56E:  ",gcc,1
"mov ebx, edx  | * | cmp al, 2Eh  ",gcc,1
loc_40C56E:   | * | jnz short loc_40C592 ,gcc,1
"cmp al, 2Eh   | * | xchg ax, ax ",gcc,1
jnz short loc_40C592  | * | loc_40C574:  ,gcc,1
"xchg ax, ax  | * | mov al, [ebx+1] ",gcc,1
"loc_40C574:   | * | sub eax, 30h  ",gcc,1
"mov al, [ebx+1]  | * | cmp al, 9 ",gcc,1
"sub eax, 30h   | * | ja short loc_40C592 ",gcc,1
"cmp al, 9  | * | lea ecx, [ebx+2] ",gcc,1
"ja short loc_40C592  | * | mov al, [ebx+2] ",gcc,1
"lea ecx, [ebx+2]  | * | lea ebx, [eax-30h] ",gcc,1
"mov al, [ebx+2]  | * | cmp bl, 9 ",gcc,1
"lea ebx, [eax-30h]  | * | jbe short loc_40C5D0 ",gcc,2
"cmp bl, 9  | * | mov ebx, ecx ",gcc,2
jbe short loc_40C5D0  | * | loc_40C58E:  ,gcc,1
"mov ebx, ecx  | * | cmp al, 2Eh  ",gcc,1
loc_40C58E:   | * | jz short loc_40C574 ,gcc,1
"cmp al, 2Eh   | * | loc_40C592:  ",gcc,1
"jz short loc_40C574  | * | mov ecx, ebx ",gcc,1
"loc_40C592:   | * | sub ecx, edx ",gcc,1
"mov ecx, ebx  | * | mov [ebp+var_164], ebx ",gcc,1
"sub ecx, edx  | * | mov eax, edi ",gcc,1
"mov [ebp+var_164], ebx  | * | call _d_make_name ",gcc,1
"mov eax, edi  | * | mov [esp], eax ",gcc,1
"call _d_make_name  | * | mov ecx, esi ",gcc,1
"mov [esp], eax  | * | mov edx, 46h  ",gcc,1
"mov ecx, esi  | * | mov eax, edi ",gcc,1
"mov edx, 46h   | * | call _d_make_comp ",gcc,1
"mov eax, edi  | * | mov esi, eax ",gcc,1
"mov esi, eax  | * | mov al, [edx] ",gcc,1
"mov edx, [ebp+var_164]  | * | cmp al, 2Eh  ",gcc,1
"mov al, [edx]  | * | jz short loc_40C548 ",gcc,1
"cmp al, 2Eh   | * | mov [ebp+var_179], al ",gcc,1
"jz short loc_40C548  | * | mov ebx, esi ",gcc,1
"mov [ebp+var_179], al  | * | jmp loc_40C34F ",gcc,1
"mov ebx, esi  | * | align 10h ",gcc,1
jmp loc_40C34F  | * | loc_40C5D0:  ,gcc,1
"loc_40C5D0:   | * | mov al, [ecx] ",gcc,1
"inc ecx  | * | lea ebx, [eax-30h] ",gcc,1
"mov al, [ecx]  | * | cmp bl, 9 ",gcc,1
jbe short loc_40C5D0  | * | jmp short loc_40C58E ,gcc,1
"mov ebx, ecx  | * | align 10h ",gcc,1
jmp short loc_40C58E  | * | loc_40C5E0:  ,gcc,1
"align 10h  | * | lea ebx, [edx+2] ",gcc,1
loc_40C5E0:   | * | nop ,gcc,1
"lea ebx, [edx+2]  | * | loc_40C5E4:  ",gcc,1
"nop  | * | mov al, [ebx] ",gcc,1
"loc_40C5E4:   | * | lea ecx, [eax-61h] ",gcc,1
"mov al, [ebx]  | * | cmp cl, 19h ",gcc,1
"lea ecx, [eax-61h]  | * | jbe short loc_40C5F6 ",gcc,1
jbe short loc_40C5F6  | * | jnz loc_40C56E ,gcc,1
"cmp al, 5Fh   | * | loc_40C5F6:  ",gcc,1
jnz loc_40C56E  | * | inc ebx ,gcc,1
loc_40C5F6:   | * | jmp short loc_40C5E4 ,gcc,1
inc ebx  | * | loc_40C5F9:  ,gcc,1
"jmp short loc_40C5E4  | * | add ebx, 0Dh ",gcc,1
"loc_40C5F9:   | * | mov [ebp+var_164], ebx ",gcc,1
"add ebx, 0Dh  | * | lea edi, [ebp+var_170] ",gcc,1
"mov [ebp+var_164], ebx  | * | xor edx, edx ",gcc,1
call _d_encoding  | * | jmp loc_40C46F ,gcc,1
"mov ecx, eax  | * | loc_40C618:  ",gcc,1
"jmp loc_40C46F  | * | mov ebx, esi ",gcc,1
"loc_40C618:   | * | mov dl, [edx] ",gcc,1
"mov ebx, esi  | * | mov [ebp+var_179], dl ",gcc,1
"mov dl, [edx]  | * | jmp loc_40C34F ",gcc,1
"mov [ebp+var_179], dl  | * | loc_40C627:  ",gcc,1
"jmp loc_40C34F  | * | xor eax, eax ",gcc,1
"loc_40C627:   | * | cmp byte ptr [ebx+0Ah], 5Fh  ",gcc,1
"setz al  | * | lea esi, [esi+esi*2] ",gcc,1
"lea esi, [esi+esi*2]  | * | _d_demangle_callback_constprop_15 endp ",gcc,1
jmp loc_40C273  | * | align 4 ,gcc,1
_d_demangle_callback_constprop_15 endp  | * | public ___cxa_demangle ,gcc,1
align 4  | * | ___cxa_demangle proc near  ,gcc,1
var_24 = dword ptr -24h  | * | lpmangled = dword ptr 4 ,data,1
var_20 = dword ptr -20h  | * | lpout = dword ptr 8 ,data,1
lpmangled = dword ptr 4  | * | lpoutlen = dword ptr 0Ch ,data,1
lpout = dword ptr 8  | * | lpstatus = dword ptr 10h ,data,1
"push ebx  | * | mov eax, [esp+3Ch+lpmangled] ",gcc,1
"sub esp, 2Ch  | * | mov ebp, [esp+3Ch+lpstatus] ",gcc,1
"mov eax, [esp+3Ch+lpmangled]  | * | test eax, eax ",gcc,1
"mov ebp, [esp+3Ch+lpstatus]  | * | jz loc_40C70C ",gcc,1
"test eax, eax  | * | mov ecx, [esp+3Ch+lpout] ",gcc,1
"jz loc_40C70C  | * | test ecx, ecx ",gcc,1
"mov ecx, [esp+3Ch+lpout]  | * | jz short loc_40C667 ",gcc,1
"test ecx, ecx  | * | mov edx, [esp+3Ch+lpoutlen] ",gcc,1
"jz short loc_40C667  | * | test edx, edx ",gcc,1
"mov edx, [esp+3Ch+lpoutlen]  | * | jz loc_40C70C ",gcc,1
"test edx, edx  | * | loc_40C667:  ",gcc,1
"jz loc_40C70C  | * | mov [esp+3Ch+var_2C], 0 ",gcc,1
"loc_40C667:   | * | mov [esp+3Ch+var_28], 0 ",gcc,1
"mov [esp+3Ch+var_2C], 0  | * | mov [esp+3Ch+var_24], 0 ",gcc,1
"mov [esp+3Ch+var_28], 0  | * | mov [esp+3Ch+var_20], 0 ",gcc,1
"mov [esp+3Ch+var_24], 0  | * | lea ecx, [esp+3Ch+var_2C] ",gcc,1
"mov [esp+3Ch+var_20], 0  | * | mov edx, offset _d_growable_string_callback_adapter ",gcc,1
"lea ecx, [esp+3Ch+var_2C]  | * | call _d_demangle_callback_constprop_15 ",gcc,1
"mov edx, offset _d_growable_string_callback_adapter  | * | test eax, eax ",gcc,1
call _d_demangle_callback_constprop_15  | * | jz loc_40C764 ,gcc,1
"test eax, eax  | * | mov eax, [esp+3Ch+var_20] ",gcc,1
"jz loc_40C764  | * | test eax, eax ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | jz short loc_40C704 ",gcc,1
"test eax, eax  | * | mov esi, 1 ",gcc,1
jz short loc_40C704  | * | loc_40C6AA:  ,gcc,1
"mov esi, 1  | * | mov ebx, [esp+3Ch+var_2C] ",gcc,1
"loc_40C6AA:   | * | test ebx, ebx ",gcc,1
"mov ebx, [esp+3Ch+var_2C]  | * | jz loc_40C738 ",gcc,1
"test ebx, ebx  | * | mov edi, [esp+3Ch+lpout] ",gcc,1
"jz loc_40C738  | * | test edi, edi ",gcc,1
"mov edi, [esp+3Ch+lpout]  | * | jz loc_40C754 ",gcc,1
"test edi, edi  | * | xor eax, eax ",gcc,1
"jz loc_40C754  | * | mov ecx, 0FFFFFFFFh ",gcc,1
"repne scasb  | * | lea eax, [ecx-1] ",gcc,13
"not ecx  | * | mov edx, [esp+3Ch+lpoutlen] ",gcc,1
"lea eax, [ecx-1]  | * | cmp eax, [edx] ",gcc,1
"mov edx, [esp+3Ch+lpoutlen]  | * | jnb short loc_40C724 ",gcc,1
"cmp eax, [edx]  | * | mov edi, [esp+3Ch+lpout] ",gcc,1
"jnb short loc_40C724  | * | mov esi, ebx ",gcc,1
"mov edi, [esp+3Ch+lpout]  | * | rep movsb ",gcc,1
"mov esi, ebx  | * | mov [esp+3Ch+var_3C], ebx  ",gcc,1
rep movsb  | * | call _free ,gcc,1
"mov [esp+3Ch+var_3C], ebx   | * | mov ebx, [esp+3Ch+lpout] ",gcc,1
call _free  | * | loc_40C6EE:  ,gcc,1
"mov ebx, [esp+3Ch+lpout]  | * | test ebp, ebp ",gcc,1
loc_40C6EE:   | * | jz short loc_40C6F9 ,gcc,1
"test ebp, ebp  | * | mov dword ptr [ebp+0], 0 ",gcc,1
jz short loc_40C6F9  | * | loc_40C6F9:  ,gcc,1
"mov dword ptr [ebp+0], 0  | * | mov eax, ebx ",gcc,1
"loc_40C6F9:   | * | add esp, 2Ch ",gcc,1
retn  | * | loc_40C704:  ,gcc,1
"align 4  | * | mov esi, [esp+3Ch+var_24] ",gcc,1
loc_40C704:   | * | jmp short loc_40C6AA ,gcc,1
"mov esi, [esp+3Ch+var_24]  | * | align 4 ",gcc,1
jmp short loc_40C6AA  | * | loc_40C70C:  ,gcc,1
"align 4  | * | test ebp, ebp ",gcc,1
loc_40C70C:   | * | jz short loc_40C717 ,gcc,1
"test ebp, ebp  | * | mov dword ptr [ebp+0], 0FFFFFFFDh ",gcc,1
jz short loc_40C717  | * | loc_40C717:  ,gcc,1
"mov dword ptr [ebp+0], 0FFFFFFFDh  | * | xor ebx, ebx ",gcc,1
loc_40C717:   | * | loc_40C719:  ,gcc,1
"xor ebx, ebx  | * | mov eax, ebx ",gcc,1
"loc_40C719:   | * | add esp, 2Ch ",gcc,1
retn  | * | loc_40C724:  ,gcc,1
"align 4  | * | mov eax, [esp+3Ch+lpout] ",gcc,1
"loc_40C724:   | * | mov [esp+3Ch+var_3C], eax  ",gcc,1
"mov eax, [esp+3Ch+lpout]  | * | call _free ",gcc,1
"mov [esp+3Ch+var_3C], eax   | * | mov edx, [esp+3Ch+lpoutlen] ",gcc,1
"call _free  | * | mov [edx], esi ",gcc,1
"mov edx, [esp+3Ch+lpoutlen]  | * | jmp short loc_40C6EE ",gcc,1
"mov [edx], esi  | * | loc_40C738:  ",gcc,1
"jmp short loc_40C6EE  | * | test ebp, ebp ",gcc,1
loc_40C738:   | * | jz short loc_40C717 ,gcc,1
"test ebp, ebp  | * | dec esi ",gcc,1
jz short loc_40C717  | * | jz short loc_40C778 ,gcc,1
dec esi  | * | loc_40C73F:  ,gcc,1
"jz short loc_40C778  | * | mov dword ptr [ebp+0], 0FFFFFFFEh ",gcc,1
"loc_40C73F:   | * | xor ebx, ebx ",gcc,1
"mov dword ptr [ebp+0], 0FFFFFFFEh  | * | mov eax, ebx ",gcc,1
"xor ebx, ebx  | * | add esp, 2Ch ",gcc,1
retn  | * | loc_40C754:  ,gcc,1
"align 4  | * | mov ecx, [esp+3Ch+lpoutlen] ",gcc,1
"loc_40C754:   | * | test ecx, ecx ",gcc,1
"mov ecx, [esp+3Ch+lpoutlen]  | * | jz short loc_40C6EE ",gcc,1
"test ecx, ecx  | * | mov eax, [esp+3Ch+lpoutlen] ",gcc,1
"jz short loc_40C6EE  | * | mov [eax], esi ",gcc,1
"mov eax, [esp+3Ch+lpoutlen]  | * | jmp short loc_40C6EE ",gcc,1
"mov [eax], esi  | * | loc_40C764:  ",gcc,1
"jmp short loc_40C6EE  | * | mov eax, [esp+3Ch+var_2C] ",gcc,1
"loc_40C764:   | * | mov [esp+3Ch+var_3C], eax  ",gcc,1
"mov eax, [esp+3Ch+var_2C]  | * | call _free ",gcc,1
"mov [esp+3Ch+var_3C], eax   | * | test ebp, ebp ",gcc,1
call _free  | * | jnz short loc_40C73F ,gcc,1
"test ebp, ebp  | * | xor ebx, ebx ",gcc,1
jnz short loc_40C73F  | * | jmp short loc_40C719 ,gcc,1
"xor ebx, ebx  | * | loc_40C778:  ",gcc,1
"jmp short loc_40C719  | * | mov dword ptr [ebp+0], 0FFFFFFFFh ",gcc,1
loc_40C778:   | * | jmp loc_40C6F9 ,gcc,1
"mov dword ptr [ebp+0], 0FFFFFFFFh  | * | ___cxa_demangle endp ",gcc,1
jmp loc_40C6F9  | * | public ___gcclibcxx_demangle_callback ,gcc,1
___cxa_demangle endp  | * | ___gcclibcxx_demangle_callback proc near ,gcc,1
"sub esp, 0Ch  | * | mov edx, [esp+0Ch+arg_4] ",gcc,1
"mov eax, [esp+0Ch+arg_0]  | * | test eax, eax ",gcc,1
"mov edx, [esp+0Ch+arg_4]  | * | jz short loc_40C7AC ",gcc,1
jz short loc_40C7AC  | * | jz short loc_40C7AC ,gcc,1
"test edx, edx  | * | mov ecx, [esp+0Ch+arg_8] ",gcc,1
jz short loc_40C7AC  | * | call _d_demangle_callback_constprop_15 ,gcc,1
"mov ecx, [esp+0Ch+arg_8]  | * | cmp eax, 1 ",gcc,1
"call _d_demangle_callback_constprop_15  | * | sbb eax, eax ",gcc,1
"cmp eax, 1  | * | and eax, 0FFFFFFFEh ",gcc,1
"sbb eax, eax  | * | loc_40C7A8:  ",gcc,1
"and eax, 0FFFFFFFEh  | * | add esp, 0Ch ",gcc,1
loc_40C7A8:   | * | retn ,gcc,1
"add esp, 0Ch  | * | loc_40C7AC:  ",gcc,1
"retn  | * | mov eax, 0FFFFFFFDh ",gcc,1
loc_40C7AC:   | * | jmp short loc_40C7A8 ,gcc,1
"mov eax, 0FFFFFFFDh  | * | ___gcclibcxx_demangle_callback endp ",gcc,1
jmp short loc_40C7A8  | * | align 10h ,gcc,1
___gcclibcxx_demangle_callback endp  | * | public ___dyn_tls_dtor@12 ,gcc,1
align 10h  | * | ___dyn_tls_dtor@12 proc near  ,gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | jz short loc_40C7E0 ",gcc,1
"test eax, eax  | * | cmp eax, 3 ",gcc,1
jz short loc_40C7E0  | * | jz short loc_40C7E0 ,gcc,1
"cmp eax, 3  | * | mov eax, 1 ",gcc,1
"jz short loc_40C7E0  | * | add esp, 1Ch ",gcc,1
"mov eax, 1  | * | retn 0Ch ",gcc,2
"add esp, 1Ch  | * | align 10h ",gcc,3
retn 0Ch  | * | loc_40C7E0:  ,gcc,1
"align 10h  | * | mov edx, [esp+1Ch+arg_8] ",gcc,1
"loc_40C7E0:   | * | mov [esp+1Ch+var_18], eax ",gcc,1
"mov edx, [esp+1Ch+arg_8]  | * | mov eax, [esp+1Ch+arg_0] ",gcc,1
"mov [esp+1Ch+var_18], eax  | * | mov [esp+1Ch+var_14], edx ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov [esp+1Ch+var_14], edx  | * | call ___mingw_TLScallback ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | mov eax, 1 ",gcc,1
"call ___mingw_TLScallback  | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | ___dyn_tls_dtor@12 endp ",gcc,1
retn 0Ch  | * | align 10h ,gcc,3
___dyn_tls_dtor@12 endp  | * | public ___dyn_tls_init@12 ,gcc,1
align 10h  | * | ___dyn_tls_init@12 proc near  ,gcc,1
"push ebx  | * | cmp ds:__CRT_MT, 2 ",gcc,1
"sub esp, 14h  | * | mov eax, [esp+1Ch+arg_4] ",gcc,2
"cmp ds:__CRT_MT, 2  | * | jz short loc_40C82C ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | mov ds:__CRT_MT, 2 ",gcc,1
jz short loc_40C82C  | * | loc_40C82C:  ,gcc,1
"mov ds:__CRT_MT, 2  | * | cmp eax, 2 ",gcc,1
loc_40C82C:   | * | jz short loc_40C843 ,gcc,1
"cmp eax, 2  | * | cmp eax, 1 ",gcc,1
jz short loc_40C843  | * | jz short loc_40C878 ,gcc,1
"cmp eax, 1  | * | loc_40C836:  ",gcc,1
"jz short loc_40C878  | * | add esp, 14h ",gcc,1
"loc_40C836:   | * | mov eax, 1 ",gcc,1
"add esp, 14h  | * | pop ebx ",gcc,2
"mov eax, 1  | * | pop esi ",gcc,2
pop esi  | * | loc_40C843:  ,gcc,1
"retn 0Ch  | * | mov esi, offset ___xd_z ",gcc,1
"loc_40C843:   | * | sub esi, offset ___xd_z ",gcc,1
"mov esi, offset ___xd_z  | * | sar esi, 2 ",gcc,1
"sub esi, offset ___xd_z  | * | test esi, esi ",gcc,1
"sar esi, 2  | * | jle short loc_40C836 ",gcc,1
"test esi, esi  | * | xor ebx, ebx ",gcc,1
jle short loc_40C836  | * | loc_40C857:  ,gcc,1
"xor ebx, ebx  | * | mov eax, ds:___xd_z[ebx*4] ",gcc,1
"loc_40C857:   | * | test eax, eax ",gcc,1
"mov eax, ds:___xd_z[ebx*4]  | * | jz short loc_40C864 ",gcc,1
"test eax, eax  | * | call eax  ",gcc,1
jz short loc_40C864  | * | loc_40C864:  ,gcc,1
"call eax   | * | add ebx, 1 ",gcc,1
"loc_40C864:   | * | cmp ebx, esi ",gcc,1
"add ebx, 1  | * | jnz short loc_40C857 ",gcc,1
"cmp ebx, esi  | * | add esp, 14h ",gcc,1
"jnz short loc_40C857  | * | mov eax, 1 ",gcc,1
pop esi  | * | loc_40C878:  ,gcc,1
"retn 0Ch  | * | mov eax, [esp+1Ch+arg_8] ",gcc,2
"loc_40C878:   | * | mov [esp+1Ch+var_18], 1 ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | mov [esp+1Ch+var_14], eax ",gcc,1
"mov [esp+1Ch+var_18], 1  | * | mov eax, [esp+1Ch+arg_0] ",gcc,1
"mov [esp+1Ch+var_14], eax  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | call ___mingw_TLScallback ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | jmp short loc_40C836 ",gcc,1
call ___mingw_TLScallback  | * | ___dyn_tls_init@12 endp ,gcc,1
jmp short loc_40C836  | * | align 10h ,gcc,1
___dyn_tls_init@12 endp  | * | public ___tlregdtor ,gcc,1
align 10h  | * | ___tlregdtor proc near ,gcc,1
"public ___tlregdtor  | * | xor eax, eax ",gcc,1
___tlregdtor proc near  | * | retn ,gcc,1
"xor eax, eax  | * | ___tlregdtor endp ",gcc,1
___tlregdtor endp  | * | public ___cpu_features_init ,gcc,1
align 10h  | * | ___cpu_features_init proc near  ,gcc,1
public ___cpu_features_init  | * | pushf ,gcc,1
___cpu_features_init proc near   | * | pushf ,gcc,1
pushf  | * | pop eax ,gcc,1
"pushf  | * | mov edx, eax ",gcc,1
"pop eax  | * | xor eax, 200000h ",gcc,1
"mov edx, eax  | * | push eax ",gcc,1
"xor eax, 200000h  | * | popf ",gcc,1
push eax  | * | pushf ,gcc,1
popf  | * | pop eax ,gcc,1
pushf  | * | popf ,gcc,1
"pop eax  | * | xor eax, edx ",gcc,1
"popf  | * | test eax, 200000h ",gcc,1
"xor eax, edx  | * | jz locret_40C971 ",gcc,1
"test eax, 200000h  | * | push ebx ",gcc,1
"jz locret_40C971  | * | xor eax, eax ",gcc,1
push ebx  | * | cpuid ,gcc,1
"xor eax, eax  | * | test eax, eax ",gcc,1
cpuid  | * | jz loc_40C970 ,gcc,1
"test eax, eax  | * | mov eax, 1 ",gcc,1
jz loc_40C970  | * | cpuid ,gcc,1
"mov eax, 1  | * | test dh, 1 ",gcc,1
cpuid  | * | jz short loc_40C8EC ,gcc,1
"test dh, 1  | * | or ds:___cpu_features, 1 ",gcc,1
jz short loc_40C8EC  | * | loc_40C8EC:  ,gcc,1
"or ds:___cpu_features, 1  | * | test dh, 80h ",gcc,1
loc_40C8EC:   | * | jz short loc_40C8F8 ,gcc,1
"test dh, 80h  | * | or ds:___cpu_features, 2 ",gcc,1
jz short loc_40C8F8  | * | loc_40C8F8:  ,gcc,1
"or ds:___cpu_features, 2  | * | test edx, 800000h ",gcc,1
loc_40C8F8:   | * | jz short loc_40C907 ,gcc,1
"test edx, 800000h  | * | or ds:___cpu_features, 4 ",gcc,1
jz short loc_40C907  | * | loc_40C907:  ,gcc,1
"or ds:___cpu_features, 4  | * | test edx, 1000000h ",gcc,1
loc_40C907:   | * | jz short loc_40C916 ,gcc,1
"test edx, 1000000h  | * | or ds:___cpu_features, 8 ",gcc,1
jz short loc_40C916  | * | loc_40C916:  ,gcc,1
"or ds:___cpu_features, 8  | * | test edx, 2000000h ",gcc,1
loc_40C916:   | * | jz short loc_40C925 ,gcc,1
"test edx, 2000000h  | * | or ds:___cpu_features, 10h ",gcc,1
jz short loc_40C925  | * | loc_40C925:  ,gcc,1
"or ds:___cpu_features, 10h  | * | and edx, 4000000h ",gcc,1
loc_40C925:   | * | jz short loc_40C934 ,gcc,1
"and edx, 4000000h  | * | or ds:___cpu_features, 20h ",gcc,1
jz short loc_40C934  | * | loc_40C934:  ,gcc,1
"or ds:___cpu_features, 20h  | * | test cl, 1 ",gcc,1
loc_40C934:   | * | jz short loc_40C940 ,gcc,1
"test cl, 1  | * | or ds:___cpu_features, 40h ",gcc,1
jz short loc_40C940  | * | loc_40C940:  ,gcc,1
"or ds:___cpu_features, 40h  | * | and ch, 20h ",gcc,1
loc_40C940:   | * | jnz short loc_40C973 ,gcc,1
"and ch, 20h  | * | loc_40C945:  ",gcc,1
"jnz short loc_40C973  | * | mov eax, 80000000h ",gcc,1
loc_40C945:   | * | cpuid ,gcc,1
"mov eax, 80000000h  | * | cmp eax, 80000000h ",gcc,1
cpuid  | * | jbe short loc_40C970 ,gcc,1
"cmp eax, 80000000h  | * | mov eax, 80000001h ",gcc,1
jbe short loc_40C970  | * | cpuid ,gcc,1
"mov eax, 80000001h  | * | test edx, edx ",gcc,1
cpuid  | * | js short loc_40C980 ,gcc,1
"test edx, edx  | * | loc_40C95E:  ",gcc,1
"js short loc_40C980  | * | and edx, 40000000h ",gcc,1
loc_40C95E:   | * | jz short loc_40C970 ,gcc,1
"and edx, 40000000h  | * | or ds:___cpu_features, 200h ",gcc,1
jz short loc_40C970  | * | loc_40C970:  ,gcc,1
"or ds:___cpu_features, 200h  | * | pop ebx ",gcc,1
loc_40C970:   | * | locret_40C971:  ,gcc,1
pop ebx  | * | rep retn ,gcc,1
locret_40C971:   | * | loc_40C973:  ,gcc,1
"rep retn  | * | or ds:___cpu_features, 80h ",gcc,1
loc_40C973:   | * | jmp short loc_40C945 ,gcc,1
"or ds:___cpu_features, 80h  | * | align 10h ",gcc,1
jmp short loc_40C945  | * | loc_40C980:  ,gcc,1
"align 10h  | * | or ds:___cpu_features, 100h ",gcc,1
loc_40C980:   | * | jmp short loc_40C95E ,gcc,1
"or ds:___cpu_features, 100h  | * | ___cpu_features_init endp ",gcc,1
jmp short loc_40C95E  | * | align 10h ,gcc,1
___cpu_features_init endp  | * | public _fpreset ,gcc,1
align 10h  | * | _fpreset proc near  ,gcc,1
public _fpreset  | * | fninit ,gcc,1
_fpreset proc near   | * | retn ,gcc,1
fninit  | * | _fpreset endp ,gcc,1
_fpreset endp  | * | ___report_error proc near  ,gcc,1
var_20 = dword ptr -20h  | * | arg_0 = dword ptr 4 ,data,1
var_10 = dword ptr -10h  | * | arg_4 = byte ptr 8 ,data,3
"push ebx  | * | mov ebx, ds:__imp___iob ",gcc,1
"sub esp, 28h  | * | lea eax, [esp+2Ch+arg_4] ",gcc,1
"mov ebx, ds:__imp___iob  | * | mov [esp+2Ch+var_24], 17h  ",gcc,1
"lea eax, [esp+2Ch+arg_4]  | * | mov [esp+2Ch+var_28], 1  ",gcc,1
"mov [esp+2Ch+var_24], 17h   | * | add ebx, 40h  ",gcc,1
"mov [esp+2Ch+var_28], 1   | * | mov [esp+2Ch+var_20], ebx  ",gcc,1
"add ebx, 40h   | * | mov [esp+2Ch+var_2C], offset aMingwRuntimeFa  ",gcc,1
"mov [esp+2Ch+var_20], ebx   | * | mov [esp+2Ch+var_10], eax ",gcc,1
"mov [esp+2Ch+var_2C], offset aMingwRuntimeFa   | * | call _fwrite ",gcc,1
"call _fwrite  | * | mov [esp+2Ch+var_2C], ebx  ",gcc,1
"mov eax, [esp+2Ch+var_10]  | * | mov [esp+2Ch+var_24], eax  ",gcc,1
"mov [esp+2Ch+var_2C], ebx   | * | mov eax, [esp+2Ch+arg_0] ",gcc,1
"mov [esp+2Ch+var_24], eax   | * | mov [esp+2Ch+var_28], eax  ",gcc,1
"mov eax, [esp+2Ch+arg_0]  | * | call _vfprintf ",gcc,1
"mov [esp+2Ch+var_28], eax   | * | call _abort ",gcc,1
call _vfprintf  | * | ___report_error endp ,gcc,1
call _abort  | * | align 10h ,gcc,1
___report_error endp  | * | ___write_memory_part_0 proc near  ,gcc,1
lpAddress = dword ptr -5Ch  | * | dwLength = dword ptr -54h ,data,1
lpBuffer = dword ptr -58h  | * | lpflOldProtect = dword ptr -50h ,data,1
dwLength = dword ptr -54h  | * | var_3E = byte ptr -3Eh ,data,1
lpflOldProtect = dword ptr -50h  | * | var_3D = byte ptr -3Dh ,data,1
var_3E = byte ptr -3Eh  | * | flOldProtect = dword ptr -3Ch ,data,1
var_3D = byte ptr -3Dh  | * | Buffer = _MEMORY_BASIC_INFORMATION ptr -38h ,data,1
flOldProtect = dword ptr -3Ch  | * | var_10 = dword ptr -10h ,data,1
Buffer = _MEMORY_BASIC_INFORMATION ptr -38h  | * | var_C = dword ptr -0Ch ,data,1
var_10 = dword ptr -10h  | * | var_8 = dword ptr -8 ,data,2
var_C = dword ptr -0Ch  | * | var_4 = dword ptr -4 ,data,2
"sub esp, 5Ch  | * | mov ebx, eax ",gcc,1
"mov [esp+5Ch+var_10], ebx  | * | lea eax, [esp+5Ch+Buffer] ",gcc,1
"mov ebx, eax  | * | mov [esp+5Ch+dwLength], 1Ch  ",gcc,1
"lea eax, [esp+5Ch+Buffer]  | * | mov [esp+5Ch+lpBuffer], eax  ",gcc,1
"mov [esp+5Ch+dwLength], 1Ch   | * | mov [esp+5Ch+lpAddress], ebx  ",gcc,1
"mov [esp+5Ch+lpBuffer], eax   | * | mov [esp+5Ch+var_C], esi ",gcc,1
"mov [esp+5Ch+lpAddress], ebx   | * | mov esi, edx ",gcc,1
"mov [esp+5Ch+var_C], esi  | * | mov [esp+5Ch+var_8], edi ",gcc,1
"mov esi, edx  | * | mov edi, ecx ",gcc,1
"mov [esp+5Ch+var_8], edi  | * | mov [esp+5Ch+var_4], ebp ",gcc,1
"mov edi, ecx  | * | call _VirtualQuery@12  ",gcc,1
"mov [esp+5Ch+var_4], ebp  | * | sub esp, 0Ch ",gcc,1
"call _VirtualQuery@12   | * | test eax, eax ",gcc,1
"sub esp, 0Ch  | * | jz loc_40CAF6 ",gcc,1
"test eax, eax  | * | mov eax, [esp+5Ch+Buffer.Protect] ",gcc,1
"jz loc_40CAF6  | * | cmp eax, 4 ",gcc,1
"mov eax, [esp+5Ch+Buffer.Protect]  | * | jnz short loc_40CA70 ",gcc,1
"cmp eax, 4  | * | loc_40CA45:  ",gcc,1
"jnz short loc_40CA70  | * | mov [esp+5Ch+dwLength], edi  ",gcc,1
"loc_40CA45:   | * | mov [esp+5Ch+lpBuffer], esi  ",gcc,1
"mov [esp+5Ch+dwLength], edi   | * | mov [esp+5Ch+lpAddress], ebx  ",gcc,2
"mov [esp+5Ch+lpBuffer], esi   | * | call _memcpy ",gcc,1
"mov [esp+5Ch+lpAddress], ebx   | * | loc_40CA55:  ",gcc,1
"call _memcpy  | * | mov ebx, [esp+5Ch+var_10] ",gcc,1
"loc_40CA55:   | * | mov esi, [esp+5Ch+var_C] ",gcc,1
"mov ebx, [esp+5Ch+var_10]  | * | mov edi, [esp+5Ch+var_8] ",gcc,1
"mov esi, [esp+5Ch+var_C]  | * | mov ebp, [esp+5Ch+var_4] ",gcc,1
"mov edi, [esp+5Ch+var_8]  | * | add esp, 5Ch ",gcc,1
"mov ebp, [esp+5Ch+var_4]  | * | retn ",gcc,1
"add esp, 5Ch  | * | align 10h ",gcc,1
retn  | * | loc_40CA70:  ,gcc,1
"align 10h  | * | cmp eax, 40h  ",gcc,1
loc_40CA70:   | * | jz short loc_40CA45 ,gcc,1
"cmp eax, 40h   | * | mov eax, [esp+5Ch+Buffer.RegionSize] ",gcc,1
"jz short loc_40CA45  | * | lea ebp, [esp+5Ch+flOldProtect] ",gcc,1
"mov eax, [esp+5Ch+Buffer.RegionSize]  | * | mov [esp+5Ch+lpflOldProtect], ebp  ",gcc,1
"lea ebp, [esp+5Ch+flOldProtect]  | * | mov [esp+5Ch+dwLength], 40h  ",gcc,1
"mov [esp+5Ch+lpflOldProtect], ebp   | * | mov [esp+5Ch+lpBuffer], eax  ",gcc,1
"mov [esp+5Ch+dwLength], 40h   | * | mov eax, [esp+5Ch+Buffer.BaseAddress] ",gcc,1
"mov [esp+5Ch+lpBuffer], eax   | * | mov [esp+5Ch+lpAddress], eax  ",gcc,2
"mov eax, [esp+5Ch+Buffer.BaseAddress]  | * | call _VirtualProtect@16  ",gcc,2
"mov [esp+5Ch+lpAddress], eax   | * | sub esp, 10h ",gcc,2
"call _VirtualProtect@16   | * | mov eax, [esp+5Ch+Buffer.Protect] ",gcc,1
"sub esp, 10h  | * | mov [esp+5Ch+dwLength], edi  ",gcc,1
"mov eax, [esp+5Ch+Buffer.Protect]  | * | mov [esp+5Ch+lpBuffer], esi  ",gcc,1
"mov [esp+5Ch+lpBuffer], esi   | * | cmp eax, 40h  ",gcc,1
"mov [esp+5Ch+lpAddress], ebx   | * | setnz [esp+5Ch+var_3E] ",gcc,1
"cmp eax, 40h   | * | cmp eax, 4 ",gcc,1
setnz [esp+5Ch+var_3E]  | * | setnz [esp+5Ch+var_3D] ,gcc,1
"cmp eax, 4  | * | call _memcpy ",gcc,1
"setnz [esp+5Ch+var_3D]  | * | cmp [esp+5Ch+var_3D], 0 ",gcc,1
call _memcpy  | * | jz short loc_40CA55 ,gcc,1
"cmp [esp+5Ch+var_3D], 0  | * | cmp [esp+5Ch+var_3E], 0 ",gcc,1
jz short loc_40CA55  | * | jz short loc_40CA55 ,gcc,1
"cmp [esp+5Ch+var_3E], 0  | * | mov eax, [esp+5Ch+flOldProtect] ",gcc,1
"jz short loc_40CA55  | * | mov [esp+5Ch+lpflOldProtect], ebp  ",gcc,1
"mov eax, [esp+5Ch+flOldProtect]  | * | mov [esp+5Ch+dwLength], eax  ",gcc,1
"mov [esp+5Ch+lpflOldProtect], ebp   | * | mov eax, [esp+5Ch+Buffer.RegionSize] ",gcc,1
"mov [esp+5Ch+dwLength], eax   | * | mov [esp+5Ch+lpBuffer], eax  ",gcc,1
"mov eax, [esp+5Ch+Buffer.RegionSize]  | * | mov eax, [esp+5Ch+Buffer.BaseAddress] ",gcc,1
call _VirtualProtect@16   | * | jmp loc_40CA55 ,gcc,1
"sub esp, 10h  | * | loc_40CAF6:  ",gcc,1
"jmp loc_40CA55  | * | mov [esp+5Ch+dwLength], ebx ",gcc,1
"loc_40CAF6:   | * | mov [esp+5Ch+lpBuffer], 1Ch  ",gcc,1
"mov [esp+5Ch+dwLength], ebx  | * | mov [esp+5Ch+lpAddress], offset aVirtualqueryFa  ",gcc,1
"mov [esp+5Ch+lpBuffer], 1Ch   | * | call ___report_error ",gcc,1
"mov [esp+5Ch+lpAddress], offset aVirtualqueryFa   | * | ___write_memory_part_0 endp ",gcc,1
call ___report_error  | * | align 10h ,gcc,2
___write_memory_part_0 endp  | * | public __pei386_runtime_relocator ,gcc,1
align 10h  | * | __pei386_runtime_relocator proc near  ,gcc,1
var_2C = dword ptr -2Ch  | * | var_14 = dword ptr -14h ,data,1
var_28 = byte ptr -28h  | * | var_10 = dword ptr -10h ,data,1
var_14 = dword ptr -14h  | * | var_C = dword ptr -0Ch ,data,1
"mov eax, ds:_was_init_31048  | * | jz short loc_40CB20 ",gcc,1
"test eax, eax  | * | locret_40CB19:  ",gcc,1
jz short loc_40CB20  | * | retn ,gcc,1
locret_40CB19:   | * | align 10h ,gcc,1
retn  | * | loc_40CB20:  ,gcc,1
"align 10h  | * | mov eax, offset __rt_psrelocs_end ",gcc,1
"loc_40CB20:   | * | sub eax, offset __rt_psrelocs_end ",gcc,1
"mov eax, offset __rt_psrelocs_end  | * | cmp eax, 7 ",gcc,1
"sub eax, offset __rt_psrelocs_end  | * | mov ds:_was_init_31048, 1 ",gcc,1
"cmp eax, 7  | * | jle short locret_40CB19 ",gcc,1
"mov ds:_was_init_31048, 1  | * | sub esp, 2Ch ",gcc,1
"jle short locret_40CB19  | * | cmp eax, 0Bh ",gcc,1
"sub esp, 2Ch  | * | mov [esp+2Ch+var_C], ebx ",gcc,1
"cmp eax, 0Bh  | * | mov [esp+2Ch+var_8], esi ",gcc,1
"mov [esp+2Ch+var_C], ebx  | * | mov [esp+2Ch+var_4], edi ",gcc,1
"mov [esp+2Ch+var_8], esi  | * | jle loc_40CC30 ",gcc,1
"mov [esp+2Ch+var_4], edi  | * | mov esi, ds:__rt_psrelocs_end ",gcc,1
"jle loc_40CC30  | * | test esi, esi ",gcc,1
"mov esi, ds:__rt_psrelocs_end  | * | jnz loc_40CBE4 ",gcc,1
"test esi, esi  | * | mov ebx, ds:dword_4165C4 ",gcc,1
"jnz loc_40CBE4  | * | test ebx, ebx ",gcc,1
"mov ebx, ds:dword_4165C4  | * | jnz short loc_40CBE4 ",gcc,1
"test ebx, ebx  | * | mov ecx, ds:dword_4165C8 ",gcc,1
"jnz short loc_40CBE4  | * | mov ebx, offset unk_4165CC ",gcc,1
"mov ecx, ds:dword_4165C8  | * | test ecx, ecx ",gcc,1
"mov ebx, offset unk_4165CC  | * | jz loc_40CC35 ",gcc,1
"test ecx, ecx  | * | mov ebx, offset __rt_psrelocs_end ",gcc,1
jz loc_40CC35  | * | loc_40CB81:  ,gcc,1
"mov ebx, offset __rt_psrelocs_end  | * | mov eax, [ebx+8] ",gcc,1
"loc_40CB81:   | * | cmp eax, 1 ",gcc,1
"mov eax, [ebx+8]  | * | jnz loc_40CCD4 ",gcc,1
"cmp eax, 1  | * | loc_40CB8D:  ",gcc,1
"jnz loc_40CCD4  | * | add ebx, 0Ch ",gcc,1
"loc_40CB8D:   | * | cmp ebx, offset __rt_psrelocs_end ",gcc,1
"add ebx, 0Ch  | * | jnb loc_40CC1F ",gcc,1
"cmp ebx, offset __rt_psrelocs_end  | * | movzx edx, byte ptr [ebx+8] ",gcc,1
"jnb loc_40CC1F  | * | mov esi, [ebx+4] ",gcc,1
"movzx edx, byte ptr [ebx+8]  | * | mov ecx, [ebx] ",gcc,1
"mov esi, [ebx+4]  | * | cmp edx, 10h ",gcc,1
"mov ecx, [ebx]  | * | lea eax, [esi+400000h] ",gcc,1
"cmp edx, 10h  | * | mov edi, [ecx+400000h] ",gcc,1
"lea eax, [esi+400000h]  | * | jz loc_40CC48 ",gcc,1
"mov edi, [ecx+400000h]  | * | cmp edx, 20h  ",gcc,1
jz loc_40CC48  | * | jz loc_40CCB3 ,gcc,1
"cmp edx, 20h   | * | cmp edx, 8 ",gcc,1
jz loc_40CCB3  | * | jz loc_40CC80 ,gcc,1
"cmp edx, 8  | * | mov dword ptr [esp+2Ch+var_28], edx  ",gcc,1
"jz loc_40CC80  | * | mov [esp+2Ch+var_2C], offset aUnknownPseudoR  ",gcc,1
"mov dword ptr [esp+2Ch+var_28], edx   | * | mov [esp+2Ch+var_14], 0 ",gcc,1
"mov [esp+2Ch+var_2C], offset aUnknownPseudoR   | * | call ___report_error ",gcc,1
"mov [esp+2Ch+var_14], 0  | * | loc_40CBE4:  ",gcc,1
"call ___report_error  | * | mov ebx, offset __rt_psrelocs_end ",gcc,1
loc_40CBE4:   | * | loc_40CBE9:  ,gcc,1
"mov ebx, offset __rt_psrelocs_end  | * | cmp ebx, offset __rt_psrelocs_end ",gcc,1
loc_40CBE9:   | * | jnb short loc_40CC1F ,gcc,1
"cmp ebx, offset __rt_psrelocs_end  | * | loc_40CBF1:  ",gcc,1
"jnb short loc_40CC1F  | * | mov edx, [ebx+4] ",gcc,1
"loc_40CBF1:   | * | mov ecx, 4  ",gcc,1
"mov edx, [ebx+4]  | * | lea eax, [edx+400000h] ",gcc,1
"mov ecx, 4   | * | mov edx, [edx+400000h] ",gcc,1
"lea eax, [edx+400000h]  | * | add edx, [ebx] ",gcc,1
"mov edx, [edx+400000h]  | * | add ebx, 8 ",gcc,1
"add edx, [ebx]  | * | mov [esp+2Ch+var_10], edx ",gcc,1
"add ebx, 8  | * | lea edx, [esp+2Ch+var_10]  ",gcc,1
"mov [esp+2Ch+var_10], edx  | * | call ___write_memory_part_0 ",gcc,1
"lea edx, [esp+2Ch+var_10]   | * | cmp ebx, offset __rt_psrelocs_end ",gcc,1
call ___write_memory_part_0  | * | jb short loc_40CBF1 ,gcc,1
"cmp ebx, offset __rt_psrelocs_end  | * | loc_40CC1F:  ",gcc,1
"jb short loc_40CBF1  | * | mov ebx, [esp+2Ch+var_C] ",gcc,1
"loc_40CC1F:   | * | mov esi, [esp+2Ch+var_8] ",gcc,1
"mov ebx, [esp+2Ch+var_C]  | * | mov edi, [esp+2Ch+var_4] ",gcc,1
"mov esi, [esp+2Ch+var_8]  | * | add esp, 2Ch ",gcc,1
"mov edi, [esp+2Ch+var_4]  | * | retn ",gcc,1
"add esp, 2Ch  | * | align 10h ",gcc,2
retn  | * | loc_40CC30:  ,gcc,1
"align 10h  | * | mov ebx, offset __rt_psrelocs_end ",gcc,1
loc_40CC30:   | * | loc_40CC35:  ,gcc,1
"mov ebx, offset __rt_psrelocs_end  | * | mov edx, [ebx] ",gcc,1
"loc_40CC35:   | * | test edx, edx ",gcc,1
"mov edx, [ebx]  | * | jnz short loc_40CBE9 ",gcc,1
"test edx, edx  | * | mov eax, [ebx+4] ",gcc,1
"jnz short loc_40CBE9  | * | test eax, eax ",gcc,1
"mov eax, [ebx+4]  | * | jz loc_40CB81 ",gcc,1
"test eax, eax  | * | jmp short loc_40CBE9 ",gcc,1
jz loc_40CB81  | * | loc_40CC48:  ,gcc,1
"jmp short loc_40CBE9  | * | movzx esi, word ptr [esi+400000h] ",gcc,1
"loc_40CC48:   | * | test si, si ",gcc,1
"movzx esi, word ptr [esi+400000h]  | * | movzx edx, si ",gcc,1
"test si, si  | * | jns short loc_40CC5D ",gcc,1
"movzx edx, si  | * | or edx, 0FFFF0000h ",gcc,1
jns short loc_40CC5D  | * | loc_40CC5D:  ,gcc,1
"or edx, 0FFFF0000h  | * | sub edx, ecx ",gcc,1
"loc_40CC5D:   | * | mov ecx, 2  ",gcc,1
"sub edx, ecx  | * | sub edx, 400000h ",gcc,1
"mov ecx, 2   | * | add edx, edi ",gcc,1
"sub edx, 400000h  | * | mov [esp+2Ch+var_14], edx ",gcc,1
"add edx, edi  | * | lea edx, [esp+2Ch+var_14]  ",gcc,2
"mov [esp+2Ch+var_14], edx  | * | call ___write_memory_part_0 ",gcc,2
"lea edx, [esp+2Ch+var_14]   | * | jmp loc_40CB8D ",gcc,2
call ___write_memory_part_0  | * | align 10h ,gcc,1
jmp loc_40CB8D  | * | loc_40CC80:  ,gcc,1
"align 10h  | * | movzx edx, byte ptr [eax] ",gcc,1
"loc_40CC80:   | * | test dl, dl ",gcc,1
"movzx edx, byte ptr [eax]  | * | movzx esi, dl ",gcc,1
"test dl, dl  | * | jns short loc_40CC90 ",gcc,1
"movzx esi, dl  | * | or esi, 0FFFFFF00h ",gcc,1
jns short loc_40CC90  | * | loc_40CC90:  ,gcc,1
"or esi, 0FFFFFF00h  | * | mov edx, esi ",gcc,1
"loc_40CC90:   | * | sub edx, 400000h ",gcc,1
"mov edx, esi  | * | sub edx, ecx ",gcc,1
"sub edx, 400000h  | * | mov ecx, 1  ",gcc,1
"sub edx, ecx  | * | add edx, edi ",gcc,1
"mov ecx, 1   | * | mov [esp+2Ch+var_14], edx ",gcc,1
call ___write_memory_part_0  | * | loc_40CCB3:  ,gcc,1
"jmp loc_40CB8D  | * | add ecx, 400000h ",gcc,1
"loc_40CCB3:   | * | sub edi, ecx ",gcc,1
"add ecx, 400000h  | * | mov ecx, 4  ",gcc,1
"sub edi, ecx  | * | add edi, [eax] ",gcc,1
"mov ecx, 4   | * | lea edx, [esp+2Ch+var_14]  ",gcc,1
"add edi, [eax]  | * | mov [esp+2Ch+var_14], edi ",gcc,1
"lea edx, [esp+2Ch+var_14]   | * | call ___write_memory_part_0 ",gcc,1
"mov [esp+2Ch+var_14], edi  | * | jmp loc_40CB8D ",gcc,1
call ___write_memory_part_0  | * | loc_40CCD4:  ,gcc,1
"jmp loc_40CB8D  | * | mov dword ptr [esp+2Ch+var_28], eax  ",gcc,1
"loc_40CCD4:   | * | mov [esp+2Ch+var_2C], offset aUnknownPseudoR_0  ",gcc,1
"mov dword ptr [esp+2Ch+var_28], eax   | * | call ___report_error ",gcc,1
"mov [esp+2Ch+var_2C], offset aUnknownPseudoR_0   | * | __pei386_runtime_relocator endp ",gcc,1
__pei386_runtime_relocator endp  | * | public ___do_global_dtors ,gcc,1
align 10h  | * | ___do_global_dtors proc near  ,gcc,1
"public ___do_global_dtors  | * | mov eax, _p_1761 ",gcc,1
"___do_global_dtors proc near   | * | mov eax, [eax] ",gcc,1
"mov eax, _p_1761  | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | jz short locret_40CD1A ",gcc,1
"test eax, eax  | * | sub esp, 0Ch ",gcc,1
"jz short locret_40CD1A  | * | xchg ax, ax ",gcc,1
"sub esp, 0Ch  | * | loc_40CD00:  ",gcc,1
"xchg ax, ax  | * | call eax ",gcc,1
"loc_40CD00:   | * | mov eax, _p_1761 ",gcc,1
"call eax  | * | lea edx, [eax+4] ",gcc,1
"mov eax, _p_1761  | * | mov eax, [eax+4] ",gcc,1
"lea edx, [eax+4]  | * | mov _p_1761, edx ",gcc,1
"mov eax, [eax+4]  | * | test eax, eax ",gcc,1
"mov _p_1761, edx  | * | jnz short loc_40CD00 ",gcc,1
jnz short loc_40CD00  | * | locret_40CD1A:  ,gcc,1
"add esp, 0Ch  | * | rep retn ",gcc,1
locret_40CD1A:   | * | ___do_global_dtors endp ,gcc,1
rep retn  | * | align 10h ,gcc,1
___do_global_dtors endp  | * | public ___do_global_ctors ,gcc,1
align 10h  | * | ___do_global_ctors proc near  ,gcc,1
___do_global_ctors proc near   | * | push ebx ,gcc,1
"push ebx  | * | mov ebx, ds:___CTOR_LIST__ ",gcc,1
"sub esp, 18h  | * | cmp ebx, 0FFFFFFFFh ",gcc,1
"mov ebx, ds:___CTOR_LIST__  | * | jz short loc_40CD53 ",gcc,1
"cmp ebx, 0FFFFFFFFh  | * | loc_40CD2F:  ",gcc,1
"jz short loc_40CD53  | * | test ebx, ebx ",gcc,1
loc_40CD2F:   | * | jz short loc_40CD42 ,gcc,1
"test ebx, ebx  | * | loc_40CD33:  ",gcc,1
jz short loc_40CD42  | * | call ds:___CTOR_LIST__[ebx*4] ,gcc,1
"loc_40CD33:   | * | sub ebx, 1 ",gcc,1
"call ds:___CTOR_LIST__[ebx*4]  | * | lea esi, [esi+0] ",gcc,1
"sub ebx, 1  | * | jnz short loc_40CD33 ",gcc,1
"lea esi, [esi+0]  | * | loc_40CD42:  ",gcc,1
"jnz short loc_40CD33  | * | mov [esp+1Ch+var_1C], offset ___do_global_dtors  ",gcc,1
loc_40CD42:   | * | call _atexit ,gcc,1
"mov [esp+1Ch+var_1C], offset ___do_global_dtors   | * | add esp, 18h ",gcc,1
call _atexit  | * | pop ebx ,gcc,1
pop ebx  | * | loc_40CD53:  ,gcc,1
"retn  | * | xor ebx, ebx ",gcc,1
loc_40CD53:   | * | jmp short loc_40CD59 ,gcc,1
"xor ebx, ebx  | * | loc_40CD57:  ",gcc,1
"jmp short loc_40CD59  | * | mov ebx, eax ",gcc,1
loc_40CD57:   | * | loc_40CD59:  ,gcc,1
"mov ebx, eax  | * | lea eax, [ebx+1] ",gcc,1
"loc_40CD59:   | * | mov edx, ds:___CTOR_LIST__[eax*4] ",gcc,1
"lea eax, [ebx+1]  | * | test edx, edx ",gcc,1
"mov edx, ds:___CTOR_LIST__[eax*4]  | * | jnz short loc_40CD57 ",gcc,1
"test edx, edx  | * | jmp short loc_40CD2F ",gcc,1
jnz short loc_40CD57  | * | ___do_global_ctors endp ,gcc,1
jmp short loc_40CD2F  | * | align 10h ,gcc,1
___do_global_ctors endp  | * | public ___main ,gcc,1
align 10h  | * | ___main proc near  ,gcc,1
"public ___main  | * | mov ecx, ds:_initialized ",gcc,1
"___main proc near   | * | test ecx, ecx ",gcc,1
"mov ecx, ds:_initialized  | * | jz short loc_40CD80 ",gcc,1
"test ecx, ecx  | * | rep retn ",gcc,1
jz short loc_40CD80  | * | align 10h ,gcc,1
rep retn  | * | loc_40CD80:  ,gcc,1
"align 10h  | * | mov ds:_initialized, 1 ",gcc,1
loc_40CD80:   | * | jmp short ___do_global_ctors ,gcc,1
"mov ds:_initialized, 1  | * | ___main endp ",gcc,1
jmp short ___do_global_ctors  | * | align 10h ,gcc,1
___main endp  | * | ___mingwthr_run_key_dtors_part_0 proc near ,gcc,1
___mingwthr_run_key_dtors_part_0 proc near  | * | push esi ,gcc,1
"push ebx  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
"sub esp, 14h  | * | call _EnterCriticalSection@4  ",gcc,1
"mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs   | * | mov ebx, ds:_key_dtor_list ",gcc,1
"call _EnterCriticalSection@4   | * | sub esp, 4 ",gcc,2
"mov ebx, ds:_key_dtor_list  | * | test ebx, ebx ",gcc,1
"sub esp, 4  | * | jz short loc_40CDDB ",gcc,1
"test ebx, ebx  | * | xchg ax, ax ",gcc,2
jz short loc_40CDDB  | * | loc_40CDB0:  ,gcc,1
"xchg ax, ax  | * | mov eax, [ebx] ",gcc,1
"loc_40CDB0:   | * | mov [esp+1Ch+lpCriticalSection], eax  ",gcc,1
"mov eax, [ebx]  | * | call _TlsGetValue@4  ",gcc,1
"mov [esp+1Ch+lpCriticalSection], eax   | * | sub esp, 4 ",gcc,1
"call _TlsGetValue@4   | * | mov esi, eax ",gcc,5
"sub esp, 4  | * | call _GetLastError@0  ",gcc,1
call _GetLastError@0   | * | jnz short loc_40CDD4 ,gcc,1
"test eax, eax  | * | test esi, esi ",gcc,1
jnz short loc_40CDD4  | * | jz short loc_40CDD4 ,gcc,1
"test esi, esi  | * | mov eax, [ebx+4] ",gcc,1
"jz short loc_40CDD4  | * | mov [esp+1Ch+lpCriticalSection], esi ",gcc,1
"mov eax, [ebx+4]  | * | call eax ",gcc,1
"mov [esp+1Ch+lpCriticalSection], esi  | * | loc_40CDD4:  ",gcc,1
"call eax  | * | mov ebx, [ebx+8] ",gcc,1
"loc_40CDD4:   | * | test ebx, ebx ",gcc,1
"mov ebx, [ebx+8]  | * | jnz short loc_40CDB0 ",gcc,1
"test ebx, ebx  | * | loc_40CDDB:  ",gcc,1
"jnz short loc_40CDB0  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
loc_40CDDB:   | * | call _LeaveCriticalSection@4  ,gcc,1
"mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs   | * | sub esp, 4 ",gcc,4
"call _LeaveCriticalSection@4   | * | add esp, 14h ",gcc,1
"sub esp, 4  | * | pop ebx ",gcc,1
pop esi  | * | ___mingwthr_run_key_dtors_part_0 endp ,gcc,1
retn  | * | public ____w64_mingwthr_add_key_dtor ,gcc,1
___mingwthr_run_key_dtors_part_0 endp  | * | ____w64_mingwthr_add_key_dtor proc near  ,gcc,1
var_1C = dword ptr -1Ch  | * | var_8 = dword ptr -8 ,data,1
var_18 = dword ptr -18h  | * | var_4 = dword ptr -4 ,data,1
var_8 = dword ptr -8  | * | arg_0 = dword ptr 4 ,data,1
var_4 = dword ptr -4  | * | arg_4 = dword ptr 8 ,data,1
"sub esp, 1Ch  | * | mov [esp+1Ch+var_4], esi ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | xor esi, esi ",gcc,1
"mov [esp+1Ch+var_4], esi  | * | mov [esp+1Ch+var_8], ebx ",gcc,1
"xor esi, esi  | * | test eax, eax ",gcc,1
"mov [esp+1Ch+var_8], ebx  | * | jnz short loc_40CE14 ",gcc,1
"test eax, eax  | * | loc_40CE06:  ",gcc,1
"jnz short loc_40CE14  | * | mov eax, esi ",gcc,1
"loc_40CE06:   | * | mov ebx, [esp+1Ch+var_8] ",gcc,1
"mov eax, esi  | * | mov esi, [esp+1Ch+var_4] ",gcc,1
"mov ebx, [esp+1Ch+var_8]  | * | add esp, 1Ch ",gcc,2
"mov esi, [esp+1Ch+var_4]  | * | retn ",gcc,2
"add esp, 1Ch  | * | loc_40CE14:  ",gcc,1
"retn  | * | mov [esp+1Ch+var_18], 0Ch  ",gcc,1
"loc_40CE14:   | * | mov [esp+1Ch+var_1C], 1  ",gcc,1
"mov [esp+1Ch+var_18], 0Ch   | * | call _calloc ",gcc,1
"mov [esp+1Ch+var_1C], 1   | * | test eax, eax ",gcc,1
"call _calloc  | * | mov ebx, eax ",gcc,1
"test eax, eax  | * | jz short loc_40CE75 ",gcc,1
"mov ebx, eax  | * | mov eax, [esp+1Ch+arg_0] ",gcc,1
"jz short loc_40CE75  | * | mov [esp+1Ch+var_1C], offset ___mingwthr_cs  ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | mov [ebx], eax ",gcc,1
"mov [esp+1Ch+var_1C], offset ___mingwthr_cs   | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"mov [ebx], eax  | * | mov [ebx+4], eax ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | call _EnterCriticalSection@4  ",gcc,1
"mov [ebx+4], eax  | * | mov eax, ds:_key_dtor_list ",gcc,1
"call _EnterCriticalSection@4   | * | mov ds:_key_dtor_list, ebx ",gcc,1
"mov eax, ds:_key_dtor_list  | * | mov [ebx+8], eax ",gcc,1
"mov ds:_key_dtor_list, ebx  | * | sub esp, 4 ",gcc,1
"mov [ebx+8], eax  | * | mov [esp+1Ch+var_1C], offset ___mingwthr_cs  ",gcc,1
"sub esp, 4  | * | call _LeaveCriticalSection@4  ",gcc,1
"mov [esp+1Ch+var_1C], offset ___mingwthr_cs   | * | mov eax, esi ",gcc,1
"call _LeaveCriticalSection@4   | * | sub esp, 4 ",gcc,1
"mov eax, esi  | * | mov ebx, [esp+1Ch+var_8] ",gcc,1
"sub esp, 4  | * | mov esi, [esp+1Ch+var_4] ",gcc,1
"add esp, 1Ch  | * | loc_40CE75:  ",gcc,1
"retn  | * | mov esi, 0FFFFFFFFh ",gcc,1
loc_40CE75:   | * | jmp short loc_40CE06 ,gcc,1
"mov esi, 0FFFFFFFFh  | * | ____w64_mingwthr_add_key_dtor endp ",gcc,1
jmp short loc_40CE06  | * | align 10h ,gcc,1
____w64_mingwthr_add_key_dtor endp  | * | public ____w64_mingwthr_remove_key_dtor ,gcc,1
align 10h  | * | ____w64_mingwthr_remove_key_dtor proc near ,gcc,1
"push ebx  | * | mov eax, ds:___mingwthr_cs_init ",gcc,1
"sub esp, 18h  | * | mov ebx, [esp+1Ch+arg_0] ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | test eax, eax ",gcc,1
"mov ebx, [esp+1Ch+arg_0]  | * | jnz short loc_40CE98 ",gcc,1
"test eax, eax  | * | add esp, 18h ",gcc,3
"jnz short loc_40CE98  | * | xor eax, eax ",gcc,1
"add esp, 18h  | * | pop ebx ",gcc,2
pop ebx  | * | loc_40CE98:  ,gcc,1
"retn  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
loc_40CE98:   | * | call _EnterCriticalSection@4  ,gcc,1
"mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs   | * | mov edx, ds:_key_dtor_list ",gcc,1
"mov edx, ds:_key_dtor_list  | * | test edx, edx ",gcc,1
"sub esp, 4  | * | jz short loc_40CECF ",gcc,1
"test edx, edx  | * | mov eax, [edx] ",gcc,1
"jz short loc_40CECF  | * | cmp eax, ebx ",gcc,1
"mov eax, [edx]  | * | jnz short loc_40CEC8 ",gcc,1
"cmp eax, ebx  | * | jmp short loc_40CF04 ",gcc,1
jnz short loc_40CEC8  | * | align 10h ,gcc,1
jmp short loc_40CF04  | * | loc_40CEC0:  ,gcc,1
"align 10h  | * | mov ecx, [eax] ",gcc,1
"loc_40CEC0:   | * | cmp ecx, ebx ",gcc,1
"mov ecx, [eax]  | * | jz short loc_40CEE5 ",gcc,1
"cmp ecx, ebx  | * | mov edx, eax ",gcc,1
jz short loc_40CEE5  | * | loc_40CEC8:  ,gcc,1
"mov edx, eax  | * | mov eax, [edx+8] ",gcc,1
"loc_40CEC8:   | * | test eax, eax ",gcc,1
"mov eax, [edx+8]  | * | jnz short loc_40CEC0 ",gcc,1
"test eax, eax  | * | loc_40CECF:  ",gcc,1
"jnz short loc_40CEC0  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
loc_40CECF:   | * | call _LeaveCriticalSection@4  ,gcc,1
call _LeaveCriticalSection@4   | * | loc_40CEDE:  ,gcc,1
"sub esp, 4  | * | add esp, 18h ",gcc,1
"loc_40CEDE:   | * | xor eax, eax ",gcc,1
pop ebx  | * | loc_40CEE5:  ,gcc,1
"retn  | * | mov ecx, [eax+8] ",gcc,1
"loc_40CEE5:   | * | mov [edx+8], ecx ",gcc,1
"mov ecx, [eax+8]  | * | loc_40CEEB:  ",gcc,1
"mov [edx+8], ecx  | * | mov [esp+1Ch+lpCriticalSection], eax  ",gcc,1
loc_40CEEB:   | * | call _free ,gcc,1
"mov [esp+1Ch+lpCriticalSection], eax   | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
call _free  | * | call _LeaveCriticalSection@4  ,gcc,1
call _LeaveCriticalSection@4   | * | jmp short loc_40CEDE ,gcc,1
"sub esp, 4  | * | loc_40CF04:  ",gcc,1
"jmp short loc_40CEDE  | * | mov eax, [edx+8] ",gcc,1
"loc_40CF04:   | * | mov ds:_key_dtor_list, eax ",gcc,1
"mov eax, [edx+8]  | * | mov eax, edx ",gcc,1
"mov ds:_key_dtor_list, eax  | * | jmp short loc_40CEEB ",gcc,1
"mov eax, edx  | * | ____w64_mingwthr_remove_key_dtor endp ",gcc,1
jmp short loc_40CEEB  | * | public ___mingw_TLScallback ,gcc,1
____w64_mingwthr_remove_key_dtor endp  | * | ___mingw_TLScallback proc near  ,gcc,1
"sub esp, 1Ch  | * | cmp eax, 1 ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | jz short loc_40CF60 ",gcc,1
"cmp eax, 1  | * | jb short loc_40CF30 ",gcc,1
"jz short loc_40CF60  | * | cmp eax, 3 ",gcc,1
jb short loc_40CF30  | * | jz short loc_40CF80 ,gcc,1
"cmp eax, 3  | * | loc_40CF23:  ",gcc,1
"jz short loc_40CF80  | * | mov eax, 1 ",gcc,1
"loc_40CF23:   | * | add esp, 1Ch ",gcc,1
"mov eax, 1  | * | retn ",gcc,2
retn  | * | loc_40CF30:  ,gcc,1
"align 10h  | * | mov eax, ds:___mingwthr_cs_init ",gcc,3
"loc_40CF30:   | * | test eax, eax ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | jnz short loc_40CFA1 ",gcc,1
"test eax, eax  | * | loc_40CF39:  ",gcc,1
"jnz short loc_40CFA1  | * | mov eax, ds:___mingwthr_cs_init ",gcc,1
"loc_40CF39:   | * | cmp eax, 1 ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | jnz short loc_40CF23 ",gcc,1
"cmp eax, 1  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
"jnz short loc_40CF23  | * | mov ds:___mingwthr_cs_init, 0 ",gcc,1
"mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs   | * | call _DeleteCriticalSection@4  ",gcc,1
"mov ds:___mingwthr_cs_init, 0  | * | sub esp, 4 ",gcc,1
call _DeleteCriticalSection@4   | * | jmp short loc_40CF23 ,gcc,1
"sub esp, 4  | * | align 10h ",gcc,1
jmp short loc_40CF23  | * | loc_40CF60:  ,gcc,1
"loc_40CF60:   | * | test eax, eax ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | jz short loc_40CF90 ",gcc,1
"test eax, eax  | * | loc_40CF69:  ",gcc,1
"jz short loc_40CF90  | * | mov ds:___mingwthr_cs_init, 1 ",gcc,1
"loc_40CF69:   | * | mov eax, 1 ",gcc,1
"mov ds:___mingwthr_cs_init, 1  | * | add esp, 1Ch ",gcc,1
retn  | * | loc_40CF80:  ,gcc,1
"loc_40CF80:   | * | test eax, eax ",gcc,1
"mov eax, ds:___mingwthr_cs_init  | * | jz short loc_40CF23 ",gcc,1
"test eax, eax  | * | call ___mingwthr_run_key_dtors_part_0 ",gcc,1
jz short loc_40CF23  | * | jmp short loc_40CF23 ,gcc,1
call ___mingwthr_run_key_dtors_part_0  | * | loc_40CF90:  ,gcc,1
"jmp short loc_40CF23  | * | mov [esp+1Ch+lpCriticalSection], offset ___mingwthr_cs  ",gcc,1
loc_40CF90:   | * | call _InitializeCriticalSection@4  ,gcc,1
call _InitializeCriticalSection@4   | * | jmp short loc_40CF69 ,gcc,1
"sub esp, 4  | * | loc_40CFA1:  ",gcc,1
jmp short loc_40CF69  | * | call ___mingwthr_run_key_dtors_part_0 ,gcc,1
loc_40CFA1:   | * | jmp short loc_40CF39 ,gcc,1
call ___mingwthr_run_key_dtors_part_0  | * | ___mingw_TLScallback endp ,gcc,1
jmp short loc_40CF39  | * | align 10h ,gcc,1
___mingw_TLScallback endp  | * | public ___shmem_init_use_fc_key ,gcc,1
align 10h  | * | ___shmem_init_use_fc_key proc near  ,gcc,1
"___shmem_init_use_fc_key proc near   | * | mov eax, [esp+mem] ",gcc,1
"mov eax, [esp+mem]  | * | retn ",gcc,1
"mov dword ptr [eax], 0FFFFFFFFh  | * | ___shmem_init_use_fc_key endp ",gcc,1
___shmem_init_use_fc_key endp  | * | public ___shmem_init_sjlj_once ,gcc,1
align 4  | * | ___shmem_init_sjlj_once proc near  ,gcc,1
"___shmem_init_sjlj_once proc near   | * | mov eax, [esp+mem] ",gcc,1
"mov eax, [esp+mem]  | * | mov dword ptr [eax+4], 0FFFFFFFFh ",gcc,1
"mov dword ptr [eax+4], 0FFFFFFFFh  | * | ___shmem_init_sjlj_once endp ",gcc,1
___shmem_init_sjlj_once endp  | * | __Unwind_RaiseException_Phase2 proc near ,gcc,1
var_20 = dword ptr -20h  | * | var_18 = dword ptr -18h ,data,1
var_1C = dword ptr -1Ch  | * | exc = eax  ,data,1
var_18 = dword ptr -18h  | * | context = edx  ,data,1
"push ebx  | * | mov edi, exc ",gcc,1
"sub esp, 20h  | * | mov esi, context ",gcc,1
"mov edi, exc  | * | mov ecx, [context] ",gcc,1
"mov esi, context  | * | jmp short loc_40D033 ",gcc,1
"align 10h  | * | mov eax, [ecx+18h] ",gcc,1
"mov eax, [ecx+18h]  | * | xor edx, edx ",gcc,1
fs_0 = eax   | * | code = edx  ,data,1
"xor edx, edx  | * | xor ebx, ebx ",gcc,1
"xor ebx, ebx  | * | setz bl ",gcc,2
"cmp ecx, [exc+10h]  | * | shl ebx, 2 ",gcc,2
"shl ebx, 2  | * | test code, code ",gcc,2
"test code, code  | * | loc_40CFF4:  ",gcc,1
"jnz short loc_40D050  | * | test fs_0, fs_0 ",gcc,1
loc_40CFF4:   | * | jz short loc_40D029 ,gcc,1
"test fs_0, fs_0  | * | mov [esp+2Ch+var_18], context ",gcc,1
"jz short loc_40D029  | * | mov [esp+2Ch+var_1C], exc ",gcc,1
"mov [esp+2Ch+var_18], context  | * | mov code, [exc] ",gcc,1
"mov [esp+2Ch+var_1C], exc  | * | mov ecx, [exc+4] ",gcc,1
"mov code, [exc]  | * | mov [esp+2Ch+var_24], edx ",gcc,1
"mov ecx, [exc+4]  | * | mov [esp+2Ch+var_20], ecx ",gcc,1
"mov [esp+2Ch+var_24], edx  | * | mov edx, match_handler ",gcc,1
"mov [esp+2Ch+var_20], ecx  | * | or edx, 2 ",gcc,1
"mov edx, match_handler  | * | mov [esp+2Ch+var_28], edx ",gcc,1
"or edx, 2  | * | mov [esp+2Ch+var_2C], 1 ",gcc,1
"mov [esp+2Ch+var_28], edx  | * | call fs_0 ",gcc,1
"call fs_0  | * | cmp code, 7 ",gcc,2
"cmp code, 7  | * | cmp code, 8 ",gcc,2
jz short loc_40D055  | * | jnz short loc_40D050 ,gcc,1
"cmp code, 8  | * | loc_40D029:  ",gcc,1
"jnz short loc_40D050  | * | test match_handler, match_handler ",gcc,1
loc_40D029:   | * | jnz short loc_40D05C ,gcc,1
"test match_handler, match_handler  | * | mov eax, [context] ",gcc,1
"jnz short loc_40D05C  | * | mov ecx, [eax] ",gcc,1
"mov eax, [context]  | * | mov [context], ecx ",gcc,1
"mov ecx, [eax]  | * | loc_40D033:  ",gcc,1
"mov [context], ecx  | * | test ecx, ecx ",gcc,1
loc_40D033:   | * | jnz short loc_40CFE0 ,gcc,1
"test ecx, ecx  | * | xor eax, eax ",gcc,1
"jnz short loc_40CFE0  | * | mov edx, 5 ",gcc,1
"test code, code  | * | lea context, [context+0] ",gcc,1
jz short loc_40CFF4  | * | loc_40D050:  ,gcc,1
"lea context, [context+0]  | * | mov eax, 2 ",gcc,1
loc_40D050:   | * | loc_40D055:  ,gcc,1
"mov eax, 2  | * | add esp, 20h ",gcc,1
loc_40D055:   | * | pop match_handler ,gcc,1
"add esp, 20h  | * | pop context ",gcc,1
pop match_handler  | * | pop exc ,gcc,1
pop context  | * | retn ,gcc,1
pop exc  | * | loc_40D05C:  ,gcc,1
exc = edi   | * | match_handler = ebx  ,data,1
call _abort  | * | align 4 ,gcc,1
__Unwind_RaiseException_Phase2 endp  | * | public ___shmem_grabber_fc_static ,gcc,1
align 4  | * | ___shmem_grabber_fc_static proc near  ,gcc,1
"mov [esp+1Ch+initfunc], 0   | * | mov [esp+1Ch+name], offset aFcStatic  ",gcc,1
"mov [esp+1Ch+name], offset aFcStatic   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | ___shmem_grabber_fc_static endp ",gcc,1
___shmem_grabber_fc_static endp  | * | public ___shmem_grabber_fc_key ,gcc,1
align 4  | * | ___shmem_grabber_fc_key proc near  ,gcc,1
"mov [esp+1Ch+initfunc], 0   | * | mov [esp+1Ch+name], offset aFcKey  ",gcc,1
"mov [esp+1Ch+name], offset aFcKey   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | ___shmem_grabber_fc_key endp ",gcc,1
___shmem_grabber_fc_key endp  | * | __Unwind_SjLj_SetContext_part_2 proc near ,gcc,1
dwTlsIndex = dword ptr -1Ch  | * | fc = eax  ,data,1
"push ebx  | * | mov ebx, fc ",gcc,1
"sub esp, 18h  | * | mov fc, ds:___shmem_ptr_fc_key ",gcc,1
"mov fc, ds:___shmem_ptr_fc_key  | * | test eax, eax ",gcc,1
"test eax, eax  | * | loc_40D0BB:  ",gcc,1
"jz short loc_40D0E4  | * | mov [esp+1Ch+lpTlsValue], fc  ",gcc,1
"loc_40D0BB:   | * | mov eax, [eax] ",gcc,1
"mov [esp+1Ch+lpTlsValue], fc   | * | mov [esp+1Ch+dwTlsIndex], eax  ",gcc,1
"mov eax, [eax]  | * | call _TlsSetValue@8  ",gcc,2
"mov [esp+1Ch+dwTlsIndex], eax   | * | sub esp, 8 ",gcc,3
"call _TlsSetValue@8   | * | test eax, eax ",gcc,3
"sub esp, 8  | * | jz short loc_40D0D8 ",gcc,1
jz short loc_40D0D8  | * | pop fc ,gcc,1
"align 4  | * | add esp, 18h ",gcc,1
loc_40D0D8:   | * | pop fc ,gcc,1
"add esp, 18h  | * | jmp _GetLastError@0  ",gcc,1
jmp _GetLastError@0   | * | align 4 ,gcc,1
align 4  | * | call ___shmem_grabber_fc_key ,gcc,5
"loc_40D0E4:   | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
call ___shmem_grabber_fc_key  | * | jmp short loc_40D0BB ,gcc,1
"mov ds:___shmem_ptr_fc_key, eax  | * | __Unwind_SjLj_SetContext_part_2 endp ",gcc,1
jmp short loc_40D0BB  | * | public ___shmem_grabber_use_fc_key ,gcc,1
__Unwind_SjLj_SetContext_part_2 endp  | * | ___shmem_grabber_use_fc_key proc near  ,gcc,1
"mov [esp+1Ch+initfunc], offset ___shmem_init_use_fc_key   | * | mov [esp+1Ch+name], offset aUseFcKey  ",gcc,1
"mov [esp+1Ch+name], offset aUseFcKey   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | ___shmem_grabber_use_fc_key endp ",gcc,1
___shmem_grabber_use_fc_key endp  | * | _fc_key_init proc near  ,gcc,1
"push ebx  | * | mov ebx, ds:___shmem_ptr_use_fc_key ",gcc,1
"sub esp, 14h  | * | test ebx, ebx ",gcc,1
"mov ebx, ds:___shmem_ptr_use_fc_key  | * | jz short loc_40D184 ",gcc,1
"test ebx, ebx  | * | loc_40D123:  ",gcc,1
"jz short loc_40D184  | * | mov esi, ds:___shmem_ptr_fc_key ",gcc,1
"loc_40D123:   | * | test esi, esi ",gcc,1
"mov esi, ds:___shmem_ptr_fc_key  | * | jz short loc_40D174 ",gcc,1
"test esi, esi  | * | loc_40D12D:  ",gcc,1
jz short loc_40D174  | * | call _TlsAlloc@0  ,gcc,1
"loc_40D12D:   | * | cmp eax, 0FFFFFFFFh ",gcc,1
call _TlsAlloc@0   | * | jz short loc_40D15C ,gcc,1
"cmp eax, 0FFFFFFFFh  | * | mov [esi], eax ",gcc,1
"jz short loc_40D15C  | * | mov [esp+1Ch+var_18], 0 ",gcc,1
"mov [esi], eax  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov [esp+1Ch+var_18], 0  | * | call ___mingwthr_key_dtor ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | test eax, eax ",gcc,1
call ___mingwthr_key_dtor  | * | setz al ,gcc,1
"test eax, eax  | * | movzx eax, al ",gcc,4
"setz al  | * | mov [ebx], eax ",gcc,2
"movzx eax, al  | * | add esp, 14h ",gcc,2
"mov [ebx], eax  | * | pop ebx ",gcc,26
retn  | * | loc_40D15C:  ,gcc,1
align 4  | * | call _GetLastError@0  ,gcc,1
"loc_40D15C:   | * | test eax, eax ",gcc,1
call _GetLastError@0   | * | setz al ,gcc,1
retn  | * | loc_40D174:  ,gcc,1
"loc_40D174:   | * | mov esi, eax ",gcc,1
"call ___shmem_grabber_fc_key  | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
"mov esi, eax  | * | jmp short loc_40D12D ",gcc,1
"mov ds:___shmem_ptr_fc_key, eax  | * | align 4 ",gcc,1
jmp short loc_40D12D  | * | loc_40D184:  ,gcc,1
align 4  | * | call ___shmem_grabber_use_fc_key ,gcc,8
"loc_40D184:   | * | mov ebx, eax ",gcc,1
"call ___shmem_grabber_use_fc_key  | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
"mov ebx, eax  | * | jmp short loc_40D123 ",gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | _fc_key_init endp ",gcc,1
jmp short loc_40D123  | * | align 4 ,gcc,1
_fc_key_init endp  | * | public ___shmem_grabber_sjlj_once ,gcc,1
align 4  | * | ___shmem_grabber_sjlj_once proc near  ,gcc,1
"mov [esp+1Ch+initfunc], offset ___shmem_init_sjlj_once   | * | mov [esp+1Ch+name], offset aSjljOnce  ",gcc,1
"mov [esp+1Ch+name], offset aSjljOnce   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | ___shmem_grabber_sjlj_once endp ",gcc,1
___shmem_grabber_sjlj_once endp  | * | _fc_key_init_once proc near  ,gcc,1
_fc_key_init_once proc near   | * | push ebx ,gcc,1
"push ebx  | * | mov ebx, ds:___shmem_ptr_sjlj_once ",gcc,1
"mov ebx, ds:___shmem_ptr_sjlj_once  | * | jz short loc_40D21C ",gcc,1
"test ebx, ebx  | * | cmp ds:__CRT_MT, 0 ",gcc,1
jz short loc_40D21C  | * | jz short loc_40D235 ,gcc,1
"cmp ds:__CRT_MT, 0  | * | nop ",gcc,1
jz short loc_40D235  | * | loc_40D1D0:  ,gcc,1
"nop  | * | mov ecx, [ebx] ",gcc,1
"loc_40D1D0:   | * | test ecx, ecx ",gcc,1
"mov ecx, [ebx]  | * | jz short loc_40D1F0 ",gcc,1
"test ecx, ecx  | * | loc_40D1D6:  ",gcc,1
"jz short loc_40D1F0  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D1D6:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D264 ",gcc,1
"test eax, eax  | * | loc_40D1E3:  ",gcc,1
"jz loc_40D264  | * | mov eax, [eax] ",gcc,1
"loc_40D1E3:   | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | js short loc_40D235 ",gcc,1
js short loc_40D235  | * | pop ebx ,gcc,1
retn  | * | loc_40D1F0:  ,gcc,1
"align 10h  | * | lea eax, [ebx+4] ",gcc,1
"loc_40D1F0:   | * | mov [esp+1Ch+lpAddend], eax  ",gcc,1
"lea eax, [ebx+4]  | * | call _InterlockedIncrement@4  ",gcc,2
"mov [esp+1Ch+lpAddend], eax   | * | push edx ",gcc,1
"call _InterlockedIncrement@4   | * | test eax, eax ",gcc,4
push edx  | * | jnz short loc_40D211 ,gcc,1
"test eax, eax  | * | jmp short loc_40D249 ",gcc,1
jnz short loc_40D211  | * | align 4 ,gcc,1
jmp short loc_40D249  | * | loc_40D204:  ,gcc,1
"align 4  | * | mov [esp+1Ch+lpAddend], 0  ",gcc,2
loc_40D204:   | * | call _Sleep@4  ,gcc,1
"mov [esp+1Ch+lpAddend], 0   | * | push ecx ",gcc,1
call _Sleep@4   | * | loc_40D211:  ,gcc,1
"push ecx  | * | mov edx, [ebx] ",gcc,1
"loc_40D211:   | * | test edx, edx ",gcc,1
"mov edx, [ebx]  | * | jz short loc_40D204 ",gcc,1
"test edx, edx  | * | jmp short loc_40D1D6 ",gcc,1
jz short loc_40D204  | * | align 4 ,gcc,1
jmp short loc_40D1D6  | * | loc_40D21C:  ,gcc,1
align 4  | * | call ___shmem_grabber_sjlj_once ,gcc,1
"loc_40D21C:   | * | mov ebx, eax ",gcc,1
"call ___shmem_grabber_sjlj_once  | * | mov ds:___shmem_ptr_sjlj_once, eax ",gcc,1
"mov ebx, eax  | * | mov eax, ds:__CRT_MT ",gcc,2
"mov ds:___shmem_ptr_sjlj_once, eax  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jz short loc_40D235 ",gcc,1
"test eax, eax  | * | test ebx, ebx ",gcc,1
jz short loc_40D235  | * | jnz short loc_40D1D0 ,gcc,1
"test ebx, ebx  | * | loc_40D235:  ",gcc,1
"jnz short loc_40D1D0  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D235:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz short loc_40D258 ",gcc,1
"test eax, eax  | * | loc_40D23E:  ",gcc,1
"jz short loc_40D258  | * | mov dword ptr [eax], 0 ",gcc,1
"loc_40D23E:   | * | add esp, 18h ",gcc,1
"mov dword ptr [eax], 0  | * | pop ebx ",gcc,1
pop ebx  | * | loc_40D249:  ,gcc,1
retn  | * | call _fc_key_init ,gcc,1
"loc_40D249:   | * | mov dword ptr [ebx], 1 ",gcc,1
call _fc_key_init  | * | jmp short loc_40D1D6 ,gcc,1
"mov dword ptr [ebx], 1  | * | align 4 ",gcc,2
jmp short loc_40D1D6  | * | loc_40D258:  ,gcc,1
"loc_40D258:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp short loc_40D23E ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D264:  ",gcc,1
jmp short loc_40D23E  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40D264:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D1E3 ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | _fc_key_init_once endp ",gcc,1
jmp loc_40D1E3  | * | align 4 ,gcc,1
_fc_key_init_once endp  | * | _uw_install_context_isra_3 proc near  ,gcc,1
current = dword ptr 8  | * | target = eax  ,data,1
"mov ebp, esp  | * | push ebx ",gcc,3
"push esi  | * | mov ebx, target ",gcc,1
"push ebx  | * | mov esi, [target] ",gcc,1
"mov ebx, target  | * | mov target, ds:___shmem_ptr_use_fc_key ",gcc,1
"mov target, ds:___shmem_ptr_use_fc_key  | * | test eax, eax ",gcc,1
"test eax, eax  | * | loc_40D286:  ",gcc,1
"jz short loc_40D2D4  | * | mov eax, [eax] ",gcc,1
"loc_40D286:   | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | js short loc_40D2CD ",gcc,1
"test eax, eax  | * | loc_40D28C:  ",gcc,1
"js short loc_40D2CD  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D28C:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz short loc_40D2E0 ",gcc,1
"test eax, eax  | * | loc_40D295:  ",gcc,1
"jz short loc_40D2E0  | * | mov eax, [eax] ",gcc,1
"loc_40D295:   | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | jz short loc_40D2B2 ",gcc,1
"test eax, eax  | * | mov eax, esi  ",gcc,1
jz short loc_40D2B2  | * | call __Unwind_SjLj_SetContext_part_2 ,gcc,1
"mov eax, esi   | * | mov edx, [target] ",gcc,1
"call __Unwind_SjLj_SetContext_part_2  | * | lea eax, [edx+20h] ",gcc,1
"mov edx, [target]  | * | mov ecx, [eax+4] ",gcc,3
"lea eax, [edx+20h]  | * | mov ebp, [edx+20h] ",gcc,3
"mov ecx, [eax+4]  | * | mov esp, [eax+8] ",gcc,3
"mov ebp, [edx+20h]  | * | jmp ecx ",gcc,3
"mov esp, [eax+8]  | * | loc_40D2B2:  ",gcc,1
"jmp ecx  | * | mov eax, ds:___shmem_ptr_fc_static ",gcc,1
"loc_40D2B2:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_static  | * | jz short loc_40D2EC ",gcc,1
"test eax, eax  | * | mov [eax], esi ",gcc,1
"jz short loc_40D2EC  | * | mov edx, [target] ",gcc,1
"mov [eax], esi  | * | lea eax, [edx+20h] ",gcc,2
"mov esp, [eax+8]  | * | loc_40D2CD:  ",gcc,1
jmp ecx  | * | call _fc_key_init_once ,gcc,1
loc_40D2CD:   | * | jmp short loc_40D28C ,gcc,1
call _fc_key_init_once  | * | loc_40D2D4:  ,gcc,1
jmp short loc_40D28C  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40D2D4:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp short loc_40D286 ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D2E0:  ",gcc,1
jmp short loc_40D286  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40D2E0:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp short loc_40D295 ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D2EC:  ",gcc,1
jmp short loc_40D295  | * | call ___shmem_grabber_fc_static ,gcc,1
"loc_40D2EC:   | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
"call ___shmem_grabber_fc_static  | * | mov [eax], esi ",gcc,1
"mov ds:___shmem_ptr_fc_static, eax  | * | mov edx, [target] ",gcc,1
"mov esp, [eax+8]  | * | _uw_install_context_isra_3 endp ",gcc,1
jmp ecx  | * | public __Unwind_SjLj_Register ,gcc,1
_uw_install_context_isra_3 endp  | * | __Unwind_SjLj_Register proc near  ,gcc,1
dwTlsIndex = dword ptr -1Ch  | * | fc = dword ptr 4 ,data,1
"push ebx  | * | mov ebx, [esp+1Ch+fc] ",gcc,1
"sub esp, 10h  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"mov ebx, [esp+1Ch+fc]  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D3CC ",gcc,1
"test eax, eax  | * | loc_40D31F:  ",gcc,1
"jz loc_40D3CC  | * | mov edi, [eax] ",gcc,1
"loc_40D31F:   | * | test edi, edi ",gcc,1
"mov edi, [eax]  | * | js loc_40D3C0 ",gcc,1
"test edi, edi  | * | loc_40D329:  ",gcc,1
"js loc_40D3C0  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D329:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D3DC ",gcc,1
"test eax, eax  | * | loc_40D336:  ",gcc,1
"jz loc_40D3DC  | * | mov esi, [eax] ",gcc,1
"loc_40D336:   | * | test esi, esi ",gcc,1
"mov esi, [eax]  | * | jz short loc_40D390 ",gcc,1
"test esi, esi  | * | mov eax, ds:___shmem_ptr_fc_key ",gcc,3
"jz short loc_40D390  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_key  | * | jz loc_40D40C ",gcc,1
"test eax, eax  | * | loc_40D349:  ",gcc,1
"jz loc_40D40C  | * | mov edi, [eax] ",gcc,1
loc_40D349:   | * | call _GetLastError@0  ,gcc,1
"mov edi, [eax]  | * | mov esi, eax ",gcc,1
"call _GetLastError@0   | * | mov [esp+1Ch+dwTlsIndex], edi  ",gcc,1
"mov esi, eax  | * | call _TlsGetValue@4  ",gcc,1
"mov [esp+1Ch+dwTlsIndex], edi   | * | push edx ",gcc,1
"call _TlsGetValue@4   | * | mov edi, eax ",gcc,1
"push edx  | * | mov [esp+1Ch+dwTlsIndex], esi  ",gcc,1
"mov edi, eax  | * | call _SetLastError@4  ",gcc,1
"mov [esp+1Ch+dwTlsIndex], esi   | * | push ecx ",gcc,1
"call _SetLastError@4   | * | mov [ebx], edi ",gcc,1
"push ecx  | * | mov eax, ds:___shmem_ptr_fc_key ",gcc,1
"mov [ebx], edi  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_key  | * | jz short loc_40D3B4 ",gcc,1
"test eax, eax  | * | loc_40D371:  ",gcc,1
"jz short loc_40D3B4  | * | mov [esp+1Ch+lpTlsValue], ebx  ",gcc,1
"loc_40D371:   | * | mov eax, [eax] ",gcc,1
"mov [esp+1Ch+lpTlsValue], ebx   | * | mov [esp+1Ch+dwTlsIndex], eax  ",gcc,1
"sub esp, 8  | * | jz short loc_40D3A8 ",gcc,1
"test eax, eax  | * | add esp, 10h ",gcc,1
jz short loc_40D3A8  | * | pop ebx ,gcc,1
retn  | * | loc_40D390:  ,gcc,1
"align 10h  | * | mov eax, ds:___shmem_ptr_fc_static ",gcc,3
"loc_40D390:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_static  | * | jz short loc_40D3EC ",gcc,1
"jz short loc_40D3EC  | * | mov [ebx], edx ",gcc,1
"mov edx, [eax]  | * | loc_40D39D:  ",gcc,1
"mov [ebx], edx  | * | mov [eax], ebx ",gcc,1
loc_40D39D:   | * | loc_40D39F:  ,gcc,1
"mov [eax], ebx  | * | add esp, 10h ",gcc,1
loc_40D39F:   | * | pop ebx ,gcc,1
retn  | * | loc_40D3A8:  ,gcc,1
"align 4  | * | add esp, 10h ",gcc,1
loc_40D3A8:   | * | pop ebx ,gcc,1
pop esi  | * | jmp _GetLastError@0  ,gcc,1
jmp _GetLastError@0   | * | loc_40D3B4:  ,gcc,1
"loc_40D3B4:   | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
call ___shmem_grabber_fc_key  | * | jmp short loc_40D371 ,gcc,1
"mov ds:___shmem_ptr_fc_key, eax  | * | loc_40D3C0:  ",gcc,1
jmp short loc_40D371  | * | call _fc_key_init_once ,gcc,1
loc_40D3C0:   | * | jmp loc_40D329 ,gcc,1
call _fc_key_init_once  | * | align 4 ,gcc,3
jmp loc_40D329  | * | loc_40D3CC:  ,gcc,1
"loc_40D3CC:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D31F ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | align 4 ",gcc,6
jmp loc_40D31F  | * | loc_40D3DC:  ,gcc,1
"loc_40D3DC:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D336 ,gcc,1
jmp loc_40D336  | * | loc_40D3EC:  ,gcc,1
align 4  | * | call ___shmem_grabber_fc_static ,gcc,3
"loc_40D3EC:   | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
"call ___shmem_grabber_fc_static  | * | mov edx, [eax] ",gcc,1
"mov ds:___shmem_ptr_fc_static, eax  | * | mov [ebx], edx ",gcc,1
"mov edx, [eax]  | * | test eax, eax ",gcc,1
"mov [ebx], edx  | * | jnz short loc_40D39D ",gcc,1
"test eax, eax  | * | call ___shmem_grabber_fc_static ",gcc,1
"jnz short loc_40D39D  | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
"call ___shmem_grabber_fc_static  | * | mov [eax], ebx ",gcc,1
"mov ds:___shmem_ptr_fc_static, eax  | * | jmp short loc_40D39F ",gcc,1
"mov [eax], ebx  | * | loc_40D40C:  ",gcc,1
jmp short loc_40D39F  | * | call ___shmem_grabber_fc_key ,gcc,1
"loc_40D40C:   | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
call ___shmem_grabber_fc_key  | * | jmp loc_40D349 ,gcc,1
"mov ds:___shmem_ptr_fc_key, eax  | * | __Unwind_SjLj_Register endp ",gcc,1
jmp loc_40D349  | * | align 4 ,gcc,1
__Unwind_SjLj_Register endp  | * | public __Unwind_SjLj_Unregister ,gcc,1
align 4  | * | __Unwind_SjLj_Unregister proc near  ,gcc,1
__Unwind_SjLj_Unregister proc near   | * | push ebx ,gcc,1
"push ebx  | * | mov eax, [esp+0Ch+fc] ",gcc,1
"sub esp, 8  | * | mov ebx, [eax] ",gcc,1
"mov eax, [esp+0Ch+fc]  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"mov ebx, [eax]  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz short loc_40D468 ",gcc,1
"test eax, eax  | * | loc_40D42F:  ",gcc,1
"jz short loc_40D468  | * | mov eax, [eax] ",gcc,1
"loc_40D42F:   | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | js short loc_40D460 ",gcc,1
"test eax, eax  | * | loc_40D435:  ",gcc,1
"js short loc_40D460  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D435:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz short loc_40D474 ",gcc,1
"test eax, eax  | * | loc_40D43E:  ",gcc,1
"jz short loc_40D474  | * | mov eax, [eax] ",gcc,1
"loc_40D43E:   | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | jz short loc_40D450 ",gcc,1
"jz short loc_40D450  | * | add esp, 8 ",gcc,1
"add esp, 8  | * | jmp __Unwind_SjLj_SetContext_part_2 ",gcc,1
jmp __Unwind_SjLj_SetContext_part_2  | * | loc_40D450:  ,gcc,1
"loc_40D450:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_static  | * | jz short loc_40D480 ",gcc,1
"test eax, eax  | * | loc_40D459:  ",gcc,1
"jz short loc_40D480  | * | mov [eax], ebx ",gcc,1
"loc_40D459:   | * | add esp, 8 ",gcc,1
"mov [eax], ebx  | * | pop ebx ",gcc,1
"add esp, 8  | * | retn ",gcc,2
pop ebx  | * | loc_40D460:  ,gcc,1
retn  | * | call _fc_key_init_once ,gcc,2
loc_40D460:   | * | jmp short loc_40D435 ,gcc,1
jmp short loc_40D435  | * | loc_40D468:  ,gcc,1
"loc_40D468:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp short loc_40D42F ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D474:  ",gcc,1
jmp short loc_40D42F  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40D474:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp short loc_40D43E ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D480:  ",gcc,1
jmp short loc_40D43E  | * | call ___shmem_grabber_fc_static ,gcc,1
"loc_40D480:   | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
call ___shmem_grabber_fc_static  | * | jmp short loc_40D459 ,gcc,1
"mov ds:___shmem_ptr_fc_static, eax  | * | __Unwind_SjLj_Unregister endp ",gcc,1
jmp short loc_40D459  | * | __Unwind_ForcedUnwind_Phase2 proc near  ,gcc,1
lpfctx = dword ptr -4Ch  | * | var_44 = dword ptr -44h ,data,1
var_38 = dword ptr -38h  | * | stop = dword ptr -20h ,data,1
var_34 = dword ptr -34h  | * | exc = eax  ,data,1
stop = dword ptr -20h  | * | context = edx  ,data,1
"push esi  | * | sub esp, 3Ch ",gcc,2
"push ebx  | * | mov esi, exc ",gcc,1
"sub esp, 3Ch  | * | mov ebx, context ",gcc,1
"mov esi, exc  | * | mov context, [exc+0Ch] ",gcc,1
"mov context, [exc+0Ch]  | * | mov [esp+4Ch+stop], edx ",gcc,1
context = ebx   | * | stop_0 = edx  ,data,1
"mov [esp+4Ch+stop], edx  | * | mov ebp, [exc+10h] ",gcc,1
stop_0 = edx   | * | stop_argument = ebp  ,data,1
"mov ebp, [exc+10h]  | * | mov exc, [context] ",gcc,1
stop_argument = ebp   | * | exc = esi  ,data,1
"mov exc, [context]  | * | jmp loc_40D525 ",gcc,1
"jmp loc_40D525  | * | mov edi, [eax+18h] ",gcc,1
"mov edi, [eax+18h]  | * | mov [esp+4Ch+var_34], stop_argument ",gcc,1
"mov [esp+4Ch+var_34], stop_argument  | * | mov [esp+4Ch+var_3C], exc ",gcc,2
"mov [esp+4Ch+var_38], context  | * | mov eax, [exc] ",gcc,2
"mov [esp+4Ch+var_3C], exc  | * | mov edx, [exc+4] ",gcc,3
"mov eax, [exc]  | * | mov [esp+4Ch+var_44], eax ",gcc,2
"mov edx, [exc+4]  | * | mov [esp+4Ch+var_40], edx ",gcc,3
"mov [esp+4Ch+var_44], eax  | * | mov [esp+4Ch+var_48], 0Ah ",gcc,2
"mov [esp+4Ch+var_40], edx  | * | mov [esp+4Ch+lpfctx], 1 ",gcc,3
"mov [esp+4Ch+var_48], 0Ah  | * | mov edx, [esp+4Ch+stop] ",gcc,1
"mov [esp+4Ch+lpfctx], 1  | * | call edx ",gcc,2
"call edx  | * | test stop_code, stop_code ",gcc,2
"test stop_code, stop_code  | * | test fs_0, fs_0 ",gcc,1
jnz loc_40D56C  | * | jz short loc_40D515 ,gcc,1
"test fs_0, fs_0  | * | mov [esp+4Ch+var_38], context ",gcc,1
"jz short loc_40D515  | * | mov [esp+4Ch+var_3C], exc ",gcc,1
"mov [esp+4Ch+var_38], context  | * | mov stop_code, [exc] ",gcc,1
"mov stop_code, [exc]  | * | mov [esp+4Ch+var_44], eax ",gcc,1
"mov [esp+4Ch+var_48], 0Ah  | * | call fs_0 ",gcc,1
jz short loc_40D561  | * | jnz short loc_40D56C ,gcc,1
"cmp code, 8  | * | loc_40D515:  ",gcc,1
"jnz short loc_40D56C  | * | mov eax, [context] ",gcc,1
"loc_40D515:   | * | mov [esp+4Ch+lpfctx], eax  ",gcc,1
"mov eax, [context]  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+4Ch+lpfctx], eax   | * | mov eax, [context] ",gcc,1
"call __Unwind_SjLj_Unregister  | * | mov eax, [eax] ",gcc,1
"mov eax, [context]  | * | mov [context], eax ",gcc,1
"mov eax, [eax]  | * | loc_40D525:  ",gcc,1
"mov [context], eax  | * | test eax, eax ",gcc,1
loc_40D525:   | * | jnz loc_40D4A8 ,gcc,1
"test eax, eax  | * | mov [esp+4Ch+var_34], stop_argument ",gcc,1
"jnz loc_40D4A8  | * | mov [esp+4Ch+var_38], context ",gcc,1
"mov [esp+4Ch+var_44], eax  | * | mov [esp+4Ch+var_48], 1Ah ",gcc,1
"mov [esp+4Ch+var_48], 1Ah  | * | mov edx, [esp+4Ch+stop] ",gcc,1
"test stop_code, stop_code  | * | mov al, 5 ",gcc,1
jnz short loc_40D56C  | * | loc_40D561:  ,gcc,1
"mov al, 5  | * | add esp, 3Ch ",gcc,1
loc_40D561:   | * | pop context ,gcc,1
"add esp, 3Ch  | * | pop exc ",gcc,2
pop context  | * | pop edi ,gcc,2
pop exc  | * | pop stop_argument ,gcc,2
exc = esi   | * | stop_argument = ebp  ,data,1
"align 4  | * | mov eax, 2 ",gcc,1
"loc_40D56C:   | * | add esp, 3Ch ",gcc,1
"mov eax, 2  | * | pop context ",gcc,1
pop stop_argument  | * | __Unwind_ForcedUnwind_Phase2 endp ,gcc,1
__Unwind_ForcedUnwind_Phase2 endp  | * | public __Unwind_GetGR ,gcc,1
align 4  | * | __Unwind_GetGR proc near ,gcc,1
"mov eax, [esp+context]  | * | mov edx, [esp+index] ",gcc,1
"mov eax, [eax]  | * | mov eax, [eax+edx*4+8] ",gcc,1
"mov edx, [esp+index]  | * | retn ",gcc,2
"mov eax, [eax+edx*4+8]  | * | __Unwind_GetGR endp ",gcc,1
__Unwind_GetGR endp  | * | public __Unwind_GetCFA ,gcc,1
align 4  | * | __Unwind_GetCFA proc near ,gcc,1
"__Unwind_GetCFA proc near  | * | mov eax, [esp+context] ",gcc,1
"mov eax, [esp+context]  | * | test eax, eax ",gcc,2
"mov eax, [eax]  | * | jz short loc_40D59C ",gcc,1
"test eax, eax  | * | mov eax, [eax+28h] ",gcc,1
jz short loc_40D59C  | * | retn ,gcc,1
"mov eax, [eax+28h]  | * | align 4 ",gcc,1
retn  | * | loc_40D59C:  ,gcc,1
loc_40D59C:   | * | retn ,gcc,1
"xor eax, eax  | * | __Unwind_GetCFA endp ",gcc,1
__Unwind_GetCFA endp  | * | public __Unwind_SetGR ,gcc,1
align 10h  | * | __Unwind_SetGR proc near  ,gcc,1
context = dword ptr 4  | * | val = dword ptr 0Ch ,data,1
"mov eax, [esp+context]  | * | mov ecx, [esp+val] ",gcc,1
"mov eax, [eax]  | * | mov edx, [esp+index] ",gcc,1
"mov ecx, [esp+val]  | * | mov [eax+edx*4+8], ecx ",gcc,1
"mov [eax+edx*4+8], ecx  | * | __Unwind_SetGR endp ",gcc,1
__Unwind_SetGR endp  | * | public __Unwind_GetIP ,gcc,1
align 4  | * | __Unwind_GetIP proc near ,gcc,1
"__Unwind_GetIP proc near  | * | mov eax, [esp+context] ",gcc,1
"mov eax, [esp+context]  | * | mov eax, [eax+4] ",gcc,1
"mov eax, [eax]  | * | inc eax ",gcc,1
"mov eax, [eax+4]  | * | retn ",gcc,2
inc eax  | * | __Unwind_GetIP endp ,gcc,1
__Unwind_GetIP endp  | * | public __Unwind_GetIPInfo ,gcc,1
align 10h  | * | __Unwind_GetIPInfo proc near  ,gcc,1
"mov eax, [esp+ip_before_insn]  | * | mov eax, [esp+context] ",gcc,1
"mov dword ptr [eax], 0  | * | mov eax, [eax] ",gcc,1
"mov eax, [eax]  | * | jz short loc_40D5DC ",gcc,1
jz short loc_40D5DC  | * | inc eax ,gcc,1
inc eax  | * | align 4 ,gcc,1
retn  | * | loc_40D5DC:  ,gcc,1
loc_40D5DC:   | * | retn ,gcc,1
"xor eax, eax  | * | __Unwind_GetIPInfo endp ",gcc,1
__Unwind_GetIPInfo endp  | * | public __Unwind_SetIP ,gcc,1
align 10h  | * | __Unwind_SetIP proc near  ,gcc,1
"mov eax, [esp+context]  | * | mov edx, [esp+val] ",gcc,1
"mov eax, [eax]  | * | dec edx ",gcc,1
"mov edx, [esp+val]  | * | mov [eax+4], edx ",gcc,1
dec edx  | * | retn ,gcc,1
"mov [eax+4], edx  | * | __Unwind_SetIP endp ",gcc,1
__Unwind_SetIP endp  | * | public __Unwind_GetLanguageSpecificData ,gcc,1
align 10h  | * | __Unwind_GetLanguageSpecificData proc near ,gcc,1
"__Unwind_GetLanguageSpecificData proc near  | * | mov eax, [esp+context] ",gcc,1
"mov eax, [esp+context]  | * | mov eax, [eax+1Ch] ",gcc,1
"mov eax, [eax]  | * | retn ",gcc,1
"mov eax, [eax+1Ch]  | * | __Unwind_GetLanguageSpecificData endp ",gcc,1
__Unwind_GetLanguageSpecificData endp  | * | public __Unwind_GetRegionStart ,gcc,1
align 4  | * | __Unwind_GetRegionStart proc near  ,gcc,1
"__Unwind_GetRegionStart proc near   | * | xor eax, eax ",gcc,1
"xor eax, eax  | * | __Unwind_GetRegionStart endp ",gcc,1
__Unwind_GetRegionStart endp  | * | public __Unwind_FindEnclosingFunction ,gcc,1
align 10h  | * | __Unwind_FindEnclosingFunction proc near ,gcc,1
"__Unwind_FindEnclosingFunction proc near  | * | xor eax, eax ",gcc,1
"xor eax, eax  | * | __Unwind_FindEnclosingFunction endp ",gcc,1
__Unwind_FindEnclosingFunction endp  | * | public __Unwind_GetDataRelBase ,gcc,1
align 4  | * | __Unwind_GetDataRelBase proc near  ,gcc,1
"__Unwind_GetDataRelBase proc near   | * | xor eax, eax ",gcc,1
"xor eax, eax  | * | __Unwind_GetDataRelBase endp ",gcc,1
__Unwind_GetDataRelBase endp  | * | public __Unwind_GetTextRelBase ,gcc,1
align 4  | * | __Unwind_GetTextRelBase proc near  ,gcc,1
"__Unwind_GetTextRelBase proc near   | * | xor eax, eax ",gcc,1
"xor eax, eax  | * | __Unwind_GetTextRelBase endp ",gcc,1
__Unwind_GetTextRelBase endp  | * | public __Unwind_SjLj_RaiseException ,gcc,1
align 4  | * | __Unwind_SjLj_RaiseException proc near  ,gcc,1
dwTlsIndex = dword ptr -3Ch  | * | var_34 = dword ptr -34h ,data,1
target = dword ptr -38h  | * | var_30 = dword ptr -30h ,data,1
var_2C = dword ptr -2Ch  | * | cur_context = _Unwind_Context ptr -10h ,data,1
var_28 = dword ptr -28h  | * | exc = dword ptr 4 ,data,1
"push esi  | * | sub esp, 30h ",gcc,2
"push ebx  | * | mov edi, [esp+3Ch+exc] ",gcc,1
"sub esp, 30h  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"mov edi, [esp+3Ch+exc]  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D73D ",gcc,1
"test eax, eax  | * | loc_40D623:  ",gcc,1
"jz loc_40D73D  | * | mov esi, [eax] ",gcc,1
"loc_40D623:   | * | test esi, esi ",gcc,1
"mov esi, [eax]  | * | js loc_40D724 ",gcc,1
"test esi, esi  | * | loc_40D62D:  ",gcc,1
"js loc_40D724  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D62D:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D72E ",gcc,1
"test eax, eax  | * | loc_40D63A:  ",gcc,1
"jz loc_40D72E  | * | mov ebx, [eax] ",gcc,1
"loc_40D63A:   | * | test ebx, ebx ",gcc,1
"mov ebx, [eax]  | * | jz loc_40D6D0 ",gcc,1
"test ebx, ebx  | * | mov eax, ds:___shmem_ptr_fc_key ",gcc,2
"jz loc_40D6D0  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_key  | * | jz loc_40D708 ",gcc,1
"test eax, eax  | * | loc_40D651:  ",gcc,1
"jz loc_40D708  | * | mov esi, [eax] ",gcc,1
loc_40D651:   | * | call _GetLastError@0  ,gcc,1
"mov esi, [eax]  | * | mov ebx, eax ",gcc,1
"call _GetLastError@0   | * | mov [esp+3Ch+dwTlsIndex], esi  ",gcc,1
"mov ebx, eax  | * | call _TlsGetValue@4  ",gcc,1
"mov [esp+3Ch+dwTlsIndex], esi   | * | push edx ",gcc,1
"push edx  | * | mov [esp+3Ch+dwTlsIndex], ebx  ",gcc,1
"mov esi, eax  | * | call _SetLastError@4  ",gcc,4
"mov [esp+3Ch+dwTlsIndex], ebx   | * | push ecx ",gcc,1
call _SetLastError@4   | * | loc_40D66E:  ,gcc,1
"loc_40D66E:   | * | mov [esp+3Ch+cur_context.fc], this_context ",gcc,1
"mov [esp+3Ch+cur_context.fc], this_context  | * | jz short loc_40D6C1 ",gcc,1
"test this_context, this_context  | * | mov ecx, this_context ",gcc,1
"jz short loc_40D6C1  | * | lea ebx, [esp+3Ch+cur_context] ",gcc,1
"mov ecx, this_context  | * | loc_40D67C:  ",gcc,1
"lea ebx, [esp+3Ch+cur_context]  | * | mov eax, [ecx+18h] ",gcc,1
"mov eax, [ecx+18h]  | * | test fs_0, fs_0 ",gcc,1
"test fs_0, fs_0  | * | mov [esp+3Ch+var_28], ebx ",gcc,1
"jz short loc_40D6B3  | * | mov [esp+3Ch+var_2C], edi ",gcc,1
"mov [esp+3Ch+var_28], ebx  | * | mov edx, [edi] ",gcc,1
"mov [esp+3Ch+var_2C], edi  | * | mov ecx, [edi+4] ",gcc,1
"mov edx, [edi]  | * | mov [esp+3Ch+var_34], edx ",gcc,1
"mov ecx, [edi+4]  | * | mov [esp+3Ch+var_30], ecx ",gcc,1
"mov [esp+3Ch+var_34], edx  | * | mov [esp+3Ch+target], 1  ",gcc,1
"mov [esp+3Ch+var_30], ecx  | * | mov [esp+3Ch+dwTlsIndex], 1  ",gcc,1
"mov [esp+3Ch+target], 1   | * | call fs_0 ",gcc,1
"call fs_0  | * | cmp code, 6 ",gcc,1
"cmp code, 6  | * | cmp code, 8 ",gcc,1
jz short loc_40D6E0  | * | jnz short loc_40D718 ,gcc,1
"cmp code, 8  | * | loc_40D6B3:  ",gcc,1
"jnz short loc_40D718  | * | mov eax, [esp+3Ch+cur_context.fc] ",gcc,1
"loc_40D6B3:   | * | mov ecx, [eax] ",gcc,1
"mov eax, [esp+3Ch+cur_context.fc]  | * | mov [esp+3Ch+cur_context.fc], ecx ",gcc,1
"mov ecx, [eax]  | * | test ecx, ecx ",gcc,1
"mov [esp+3Ch+cur_context.fc], ecx  | * | jnz short loc_40D67C ",gcc,1
"test ecx, ecx  | * | loc_40D6C1:  ",gcc,1
"jnz short loc_40D67C  | * | mov eax, 5 ",gcc,1
loc_40D6C1:   | * | loc_40D6C6:  ,gcc,1
"mov eax, 5  | * | add esp, 30h ",gcc,1
loc_40D6C6:   | * | pop ebx ,gcc,1
"add esp, 30h  | * | pop this_context ",gcc,2
pop this_context  | * | retn ,gcc,3
retn  | * | loc_40D6D0:  ,gcc,1
"loc_40D6D0:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_static  | * | jz short loc_40D74C ",gcc,1
"test eax, eax  | * | mov esi, [eax] ",gcc,4
jz short loc_40D74C  | * | jmp short loc_40D66E ,gcc,1
"align 10h  | * | mov dword ptr [edi+0Ch], 0 ",gcc,1
"loc_40D6E0:   | * | mov code, [esp+3Ch+cur_context.fc] ",gcc,1
"mov dword ptr [edi+0Ch], 0  | * | mov [edi+10h], eax ",gcc,1
"mov code, [esp+3Ch+cur_context.fc]  | * | mov [esp+3Ch+cur_context.fc], this_context ",gcc,1
"mov [edi+10h], eax  | * | mov edx, ebx  ",gcc,1
"mov [esp+3Ch+cur_context.fc], this_context  | * | mov eax, edi  ",gcc,1
"mov edx, ebx   | * | call __Unwind_RaiseException_Phase2 ",gcc,1
"call __Unwind_RaiseException_Phase2  | * | cmp code, 7 ",gcc,1
"cmp code, 7  | * | mov code, ebx ",gcc,1
jnz short loc_40D6C6  | * | call _uw_install_context_isra_3 ,gcc,1
"mov code, ebx  | * | nop ",gcc,1
call _uw_install_context_isra_3  | * | loc_40D708:  ,gcc,1
nop  | * | call ___shmem_grabber_fc_key ,gcc,1
"loc_40D708:   | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
call ___shmem_grabber_fc_key  | * | jmp loc_40D651 ,gcc,1
"align 4  | * | mov code, 3 ",gcc,1
"loc_40D718:   | * | add esp, 30h ",gcc,1
"mov code, 3  | * | pop ebx ",gcc,1
pop edi  | * | loc_40D724:  ,gcc,1
loc_40D724:   | * | jmp loc_40D62D ,gcc,1
call _fc_key_init_once  | * | loc_40D72E:  ,gcc,1
jmp loc_40D62D  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40D72E:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D63A ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D73D:  ",gcc,1
jmp loc_40D63A  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40D73D:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D623 ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D74C:  ",gcc,1
jmp loc_40D623  | * | call ___shmem_grabber_fc_static ,gcc,1
"loc_40D74C:   | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
"call ___shmem_grabber_fc_static  | * | mov esi, [eax] ",gcc,4
"mov ds:___shmem_ptr_fc_static, eax  | * | jmp loc_40D66E ",gcc,1
"mov esi, [eax]  | * | __Unwind_SjLj_RaiseException endp ",gcc,1
jmp loc_40D66E  | * | align 10h ,gcc,1
__Unwind_SjLj_RaiseException endp  | * | public __Unwind_SjLj_ForcedUnwind ,gcc,1
align 10h  | * | __Unwind_SjLj_ForcedUnwind proc near ,gcc,1
dwTlsIndex = dword ptr -2Ch  | * | exc = dword ptr 4 ,data,2
cur_context = _Unwind_Context ptr -10h  | * | stop = dword ptr 8 ,data,1
exc = dword ptr 4  | * | stop_argument = dword ptr 0Ch ,data,1
"push ebx  | * | mov ebx, [esp+2Ch+exc] ",gcc,3
"sub esp, 20h  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,2
"mov ebx, [esp+2Ch+exc]  | * | test eax, eax ",gcc,3
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D814 ",gcc,1
"test eax, eax  | * | loc_40D777:  ",gcc,1
"jz loc_40D814  | * | mov edi, [eax] ",gcc,1
"loc_40D777:   | * | test edi, edi ",gcc,1
"mov edi, [eax]  | * | js short loc_40D7F8 ",gcc,1
"test edi, edi  | * | loc_40D77D:  ",gcc,1
"js short loc_40D7F8  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D77D:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz short loc_40D804 ",gcc,1
"test eax, eax  | * | loc_40D786:  ",gcc,1
"jz short loc_40D804  | * | mov esi, [eax] ",gcc,1
"loc_40D786:   | * | test esi, esi ",gcc,1
"mov esi, [eax]  | * | jz short loc_40D7DC ",gcc,1
"jz short loc_40D7DC  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_key  | * | jz short loc_40D7EC ",gcc,1
"test eax, eax  | * | loc_40D795:  ",gcc,1
"jz short loc_40D7EC  | * | mov esi, [eax] ",gcc,1
loc_40D795:   | * | call _GetLastError@0  ,gcc,1
"mov esi, [eax]  | * | mov edi, eax ",gcc,3
"call _GetLastError@0   | * | mov [esp+2Ch+dwTlsIndex], esi  ",gcc,2
"mov edi, eax  | * | call _TlsGetValue@4  ",gcc,4
"mov [esp+2Ch+dwTlsIndex], esi   | * | push edx ",gcc,1
"push edx  | * | mov [esp+2Ch+dwTlsIndex], edi  ",gcc,1
"mov [esp+2Ch+dwTlsIndex], edi   | * | push ecx  ",gcc,1
call _SetLastError@4   | * | loc_40D7B2:  ,gcc,1
"loc_40D7B2:   | * | mov [esp+2Ch+cur_context.fc], this_context ",gcc,1
"mov [esp+2Ch+cur_context.fc], this_context  | * | mov [ebx+0Ch], eax ",gcc,1
"mov eax, [esp+2Ch+stop]  | * | mov eax, [esp+2Ch+stop_argument] ",gcc,1
"mov [ebx+0Ch], eax  | * | mov [ebx+10h], eax ",gcc,1
"mov eax, [esp+2Ch+stop_argument]  | * | lea edx, [esp+2Ch+cur_context]  ",gcc,1
"mov [ebx+10h], eax  | * | mov eax, ebx  ",gcc,1
"lea edx, [esp+2Ch+cur_context]   | * | call __Unwind_ForcedUnwind_Phase2 ",gcc,2
"call __Unwind_ForcedUnwind_Phase2  | * | cmp code, 7 ",gcc,2
"cmp code, 7  | * | add esp, 20h ",gcc,1
jz short loc_40D832  | * | pop ebx ,gcc,1
"add esp, 20h  | * | pop this_context ",gcc,1
retn  | * | loc_40D7DC:  ,gcc,1
"align 4  | * | mov eax, ds:___shmem_ptr_fc_static ",gcc,3
"loc_40D7DC:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_static  | * | jz short loc_40D824 ",gcc,1
jz short loc_40D824  | * | jmp short loc_40D7B2 ,gcc,1
"mov esi, [eax]  | * | align 4 ",gcc,3
jmp short loc_40D7B2  | * | loc_40D7EC:  ,gcc,1
"loc_40D7EC:   | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
call ___shmem_grabber_fc_key  | * | jmp short loc_40D795 ,gcc,1
"mov ds:___shmem_ptr_fc_key, eax  | * | loc_40D7F8:  ",gcc,1
jmp short loc_40D795  | * | call _fc_key_init_once ,gcc,1
loc_40D7F8:   | * | jmp loc_40D77D ,gcc,1
jmp loc_40D77D  | * | loc_40D804:  ,gcc,1
"loc_40D804:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D786 ,gcc,1
jmp loc_40D786  | * | loc_40D814:  ,gcc,1
"loc_40D814:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D777 ,gcc,1
jmp loc_40D777  | * | loc_40D824:  ,gcc,1
"loc_40D824:   | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
"mov ds:___shmem_ptr_fc_static, eax  | * | jmp short loc_40D7B2 ",gcc,1
"mov esi, [eax]  | * | loc_40D832:  ",gcc,1
"lea code, [esp+2Ch+cur_context]  | * | __Unwind_SjLj_ForcedUnwind endp  ",gcc,1
call _uw_install_context_isra_3  | * | nop ,gcc,1
__Unwind_SjLj_ForcedUnwind endp   | * | public __Unwind_SjLj_Resume ,gcc,1
nop  | * | __Unwind_SjLj_Resume proc near  ,gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D8E9 ",gcc,1
"test eax, eax  | * | loc_40D853:  ",gcc,1
"jz loc_40D8E9  | * | mov eax, [eax] ",gcc,1
"loc_40D853:   | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | js loc_40D8DF ",gcc,1
"test eax, eax  | * | loc_40D85D:  ",gcc,1
"js loc_40D8DF  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D85D:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D8F8 ",gcc,1
"test eax, eax  | * | loc_40D86A:  ",gcc,1
"jz loc_40D8F8  | * | mov eax, [eax] ",gcc,1
"loc_40D86A:   | * | test eax, eax ",gcc,1
"mov eax, [eax]  | * | jz short loc_40D8B8 ",gcc,1
"test eax, eax  | * | mov eax, ds:___shmem_ptr_fc_key ",gcc,1
"jz short loc_40D8B8  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_key  | * | jz short loc_40D8D3 ",gcc,1
"test eax, eax  | * | loc_40D879:  ",gcc,1
"jz short loc_40D8D3  | * | mov esi, [eax] ",gcc,1
loc_40D879:   | * | call _GetLastError@0  ,gcc,1
"mov [esp+2Ch+dwTlsIndex], esi   | * | push esi ",gcc,1
"push esi  | * | mov [esp+2Ch+dwTlsIndex], edi  ",gcc,1
"mov [esp+2Ch+dwTlsIndex], edi   | * | push edi  ",gcc,1
call _SetLastError@4   | * | loc_40D896:  ,gcc,1
"loc_40D896:   | * | mov [esp+2Ch+cur_context.fc], this_context ",gcc,1
"mov [esp+2Ch+cur_context.fc], this_context  | * | mov edx, esi  ",gcc,1
"lea this_context, [esp+2Ch+cur_context]  | * | mov eax, ebx  ",gcc,1
"mov edx, esi   | * | mov ecx, [ebx+0Ch] ",gcc,1
"mov eax, ebx   | * | test ecx, ecx ",gcc,1
"mov ecx, [ebx+0Ch]  | * | jnz short loc_40D8C5 ",gcc,1
"test ecx, ecx  | * | call __Unwind_RaiseException_Phase2 ",gcc,1
jnz short loc_40D8C5  | * | loc_40D8AE:  ,gcc,1
"loc_40D8AE:   | * | cmp code, 7 ",gcc,1
"cmp code, 7  | * | call _abort ",gcc,2
jz short loc_40D8CC  | * | loc_40D8B8:  ,gcc,1
"call _abort  | * | mov eax, ds:___shmem_ptr_fc_static ",gcc,1
"loc_40D8B8:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_static  | * | jz short loc_40D907 ",gcc,1
jz short loc_40D907  | * | jmp short loc_40D896 ,gcc,1
"mov esi, [eax]  | * | loc_40D8C5:  ",gcc,1
jmp short loc_40D896  | * | call __Unwind_ForcedUnwind_Phase2 ,gcc,1
loc_40D8C5:   | * | jmp short loc_40D8AE ,gcc,1
call __Unwind_ForcedUnwind_Phase2  | * | loc_40D8CC:  ,gcc,1
"loc_40D8CC:   | * | mov code, esi ",gcc,1
"mov code, esi  | * | loc_40D8D3:  ",gcc,1
call _uw_install_context_isra_3  | * | call ___shmem_grabber_fc_key ,gcc,1
"loc_40D8D3:   | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
call ___shmem_grabber_fc_key  | * | jmp short loc_40D879 ,gcc,1
"mov ds:___shmem_ptr_fc_key, eax  | * | loc_40D8DF:  ",gcc,1
jmp short loc_40D879  | * | call _fc_key_init_once ,gcc,1
loc_40D8DF:   | * | jmp loc_40D85D ,gcc,1
call _fc_key_init_once  | * | loc_40D8E9:  ,gcc,1
jmp loc_40D85D  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40D8E9:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D853 ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D8F8:  ",gcc,1
jmp loc_40D853  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40D8F8:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D86A ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40D907:  ",gcc,1
jmp loc_40D86A  | * | call ___shmem_grabber_fc_static ,gcc,1
"loc_40D907:   | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
"mov ds:___shmem_ptr_fc_static, eax  | * | jmp short loc_40D896 ",gcc,1
"mov esi, [eax]  | * | __Unwind_SjLj_Resume endp ",gcc,1
jmp short loc_40D896  | * | align 4 ,gcc,1
__Unwind_SjLj_Resume endp  | * | public __Unwind_SjLj_Resume_or_Rethrow ,gcc,1
align 4  | * | __Unwind_SjLj_Resume_or_Rethrow proc near ,gcc,1
lpuexcpt = dword ptr -2Ch  | * | exc = dword ptr 4 ,data,1
"sub esp, 20h  | * | mov eax, [ebx+0Ch] ",gcc,1
"mov eax, [ebx+0Ch]  | * | jnz short loc_40D938 ",gcc,1
"test eax, eax  | * | mov [esp+2Ch+lpuexcpt], ebx  ",gcc,1
jnz short loc_40D938  | * | call __Unwind_SjLj_RaiseException ,gcc,1
"mov [esp+2Ch+lpuexcpt], ebx   | * | add esp, 20h ",gcc,1
call __Unwind_SjLj_RaiseException  | * | pop ebx ,gcc,1
pop edi  | * | loc_40D938:  ,gcc,1
"retn  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D938:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D9C8 ",gcc,1
"test eax, eax  | * | loc_40D945:  ",gcc,1
"jz loc_40D9C8  | * | mov edi, [eax] ",gcc,1
"loc_40D945:   | * | test edi, edi ",gcc,1
"mov edi, [eax]  | * | js short loc_40D9B4 ",gcc,1
"test edi, edi  | * | loc_40D94B:  ",gcc,1
"js short loc_40D9B4  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40D94B:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40D9D8 ",gcc,1
"test eax, eax  | * | loc_40D958:  ",gcc,1
"jz loc_40D9D8  | * | mov esi, [eax] ",gcc,1
"loc_40D958:   | * | test esi, esi ",gcc,1
"mov esi, [eax]  | * | jz short loc_40D9A4 ",gcc,1
"jz short loc_40D9A4  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_key  | * | jz loc_40D9F8 ",gcc,1
"test eax, eax  | * | loc_40D96B:  ",gcc,1
"jz loc_40D9F8  | * | mov esi, [eax] ",gcc,1
loc_40D96B:   | * | call _GetLastError@0  ,gcc,1
"call _GetLastError@0   | * | mov [esp+2Ch+lpuexcpt], esi  ",gcc,1
"mov [esp+2Ch+lpuexcpt], esi   | * | push edx ",gcc,1
"push edx  | * | mov [esp+2Ch+lpuexcpt], edi  ",gcc,1
"mov [esp+2Ch+lpuexcpt], edi   | * | push ecx  ",gcc,1
call _SetLastError@4   | * | loc_40D988:  ,gcc,1
"loc_40D988:   | * | mov [esp+2Ch+cur_context.fc], this_context ",gcc,1
"mov [esp+2Ch+cur_context.fc], this_context  | * | mov eax, ebx  ",gcc,1
jz short loc_40D9BC  | * | align 4 ,gcc,1
call _abort  | * | loc_40D9A4:  ,gcc,1
"loc_40D9A4:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_static  | * | jz short loc_40D9E8 ",gcc,1
jz short loc_40D9E8  | * | jmp short loc_40D988 ,gcc,1
jmp short loc_40D988  | * | loc_40D9B4:  ,gcc,1
align 4  | * | call _fc_key_init_once ,gcc,1
loc_40D9B4:   | * | jmp short loc_40D94B ,gcc,1
"align 4  | * | lea code, [esp+2Ch+cur_context] ",gcc,1
loc_40D9BC:   | * | call _uw_install_context_isra_3 ,gcc,1
"lea code, [esp+2Ch+cur_context]  | * | lea esi, [esi+0] ",gcc,1
call _uw_install_context_isra_3  | * | loc_40D9C8:  ,gcc,1
"lea esi, [esi+0]  | * | call ___shmem_grabber_use_fc_key ",gcc,1
"loc_40D9C8:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D945 ,gcc,1
jmp loc_40D945  | * | loc_40D9D8:  ,gcc,1
"loc_40D9D8:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40D958 ,gcc,1
jmp loc_40D958  | * | loc_40D9E8:  ,gcc,1
"loc_40D9E8:   | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
"mov ds:___shmem_ptr_fc_static, eax  | * | jmp short loc_40D988 ",gcc,1
jmp short loc_40D988  | * | loc_40D9F8:  ,gcc,1
"loc_40D9F8:   | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
call ___shmem_grabber_fc_key  | * | jmp loc_40D96B ,gcc,1
"mov ds:___shmem_ptr_fc_key, eax  | * | __Unwind_SjLj_Resume_or_Rethrow endp ",gcc,1
jmp loc_40D96B  | * | align 4 ,gcc,1
__Unwind_SjLj_Resume_or_Rethrow endp  | * | public __Unwind_DeleteException ,gcc,1
align 4  | * | __Unwind_DeleteException proc near  ,gcc,1
var_1C = dword ptr -1Ch  | * | exc = dword ptr 4 ,data,1
"sub esp, 1Ch  | * | mov eax, [edx+8] ",gcc,1
"mov edx, [esp+1Ch+exc]  | * | test eax, eax ",gcc,1
"mov eax, [edx+8]  | * | jz short loc_40DA23 ",gcc,1
"test eax, eax  | * | mov [esp+1Ch+var_18], edx ",gcc,2
"jz short loc_40DA23  | * | mov [esp+1Ch+var_1C], 1 ",gcc,1
"mov [esp+1Ch+var_18], edx  | * | call eax ",gcc,1
"mov [esp+1Ch+var_1C], 1  | * | loc_40DA23:  ",gcc,1
"call eax  | * | add esp, 1Ch ",gcc,1
loc_40DA23:   | * | retn ,gcc,1
"add esp, 1Ch  | * | __Unwind_DeleteException endp ",gcc,1
__Unwind_DeleteException endp  | * | public __Unwind_Backtrace ,gcc,1
align 4  | * | __Unwind_Backtrace proc near ,gcc,1
dwTlsIndex = dword ptr -3Ch  | * | context = _Unwind_Context ptr -20h ,data,1
var_38 = dword ptr -38h  | * | trace = dword ptr 4 ,data,1
context = _Unwind_Context ptr -20h  | * | trace_argument = dword ptr 8 ,data,1
"push ebx  | * | mov esi, [esp+3Ch+trace] ",gcc,1
"sub esp, 2Ch  | * | mov ebp, [esp+3Ch+trace_argument] ",gcc,1
"mov esi, [esp+3Ch+trace]  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"mov ebp, [esp+3Ch+trace_argument]  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40DAFE ",gcc,1
"test eax, eax  | * | loc_40DA44:  ",gcc,1
"jz loc_40DAFE  | * | mov edi, [eax] ",gcc,1
"loc_40DA44:   | * | test edi, edi ",gcc,1
"mov edi, [eax]  | * | js loc_40DAF4 ",gcc,1
"test edi, edi  | * | loc_40DA4E:  ",gcc,1
"js loc_40DAF4  | * | mov eax, ds:___shmem_ptr_use_fc_key ",gcc,1
"loc_40DA4E:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_use_fc_key  | * | jz loc_40DB0D ",gcc,1
"test eax, eax  | * | loc_40DA5B:  ",gcc,1
"jz loc_40DB0D  | * | mov ebx, [eax] ",gcc,1
"loc_40DA5B:   | * | test ebx, ebx ",gcc,1
"mov ebx, [eax]  | * | jz short loc_40DAC8 ",gcc,1
"jz short loc_40DAC8  | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_key  | * | jz short loc_40DAE5 ",gcc,1
"test eax, eax  | * | loc_40DA6A:  ",gcc,1
"jz short loc_40DAE5  | * | mov ebx, [eax] ",gcc,1
loc_40DA6A:   | * | call _GetLastError@0  ,gcc,1
"mov ebx, [eax]  | * | mov edi, eax ",gcc,1
"call _GetLastError@0   | * | mov [esp+3Ch+dwTlsIndex], ebx  ",gcc,1
"mov [esp+3Ch+dwTlsIndex], ebx   | * | push edx ",gcc,1
"call _TlsGetValue@4   | * | mov ebx, eax ",gcc,1
"push edx  | * | mov [esp+3Ch+dwTlsIndex], edi  ",gcc,1
"mov ebx, eax  | * | call _SetLastError@4  ",gcc,1
"mov [esp+3Ch+dwTlsIndex], edi   | * | push ecx ",gcc,1
call _SetLastError@4   | * | loc_40DA87:  ,gcc,1
"push ecx  | * | mov [esp+3Ch+context.fc], ebx ",gcc,1
"loc_40DA87:   | * | lea edi, [esp+3Ch+context] ",gcc,1
"mov [esp+3Ch+context.fc], ebx  | * | mov [esp+3Ch+var_38], ebp ",gcc,1
"lea edi, [esp+3Ch+context]  | * | mov [esp+3Ch+dwTlsIndex], edi ",gcc,1
"mov [esp+3Ch+var_38], ebp  | * | test ebx, ebx ",gcc,2
"mov [esp+3Ch+dwTlsIndex], edi  | * | jz short loc_40DAB7 ",gcc,1
jz short loc_40DAB7  | * | loc_40DA9C:  ,gcc,1
"xchg ax, ax  | * | call esi ",gcc,1
"loc_40DA9C:   | * | test eax, eax ",gcc,1
call esi  | * | jnz short loc_40DAD8 ,gcc,2
"test eax, eax  | * | mov eax, [esp+3Ch+context.fc] ",gcc,1
"jnz short loc_40DAD8  | * | mov ebx, [eax] ",gcc,1
"mov eax, [esp+3Ch+context.fc]  | * | mov [esp+3Ch+context.fc], ebx ",gcc,1
"mov ebx, [eax]  | * | mov [esp+3Ch+var_38], ebp ",gcc,1
"mov [esp+3Ch+context.fc], ebx  | * | mov [esp+3Ch+dwTlsIndex], edi ",gcc,1
"mov [esp+3Ch+dwTlsIndex], edi  | * | jnz short loc_40DA9C ",gcc,1
"test ebx, ebx  | * | loc_40DAB7:  ",gcc,1
jnz short loc_40DA9C  | * | call esi ,gcc,1
"loc_40DAB7:   | * | test eax, eax ",gcc,1
"test eax, eax  | * | mov al, 5 ",gcc,1
"jnz short loc_40DAD8  | * | add esp, 2Ch ",gcc,1
"mov al, 5  | * | pop ebx ",gcc,1
retn  | * | loc_40DAC8:  ,gcc,1
"loc_40DAC8:   | * | test eax, eax ",gcc,1
"mov eax, ds:___shmem_ptr_fc_static  | * | jz short loc_40DB1C ",gcc,1
"test eax, eax  | * | mov ebx, [eax] ",gcc,1
jz short loc_40DB1C  | * | jmp short loc_40DA87 ,gcc,1
"mov ebx, [eax]  | * | align 4 ",gcc,1
jmp short loc_40DA87  | * | loc_40DAD8:  ,gcc,1
"align 4  | * | mov eax, 3 ",gcc,1
"loc_40DAD8:   | * | add esp, 2Ch ",gcc,1
"mov eax, 3  | * | pop ebx ",gcc,1
pop ebp  | * | loc_40DAE5:  ,gcc,1
retn  | * | call ___shmem_grabber_fc_key ,gcc,1
"loc_40DAE5:   | * | mov ds:___shmem_ptr_fc_key, eax ",gcc,1
call ___shmem_grabber_fc_key  | * | jmp loc_40DA6A ,gcc,1
"mov ds:___shmem_ptr_fc_key, eax  | * | loc_40DAF4:  ",gcc,1
jmp loc_40DA6A  | * | call _fc_key_init_once ,gcc,1
loc_40DAF4:   | * | jmp loc_40DA4E ,gcc,1
call _fc_key_init_once  | * | loc_40DAFE:  ,gcc,1
jmp loc_40DA4E  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40DAFE:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40DA44 ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40DB0D:  ",gcc,1
jmp loc_40DA44  | * | call ___shmem_grabber_use_fc_key ,gcc,1
"loc_40DB0D:   | * | mov ds:___shmem_ptr_use_fc_key, eax ",gcc,1
call ___shmem_grabber_use_fc_key  | * | jmp loc_40DA5B ,gcc,1
"mov ds:___shmem_ptr_use_fc_key, eax  | * | loc_40DB1C:  ",gcc,1
jmp loc_40DA5B  | * | call ___shmem_grabber_fc_static ,gcc,1
"loc_40DB1C:   | * | mov ds:___shmem_ptr_fc_static, eax ",gcc,1
"call ___shmem_grabber_fc_static  | * | mov ebx, [eax] ",gcc,1
"mov ds:___shmem_ptr_fc_static, eax  | * | jmp loc_40DA87 ",gcc,1
"mov ebx, [eax]  | * | __Unwind_Backtrace endp ",gcc,1
jmp loc_40DA87  | * | align 10h ,gcc,1
__Unwind_Backtrace endp  | * | public ___gthr_win32_once ,gcc,1
align 10h  | * | ___gthr_win32_once proc near  ,gcc,1
lpAddend = dword ptr -1Ch  | * | func = dword ptr 8 ,data,1
"push ebx  | * | mov ebx, [esp+1Ch+once] ",gcc,1
"mov ebx, [esp+1Ch+once]  | * | jz short loc_40DB8C ",gcc,1
"test ebx, ebx  | * | mov eax, [esp+1Ch+func] ",gcc,1
"jz short loc_40DB8C  | * | test eax, eax ",gcc,2
"mov eax, [esp+1Ch+func]  | * | jz short loc_40DB8C ",gcc,1
"test eax, eax  | * | mov eax, [ebx] ",gcc,1
"mov eax, [ebx]  | * | jz short loc_40DB54 ",gcc,1
"test eax, eax  | * | loc_40DB4A:  ",gcc,1
"jz short loc_40DB54  | * | xor eax, eax ",gcc,1
"loc_40DB4A:   | * | add esp, 18h ",gcc,1
retn  | * | loc_40DB54:  ,gcc,1
"align 4  | * | lea eax, [ebx+4] ",gcc,1
"loc_40DB54:   | * | mov [esp+1Ch+lpAddend], eax  ",gcc,1
"mov [esp+1Ch+lpAddend], eax   | * | push ecx ",gcc,1
push ecx  | * | jnz short loc_40DB81 ,gcc,1
"test eax, eax  | * | mov eax, [esp+1Ch+func] ",gcc,1
jnz short loc_40DB81  | * | call eax ,gcc,1
"mov eax, [esp+1Ch+func]  | * | mov dword ptr [ebx], 1 ",gcc,1
call eax  | * | jmp short loc_40DB4A ,gcc,1
jmp short loc_40DB4A  | * | loc_40DB74:  ,gcc,1
loc_40DB74:   | * | call _Sleep@4  ,gcc,1
"mov [esp+1Ch+lpAddend], 0   | * | push edx ",gcc,1
call _Sleep@4   | * | loc_40DB81:  ,gcc,1
"push edx  | * | mov eax, [ebx] ",gcc,1
"loc_40DB81:   | * | test eax, eax ",gcc,1
"mov eax, [ebx]  | * | jz short loc_40DB74 ",gcc,1
"test eax, eax  | * | jmp short loc_40DB4A ",gcc,1
jz short loc_40DB74  | * | align 4 ,gcc,1
jmp short loc_40DB4A  | * | loc_40DB8C:  ,gcc,1
"align 4  | * | mov eax, 16h ",gcc,1
"loc_40DB8C:   | * | add esp, 18h ",gcc,1
"mov eax, 16h  | * | pop ebx ",gcc,1
pop ebx  | * | ___gthr_win32_once endp ,gcc,1
___gthr_win32_once endp  | * | public ___gthr_win32_key_create ,gcc,1
align 4  | * | ___gthr_win32_key_create proc near  ,gcc,1
"push ebx  | * | mov esi, [esp+0Ch+tls_index] ",gcc,1
"push eax  | * | mov ebx, [esp+0Ch+dtor] ",gcc,1
"mov esi, [esp+0Ch+tls_index]  | * | call _TlsAlloc@0  ",gcc,1
"call _TlsAlloc@0   | * | cmp tls_index_0, 0FFFFFFFFh ",gcc,1
"cmp tls_index_0, 0FFFFFFFFh  | * | mov [esi], tls_index_0 ",gcc,1
"jz short loc_40DBC0  | * | mov [esp+0Ch+dtor], ebx ",gcc,1
"mov [esi], tls_index_0  | * | mov [esp+0Ch+tls_index], tls_index_0 ",gcc,1
"mov [esp+0Ch+dtor], ebx  | * | pop tls_index_0 ",gcc,1
"mov [esp+0Ch+tls_index], tls_index_0  | * | pop ebx ",gcc,1
pop tls_index_0  | * | pop esi ,gcc,2
pop ebx  | * | jmp ___mingwthr_key_dtor ,gcc,1
jmp ___mingwthr_key_dtor  | * | align 10h ,gcc,1
align 10h  | * | pop tls_index_0 ,gcc,1
loc_40DBC0:   | * | pop ebx ,gcc,1
pop ebx  | * | jmp _GetLastError@0  ,gcc,1
pop esi  | * | ___gthr_win32_key_create endp ,gcc,1
jmp _GetLastError@0   | * | public ___gthr_win32_key_delete ,gcc,1
___gthr_win32_key_create endp  | * | ___gthr_win32_key_delete proc near ,gcc,1
"sub esp, 1Ch  | * | mov [esp+1Ch+dwTlsIndex], eax  ",gcc,1
"mov eax, [esp+1Ch+key]  | * | call _TlsFree@4  ",gcc,1
"mov [esp+1Ch+dwTlsIndex], eax   | * | push edx ",gcc,1
"call _TlsFree@4   | * | test eax, eax ",gcc,1
push edx  | * | jz short loc_40DBE4 ,gcc,1
"jz short loc_40DBE4  | * | add esp, 1Ch ",gcc,1
retn  | * | loc_40DBE4:  ,gcc,1
"align 4  | * | add esp, 1Ch ",gcc,1
loc_40DBE4:   | * | jmp _GetLastError@0  ,gcc,1
"add esp, 1Ch  | * | ___gthr_win32_key_delete endp ",gcc,1
jmp _GetLastError@0   | * | public ___gthr_win32_getspecific ,gcc,1
___gthr_win32_key_delete endp  | * | ___gthr_win32_getspecific proc near  ,gcc,1
dwTlsIndex = dword ptr -2Ch  | * | key = dword ptr 4 ,data,1
push esi  | * | call _GetLastError@0  ,gcc,1
"sub esp, 28h  | * | mov esi, eax ",gcc,1
"mov esi, eax  | * | mov lasterror, [esp+2Ch+key] ",gcc,1
lasterror = eax   | * | lasterror = esi  ,data,1
"mov lasterror, [esp+2Ch+key]  | * | mov [esp+2Ch+dwTlsIndex], eax  ",gcc,1
"mov [esp+2Ch+dwTlsIndex], eax   | * | push ecx ",gcc,1
"push ecx  | * | mov [esp+2Ch+dwTlsIndex], lasterror  ",gcc,1
"mov [esp+2Ch+dwTlsIndex], lasterror   | * | call _SetLastError@4  ",gcc,1
"mov [esp+2Ch+var_10], ptr  | * | push esi ",gcc,1
"call _SetLastError@4   | * | mov eax, [esp+2Ch+var_10] ",gcc,1
"push esi  | * | add esp, 28h ",gcc,1
"mov eax, [esp+2Ch+var_10]  | * | pop esi ",gcc,1
pop esi  | * | ___gthr_win32_getspecific endp ,gcc,1
___gthr_win32_getspecific endp  | * | public ___gthr_win32_setspecific ,gcc,1
align 4  | * | ___gthr_win32_setspecific proc near  ,gcc,1
dwTlsIndex = dword ptr -1Ch  | * | key = dword ptr 4 ,data,1
lpTlsValue = dword ptr -18h  | * | ptr = dword ptr 8 ,data,1
"sub esp, 1Ch  | * | mov [esp+1Ch+lpTlsValue], eax  ",gcc,1
"mov eax, [esp+1Ch+ptr]  | * | mov eax, [esp+1Ch+key] ",gcc,1
"mov [esp+1Ch+lpTlsValue], eax   | * | mov [esp+1Ch+dwTlsIndex], eax  ",gcc,1
"mov eax, [esp+1Ch+key]  | * | call _TlsSetValue@8  ",gcc,1
"sub esp, 8  | * | jz short loc_40DC40 ",gcc,1
"jz short loc_40DC40  | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | loc_40DC40:  ",gcc,1
"retn  | * | add esp, 1Ch ",gcc,1
loc_40DC40:   | * | jmp _GetLastError@0  ,gcc,1
"add esp, 1Ch  | * | ___gthr_win32_setspecific endp ",gcc,1
jmp _GetLastError@0   | * | public ___gthr_win32_mutex_init_function ,gcc,1
___gthr_win32_setspecific endp  | * | ___gthr_win32_mutex_init_function proc near ,gcc,1
lpSemaphoreAttributes= dword ptr -1Ch  | * | lMaximumCount = dword ptr -14h ,data,2
lInitialCount = dword ptr -18h  | * | lpName = dword ptr -10h ,data,2
lMaximumCount = dword ptr -14h  | * | mutex = dword ptr 4 ,data,2
"push ebx  | * | mov ebx, [esp+1Ch+mutex] ",gcc,6
"sub esp, 18h  | * | mov dword ptr [ebx], 0FFFFFFFFh ",gcc,2
"mov ebx, [esp+1Ch+mutex]  | * | mov [esp+1Ch+lpName], 0  ",gcc,1
"mov dword ptr [ebx], 0FFFFFFFFh  | * | mov [esp+1Ch+lMaximumCount], 0FFFFh  ",gcc,1
"mov [esp+1Ch+lpName], 0   | * | mov [esp+1Ch+lInitialCount], 0  ",gcc,2
"mov [esp+1Ch+lMaximumCount], 0FFFFh   | * | mov [esp+1Ch+lpSemaphoreAttributes], 0  ",gcc,2
"mov [esp+1Ch+lInitialCount], 0   | * | call _CreateSemaphoreA@16  ",gcc,2
"mov [esp+1Ch+lpSemaphoreAttributes], 0   | * | sub esp, 10h ",gcc,2
"call _CreateSemaphoreA@16   | * | mov [ebx+4], eax ",gcc,1
"sub esp, 10h  | * | add esp, 18h ",gcc,3
"mov [ebx+4], eax  | * | pop ebx ",gcc,1
pop ebx  | * | ___gthr_win32_mutex_init_function endp ,gcc,1
___gthr_win32_mutex_init_function endp  | * | public ___gthr_win32_mutex_destroy ,gcc,1
align 4  | * | ___gthr_win32_mutex_destroy proc near  ,gcc,1
"sub esp, 1Ch  | * | mov eax, [eax+4] ",gcc,1
"mov eax, [esp+1Ch+mutex]  | * | mov [esp+1Ch+hObject], eax  ",gcc,1
"mov eax, [eax+4]  | * | call _CloseHandle@4  ",gcc,1
"mov [esp+1Ch+hObject], eax   | * | push eax ",gcc,1
"call _CloseHandle@4   | * | add esp, 1Ch ",gcc,1
push eax  | * | retn ,gcc,1
"add esp, 1Ch  | * | ___gthr_win32_mutex_destroy endp ",gcc,1
___gthr_win32_mutex_destroy endp  | * | public ___gthr_win32_mutex_lock ,gcc,1
align 10h  | * | ___gthr_win32_mutex_lock proc near  ,gcc,1
lpAddend = dword ptr -1Ch  | * | mutex = dword ptr 4 ,data,2
"sub esp, 18h  | * | mov [esp+1Ch+lpAddend], ebx  ",gcc,2
"mov ebx, [esp+1Ch+mutex]  | * | call _InterlockedIncrement@4  ",gcc,1
"mov [esp+1Ch+lpAddend], ebx   | * | push edx ",gcc,3
push edx  | * | jnz short loc_40DCBC ,gcc,1
"test eax, eax  | * | loc_40DCB5:  ",gcc,1
"jnz short loc_40DCBC  | * | xor eax, eax ",gcc,1
"loc_40DCB5:   | * | add esp, 18h ",gcc,1
pop ebx  | * | loc_40DCBC:  ,gcc,1
"retn  | * | mov [esp+1Ch+dwMilliseconds], 0FFFFFFFFh  ",gcc,1
"loc_40DCBC:   | * | mov eax, [ebx+4] ",gcc,1
"mov [esp+1Ch+dwMilliseconds], 0FFFFFFFFh   | * | mov [esp+1Ch+lpAddend], eax  ",gcc,2
"mov eax, [ebx+4]  | * | call _WaitForSingleObject@8  ",gcc,1
"mov [esp+1Ch+lpAddend], eax   | * | sub esp, 8 ",gcc,2
"call _WaitForSingleObject@8   | * | test eax, eax ",gcc,3
"sub esp, 8  | * | jz short loc_40DCB5 ",gcc,1
"test eax, eax  | * | mov [esp+1Ch+lpAddend], ebx  ",gcc,1
jz short loc_40DCB5  | * | call _InterlockedDecrement@4  ,gcc,1
"mov [esp+1Ch+lpAddend], ebx   | * | push eax ",gcc,1
"call _InterlockedDecrement@4   | * | mov eax, 1 ",gcc,2
"mov eax, 1  | * | pop ebx ",gcc,3
pop ebx  | * | ___gthr_win32_mutex_lock endp ,gcc,1
___gthr_win32_mutex_lock endp  | * | public ___gthr_win32_mutex_trylock ,gcc,1
align 4  | * | ___gthr_win32_mutex_trylock proc near ,gcc,1
"___gthr_win32_mutex_trylock proc near  | * | mov edx, [esp+mutex] ",gcc,1
"mov edx, [esp+mutex]  | * | xor ecx, ecx ",gcc,1
"mov eax, 0FFFFFFFFh  | * | lock cmpxchg [edx], ecx ",gcc,1
"xor ecx, ecx  | * | not eax ",gcc,1
"lock cmpxchg [edx], ecx  | * | shr eax, 1Fh ",gcc,1
"shr eax, 1Fh  | * | ___gthr_win32_mutex_trylock endp ",gcc,1
___gthr_win32_mutex_trylock endp  | * | public ___gthr_win32_mutex_unlock ,gcc,1
align 4  | * | ___gthr_win32_mutex_unlock proc near  ,gcc,1
lpAddend = dword ptr -1Ch  | * | lpPreviousCount = dword ptr -14h ,data,2
lReleaseCount = dword ptr -18h  | * | mutex = dword ptr 4 ,data,2
"mov ebx, [esp+1Ch+mutex]  | * | call _InterlockedDecrement@4  ",gcc,1
"mov [esp+1Ch+lpAddend], ebx   | * | push ecx ",gcc,1
"call _InterlockedDecrement@4   | * | test eax, eax ",gcc,2
push ecx  | * | js short loc_40DD44 ,gcc,1
"test eax, eax  | * | mov [esp+1Ch+lpPreviousCount], 0  ",gcc,2
"js short loc_40DD44  | * | mov [esp+1Ch+lReleaseCount], 1  ",gcc,1
"mov [esp+1Ch+lpPreviousCount], 0   | * | mov eax, [ebx+4] ",gcc,1
"mov [esp+1Ch+lReleaseCount], 1   | * | mov [esp+1Ch+lpAddend], eax  ",gcc,2
"mov eax, [ebx+4]  | * | call _ReleaseSemaphore@12  ",gcc,1
"mov [esp+1Ch+lpAddend], eax   | * | sub esp, 0Ch ",gcc,2
"call _ReleaseSemaphore@12   | * | test eax, eax ",gcc,2
"sub esp, 0Ch  | * | setz al ",gcc,2
"setz al  | * | add esp, 18h ",gcc,2
"movzx eax, al  | * | pop ebx ",gcc,2
pop ebx  | * | loc_40DD44:  ,gcc,1
"loc_40DD44:   | * | add esp, 18h ",gcc,1
pop ebx  | * | ___gthr_win32_mutex_unlock endp ,gcc,1
___gthr_win32_mutex_unlock endp  | * | public ___gthr_win32_recursive_mutex_init_function ,gcc,1
align 4  | * | ___gthr_win32_recursive_mutex_init_function proc near ,gcc,1
"mov ebx, [esp+1Ch+mutex]  | * | mov dword ptr [ebx+4], 0 ",gcc,1
"mov dword ptr [ebx], 0FFFFFFFFh  | * | mov dword ptr [ebx+8], 0 ",gcc,1
"mov dword ptr [ebx+4], 0  | * | mov [esp+1Ch+lpName], 0  ",gcc,1
"mov dword ptr [ebx+8], 0  | * | mov [esp+1Ch+lMaximumCount], 0FFFFh  ",gcc,1
"call _CreateSemaphoreA@16   | * | mov [ebx+0Ch], eax ",gcc,1
"mov [ebx+0Ch], eax  | * | pop ebx ",gcc,1
pop ebx  | * | ___gthr_win32_recursive_mutex_init_function endp ,gcc,1
___gthr_win32_recursive_mutex_init_function endp  | * | public ___gthr_win32_recursive_mutex_lock ,gcc,1
align 4  | * | ___gthr_win32_recursive_mutex_lock proc near ,gcc,1
"sub esp, 14h  | * | call _GetCurrentThreadId@0  ",gcc,1
"mov ebx, [esp+1Ch+mutex]  | * | mov esi, eax ",gcc,1
"mov esi, eax  | * | mov [esp+1Ch+lpAddend], ebx  ",gcc,1
push edx  | * | jz short loc_40DDD4 ,gcc,1
"test eax, eax  | * | cmp [ebx+8], me ",gcc,2
jz short loc_40DDD4  | * | jz short loc_40DDF8 ,gcc,1
"cmp [ebx+8], me  | * | mov [esp+1Ch+dwMilliseconds], 0FFFFFFFFh  ",gcc,1
"jz short loc_40DDF8  | * | mov eax, [ebx+0Ch] ",gcc,1
"mov eax, [ebx+0Ch]  | * | call _WaitForSingleObject@8  ",gcc,1
"sub esp, 8  | * | jnz short loc_40DDE4 ",gcc,1
"test eax, eax  | * | loc_40DDD4:  ",gcc,1
"jnz short loc_40DDE4  | * | mov dword ptr [ebx+4], 1 ",gcc,1
"loc_40DDD4:   | * | mov [ebx+8], me ",gcc,1
"mov dword ptr [ebx+4], 1  | * | add esp, 14h ",gcc,1
"mov [ebx+8], me  | * | pop ebx ",gcc,1
"add esp, 14h  | * | pop me ",gcc,2
pop me  | * | loc_40DDE4:  ,gcc,1
"loc_40DDE4:   | * | mov [esp+1Ch+lpAddend], ebx ",gcc,1
"mov [esp+1Ch+lpAddend], ebx  | * | push ebx ",gcc,1
"push ebx  | * | add esp, 14h ",gcc,1
pop me  | * | loc_40DDF8:  ,gcc,1
"loc_40DDF8:   | * | mov [esp+1Ch+lpAddend], ebx ",gcc,1
"mov [esp+1Ch+lpAddend], ebx  | * | push esi ",gcc,1
call _InterlockedDecrement@4   | * | inc dword ptr [ebx+4] ,gcc,1
"push esi  | * | xor eax, eax ",gcc,1
"inc dword ptr [ebx+4]  | * | add esp, 14h ",gcc,1
pop esi  | * | ___gthr_win32_recursive_mutex_lock endp ,gcc,1
retn  | * | public ___gthr_win32_recursive_mutex_trylock ,gcc,1
___gthr_win32_recursive_mutex_lock endp  | * | ___gthr_win32_recursive_mutex_trylock proc near ,gcc,1
___gthr_win32_recursive_mutex_trylock proc near  | * | push esi ,gcc,1
"push ebx  | * | mov ebx, [esp+0Ch+mutex] ",gcc,1
push ebx  | * | call _GetCurrentThreadId@0  ,gcc,1
"mov ebx, [esp+0Ch+mutex]  | * | mov esi, eax ",gcc,1
"mov esi, eax  | * | mov me, 0FFFFFFFFh ",gcc,1
me = eax   | * | me = esi  ,data,1
"mov me, 0FFFFFFFFh  | * | xor ecx, ecx ",gcc,1
"xor ecx, ecx  | * | test eax, eax ",gcc,1
"lock cmpxchg [ebx], ecx  | * | js short loc_40DE44 ",gcc,1
js short loc_40DE44  | * | jz short loc_40DE38 ,gcc,1
"cmp [ebx+8], me  | * | mov eax, 1 ",gcc,1
jz short loc_40DE38  | * | pop ecx ,gcc,1
pop ecx  | * | pop me ,gcc,3
align 4  | * | inc dword ptr [ebx+4] ,gcc,1
"loc_40DE38:   | * | xor eax, eax ",gcc,1
inc dword ptr [ebx+4]  | * | pop ecx ,gcc,1
"align 4  | * | mov dword ptr [ebx+4], 1 ",gcc,1
"loc_40DE44:   | * | mov [ebx+8], me ",gcc,1
"mov dword ptr [ebx+4], 1  | * | xor eax, eax ",gcc,1
"mov [ebx+8], me  | * | pop ecx ",gcc,1
pop me  | * | ___gthr_win32_recursive_mutex_trylock endp ,gcc,1
retn  | * | public ___gthr_win32_recursive_mutex_unlock ,gcc,1
___gthr_win32_recursive_mutex_trylock endp  | * | ___gthr_win32_recursive_mutex_unlock proc near ,gcc,1
"sub esp, 18h  | * | dec dword ptr [ebx+4] ",gcc,1
"mov ebx, [esp+1Ch+mutex]  | * | jz short loc_40DE68 ",gcc,1
dec dword ptr [ebx+4]  | * | loc_40DE61:  ,gcc,1
"jz short loc_40DE68  | * | xor eax, eax ",gcc,1
"loc_40DE61:   | * | add esp, 18h ",gcc,1
pop ebx  | * | loc_40DE68:  ,gcc,1
"retn  | * | mov dword ptr [ebx+8], 0 ",gcc,1
"loc_40DE68:   | * | mov [esp+1Ch+lpAddend], ebx  ",gcc,1
"mov dword ptr [ebx+8], 0  | * | call _InterlockedDecrement@4  ",gcc,1
push edx  | * | js short loc_40DE61 ,gcc,1
"js short loc_40DE61  | * | mov [esp+1Ch+lReleaseCount], 1  ",gcc,1
"mov [esp+1Ch+lpPreviousCount], 0   | * | mov eax, [ebx+0Ch] ",gcc,1
"mov eax, [ebx+0Ch]  | * | call _ReleaseSemaphore@12  ",gcc,1
pop ebx  | * | ___gthr_win32_recursive_mutex_unlock endp ,gcc,1
___gthr_win32_recursive_mutex_unlock endp  | * | _get_ptr_from_atom proc near  ,gcc,1
nAtom = word ptr -2Ch  | * | nSize = dword ptr -24h ,data,1
lpBuffer = dword ptr -28h  | * | ptr_offset = dword ptr 4 ,data,1
nSize = dword ptr -24h  | * | atom = eax  ,data,1
ptr_offset = dword ptr 4  | * | name_buf = edx  ,data,1
atom = eax   | * | name_buf_len = ecx  ,data,1
"push ebx  | * | mov edi, name_buf ",gcc,1
"sub esp, 1Ch  | * | mov esi, [esp+2Ch+ptr_offset] ",gcc,1
"mov edi, name_buf  | * | mov name_buf, name_buf_len ",gcc,1
"mov name_buf, name_buf_len  | * | sub edx, esi ",gcc,1
"sub edx, esi  | * | jg short loc_40DEBF ",gcc,1
"cmp edx, 1Fh  | * | int 3  ",gcc,1
jg short loc_40DEBF  | * | loc_40DEBF:  ,gcc,1
"int 3   | * | mov [esp+2Ch+nSize], name_buf_len  ",gcc,1
"loc_40DEBF:   | * | mov [esp+2Ch+lpBuffer], name_buf  ",gcc,1
"mov [esp+2Ch+nSize], name_buf_len   | * | movzx atom, ax ",gcc,1
"mov [esp+2Ch+lpBuffer], name_buf   | * | mov dword ptr [esp+2Ch+nAtom], atom  ",gcc,1
"movzx atom, ax  | * | call _GetAtomNameA@12  ",gcc,1
"mov dword ptr [esp+2Ch+nAtom], atom   | * | sub esp, 0Ch ",gcc,1
"call _GetAtomNameA@12   | * | test eax, eax ",gcc,1
"sub esp, 0Ch  | * | jnz short loc_40DF10 ",gcc,1
"test eax, eax  | * | int 3  ",gcc,2
"jnz short loc_40DF10  | * | xor ebx, ebx ",gcc,1
"int 3   | * | lea edx, [name_buf+esi] ",gcc,1
"xor ebx, ebx  | * | loc_40DEDF:  ",gcc,1
"lea edx, [name_buf+esi]  | * | mov name_buf, 20h  ",gcc,1
"loc_40DEDF:   | * | mov esi, 1 ",gcc,1
"mov name_buf, 20h   | * | jmp short loc_40DEF2 ",gcc,1
"mov esi, 1  | * | align 4 ",gcc,1
jmp short loc_40DEF2  | * | loc_40DEEC:  ,gcc,1
loc_40DEEC:   | * | inc ebx ,gcc,1
ptr = eax   | * | i = ebx  ,data,2
"inc ebx  | * | cmp i, 20h  ",gcc,2
"cmp i, 20h   | * | loc_40DEF2:  ",gcc,1
"jz short loc_40DF08  | * | cmp byte ptr [edx+ebx], 41h  ",gcc,1
loc_40DEF2:   | * | jnz short loc_40DEEC ,gcc,1
"cmp byte ptr [edx+ebx], 41h   | * | mov ecx, edi ",gcc,1
"jnz short loc_40DEEC  | * | sub ecx, ebx ",gcc,1
"mov ecx, edi  | * | mov ebp, esi ",gcc,1
"sub ecx, ebx  | * | shl ebp, cl ",gcc,1
"mov ebp, esi  | * | or eax, ebp ",gcc,1
"or eax, ebp  | * | inc ebx ",gcc,1
"cmp i, 20h   | * | loc_40DF08:  ",gcc,1
"jnz short loc_40DEF2  | * | add esp, 1Ch ",gcc,1
loc_40DF08:   | * | pop i ,gcc,1
pop i  | * | pop edi ,gcc,1
pop ebp  | * | loc_40DF10:  ,gcc,1
"loc_40DF10:   | * | xor ebx, ebx ",gcc,1
"xor ebx, ebx  | * | lea edx, [name_buf+esi] ",gcc,1
"xor eax, eax  | * | jmp short loc_40DEDF ",gcc,1
"lea edx, [name_buf+esi]  | * | _get_ptr_from_atom endp ",gcc,1
jmp short loc_40DEDF  | * | align 4 ,gcc,1
_get_ptr_from_atom endp  | * | public ___shmem_grab ,gcc,1
align 4  | * | ___shmem_grab proc near  ,gcc,1
Name = byte ptr -2Ch  | * | name_len = dword ptr -20h ,data,1
var_24 = dword ptr -24h  | * | hmutex = dword ptr -1Ch ,data,1
name_len = dword ptr -20h  | * | name = dword ptr 8 ,data,1
hmutex = dword ptr -1Ch  | * | size = dword ptr 0Ch ,data,1
name = dword ptr 8  | * | initfunc = dword ptr 10h ,data,1
"push ebx  | * | xor eax, eax ",gcc,1
"sub esp, 2Ch  | * | mov ecx, 0FFFFFFFFh ",gcc,1
"xor eax, eax  | * | mov edi, [ebp+name] ",gcc,1
"mov edi, [ebp+name]  | * | mov edx, ecx ",gcc,1
repne scasb  | * | not edx ,gcc,1
"mov edx, ecx  | * | lea eax, [edx-1] ",gcc,1
"not edx  | * | mov [ebp+name_len], eax ",gcc,1
"mov [ebp+name_len], eax  | * | lea name_len_0, [edx+0Eh] ",gcc,1
"lea name_len_0, [edx+0Eh]  | * | lea eax, [edx+3Fh] ",gcc,1
"mov [ebp+var_24], eax  | * | and eax, 0FFFFFFF0h ",gcc,1
"lea eax, [edx+3Fh]  | * | call ___chkstk_ms ",gcc,1
"call ___chkstk_ms  | * | lea ebx, [esp+38h+Name] ",gcc,1
"sub esp, eax  | * | mov esi, offset aGccShmemTdm2  ",gcc,1
"lea ebx, [esp+38h+Name]  | * | mov ecx, 0Eh ",gcc,1
"mov esi, offset aGccShmemTdm2   | * | mov edi, ebx ",gcc,1
"mov ecx, 0Eh  | * | rep movsb ",gcc,1
"mov edi, ebx  | * | mov byte ptr [esp+1Ah], 2Dh  ",gcc,1
"rep movsb  | * | lea eax, [esp+1Bh] ",gcc,1
"mov byte ptr [esp+1Ah], 2Dh   | * | mov edi, eax ",gcc,1
"lea eax, [esp+1Bh]  | * | mov esi, [ebp+name] ",gcc,1
"mov edi, eax  | * | mov ecx, [ebp+name_len] ",gcc,1
"mov esi, [ebp+name]  | * | rep movsb ",gcc,1
"mov ecx, [ebp+name_len]  | * | lea esi, [ebx+edx+0Fh] ",gcc,1
"rep movsb  | * | mov cl, 20h  ",gcc,1
"lea esi, [ebx+edx+0Fh]  | * | mov al, 61h  ",gcc,1
"mov cl, 20h   | * | mov edi, esi ",gcc,1
"mov al, 61h   | * | rep stosb ",gcc,1
"mov edi, esi  | * | lea edi, [edx+2Fh] ",gcc,1
"rep stosb  | * | mov byte ptr [esp+edi+0Ch], 0 ",gcc,1
"lea edi, [edx+2Fh]  | * | mov edx, [ebp+var_24] ",gcc,1
"mov byte ptr [esp+edi+0Ch], 0  | * | mov byte ptr [esp+edx+0Ch], 0 ",gcc,1
"mov edx, [ebp+var_24]  | * | mov [esp+8], ebx  ",gcc,1
"mov byte ptr [esp+edx+0Ch], 0  | * | mov dword ptr [esp+4], 0  ",gcc,1
"mov [esp+8], ebx   | * | mov dword ptr [esp], 0  ",gcc,1
"mov dword ptr [esp+4], 0   | * | call _CreateMutexA@12  ",gcc,1
"mov dword ptr [esp], 0   | * | sub esp, 0Ch ",gcc,1
"call _CreateMutexA@12   | * | mov [ebp+hmutex], eax ",gcc,1
"mov [ebp+hmutex], eax  | * | mov edx, [ebp+var_24] ",gcc,1
"mov edx, [ebp+var_24]  | * | mov dword ptr [esp+4], 0FFFFFFFFh  ",gcc,1
"mov byte ptr [ebx+edx], 2Dh   | * | mov [esp], hmutex_0  ",gcc,1
"mov dword ptr [esp+4], 0FFFFFFFFh   | * | call _WaitForSingleObject@8  ",gcc,1
"mov [esp], hmutex_0   | * | sub esp, 8 ",gcc,1
"sub esp, 8  | * | jz short loc_40DFCC ",gcc,1
jz short loc_40DFCC  | * | loc_40DFCC:  ,gcc,1
"int 3   | * | mov [esp], ebx  ",gcc,1
loc_40DFCC:   | * | call _FindAtomA@4  ,gcc,1
"mov [esp], ebx   | * | push ecx ",gcc,1
"push ecx  | * | test ax, ax ",gcc,1
"test ax, ax  | * | mov atom, [ebp+size] ",gcc,1
"jnz loc_40E064  | * | mov [esp], eax  ",gcc,1
"mov atom, [ebp+size]  | * | call _malloc ",gcc,1
"mov [esp], eax   | * | mov esi, eax ",gcc,1
"mov esi, eax  | * | mov edx, [ebp+name_len] ",gcc,1
"mov edx, [ebp+name_len]  | * | mov [ebp+name_len], edx ",gcc,1
"add edx, 10h  | * | mov shared_mem, edx ",gcc,1
"mov shared_mem, edx  | * | add eax, ebx ",gcc,1
"add eax, ebx  | * | lea shared_mem, [shared_mem+0] ",gcc,1
"mov ecx, 20h   | * | loc_40E000:  ",gcc,1
"lea shared_mem, [shared_mem+0]  | * | mov edx, shared_mem ",gcc,1
"loc_40E000:   | * | shr edx, cl ",gcc,1
"mov edx, shared_mem  | * | and edx, 1 ",gcc,1
"shr edx, cl  | * | jz short loc_40E00C ",gcc,1
"and edx, 1  | * | mov byte ptr [eax], 41h  ",gcc,1
jz short loc_40E00C  | * | loc_40E00C:  ,gcc,1
"mov byte ptr [eax], 41h   | * | inc eax ",gcc,1
loc_40E00C:   | * | dec ecx ,gcc,1
inc eax  | * | jnz short loc_40E000 ,gcc,1
"dec ecx  | * | mov [esp], ebx  ",gcc,1
jnz short loc_40E000  | * | call _AddAtomA@4  ,gcc,1
"mov [esp], ebx   | * | push edx ",gcc,1
"push edx  | * | test ax, ax ",gcc,1
"test ax, ax  | * | loc_40E01E:  ",gcc,1
"jz short loc_40E060  | * | movzx atom, ax  ",gcc,1
"loc_40E01E:   | * | mov edx, [ebp+name_len] ",gcc,1
"movzx atom, ax   | * | mov [esp], edx  ",gcc,1
"mov edx, [ebp+name_len]  | * | mov ecx, edi  ",gcc,1
"mov [esp], edx   | * | mov edx, ebx  ",gcc,2
"mov ecx, edi   | * | call _get_ptr_from_atom ",gcc,2
"mov edx, ebx   | * | mov ebx, eax ",gcc,2
"mov ebx, eax  | * | cmp ret, shared_mem ",gcc,1
"cmp ret, shared_mem  | * | mov [esp], shared_mem  ",gcc,1
jz short loc_40E07D  | * | call _free ,gcc,1
"mov [esp], shared_mem   | * | loc_40E03E:  ",gcc,1
"call _free  | * | mov eax, [ebp+hmutex] ",gcc,1
"loc_40E03E:   | * | mov [esp], eax  ",gcc,1
"mov eax, [ebp+hmutex]  | * | call _ReleaseMutex@4  ",gcc,1
"mov [esp], eax   | * | push eax ",gcc,1
"call _ReleaseMutex@4   | * | mov eax, [ebp+hmutex] ",gcc,1
"push eax  | * | mov [esp], eax  ",gcc,1
"mov eax, [ebp+hmutex]  | * | call _CloseHandle@4  ",gcc,1
"mov [esp], eax   | * | push edx ",gcc,1
"call _CloseHandle@4   | * | mov eax, ret ",gcc,1
"push edx  | * | lea esp, [ebp-0Ch] ",gcc,1
"mov eax, ret  | * | pop ret ",gcc,1
pop ret  | * | pop esi ,gcc,1
pop ebp  | * | loc_40E060:  ,gcc,1
int 3  | * | align 4 ,gcc,1
jmp short loc_40E01E  | * | loc_40E064:  ,gcc,1
"align 4  | * | movzx atom, ax  ",gcc,1
"loc_40E064:   | * | mov edx, [ebp+name_len] ",gcc,1
"movzx atom, ax   | * | add edx, 10h ",gcc,1
"mov edx, [ebp+name_len]  | * | mov [esp], edx  ",gcc,1
"add edx, 10h  | * | mov ecx, edi  ",gcc,1
"mov ebx, eax  | * | jmp short loc_40E03E ",gcc,1
"loc_40E07D:   | * | xor ret, ret ",gcc,1
shared_mem = esi   | * | ret = ebx  ,data,1
"xor ret, ret  | * | mov edi, shared_mem ",gcc,1
"mov edi, shared_mem  | * | rep stosb ",gcc,1
"mov ecx, [ebp+size]  | * | mov ecx, [ebp+initfunc] ",gcc,1
"rep stosb  | * | test ecx, ecx ",gcc,1
"mov ecx, [ebp+initfunc]  | * | jz short loc_40E03E ",gcc,1
"test ecx, ecx  | * | mov [esp], shared_mem ",gcc,1
"jz short loc_40E03E  | * | mov eax, [ebp+initfunc] ",gcc,1
"mov [esp], shared_mem  | * | call eax ",gcc,1
"mov eax, [ebp+initfunc]  | * | jmp short loc_40E03E ",gcc,1
call eax  | * | ___shmem_grab endp ,gcc,1
jmp short loc_40E03E  | * | align 4 ,gcc,1
___shmem_grab endp  | * | public ___chkstk_ms ,gcc,1
align 4  | * | ___chkstk_ms proc near  ,gcc,1
___chkstk_ms proc near   | * | push ecx ,gcc,1
"push ecx  | * | cmp eax, 1000h ",gcc,1
"push eax  | * | lea ecx, [esp+8+arg_0] ",gcc,1
"cmp eax, 1000h  | * | jb short loc_40E0BA ",gcc,1
"lea ecx, [esp+8+arg_0]  | * | loc_40E0A5:  ",gcc,1
"jb short loc_40E0BA  | * | sub ecx, 1000h ",gcc,1
"loc_40E0A5:   | * | or dword ptr [ecx], 0 ",gcc,1
"sub ecx, 1000h  | * | sub eax, 1000h ",gcc,1
"or dword ptr [ecx], 0  | * | cmp eax, 1000h ",gcc,1
"sub eax, 1000h  | * | ja short loc_40E0A5 ",gcc,1
"cmp eax, 1000h  | * | loc_40E0BA:  ",gcc,1
"ja short loc_40E0A5  | * | sub ecx, eax ",gcc,1
"loc_40E0BA:   | * | or dword ptr [ecx], 0 ",gcc,1
"sub ecx, eax  | * | pop eax ",gcc,1
"or dword ptr [ecx], 0  | * | pop ecx ",gcc,1
pop eax  | * | retn ,gcc,1
pop ecx  | * | ___chkstk_ms endp ,gcc,1
___chkstk_ms endp  | * | align 4 ,gcc,1
align 4  | * | align 4 ,gcc,52
align 4  | * | align 10h ,gcc,1
align 4  | * | public ___mingwthr_remove_key_dtor ,gcc,1
align 10h  | * | ___mingwthr_remove_key_dtor proc near ,gcc,1
public ___mingwthr_remove_key_dtor  | * | jmp ____w64_mingwthr_remove_key_dtor ,gcc,1
___mingwthr_remove_key_dtor proc near  | * | ___mingwthr_remove_key_dtor endp ,gcc,1
jmp ____w64_mingwthr_remove_key_dtor  | * | align 10h ,gcc,1
___mingwthr_remove_key_dtor endp  | * | public ___mingwthr_key_dtor ,gcc,1
align 10h  | * | ___mingwthr_key_dtor proc near  ,gcc,1
"___mingwthr_key_dtor proc near   | * | mov eax, [esp+arg_4] ",gcc,1
"mov eax, [esp+arg_4]  | * | jz short loc_40E2A0 ",gcc,1
"test eax, eax  | * | jmp ____w64_mingwthr_add_key_dtor ",gcc,1
jz short loc_40E2A0  | * | align 10h ,gcc,1
jmp ____w64_mingwthr_add_key_dtor  | * | loc_40E2A0:  ,gcc,1
loc_40E2A0:   | * | retn ,gcc,1
"xor eax, eax  | * | ___mingwthr_key_dtor endp ",gcc,1
___mingwthr_key_dtor endp  | * | public __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_j ,gcc,1
align 10h  | * | __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_j proc near ,gcc,1
"push ebp  | * | sub esp, 28h ",gcc,8
"mov ebp, esp  | * | mov [ebp+var_C], ecx ",gcc,15
"sub esp, 28h  | * | mov eax, [ebp+arg_0] ",gcc,1
"mov [ebp+var_C], ecx  | * | mov [esp], eax  ",gcc,1
"mov eax, [ebp+arg_0]  | * | call __ZdlPv  ",gcc,1
"mov [esp], eax   | * | leave ",gcc,2
call __ZdlPv   | * | retn 8 ,gcc,1
leave  | * | __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_j endp ,gcc,1
retn 8  | * | public __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEjPKv ,gcc,1
__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_j endp  | * | __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEjPKv proc near ,gcc,1
"sub esp, 28h  | * | mov eax, [ebp+var_C] ",gcc,4
"mov [ebp+var_C], ecx  | * | mov ecx, eax ",gcc,11
"mov eax, [ebp+var_C]  | * | call __ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv  ",gcc,1
"mov ecx, eax  | * | cmp eax, [ebp+arg_0] ",gcc,1
call __ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv   | * | setb al ,gcc,1
"cmp eax, [ebp+arg_0]  | * | test al, al ",gcc,1
setb al  | * | jz short loc_40E2EA ,gcc,1
"test al, al  | * | call __ZSt17__throw_bad_allocv  ",gcc,1
jz short loc_40E2EA  | * | loc_40E2EA:  ,gcc,1
"call __ZSt17__throw_bad_allocv   | * | mov edx, [ebp+arg_0] ",gcc,1
"loc_40E2EA:   | * | mov eax, edx ",gcc,1
"mov edx, [ebp+arg_0]  | * | shl eax, 2 ",gcc,1
"shl eax, 2  | * | shl eax, 2 ",gcc,1
"add eax, edx  | * | mov [esp], eax  ",gcc,1
"shl eax, 2  | * | call __Znwj  ",gcc,1
call __Znwj   | * | retn 8 ,gcc,1
leave  | * | __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEjPKv endp ,gcc,1
__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEjPKv endp  | * | public __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev ,gcc,1
align 4  | * | __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev proc near ,gcc,1
__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev proc near  | * | push ebp ,gcc,1
"push ebp  | * | sub esp, 4 ",gcc,19
"mov ebp, esp  | * | mov [ebp+var_4], ecx ",gcc,20
"sub esp, 4  | * | leave ",gcc,12
"mov [ebp+var_4], ecx  | * | retn ",gcc,4
leave  | * | __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev endp ,gcc,1
__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev endp  | * | public __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev ,gcc,1
align 10h  | * | __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev proc near ,gcc,1
__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev proc near  | * | push ebp ,gcc,1
leave  | * | __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev endp ,gcc,1
__ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev endp  | * | public __ZN9__gnu_cxx13new_allocatorIiE7destroyEPi ,gcc,1
align 4  | * | __ZN9__gnu_cxx13new_allocatorIiE7destroyEPi proc near ,gcc,1
__ZN9__gnu_cxx13new_allocatorIiE7destroyEPi proc near  | * | push ebp ,gcc,1
"mov [ebp+var_4], ecx  | * | retn 4 ",gcc,1
leave  | * | __ZN9__gnu_cxx13new_allocatorIiE7destroyEPi endp ,gcc,1
__ZN9__gnu_cxx13new_allocatorIiE7destroyEPi endp  | * | public __ZN9__gnu_cxx13new_allocatorIiE9constructEPiRKi ,gcc,1
align 4  | * | __ZN9__gnu_cxx13new_allocatorIiE9constructEPiRKi proc near ,gcc,1
var_4 = dword ptr -4  | * | arg_4 = dword ptr 0Ch ,data,4
"push ebp  | * | sub esp, 0Ch ",gcc,1
"sub esp, 0Ch  | * | mov eax, [ebp+arg_0] ",gcc,1
"mov [ebp+var_4], ecx  | * | mov [esp+4], eax  ",gcc,1
"mov eax, [ebp+arg_0]  | * | mov dword ptr [esp], 4  ",gcc,1
"mov [esp+4], eax   | * | call __ZnwjPv  ",gcc,1
"mov dword ptr [esp], 4   | * | test eax, eax ",gcc,1
call __ZnwjPv   | * | jz short locret_40E353 ,gcc,1
"test eax, eax  | * | mov edx, [ebp+arg_4] ",gcc,1
"jz short locret_40E353  | * | mov edx, [edx] ",gcc,1
"mov edx, [ebp+arg_4]  | * | mov [eax], edx ",gcc,1
"mov edx, [edx]  | * | locret_40E353:  ",gcc,1
"mov [eax], edx  | * | leave ",gcc,1
locret_40E353:   | * | retn 8 ,gcc,1
leave  | * | __ZN9__gnu_cxx13new_allocatorIiE9constructEPiRKi endp ,gcc,1
__ZN9__gnu_cxx13new_allocatorIiE9constructEPiRKi endp  | * | public __ZN9__gnu_cxx13new_allocatorIiEC2Ev ,gcc,1
align 4  | * | __ZN9__gnu_cxx13new_allocatorIiEC2Ev proc near ,gcc,1
__ZN9__gnu_cxx13new_allocatorIiEC2Ev proc near  | * | push ebp ,gcc,1
leave  | * | __ZN9__gnu_cxx13new_allocatorIiEC2Ev endp ,gcc,1
__ZN9__gnu_cxx13new_allocatorIiEC2Ev endp  | * | public __ZN9__gnu_cxx13new_allocatorIiED2Ev ,gcc,1
align 4  | * | __ZN9__gnu_cxx13new_allocatorIiED2Ev proc near ,gcc,1
__ZN9__gnu_cxx13new_allocatorIiED2Ev proc near  | * | push ebp ,gcc,1
leave  | * | __ZN9__gnu_cxx13new_allocatorIiED2Ev endp ,gcc,1
__ZN9__gnu_cxx13new_allocatorIiED2Ev endp  | * | public __ZN9__gnu_cxx24__concurrence_lock_errorD0Ev ,gcc,1
align 10h  | * | __ZN9__gnu_cxx24__concurrence_lock_errorD0Ev proc near ,gcc,1
"sub esp, 18h  | * | mov dword ptr [ecx], offset off_416340 ",gcc,1
"mov ebx, ecx  | * | call __ZNSt9exceptionD1Ev  ",gcc,2
"mov dword ptr [ecx], offset off_416340  | * | mov [esp+1Ch+var_1C], ebx  ",gcc,1
call __ZNSt9exceptionD1Ev   | * | call __ZdlPv  ,gcc,2
pop ebx  | * | __ZN9__gnu_cxx24__concurrence_lock_errorD0Ev endp ,gcc,1
__ZN9__gnu_cxx24__concurrence_lock_errorD0Ev endp  | * | public __ZN9__gnu_cxx24__concurrence_lock_errorD1Ev ,gcc,1
align 10h  | * | __ZN9__gnu_cxx24__concurrence_lock_errorD1Ev proc near ,gcc,1
"public __ZN9__gnu_cxx24__concurrence_lock_errorD1Ev  | * | mov dword ptr [ecx], offset off_416340 ",gcc,1
__ZN9__gnu_cxx24__concurrence_lock_errorD1Ev proc near  | * | jmp __ZNSt9exceptionD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416340  | * | __ZN9__gnu_cxx24__concurrence_lock_errorD1Ev endp ",gcc,1
__ZN9__gnu_cxx24__concurrence_lock_errorD1Ev endp  | * | public __ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev ,gcc,1
align 4  | * | __ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev proc near ,gcc,1
"sub esp, 18h  | * | mov dword ptr [ecx], offset off_416358 ",gcc,1
"mov dword ptr [ecx], offset off_416358  | * | mov [esp+1Ch+var_1C], ebx  ",gcc,1
pop ebx  | * | __ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev endp ,gcc,1
__ZN9__gnu_cxx26__concurrence_unlock_errorD0Ev endp  | * | public __ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev ,gcc,1
align 4  | * | __ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev proc near ,gcc,1
"public __ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev  | * | mov dword ptr [ecx], offset off_416358 ",gcc,1
__ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev proc near  | * | jmp __ZNSt9exceptionD1Ev  ,gcc,1
"mov dword ptr [ecx], offset off_416358  | * | __ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev endp ",gcc,1
__ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev endp  | * | public __ZN9__gnu_cxx30__throw_concurrence_lock_errorEv ,gcc,1
align 4  | * | __ZN9__gnu_cxx30__throw_concurrence_lock_errorEv proc near ,gcc,1
"mov [esp+1Ch+thrown_size], 4   | * | mov dword ptr [eax], offset off_416340 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+1Ch+var_14], offset __ZN9__gnu_cxx24__concurrence_lock_errorD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416340  | * | mov [esp+1Ch+lptinfo], offset __ZTIN9__gnu_cxx24__concurrence_lock_errorE  ",gcc,1
"mov [esp+1Ch+var_14], offset __ZN9__gnu_cxx24__concurrence_lock_errorD1Ev   | * | mov [esp+1Ch+thrown_size], eax  ",gcc,1
"mov [esp+1Ch+lptinfo], offset __ZTIN9__gnu_cxx24__concurrence_lock_errorE   | * | call ___cxa_throw ",gcc,1
"mov [esp+1Ch+thrown_size], eax   | * | __ZN9__gnu_cxx30__throw_concurrence_lock_errorEv endp ",gcc,1
__ZN9__gnu_cxx30__throw_concurrence_lock_errorEv endp  | * | public __ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv ,gcc,1
align 4  | * | __ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv proc near ,gcc,1
"mov [esp+1Ch+thrown_size], 4   | * | mov dword ptr [eax], offset off_416358 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+1Ch+var_14], offset __ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416358  | * | mov [esp+1Ch+lptinfo], offset __ZTIN9__gnu_cxx26__concurrence_unlock_errorE  ",gcc,1
"mov [esp+1Ch+var_14], offset __ZN9__gnu_cxx26__concurrence_unlock_errorD1Ev   | * | mov [esp+1Ch+thrown_size], eax  ",gcc,1
"mov [esp+1Ch+lptinfo], offset __ZTIN9__gnu_cxx26__concurrence_unlock_errorE   | * | call ___cxa_throw ",gcc,1
"mov [esp+1Ch+thrown_size], eax   | * | __ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv endp ",gcc,1
__ZN9__gnu_cxx32__throw_concurrence_unlock_errorEv endp  | * | public __ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_ ,gcc,1
align 4  | * | __ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_ proc near ,gcc,1
"mov eax, [esp+arg_4]  | * | mov ecx, [eax] ",gcc,2
"mov edx, [esp+arg_0]  | * | cmp [edx], ecx ",gcc,2
"mov ecx, [eax]  | * | setz al ",gcc,2
"cmp [edx], ecx  | * | retn ",gcc,2
setz al  | * | __ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_ endp ,gcc,1
retn  | * | public __ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_ ,gcc,1
__ZN9__gnu_cxxeqIPKcSsEEbRKNS_17__normal_iteratorIT_T0_EES8_ endp  | * | __ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_ proc near ,gcc,1
setz al  | * | __ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_ endp ,gcc,1
retn  | * | public __ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv ,gcc,1
__ZN9__gnu_cxxeqIPcSsEEbRKNS_17__normal_iteratorIT_T0_EES7_ endp  | * | __ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv proc near ,gcc,1
__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv proc near  | * | push ebp ,gcc,1
"sub esp, 4  | * | mov eax, 0CCCCCCCh ",gcc,1
"mov [ebp+var_4], ecx  | * | leave ",gcc,3
"mov eax, 0CCCCCCCh  | * | retn ",gcc,1
leave  | * | __ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv endp ,gcc,1
retn  | * | public __ZNK9__gnu_cxx24__concurrence_lock_error4whatEv ,gcc,1
__ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8max_sizeEv endp  | * | __ZNK9__gnu_cxx24__concurrence_lock_error4whatEv proc near ,gcc,1
"__ZNK9__gnu_cxx24__concurrence_lock_error4whatEv proc near  | * | mov eax, offset aGnuCxxConcurre  ",gcc,1
"mov eax, offset aGnuCxxConcurre   | * | __ZNK9__gnu_cxx24__concurrence_lock_error4whatEv endp ",gcc,1
__ZNK9__gnu_cxx24__concurrence_lock_error4whatEv endp  | * | public __ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv ,gcc,1
align 10h  | * | __ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv proc near ,gcc,1
"__ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv proc near  | * | mov eax, offset aGnuCxxConcurre_0  ",gcc,1
"mov eax, offset aGnuCxxConcurre_0   | * | __ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv endp ",gcc,1
__ZNK9__gnu_cxx26__concurrence_unlock_error4whatEv endp  | * | public __ZNKSs11_M_disjunctEPKc ,gcc,1
align 4  | * | __ZNKSs11_M_disjunctEPKc proc near ,gcc,1
"__ZNKSs11_M_disjunctEPKc proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | jb short loc_40E480 ",gcc,1
"cmp [esp+this], eax  | * | add eax, [eax-0Ch] ",gcc,1
"jb short loc_40E480  | * | cmp [esp+this], eax ",gcc,1
"add eax, [eax-0Ch]  | * | setnbe al ",gcc,1
"cmp [esp+this], eax  | * | retn 4 ",gcc,1
setnbe al  | * | align 10h ,gcc,1
retn 4  | * | loc_40E480:  ,gcc,1
loc_40E480:   | * | retn 4 ,gcc,1
"mov al, 1  | * | __ZNKSs11_M_disjunctEPKc endp ",gcc,1
__ZNKSs11_M_disjunctEPKc endp  | * | public __ZNKSs12find_last_ofEPKcj ,gcc,1
align 4  | * | __ZNKSs12find_last_ofEPKcj proc near ,gcc,1
"push edi  | * | sub esp, 14h ",gcc,14
"sub esp, 14h  | * | mov edx, [esp+1Ch+this] ",gcc,9
"mov ebx, ecx  | * | mov edi, edx ",gcc,12
"mov edx, [esp+1Ch+this]  | * | xor eax, eax ",gcc,8
"mov edi, edx  | * | mov ecx, 0FFFFFFFFh ",gcc,12
"xor eax, eax  | * | repne scasb ",gcc,13
"mov ecx, 0FFFFFFFFh  | * | not ecx ",gcc,13
"not ecx  | * | mov [esp+1Ch+var_14], eax  ",gcc,7
"lea eax, [ecx-1]  | * | mov eax, [esp+1Ch+arg_4] ",gcc,6
"mov [esp+1Ch+var_14], eax   | * | mov [esp+1Ch+var_18], eax  ",gcc,11
"mov eax, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_1C], edx  ",gcc,6
"mov [esp+1Ch+var_18], eax   | * | mov ecx, ebx ",gcc,11
"mov [esp+1Ch+var_1C], edx   | * | call __ZNKSs12find_last_ofEPKcjj  ",gcc,1
"mov ecx, ebx  | * | sub esp, 0Ch ",gcc,9
"call __ZNKSs12find_last_ofEPKcjj   | * | add esp, 14h ",gcc,1
"sub esp, 0Ch  | * | pop ebx ",gcc,9
"add esp, 14h  | * | pop edi ",gcc,14
pop ebx  | * | retn 8 ,gcc,13
pop edi  | * | __ZNKSs12find_last_ofEPKcj endp ,gcc,1
retn 8  | * | public __ZNKSs12find_last_ofEPKcjj ,gcc,1
__ZNKSs12find_last_ofEPKcj endp  | * | __ZNKSs12find_last_ofEPKcjj proc near  ,gcc,1
"push ebx  | * | mov esi, [ecx] ",gcc,1
"sub esp, 14h  | * | mov eax, [esi-0Ch] ",gcc,1
"mov esi, [ecx]  | * | test eax, eax ",gcc,2
"mov eax, [esi-0Ch]  | * | jnz short loc_40E4E4 ",gcc,1
"test eax, eax  | * | loc_40E4D2:  ",gcc,1
"jnz short loc_40E4E4  | * | mov ebx, 0FFFFFFFFh ",gcc,1
loc_40E4D2:   | * | loc_40E4D7:  ,gcc,1
"mov ebx, 0FFFFFFFFh  | * | mov eax, ebx ",gcc,4
"loc_40E4D7:   | * | add esp, 14h ",gcc,1
retn 0Ch  | * | loc_40E4E4:  ,gcc,1
"align 4  | * | mov edx, [esp+1Ch+arg_8] ",gcc,1
"loc_40E4E4:   | * | test edx, edx ",gcc,1
"mov edx, [esp+1Ch+arg_8]  | * | jz short loc_40E4D2 ",gcc,1
"test edx, edx  | * | dec eax ",gcc,1
"jz short loc_40E4D2  | * | mov ebx, [esp+1Ch+arg_4] ",gcc,1
"dec eax  | * | cmp ebx, eax ",gcc,2
"mov ebx, [esp+1Ch+arg_4]  | * | ja short loc_40E51F ",gcc,1
"cmp ebx, eax  | * | lea esi, [esi+0] ",gcc,2
ja short loc_40E51F  | * | loc_40E4F8:  ,gcc,1
"lea esi, [esi+0]  | * | mov eax, [esp+1Ch+arg_8] ",gcc,1
"loc_40E4F8:   | * | mov [esp+1Ch+var_14], eax  ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | movsx eax, byte ptr [esi+ebx] ",gcc,1
"movsx eax, byte ptr [esi+ebx]  | * | mov eax, [esp+1Ch+this] ",gcc,1
"mov [esp+1Ch+var_18], eax   | * | mov [esp+1Ch+var_1C], eax  ",gcc,7
"mov eax, [esp+1Ch+this]  | * | call _memchr ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | test eax, eax ",gcc,7
call _memchr  | * | jnz short loc_40E4D7 ,gcc,1
"test eax, eax  | * | lea eax, [ebx-1] ",gcc,3
"jnz short loc_40E4D7  | * | test ebx, ebx ",gcc,1
"lea eax, [ebx-1]  | * | jz short loc_40E4D2 ",gcc,1
"test ebx, ebx  | * | loc_40E51F:  ",gcc,1
"jz short loc_40E4D2  | * | mov ebx, eax ",gcc,1
loc_40E51F:   | * | jmp short loc_40E4F8 ,gcc,1
"mov ebx, eax  | * | __ZNKSs12find_last_ofEPKcjj endp ",gcc,1
jmp short loc_40E4F8  | * | align 4 ,gcc,1
__ZNKSs12find_last_ofEPKcjj endp  | * | public __ZNKSs12find_last_ofERKSsj ,gcc,1
align 4  | * | __ZNKSs12find_last_ofERKSsj proc near ,gcc,1
"sub esp, 1Ch  | * | mov eax, [eax] ",gcc,8
"mov eax, [esp+1Ch+this]  | * | mov edx, [eax-0Ch] ",gcc,6
"mov eax, [eax]  | * | mov [esp+1Ch+var_14], edx  ",gcc,7
"mov edx, [eax-0Ch]  | * | mov edx, [esp+1Ch+arg_4] ",gcc,6
"mov [esp+1Ch+var_14], edx   | * | mov [esp+1Ch+var_18], edx  ",gcc,6
"mov edx, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_1C], eax  ",gcc,6
"mov [esp+1Ch+var_18], edx   | * | call __ZNKSs12find_last_ofEPKcjj  ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | sub esp, 0Ch ",gcc,9
"call __ZNKSs12find_last_ofEPKcjj   | * | add esp, 1Ch ",gcc,1
"sub esp, 0Ch  | * | retn 8 ",gcc,7
"add esp, 1Ch  | * | __ZNKSs12find_last_ofERKSsj endp ",gcc,1
__ZNKSs12find_last_ofERKSsj endp  | * | public __ZNKSs12find_last_ofEcj ,gcc,1
align 10h  | * | __ZNKSs12find_last_ofEcj proc near ,gcc,1
"push ebx  | * | mov ecx, [ecx] ",gcc,2
"mov bl, byte ptr [esp+4+this]  | * | mov eax, [ecx-0Ch] ",gcc,2
"mov ecx, [ecx]  | * | test eax, eax ",gcc,2
"mov eax, [ecx-0Ch]  | * | jnz short loc_40E568 ",gcc,1
"test eax, eax  | * | mov eax, 0FFFFFFFFh ",gcc,2
jnz short loc_40E568  | * | loc_40E563:  ,gcc,1
"mov eax, 0FFFFFFFFh  | * | pop ebx ",gcc,5
loc_40E563:   | * | retn 8 ,gcc,1
retn 8  | * | loc_40E568:  ,gcc,1
"align 4  | * | lea edx, [eax-1] ",gcc,2
"loc_40E568:   | * | mov eax, dword ptr [esp+4+arg_4] ",gcc,1
"lea edx, [eax-1]  | * | cmp eax, edx ",gcc,2
"mov eax, dword ptr [esp+4+arg_4]  | * | ja short loc_40E581 ",gcc,1
"cmp eax, edx  | * | nop ",gcc,2
ja short loc_40E581  | * | loc_40E574:  ,gcc,1
"nop  | * | cmp eax, 0FFFFFFFFh ",gcc,2
loc_40E574:   | * | jz short loc_40E563 ,gcc,1
"cmp eax, 0FFFFFFFFh  | * | lea edx, [eax-1] ",gcc,2
"jz short loc_40E563  | * | cmp bl, [ecx+eax] ",gcc,1
"lea edx, [eax-1]  | * | jz short loc_40E563 ",gcc,1
"cmp bl, [ecx+eax]  | * | loc_40E581:  ",gcc,1
"jz short loc_40E563  | * | mov eax, edx ",gcc,1
loc_40E581:   | * | jmp short loc_40E574 ,gcc,1
"mov eax, edx  | * | __ZNKSs12find_last_ofEcj endp ",gcc,1
jmp short loc_40E574  | * | align 4 ,gcc,1
__ZNKSs12find_last_ofEcj endp  | * | public __ZNKSs13find_first_ofEPKcj ,gcc,1
align 4  | * | __ZNKSs13find_first_ofEPKcj proc near ,gcc,1
"mov [esp+1Ch+var_1C], edx   | * | call __ZNKSs13find_first_ofEPKcjj  ",gcc,1
"call __ZNKSs13find_first_ofEPKcjj   | * | add esp, 14h ",gcc,1
pop edi  | * | __ZNKSs13find_first_ofEPKcj endp ,gcc,1
retn 8  | * | public __ZNKSs13find_first_ofEPKcjj ,gcc,1
__ZNKSs13find_first_ofEPKcj endp  | * | __ZNKSs13find_first_ofEPKcjj proc near  ,gcc,1
"sub esp, 1Ch  | * | mov esi, [esp+2Ch+arg_8] ",gcc,2
"mov ebx, [esp+2Ch+arg_4]  | * | test esi, esi ",gcc,1
"mov esi, [esp+2Ch+arg_8]  | * | jz short loc_40E601 ",gcc,1
"test esi, esi  | * | mov edi, [ecx] ",gcc,1
"jz short loc_40E601  | * | mov ebp, [edi-0Ch] ",gcc,1
"mov edi, [ecx]  | * | cmp ebp, ebx ",gcc,1
"mov ebp, [edi-0Ch]  | * | jbe short loc_40E601 ",gcc,1
"cmp ebp, ebx  | * | loc_40E5E0:  ",gcc,1
"jbe short loc_40E601  | * | mov [esp+2Ch+var_24], esi  ",gcc,1
"loc_40E5E0:   | * | movsx eax, byte ptr [edi+ebx] ",gcc,1
"mov [esp+2Ch+var_24], esi   | * | mov [esp+2Ch+var_28], eax  ",gcc,1
"movsx eax, byte ptr [edi+ebx]  | * | mov eax, [esp+2Ch+this] ",gcc,1
"mov [esp+2Ch+var_28], eax   | * | mov [esp+2Ch+var_2C], eax  ",gcc,2
"mov eax, [esp+2Ch+this]  | * | call _memchr ",gcc,1
call _memchr  | * | jnz short loc_40E606 ,gcc,1
"test eax, eax  | * | inc ebx ",gcc,1
"jnz short loc_40E606  | * | cmp ebp, ebx ",gcc,1
inc ebx  | * | ja short loc_40E5E0 ,gcc,1
"cmp ebp, ebx  | * | loc_40E601:  ",gcc,1
"ja short loc_40E5E0  | * | mov ebx, 0FFFFFFFFh ",gcc,1
loc_40E601:   | * | loc_40E606:  ,gcc,1
"loc_40E606:   | * | add esp, 1Ch ",gcc,1
pop ebp  | * | __ZNKSs13find_first_ofEPKcjj endp ,gcc,1
__ZNKSs13find_first_ofEPKcjj endp  | * | public __ZNKSs13find_first_ofERKSsj ,gcc,1
align 4  | * | __ZNKSs13find_first_ofERKSsj proc near ,gcc,1
"mov [esp+1Ch+var_18], edx   | * | call __ZNKSs13find_first_ofEPKcjj  ",gcc,1
"call __ZNKSs13find_first_ofEPKcjj   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __ZNKSs13find_first_ofERKSsj endp ",gcc,1
__ZNKSs13find_first_ofERKSsj endp  | * | public __ZNKSs13find_first_ofEcj ,gcc,1
align 10h  | * | __ZNKSs13find_first_ofEcj proc near ,gcc,1
"__ZNKSs13find_first_ofEcj proc near  | * | movsx eax, byte ptr [esp+this] ",gcc,1
"movsx eax, byte ptr [esp+this]  | * | jmp __ZNKSs4findEcj  ",gcc,1
"mov [esp+this], eax   | * | __ZNKSs13find_first_ofEcj endp ",gcc,1
jmp __ZNKSs4findEcj   | * | align 10h ,gcc,1
__ZNKSs13find_first_ofEcj endp  | * | public __ZNKSs13get_allocatorEv ,gcc,1
align 10h  | * | __ZNKSs13get_allocatorEv proc near ,gcc,1
"__ZNKSs13get_allocatorEv proc near  | * | mov eax, ecx ",gcc,1
"mov eax, ecx  | * | __ZNKSs13get_allocatorEv endp ",gcc,1
__ZNKSs13get_allocatorEv endp  | * | public __ZNKSs15_M_check_lengthEjjPKc ,gcc,1
align 4  | * | __ZNKSs15_M_check_lengthEjjPKc proc near ,gcc,1
"sub esp, 1Ch  | * | mov eax, 3FFFFFFCh ",gcc,1
"mov edx, [ecx]  | * | sub eax, [edx-0Ch] ",gcc,1
"mov eax, 3FFFFFFCh  | * | add eax, [esp+1Ch+this] ",gcc,1
"sub eax, [edx-0Ch]  | * | cmp eax, [esp+1Ch+arg_4] ",gcc,1
"add eax, [esp+1Ch+this]  | * | jb short loc_40E675 ",gcc,1
"cmp eax, [esp+1Ch+arg_4]  | * | add esp, 1Ch ",gcc,1
jb short loc_40E675  | * | retn 0Ch ,gcc,1
"add esp, 1Ch  | * | loc_40E675:  ",gcc,1
"loc_40E675:   | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | call __ZSt20__throw_length_errorPKc  ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | __ZNKSs15_M_check_lengthEjjPKc endp ",gcc,1
call __ZSt20__throw_length_errorPKc   | * | align 4 ,gcc,5
__ZNKSs15_M_check_lengthEjjPKc endp  | * | public __ZNKSs16find_last_not_ofEPKcj ,gcc,1
align 4  | * | __ZNKSs16find_last_not_ofEPKcj proc near ,gcc,1
"mov [esp+1Ch+var_1C], edx   | * | call __ZNKSs16find_last_not_ofEPKcjj  ",gcc,1
"call __ZNKSs16find_last_not_ofEPKcjj   | * | add esp, 14h ",gcc,1
pop edi  | * | __ZNKSs16find_last_not_ofEPKcj endp ,gcc,1
retn 8  | * | public __ZNKSs16find_last_not_ofEPKcjj ,gcc,1
__ZNKSs16find_last_not_ofEPKcj endp  | * | __ZNKSs16find_last_not_ofEPKcjj proc near ,gcc,1
"push ebx  | * | mov edi, [esp+2Ch+this] ",gcc,1
"sub esp, 1Ch  | * | mov ebp, [esp+2Ch+arg_8] ",gcc,1
"mov edi, [esp+2Ch+this]  | * | mov esi, [ecx] ",gcc,1
"mov ebp, [esp+2Ch+arg_8]  | * | mov eax, [esi-0Ch] ",gcc,1
"mov eax, [esi-0Ch]  | * | jnz short loc_40E6EC ",gcc,1
"test eax, eax  | * | loc_40E6D8:  ",gcc,1
"jnz short loc_40E6EC  | * | mov ebx, 0FFFFFFFFh ",gcc,1
loc_40E6D8:   | * | loc_40E6DD:  ,gcc,1
"loc_40E6DD:   | * | add esp, 1Ch ",gcc,1
retn 0Ch  | * | loc_40E6EC:  ,gcc,1
align 4  | * | dec eax ,gcc,1
"loc_40E6EC:   | * | mov ebx, [esp+2Ch+arg_4] ",gcc,1
"mov ebx, [esp+2Ch+arg_4]  | * | ja short loc_40E717 ",gcc,1
ja short loc_40E717  | * | loc_40E6F8:  ,gcc,1
"lea esi, [esi+0]  | * | mov [esp+2Ch+var_24], ebp  ",gcc,1
"loc_40E6F8:   | * | movsx eax, byte ptr [esi+ebx] ",gcc,1
"mov [esp+2Ch+var_24], ebp   | * | mov [esp+2Ch+var_28], eax  ",gcc,1
"movsx eax, byte ptr [esi+ebx]  | * | mov [esp+2Ch+var_2C], edi  ",gcc,1
"mov [esp+2Ch+var_28], eax   | * | call _memchr ",gcc,1
"mov [esp+2Ch+var_2C], edi   | * | test eax, eax ",gcc,1
call _memchr  | * | jz short loc_40E6DD ,gcc,1
"jz short loc_40E6DD  | * | test ebx, ebx ",gcc,1
"lea eax, [ebx-1]  | * | jz short loc_40E6D8 ",gcc,1
"test ebx, ebx  | * | loc_40E717:  ",gcc,1
"jz short loc_40E6D8  | * | mov ebx, eax ",gcc,1
loc_40E717:   | * | jmp short loc_40E6F8 ,gcc,1
"mov ebx, eax  | * | __ZNKSs16find_last_not_ofEPKcjj endp ",gcc,1
jmp short loc_40E6F8  | * | align 4 ,gcc,1
__ZNKSs16find_last_not_ofEPKcjj endp  | * | public __ZNKSs16find_last_not_ofERKSsj ,gcc,1
align 4  | * | __ZNKSs16find_last_not_ofERKSsj proc near ,gcc,1
"mov [esp+1Ch+var_18], edx   | * | call __ZNKSs16find_last_not_ofEPKcjj  ",gcc,1
"call __ZNKSs16find_last_not_ofEPKcjj   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __ZNKSs16find_last_not_ofERKSsj endp ",gcc,1
__ZNKSs16find_last_not_ofERKSsj endp  | * | public __ZNKSs16find_last_not_ofEcj ,gcc,1
align 4  | * | __ZNKSs16find_last_not_ofEcj proc near ,gcc,1
"push ebx  | * | mov edx, [ecx] ",gcc,3
"mov bl, byte ptr [esp+4+this]  | * | mov eax, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | test eax, eax ",gcc,2
"mov eax, [edx-0Ch]  | * | jnz short loc_40E760 ",gcc,1
"test eax, eax  | * | loc_40E756:  ",gcc,1
"jnz short loc_40E760  | * | mov eax, 0FFFFFFFFh ",gcc,1
loc_40E756:   | * | loc_40E75B:  ,gcc,1
loc_40E75B:   | * | retn 8 ,gcc,1
retn 8  | * | loc_40E760:  ,gcc,1
"align 10h  | * | lea ecx, [eax-1] ",gcc,1
"loc_40E760:   | * | mov eax, dword ptr [esp+4+arg_4] ",gcc,1
"lea ecx, [eax-1]  | * | cmp eax, ecx ",gcc,1
"mov eax, dword ptr [esp+4+arg_4]  | * | ja short loc_40E778 ",gcc,1
"cmp eax, ecx  | * | nop ",gcc,1
ja short loc_40E778  | * | loc_40E76C:  ,gcc,1
"nop  | * | cmp [edx+eax], bl ",gcc,1
loc_40E76C:   | * | jnz short loc_40E75B ,gcc,1
"cmp [edx+eax], bl  | * | lea ecx, [eax-1] ",gcc,1
"jnz short loc_40E75B  | * | test eax, eax ",gcc,1
"lea ecx, [eax-1]  | * | jz short loc_40E756 ",gcc,1
"test eax, eax  | * | loc_40E778:  ",gcc,1
"jz short loc_40E756  | * | mov eax, ecx ",gcc,1
loc_40E778:   | * | jmp short loc_40E76C ,gcc,1
"mov eax, ecx  | * | __ZNKSs16find_last_not_ofEcj endp ",gcc,1
jmp short loc_40E76C  | * | public __ZNKSs17find_first_not_ofEPKcj ,gcc,1
__ZNKSs16find_last_not_ofEcj endp  | * | __ZNKSs17find_first_not_ofEPKcj proc near ,gcc,1
"mov [esp+1Ch+var_1C], edx   | * | call __ZNKSs17find_first_not_ofEPKcjj  ",gcc,1
"call __ZNKSs17find_first_not_ofEPKcjj   | * | add esp, 14h ",gcc,1
pop edi  | * | __ZNKSs17find_first_not_ofEPKcj endp ,gcc,1
retn 8  | * | public __ZNKSs17find_first_not_ofEPKcjj ,gcc,1
__ZNKSs17find_first_not_ofEPKcj endp  | * | __ZNKSs17find_first_not_ofEPKcjj proc near ,gcc,1
var_34 = dword ptr -34h  | * | this = dword ptr 4 ,data,1
"push ebx  | * | mov ebp, [esp+3Ch+this] ",gcc,1
"sub esp, 2Ch  | * | mov esi, [esp+3Ch+arg_4] ",gcc,1
"mov esi, [esp+3Ch+arg_4]  | * | mov ebx, [ecx] ",gcc,1
"mov edi, [esp+3Ch+arg_8]  | * | mov eax, [ebx-0Ch] ",gcc,1
"mov ebx, [ecx]  | * | mov [esp+3Ch+var_20], eax ",gcc,1
"mov eax, [ebx-0Ch]  | * | cmp esi, eax ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | jb short loc_40E7E3 ",gcc,1
"cmp esi, eax  | * | jmp short loc_40E808 ",gcc,1
jb short loc_40E7E3  | * | align 4 ,gcc,1
jmp short loc_40E808  | * | loc_40E7DC:  ,gcc,1
align 4  | * | inc esi ,gcc,1
"loc_40E7DC:   | * | cmp esi, [esp+3Ch+var_20] ",gcc,1
inc esi  | * | jnb short loc_40E808 ,gcc,1
"cmp esi, [esp+3Ch+var_20]  | * | loc_40E7E3:  ",gcc,1
"jnb short loc_40E808  | * | mov [esp+3Ch+var_34], edi  ",gcc,1
"loc_40E7E3:   | * | movsx eax, byte ptr [ebx+esi] ",gcc,1
"mov [esp+3Ch+var_34], edi   | * | mov [esp+3Ch+var_38], eax  ",gcc,1
"movsx eax, byte ptr [ebx+esi]  | * | mov [esp+3Ch+var_3C], ebp  ",gcc,1
"mov [esp+3Ch+var_38], eax   | * | call _memchr ",gcc,1
"mov [esp+3Ch+var_3C], ebp   | * | test eax, eax ",gcc,1
call _memchr  | * | jnz short loc_40E7DC ,gcc,1
"jnz short loc_40E7DC  | * | add esp, 2Ch ",gcc,1
retn 0Ch  | * | loc_40E808:  ,gcc,1
"align 4  | * | mov esi, 0FFFFFFFFh ",gcc,1
"loc_40E808:   | * | mov eax, esi ",gcc,1
"mov esi, 0FFFFFFFFh  | * | add esp, 2Ch ",gcc,2
pop ebp  | * | __ZNKSs17find_first_not_ofEPKcjj endp ,gcc,1
__ZNKSs17find_first_not_ofEPKcjj endp  | * | public __ZNKSs17find_first_not_ofERKSsj ,gcc,1
align 4  | * | __ZNKSs17find_first_not_ofERKSsj proc near ,gcc,1
"mov [esp+1Ch+var_18], edx   | * | call __ZNKSs17find_first_not_ofEPKcjj  ",gcc,1
"call __ZNKSs17find_first_not_ofEPKcjj   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __ZNKSs17find_first_not_ofERKSsj endp ",gcc,1
__ZNKSs17find_first_not_ofERKSsj endp  | * | public __ZNKSs17find_first_not_ofEcj ,gcc,1
align 4  | * | __ZNKSs17find_first_not_ofEcj proc near ,gcc,1
"push esi  | * | mov eax, dword ptr [esp+8+arg_4] ",gcc,1
"push ebx  | * | mov bl, byte ptr [esp+8+this] ",gcc,1
"mov eax, dword ptr [esp+8+arg_4]  | * | mov edx, [ecx] ",gcc,1
"mov bl, byte ptr [esp+8+this]  | * | mov esi, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | cmp eax, esi ",gcc,1
"mov esi, [edx-0Ch]  | * | jnb short loc_40E86E ",gcc,1
"cmp eax, esi  | * | mov cl, [edx+eax] ",gcc,1
"jnb short loc_40E86E  | * | cmp cl, bl ",gcc,1
"mov cl, [edx+eax]  | * | jz short loc_40E869 ",gcc,1
"cmp cl, bl  | * | jmp short loc_40E873 ",gcc,1
jz short loc_40E869  | * | loc_40E864:  ,gcc,1
"jmp short loc_40E873  | * | cmp [edx+eax], cl ",gcc,1
loc_40E864:   | * | jnz short loc_40E873 ,gcc,1
"cmp [edx+eax], cl  | * | loc_40E869:  ",gcc,1
jnz short loc_40E873  | * | inc eax ,gcc,1
"loc_40E869:   | * | cmp eax, esi ",gcc,1
inc eax  | * | jb short loc_40E864 ,gcc,1
"cmp eax, esi  | * | loc_40E86E:  ",gcc,1
"jb short loc_40E864  | * | mov eax, 0FFFFFFFFh ",gcc,1
loc_40E86E:   | * | loc_40E873:  ,gcc,1
loc_40E873:   | * | pop esi ,gcc,1
pop esi  | * | __ZNKSs17find_first_not_ofEcj endp ,gcc,1
retn 8  | * | public __ZNKSs2atEj ,gcc,1
__ZNKSs17find_first_not_ofEcj endp  | * | __ZNKSs2atEj proc near ,gcc,1
"sub esp, 1Ch  | * | mov edx, [ecx] ",gcc,2
"mov eax, [esp+1Ch+this]  | * | cmp eax, [edx-0Ch] ",gcc,2
"mov edx, [ecx]  | * | jnb short loc_40E88E ",gcc,1
"cmp eax, [edx-0Ch]  | * | add eax, edx ",gcc,1
"jnb short loc_40E88E  | * | add esp, 1Ch ",gcc,1
"add eax, edx  | * | retn 4 ",gcc,1
"add esp, 1Ch  | * | loc_40E88E:  ",gcc,1
"retn 4  | * | mov [esp+1Ch+var_1C], offset aBasicStringAt  ",gcc,2
loc_40E88E:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringAt   | * | __ZNKSs2atEj endp ",gcc,1
call __ZSt20__throw_out_of_rangePKc   | * | align 4 ,gcc,12
__ZNKSs2atEj endp  | * | public __ZNKSs3endEv ,gcc,1
align 4  | * | __ZNKSs3endEv proc near ,gcc,1
"__ZNKSs3endEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | retn ",gcc,7
"add eax, [eax-0Ch]  | * | __ZNKSs3endEv endp ",gcc,1
__ZNKSs3endEv endp  | * | public __ZNKSs4_Rep12_M_is_leakedEv ,gcc,1
align 4  | * | __ZNKSs4_Rep12_M_is_leakedEv proc near ,gcc,1
"__ZNKSs4_Rep12_M_is_leakedEv proc near  | * | mov eax, [ecx+8] ",gcc,1
"mov eax, [ecx+8]  | * | retn ",gcc,1
"shr eax, 1Fh  | * | __ZNKSs4_Rep12_M_is_leakedEv endp ",gcc,1
__ZNKSs4_Rep12_M_is_leakedEv endp  | * | public __ZNKSs4_Rep12_M_is_sharedEv ,gcc,1
align 4  | * | __ZNKSs4_Rep12_M_is_sharedEv proc near ,gcc,1
"__ZNKSs4_Rep12_M_is_sharedEv proc near  | * | mov ecx, [ecx+8] ",gcc,1
"mov ecx, [ecx+8]  | * | setnle al ",gcc,1
"test ecx, ecx  | * | retn ",gcc,2
setnle al  | * | __ZNKSs4_Rep12_M_is_sharedEv endp ,gcc,1
__ZNKSs4_Rep12_M_is_sharedEv endp  | * | public __ZNKSs4backEv ,gcc,1
align 4  | * | __ZNKSs4backEv proc near ,gcc,1
"__ZNKSs4backEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | lea eax, [eax+edx-1] ",gcc,1
"mov edx, [eax-0Ch]  | * | retn ",gcc,1
"lea eax, [eax+edx-1]  | * | __ZNKSs4backEv endp ",gcc,1
__ZNKSs4backEv endp  | * | public __ZNKSs4cendEv ,gcc,1
align 4  | * | __ZNKSs4cendEv proc near ,gcc,1
"__ZNKSs4cendEv proc near  | * | mov eax, [ecx] ",gcc,1
"add eax, [eax-0Ch]  | * | __ZNKSs4cendEv endp ",gcc,1
__ZNKSs4cendEv endp  | * | public __ZNKSs4copyEPcjj ,gcc,1
align 4  | * | __ZNKSs4copyEPcjj proc near ,gcc,1
var_2C = dword ptr -2Ch  | * | arg_4 = dword ptr 8 ,data,2
"push edi  | * | sub esp, 24h ",gcc,1
"push esi  | * | mov edx, [esp+2Ch+arg_8] ",gcc,1
"sub esp, 24h  | * | mov esi, [ecx] ",gcc,1
"mov edx, [esp+2Ch+arg_8]  | * | mov eax, [esi-0Ch] ",gcc,1
"mov esi, [ecx]  | * | cmp edx, eax ",gcc,1
"mov eax, [esi-0Ch]  | * | ja short loc_40E924 ",gcc,1
"cmp edx, eax  | * | sub eax, edx ",gcc,1
"ja short loc_40E924  | * | cmp eax, [esp+2Ch+arg_4] ",gcc,1
"sub eax, edx  | * | ja short loc_40E8F4 ",gcc,1
"cmp eax, [esp+2Ch+arg_4]  | * | test eax, eax ",gcc,1
ja short loc_40E8F4  | * | jnz short loc_40E8FC ,gcc,1
"test eax, eax  | * | loc_40E8EA:  ",gcc,1
"jnz short loc_40E8FC  | * | add esp, 24h ",gcc,1
loc_40E8EA:   | * | pop esi ,gcc,1
"add esp, 24h  | * | pop edi ",gcc,3
pop esi  | * | retn 0Ch ,gcc,8
retn 0Ch  | * | loc_40E8F4:  ,gcc,1
"align 4  | * | mov eax, [esp+2Ch+arg_4] ",gcc,1
"loc_40E8F4:   | * | test eax, eax ",gcc,1
"mov eax, [esp+2Ch+arg_4]  | * | jz short loc_40E8EA ",gcc,1
"test eax, eax  | * | loc_40E8FC:  ",gcc,1
"jz short loc_40E8EA  | * | add esi, edx ",gcc,1
"loc_40E8FC:   | * | cmp eax, 1 ",gcc,1
"add esi, edx  | * | jz short loc_40E914 ",gcc,1
"cmp eax, 1  | * | mov edi, [esp+2Ch+this] ",gcc,1
"jz short loc_40E914  | * | mov ecx, eax ",gcc,1
"mov edi, [esp+2Ch+this]  | * | rep movsb ",gcc,1
"mov ecx, eax  | * | add esp, 24h ",gcc,1
rep movsb  | * | pop esi ,gcc,6
retn 0Ch  | * | loc_40E914:  ,gcc,1
"align 4  | * | mov dl, [esi] ",gcc,2
"loc_40E914:   | * | mov ecx, [esp+2Ch+this] ",gcc,1
"mov dl, [esi]  | * | mov [ecx], dl ",gcc,1
"mov ecx, [esp+2Ch+this]  | * | add esp, 24h ",gcc,1
"mov [ecx], dl  | * | pop esi ",gcc,1
pop edi  | * | loc_40E924:  ,gcc,1
"retn 0Ch  | * | mov [esp+2Ch+var_2C], offset aBasicStringCop  ",gcc,1
loc_40E924:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+2Ch+var_2C], offset aBasicStringCop   | * | __ZNKSs4copyEPcjj endp ",gcc,1
call __ZSt20__throw_out_of_rangePKc   | * | public __ZNKSs4dataEv ,gcc,1
__ZNKSs4copyEPcjj endp  | * | __ZNKSs4dataEv proc near ,gcc,1
"__ZNKSs4dataEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | __ZNKSs4dataEv endp ",gcc,1
__ZNKSs4dataEv endp  | * | public __ZNKSs4findEPKcj ,gcc,1
align 4  | * | __ZNKSs4findEPKcj proc near ,gcc,1
"mov [esp+1Ch+var_1C], edx   | * | call __ZNKSs4findEPKcjj  ",gcc,1
"call __ZNKSs4findEPKcjj   | * | add esp, 14h ",gcc,1
pop edi  | * | __ZNKSs4findEPKcj endp ,gcc,1
retn 8  | * | public __ZNKSs4findEPKcjj ,gcc,1
__ZNKSs4findEPKcj endp  | * | __ZNKSs4findEPKcjj proc near  ,gcc,1
var_38 = dword ptr -38h  | * | var_28 = byte ptr -28h ,data,1
var_34 = dword ptr -34h  | * | var_24 = dword ptr -24h ,data,1
var_28 = byte ptr -28h  | * | var_20 = dword ptr -20h ,data,1
var_24 = dword ptr -24h  | * | this = dword ptr 4 ,data,4
"push ebx  | * | mov esi, [esp+3Ch+arg_4] ",gcc,1
"sub esp, 2Ch  | * | mov ebp, [esp+3Ch+arg_8] ",gcc,1
"mov esi, [esp+3Ch+arg_4]  | * | mov edi, [ecx] ",gcc,1
"mov ebp, [esp+3Ch+arg_8]  | * | mov edx, [edi-0Ch] ",gcc,1
"mov edi, [ecx]  | * | test ebp, ebp ",gcc,1
"mov edx, [edi-0Ch]  | * | jnz short loc_40E998 ",gcc,1
"test ebp, ebp  | * | cmp esi, edx ",gcc,1
jnz short loc_40E998  | * | ja short loc_40E99C ,gcc,1
"cmp esi, edx  | * | mov eax, esi ",gcc,1
"ja short loc_40E99C  | * | add esp, 2Ch ",gcc,1
pop ebp  | * | loc_40E998:  ,gcc,1
"retn 0Ch  | * | cmp ebp, edx ",gcc,1
loc_40E998:   | * | jbe short loc_40E9B0 ,gcc,1
"cmp ebp, edx  | * | loc_40E99C:  ",gcc,1
"jbe short loc_40E9B0  | * | mov esi, 0FFFFFFFFh ",gcc,1
"loc_40E99C:   | * | mov eax, esi ",gcc,1
retn 0Ch  | * | loc_40E9B0:  ,gcc,1
"align 10h  | * | sub edx, ebp ",gcc,1
"loc_40E9B0:   | * | cmp esi, edx ",gcc,1
"sub edx, ebp  | * | ja short loc_40E99C ",gcc,1
"cmp esi, edx  | * | mov eax, [esp+3Ch+this] ",gcc,1
"ja short loc_40E99C  | * | mov cl, [eax] ",gcc,1
"mov eax, [esp+3Ch+this]  | * | lea ebx, [esi+1] ",gcc,1
"mov cl, [eax]  | * | add edi, ebx ",gcc,1
"lea ebx, [esi+1]  | * | dec ebp ",gcc,1
"add edi, ebx  | * | inc eax ",gcc,1
"dec ebp  | * | mov [esp+3Ch+var_24], eax ",gcc,1
"inc eax  | * | mov [esp+3Ch+var_20], ebp ",gcc,1
"mov [esp+3Ch+var_24], eax  | * | mov ebp, edx ",gcc,1
"mov [esp+3Ch+var_20], ebp  | * | jmp short loc_40E9D8 ",gcc,1
"mov ebp, edx  | * | align 10h ",gcc,1
jmp short loc_40E9D8  | * | loc_40E9D0:  ,gcc,1
loc_40E9D0:   | * | inc ebx ,gcc,1
"mov eax, ebx  | * | inc edi ",gcc,1
"inc ebx  | * | cmp ebp, eax ",gcc,1
inc edi  | * | jb short loc_40E99C ,gcc,1
"cmp ebp, eax  | * | loc_40E9D8:  ",gcc,1
"jb short loc_40E99C  | * | lea esi, [ebx-1] ",gcc,1
"loc_40E9D8:   | * | cmp [edi-1], cl ",gcc,1
"lea esi, [ebx-1]  | * | jnz short loc_40E9D0 ",gcc,1
"cmp [edi-1], cl  | * | mov eax, [esp+3Ch+var_20] ",gcc,1
"jnz short loc_40E9D0  | * | mov [esp+3Ch+var_34], eax  ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | mov eax, [esp+3Ch+var_24] ",gcc,1
"mov [esp+3Ch+var_34], eax   | * | mov [esp+3Ch+var_38], eax  ",gcc,1
"mov eax, [esp+3Ch+var_24]  | * | mov [esp+3Ch+var_3C], edi  ",gcc,1
"mov [esp+3Ch+var_38], eax   | * | mov [esp+3Ch+var_28], cl ",gcc,1
"mov [esp+3Ch+var_3C], edi   | * | call _memcmp ",gcc,1
"mov [esp+3Ch+var_28], cl  | * | test eax, eax ",gcc,1
"call _memcmp  | * | mov cl, [esp+3Ch+var_28] ",gcc,1
"test eax, eax  | * | jnz short loc_40E9D0 ",gcc,1
"mov cl, [esp+3Ch+var_28]  | * | mov eax, esi ",gcc,1
"jnz short loc_40E9D0  | * | add esp, 2Ch ",gcc,1
pop ebp  | * | __ZNKSs4findEPKcjj endp ,gcc,1
retn 0Ch  | * | public __ZNKSs4findERKSsj ,gcc,1
__ZNKSs4findEPKcjj endp  | * | __ZNKSs4findERKSsj proc near ,gcc,1
"mov [esp+1Ch+var_18], edx   | * | call __ZNKSs4findEPKcjj  ",gcc,1
"call __ZNKSs4findEPKcjj   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __ZNKSs4findERKSsj endp ",gcc,1
__ZNKSs4findERKSsj endp  | * | public __ZNKSs4findEcj ,gcc,1
align 4  | * | __ZNKSs4findEcj proc near  ,gcc,1
var_14 = dword ptr -14h  | * | arg_4 = byte ptr 8 ,data,4
"push ebx  | * | movsx edx, byte ptr [esp+1Ch+this] ",gcc,1
"sub esp, 18h  | * | mov ebx, [ecx] ",gcc,1
"movsx edx, byte ptr [esp+1Ch+this]  | * | mov eax, [ebx-0Ch] ",gcc,1
"mov ebx, [ecx]  | * | cmp dword ptr [esp+1Ch+arg_4], eax ",gcc,1
"mov eax, [ebx-0Ch]  | * | jb short loc_40EA5C ",gcc,1
"cmp dword ptr [esp+1Ch+arg_4], eax  | * | loc_40EA50:  ",gcc,1
"jb short loc_40EA5C  | * | mov eax, 0FFFFFFFFh ",gcc,1
"loc_40EA50:   | * | add esp, 18h ",gcc,1
pop ebx  | * | loc_40EA5C:  ,gcc,1
"retn 8  | * | sub eax, dword ptr [esp+1Ch+arg_4] ",gcc,1
"loc_40EA5C:   | * | mov [esp+1Ch+var_14], eax  ",gcc,1
"sub eax, dword ptr [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_18], edx  ",gcc,1
"mov [esp+1Ch+var_14], eax   | * | mov eax, dword ptr [esp+1Ch+arg_4] ",gcc,1
"mov [esp+1Ch+var_18], edx   | * | add eax, ebx ",gcc,1
"mov eax, dword ptr [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"add eax, ebx  | * | call _memchr ",gcc,1
call _memchr  | * | jz short loc_40EA50 ,gcc,1
"test eax, eax  | * | sub eax, ebx ",gcc,1
"jz short loc_40EA50  | * | add esp, 18h ",gcc,1
"sub eax, ebx  | * | pop ebx ",gcc,1
pop ebx  | * | __ZNKSs4findEcj endp ,gcc,1
__ZNKSs4findEcj endp  | * | public __ZNKSs4rendEv ,gcc,1
align 4  | * | __ZNKSs4rendEv proc near ,gcc,1
"__ZNKSs4rendEv proc near  | * | mov eax, ecx ",gcc,1
"mov eax, ecx  | * | mov edx, [edx] ",gcc,4
"mov edx, [esp+this]  | * | mov [ecx], edx ",gcc,2
"mov edx, [edx]  | * | retn 4 ",gcc,2
"mov [ecx], edx  | * | __ZNKSs4rendEv endp ",gcc,1
__ZNKSs4rendEv endp  | * | public __ZNKSs4sizeEv ,gcc,1
align 4  | * | __ZNKSs4sizeEv proc near ,gcc,1
"__ZNKSs4sizeEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [eax-0Ch]  | * | __ZNKSs4sizeEv endp ",gcc,1
__ZNKSs4sizeEv endp  | * | public __ZNKSs5beginEv ,gcc,1
align 4  | * | __ZNKSs5beginEv proc near ,gcc,1
"__ZNKSs5beginEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | __ZNKSs5beginEv endp ",gcc,1
__ZNKSs5beginEv endp  | * | public __ZNKSs5c_strEv ,gcc,1
align 10h  | * | __ZNKSs5c_strEv proc near ,gcc,1
"__ZNKSs5c_strEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | __ZNKSs5c_strEv endp ",gcc,1
__ZNKSs5c_strEv endp  | * | public __ZNKSs5crendEv ,gcc,1
align 4  | * | __ZNKSs5crendEv proc near ,gcc,1
"__ZNKSs5crendEv proc near  | * | mov eax, ecx ",gcc,1
"mov [ecx], edx  | * | __ZNKSs5crendEv endp ",gcc,1
__ZNKSs5crendEv endp  | * | public __ZNKSs5emptyEv ,gcc,1
align 4  | * | __ZNKSs5emptyEv proc near ,gcc,1
"__ZNKSs5emptyEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | test ecx, ecx ",gcc,2
"mov ecx, [eax-0Ch]  | * | setz al ",gcc,1
setz al  | * | __ZNKSs5emptyEv endp ,gcc,1
__ZNKSs5emptyEv endp  | * | public __ZNKSs5frontEv ,gcc,1
align 10h  | * | __ZNKSs5frontEv proc near ,gcc,1
"__ZNKSs5frontEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | __ZNKSs5frontEv endp ",gcc,1
__ZNKSs5frontEv endp  | * | public __ZNKSs5rfindEPKcj ,gcc,1
align 4  | * | __ZNKSs5rfindEPKcj proc near ,gcc,1
"mov [esp+1Ch+var_1C], edx   | * | call __ZNKSs5rfindEPKcjj  ",gcc,1
"call __ZNKSs5rfindEPKcjj   | * | add esp, 14h ",gcc,1
pop edi  | * | __ZNKSs5rfindEPKcj endp ,gcc,1
retn 8  | * | public __ZNKSs5rfindEPKcjj ,gcc,1
__ZNKSs5rfindEPKcj endp  | * | __ZNKSs5rfindEPKcjj proc near  ,gcc,1
"push ebx  | * | mov ebp, [esp+2Ch+this] ",gcc,1
"mov ebp, [esp+2Ch+this]  | * | mov edi, [ecx] ",gcc,1
"mov esi, [esp+2Ch+arg_8]  | * | mov ebx, [edi-0Ch] ",gcc,1
"mov edi, [ecx]  | * | cmp esi, ebx ",gcc,1
"mov ebx, [edi-0Ch]  | * | jbe short loc_40EB2C ",gcc,1
"cmp esi, ebx  | * | loc_40EB18:  ",gcc,1
"jbe short loc_40EB2C  | * | mov ebx, 0FFFFFFFFh ",gcc,1
loc_40EB18:   | * | loc_40EB1D:  ,gcc,1
"loc_40EB1D:   | * | add esp, 1Ch ",gcc,1
retn 0Ch  | * | loc_40EB2C:  ,gcc,1
"align 4  | * | sub ebx, esi ",gcc,1
"loc_40EB2C:   | * | cmp ebx, [esp+2Ch+arg_4] ",gcc,1
"sub ebx, esi  | * | jbe short loc_40EB3E ",gcc,1
"cmp ebx, [esp+2Ch+arg_4]  | * | mov ebx, [esp+2Ch+arg_4] ",gcc,1
jbe short loc_40EB3E  | * | jmp short loc_40EB3E ,gcc,1
"mov ebx, [esp+2Ch+arg_4]  | * | align 4 ",gcc,1
jmp short loc_40EB3E  | * | loc_40EB3C:  ,gcc,1
loc_40EB3C:   | * | loc_40EB3E:  ,gcc,1
"mov ebx, eax  | * | mov [esp+2Ch+var_24], esi  ",gcc,1
"loc_40EB3E:   | * | mov [esp+2Ch+var_28], ebp  ",gcc,1
"mov [esp+2Ch+var_24], esi   | * | lea eax, [edi+ebx] ",gcc,1
"mov [esp+2Ch+var_28], ebp   | * | mov [esp+2Ch+var_2C], eax  ",gcc,1
"lea eax, [edi+ebx]  | * | call _memcmp ",gcc,1
call _memcmp  | * | jz short loc_40EB1D ,gcc,1
"jz short loc_40EB1D  | * | test ebx, ebx ",gcc,1
"lea eax, [ebx-1]  | * | jnz short loc_40EB3C ",gcc,1
"test ebx, ebx  | * | jmp short loc_40EB18 ",gcc,1
jnz short loc_40EB3C  | * | __ZNKSs5rfindEPKcjj endp ,gcc,1
jmp short loc_40EB18  | * | align 10h ,gcc,1
__ZNKSs5rfindEPKcjj endp  | * | public __ZNKSs5rfindERKSsj ,gcc,1
align 10h  | * | __ZNKSs5rfindERKSsj proc near ,gcc,1
"mov [esp+1Ch+var_18], edx   | * | call __ZNKSs5rfindEPKcjj  ",gcc,1
"call __ZNKSs5rfindEPKcjj   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __ZNKSs5rfindERKSsj endp ",gcc,1
__ZNKSs5rfindERKSsj endp  | * | public __ZNKSs5rfindEcj ,gcc,1
align 4  | * | __ZNKSs5rfindEcj proc near ,gcc,1
"mov eax, [ecx-0Ch]  | * | jnz short loc_40EBA4 ",gcc,1
jnz short loc_40EBA4  | * | loc_40EB9F:  ,gcc,1
loc_40EB9F:   | * | retn 8 ,gcc,1
retn 8  | * | loc_40EBA4:  ,gcc,1
"loc_40EBA4:   | * | mov eax, dword ptr [esp+4+arg_4] ",gcc,1
"mov eax, dword ptr [esp+4+arg_4]  | * | ja short loc_40EBBD ",gcc,1
ja short loc_40EBBD  | * | loc_40EBB0:  ,gcc,1
loc_40EBB0:   | * | jz short loc_40EB9F ,gcc,1
"jz short loc_40EB9F  | * | cmp [ecx+eax], bl ",gcc,1
"lea edx, [eax-1]  | * | jz short loc_40EB9F ",gcc,1
"cmp [ecx+eax], bl  | * | loc_40EBBD:  ",gcc,1
"jz short loc_40EB9F  | * | mov eax, edx ",gcc,1
loc_40EBBD:   | * | jmp short loc_40EBB0 ,gcc,1
"mov eax, edx  | * | __ZNKSs5rfindEcj endp ",gcc,1
jmp short loc_40EBB0  | * | align 4 ,gcc,1
__ZNKSs5rfindEcj endp  | * | public __ZNKSs6_M_repEv ,gcc,1
align 4  | * | __ZNKSs6_M_repEv proc near ,gcc,1
"__ZNKSs6_M_repEv proc near  | * | mov eax, [ecx] ",gcc,1
"sub eax, 0Ch  | * | __ZNKSs6_M_repEv endp ",gcc,1
__ZNKSs6_M_repEv endp  | * | public __ZNKSs6cbeginEv ,gcc,1
align 4  | * | __ZNKSs6cbeginEv proc near ,gcc,1
"__ZNKSs6cbeginEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | __ZNKSs6cbeginEv endp ",gcc,1
__ZNKSs6cbeginEv endp  | * | public __ZNKSs6lengthEv ,gcc,1
align 10h  | * | __ZNKSs6lengthEv proc near ,gcc,1
"__ZNKSs6lengthEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [eax-0Ch]  | * | __ZNKSs6lengthEv endp ",gcc,1
__ZNKSs6lengthEv endp  | * | public __ZNKSs6rbeginEv ,gcc,1
align 4  | * | __ZNKSs6rbeginEv proc near ,gcc,1
"__ZNKSs6rbeginEv proc near  | * | mov eax, ecx ",gcc,1
"mov edx, [esp+this]  | * | add edx, [edx-0Ch] ",gcc,2
"mov edx, [edx]  | * | mov [ecx], edx ",gcc,2
"add edx, [edx-0Ch]  | * | retn 4 ",gcc,2
"mov [ecx], edx  | * | __ZNKSs6rbeginEv endp ",gcc,1
retn 4  | * | public __ZNKSs6substrEjj ,gcc,1
__ZNKSs6rbeginEv endp  | * | __ZNKSs6substrEjj proc near ,gcc,1
"push ebx  | * | mov edx, [esp+1Ch+this] ",gcc,2
"sub esp, 14h  | * | mov ebx, [esp+1Ch+arg_4] ",gcc,1
"mov edx, [esp+1Ch+this]  | * | mov eax, [edx] ",gcc,1
"mov ebx, [esp+1Ch+arg_4]  | * | cmp ebx, [eax-0Ch] ",gcc,1
"mov eax, [edx]  | * | ja short loc_40EC1F ",gcc,1
"cmp ebx, [eax-0Ch]  | * | mov esi, ecx ",gcc,1
"ja short loc_40EC1F  | * | mov eax, [esp+1Ch+arg_8] ",gcc,1
"mov esi, ecx  | * | mov [esp+1Ch+var_14], eax  ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | mov [esp+1Ch+var_18], ebx  ",gcc,1
"mov [esp+1Ch+var_14], eax   | * | mov [esp+1Ch+var_1C], edx  ",gcc,1
"mov [esp+1Ch+var_18], ebx   | * | call __ZNSsC1ERKSsjj  ",gcc,1
"mov [esp+1Ch+var_1C], edx   | * | sub esp, 0Ch ",gcc,2
"call __ZNSsC1ERKSsjj   | * | mov eax, esi ",gcc,1
"sub esp, 0Ch  | * | add esp, 14h ",gcc,1
pop esi  | * | loc_40EC1F:  ,gcc,1
"retn 0Ch  | * | mov [esp+1Ch+var_1C], offset aBasicStringSub  ",gcc,1
loc_40EC1F:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringSub   | * | __ZNKSs6substrEjj endp ",gcc,1
__ZNKSs6substrEjj endp  | * | public __ZNKSs7_M_dataEv ,gcc,1
align 4  | * | __ZNKSs7_M_dataEv proc near ,gcc,1
"__ZNKSs7_M_dataEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | __ZNKSs7_M_dataEv endp ",gcc,1
__ZNKSs7_M_dataEv endp  | * | public __ZNKSs7_M_iendEv ,gcc,1
align 10h  | * | __ZNKSs7_M_iendEv proc near ,gcc,1
"__ZNKSs7_M_iendEv proc near  | * | mov eax, [ecx] ",gcc,1
"add eax, [eax-0Ch]  | * | __ZNKSs7_M_iendEv endp ",gcc,1
__ZNKSs7_M_iendEv endp  | * | public __ZNKSs7compareEPKc ,gcc,1
align 4  | * | __ZNKSs7compareEPKc proc near ,gcc,1
"sub esp, 10h  | * | mov ebx, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | xor eax, eax ",gcc,1
"mov ebx, [edx-0Ch]  | * | mov ecx, 0FFFFFFFFh ",gcc,1
"xor eax, eax  | * | mov edi, [esp+1Ch+this] ",gcc,1
"mov edi, [esp+1Ch+this]  | * | not ecx ",gcc,1
"repne scasb  | * | lea esi, [ecx-1] ",gcc,1
"not ecx  | * | mov eax, esi ",gcc,1
"lea esi, [ecx-1]  | * | cmp esi, ebx ",gcc,1
"mov eax, esi  | * | jbe short loc_40EC5D ",gcc,1
"cmp esi, ebx  | * | mov eax, ebx ",gcc,1
jbe short loc_40EC5D  | * | loc_40EC5D:  ,gcc,1
"mov eax, ebx  | * | mov [esp+1Ch+var_14], eax  ",gcc,1
"loc_40EC5D:   | * | mov eax, [esp+1Ch+this] ",gcc,1
"mov eax, [esp+1Ch+this]  | * | mov [esp+1Ch+var_1C], edx  ",gcc,1
"mov [esp+1Ch+var_18], eax   | * | call _memcmp ",gcc,1
call _memcmp  | * | jnz short loc_40EC79 ,gcc,1
"jnz short loc_40EC79  | * | sub eax, esi ",gcc,1
"mov eax, ebx  | * | loc_40EC79:  ",gcc,1
"sub eax, esi  | * | add esp, 10h ",gcc,2
loc_40EC79:   | * | pop ebx ,gcc,1
pop esi  | * | retn 4 ,gcc,7
pop edi  | * | __ZNKSs7compareEPKc endp ,gcc,1
__ZNKSs7compareEPKc endp  | * | public __ZNKSs7compareERKSs ,gcc,1
align 4  | * | __ZNKSs7compareERKSs proc near ,gcc,1
"push ebx  | * | mov eax, [ecx] ",gcc,1
"sub esp, 14h  | * | mov esi, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | mov edx, [esp+1Ch+this] ",gcc,1
"mov esi, [eax-0Ch]  | * | mov edx, [edx] ",gcc,1
"mov edx, [esp+1Ch+this]  | * | mov ebx, [edx-0Ch] ",gcc,1
"mov edx, [edx]  | * | mov ecx, ebx ",gcc,1
"mov ebx, [edx-0Ch]  | * | cmp ebx, esi ",gcc,1
"mov ecx, ebx  | * | jbe short loc_40EC9F ",gcc,1
"cmp ebx, esi  | * | mov ecx, esi ",gcc,1
jbe short loc_40EC9F  | * | loc_40EC9F:  ,gcc,1
"mov ecx, esi  | * | mov [esp+1Ch+var_14], ecx  ",gcc,1
"loc_40EC9F:   | * | mov [esp+1Ch+var_18], edx  ",gcc,1
"mov [esp+1Ch+var_14], ecx   | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"mov [esp+1Ch+var_18], edx   | * | call _memcmp ",gcc,1
call _memcmp  | * | jnz short loc_40ECB7 ,gcc,1
"jnz short loc_40ECB7  | * | sub eax, ebx ",gcc,1
"mov eax, esi  | * | loc_40ECB7:  ",gcc,1
"sub eax, ebx  | * | add esp, 14h ",gcc,1
loc_40ECB7:   | * | pop ebx ,gcc,1
pop ebx  | * | retn 4 ,gcc,9
pop esi  | * | __ZNKSs7compareERKSs endp ,gcc,1
retn 4  | * | align 10h ,gcc,6
__ZNKSs7compareERKSs endp  | * | public __ZNKSs7compareEjjPKc ,gcc,1
align 10h  | * | __ZNKSs7compareEjjPKc proc near ,gcc,1
"sub esp, 10h  | * | mov esi, [ecx] ",gcc,1
"mov edx, [esp+1Ch+this]  | * | mov ebx, [esi-0Ch] ",gcc,2
"mov esi, [ecx]  | * | cmp edx, ebx ",gcc,1
"mov ebx, [esi-0Ch]  | * | ja short loc_40ED26 ",gcc,1
"cmp edx, ebx  | * | sub ebx, edx ",gcc,1
"ja short loc_40ED26  | * | cmp ebx, [esp+1Ch+arg_4] ",gcc,1
"sub ebx, edx  | * | ja short loc_40ED20 ",gcc,1
"cmp ebx, [esp+1Ch+arg_4]  | * | loc_40ECDB:  ",gcc,1
"ja short loc_40ED20  | * | xor eax, eax ",gcc,1
"loc_40ECDB:   | * | mov ecx, 0FFFFFFFFh ",gcc,1
"xor eax, eax  | * | mov edi, [esp+1Ch+arg_8] ",gcc,1
"mov edi, [esp+1Ch+arg_8]  | * | not ecx ",gcc,1
"repne scasb  | * | lea edi, [ecx-1] ",gcc,1
"not ecx  | * | mov eax, edi ",gcc,1
"lea edi, [ecx-1]  | * | cmp edi, ebx ",gcc,1
"mov eax, edi  | * | ja short loc_40ED1C ",gcc,1
"cmp edi, ebx  | * | loc_40ECF3:  ",gcc,1
"ja short loc_40ED1C  | * | mov [esp+1Ch+var_14], eax  ",gcc,1
"loc_40ECF3:   | * | mov eax, [esp+1Ch+arg_8] ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | add edx, esi ",gcc,1
"mov [esp+1Ch+var_18], eax   | * | mov [esp+1Ch+var_1C], edx  ",gcc,2
"add edx, esi  | * | call _memcmp ",gcc,1
call _memcmp  | * | jnz short loc_40ED11 ,gcc,1
"jnz short loc_40ED11  | * | sub eax, edi ",gcc,1
"mov eax, ebx  | * | loc_40ED11:  ",gcc,1
"sub eax, edi  | * | add esp, 10h ",gcc,1
loc_40ED11:   | * | pop ebx ,gcc,1
retn 0Ch  | * | loc_40ED1C:  ,gcc,1
loc_40ED1C:   | * | jmp short loc_40ECF3 ,gcc,1
"mov eax, ebx  | * | loc_40ED20:  ",gcc,1
"jmp short loc_40ECF3  | * | mov ebx, [esp+1Ch+arg_4] ",gcc,1
loc_40ED20:   | * | jmp short loc_40ECDB ,gcc,1
"mov ebx, [esp+1Ch+arg_4]  | * | loc_40ED26:  ",gcc,1
"jmp short loc_40ECDB  | * | mov [esp+1Ch+var_1C], offset aBasicStringCom  ",gcc,1
loc_40ED26:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringCom   | * | __ZNKSs7compareEjjPKc endp ",gcc,1
__ZNKSs7compareEjjPKc endp  | * | public __ZNKSs7compareEjjPKcj ,gcc,1
align 4  | * | __ZNKSs7compareEjjPKcj proc near ,gcc,1
"push ebx  | * | mov eax, [esp+1Ch+this] ",gcc,4
"sub esp, 14h  | * | mov esi, [esp+1Ch+arg_C] ",gcc,1
"mov eax, [esp+1Ch+this]  | * | mov edx, [ecx] ",gcc,3
"mov esi, [esp+1Ch+arg_C]  | * | mov ebx, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | cmp eax, ebx ",gcc,2
"mov ebx, [edx-0Ch]  | * | ja short loc_40ED90 ",gcc,1
"cmp eax, ebx  | * | sub ebx, eax ",gcc,2
"ja short loc_40ED90  | * | cmp ebx, [esp+1Ch+arg_4] ",gcc,1
"sub ebx, eax  | * | ja short loc_40ED84 ",gcc,1
"cmp ebx, [esp+1Ch+arg_4]  | * | mov ecx, esi ",gcc,1
"ja short loc_40ED84  | * | cmp esi, ebx ",gcc,1
"mov ecx, esi  | * | ja short loc_40ED80 ",gcc,1
"cmp esi, ebx  | * | loc_40ED58:  ",gcc,1
"ja short loc_40ED80  | * | mov [esp+1Ch+var_14], ecx  ",gcc,1
"loc_40ED58:   | * | mov ecx, [esp+1Ch+arg_8] ",gcc,1
"mov [esp+1Ch+var_14], ecx   | * | mov [esp+1Ch+var_18], ecx  ",gcc,1
"mov ecx, [esp+1Ch+arg_8]  | * | add eax, edx ",gcc,1
"mov [esp+1Ch+var_18], ecx   | * | mov [esp+1Ch+var_1C], eax  ",gcc,2
"add eax, edx  | * | call _memcmp ",gcc,2
call _memcmp  | * | jnz short loc_40ED76 ,gcc,1
"jnz short loc_40ED76  | * | sub eax, esi ",gcc,1
"mov eax, ebx  | * | loc_40ED76:  ",gcc,1
"sub eax, esi  | * | add esp, 14h ",gcc,1
loc_40ED76:   | * | pop ebx ,gcc,1
pop ebx  | * | retn 10h ,gcc,2
retn 10h  | * | loc_40ED80:  ,gcc,1
"align 10h  | * | mov ecx, ebx ",gcc,1
loc_40ED80:   | * | jmp short loc_40ED58 ,gcc,1
"mov ecx, ebx  | * | loc_40ED84:  ",gcc,1
"jmp short loc_40ED58  | * | mov ebx, [esp+1Ch+arg_4] ",gcc,1
"loc_40ED84:   | * | mov ecx, esi ",gcc,1
"mov ebx, [esp+1Ch+arg_4]  | * | cmp esi, ebx ",gcc,1
"mov ecx, esi  | * | jbe short loc_40ED58 ",gcc,1
"cmp esi, ebx  | * | jmp short loc_40ED80 ",gcc,1
jbe short loc_40ED58  | * | loc_40ED90:  ,gcc,1
"jmp short loc_40ED80  | * | mov [esp+1Ch+var_1C], offset aBasicStringCom  ",gcc,1
loc_40ED90:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringCom   | * | __ZNKSs7compareEjjPKcj endp ",gcc,1
call __ZSt20__throw_out_of_rangePKc   | * | public __ZNKSs7compareEjjRKSs ,gcc,1
__ZNKSs7compareEjjPKcj endp  | * | __ZNKSs7compareEjjRKSs proc near ,gcc,1
"sub esp, 10h  | * | mov edx, [ecx] ",gcc,1
"mov eax, [esp+1Ch+this]  | * | mov ebx, [edx-0Ch] ",gcc,1
"mov ebx, [edx-0Ch]  | * | ja short loc_40EE05 ",gcc,1
"ja short loc_40EE05  | * | cmp ebx, [esp+1Ch+arg_4] ",gcc,1
"sub ebx, eax  | * | ja short loc_40EDF0 ",gcc,1
"cmp ebx, [esp+1Ch+arg_4]  | * | mov ecx, [esp+1Ch+arg_8] ",gcc,1
"ja short loc_40EDF0  | * | mov ecx, [ecx] ",gcc,1
"mov ecx, [esp+1Ch+arg_8]  | * | mov esi, [ecx-0Ch] ",gcc,2
"mov ecx, [ecx]  | * | mov edi, ebx ",gcc,2
"mov esi, [ecx-0Ch]  | * | cmp ebx, esi ",gcc,2
"mov edi, ebx  | * | ja short loc_40EDEC ",gcc,1
"cmp ebx, esi  | * | loc_40EDC6:  ",gcc,1
"ja short loc_40EDEC  | * | mov [esp+1Ch+var_14], edi  ",gcc,1
"loc_40EDC6:   | * | mov [esp+1Ch+var_18], ecx  ",gcc,1
"mov [esp+1Ch+var_14], edi   | * | add eax, edx ",gcc,1
call _memcmp  | * | jnz short loc_40EDE0 ,gcc,1
"jnz short loc_40EDE0  | * | sub eax, esi ",gcc,1
"mov eax, ebx  | * | loc_40EDE0:  ",gcc,1
loc_40EDE0:   | * | pop ebx ,gcc,1
retn 0Ch  | * | loc_40EDEC:  ,gcc,1
loc_40EDEC:   | * | jmp short loc_40EDC6 ,gcc,1
"mov edi, esi  | * | loc_40EDF0:  ",gcc,1
"jmp short loc_40EDC6  | * | mov ebx, [esp+1Ch+arg_4] ",gcc,1
"loc_40EDF0:   | * | mov ecx, [esp+1Ch+arg_8] ",gcc,1
"mov ebx, [esp+1Ch+arg_4]  | * | mov ecx, [ecx] ",gcc,1
"mov edi, ebx  | * | jbe short loc_40EDC6 ",gcc,1
"cmp ebx, esi  | * | jmp short loc_40EDEC ",gcc,1
jbe short loc_40EDC6  | * | loc_40EE05:  ,gcc,1
"jmp short loc_40EDEC  | * | mov [esp+1Ch+var_1C], offset aBasicStringCom  ",gcc,1
loc_40EE05:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringCom   | * | __ZNKSs7compareEjjRKSs endp ",gcc,1
__ZNKSs7compareEjjRKSs endp  | * | public __ZNKSs7compareEjjRKSsjj ,gcc,1
align 4  | * | __ZNKSs7compareEjjRKSsjj proc near ,gcc,1
"push ebx  | * | mov eax, [esp+2Ch+this] ",gcc,2
"sub esp, 1Ch  | * | mov edx, [esp+2Ch+arg_C] ",gcc,1
"mov eax, [esp+2Ch+this]  | * | mov ecx, [ecx] ",gcc,1
"mov edx, [esp+2Ch+arg_C]  | * | mov esi, [ecx-0Ch] ",gcc,1
"mov ecx, [ecx]  | * | cmp eax, esi ",gcc,1
"mov esi, [ecx-0Ch]  | * | ja short loc_40EE9E ",gcc,1
"cmp eax, esi  | * | mov ebx, [esp+2Ch+arg_8] ",gcc,1
"ja short loc_40EE9E  | * | mov edi, [ebx] ",gcc,1
"mov ebx, [esp+2Ch+arg_8]  | * | mov ebx, [edi-0Ch] ",gcc,1
"mov edi, [ebx]  | * | cmp edx, ebx ",gcc,1
"mov ebx, [edi-0Ch]  | * | ja short loc_40EE9E ",gcc,1
"cmp edx, ebx  | * | sub esi, eax ",gcc,1
"ja short loc_40EE9E  | * | cmp esi, [esp+2Ch+arg_4] ",gcc,1
"sub esi, eax  | * | ja short loc_40EE8C ",gcc,1
"cmp esi, [esp+2Ch+arg_4]  | * | mov ebp, ebx ",gcc,1
"ja short loc_40EE8C  | * | sub ebp, edx ",gcc,1
"mov ebp, ebx  | * | mov ebx, [esp+2Ch+arg_10] ",gcc,2
"sub ebp, edx  | * | cmp ebx, ebp ",gcc,2
"mov ebx, [esp+2Ch+arg_10]  | * | ja short loc_40EE80 ",gcc,1
"cmp ebx, ebp  | * | loc_40EE4D:  ",gcc,1
"ja short loc_40EE80  | * | mov ebp, ebx ",gcc,1
"loc_40EE4D:   | * | cmp ebx, esi ",gcc,1
"mov ebp, ebx  | * | ja short loc_40EE7C ",gcc,1
"cmp ebx, esi  | * | loc_40EE53:  ",gcc,1
"ja short loc_40EE7C  | * | mov [esp+2Ch+var_24], ebp  ",gcc,1
"loc_40EE53:   | * | add edx, edi ",gcc,1
"mov [esp+2Ch+var_24], ebp   | * | mov [esp+2Ch+var_28], edx  ",gcc,1
"add edx, edi  | * | add eax, ecx ",gcc,1
"mov [esp+2Ch+var_28], edx   | * | mov [esp+2Ch+var_2C], eax  ",gcc,1
"add eax, ecx  | * | call _memcmp ",gcc,1
call _memcmp  | * | jnz short loc_40EE6F ,gcc,1
"jnz short loc_40EE6F  | * | sub eax, ebx ",gcc,1
"mov eax, esi  | * | loc_40EE6F:  ",gcc,1
"sub eax, ebx  | * | add esp, 1Ch ",gcc,1
loc_40EE6F:   | * | pop ebx ,gcc,1
pop edi  | * | retn 14h ,gcc,1
retn 14h  | * | loc_40EE7C:  ,gcc,1
"align 4  | * | mov ebp, esi ",gcc,1
loc_40EE7C:   | * | jmp short loc_40EE53 ,gcc,1
"mov ebp, esi  | * | loc_40EE80:  ",gcc,1
"jmp short loc_40EE53  | * | mov ebx, ebp ",gcc,1
"loc_40EE80:   | * | mov ebp, ebx ",gcc,1
"mov ebx, ebp  | * | cmp ebx, esi ",gcc,1
"mov ebp, ebx  | * | jbe short loc_40EE53 ",gcc,1
"cmp ebx, esi  | * | jmp short loc_40EE7C ",gcc,1
jbe short loc_40EE53  | * | align 4 ,gcc,1
jmp short loc_40EE7C  | * | loc_40EE8C:  ,gcc,1
"align 4  | * | mov esi, [esp+2Ch+arg_4] ",gcc,1
"loc_40EE8C:   | * | mov ebp, ebx ",gcc,1
"mov esi, [esp+2Ch+arg_4]  | * | sub ebp, edx ",gcc,1
"mov ebx, [esp+2Ch+arg_10]  | * | jbe short loc_40EE4D ",gcc,1
"cmp ebx, ebp  | * | jmp short loc_40EE80 ",gcc,1
jbe short loc_40EE4D  | * | loc_40EE9E:  ,gcc,1
"jmp short loc_40EE80  | * | mov [esp+2Ch+var_2C], offset aBasicStringCom  ",gcc,1
loc_40EE9E:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+2Ch+var_2C], offset aBasicStringCom   | * | __ZNKSs7compareEjjRKSsjj endp ",gcc,1
__ZNKSs7compareEjjRKSsjj endp  | * | public __ZNKSs7crbeginEv ,gcc,1
align 4  | * | __ZNKSs7crbeginEv proc near ,gcc,1
"__ZNKSs7crbeginEv proc near  | * | mov eax, ecx ",gcc,1
"mov [ecx], edx  | * | __ZNKSs7crbeginEv endp ",gcc,1
retn 4  | * | public __ZNKSs8_M_checkEjPKc ,gcc,1
__ZNKSs7crbeginEv endp  | * | __ZNKSs8_M_checkEjPKc proc near ,gcc,1
"mov edx, [ecx]  | * | ja short loc_40EED0 ",gcc,1
"cmp eax, [edx-0Ch]  | * | add esp, 1Ch ",gcc,1
ja short loc_40EED0  | * | retn 8 ,gcc,1
"add esp, 1Ch  | * | loc_40EED0:  ",gcc,1
"retn 8  | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"loc_40EED0:   | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | call __ZSt20__throw_out_of_rangePKc  ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | __ZNKSs8_M_checkEjPKc endp ",gcc,1
call __ZSt20__throw_out_of_rangePKc   | * | public __ZNKSs8_M_limitEjj ,gcc,1
__ZNKSs8_M_checkEjPKc endp  | * | __ZNKSs8_M_limitEjj proc near ,gcc,1
"mov eax, [ecx]  | * | sub edx, [esp+this] ",gcc,1
"mov edx, [eax-0Ch]  | * | mov eax, [esp+arg_4] ",gcc,1
"sub edx, [esp+this]  | * | cmp eax, edx ",gcc,1
"mov eax, [esp+arg_4]  | * | jbe short locret_40EEEF ",gcc,1
"cmp eax, edx  | * | mov eax, edx ",gcc,1
jbe short locret_40EEEF  | * | locret_40EEEF:  ,gcc,1
"mov eax, edx  | * | retn 8 ",gcc,1
locret_40EEEF:   | * | __ZNKSs8_M_limitEjj endp ,gcc,1
__ZNKSs8_M_limitEjj endp  | * | public __ZNKSs8capacityEv ,gcc,1
align 4  | * | __ZNKSs8capacityEv proc near ,gcc,1
"__ZNKSs8capacityEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [eax-8]  | * | __ZNKSs8capacityEv endp ",gcc,1
__ZNKSs8capacityEv endp  | * | public __ZNKSs8max_sizeEv ,gcc,1
align 4  | * | __ZNKSs8max_sizeEv proc near ,gcc,1
"__ZNKSs8max_sizeEv proc near  | * | mov eax, 3FFFFFFCh ",gcc,1
"mov eax, 3FFFFFFCh  | * | __ZNKSs8max_sizeEv endp ",gcc,1
__ZNKSs8max_sizeEv endp  | * | public __ZNKSs9_M_ibeginEv ,gcc,1
align 4  | * | __ZNKSs9_M_ibeginEv proc near ,gcc,1
"__ZNKSs9_M_ibeginEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | __ZNKSs9_M_ibeginEv endp ",gcc,1
__ZNKSs9_M_ibeginEv endp  | * | public __ZNKSsixEj ,gcc,1
align 4  | * | __ZNKSsixEj proc near ,gcc,1
"__ZNKSsixEj proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | retn 4 ",gcc,1
"add eax, [esp+arg_0]  | * | __ZNKSsixEj endp ",gcc,1
__ZNKSsixEj endp  | * | public __ZNKSt17_Rb_tree_iteratorIiEeqERKS0_ ,gcc,1
align 4  | * | __ZNKSt17_Rb_tree_iteratorIiEeqERKS0_ proc near ,gcc,1
"sub esp, 4  | * | mov eax, [ebp+var_4] ",gcc,10
"mov [ebp+var_4], ecx  | * | mov edx, [eax] ",gcc,4
"mov eax, [ebp+var_4]  | * | mov eax, [ebp+arg_0] ",gcc,2
"mov edx, [eax]  | * | mov eax, [eax] ",gcc,3
"mov eax, [ebp+arg_0]  | * | cmp edx, eax ",gcc,2
"mov eax, [eax]  | * | setz al ",gcc,2
"cmp edx, eax  | * | leave ",gcc,3
setz al  | * | retn 4 ,gcc,2
leave  | * | __ZNKSt17_Rb_tree_iteratorIiEeqERKS0_ endp ,gcc,1
retn 4  | * | public __ZNKSt23_Rb_tree_const_iteratorIiEeqERKS0_ ,gcc,1
__ZNKSt17_Rb_tree_iteratorIiEeqERKS0_ endp  | * | __ZNKSt23_Rb_tree_const_iteratorIiEeqERKS0_ proc near ,gcc,1
leave  | * | __ZNKSt23_Rb_tree_const_iteratorIiEeqERKS0_ endp ,gcc,1
retn 4  | * | public __ZNKSt3setIiSt4lessIiESaIiEE3endEv ,gcc,1
__ZNKSt23_Rb_tree_const_iteratorIiEeqERKS0_ endp  | * | __ZNKSt3setIiSt4lessIiESaIiEE3endEv proc near ,gcc,1
__ZNKSt3setIiSt4lessIiESaIiEE3endEv proc near  | * | push ebp ,gcc,1
"sub esp, 18h  | * | mov eax, [ebp+var_C] ",gcc,9
"mov eax, [ebp+var_C]  | * | call __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv  ",gcc,1
"mov ecx, eax  | * | leave ",gcc,9
call __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv   | * | retn ,gcc,1
leave  | * | __ZNKSt3setIiSt4lessIiESaIiEE3endEv endp ,gcc,1
__ZNKSt3setIiSt4lessIiESaIiEE3endEv endp  | * | public __ZNKSt4lessIiEclERKiS2_ ,gcc,1
align 4  | * | __ZNKSt4lessIiEclERKiS2_ proc near  ,gcc,1
"sub esp, 4  | * | mov eax, [ebp+arg_0] ",gcc,3
"mov eax, [ebp+arg_0]  | * | mov eax, [ebp+arg_4] ",gcc,1
"mov eax, [ebp+arg_4]  | * | cmp edx, eax ",gcc,1
"mov eax, [eax]  | * | setl al ",gcc,1
setl al  | * | retn 8 ,gcc,1
leave  | * | __ZNKSt4lessIiEclERKiS2_ endp ,gcc,1
retn 8  | * | public __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13get_allocatorEv ,gcc,1
__ZNKSt4lessIiEclERKiS2_ endp  | * | __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13get_allocatorEv proc near ,gcc,1
"sub esp, 28h  | * | mov ecx, [ebp+arg_0] ",gcc,1
"mov [ebp+var_C], ecx  | * | call __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv  ",gcc,1
"mov ecx, [ebp+arg_0]  | * | mov edx, [ebp+var_C] ",gcc,1
"call __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv   | * | mov [esp], eax ",gcc,1
"mov edx, [ebp+var_C]  | * | mov ecx, edx ",gcc,1
"mov [esp], eax  | * | call __ZNSaIiEC1ISt13_Rb_tree_nodeIiEEERKSaIT_E  ",gcc,1
"mov ecx, edx  | * | sub esp, 4 ",gcc,5
"call __ZNSaIiEC1ISt13_Rb_tree_nodeIiEEERKSaIT_E   | * | mov eax, [ebp+var_C] ",gcc,1
"mov eax, [ebp+var_C]  | * | retn 4 ",gcc,1
leave  | * | __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13get_allocatorEv endp ,gcc,1
retn 4  | * | public __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv ,gcc,1
__ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13get_allocatorEv endp  | * | __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv proc near ,gcc,1
__ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv proc near  | * | push ebp ,gcc,1
"mov eax, [ebp+var_4]  | * | retn ",gcc,2
leave  | * | __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv endp ,gcc,1
__ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE21_M_get_Node_allocatorEv endp  | * | public __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv ,gcc,1
align 4  | * | __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv proc near ,gcc,1
"push ebp  | * | sub esp, 38h ",gcc,5
"mov ebp, esp  | * | mov [ebp+var_1C], ecx ",gcc,5
"sub esp, 38h  | * | mov eax, [ebp+var_1C] ",gcc,3
"mov [ebp+var_1C], ecx  | * | lea edx, [eax+4] ",gcc,2
"mov eax, [ebp+var_1C]  | * | lea eax, [ebp+var_C] ",gcc,2
"lea edx, [eax+4]  | * | mov [esp], edx ",gcc,2
"lea eax, [ebp+var_C]  | * | mov ecx, eax ",gcc,2
"mov [esp], edx  | * | call __ZNSt23_Rb_tree_const_iteratorIiEC1EPKSt13_Rb_tree_nodeIiE  ",gcc,1
"call __ZNSt23_Rb_tree_const_iteratorIiEC1EPKSt13_Rb_tree_nodeIiE   | * | mov eax, [ebp+var_C] ",gcc,1
"mov eax, [ebp+var_C]  | * | retn ",gcc,3
leave  | * | __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv endp ,gcc,1
retn  | * | public __ZNKSt9_IdentityIiEclERKi ,gcc,1
__ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv endp  | * | __ZNKSt9_IdentityIiEclERKi proc near  ,gcc,1
"mov eax, [ebp+arg_0]  | * | retn 4 ",gcc,1
leave  | * | __ZNKSt9_IdentityIiEclERKi endp ,gcc,1
retn 4  | * | public __ZNSaISt13_Rb_tree_nodeIiEEC2Ev ,gcc,1
__ZNKSt9_IdentityIiEclERKi endp  | * | __ZNSaISt13_Rb_tree_nodeIiEEC2Ev proc near ,gcc,1
__ZNSaISt13_Rb_tree_nodeIiEEC2Ev proc near  | * | push ebp ,gcc,1
"mov eax, [ebp+var_C]  | * | call __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev  ",gcc,1
call __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEEC2Ev   | * | retn ,gcc,1
leave  | * | __ZNSaISt13_Rb_tree_nodeIiEEC2Ev endp ,gcc,1
__ZNSaISt13_Rb_tree_nodeIiEEC2Ev endp  | * | public __ZNSaISt13_Rb_tree_nodeIiEED2Ev ,gcc,1
align 4  | * | __ZNSaISt13_Rb_tree_nodeIiEED2Ev proc near ,gcc,1
__ZNSaISt13_Rb_tree_nodeIiEED2Ev proc near  | * | push ebp ,gcc,1
"mov eax, [ebp+var_C]  | * | call __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev  ",gcc,1
call __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEED2Ev   | * | retn ,gcc,1
leave  | * | __ZNSaISt13_Rb_tree_nodeIiEED2Ev endp ,gcc,1
__ZNSaISt13_Rb_tree_nodeIiEED2Ev endp  | * | public __ZNSaIiEC1ISt13_Rb_tree_nodeIiEEERKSaIT_E ,gcc,1
align 4  | * | __ZNSaIiEC1ISt13_Rb_tree_nodeIiEEERKSaIT_E proc near ,gcc,1
__ZNSaIiEC1ISt13_Rb_tree_nodeIiEEERKSaIT_E proc near  | * | push ebp ,gcc,1
"mov eax, [ebp+var_C]  | * | call __ZN9__gnu_cxx13new_allocatorIiEC2Ev  ",gcc,1
call __ZN9__gnu_cxx13new_allocatorIiEC2Ev   | * | retn 4 ,gcc,1
leave  | * | __ZNSaIiEC1ISt13_Rb_tree_nodeIiEEERKSaIT_E endp ,gcc,1
__ZNSaIiEC1ISt13_Rb_tree_nodeIiEEERKSaIT_E endp  | * | public __ZNSaIiED1Ev ,gcc,1
align 4  | * | __ZNSaIiED1Ev proc near  ,gcc,1
__ZNSaIiED1Ev proc near   | * | push ebp ,gcc,1
"mov eax, [ebp+var_C]  | * | call __ZN9__gnu_cxx13new_allocatorIiED2Ev  ",gcc,1
call __ZN9__gnu_cxx13new_allocatorIiED2Ev   | * | retn ,gcc,1
leave  | * | __ZNSaIiED1Ev endp ,gcc,1
__ZNSaIiED1Ev endp  | * | public __ZNSs10_S_compareEjj ,gcc,1
align 4  | * | __ZNSs10_S_compareEjj proc near ,gcc,1
"mov eax, [esp+this]  | * | retn ",gcc,1
"sub eax, [esp+arg_4]  | * | __ZNSs10_S_compareEjj endp ",gcc,1
__ZNSs10_S_compareEjj endp  | * | public __ZNSs12_Alloc_hiderC1EPcRKSaIcE ,gcc,1
align 4  | * | __ZNSs12_Alloc_hiderC1EPcRKSaIcE proc near ,gcc,1
"__ZNSs12_Alloc_hiderC1EPcRKSaIcE proc near  | * | mov eax, [esp+arg_0] ",gcc,1
"mov eax, [esp+arg_0]  | * | retn 8 ",gcc,2
"mov [ecx], eax  | * | __ZNSs12_Alloc_hiderC1EPcRKSaIcE endp ",gcc,1
__ZNSs12_Alloc_hiderC1EPcRKSaIcE endp  | * | public __ZNSs12_Alloc_hiderC2EPcRKSaIcE ,gcc,1
align 4  | * | __ZNSs12_Alloc_hiderC2EPcRKSaIcE proc near ,gcc,1
"__ZNSs12_Alloc_hiderC2EPcRKSaIcE proc near  | * | mov eax, [esp+arg_0] ",gcc,1
"mov [ecx], eax  | * | __ZNSs12_Alloc_hiderC2EPcRKSaIcE endp ",gcc,1
__ZNSs12_Alloc_hiderC2EPcRKSaIcE endp  | * | public __ZNSs12_M_leak_hardEv ,gcc,1
align 10h  | * | __ZNSs12_M_leak_hardEv proc near  ,gcc,1
"mov ebx, ecx  | * | mov ecx, [eax-4] ",gcc,1
"mov ecx, [eax-4]  | * | jle short loc_40F0A2 ",gcc,1
"test ecx, ecx  | * | mov [esp+1Ch+var_14], 0  ",gcc,1
"jle short loc_40F0A2  | * | mov [esp+1Ch+var_18], 0  ",gcc,1
"mov [esp+1Ch+var_14], 0   | * | mov [esp+1Ch+var_1C], 0  ",gcc,1
"mov [esp+1Ch+var_18], 0   | * | mov ecx, ebx ",gcc,1
"mov [esp+1Ch+var_1C], 0   | * | call __ZNSs9_M_mutateEjjj  ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | mov eax, [ebx] ",gcc,2
"sub esp, 0Ch  | * | loc_40F0A2:  ",gcc,1
"mov eax, [ebx]  | * | mov dword ptr [eax-4], 0FFFFFFFFh ",gcc,1
"loc_40F0A2:   | * | add esp, 18h ",gcc,1
"mov dword ptr [eax-4], 0FFFFFFFFh  | * | pop ebx ",gcc,1
pop ebx  | * | __ZNSs12_M_leak_hardEv endp ,gcc,1
__ZNSs12_M_leak_hardEv endp  | * | public __ZNSs12_S_constructEjcRKSaIcE ,gcc,1
align 10h  | * | __ZNSs12_S_constructEjcRKSaIcE proc near ,gcc,1
"sub esp, 1Ch  | * | mov ebp, [esp+2Ch+arg_4] ",gcc,1
"mov ebx, [esp+2Ch+arg_0]  | * | mov eax, [esp+2Ch+arg_8] ",gcc,1
"mov ebp, [esp+2Ch+arg_4]  | * | mov [esp+2Ch+var_24], eax ",gcc,1
"mov eax, [esp+2Ch+arg_8]  | * | mov [esp+2Ch+var_28], 0 ",gcc,1
"mov [esp+2Ch+var_28], 0  | * | call __ZNSs4_Rep9_S_createEjjRKSaIcE  ",gcc,1
"mov [esp+2Ch+var_2C], ebx  | * | mov edx, eax ",gcc,1
"call __ZNSs4_Rep9_S_createEjjRKSaIcE   | * | test ebx, ebx ",gcc,1
"mov edx, eax  | * | jnz short loc_40F0F8 ",gcc,1
"test ebx, ebx  | * | loc_40F0DD:  ",gcc,1
"jnz short loc_40F0F8  | * | lea ebp, [edx+0Ch] ",gcc,1
loc_40F0DD:   | * | loc_40F0E0:  ,gcc,1
"lea ebp, [edx+0Ch]  | * | mov dword ptr [edx+8], 0 ",gcc,1
"loc_40F0E0:   | * | mov [edx], ebx ",gcc,1
"mov dword ptr [edx+8], 0  | * | mov byte ptr [ebp+ebx+0], 0 ",gcc,1
"mov [edx], ebx  | * | mov eax, ebp ",gcc,1
"mov byte ptr [ebp+ebx+0], 0  | * | add esp, 1Ch ",gcc,1
pop ebp  | * | loc_40F0F8:  ,gcc,1
"retn  | * | cmp ebx, 1 ",gcc,1
loc_40F0F8:   | * | jz short loc_40F10C ,gcc,1
"cmp ebx, 1  | * | mov esi, ebp ",gcc,1
"jz short loc_40F10C  | * | lea ebp, [eax+0Ch] ",gcc,1
"mov esi, ebp  | * | mov edi, ebp ",gcc,1
"lea ebp, [eax+0Ch]  | * | mov ecx, ebx ",gcc,1
"mov edi, ebp  | * | mov eax, esi ",gcc,1
"mov ecx, ebx  | * | rep stosb ",gcc,2
"mov eax, esi  | * | jmp short loc_40F0E0 ",gcc,1
rep stosb  | * | loc_40F10C:  ,gcc,1
"jmp short loc_40F0E0  | * | mov eax, ebp ",gcc,1
"loc_40F10C:   | * | mov [edx+0Ch], al ",gcc,1
"mov eax, ebp  | * | jmp short loc_40F0DD ",gcc,1
"mov [edx+0Ch], al  | * | __ZNSs12_S_constructEjcRKSaIcE endp ",gcc,1
jmp short loc_40F0DD  | * | align 4 ,gcc,1
__ZNSs12_S_constructEjcRKSaIcE endp  | * | public __ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag ,gcc,1
align 4  | * | __ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag proc near ,gcc,1
"sub esp, 10h  | * | mov ebx, [esp+1Ch+arg_4] ",gcc,1
"mov esi, [esp+1Ch+arg_0]  | * | sub ebx, esi ",gcc,1
"mov ebx, [esp+1Ch+arg_4]  | * | mov eax, [esp+1Ch+arg_8] ",gcc,3
"sub ebx, esi  | * | mov [esp+1Ch+var_14], eax ",gcc,3
"mov eax, [esp+1Ch+arg_8]  | * | mov [esp+1Ch+var_18], 0 ",gcc,3
"mov [esp+1Ch+var_14], eax  | * | mov [esp+1Ch+var_1C], ebx ",gcc,3
"mov [esp+1Ch+var_18], 0  | * | call __ZNSs4_Rep9_S_createEjjRKSaIcE  ",gcc,5
"mov [esp+1Ch+var_1C], ebx  | * | lea edx, [eax+0Ch] ",gcc,1
"call __ZNSs4_Rep9_S_createEjjRKSaIcE   | * | cmp ebx, 1 ",gcc,1
"lea edx, [eax+0Ch]  | * | jz short loc_40F160 ",gcc,1
"cmp ebx, 1  | * | mov edi, edx ",gcc,3
"jz short loc_40F160  | * | mov ecx, ebx ",gcc,1
"mov edi, edx  | * | rep movsb ",gcc,6
"mov ecx, ebx  | * | loc_40F14A:  ",gcc,1
"rep movsb  | * | mov dword ptr [eax+8], 0 ",gcc,1
"loc_40F14A:   | * | mov [eax], ebx ",gcc,1
"mov dword ptr [eax+8], 0  | * | mov byte ptr [edx+ebx], 0 ",gcc,1
"mov [eax], ebx  | * | mov eax, edx ",gcc,1
"mov byte ptr [edx+ebx], 0  | * | add esp, 10h ",gcc,1
"mov eax, edx  | * | pop ebx ",gcc,2
pop edi  | * | loc_40F160:  ,gcc,1
"retn  | * | mov cl, [esi] ",gcc,3
"loc_40F160:   | * | mov [eax+0Ch], cl ",gcc,1
"mov cl, [esi]  | * | jmp short loc_40F14A ",gcc,1
"mov [eax+0Ch], cl  | * | __ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag endp ",gcc,1
jmp short loc_40F14A  | * | align 4 ,gcc,1
__ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag endp  | * | public __ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag ,gcc,1
align 4  | * | __ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag proc near ,gcc,1
"sub esp, 10h  | * | test esi, esi ",gcc,2
"mov esi, [esp+1Ch+arg_0]  | * | jz short loc_40F1C0 ",gcc,1
"test esi, esi  | * | mov ebx, [esp+1Ch+arg_4] ",gcc,2
"jz short loc_40F1C0  | * | sub ebx, esi ",gcc,1
"mov [esp+1Ch+var_1C], ebx  | * | mov edx, eax ",gcc,2
"call __ZNSs4_Rep9_S_createEjjRKSaIcE   | * | lea eax, [eax+0Ch] ",gcc,4
"mov edx, eax  | * | cmp ebx, 1 ",gcc,2
"lea eax, [eax+0Ch]  | * | jz short loc_40F1B8 ",gcc,1
"cmp ebx, 1  | * | loc_40F19E:  ",gcc,1
"jz short loc_40F1B8  | * | mov edi, eax ",gcc,1
"loc_40F19E:   | * | mov ecx, ebx ",gcc,1
"mov edi, eax  | * | rep movsb ",gcc,5
"mov ecx, ebx  | * | loc_40F1A4:  ",gcc,1
"rep movsb  | * | mov dword ptr [edx+8], 0 ",gcc,2
"loc_40F1A4:   | * | mov [edx], ebx ",gcc,1
"mov dword ptr [edx+8], 0  | * | mov byte ptr [eax+ebx], 0 ",gcc,2
"mov [edx], ebx  | * | add esp, 10h ",gcc,2
"mov byte ptr [eax+ebx], 0  | * | pop ebx ",gcc,3
pop edi  | * | loc_40F1B8:  ,gcc,1
"loc_40F1B8:   | * | mov [edx+0Ch], cl ",gcc,1
"mov cl, [esi]  | * | jmp short loc_40F1A4 ",gcc,1
"mov [edx+0Ch], cl  | * | align 10h ",gcc,1
jmp short loc_40F1A4  | * | loc_40F1C0:  ,gcc,1
"align 10h  | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"loc_40F1C0:   | * | test eax, eax ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | jz short loc_40F1D4 ",gcc,1
"test eax, eax  | * | mov [esp+1Ch+var_1C], offset aBasicStringSCo  ",gcc,2
jz short loc_40F1D4  | * | call __ZSt19__throw_logic_errorPKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringSCo   | * | loc_40F1D4:  ",gcc,1
"call __ZSt19__throw_logic_errorPKc   | * | mov ecx, [esp+1Ch+arg_8] ",gcc,2
"loc_40F1D4:   | * | mov [esp+1Ch+var_14], ecx ",gcc,1
"mov ecx, [esp+1Ch+arg_8]  | * | mov [esp+1Ch+var_18], 0 ",gcc,2
"mov [esp+1Ch+var_14], ecx  | * | mov [esp+1Ch+var_1C], 0 ",gcc,2
"mov [esp+1Ch+var_1C], 0  | * | mov edx, eax ",gcc,2
"mov edx, eax  | * | xor ebx, ebx ",gcc,2
"lea eax, [eax+0Ch]  | * | jmp short loc_40F19E ",gcc,1
"xor ebx, ebx  | * | __ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag endp ",gcc,1
jmp short loc_40F19E  | * | align 4 ,gcc,1
__ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag endp  | * | public __ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag ,gcc,1
align 4  | * | __ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag proc near ,gcc,1
"mov esi, [esp+1Ch+arg_0]  | * | jz short loc_40F254 ",gcc,1
"jz short loc_40F254  | * | sub ebx, esi ",gcc,1
"lea eax, [eax+0Ch]  | * | jz short loc_40F24C ",gcc,1
"cmp ebx, 1  | * | loc_40F232:  ",gcc,1
"jz short loc_40F24C  | * | mov edi, eax ",gcc,1
"loc_40F232:   | * | mov ecx, ebx ",gcc,1
"mov ecx, ebx  | * | loc_40F238:  ",gcc,1
"loc_40F238:   | * | mov [edx], ebx ",gcc,1
pop edi  | * | loc_40F24C:  ,gcc,1
"loc_40F24C:   | * | mov [edx+0Ch], cl ",gcc,1
"mov cl, [esi]  | * | jmp short loc_40F238 ",gcc,1
"mov [edx+0Ch], cl  | * | align 4 ",gcc,1
jmp short loc_40F238  | * | loc_40F254:  ,gcc,1
"align 4  | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"loc_40F254:   | * | test eax, eax ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | jz short loc_40F268 ",gcc,1
jz short loc_40F268  | * | call __ZSt19__throw_logic_errorPKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringSCo   | * | loc_40F268:  ",gcc,1
"loc_40F268:   | * | mov [esp+1Ch+var_14], ecx ",gcc,1
"lea eax, [eax+0Ch]  | * | jmp short loc_40F232 ",gcc,1
"xor ebx, ebx  | * | __ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag endp ",gcc,1
jmp short loc_40F232  | * | align 10h ,gcc,1
__ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag endp  | * | public __ZNSs12_S_empty_repEv ,gcc,1
align 10h  | * | __ZNSs12_S_empty_repEv proc near ,gcc,1
"__ZNSs12_S_empty_repEv proc near  | * | mov eax, offset __ZNSs4_Rep20_S_empty_rep_storageE  ",gcc,1
"mov eax, offset __ZNSs4_Rep20_S_empty_rep_storageE   | * | __ZNSs12_S_empty_repEv endp ",gcc,1
__ZNSs12_S_empty_repEv endp  | * | public __ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_ ,gcc,1
align 4  | * | __ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_ proc near ,gcc,1
push edi  | * | push eax ,gcc,3
"push esi  | * | mov esi, [esp+0Ch+arg_4] ",gcc,5
"push eax  | * | mov ecx, [esp+0Ch+arg_8] ",gcc,3
"mov esi, [esp+0Ch+arg_4]  | * | sub ecx, esi ",gcc,4
"mov ecx, [esp+0Ch+arg_8]  | * | cmp ecx, 1 ",gcc,4
"sub ecx, esi  | * | jz short loc_40F2B4 ",gcc,1
"cmp ecx, 1  | * | mov edi, [esp+0Ch+arg_0] ",gcc,2
jz short loc_40F2B4  | * | rep movsb ,gcc,1
"mov edi, [esp+0Ch+arg_0]  | * | pop edi ",gcc,1
pop edi  | * | pop edi ,gcc,2
pop edi  | * | loc_40F2B4:  ,gcc,1
"retn  | * | mov al, [esi] ",gcc,4
"loc_40F2B4:   | * | mov edx, [esp+0Ch+arg_0] ",gcc,1
"mov al, [esi]  | * | mov [edx], al ",gcc,5
"mov edx, [esp+0Ch+arg_0]  | * | pop edi ",gcc,1
"mov [edx], al  | * | pop esi ",gcc,5
pop edi  | * | __ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_ endp ,gcc,1
retn  | * | public __ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_ ,gcc,1
__ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_ endp  | * | __ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_ proc near ,gcc,1
push edi  | * | push esi ,gcc,1
"push esi  | * | mov ecx, [esp+0Ch+arg_8] ",gcc,1
"sub ecx, esi  | * | jz short loc_40F2DC ",gcc,1
jz short loc_40F2DC  | * | rep movsb ,gcc,1
"mov edi, [esp+0Ch+arg_0]  | * | pop ecx ",gcc,1
pop ecx  | * | pop edi ,gcc,2
pop edi  | * | loc_40F2DC:  ,gcc,1
"loc_40F2DC:   | * | mov edx, [esp+0Ch+arg_0] ",gcc,1
"mov edx, [esp+0Ch+arg_0]  | * | pop ecx ",gcc,1
pop edi  | * | __ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_ endp ,gcc,1
retn  | * | public __ZNSs13_S_copy_charsEPcPKcS1_ ,gcc,1
__ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_ endp  | * | __ZNSs13_S_copy_charsEPcPKcS1_ proc near ,gcc,1
"sub ecx, esi  | * | jz short loc_40F304 ",gcc,1
"cmp ecx, 1  | * | mov edi, [esp+0Ch+this] ",gcc,3
jz short loc_40F304  | * | rep movsb ,gcc,1
"mov edi, [esp+0Ch+this]  | * | pop eax ",gcc,3
pop eax  | * | pop edi ,gcc,6
pop edi  | * | loc_40F304:  ,gcc,1
"loc_40F304:   | * | mov edx, [esp+0Ch+this] ",gcc,1
"mov edx, [esp+0Ch+this]  | * | pop eax ",gcc,3
pop edi  | * | __ZNSs13_S_copy_charsEPcPKcS1_ endp ,gcc,1
retn  | * | public __ZNSs13_S_copy_charsEPcS_S_ ,gcc,1
__ZNSs13_S_copy_charsEPcPKcS1_ endp  | * | __ZNSs13_S_copy_charsEPcS_S_ proc near ,gcc,1
"sub ecx, esi  | * | jz short loc_40F32C ",gcc,1
jz short loc_40F32C  | * | rep movsb ,gcc,1
pop edi  | * | loc_40F32C:  ,gcc,1
"loc_40F32C:   | * | mov edx, [esp+0Ch+this] ",gcc,1
pop edi  | * | __ZNSs13_S_copy_charsEPcS_S_ endp ,gcc,1
retn  | * | public __ZNSs13shrink_to_fitEv ,gcc,1
__ZNSs13_S_copy_charsEPcS_S_ endp  | * | __ZNSs13shrink_to_fitEv proc near ,gcc,1
lpfctx = dword ptr -6Ch  | * | var_54 = dword ptr -54h ,data,1
var_2C = dword ptr -2Ch  | * | var_1C = byte ptr -1Ch ,data,1
"push esi  | * | sub esp, 5Ch ",gcc,2
"push ebx  | * | mov [esp+6Ch+var_54], ecx ",gcc,1
"sub esp, 5Ch  | * | mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov [esp+6Ch+var_54], ecx  | * | mov [esp+6Ch+fctx.lsda], offset dword_4123BC ",gcc,1
"mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea eax, [esp+6Ch+var_1C] ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4123BC  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_1C]  | * | mov [esp+6Ch+var_2C], offset loc_40F3B7 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_40F3B7  | * | lea edx, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+var_28], esp  | * | mov [esp+6Ch+var_58], edx ",gcc,1
"lea edx, [esp+6Ch+fctx]  | * | mov [esp+6Ch+lpfctx], edx  ",gcc,1
"mov [esp+6Ch+var_58], edx  | * | call __Unwind_SjLj_Register ",gcc,1
"mov [esp+6Ch+lpfctx], edx   | * | mov edx, [esp+6Ch+var_54] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov eax, [edx] ",gcc,1
"mov edx, [esp+6Ch+var_54]  | * | mov edx, [eax-0Ch] ",gcc,1
"mov eax, [edx]  | * | cmp [eax-8], edx ",gcc,1
"mov edx, [eax-0Ch]  | * | ja short loc_40F39C ",gcc,1
"cmp [eax-8], edx  | * | loc_40F385:  ",gcc,1
"ja short loc_40F39C  | * | mov edx, [esp+6Ch+var_58] ",gcc,1
"loc_40F385:   | * | mov [esp+6Ch+lpfctx], edx  ",gcc,1
"mov edx, [esp+6Ch+var_58]  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+6Ch+lpfctx], edx   | * | add esp, 5Ch ",gcc,1
call __Unwind_SjLj_Unregister  | * | pop ebx ,gcc,5
"add esp, 5Ch  | * | pop esi ",gcc,1
retn  | * | loc_40F39C:  ,gcc,1
"align 4  | * | mov [esp+6Ch+lpfctx], 0  ",gcc,1
"loc_40F39C:   | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], 0   | * | mov ecx, [esp+6Ch+var_54] ",gcc,1
"mov [esp+6Ch+fctx.call_site], 1  | * | call __ZNSs7reserveEj  ",gcc,3
"mov ecx, [esp+6Ch+var_54]  | * | push eax ",gcc,1
call __ZNSs7reserveEj   | * | jmp short loc_40F385 ,gcc,1
push eax  | * | loc_40F3B7:  ,gcc,1
"jmp short loc_40F385  | * | mov eax, [esp+6Ch+fctx.data] ",gcc,1
"loc_40F3B7:   | * | mov [esp+6Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+6Ch+fctx.data]  | * | call ___cxa_begin_catch ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"call ___cxa_end_catch  | * | mov [esp+6Ch+var_58], eax ",gcc,1
"lea eax, [esp+6Ch+fctx]  | * | jmp short loc_40F385 ",gcc,1
"mov [esp+6Ch+var_58], eax  | * | __ZNSs13shrink_to_fitEv endp ",gcc,1
jmp short loc_40F385  | * | align 4 ,gcc,1
__ZNSs13shrink_to_fitEv endp  | * | public __ZNSs14_M_replace_auxEjjjc ,gcc,1
align 4  | * | __ZNSs14_M_replace_auxEjjjc proc near  ,gcc,1
"sub esp, 1Ch  | * | mov eax, [esp+2Ch+arg_4] ",gcc,1
"mov esi, ecx  | * | mov ebx, [esp+2Ch+arg_8] ",gcc,1
"mov eax, [esp+2Ch+arg_4]  | * | mov edi, [esp+2Ch+arg_C] ",gcc,1
"mov ebx, [esp+2Ch+arg_8]  | * | mov edx, [ecx] ",gcc,1
"mov edi, [esp+2Ch+arg_C]  | * | mov ecx, eax ",gcc,1
"mov edx, [ecx]  | * | sub ecx, [edx-0Ch] ",gcc,1
"mov ecx, eax  | * | mov edx, ecx ",gcc,1
"sub ecx, [edx-0Ch]  | * | add edx, 3FFFFFFCh ",gcc,1
"mov edx, ecx  | * | cmp ebx, edx ",gcc,1
"add edx, 3FFFFFFCh  | * | ja short loc_40F464 ",gcc,1
"cmp ebx, edx  | * | mov [esp+2Ch+var_24], ebx  ",gcc,1
"ja short loc_40F464  | * | mov [esp+2Ch+var_28], eax  ",gcc,1
"mov [esp+2Ch+var_24], ebx   | * | mov eax, [esp+2Ch+this] ",gcc,1
"mov eax, [esp+2Ch+this]  | * | mov ecx, esi ",gcc,1
"mov [esp+2Ch+var_2C], eax   | * | call __ZNSs9_M_mutateEjjj  ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | test ebx, ebx ",gcc,2
"sub esp, 0Ch  | * | jnz short loc_40F430 ",gcc,1
"test ebx, ebx  | * | mov eax, esi ",gcc,1
"jnz short loc_40F430  | * | add esp, 1Ch ",gcc,1
retn 10h  | * | loc_40F430:  ,gcc,1
"align 10h  | * | mov edx, [esp+2Ch+this] ",gcc,1
"loc_40F430:   | * | add edx, [esi] ",gcc,1
"mov edx, [esp+2Ch+this]  | * | cmp ebx, 1 ",gcc,1
"add edx, [esi]  | * | jz short loc_40F454 ",gcc,1
"cmp ebx, 1  | * | mov ebp, edi ",gcc,1
"jz short loc_40F454  | * | mov edi, edx ",gcc,1
"mov ebp, edi  | * | mov ecx, ebx ",gcc,1
"mov edi, edx  | * | mov eax, ebp ",gcc,1
"mov eax, ebp  | * | mov eax, esi ",gcc,1
"rep stosb  | * | add esp, 1Ch ",gcc,1
retn 10h  | * | loc_40F454:  ,gcc,1
"align 4  | * | mov ecx, edi ",gcc,1
"loc_40F454:   | * | mov [edx], cl ",gcc,1
"mov [edx], cl  | * | add esp, 1Ch ",gcc,1
pop ebp  | * | loc_40F464:  ,gcc,1
"retn 10h  | * | mov [esp+2Ch+var_2C], offset aBasicStringMRe  ",gcc,1
loc_40F464:   | * | call __ZSt20__throw_length_errorPKc  ,gcc,1
"mov [esp+2Ch+var_2C], offset aBasicStringMRe   | * | __ZNSs14_M_replace_auxEjjjc endp ",gcc,1
call __ZSt20__throw_length_errorPKc   | * | public __ZNSs15_M_replace_safeEjjPKcj ,gcc,1
__ZNSs14_M_replace_auxEjjjc endp  | * | __ZNSs15_M_replace_safeEjjPKcj proc near ,gcc,1
"sub esp, 1Ch  | * | mov edi, [esp+2Ch+this] ",gcc,1
"mov ebp, ecx  | * | mov ebx, [esp+2Ch+arg_C] ",gcc,1
"mov edi, [esp+2Ch+this]  | * | mov [esp+2Ch+var_24], ebx  ",gcc,1
"mov ebx, [esp+2Ch+arg_C]  | * | mov eax, [esp+2Ch+arg_4] ",gcc,1
"mov [esp+2Ch+var_24], ebx   | * | mov [esp+2Ch+var_28], eax  ",gcc,1
"mov eax, [esp+2Ch+arg_4]  | * | mov [esp+2Ch+var_2C], edi  ",gcc,1
"mov [esp+2Ch+var_28], eax   | * | call __ZNSs9_M_mutateEjjj  ",gcc,1
"mov [esp+2Ch+var_2C], edi   | * | sub esp, 0Ch ",gcc,1
"sub esp, 0Ch  | * | jnz short loc_40F4A8 ",gcc,1
"test ebx, ebx  | * | mov eax, ebp ",gcc,1
"jnz short loc_40F4A8  | * | add esp, 1Ch ",gcc,1
pop ebp  | * | loc_40F4A8:  ,gcc,1
"retn 10h  | * | mov eax, [ebp+0] ",gcc,1
"loc_40F4A8:   | * | add eax, edi ",gcc,1
"mov eax, [ebp+0]  | * | cmp ebx, 1 ",gcc,1
"add eax, edi  | * | jz short loc_40F4C8 ",gcc,1
"cmp ebx, 1  | * | mov edi, eax ",gcc,1
"jz short loc_40F4C8  | * | mov esi, [esp+2Ch+arg_8] ",gcc,1
"mov edi, eax  | * | mov ecx, ebx ",gcc,1
"mov esi, [esp+2Ch+arg_8]  | * | rep movsb ",gcc,1
"rep movsb  | * | add esp, 1Ch ",gcc,1
pop ebp  | * | loc_40F4C8:  ,gcc,1
"retn 10h  | * | mov edx, [esp+2Ch+arg_8] ",gcc,1
"loc_40F4C8:   | * | mov dl, [edx] ",gcc,1
"mov edx, [esp+2Ch+arg_8]  | * | mov [eax], dl ",gcc,1
"mov dl, [edx]  | * | mov eax, ebp ",gcc,1
"mov [eax], dl  | * | add esp, 1Ch ",gcc,1
pop ebp  | * | __ZNSs15_M_replace_safeEjjPKcj endp ,gcc,1
retn 10h  | * | public __ZNSs18_S_construct_aux_2EjcRKSaIcE ,gcc,1
__ZNSs15_M_replace_safeEjjPKcj endp  | * | __ZNSs18_S_construct_aux_2EjcRKSaIcE proc near ,gcc,1
"__ZNSs18_S_construct_aux_2EjcRKSaIcE proc near  | * | movsx eax, byte ptr [esp+arg_4] ",gcc,1
"movsx eax, byte ptr [esp+arg_4]  | * | jmp __ZNSs12_S_constructEjcRKSaIcE  ",gcc,1
"mov [esp+arg_4], eax  | * | __ZNSs18_S_construct_aux_2EjcRKSaIcE endp ",gcc,1
jmp __ZNSs12_S_constructEjcRKSaIcE   | * | align 4 ,gcc,1
__ZNSs18_S_construct_aux_2EjcRKSaIcE endp  | * | public __ZNSs2atEj ,gcc,1
align 4  | * | __ZNSs2atEj proc near ,gcc,1
"sub esp, 14h  | * | mov esi, [esp+1Ch+this] ",gcc,1
"mov ebx, ecx  | * | mov eax, [ecx] ",gcc,3
"mov esi, [esp+1Ch+this]  | * | cmp esi, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | jnb short loc_40F516 ",gcc,1
"cmp esi, [eax-0Ch]  | * | mov edx, [eax-4] ",gcc,1
"jnb short loc_40F516  | * | test edx, edx ",gcc,1
"mov edx, [eax-4]  | * | js short loc_40F50C ",gcc,1
"test edx, edx  | * | call __ZNSs12_M_leak_hardEv  ",gcc,4
"js short loc_40F50C  | * | mov eax, [ebx] ",gcc,1
call __ZNSs12_M_leak_hardEv   | * | loc_40F50C:  ,gcc,1
"mov eax, [ebx]  | * | add eax, esi ",gcc,3
"loc_40F50C:   | * | add esp, 14h ",gcc,1
"add eax, esi  | * | pop ebx ",gcc,3
pop esi  | * | loc_40F516:  ,gcc,1
loc_40F516:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringAt   | * | __ZNSs2atEj endp ",gcc,1
__ZNSs2atEj endp  | * | public __ZNSs3endEv ,gcc,1
align 4  | * | __ZNSs3endEv proc near ,gcc,1
lpfctx = dword ptr -5Ch  | * | this = dword ptr 4 ,data,4
"push esi  | * | sub esp, 54h ",gcc,1
"sub esp, 54h  | * | mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov ebx, ecx  | * | mov [esp+5Ch+fctx.lsda], offset dword_4123B4 ",gcc,1
"mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea esi, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4123B4  | * | mov [esp+5Ch+lpfctx], esi  ",gcc,1
"lea esi, [esp+5Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,1
"mov [esp+5Ch+lpfctx], esi   | * | mov eax, [ebx] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov ecx, [eax-4] ",gcc,1
"mov eax, [ebx]  | * | test ecx, ecx ",gcc,1
"mov ecx, [eax-4]  | * | js short loc_40F561 ",gcc,1
"test ecx, ecx  | * | mov [esp+5Ch+fctx.call_site], 0 ",gcc,3
"js short loc_40F561  | * | mov ecx, ebx ",gcc,1
"mov [esp+5Ch+fctx.call_site], 0  | * | call __ZNSs12_M_leak_hardEv  ",gcc,4
"mov ecx, ebx  | * | mov eax, [ebx] ",gcc,1
call __ZNSs12_M_leak_hardEv   | * | loc_40F561:  ,gcc,1
"mov eax, [ebx]  | * | mov ebx, [eax-0Ch] ",gcc,1
"loc_40F561:   | * | add ebx, eax ",gcc,1
"mov ebx, [eax-0Ch]  | * | mov [esp+5Ch+lpfctx], esi  ",gcc,1
"add ebx, eax  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+5Ch+lpfctx], esi   | * | mov eax, ebx ",gcc,1
"add esp, 54h  | * | pop esi ",gcc,1
pop esi  | * | __ZNSs3endEv endp ,gcc,1
__ZNSs3endEv endp  | * | public __ZNSs4_Rep10_M_destroyERKSaIcE ,gcc,1
align 4  | * | __ZNSs4_Rep10_M_destroyERKSaIcE proc near ,gcc,1
"__ZNSs4_Rep10_M_destroyERKSaIcE proc near  | * | sub esp, 1Ch ",gcc,1
"sub esp, 1Ch  | * | call __ZdlPv  ",gcc,1
call __ZdlPv   | * | retn 4 ,gcc,2
"add esp, 1Ch  | * | __ZNSs4_Rep10_M_destroyERKSaIcE endp ",gcc,1
__ZNSs4_Rep10_M_destroyERKSaIcE endp  | * | public __ZNSs4_Rep10_M_disposeERKSaIcE ,gcc,1
align 4  | * | __ZNSs4_Rep10_M_disposeERKSaIcE proc near ,gcc,1
"sub esp, 2Ch  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_40F5AC ",gcc,1
"test eax, eax  | * | mov eax, [ecx+8] ",gcc,1
"jnz short loc_40F5AC  | * | lea edx, [eax-1] ",gcc,1
"mov eax, [ecx+8]  | * | mov [ecx+8], edx ",gcc,1
"mov [ecx+8], edx  | * | jle short loc_40F5CB ",gcc,1
"test eax, eax  | * | loc_40F5A5:  ",gcc,1
"jle short loc_40F5CB  | * | add esp, 2Ch ",gcc,1
loc_40F5A5:   | * | retn 4 ,gcc,1
"add esp, 2Ch  | * | align 4 ",gcc,1
retn 4  | * | loc_40F5AC:  ,gcc,1
"loc_40F5AC:   | * | lea eax, [ecx+8] ",gcc,1
"lea eax, [ecx+8]  | * | mov [esp+2Ch+var_10], ecx ",gcc,3
"mov [esp+2Ch+var_2C], eax   | * | call __ZN9__gnu_cxx18__exchange_and_addEPVii  ",gcc,1
"mov [esp+2Ch+var_10], ecx  | * | mov ecx, [esp+2Ch+var_10] ",gcc,3
"call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | test eax, eax ",gcc,1
"mov ecx, [esp+2Ch+var_10]  | * | jg short loc_40F5A5 ",gcc,1
"test eax, eax  | * | loc_40F5CB:  ",gcc,1
"jg short loc_40F5A5  | * | mov [esp+2Ch+var_2C], ecx  ",gcc,1
loc_40F5CB:   | * | call __ZdlPv  ,gcc,1
"mov [esp+2Ch+var_2C], ecx   | * | add esp, 2Ch ",gcc,1
"add esp, 2Ch  | * | __ZNSs4_Rep10_M_disposeERKSaIcE endp ",gcc,1
__ZNSs4_Rep10_M_disposeERKSaIcE endp  | * | public __ZNSs4_Rep10_M_refcopyEv ,gcc,1
align 4  | * | __ZNSs4_Rep10_M_refcopyEv proc near ,gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_40F5EC ",gcc,1
"test eax, eax  | * | inc dword ptr [ecx+8] ",gcc,1
"jnz short loc_40F5EC  | * | lea eax, [ecx+0Ch] ",gcc,1
inc dword ptr [ecx+8]  | * | retn ,gcc,1
"lea eax, [ecx+0Ch]  | * | loc_40F5EC:  ",gcc,1
"retn  | * | sub esp, 2Ch ",gcc,1
"loc_40F5EC:   | * | mov [esp+2Ch+var_28], 1  ",gcc,1
"sub esp, 2Ch  | * | lea eax, [ecx+8] ",gcc,1
"mov [esp+2Ch+var_28], 1   | * | mov [esp+2Ch+var_2C], eax  ",gcc,3
"mov [esp+2Ch+var_2C], eax   | * | call __ZN9__gnu_cxx12__atomic_addEPVii  ",gcc,2
"call __ZN9__gnu_cxx12__atomic_addEPVii   | * | lea eax, [ecx+0Ch] ",gcc,2
"mov ecx, [esp+2Ch+var_10]  | * | add esp, 2Ch ",gcc,2
"lea eax, [ecx+0Ch]  | * | retn ",gcc,1
"add esp, 2Ch  | * | __ZNSs4_Rep10_M_refcopyEv endp ",gcc,1
__ZNSs4_Rep10_M_refcopyEv endp  | * | public __ZNSs4_Rep10_M_refdataEv ,gcc,1
align 4  | * | __ZNSs4_Rep10_M_refdataEv proc near ,gcc,1
"__ZNSs4_Rep10_M_refdataEv proc near  | * | lea eax, [ecx+0Ch] ",gcc,1
"lea eax, [ecx+0Ch]  | * | __ZNSs4_Rep10_M_refdataEv endp ",gcc,1
retn  | * | public __ZNSs4_Rep12_S_empty_repEv ,gcc,1
__ZNSs4_Rep10_M_refdataEv endp  | * | __ZNSs4_Rep12_S_empty_repEv proc near ,gcc,1
"__ZNSs4_Rep12_S_empty_repEv proc near  | * | mov eax, offset __ZNSs4_Rep20_S_empty_rep_storageE  ",gcc,1
"mov eax, offset __ZNSs4_Rep20_S_empty_rep_storageE   | * | __ZNSs4_Rep12_S_empty_repEv endp ",gcc,1
__ZNSs4_Rep12_S_empty_repEv endp  | * | public __ZNSs4_Rep13_M_set_leakedEv ,gcc,1
align 10h  | * | __ZNSs4_Rep13_M_set_leakedEv proc near ,gcc,1
"__ZNSs4_Rep13_M_set_leakedEv proc near  | * | mov dword ptr [ecx+8], 0FFFFFFFFh ",gcc,1
"mov dword ptr [ecx+8], 0FFFFFFFFh  | * | __ZNSs4_Rep13_M_set_leakedEv endp ",gcc,1
retn  | * | public __ZNSs4_Rep15_M_set_sharableEv ,gcc,1
__ZNSs4_Rep13_M_set_leakedEv endp  | * | __ZNSs4_Rep15_M_set_sharableEv proc near ,gcc,1
"__ZNSs4_Rep15_M_set_sharableEv proc near  | * | mov dword ptr [ecx+8], 0 ",gcc,1
"mov dword ptr [ecx+8], 0  | * | __ZNSs4_Rep15_M_set_sharableEv endp ",gcc,1
retn  | * | public __ZNSs4_Rep26_M_set_length_and_sharableEj ,gcc,1
__ZNSs4_Rep15_M_set_sharableEv endp  | * | __ZNSs4_Rep26_M_set_length_and_sharableEj proc near ,gcc,1
"__ZNSs4_Rep26_M_set_length_and_sharableEj proc near  | * | mov eax, [esp+this] ",gcc,1
"mov eax, [esp+this]  | * | mov [ecx], eax ",gcc,1
"mov dword ptr [ecx+8], 0  | * | mov byte ptr [ecx+eax+0Ch], 0 ",gcc,1
"mov [ecx], eax  | * | retn 4 ",gcc,1
"mov byte ptr [ecx+eax+0Ch], 0  | * | __ZNSs4_Rep26_M_set_length_and_sharableEj endp ",gcc,1
__ZNSs4_Rep26_M_set_length_and_sharableEj endp  | * | public __ZNSs4_Rep7_M_grabERKSaIcES2_ ,gcc,1
align 4  | * | __ZNSs4_Rep7_M_grabERKSaIcES2_ proc near ,gcc,1
"sub esp, 2Ch  | * | mov eax, [ecx+8] ",gcc,1
"mov edx, [esp+2Ch+arg_0]  | * | test eax, eax ",gcc,1
"mov eax, [ecx+8]  | * | js short loc_40F670 ",gcc,1
"test eax, eax  | * | mov edx, ds:__CRT_MT ",gcc,2
"js short loc_40F670  | * | test edx, edx ",gcc,1
"mov edx, ds:__CRT_MT  | * | jnz short loc_40F684 ",gcc,1
"test edx, edx  | * | inc eax ",gcc,2
"jnz short loc_40F684  | * | mov [ecx+8], eax ",gcc,1
"inc eax  | * | lea eax, [ecx+0Ch] ",gcc,1
"mov [ecx+8], eax  | * | add esp, 2Ch ",gcc,1
"lea eax, [ecx+0Ch]  | * | retn 8 ",gcc,2
retn 8  | * | loc_40F670:  ,gcc,1
"align 10h  | * | mov [esp+2Ch+arg_4], 0 ",gcc,1
"loc_40F670:   | * | mov [esp+2Ch+arg_0], edx ",gcc,1
"mov [esp+2Ch+arg_4], 0  | * | add esp, 2Ch ",gcc,1
"mov [esp+2Ch+arg_0], edx  | * | jmp __ZNSs4_Rep8_M_cloneERKSaIcEj  ",gcc,1
"add esp, 2Ch  | * | loc_40F684:  ",gcc,1
"jmp __ZNSs4_Rep8_M_cloneERKSaIcEj   | * | mov [esp+2Ch+var_28], 1  ",gcc,1
"loc_40F684:   | * | lea eax, [ecx+8] ",gcc,1
"add esp, 2Ch  | * | __ZNSs4_Rep7_M_grabERKSaIcES2_ endp ",gcc,1
retn 8  | * | public __ZNSs4_Rep8_M_cloneERKSaIcEj ,gcc,1
__ZNSs4_Rep7_M_grabERKSaIcES2_ endp  | * | __ZNSs4_Rep8_M_cloneERKSaIcEj proc near  ,gcc,1
"sub esp, 10h  | * | mov eax, [esp+1Ch+arg_4] ",gcc,3
"mov ebx, ecx  | * | mov edx, [esp+1Ch+arg_0] ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_14], edx ",gcc,1
"mov edx, [esp+1Ch+arg_0]  | * | mov edx, [ecx+4] ",gcc,1
"mov [esp+1Ch+var_14], edx  | * | mov [esp+1Ch+var_18], edx ",gcc,1
"mov edx, [ecx+4]  | * | add eax, [ecx] ",gcc,1
"mov [esp+1Ch+var_18], edx  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"add eax, [ecx]  | * | call __ZNSs4_Rep9_S_createEjjRKSaIcE  ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | mov ecx, [ebx] ",gcc,1
"call __ZNSs4_Rep9_S_createEjjRKSaIcE   | * | test ecx, ecx ",gcc,1
"mov ecx, [ebx]  | * | jnz short loc_40F6F0 ",gcc,1
"test ecx, ecx  | * | xor ecx, ecx ",gcc,1
"jnz short loc_40F6F0  | * | lea edx, [eax+0Ch] ",gcc,1
"xor ecx, ecx  | * | loc_40F6D8:  ",gcc,1
"lea edx, [eax+0Ch]  | * | mov dword ptr [eax+8], 0 ",gcc,1
"loc_40F6D8:   | * | mov [eax], ecx ",gcc,1
"mov dword ptr [eax+8], 0  | * | mov byte ptr [edx+ecx], 0 ",gcc,1
"mov [eax], ecx  | * | mov eax, edx ",gcc,1
"mov byte ptr [edx+ecx], 0  | * | add esp, 10h ",gcc,1
pop esi  | * | retn 8 ,gcc,1
pop edi  | * | loc_40F6F0:  ,gcc,1
"retn 8  | * | cmp ecx, 1 ",gcc,1
loc_40F6F0:   | * | jz short loc_40F704 ,gcc,1
"cmp ecx, 1  | * | lea edx, [eax+0Ch] ",gcc,1
"jz short loc_40F704  | * | lea esi, [ebx+0Ch] ",gcc,1
"lea edx, [eax+0Ch]  | * | mov edi, edx ",gcc,1
"lea esi, [ebx+0Ch]  | * | rep movsb ",gcc,1
"mov edi, edx  | * | mov ecx, [ebx] ",gcc,1
rep movsb  | * | jmp short loc_40F6D8 ,gcc,1
"mov ecx, [ebx]  | * | align 4 ",gcc,1
jmp short loc_40F6D8  | * | loc_40F704:  ,gcc,1
"align 4  | * | mov dl, [ebx+0Ch] ",gcc,1
"loc_40F704:   | * | mov [eax+0Ch], dl ",gcc,1
"mov dl, [ebx+0Ch]  | * | mov ecx, [ebx] ",gcc,1
"mov [eax+0Ch], dl  | * | lea edx, [eax+0Ch] ",gcc,1
"mov ecx, [ebx]  | * | jmp short loc_40F6D8 ",gcc,1
"lea edx, [eax+0Ch]  | * | __ZNSs4_Rep8_M_cloneERKSaIcEj endp ",gcc,1
jmp short loc_40F6D8  | * | align 4 ,gcc,1
__ZNSs4_Rep8_M_cloneERKSaIcEj endp  | * | public __ZNSs4_Rep9_S_createEjjRKSaIcE ,gcc,1
align 4  | * | __ZNSs4_Rep9_S_createEjjRKSaIcE proc near ,gcc,1
"sub esp, 18h  | * | mov eax, [esp+1Ch+arg_4] ",gcc,2
"mov ebx, [esp+1Ch+arg_0]  | * | cmp ebx, 3FFFFFFCh ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | ja short loc_40F77F ",gcc,1
"cmp ebx, 3FFFFFFCh  | * | cmp ebx, eax ",gcc,1
ja short loc_40F77F  | * | jbe short loc_40F75D ,gcc,1
"cmp ebx, eax  | * | lea edx, [eax+eax] ",gcc,1
"jbe short loc_40F75D  | * | cmp ebx, edx ",gcc,1
"lea edx, [eax+eax]  | * | jnb short loc_40F735 ",gcc,1
"cmp ebx, edx  | * | mov ebx, edx ",gcc,1
jnb short loc_40F735  | * | loc_40F735:  ,gcc,1
"mov ebx, edx  | * | lea edx, [ebx+0Dh] ",gcc,1
"loc_40F735:   | * | lea ecx, [ebx+1Dh] ",gcc,1
"lea edx, [ebx+0Dh]  | * | cmp ecx, 1000h ",gcc,1
"lea ecx, [ebx+1Dh]  | * | jbe short loc_40F760 ",gcc,1
"cmp ecx, 1000h  | * | cmp eax, ebx ",gcc,1
jbe short loc_40F760  | * | jnb short loc_40F760 ,gcc,1
"cmp eax, ebx  | * | add ebx, 1000h ",gcc,1
"jnb short loc_40F760  | * | and ecx, 0FFFh ",gcc,1
"add ebx, 1000h  | * | sub ebx, ecx ",gcc,1
"and ecx, 0FFFh  | * | cmp ebx, 3FFFFFFCh ",gcc,1
"sub ebx, ecx  | * | ja short loc_40F778 ",gcc,1
"cmp ebx, 3FFFFFFCh  | * | loc_40F75D:  ",gcc,1
"ja short loc_40F778  | * | lea edx, [ebx+0Dh] ",gcc,1
loc_40F75D:   | * | loc_40F760:  ,gcc,1
"lea edx, [ebx+0Dh]  | * | mov [esp+1Ch+var_1C], edx  ",gcc,1
loc_40F760:   | * | call __Znwj  ,gcc,1
"mov [esp+1Ch+var_1C], edx   | * | mov [eax+4], ebx ",gcc,1
"call __Znwj   | * | mov dword ptr [eax+8], 0 ",gcc,1
"mov [eax+4], ebx  | * | add esp, 18h ",gcc,1
"mov dword ptr [eax+8], 0  | * | pop ebx ",gcc,1
retn  | * | loc_40F778:  ,gcc,1
"align 4  | * | mov ebx, 3FFFFFFCh ",gcc,1
loc_40F778:   | * | jmp short loc_40F75D ,gcc,1
"mov ebx, 3FFFFFFCh  | * | loc_40F77F:  ",gcc,1
"jmp short loc_40F75D  | * | mov [esp+1Ch+var_1C], offset aBasicStringSCr  ",gcc,1
loc_40F77F:   | * | call __ZSt20__throw_length_errorPKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringSCr   | * | __ZNSs4_Rep9_S_createEjjRKSaIcE endp ",gcc,1
__ZNSs4_Rep9_S_createEjjRKSaIcE endp  | * | public __ZNSs4backEv ,gcc,1
align 4  | * | __ZNSs4backEv proc near ,gcc,1
__ZNSs4backEv proc near  | * | push esi ,gcc,1
push esi  | * | push ebx  ,gcc,1
"push ebx   | * | mov eax, [ecx] ",gcc,1
"mov ebx, ecx  | * | mov esi, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | dec esi ",gcc,1
"mov esi, [eax-0Ch]  | * | mov edx, [eax-4] ",gcc,1
"dec esi  | * | test edx, edx ",gcc,1
"mov edx, [eax-4]  | * | js short loc_40F7A5 ",gcc,1
"js short loc_40F7A5  | * | mov eax, [ebx] ",gcc,1
call __ZNSs12_M_leak_hardEv   | * | loc_40F7A5:  ,gcc,1
loc_40F7A5:   | * | pop ecx ,gcc,1
pop esi  | * | __ZNSs4backEv endp ,gcc,1
__ZNSs4backEv endp  | * | public __ZNSs4rendEv ,gcc,1
align 4  | * | __ZNSs4rendEv proc near ,gcc,1
"push esi  | * | sub esp, 50h ",gcc,3
"sub esp, 50h  | * | mov ebx, [esp+5Ch+this] ",gcc,2
"mov esi, ecx  | * | mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,2
"mov ebx, [esp+5Ch+this]  | * | mov [esp+5Ch+fctx.lsda], offset dword_4123AC ",gcc,1
"mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea edi, [esp+5Ch+fctx] ",gcc,3
"mov [esp+5Ch+fctx.lsda], offset dword_4123AC  | * | mov [esp+5Ch+lpfctx], edi  ",gcc,1
"lea edi, [esp+5Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,3
"mov [esp+5Ch+lpfctx], edi   | * | mov edx, [ebx] ",gcc,2
"call __Unwind_SjLj_Register  | * | mov ecx, [edx-4] ",gcc,1
"mov edx, [ebx]  | * | test ecx, ecx ",gcc,1
"mov ecx, [edx-4]  | * | js short loc_40F7EE ",gcc,1
"js short loc_40F7EE  | * | mov ecx, ebx ",gcc,1
"mov ecx, ebx  | * | mov edx, [ebx] ",gcc,2
call __ZNSs12_M_leak_hardEv   | * | loc_40F7EE:  ,gcc,1
"mov edx, [ebx]  | * | mov [esi], edx ",gcc,1
"loc_40F7EE:   | * | mov [esp+5Ch+lpfctx], edi  ",gcc,1
"mov [esi], edx  | * | call __Unwind_SjLj_Unregister ",gcc,2
"mov [esp+5Ch+lpfctx], edi   | * | mov eax, esi ",gcc,2
"call __Unwind_SjLj_Unregister  | * | add esp, 50h ",gcc,3
"add esp, 50h  | * | pop esi ",gcc,3
pop edi  | * | __ZNSs4rendEv endp ,gcc,1
__ZNSs4rendEv endp  | * | public __ZNSs4swapERSs ,gcc,1
align 4  | * | __ZNSs4swapERSs proc near ,gcc,1
__ZNSs4swapERSs proc near  | * | push ebx ,gcc,1
"mov ebx, [esp+4+this]  | * | mov eax, [edx-4] ",gcc,1
"mov eax, [edx-4]  | * | js short loc_40F82C ",gcc,1
"test eax, eax  | * | loc_40F812:  ",gcc,1
"js short loc_40F82C  | * | mov eax, [ebx] ",gcc,1
"loc_40F812:   | * | cmp dword ptr [eax-4], 0 ",gcc,1
"mov eax, [ebx]  | * | jns short loc_40F821 ",gcc,1
"cmp dword ptr [eax-4], 0  | * | mov dword ptr [eax-4], 0 ",gcc,1
jns short loc_40F821  | * | loc_40F821:  ,gcc,1
"mov dword ptr [eax-4], 0  | * | mov [ecx], eax ",gcc,1
"loc_40F821:   | * | mov [ebx], edx ",gcc,1
"mov [ecx], eax  | * | pop ebx ",gcc,1
"mov [ebx], edx  | * | retn 4 ",gcc,1
retn 4  | * | loc_40F82C:  ,gcc,1
"align 4  | * | mov dword ptr [edx-4], 0 ",gcc,1
loc_40F82C:   | * | jmp short loc_40F812 ,gcc,1
"mov dword ptr [edx-4], 0  | * | __ZNSs4swapERSs endp ",gcc,1
jmp short loc_40F812  | * | align 4 ,gcc,1
__ZNSs4swapERSs endp  | * | public __ZNSs5beginEv ,gcc,1
align 4  | * | __ZNSs5beginEv proc near ,gcc,1
"sub esp, 50h  | * | mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov esi, ecx  | * | mov [esp+5Ch+fctx.lsda], offset dword_4123B8 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4123B8  | * | mov [esp+5Ch+lpfctx], edi  ",gcc,1
"mov [esp+5Ch+lpfctx], edi   | * | mov ebx, [esi] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov ecx, [ebx-4] ",gcc,1
"mov ebx, [esi]  | * | test ecx, ecx ",gcc,1
"mov ecx, [ebx-4]  | * | js short loc_40F876 ",gcc,1
"js short loc_40F876  | * | mov ecx, esi ",gcc,1
"mov ecx, esi  | * | mov ebx, [esi] ",gcc,1
call __ZNSs12_M_leak_hardEv   | * | loc_40F876:  ,gcc,1
"mov ebx, [esi]  | * | mov [esp+5Ch+lpfctx], edi  ",gcc,1
loc_40F876:   | * | call __Unwind_SjLj_Unregister ,gcc,1
"mov [esp+5Ch+lpfctx], edi   | * | mov eax, ebx ",gcc,1
pop edi  | * | __ZNSs5beginEv endp ,gcc,1
__ZNSs5beginEv endp  | * | public __ZNSs5clearEv ,gcc,1
align 4  | * | __ZNSs5clearEv proc near ,gcc,1
var_58 = dword ptr -58h  | * | var_44 = dword ptr -44h ,data,1
var_44 = dword ptr -44h  | * | this = dword ptr 4 ,data,1
"push ebx  | * | mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_4123A8 ",gcc,1
"mov [esp+5Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea ebx, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4123A8  | * | mov [esp+5Ch+lpfctx], ebx  ",gcc,1
"lea ebx, [esp+5Ch+fctx]  | * | mov [esp+5Ch+var_44], ecx ",gcc,1
"mov [esp+5Ch+lpfctx], ebx   | * | call __Unwind_SjLj_Register ",gcc,1
"mov [esp+5Ch+var_44], ecx  | * | mov [esp+5Ch+var_54], 0  ",gcc,1
"call __Unwind_SjLj_Register  | * | mov ecx, [esp+5Ch+var_44] ",gcc,1
"mov [esp+5Ch+var_54], 0   | * | mov eax, [ecx] ",gcc,1
"mov ecx, [esp+5Ch+var_44]  | * | mov eax, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | mov [esp+5Ch+var_58], eax  ",gcc,1
"mov eax, [eax-0Ch]  | * | mov [esp+5Ch+lpfctx], 0  ",gcc,1
"mov [esp+5Ch+var_58], eax   | * | mov [esp+5Ch+fctx.call_site], 0 ",gcc,1
"mov [esp+5Ch+lpfctx], 0   | * | call __ZNSs9_M_mutateEjjj  ",gcc,1
"mov [esp+5Ch+fctx.call_site], 0  | * | sub esp, 0Ch ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | mov [esp+5Ch+lpfctx], ebx  ",gcc,1
"sub esp, 0Ch  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+5Ch+lpfctx], ebx   | * | add esp, 58h ",gcc,1
pop ebx  | * | __ZNSs5clearEv endp ,gcc,1
__ZNSs5clearEv endp  | * | public __ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE ,gcc,1
align 4  | * | __ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE proc near ,gcc,1
"sub esp, 14h  | * | mov ebx, [esp+1Ch+arg_0] ",gcc,2
"mov esi, ecx  | * | sub ebx, [ecx] ",gcc,2
"mov ebx, [esp+1Ch+arg_0]  | * | mov [esp+1Ch+var_14], 0  ",gcc,1
"sub ebx, [ecx]  | * | mov [esp+1Ch+var_18], 1  ",gcc,1
"mov [esp+1Ch+var_14], 0   | * | mov [esp+1Ch+var_1C], ebx  ",gcc,1
"mov [esp+1Ch+var_18], 1   | * | call __ZNSs9_M_mutateEjjj  ",gcc,2
"mov [esp+1Ch+var_1C], ebx   | * | sub esp, 0Ch ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | mov eax, [esi] ",gcc,1
"sub esp, 0Ch  | * | mov dword ptr [eax-4], 0FFFFFFFFh ",gcc,2
"mov eax, [esi]  | * | add eax, ebx ",gcc,2
"mov dword ptr [eax-4], 0FFFFFFFFh  | * | add esp, 14h ",gcc,3
"add eax, ebx  | * | pop ebx ",gcc,2
pop esi  | * | __ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE endp ,gcc,1
__ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE endp  | * | public __ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_ ,gcc,1
align 4  | * | __ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_ proc near ,gcc,1
"push ebx  | * | mov eax, [esp+1Ch+arg_0] ",gcc,1
"sub esp, 14h  | * | mov edx, [esp+1Ch+arg_4] ",gcc,3
"mov eax, [esp+1Ch+arg_0]  | * | sub edx, eax ",gcc,1
"mov edx, [esp+1Ch+arg_4]  | * | jnz short loc_40F940 ",gcc,1
"sub edx, eax  | * | add esp, 14h ",gcc,1
jnz short loc_40F940  | * | pop ebx ,gcc,1
retn 8  | * | loc_40F940:  ,gcc,1
"align 10h  | * | mov ebx, ecx ",gcc,1
"loc_40F940:   | * | mov esi, eax ",gcc,1
"mov ebx, ecx  | * | sub esi, [ecx] ",gcc,1
"mov esi, eax  | * | mov [esp+1Ch+var_14], 0  ",gcc,1
"sub esi, [ecx]  | * | mov [esp+1Ch+var_18], edx  ",gcc,1
"mov [esp+1Ch+var_14], 0   | * | mov [esp+1Ch+var_1C], esi  ",gcc,1
"mov [esp+1Ch+var_18], edx   | * | call __ZNSs9_M_mutateEjjj  ",gcc,2
"mov [esp+1Ch+var_1C], esi   | * | sub esp, 0Ch ",gcc,1
pop esi  | * | __ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_ endp ,gcc,1
retn 8  | * | public __ZNSs5eraseEjj ,gcc,1
__ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_ endp  | * | __ZNSs5eraseEjj proc near ,gcc,1
"sub esp, 18h  | * | mov edx, [esp+1Ch+this] ",gcc,1
"mov edx, [esp+1Ch+this]  | * | mov ecx, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | mov eax, ecx ",gcc,1
"mov ecx, [eax-0Ch]  | * | sub eax, edx ",gcc,1
"mov eax, ecx  | * | cmp eax, [esp+1Ch+arg_4] ",gcc,1
"sub eax, edx  | * | jbe short loc_40F98D ",gcc,1
"cmp eax, [esp+1Ch+arg_4]  | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
jbe short loc_40F98D  | * | loc_40F98D:  ,gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | cmp edx, ecx ",gcc,1
loc_40F98D:   | * | ja short loc_40F9B3 ,gcc,1
"cmp edx, ecx  | * | mov [esp+1Ch+var_14], 0  ",gcc,1
"ja short loc_40F9B3  | * | mov [esp+1Ch+var_18], eax  ",gcc,1
"mov [esp+1Ch+var_14], 0   | * | mov [esp+1Ch+var_1C], edx  ",gcc,2
"mov [esp+1Ch+var_1C], edx   | * | call __ZNSs9_M_mutateEjjj  ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | mov eax, ebx ",gcc,1
"sub esp, 0Ch  | * | add esp, 18h ",gcc,1
pop ebx  | * | loc_40F9B3:  ,gcc,1
"retn 8  | * | mov [esp+1Ch+var_1C], offset aBasicStringEra  ",gcc,1
loc_40F9B3:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringEra   | * | __ZNSs5eraseEjj endp ",gcc,1
call __ZSt20__throw_out_of_rangePKc   | * | align 10h ,gcc,6
__ZNSs5eraseEjj endp  | * | public __ZNSs5frontEv ,gcc,1
align 10h  | * | __ZNSs5frontEv proc near ,gcc,1
__ZNSs5frontEv proc near  | * | push ebx ,gcc,1
"sub esp, 8  | * | mov eax, [ecx] ",gcc,2
"mov ebx, ecx  | * | mov edx, [eax-4] ",gcc,2
"mov eax, [ecx]  | * | test edx, edx ",gcc,2
"mov edx, [eax-4]  | * | js short loc_40F9D6 ",gcc,1
"js short loc_40F9D6  | * | mov eax, [ebx] ",gcc,1
call __ZNSs12_M_leak_hardEv   | * | loc_40F9D6:  ,gcc,1
"mov eax, [ebx]  | * | add esp, 8 ",gcc,1
loc_40F9D6:   | * | pop ebx ,gcc,1
pop ebx  | * | __ZNSs5frontEv endp ,gcc,1
__ZNSs5frontEv endp  | * | public __ZNSs6appendEPKc ,gcc,1
align 4  | * | __ZNSs6appendEPKc proc near ,gcc,1
"not ecx  | * | mov [esp+1Ch+var_18], eax  ",gcc,4
"lea eax, [ecx-1]  | * | mov [esp+1Ch+var_1C], edx  ",gcc,4
"mov [esp+1Ch+var_1C], edx   | * | call __ZNSs6appendEPKcj  ",gcc,2
"call __ZNSs6appendEPKcj   | * | add esp, 14h ",gcc,2
pop edi  | * | __ZNSs6appendEPKc endp ,gcc,1
retn 4  | * | public __ZNSs6appendEPKcj ,gcc,1
__ZNSs6appendEPKc endp  | * | __ZNSs6appendEPKcj proc near  ,gcc,1
"push ebx  | * | mov eax, ecx ",gcc,4
"sub esp, 2Ch  | * | mov ebp, [esp+3Ch+arg_4] ",gcc,1
"mov eax, ecx  | * | test ebp, ebp ",gcc,1
"mov ebp, [esp+3Ch+arg_4]  | * | jnz short loc_40FA2C ",gcc,1
"test ebp, ebp  | * | add esp, 2Ch ",gcc,1
jnz short loc_40FA2C  | * | pop ebx ,gcc,1
retn 8  | * | loc_40FA2C:  ,gcc,1
"align 4  | * | mov ecx, [ecx] ",gcc,1
"loc_40FA2C:   | * | mov edx, [ecx-0Ch] ",gcc,1
"mov ecx, [ecx]  | * | mov ebx, 3FFFFFFCh ",gcc,1
"mov edx, [ecx-0Ch]  | * | sub ebx, edx ",gcc,1
"mov ebx, 3FFFFFFCh  | * | cmp ebp, ebx ",gcc,1
"sub ebx, edx  | * | ja loc_40FADD ",gcc,1
"cmp ebp, ebx  | * | lea ebx, [ebp+edx+0] ",gcc,1
"ja loc_40FADD  | * | cmp ebx, [ecx-8] ",gcc,1
"lea ebx, [ebp+edx+0]  | * | ja short loc_40FA7C ",gcc,1
"cmp ebx, [ecx-8]  | * | mov esi, [ecx-4] ",gcc,1
"ja short loc_40FA7C  | * | test esi, esi ",gcc,1
"mov esi, [ecx-4]  | * | jg short loc_40FA7C ",gcc,1
"test esi, esi  | * | loc_40FA50:  ",gcc,1
"jg short loc_40FA7C  | * | add edx, ecx ",gcc,1
"loc_40FA50:   | * | cmp ebp, 1 ",gcc,1
"add edx, ecx  | * | jz short loc_40FAA1 ",gcc,1
"cmp ebp, 1  | * | loc_40FA57:  ",gcc,1
"jz short loc_40FAA1  | * | mov edi, edx ",gcc,1
"loc_40FA57:   | * | mov esi, [esp+3Ch+this] ",gcc,1
"mov edi, edx  | * | mov ecx, ebp ",gcc,1
"mov esi, [esp+3Ch+this]  | * | rep movsb ",gcc,1
"mov ecx, ebp  | * | loc_40FA61:  ",gcc,1
"rep movsb  | * | mov edx, [eax] ",gcc,3
"loc_40FA61:   | * | mov dword ptr [edx-4], 0 ",gcc,1
"mov edx, [eax]  | * | mov [edx-0Ch], ebx ",gcc,4
"mov dword ptr [edx-4], 0  | * | mov byte ptr [edx+ebx], 0 ",gcc,4
"mov [edx-0Ch], ebx  | * | add esp, 2Ch ",gcc,1
"mov byte ptr [edx+ebx], 0  | * | pop ebx ",gcc,2
retn 8  | * | loc_40FA7C:  ,gcc,1
"align 4  | * | cmp [esp+3Ch+this], ecx ",gcc,1
loc_40FA7C:   | * | jnb short loc_40FAAC ,gcc,1
"cmp [esp+3Ch+this], ecx  | * | loc_40FA82:  ",gcc,1
"jnb short loc_40FAAC  | * | mov [esp+3Ch+var_3C], ebx  ",gcc,1
"loc_40FA82:   | * | mov ecx, eax ",gcc,1
"mov [esp+3Ch+var_3C], ebx   | * | mov [esp+3Ch+var_20], eax ",gcc,4
"mov ecx, eax  | * | call __ZNSs7reserveEj  ",gcc,5
"mov [esp+3Ch+var_20], eax  | * | push eax ",gcc,4
"call __ZNSs7reserveEj   | * | mov eax, [esp+3Ch+var_20] ",gcc,2
"push eax  | * | mov ecx, [eax] ",gcc,2
"mov eax, [esp+3Ch+var_20]  | * | mov edx, [ecx-0Ch] ",gcc,1
"mov ecx, [eax]  | * | add edx, ecx ",gcc,1
"mov edx, [ecx-0Ch]  | * | cmp ebp, 1 ",gcc,1
"add edx, ecx  | * | jnz short loc_40FA57 ",gcc,1
"cmp ebp, 1  | * | loc_40FAA1:  ",gcc,1
"jnz short loc_40FA57  | * | mov ecx, [esp+3Ch+this] ",gcc,1
"loc_40FAA1:   | * | mov cl, [ecx] ",gcc,1
"mov ecx, [esp+3Ch+this]  | * | mov [edx], cl ",gcc,1
"mov cl, [ecx]  | * | jmp short loc_40FA61 ",gcc,1
"mov [edx], cl  | * | align 4 ",gcc,2
jmp short loc_40FA61  | * | loc_40FAAC:  ,gcc,1
"align 4  | * | add edx, ecx ",gcc,1
"loc_40FAAC:   | * | cmp [esp+3Ch+this], edx ",gcc,1
"add edx, ecx  | * | ja short loc_40FA82 ",gcc,1
"cmp [esp+3Ch+this], edx  | * | mov esi, [esp+3Ch+this] ",gcc,1
"ja short loc_40FA82  | * | sub esi, ecx ",gcc,1
"mov esi, [esp+3Ch+this]  | * | mov [esp+3Ch+var_3C], ebx  ",gcc,1
"sub esi, ecx  | * | mov ecx, eax ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | add esi, ecx ",gcc,1
"mov ecx, [eax]  | * | mov [esp+3Ch+this], esi ",gcc,1
"add esi, ecx  | * | mov edx, [ecx-0Ch] ",gcc,1
"mov [esp+3Ch+this], esi  | * | jmp loc_40FA50 ",gcc,1
"mov edx, [ecx-0Ch]  | * | loc_40FADD:  ",gcc,1
"jmp loc_40FA50  | * | mov [esp+3Ch+var_3C], offset aBasicStringApp  ",gcc,1
loc_40FADD:   | * | call __ZSt20__throw_length_errorPKc  ,gcc,1
"mov [esp+3Ch+var_3C], offset aBasicStringApp   | * | __ZNSs6appendEPKcj endp ",gcc,1
__ZNSs6appendEPKcj endp  | * | public __ZNSs6appendERKSs ,gcc,1
align 4  | * | __ZNSs6appendERKSs proc near  ,gcc,1
"sub esp, 2Ch  | * | mov edi, [esp+3Ch+this] ",gcc,1
"mov eax, ecx  | * | mov esi, [edi] ",gcc,1
"mov edi, [esp+3Ch+this]  | * | mov ebp, [esi-0Ch] ",gcc,2
"mov esi, [edi]  | * | test ebp, ebp ",gcc,1
"mov ebp, [esi-0Ch]  | * | jz short loc_40FB46 ",gcc,1
"test ebp, ebp  | * | mov edx, [ecx] ",gcc,1
"jz short loc_40FB46  | * | mov ecx, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | lea ebx, [ecx+ebp] ",gcc,1
"mov ecx, [edx-0Ch]  | * | cmp ebx, [edx-8] ",gcc,2
"lea ebx, [ecx+ebp]  | * | jbe short loc_40FB50 ",gcc,1
"cmp ebx, [edx-8]  | * | loc_40FB0F:  ",gcc,1
"jbe short loc_40FB50  | * | mov [esp+3Ch+var_3C], ebx  ",gcc,1
"loc_40FB0F:   | * | mov ecx, eax ",gcc,1
"call __ZNSs7reserveEj   | * | mov esi, [edi] ",gcc,2
"push eax  | * | mov eax, [esp+3Ch+var_20] ",gcc,2
"mov esi, [edi]  | * | mov edx, [eax] ",gcc,2
"mov eax, [esp+3Ch+var_20]  | * | mov ecx, [edx-0Ch] ",gcc,2
"mov edx, [eax]  | * | loc_40FB29:  ",gcc,1
"mov ecx, [edx-0Ch]  | * | add edx, ecx ",gcc,1
"loc_40FB29:   | * | cmp ebp, 1 ",gcc,1
"add edx, ecx  | * | jz short loc_40FB58 ",gcc,1
"cmp ebp, 1  | * | mov edi, edx ",gcc,4
"jz short loc_40FB58  | * | mov ecx, ebp ",gcc,1
"mov ecx, ebp  | * | loc_40FB36:  ",gcc,1
"loc_40FB36:   | * | mov dword ptr [edx-4], 0 ",gcc,1
"mov [edx-0Ch], ebx  | * | loc_40FB46:  ",gcc,1
"mov byte ptr [edx+ebx], 0  | * | add esp, 2Ch ",gcc,2
loc_40FB46:   | * | pop ebx ,gcc,1
pop edi  | * | retn 4 ,gcc,4
pop ebp  | * | loc_40FB50:  ,gcc,1
"retn 4  | * | cmp dword ptr [edx-4], 0 ",gcc,1
loc_40FB50:   | * | jg short loc_40FB0F ,gcc,1
"cmp dword ptr [edx-4], 0  | * | jmp short loc_40FB29 ",gcc,1
jg short loc_40FB0F  | * | loc_40FB58:  ,gcc,1
"jmp short loc_40FB29  | * | mov cl, [esi] ",gcc,1
"loc_40FB58:   | * | mov [edx], cl ",gcc,1
"mov cl, [esi]  | * | jmp short loc_40FB36 ",gcc,1
"mov [edx], cl  | * | __ZNSs6appendERKSs endp ",gcc,1
jmp short loc_40FB36  | * | align 10h ,gcc,1
__ZNSs6appendERKSs endp  | * | public __ZNSs6appendERKSsjj ,gcc,1
align 10h  | * | __ZNSs6appendERKSsjj proc near ,gcc,1
"push ebx  | * | mov edi, [esp+3Ch+this] ",gcc,1
"sub esp, 2Ch  | * | mov esi, [edi] ",gcc,1
"mov esi, [edi]  | * | cmp [esp+3Ch+arg_4], ebp ",gcc,1
"mov ebp, [esi-0Ch]  | * | ja short loc_40FBF2 ",gcc,1
"cmp [esp+3Ch+arg_4], ebp  | * | mov eax, ecx ",gcc,1
"ja short loc_40FBF2  | * | sub ebp, [esp+3Ch+arg_4] ",gcc,1
"mov eax, ecx  | * | cmp ebp, [esp+3Ch+arg_8] ",gcc,1
"sub ebp, [esp+3Ch+arg_4]  | * | ja short loc_40FBDC ",gcc,1
"cmp ebp, [esp+3Ch+arg_8]  | * | loc_40FB82:  ",gcc,1
"ja short loc_40FBDC  | * | test ebp, ebp ",gcc,1
loc_40FB82:   | * | jz short loc_40FBCF ,gcc,1
"test ebp, ebp  | * | mov edx, [eax] ",gcc,1
"jz short loc_40FBCF  | * | mov ecx, [edx-0Ch] ",gcc,1
"mov edx, [eax]  | * | lea ebx, [ebp+ecx+0] ",gcc,1
"lea ebx, [ebp+ecx+0]  | * | jbe short loc_40FBE4 ",gcc,1
"cmp ebx, [edx-8]  | * | loc_40FB94:  ",gcc,1
"jbe short loc_40FBE4  | * | mov [esp+3Ch+var_3C], ebx  ",gcc,1
"loc_40FB94:   | * | mov ecx, eax ",gcc,1
"mov edx, [eax]  | * | loc_40FBAE:  ",gcc,1
"mov ecx, [edx-0Ch]  | * | add esi, [esp+3Ch+arg_4] ",gcc,1
"loc_40FBAE:   | * | add edx, ecx ",gcc,1
"add esi, [esp+3Ch+arg_4]  | * | cmp ebp, 1 ",gcc,1
"add edx, ecx  | * | jz short loc_40FBEC ",gcc,1
"jz short loc_40FBEC  | * | mov ecx, ebp ",gcc,1
"mov ecx, ebp  | * | loc_40FBBF:  ",gcc,1
"loc_40FBBF:   | * | mov dword ptr [edx-4], 0 ",gcc,1
"mov [edx-0Ch], ebx  | * | loc_40FBCF:  ",gcc,1
loc_40FBCF:   | * | pop ebx ,gcc,1
retn 0Ch  | * | loc_40FBDC:  ,gcc,1
"align 4  | * | mov ebp, [esp+3Ch+arg_8] ",gcc,1
loc_40FBDC:   | * | jmp short loc_40FB82 ,gcc,1
"mov ebp, [esp+3Ch+arg_8]  | * | align 4 ",gcc,1
jmp short loc_40FB82  | * | loc_40FBE4:  ,gcc,1
"align 4  | * | cmp dword ptr [edx-4], 0 ",gcc,1
loc_40FBE4:   | * | jg short loc_40FB94 ,gcc,1
"cmp dword ptr [edx-4], 0  | * | jmp short loc_40FBAE ",gcc,1
jg short loc_40FB94  | * | loc_40FBEC:  ,gcc,1
"jmp short loc_40FBAE  | * | mov cl, [esi] ",gcc,1
"loc_40FBEC:   | * | mov [edx], cl ",gcc,1
"mov cl, [esi]  | * | jmp short loc_40FBBF ",gcc,1
"mov [edx], cl  | * | loc_40FBF2:  ",gcc,1
"jmp short loc_40FBBF  | * | mov [esp+3Ch+var_3C], offset aBasicStringApp  ",gcc,1
loc_40FBF2:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+3Ch+var_3C], offset aBasicStringApp   | * | __ZNSs6appendERKSsjj endp ",gcc,1
__ZNSs6appendERKSsjj endp  | * | public __ZNSs6appendESt16initializer_listIcE ,gcc,1
align 10h  | * | __ZNSs6appendESt16initializer_listIcE proc near ,gcc,1
public __ZNSs6appendESt16initializer_listIcE  | * | jmp __ZNSs6appendEPKcj  ,gcc,1
__ZNSs6appendESt16initializer_listIcE proc near  | * | __ZNSs6appendESt16initializer_listIcE endp ,gcc,1
jmp __ZNSs6appendEPKcj   | * | align 4 ,gcc,2
__ZNSs6appendESt16initializer_listIcE endp  | * | public __ZNSs6appendEjc ,gcc,1
align 4  | * | __ZNSs6appendEjc proc near  ,gcc,1
var_18 = dword ptr -18h  | * | arg_4 = byte ptr 8 ,data,1
"mov ebx, ecx  | * | movsx edx, [esp+1Ch+arg_4] ",gcc,1
"mov eax, [esp+1Ch+this]  | * | test eax, eax ",gcc,1
"movsx edx, [esp+1Ch+arg_4]  | * | jz short loc_40FC2A ",gcc,1
"jz short loc_40FC2A  | * | mov [esp+1Ch+var_1C], eax ",gcc,1
"mov [esp+1Ch+var_18], edx  | * | call __ZNSs6appendEjc_part_22  ",gcc,1
"mov [esp+1Ch+var_1C], eax  | * | sub esp, 8 ",gcc,1
call __ZNSs6appendEjc_part_22   | * | loc_40FC2A:  ,gcc,1
"sub esp, 8  | * | mov eax, ebx ",gcc,1
"loc_40FC2A:   | * | add esp, 18h ",gcc,1
pop ebx  | * | __ZNSs6appendEjc endp ,gcc,1
__ZNSs6appendEjc endp  | * | public __ZNSs6assignEOSs ,gcc,1
align 4  | * | __ZNSs6assignEOSs proc near ,gcc,1
__ZNSs6assignEOSs proc near  | * | push ebx ,gcc,1
"push ebx  | * | mov ebx, [esp+4+arg_0] ",gcc,2
"mov eax, ecx  | * | mov ecx, [ecx] ",gcc,2
"mov ebx, [esp+4+arg_0]  | * | mov edx, [ecx-4] ",gcc,2
"mov ecx, [ecx]  | * | test edx, edx ",gcc,2
"mov edx, [ecx-4]  | * | js short loc_40FC5C ",gcc,1
"test edx, edx  | * | loc_40FC44:  ",gcc,1
"js short loc_40FC5C  | * | mov edx, [ebx] ",gcc,1
"loc_40FC44:   | * | cmp dword ptr [edx-4], 0 ",gcc,1
"mov edx, [ebx]  | * | jns short loc_40FC53 ",gcc,1
"cmp dword ptr [edx-4], 0  | * | mov dword ptr [edx-4], 0 ",gcc,2
jns short loc_40FC53  | * | loc_40FC53:  ,gcc,1
"mov dword ptr [edx-4], 0  | * | mov [eax], edx ",gcc,2
"loc_40FC53:   | * | mov [ebx], ecx ",gcc,1
"mov [eax], edx  | * | pop ebx ",gcc,2
"mov [ebx], ecx  | * | retn 4 ",gcc,2
retn 4  | * | loc_40FC5C:  ,gcc,1
"align 4  | * | mov dword ptr [ecx-4], 0 ",gcc,2
loc_40FC5C:   | * | jmp short loc_40FC44 ,gcc,1
"mov dword ptr [ecx-4], 0  | * | __ZNSs6assignEOSs endp ",gcc,1
jmp short loc_40FC44  | * | align 4 ,gcc,1
__ZNSs6assignEOSs endp  | * | public __ZNSs6assignEPKc ,gcc,1
align 4  | * | __ZNSs6assignEPKc proc near ,gcc,1
"mov [esp+1Ch+var_1C], edx   | * | call __ZNSs6assignEPKcj  ",gcc,2
"call __ZNSs6assignEPKcj   | * | add esp, 14h ",gcc,3
pop edi  | * | __ZNSs6assignEPKc endp ,gcc,1
retn 4  | * | public __ZNSs6assignEPKcj ,gcc,1
__ZNSs6assignEPKc endp  | * | __ZNSs6assignEPKcj proc near  ,gcc,1
"sub esp, 1Ch  | * | mov esi, [esp+2Ch+this] ",gcc,1
"mov ebx, ecx  | * | mov ebp, [esp+2Ch+arg_4] ",gcc,1
"mov esi, [esp+2Ch+this]  | * | mov edx, [ecx] ",gcc,1
"mov ebp, [esp+2Ch+arg_4]  | * | mov eax, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | cmp ebp, 3FFFFFFCh ",gcc,1
"mov eax, [edx-0Ch]  | * | ja loc_40FD54 ",gcc,1
"cmp ebp, 3FFFFFFCh  | * | cmp esi, edx ",gcc,1
ja loc_40FD54  | * | jnb short loc_40FCEC ,gcc,1
"cmp esi, edx  | * | loc_40FCC2:  ",gcc,1
"jnb short loc_40FCEC  | * | mov [esp+2Ch+var_20], ebp  ",gcc,1
"loc_40FCC2:   | * | mov [esp+2Ch+var_24], esi  ",gcc,1
"mov [esp+2Ch+var_20], ebp   | * | mov [esp+2Ch+var_28], eax  ",gcc,1
"mov [esp+2Ch+var_24], esi   | * | mov [esp+2Ch+var_2C], 0  ",gcc,1
"mov [esp+2Ch+var_28], eax   | * | mov ecx, ebx ",gcc,1
"mov [esp+2Ch+var_2C], 0   | * | call __ZNSs15_M_replace_safeEjjPKcj  ",gcc,1
"mov ecx, ebx  | * | sub esp, 10h ",gcc,3
"call __ZNSs15_M_replace_safeEjjPKcj   | * | add esp, 1Ch ",gcc,1
"sub esp, 10h  | * | pop ebx ",gcc,6
retn 8  | * | loc_40FCEC:  ,gcc,1
"align 4  | * | lea ecx, [edx+eax] ",gcc,1
"loc_40FCEC:   | * | cmp esi, ecx ",gcc,1
"lea ecx, [edx+eax]  | * | ja short loc_40FCC2 ",gcc,1
"cmp esi, ecx  | * | mov edi, [edx-4] ",gcc,1
"ja short loc_40FCC2  | * | test edi, edi ",gcc,1
"mov edi, [edx-4]  | * | jg short loc_40FCC2 ",gcc,1
"jg short loc_40FCC2  | * | sub eax, edx ",gcc,1
"mov eax, esi  | * | cmp ebp, eax ",gcc,1
"sub eax, edx  | * | jbe short loc_40FD20 ",gcc,1
"cmp ebp, eax  | * | test eax, eax ",gcc,1
jbe short loc_40FD20  | * | jnz short loc_40FD30 ,gcc,1
"test eax, eax  | * | loc_40FD06:  ",gcc,1
"jnz short loc_40FD30  | * | mov dword ptr [edx-4], 0 ",gcc,1
"loc_40FD06:   | * | mov [edx-0Ch], ebp ",gcc,1
"mov dword ptr [edx-4], 0  | * | mov byte ptr [edx+ebp], 0 ",gcc,1
"mov [edx-0Ch], ebp  | * | mov eax, ebx ",gcc,1
"mov byte ptr [edx+ebp], 0  | * | add esp, 1Ch ",gcc,1
pop ebp  | * | loc_40FD20:  ,gcc,1
"retn 8  | * | cmp ebp, 1 ",gcc,1
loc_40FD20:   | * | jz short loc_40FD4C ,gcc,1
"jz short loc_40FD4C  | * | mov ecx, ebp ",gcc,1
"mov ecx, ebp  | * | mov edx, [ebx] ",gcc,1
rep movsb  | * | jmp short loc_40FD06 ,gcc,1
"mov edx, [ebx]  | * | align 10h ",gcc,1
jmp short loc_40FD06  | * | loc_40FD30:  ,gcc,1
"align 10h  | * | cmp ebp, 1 ",gcc,1
loc_40FD30:   | * | jz short loc_40FD4C ,gcc,1
"cmp ebp, 1  | * | mov [esp+2Ch+var_24], ebp  ",gcc,1
"jz short loc_40FD4C  | * | mov [esp+2Ch+var_28], esi  ",gcc,1
"mov [esp+2Ch+var_24], ebp   | * | mov [esp+2Ch+var_2C], edx  ",gcc,1
"mov [esp+2Ch+var_28], esi   | * | call _memmove ",gcc,1
"mov [esp+2Ch+var_2C], edx   | * | mov edx, [ebx] ",gcc,1
call _memmove  | * | jmp short loc_40FD06 ,gcc,1
jmp short loc_40FD06  | * | loc_40FD4C:  ,gcc,1
"align 4  | * | mov al, [esi] ",gcc,3
"loc_40FD4C:   | * | mov [edx], al ",gcc,1
"mov al, [esi]  | * | mov edx, [ebx] ",gcc,1
"mov [edx], al  | * | jmp short loc_40FD06 ",gcc,1
"mov edx, [ebx]  | * | loc_40FD54:  ",gcc,1
"jmp short loc_40FD06  | * | mov [esp+2Ch+var_2C], offset aBasicStringAss  ",gcc,1
loc_40FD54:   | * | call __ZSt20__throw_length_errorPKc  ,gcc,1
"mov [esp+2Ch+var_2C], offset aBasicStringAss   | * | __ZNSs6assignEPKcj endp ",gcc,1
call __ZSt20__throw_length_errorPKc   | * | public __ZNSs6assignERKSs ,gcc,1
__ZNSs6assignEPKcj endp  | * | __ZNSs6assignERKSs proc near  ,gcc,1
"sub esp, 20h  | * | mov edi, [ecx] ",gcc,1
"mov esi, ecx  | * | mov eax, [esp+2Ch+this] ",gcc,1
"mov edi, [ecx]  | * | mov ebx, [eax] ",gcc,1
"mov eax, [esp+2Ch+this]  | * | lea ecx, [ebx-0Ch] ",gcc,1
"mov ebx, [eax]  | * | lea eax, [edi-0Ch] ",gcc,1
"lea ecx, [ebx-0Ch]  | * | cmp ecx, eax ",gcc,1
"lea eax, [edi-0Ch]  | * | jz short loc_40FDA7 ",gcc,1
"cmp ecx, eax  | * | mov eax, [ebx-4] ",gcc,1
"jz short loc_40FDA7  | * | test eax, eax ",gcc,1
"mov eax, [ebx-4]  | * | js short loc_40FDB4 ",gcc,1
"js short loc_40FDB4  | * | test edx, edx ",gcc,1
"mov edx, ds:__CRT_MT  | * | jnz short loc_40FE00 ",gcc,1
"jnz short loc_40FE00  | * | mov [ebx-4], eax ",gcc,1
inc eax  | * | loc_40FD8F:  ,gcc,1
"mov [ebx-4], eax  | * | mov eax, ds:__CRT_MT ",gcc,1
"loc_40FD8F:   | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_40FDD8 ",gcc,1
"test eax, eax  | * | loc_40FD98:  ",gcc,1
"jnz short loc_40FDD8  | * | mov eax, [edi-4] ",gcc,1
"loc_40FD98:   | * | lea edx, [eax-1] ",gcc,1
"mov eax, [edi-4]  | * | mov [edi-4], edx ",gcc,1
"mov [edi-4], edx  | * | jle short loc_40FDEF ",gcc,1
"test eax, eax  | * | loc_40FDA5:  ",gcc,1
"jle short loc_40FDEF  | * | mov [esi], ebx ",gcc,1
loc_40FDA5:   | * | loc_40FDA7:  ,gcc,1
"mov [esi], ebx  | * | mov eax, esi ",gcc,1
"loc_40FDA7:   | * | add esp, 20h ",gcc,1
retn 4  | * | loc_40FDB4:  ,gcc,1
"align 4  | * | mov [esp+2Ch+var_28], 0 ",gcc,1
"loc_40FDB4:   | * | lea eax, [esp+2Ch+var_D] ",gcc,1
"mov [esp+2Ch+var_28], 0  | * | mov [esp+2Ch+var_2C], eax ",gcc,1
"lea eax, [esp+2Ch+var_D]  | * | call __ZNSs4_Rep8_M_cloneERKSaIcEj  ",gcc,2
"mov [esp+2Ch+var_2C], eax  | * | sub esp, 8 ",gcc,2
"call __ZNSs4_Rep8_M_cloneERKSaIcEj   | * | mov ebx, eax ",gcc,1
"sub esp, 8  | * | mov edi, [esi] ",gcc,1
"mov edi, [esi]  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jz short loc_40FD98 ",gcc,1
"test eax, eax  | * | loc_40FDD8:  ",gcc,1
"jz short loc_40FD98  | * | mov [esp+2Ch+var_28], 0FFFFFFFFh  ",gcc,1
"loc_40FDD8:   | * | lea eax, [edi-4] ",gcc,1
"lea eax, [edi-4]  | * | call __ZN9__gnu_cxx18__exchange_and_addEPVii  ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | jg short loc_40FDA5 ,gcc,1
"test eax, eax  | * | loc_40FDEF:  ",gcc,1
"jg short loc_40FDA5  | * | sub edi, 0Ch ",gcc,1
"loc_40FDEF:   | * | mov [esp+2Ch+var_2C], edi  ",gcc,1
"sub edi, 0Ch  | * | call __ZdlPv  ",gcc,1
"mov [esp+2Ch+var_2C], edi   | * | mov [esi], ebx ",gcc,1
call __ZdlPv   | * | jmp short loc_40FDA7 ,gcc,1
"mov [esi], ebx  | * | align 10h ",gcc,1
jmp short loc_40FDA7  | * | loc_40FE00:  ,gcc,1
"loc_40FE00:   | * | lea eax, [ebx-4] ",gcc,1
"lea eax, [ebx-4]  | * | call __ZN9__gnu_cxx12__atomic_addEPVii  ",gcc,1
"mov [esp+2Ch+var_2C], eax   | * | mov edi, [esi] ",gcc,1
call __ZN9__gnu_cxx12__atomic_addEPVii   | * | jmp loc_40FD8F ,gcc,1
"mov edi, [esi]  | * | __ZNSs6assignERKSs endp ",gcc,1
jmp loc_40FD8F  | * | align 4 ,gcc,1
__ZNSs6assignERKSs endp  | * | public __ZNSs6assignERKSsjj ,gcc,1
align 4  | * | __ZNSs6assignERKSsjj proc near ,gcc,1
"push ebx  | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | mov esi, [edx] ",gcc,1
"mov esi, [edx]  | * | mov edx, ebx ",gcc,3
"mov ebx, [esi-0Ch]  | * | sub edx, eax ",gcc,3
"mov edx, ebx  | * | cmp edx, [esp+1Ch+arg_8] ",gcc,1
"sub edx, eax  | * | jbe short loc_40FE3C ",gcc,1
"cmp edx, [esp+1Ch+arg_8]  | * | mov edx, [esp+1Ch+arg_8] ",gcc,1
jbe short loc_40FE3C  | * | loc_40FE3C:  ,gcc,1
"mov edx, [esp+1Ch+arg_8]  | * | cmp eax, ebx ",gcc,1
loc_40FE3C:   | * | ja short loc_40FE59 ,gcc,1
"cmp eax, ebx  | * | mov [esp+1Ch+var_18], edx  ",gcc,1
"ja short loc_40FE59  | * | add eax, esi ",gcc,1
"mov [esp+1Ch+var_18], edx   | * | mov [esp+1Ch+var_1C], eax  ",gcc,2
"add eax, esi  | * | call __ZNSs6assignEPKcj  ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | sub esp, 8 ",gcc,3
pop esi  | * | loc_40FE59:  ,gcc,1
"retn 0Ch  | * | mov [esp+1Ch+var_1C], offset aBasicStringAss  ",gcc,1
loc_40FE59:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringAss   | * | __ZNSs6assignERKSsjj endp ",gcc,1
__ZNSs6assignERKSsjj endp  | * | public __ZNSs6assignESt16initializer_listIcE ,gcc,1
align 4  | * | __ZNSs6assignESt16initializer_listIcE proc near ,gcc,1
public __ZNSs6assignESt16initializer_listIcE  | * | jmp __ZNSs6assignEPKcj  ,gcc,1
__ZNSs6assignESt16initializer_listIcE proc near  | * | __ZNSs6assignESt16initializer_listIcE endp ,gcc,1
jmp __ZNSs6assignEPKcj   | * | align 10h ,gcc,1
__ZNSs6assignESt16initializer_listIcE endp  | * | public __ZNSs6assignEjc ,gcc,1
align 10h  | * | __ZNSs6assignEjc proc near ,gcc,1
var_14 = dword ptr -14h  | * | this = dword ptr 4 ,data,5
"sub esp, 1Ch  | * | mov [esp+1Ch+var_10], eax  ",gcc,1
"movsx eax, [esp+1Ch+arg_4]  | * | mov eax, [esp+1Ch+this] ",gcc,1
"mov [esp+1Ch+var_10], eax   | * | mov [esp+1Ch+var_14], eax  ",gcc,1
"mov eax, [esp+1Ch+this]  | * | mov eax, [ecx] ",gcc,1
"mov [esp+1Ch+var_14], eax   | * | mov eax, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | mov [esp+1Ch+var_18], eax  ",gcc,2
"mov eax, [eax-0Ch]  | * | mov [esp+1Ch+var_1C], 0  ",gcc,2
"mov [esp+1Ch+var_18], eax   | * | call __ZNSs14_M_replace_auxEjjjc  ",gcc,2
"mov [esp+1Ch+var_1C], 0   | * | sub esp, 10h ",gcc,2
"call __ZNSs14_M_replace_auxEjjjc   | * | add esp, 1Ch ",gcc,2
"sub esp, 10h  | * | retn 8 ",gcc,1
"add esp, 1Ch  | * | __ZNSs6assignEjc endp ",gcc,1
__ZNSs6assignEjc endp  | * | public __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE ,gcc,1
align 4  | * | __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE proc near ,gcc,1
"__ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE proc near  | * | mov eax, [esp+arg_0] ",gcc,1
"mov eax, [esp+arg_0]  | * | mov [esp+arg_0], eax  ",gcc,1
"sub eax, [ecx]  | * | jmp __ZNSs6insertEjPKcj  ",gcc,1
"mov [esp+arg_0], eax   | * | __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE endp ",gcc,1
jmp __ZNSs6insertEjPKcj   | * | align 4 ,gcc,1
__ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE endp  | * | public __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc ,gcc,1
align 4  | * | __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc proc near ,gcc,1
"mov ebx, [esp+1Ch+arg_0]  | * | movsx eax, [esp+1Ch+arg_4] ",gcc,1
"sub ebx, [ecx]  | * | mov [esp+1Ch+var_10], eax  ",gcc,1
"movsx eax, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_14], 1  ",gcc,1
"mov [esp+1Ch+var_10], eax   | * | mov [esp+1Ch+var_18], 0  ",gcc,1
"mov [esp+1Ch+var_14], 1   | * | mov [esp+1Ch+var_1C], ebx  ",gcc,1
"mov [esp+1Ch+var_18], 0   | * | call __ZNSs14_M_replace_auxEjjjc  ",gcc,2
"mov [esp+1Ch+var_1C], ebx   | * | sub esp, 10h ",gcc,1
"call __ZNSs14_M_replace_auxEjjjc   | * | mov eax, [esi] ",gcc,1
"sub esp, 10h  | * | mov dword ptr [eax-4], 0FFFFFFFFh ",gcc,1
pop esi  | * | __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc endp ,gcc,1
retn 8  | * | public __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc ,gcc,1
__ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc endp  | * | __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc proc near ,gcc,1
arg_0 = dword ptr 4  | * | arg_8 = byte ptr 0Ch ,data,1
"sub esp, 1Ch  | * | movsx edx, [esp+1Ch+arg_8] ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | mov [esp+1Ch+var_10], edx  ",gcc,1
"movsx edx, [esp+1Ch+arg_8]  | * | mov edx, [esp+1Ch+arg_4] ",gcc,1
"mov [esp+1Ch+var_10], edx   | * | mov [esp+1Ch+var_14], edx  ",gcc,1
"mov edx, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_18], 0  ",gcc,2
"mov [esp+1Ch+var_14], edx   | * | sub eax, [ecx] ",gcc,1
"mov [esp+1Ch+var_18], 0   | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"sub eax, [ecx]  | * | call __ZNSs14_M_replace_auxEjjjc  ",gcc,1
"mov [esp+1Ch+var_1C], eax   | * | sub esp, 10h ",gcc,4
"sub esp, 10h  | * | retn 0Ch ",gcc,2
"add esp, 1Ch  | * | __ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc endp ",gcc,1
__ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEjc endp  | * | public __ZNSs6insertEjPKc ,gcc,1
align 4  | * | __ZNSs6insertEjPKc proc near ,gcc,1
"mov edx, [esp+1Ch+arg_4]  | * | xor eax, eax ",gcc,1
"lea eax, [ecx-1]  | * | mov [esp+1Ch+var_18], edx  ",gcc,1
"mov [esp+1Ch+var_14], eax   | * | mov eax, [esp+1Ch+this] ",gcc,1
"mov eax, [esp+1Ch+this]  | * | mov ecx, ebx ",gcc,2
"mov [esp+1Ch+var_1C], eax   | * | call __ZNSs6insertEjPKcj  ",gcc,1
"call __ZNSs6insertEjPKcj   | * | add esp, 14h ",gcc,2
pop edi  | * | __ZNSs6insertEjPKc endp ,gcc,1
retn 8  | * | public __ZNSs6insertEjPKcj ,gcc,1
__ZNSs6insertEjPKc endp  | * | __ZNSs6insertEjPKcj proc near  ,gcc,1
var_30 = dword ptr -30h  | * | this = dword ptr 4 ,data,2
"mov eax, ecx  | * | mov esi, [esp+3Ch+arg_4] ",gcc,1
"mov ebp, [esp+3Ch+this]  | * | mov ebx, [esp+3Ch+arg_8] ",gcc,1
"mov esi, [esp+3Ch+arg_4]  | * | mov ecx, [ecx] ",gcc,1
"mov ebx, [esp+3Ch+arg_8]  | * | mov edi, [ecx-0Ch] ",gcc,1
"mov ecx, [ecx]  | * | cmp ebp, edi ",gcc,1
"mov edi, [ecx-0Ch]  | * | ja loc_410082 ",gcc,1
"cmp ebp, edi  | * | mov edx, 3FFFFFFCh ",gcc,1
"ja loc_410082  | * | sub edx, edi ",gcc,1
"mov edx, 3FFFFFFCh  | * | cmp ebx, edx ",gcc,1
"sub edx, edi  | * | ja loc_41008E ",gcc,1
"cmp ebx, edx  | * | cmp esi, ecx ",gcc,1
ja loc_41008E  | * | jnb short loc_40FFC4 ,gcc,1
"cmp esi, ecx  | * | loc_40FF9D:  ",gcc,1
"jnb short loc_40FFC4  | * | mov [esp+3Ch+var_30], ebx  ",gcc,1
"loc_40FF9D:   | * | mov [esp+3Ch+var_34], esi  ",gcc,1
"mov [esp+3Ch+var_30], ebx   | * | mov [esp+3Ch+var_38], 0  ",gcc,1
"mov [esp+3Ch+var_34], esi   | * | mov [esp+3Ch+var_3C], ebp  ",gcc,1
"mov [esp+3Ch+var_38], 0   | * | mov ecx, eax ",gcc,2
"mov [esp+3Ch+var_3C], ebp   | * | call __ZNSs15_M_replace_safeEjjPKcj  ",gcc,1
"mov ecx, eax  | * | sub esp, 10h ",gcc,1
call __ZNSs15_M_replace_safeEjjPKcj   | * | loc_40FFBA:  ,gcc,1
"sub esp, 10h  | * | add esp, 2Ch ",gcc,1
loc_40FFBA:   | * | pop ebx ,gcc,1
pop ebp  | * | loc_40FFC4:  ,gcc,1
"retn 0Ch  | * | add edi, ecx ",gcc,1
"loc_40FFC4:   | * | cmp esi, edi ",gcc,1
"add edi, ecx  | * | ja short loc_40FF9D ",gcc,1
"cmp esi, edi  | * | mov edx, [ecx-4] ",gcc,1
"ja short loc_40FF9D  | * | test edx, edx ",gcc,1
"mov edx, [ecx-4]  | * | jg short loc_40FF9D ",gcc,1
"test edx, edx  | * | sub esi, ecx ",gcc,1
"jg short loc_40FF9D  | * | mov [esp+3Ch+var_34], ebx  ",gcc,1
"sub esi, ecx  | * | mov [esp+3Ch+var_38], 0  ",gcc,1
"mov [esp+3Ch+var_34], ebx   | * | mov [esp+3Ch+var_3C], ebp  ",gcc,1
"mov [esp+3Ch+var_3C], ebp   | * | mov [esp+3Ch+var_20], eax ",gcc,1
"mov ecx, eax  | * | call __ZNSs9_M_mutateEjjj  ",gcc,1
"mov [esp+3Ch+var_20], eax  | * | sub esp, 0Ch ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | mov eax, [esp+3Ch+var_20] ",gcc,1
"sub esp, 0Ch  | * | mov edx, [eax] ",gcc,1
"mov eax, [esp+3Ch+var_20]  | * | add esi, edx ",gcc,1
"mov edx, [eax]  | * | add edx, ebp ",gcc,1
"add esi, edx  | * | lea ebp, [esi+ebx] ",gcc,1
"add edx, ebp  | * | cmp edx, ebp ",gcc,1
"lea ebp, [esi+ebx]  | * | jnb short loc_410048 ",gcc,1
"cmp edx, ebp  | * | cmp esi, edx ",gcc,1
jnb short loc_410048  | * | jb short loc_41001C ,gcc,1
"cmp esi, edx  | * | cmp ebx, 1 ",gcc,1
jb short loc_41001C  | * | jz short loc_410070 ,gcc,1
"jz short loc_410070  | * | mov esi, ebp ",gcc,1
"mov edi, edx  | * | mov ecx, ebx ",gcc,1
"mov esi, ebp  | * | rep movsb ",gcc,1
"mov ecx, ebx  | * | add esp, 2Ch ",gcc,2
rep movsb  | * | pop ebx ,gcc,3
pop ebp  | * | loc_41001C:  ,gcc,1
"retn 0Ch  | * | mov ebp, edx ",gcc,1
"loc_41001C:   | * | sub ebp, esi ",gcc,1
"mov ebp, edx  | * | cmp ebp, 1 ",gcc,1
"sub ebp, esi  | * | jz short loc_41007C ",gcc,1
"jz short loc_41007C  | * | mov ecx, ebp ",gcc,1
"mov ecx, ebp  | * | loc_41002B:  ",gcc,1
"rep movsb  | * | mov ecx, ebx ",gcc,1
"loc_41002B:   | * | sub ecx, ebp ",gcc,1
"mov ecx, ebx  | * | lea esi, [edx+ebx] ",gcc,1
"sub ecx, ebp  | * | add edx, ebp ",gcc,1
"lea esi, [edx+ebx]  | * | cmp ecx, 1 ",gcc,1
"add edx, ebp  | * | jz short loc_410060 ",gcc,1
"cmp ecx, 1  | * | mov edi, edx ",gcc,1
jz short loc_410060  | * | rep movsb ,gcc,1
"mov edi, edx  | * | add esp, 2Ch ",gcc,1
retn 0Ch  | * | loc_410048:  ,gcc,1
"align 4  | * | cmp ebx, 1 ",gcc,1
loc_410048:   | * | jz short loc_410060 ,gcc,1
"jz short loc_410060  | * | mov ecx, ebx ",gcc,1
retn 0Ch  | * | loc_410060:  ,gcc,1
"align 10h  | * | mov cl, [esi] ",gcc,1
"loc_410060:   | * | mov [edx], cl ",gcc,1
"mov cl, [esi]  | * | add esp, 2Ch ",gcc,1
"mov [edx], cl  | * | pop ebx ",gcc,1
retn 0Ch  | * | loc_410070:  ,gcc,1
"align 10h  | * | mov cl, [ebp+0] ",gcc,1
"loc_410070:   | * | mov [edx], cl ",gcc,1
"mov cl, [ebp+0]  | * | jmp loc_40FFBA ",gcc,1
jmp loc_40FFBA  | * | loc_41007C:  ,gcc,1
"align 4  | * | mov cl, [esi] ",gcc,2
"loc_41007C:   | * | mov [edx], cl ",gcc,1
"mov cl, [esi]  | * | jmp short loc_41002B ",gcc,1
"mov [edx], cl  | * | loc_410082:  ",gcc,1
"jmp short loc_41002B  | * | mov [esp+3Ch+var_3C], offset aBasicStringIns  ",gcc,1
loc_410082:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+3Ch+var_3C], offset aBasicStringIns   | * | loc_41008E:  ",gcc,1
"call __ZSt20__throw_out_of_rangePKc   | * | mov [esp+3Ch+var_3C], offset aBasicStringIns  ",gcc,1
loc_41008E:   | * | call __ZSt20__throw_length_errorPKc  ,gcc,1
"mov [esp+3Ch+var_3C], offset aBasicStringIns   | * | __ZNSs6insertEjPKcj endp ",gcc,1
__ZNSs6insertEjPKcj endp  | * | public __ZNSs6insertEjRKSs ,gcc,1
align 4  | * | __ZNSs6insertEjRKSs proc near ,gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | mov edx, [eax-0Ch] ",gcc,1
"mov edx, [eax-0Ch]  | * | mov [esp+1Ch+var_18], eax  ",gcc,1
"mov [esp+1Ch+var_14], edx   | * | mov eax, [esp+1Ch+this] ",gcc,1
"mov eax, [esp+1Ch+this]  | * | call __ZNSs6insertEjPKcj  ",gcc,2
"call __ZNSs6insertEjPKcj   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __ZNSs6insertEjRKSs endp ",gcc,1
__ZNSs6insertEjRKSs endp  | * | public __ZNSs6insertEjRKSsjj ,gcc,1
align 4  | * | __ZNSs6insertEjRKSsjj proc near ,gcc,1
"push ebx  | * | mov eax, [esp+1Ch+arg_8] ",gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | mov esi, [edx] ",gcc,1
"mov edx, [esp+1Ch+arg_4]  | * | mov ebx, [esi-0Ch] ",gcc,1
"mov edx, ebx  | * | cmp edx, [esp+1Ch+arg_C] ",gcc,1
"sub edx, eax  | * | jbe short loc_4100E8 ",gcc,1
"cmp edx, [esp+1Ch+arg_C]  | * | mov edx, [esp+1Ch+arg_C] ",gcc,1
jbe short loc_4100E8  | * | loc_4100E8:  ,gcc,1
"mov edx, [esp+1Ch+arg_C]  | * | cmp eax, ebx ",gcc,1
loc_4100E8:   | * | ja short loc_41010D ,gcc,1
"cmp eax, ebx  | * | mov [esp+1Ch+var_14], edx  ",gcc,1
"ja short loc_41010D  | * | add eax, esi ",gcc,1
"mov [esp+1Ch+var_14], edx   | * | mov [esp+1Ch+var_18], eax  ",gcc,2
"add eax, esi  | * | mov eax, [esp+1Ch+this] ",gcc,1
pop esi  | * | loc_41010D:  ,gcc,1
"retn 10h  | * | mov [esp+1Ch+var_1C], offset aBasicStringIns  ",gcc,1
loc_41010D:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringIns   | * | __ZNSs6insertEjRKSsjj endp ",gcc,1
__ZNSs6insertEjRKSsjj endp  | * | public __ZNSs6insertEjjc ,gcc,1
align 4  | * | __ZNSs6insertEjjc proc near ,gcc,1
this = dword ptr 4  | * | arg_8 = byte ptr 0Ch ,data,1
"sub esp, 18h  | * | movsx ebx, [esp+1Ch+arg_8] ",gcc,1
"movsx ebx, [esp+1Ch+arg_8]  | * | cmp eax, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | ja short loc_410156 ",gcc,1
"cmp eax, [edx-0Ch]  | * | mov [esp+1Ch+var_10], ebx  ",gcc,1
"ja short loc_410156  | * | mov edx, [esp+1Ch+arg_4] ",gcc,1
"mov [esp+1Ch+var_10], ebx   | * | mov [esp+1Ch+var_14], edx  ",gcc,1
"mov [esp+1Ch+var_14], edx   | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"call __ZNSs14_M_replace_auxEjjjc   | * | add esp, 18h ",gcc,1
pop ebx  | * | loc_410156:  ,gcc,1
"retn 0Ch  | * | mov [esp+1Ch+var_1C], offset aBasicStringIns  ",gcc,1
loc_410156:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringIns   | * | __ZNSs6insertEjjc endp ",gcc,1
__ZNSs6insertEjjc endp  | * | public __ZNSs6rbeginEv ,gcc,1
align 4  | * | __ZNSs6rbeginEv proc near ,gcc,1
"mov ebx, [esp+5Ch+this]  | * | mov [esp+5Ch+fctx.lsda], offset dword_4123B0 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4123B0  | * | mov [esp+5Ch+lpfctx], edi  ",gcc,1
"call __Unwind_SjLj_Register  | * | mov eax, [edx-4] ",gcc,1
"mov edx, [ebx]  | * | test eax, eax ",gcc,1
"mov eax, [edx-4]  | * | js short loc_4101A6 ",gcc,1
"test eax, eax  | * | mov [esp+5Ch+fctx.call_site], 0 ",gcc,1
"js short loc_4101A6  | * | mov ecx, ebx ",gcc,1
call __ZNSs12_M_leak_hardEv   | * | loc_4101A6:  ,gcc,1
"mov edx, [ebx]  | * | add edx, [edx-0Ch] ",gcc,1
"loc_4101A6:   | * | mov [esi], edx ",gcc,1
"add edx, [edx-0Ch]  | * | mov [esp+5Ch+lpfctx], edi  ",gcc,1
pop edi  | * | __ZNSs6rbeginEv endp ,gcc,1
__ZNSs6rbeginEv endp  | * | public __ZNSs6resizeEj ,gcc,1
align 10h  | * | __ZNSs6resizeEj proc near ,gcc,1
"sub esp, 1Ch  | * | mov eax, [esp+1Ch+this] ",gcc,1
"mov dword ptr [esp+1Ch+var_18], 0   | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"mov eax, [esp+1Ch+this]  | * | call __ZNSs6resizeEjc  ",gcc,1
"call __ZNSs6resizeEjc   | * | add esp, 1Ch ",gcc,1
"sub esp, 8  | * | retn 4 ",gcc,2
"add esp, 1Ch  | * | __ZNSs6resizeEj endp ",gcc,1
retn 4  | * | public __ZNSs6resizeEjc ,gcc,1
__ZNSs6resizeEj endp  | * | __ZNSs6resizeEjc proc near  ,gcc,1
"sub esp, 18h  | * | movsx ebx, [esp+1Ch+arg_4] ",gcc,1
"movsx ebx, [esp+1Ch+arg_4]  | * | mov edx, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | cmp eax, 3FFFFFFCh ",gcc,1
"mov edx, [edx-0Ch]  | * | ja short loc_41023B ",gcc,1
"cmp eax, 3FFFFFFCh  | * | cmp eax, edx ",gcc,1
ja short loc_41023B  | * | ja short loc_410228 ,gcc,1
"cmp eax, edx  | * | jb short loc_410208 ",gcc,1
"ja short loc_410228  | * | add esp, 18h ",gcc,1
jb short loc_410208  | * | pop ebx ,gcc,1
retn 8  | * | loc_410208:  ,gcc,1
"align 4  | * | mov [esp+1Ch+var_14], 0  ",gcc,1
"loc_410208:   | * | sub edx, eax ",gcc,1
"mov [esp+1Ch+var_14], 0   | * | mov [esp+1Ch+var_18], edx  ",gcc,1
"sub edx, eax  | * | mov [esp+1Ch+var_1C], eax  ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | add esp, 18h ",gcc,1
pop ebx  | * | loc_410228:  ,gcc,1
"retn 8  | * | mov dword ptr [esp+1Ch+arg_4], ebx  ",gcc,1
"loc_410228:   | * | sub eax, edx ",gcc,1
"mov dword ptr [esp+1Ch+arg_4], ebx   | * | mov [esp+1Ch+this], eax  ",gcc,1
"sub eax, edx  | * | add esp, 18h ",gcc,1
"mov [esp+1Ch+this], eax   | * | pop ebx ",gcc,1
"add esp, 18h  | * | jmp __ZNSs6appendEjc  ",gcc,1
pop ebx  | * | loc_41023B:  ,gcc,1
"jmp __ZNSs6appendEjc   | * | mov [esp+1Ch+var_1C], offset aBasicStringRes  ",gcc,1
loc_41023B:   | * | call __ZSt20__throw_length_errorPKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringRes   | * | __ZNSs6resizeEjc endp ",gcc,1
__ZNSs6resizeEjc endp  | * | public __ZNSs7_M_copyEPcPKcj ,gcc,1
align 4  | * | __ZNSs7_M_copyEPcPKcj proc near ,gcc,1
push edi  | * | push edx ,gcc,1
"push edx  | * | mov ecx, [esp+0Ch+arg_8] ",gcc,1
"mov esi, [esp+0Ch+arg_4]  | * | cmp ecx, 1 ",gcc,1
"mov ecx, [esp+0Ch+arg_8]  | * | jz short loc_410264 ",gcc,1
jz short loc_410264  | * | rep movsb ,gcc,1
retn  | * | loc_410264:  ,gcc,1
"loc_410264:   | * | mov edx, [esp+0Ch+this] ",gcc,1
pop edi  | * | __ZNSs7_M_copyEPcPKcj endp ,gcc,1
retn  | * | public __ZNSs7_M_dataEPc ,gcc,1
__ZNSs7_M_copyEPcPKcj endp  | * | __ZNSs7_M_dataEPc proc near ,gcc,1
"__ZNSs7_M_dataEPc proc near  | * | mov eax, [esp+this] ",gcc,1
"mov eax, [esp+this]  | * | retn 4 ",gcc,1
"mov [ecx], eax  | * | __ZNSs7_M_dataEPc endp ",gcc,1
__ZNSs7_M_dataEPc endp  | * | public __ZNSs7_M_leakEv ,gcc,1
align 4  | * | __ZNSs7_M_leakEv proc near ,gcc,1
"__ZNSs7_M_leakEv proc near  | * | mov eax, [ecx] ",gcc,1
"mov eax, [ecx]  | * | test eax, eax ",gcc,1
"mov eax, [eax-4]  | * | js short locret_41028C ",gcc,1
"test eax, eax  | * | jmp __ZNSs12_M_leak_hardEv  ",gcc,1
js short locret_41028C  | * | align 4 ,gcc,1
jmp __ZNSs12_M_leak_hardEv   | * | locret_41028C:  ,gcc,1
locret_41028C:   | * | __ZNSs7_M_leakEv endp ,gcc,1
__ZNSs7_M_leakEv endp  | * | public __ZNSs7_M_moveEPcPKcj ,gcc,1
align 10h  | * | __ZNSs7_M_moveEPcPKcj proc near ,gcc,1
"mov edx, [esp+this]  | * | mov eax, [esp+arg_8] ",gcc,1
"mov ecx, [esp+arg_4]  | * | cmp eax, 1 ",gcc,1
"mov eax, [esp+arg_8]  | * | jz short loc_4102B4 ",gcc,1
"cmp eax, 1  | * | mov [esp+arg_8], eax  ",gcc,1
"jz short loc_4102B4  | * | mov [esp+arg_4], ecx  ",gcc,1
"mov [esp+arg_8], eax   | * | mov [esp+this], edx  ",gcc,1
"mov [esp+arg_4], ecx   | * | jmp _memmove ",gcc,1
"mov [esp+this], edx   | * | align 4 ",gcc,1
jmp _memmove  | * | loc_4102B4:  ,gcc,1
"align 4  | * | mov cl, [ecx] ",gcc,1
"loc_4102B4:   | * | mov [edx], cl ",gcc,1
"mov cl, [ecx]  | * | retn ",gcc,1
"mov [edx], cl  | * | __ZNSs7_M_moveEPcPKcj endp ",gcc,1
__ZNSs7_M_moveEPcPKcj endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_ ,gcc,1
align 4  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_ proc near ,gcc,1
"push ebx  | * | mov eax, [esp+4+arg_4] ",gcc,7
"mov edx, [esp+4+arg_0]  | * | mov ebx, [esp+4+arg_8] ",gcc,4
"mov eax, [esp+4+arg_4]  | * | sub [esp+4+arg_C], ebx ",gcc,4
"mov ebx, [esp+4+arg_8]  | * | sub eax, edx ",gcc,4
"sub [esp+4+arg_C], ebx  | * | mov [esp+4+arg_4], eax  ",gcc,4
"sub eax, edx  | * | sub edx, [ecx] ",gcc,8
"mov [esp+4+arg_4], eax   | * | mov [esp+4+arg_0], edx  ",gcc,7
"sub edx, [ecx]  | * | pop ebx ",gcc,7
"mov [esp+4+arg_0], edx   | * | jmp __ZNSs7replaceEjjPKcj  ",gcc,6
pop ebx  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_ endp ,gcc,1
jmp __ZNSs7replaceEjjPKcj   | * | align 10h ,gcc,3
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_ endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc ,gcc,1
align 10h  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc proc near ,gcc,1
"sub esp, 1Ch  | * | mov ebp, [esp+2Ch+arg_0] ",gcc,1
"mov ebx, ecx  | * | mov edx, [esp+2Ch+arg_4] ",gcc,1
"mov ebp, [esp+2Ch+arg_0]  | * | mov esi, [esp+2Ch+arg_8] ",gcc,1
"mov edx, [esp+2Ch+arg_4]  | * | mov edi, esi ",gcc,1
"mov esi, [esp+2Ch+arg_8]  | * | xor eax, eax ",gcc,1
"mov edi, esi  | * | mov ecx, 0FFFFFFFFh ",gcc,1
"not ecx  | * | mov [esp+2Ch+var_20], ecx  ",gcc,1
"dec ecx  | * | mov [esp+2Ch+var_24], esi  ",gcc,1
"mov [esp+2Ch+var_20], ecx   | * | sub edx, ebp ",gcc,1
"mov [esp+2Ch+var_24], esi   | * | mov [esp+2Ch+var_28], edx  ",gcc,1
"sub edx, ebp  | * | sub ebp, [ebx] ",gcc,1
"mov [esp+2Ch+var_28], edx   | * | mov [esp+2Ch+var_2C], ebp  ",gcc,1
"sub ebp, [ebx]  | * | mov ecx, ebx ",gcc,1
"mov [esp+2Ch+var_2C], ebp   | * | call __ZNSs7replaceEjjPKcj  ",gcc,1
"call __ZNSs7replaceEjjPKcj   | * | add esp, 1Ch ",gcc,2
pop ebp  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc endp ,gcc,1
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_ ,gcc,1
align 4  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_ proc near ,gcc,1
pop ebx  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_ endp ,gcc,1
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_ endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj ,gcc,1
align 10h  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj proc near ,gcc,1
"mov edx, [esp+4+arg_0]  | * | sub eax, edx ",gcc,2
"mov eax, [esp+4+arg_4]  | * | mov [esp+4+arg_4], eax  ",gcc,2
pop ebx  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj endp ,gcc,1
jmp __ZNSs7replaceEjjPKcj   | * | align 4 ,gcc,3
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcj endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs ,gcc,1
align 4  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs proc near ,gcc,1
"push ebx  | * | mov edx, [esp+1Ch+arg_0] ",gcc,1
"mov edx, [esp+1Ch+arg_0]  | * | mov ebx, [esp+1Ch+arg_8] ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | mov ebx, [ebx] ",gcc,1
"mov ebx, [esp+1Ch+arg_8]  | * | mov esi, [ebx-0Ch] ",gcc,1
"mov ebx, [ebx]  | * | mov [esp+1Ch+var_10], esi  ",gcc,1
"mov esi, [ebx-0Ch]  | * | mov [esp+1Ch+var_14], ebx  ",gcc,1
"mov [esp+1Ch+var_10], esi   | * | sub eax, edx ",gcc,1
"mov [esp+1Ch+var_14], ebx   | * | mov [esp+1Ch+var_18], eax  ",gcc,1
"sub edx, [ecx]  | * | call __ZNSs7replaceEjjPKcj  ",gcc,1
"mov [esp+1Ch+var_1C], edx   | * | sub esp, 10h ",gcc,1
"call __ZNSs7replaceEjjPKcj   | * | add esp, 14h ",gcc,3
pop esi  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs endp ,gcc,1
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_ ,gcc,1
align 4  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_ proc near ,gcc,1
pop ebx  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_ endp ,gcc,1
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_ endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_ ,gcc,1
align 4  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_ proc near ,gcc,1
pop ebx  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_ endp ,gcc,1
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_ endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE ,gcc,1
align 10h  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE proc near ,gcc,1
pop ebx  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE endp ,gcc,1
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE endp  | * | public __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc ,gcc,1
align 4  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc proc near ,gcc,1
arg_0 = dword ptr 4  | * | arg_C = dword ptr 10h ,data,1
"mov edx, [esp+4+arg_0]  | * | movsx ebx, byte ptr [esp+4+arg_C] ",gcc,1
"mov eax, [esp+4+arg_4]  | * | mov [esp+4+arg_C], ebx  ",gcc,1
"movsx ebx, byte ptr [esp+4+arg_C]  | * | sub eax, edx ",gcc,1
"mov [esp+4+arg_C], ebx   | * | mov [esp+4+arg_4], eax  ",gcc,1
"mov [esp+4+arg_0], edx   | * | jmp __ZNSs14_M_replace_auxEjjjc  ",gcc,1
pop ebx  | * | __ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc endp ,gcc,1
jmp __ZNSs14_M_replace_auxEjjjc   | * | public __ZNSs7replaceEjjPKc ,gcc,1
__ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_jc endp  | * | __ZNSs7replaceEjjPKc proc near ,gcc,1
"sub esp, 14h  | * | mov edx, [esp+1Ch+arg_8] ",gcc,2
"mov edx, [esp+1Ch+arg_8]  | * | xor eax, eax ",gcc,1
"not ecx  | * | mov [esp+1Ch+var_10], eax  ",gcc,1
"lea eax, [ecx-1]  | * | mov [esp+1Ch+var_14], edx  ",gcc,1
"mov [esp+1Ch+var_10], eax   | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"mov eax, [esp+1Ch+arg_4]  | * | mov eax, [esp+1Ch+this] ",gcc,3
"mov [esp+1Ch+var_1C], eax   | * | call __ZNSs7replaceEjjPKcj  ",gcc,1
pop edi  | * | __ZNSs7replaceEjjPKc endp ,gcc,1
retn 0Ch  | * | public __ZNSs7replaceEjjPKcj ,gcc,1
__ZNSs7replaceEjjPKc endp  | * | __ZNSs7replaceEjjPKcj proc near  ,gcc,1
lpfctx = dword ptr -7Ch  | * | var_74 = dword ptr -74h ,data,1
var_74 = dword ptr -74h  | * | var_60 = dword ptr -60h ,data,1
var_70 = dword ptr -70h  | * | var_5C = dword ptr -5Ch ,data,1
var_10 = dword ptr -10h  | * | this = dword ptr 4 ,data,1
var_C = byte ptr -0Ch  | * | arg_4 = dword ptr 8 ,data,2
arg_8 = dword ptr 0Ch  | * | lpuexcpt = dword ptr 1Ch ,data,1
arg_C = dword ptr 10h  | * | arg_2C = dword ptr 30h ,data,1
lpuexcpt = dword ptr 1Ch  | * | arg_30 = dword ptr 34h ,data,1
arg_2C = dword ptr 30h  | * | arg_68 = byte ptr 6Ch ,data,1
"push edi  | * | sub esp, 70h ",gcc,1
"push esi  | * | mov [esp+7Ch+var_60], ecx ",gcc,1
"sub esp, 70h  | * | mov [esp+7Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov [esp+7Ch+var_60], ecx  | * | mov [esp+7Ch+fctx.lsda], offset word_4123DE ",gcc,1
"mov [esp+7Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea eax, [esp+7Ch+var_C] ",gcc,1
"mov [esp+7Ch+fctx.lsda], offset word_4123DE  | * | mov [esp+7Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+7Ch+var_C]  | * | mov [esp+7Ch+var_2C], offset loc_410731 ",gcc,1
"mov [esp+7Ch+fctx.jbuf], eax  | * | mov [esp+7Ch+var_28], esp ",gcc,1
"mov [esp+7Ch+var_2C], offset loc_410731  | * | lea edx, [esp+7Ch+fctx] ",gcc,1
"mov [esp+7Ch+var_28], esp  | * | mov [esp+7Ch+lpfctx], edx  ",gcc,1
"lea edx, [esp+7Ch+fctx]  | * | call __Unwind_SjLj_Register ",gcc,1
"mov [esp+7Ch+lpfctx], edx   | * | mov ecx, [esp+7Ch+var_60] ",gcc,3
"call __Unwind_SjLj_Register  | * | mov eax, [ecx] ",gcc,1
"mov ecx, [esp+7Ch+var_60]  | * | mov edx, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | cmp [esp+7Ch+this], edx ",gcc,1
"mov edx, [eax-0Ch]  | * | ja loc_410709 ",gcc,1
"cmp [esp+7Ch+this], edx  | * | mov ecx, edx ",gcc,1
"ja loc_410709  | * | sub ecx, [esp+7Ch+this] ",gcc,1
"mov ecx, edx  | * | mov [esp+7Ch+var_58], ecx ",gcc,1
"sub ecx, [esp+7Ch+this]  | * | mov ecx, [esp+7Ch+arg_4] ",gcc,1
"mov [esp+7Ch+var_58], ecx  | * | cmp [esp+7Ch+var_58], ecx ",gcc,1
"mov ecx, [esp+7Ch+arg_4]  | * | ja short loc_41055C ",gcc,1
"cmp [esp+7Ch+var_58], ecx  | * | loc_4104DE:  ",gcc,1
"ja short loc_41055C  | * | mov ecx, [esp+7Ch+var_58] ",gcc,1
"loc_4104DE:   | * | sub ecx, edx ",gcc,1
"mov ecx, [esp+7Ch+var_58]  | * | add ecx, 3FFFFFFCh ",gcc,1
"sub ecx, edx  | * | cmp [esp+7Ch+arg_C], ecx ",gcc,1
"add ecx, 3FFFFFFCh  | * | ja loc_41071D ",gcc,1
"cmp [esp+7Ch+arg_C], ecx  | * | cmp [esp+7Ch+arg_8], eax ",gcc,1
ja loc_41071D  | * | jnb short loc_410568 ,gcc,1
"cmp [esp+7Ch+arg_8], eax  | * | loc_410500:  ",gcc,1
"jnb short loc_410568  | * | mov ecx, [esp+7Ch+arg_C] ",gcc,1
"loc_410500:   | * | mov [esp+7Ch+var_70], ecx  ",gcc,1
"mov ecx, [esp+7Ch+arg_C]  | * | mov eax, [esp+7Ch+arg_8] ",gcc,2
"mov [esp+7Ch+var_70], ecx   | * | mov [esp+7Ch+var_74], eax  ",gcc,2
"mov eax, [esp+7Ch+arg_8]  | * | mov edx, [esp+7Ch+var_58] ",gcc,1
"mov [esp+7Ch+var_74], eax   | * | mov [esp+7Ch+var_78], edx  ",gcc,1
"mov edx, [esp+7Ch+var_58]  | * | mov ecx, [esp+7Ch+this] ",gcc,1
"mov [esp+7Ch+var_78], edx   | * | mov [esp+7Ch+lpfctx], ecx  ",gcc,1
"mov ecx, [esp+7Ch+this]  | * | mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+7Ch+lpfctx], ecx   | * | mov ecx, [esp+7Ch+var_60] ",gcc,1
"mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh  | * | call __ZNSs15_M_replace_safeEjjPKcj  ",gcc,1
"mov ecx, [esp+7Ch+var_60]  | * | sub esp, 10h ",gcc,2
"call __ZNSs15_M_replace_safeEjjPKcj   | * | mov [esp+7Ch+var_60], eax ",gcc,2
"sub esp, 10h  | * | loc_410540:  ",gcc,1
"mov [esp+7Ch+var_60], eax  | * | lea eax, [esp+7Ch+fctx] ",gcc,1
"loc_410540:   | * | mov [esp+7Ch+lpfctx], eax  ",gcc,1
"lea eax, [esp+7Ch+fctx]  | * | call __Unwind_SjLj_Unregister ",gcc,1
"mov [esp+7Ch+lpfctx], eax   | * | mov eax, [esp+7Ch+var_60] ",gcc,1
"call __Unwind_SjLj_Unregister  | * | add esp, 70h ",gcc,1
"mov eax, [esp+7Ch+var_60]  | * | pop esi ",gcc,1
"add esp, 70h  | * | pop edi ",gcc,1
retn 10h  | * | loc_41055C:  ,gcc,1
"align 4  | * | mov [esp+7Ch+var_58], ecx ",gcc,1
loc_41055C:   | * | jmp loc_4104DE ,gcc,1
"mov [esp+7Ch+var_58], ecx  | * | align 4 ",gcc,1
jmp loc_4104DE  | * | loc_410568:  ,gcc,1
"align 4  | * | add edx, eax ",gcc,1
"loc_410568:   | * | cmp [esp+7Ch+arg_8], edx ",gcc,1
"add edx, eax  | * | ja short loc_410500 ",gcc,1
"cmp [esp+7Ch+arg_8], edx  | * | mov edx, [eax-4] ",gcc,1
"ja short loc_410500  | * | test edx, edx ",gcc,1
"mov edx, [eax-4]  | * | jg short loc_410500 ",gcc,1
"test edx, edx  | * | mov ecx, [esp+7Ch+arg_8] ",gcc,1
"jg short loc_410500  | * | add ecx, [esp+7Ch+arg_C] ",gcc,1
"mov ecx, [esp+7Ch+arg_8]  | * | mov edx, [esp+7Ch+this] ",gcc,1
"add ecx, [esp+7Ch+arg_C]  | * | add edx, eax ",gcc,1
"mov edx, [esp+7Ch+this]  | * | cmp ecx, edx ",gcc,1
"add edx, eax  | * | ja short loc_410604 ",gcc,1
"cmp ecx, edx  | * | mov ecx, [esp+7Ch+arg_8] ",gcc,1
"ja short loc_410604  | * | sub ecx, eax ",gcc,1
"mov ecx, [esp+7Ch+arg_8]  | * | mov [esp+7Ch+var_54], ecx ",gcc,1
"sub ecx, eax  | * | loc_4105A2:  ",gcc,1
"mov [esp+7Ch+var_54], ecx  | * | mov ecx, [esp+7Ch+arg_C] ",gcc,1
"loc_4105A2:   | * | mov [esp+7Ch+var_74], ecx  ",gcc,1
"mov ecx, [esp+7Ch+arg_C]  | * | mov eax, [esp+7Ch+var_58] ",gcc,1
"mov [esp+7Ch+var_74], ecx   | * | mov [esp+7Ch+var_78], eax  ",gcc,1
"mov eax, [esp+7Ch+var_58]  | * | mov edx, [esp+7Ch+this] ",gcc,2
"mov [esp+7Ch+var_78], eax   | * | mov [esp+7Ch+lpfctx], edx  ",gcc,2
"mov edx, [esp+7Ch+this]  | * | mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh  | * | call __ZNSs9_M_mutateEjjj  ",gcc,1
"mov ecx, [esp+7Ch+var_60]  | * | sub esp, 0Ch ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | mov ecx, [esp+7Ch+var_60] ",gcc,1
"sub esp, 0Ch  | * | mov edi, [ecx] ",gcc,1
"mov ecx, [esp+7Ch+var_60]  | * | mov esi, [esp+7Ch+var_54] ",gcc,1
"mov edi, [ecx]  | * | add esi, edi ",gcc,1
"mov esi, [esp+7Ch+var_54]  | * | mov eax, [esp+7Ch+this] ",gcc,1
"add esi, edi  | * | add eax, edi ",gcc,1
"mov eax, [esp+7Ch+this]  | * | cmp [esp+7Ch+arg_C], 1 ",gcc,1
"add eax, edi  | * | jz short loc_41063C ",gcc,1
"cmp [esp+7Ch+arg_C], 1  | * | mov edi, eax ",gcc,1
"jz short loc_41063C  | * | mov ecx, [esp+7Ch+arg_C] ",gcc,1
"mov ecx, [esp+7Ch+arg_C]  | * | jmp loc_410540 ",gcc,1
rep movsb  | * | align 4 ,gcc,2
jmp loc_410540  | * | loc_410604:  ,gcc,1
"align 4  | * | mov edx, [esp+7Ch+var_58] ",gcc,1
"loc_410604:   | * | add edx, [esp+7Ch+this] ",gcc,1
"mov edx, [esp+7Ch+var_58]  | * | add edx, eax ",gcc,1
"add edx, [esp+7Ch+this]  | * | cmp [esp+7Ch+arg_8], edx ",gcc,1
"add edx, eax  | * | jb short loc_410648 ",gcc,1
"cmp [esp+7Ch+arg_8], edx  | * | mov edx, [esp+7Ch+arg_8] ",gcc,1
"jb short loc_410648  | * | sub edx, eax ",gcc,1
"mov edx, [esp+7Ch+arg_8]  | * | mov eax, edx ",gcc,1
"sub edx, eax  | * | mov edx, [esp+7Ch+arg_C] ",gcc,1
"mov eax, edx  | * | sub edx, [esp+7Ch+var_58] ",gcc,1
"mov edx, [esp+7Ch+arg_C]  | * | add edx, eax ",gcc,1
"sub edx, [esp+7Ch+var_58]  | * | mov [esp+7Ch+var_54], edx ",gcc,1
"add edx, eax  | * | jmp loc_4105A2 ",gcc,1
"mov [esp+7Ch+var_54], edx  | * | align 4 ",gcc,1
jmp loc_4105A2  | * | loc_41063C:  ,gcc,1
"loc_41063C:   | * | mov [eax], dl ",gcc,1
"mov dl, [esi]  | * | jmp loc_410540 ",gcc,1
"mov [eax], dl  | * | align 4 ",gcc,2
jmp loc_410540  | * | loc_410648:  ,gcc,1
"align 4  | * | lea eax, [esp+7Ch+var_11] ",gcc,1
"loc_410648:   | * | mov [esp+7Ch+var_74], eax ",gcc,1
"lea eax, [esp+7Ch+var_11]  | * | mov ecx, [esp+7Ch+arg_C] ",gcc,1
"mov [esp+7Ch+var_74], eax  | * | mov [esp+7Ch+var_78], ecx ",gcc,1
"mov [esp+7Ch+var_78], ecx  | * | mov [esp+7Ch+lpfctx], eax ",gcc,1
"mov eax, [esp+7Ch+arg_8]  | * | mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+7Ch+lpfctx], eax  | * | lea ecx, [esp+7Ch+var_10] ",gcc,1
"mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh  | * | call __ZNSsC1EPKcjRKSaIcE  ",gcc,1
"lea ecx, [esp+7Ch+var_10]  | * | sub esp, 0Ch ",gcc,1
"call __ZNSsC1EPKcjRKSaIcE   | * | mov ecx, [esp+7Ch+arg_C] ",gcc,1
"sub esp, 0Ch  | * | mov [esp+7Ch+var_70], ecx  ",gcc,1
"mov ecx, [esp+7Ch+arg_C]  | * | mov eax, [esp+7Ch+var_10] ",gcc,1
"mov eax, [esp+7Ch+var_10]  | * | mov eax, [esp+7Ch+var_58] ",gcc,1
"mov [esp+7Ch+var_74], eax   | * | mov [esp+7Ch+var_78], eax  ",gcc,1
"mov edx, [esp+7Ch+this]  | * | mov [esp+7Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+7Ch+fctx.call_site], 1  | * | call __ZNSs15_M_replace_safeEjjPKcj  ",gcc,1
"sub esp, 10h  | * | mov ecx, [esp+7Ch+var_10] ",gcc,1
"mov [esp+7Ch+var_60], eax  | * | mov [esp+7Ch+var_5C], ecx ",gcc,1
"mov ecx, [esp+7Ch+var_10]  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov [esp+7Ch+var_5C], ecx  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_4106F0 ",gcc,1
"test eax, eax  | * | mov ecx, [esp+7Ch+var_5C] ",gcc,1
"jnz short loc_4106F0  | * | mov eax, [ecx-4] ",gcc,1
"mov ecx, [esp+7Ch+var_5C]  | * | lea edx, [eax-1] ",gcc,1
"lea edx, [eax-1]  | * | loc_4106D4:  ",gcc,1
loc_4106D4:   | * | jg loc_410540 ,gcc,1
"test eax, eax  | * | mov eax, [esp+7Ch+var_5C] ",gcc,1
"jg loc_410540  | * | sub eax, 0Ch ",gcc,1
"mov eax, [esp+7Ch+var_5C]  | * | mov [esp+7Ch+lpfctx], eax  ",gcc,2
"sub eax, 0Ch  | * | call __ZdlPv  ",gcc,1
"mov [esp+7Ch+lpfctx], eax   | * | jmp loc_410540 ",gcc,1
call __ZdlPv   | * | loc_4106F0:  ,gcc,1
"jmp loc_410540  | * | mov [esp+7Ch+var_78], 0FFFFFFFFh  ",gcc,1
"loc_4106F0:   | * | mov eax, [esp+7Ch+var_5C] ",gcc,1
"mov [esp+7Ch+var_78], 0FFFFFFFFh   | * | sub eax, 4 ",gcc,1
"mov [esp+7Ch+lpfctx], eax   | * | jmp short loc_4106D4 ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | loc_410709:  ,gcc,1
"jmp short loc_4106D4  | * | mov [esp+7Ch+lpfctx], offset aBasicStringRep  ",gcc,1
"loc_410709:   | * | mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+7Ch+lpfctx], offset aBasicStringRep   | * | call __ZSt20__throw_out_of_rangePKc  ",gcc,1
"mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_41071D:  ",gcc,1
"call __ZSt20__throw_out_of_rangePKc   | * | mov [esp+7Ch+lpfctx], offset aBasicStringRep  ",gcc,1
"loc_41071D:   | * | mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+7Ch+lpfctx], offset aBasicStringRep   | * | call __ZSt20__throw_length_errorPKc  ",gcc,1
"mov [esp+7Ch+fctx.call_site], 0FFFFFFFFh  | * | loc_410731:  ",gcc,1
"call __ZSt20__throw_length_errorPKc   | * | mov eax, [esp+arg_30] ",gcc,1
"loc_410731:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_30]  | * | lea ecx, [esp+arg_68] ",gcc,1
"lea ecx, [esp+arg_68]  | * | mov edx, [esp+lpuexcpt] ",gcc,1
"mov edx, [esp+lpuexcpt]  | * | mov [esp+arg_2C], 0FFFFFFFFh ",gcc,1
"mov [esp+arg_2C], 0FFFFFFFFh  | * | __ZNSs7replaceEjjPKcj endp ",gcc,1
__ZNSs7replaceEjjPKcj endp  | * | public __ZNSs7replaceEjjRKSs ,gcc,1
align 4  | * | __ZNSs7replaceEjjRKSs proc near ,gcc,1
"mov eax, [esp+1Ch+arg_8]  | * | mov edx, [eax-0Ch] ",gcc,1
"mov eax, [eax]  | * | mov [esp+1Ch+var_10], edx  ",gcc,1
"mov edx, [eax-0Ch]  | * | mov [esp+1Ch+var_14], eax  ",gcc,1
"mov [esp+1Ch+var_10], edx   | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"mov eax, [esp+1Ch+this]  | * | call __ZNSs7replaceEjjPKcj  ",gcc,2
"add esp, 1Ch  | * | __ZNSs7replaceEjjRKSs endp ",gcc,1
__ZNSs7replaceEjjRKSs endp  | * | public __ZNSs7replaceEjjRKSsjj ,gcc,1
align 4  | * | __ZNSs7replaceEjjRKSsjj proc near ,gcc,1
"push ebx  | * | mov eax, [esp+1Ch+arg_C] ",gcc,1
"mov eax, [esp+1Ch+arg_C]  | * | mov esi, [edx] ",gcc,1
"mov edx, [esp+1Ch+arg_8]  | * | mov ebx, [esi-0Ch] ",gcc,1
"mov edx, ebx  | * | cmp edx, [esp+1Ch+arg_10] ",gcc,1
"sub edx, eax  | * | jbe short loc_4107AC ",gcc,1
"cmp edx, [esp+1Ch+arg_10]  | * | mov edx, [esp+1Ch+arg_10] ",gcc,1
jbe short loc_4107AC  | * | loc_4107AC:  ,gcc,1
"mov edx, [esp+1Ch+arg_10]  | * | cmp eax, ebx ",gcc,1
loc_4107AC:   | * | ja short loc_4107D9 ,gcc,1
"cmp eax, ebx  | * | mov [esp+1Ch+var_10], edx  ",gcc,1
"ja short loc_4107D9  | * | add eax, esi ",gcc,1
"mov [esp+1Ch+var_10], edx   | * | mov [esp+1Ch+var_14], eax  ",gcc,1
"add eax, esi  | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
pop ebx  | * | retn 14h ,gcc,1
pop esi  | * | loc_4107D9:  ,gcc,1
"retn 14h  | * | mov [esp+1Ch+var_1C], offset aBasicStringRep  ",gcc,1
loc_4107D9:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringRep   | * | __ZNSs7replaceEjjRKSsjj endp ",gcc,1
__ZNSs7replaceEjjRKSsjj endp  | * | public __ZNSs7replaceEjjjc ,gcc,1
align 4  | * | __ZNSs7replaceEjjjc proc near ,gcc,1
"sub esp, 1Ch  | * | mov esi, [esp+2Ch+arg_4] ",gcc,1
"mov eax, [esp+2Ch+this]  | * | mov edi, [esp+2Ch+arg_8] ",gcc,1
"mov esi, [esp+2Ch+arg_4]  | * | movsx ebp, byte ptr [esp+2Ch+arg_C] ",gcc,1
"mov edi, [esp+2Ch+arg_8]  | * | mov edx, [ecx] ",gcc,1
"movsx ebp, byte ptr [esp+2Ch+arg_C]  | * | mov ebx, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | mov edx, ebx ",gcc,1
"mov ebx, [edx-0Ch]  | * | sub edx, eax ",gcc,1
"mov edx, ebx  | * | cmp edx, esi ",gcc,1
"sub edx, eax  | * | jbe short loc_41080F ",gcc,1
"cmp edx, esi  | * | mov edx, esi ",gcc,1
jbe short loc_41080F  | * | loc_41080F:  ,gcc,1
"mov edx, esi  | * | cmp eax, ebx ",gcc,1
loc_41080F:   | * | ja short loc_41082F ,gcc,1
"cmp eax, ebx  | * | mov [esp+2Ch+arg_C], ebp  ",gcc,1
"ja short loc_41082F  | * | mov [esp+2Ch+arg_8], edi  ",gcc,1
"mov [esp+2Ch+arg_C], ebp   | * | mov [esp+2Ch+arg_4], edx  ",gcc,1
"mov [esp+2Ch+arg_8], edi   | * | mov [esp+2Ch+this], eax  ",gcc,1
"mov [esp+2Ch+arg_4], edx   | * | add esp, 1Ch ",gcc,1
"mov [esp+2Ch+this], eax   | * | pop ebx ",gcc,1
pop edi  | * | jmp __ZNSs14_M_replace_auxEjjjc  ,gcc,1
pop ebp  | * | loc_41082F:  ,gcc,1
"jmp __ZNSs14_M_replace_auxEjjjc   | * | mov [esp+2Ch+var_2C], offset aBasicStringRep  ",gcc,1
loc_41082F:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+2Ch+var_2C], offset aBasicStringRep   | * | __ZNSs7replaceEjjjc endp ",gcc,1
__ZNSs7replaceEjjjc endp  | * | public __ZNSs7reserveEj ,gcc,1
align 4  | * | __ZNSs7reserveEj proc near  ,gcc,1
"sub esp, 20h  | * | mov esi, [esp+2Ch+this] ",gcc,1
"mov esi, [esp+2Ch+this]  | * | cmp esi, [eax-8] ",gcc,1
"mov eax, [ecx]  | * | jz short loc_410898 ",gcc,1
"cmp esi, [eax-8]  | * | loc_41084F:  ",gcc,1
"jz short loc_410898  | * | mov edx, [eax-0Ch] ",gcc,1
"loc_41084F:   | * | lea ecx, [eax-0Ch] ",gcc,1
"mov edx, [eax-0Ch]  | * | cmp esi, edx ",gcc,1
"lea ecx, [eax-0Ch]  | * | jb short loc_410894 ",gcc,1
"cmp esi, edx  | * | loc_410859:  ",gcc,1
"jb short loc_410894  | * | sub esi, edx ",gcc,1
"loc_410859:   | * | mov [esp+2Ch+var_28], esi ",gcc,1
"sub esi, edx  | * | lea eax, [esp+2Ch+var_D] ",gcc,1
"mov [esp+2Ch+var_28], esi  | * | mov [esp+2Ch+var_2C], eax ",gcc,1
"call __ZNSs4_Rep8_M_cloneERKSaIcEj   | * | mov edi, eax ",gcc,1
"sub esp, 8  | * | mov esi, [ebx] ",gcc,1
"mov edi, eax  | * | mov ecx, ds:__CRT_MT ",gcc,1
"mov esi, [ebx]  | * | test ecx, ecx ",gcc,1
"mov ecx, ds:__CRT_MT  | * | jnz short loc_4108B4 ",gcc,1
"test ecx, ecx  | * | mov edx, [esi-4] ",gcc,1
"jnz short loc_4108B4  | * | lea eax, [edx-1] ",gcc,1
"mov edx, [esi-4]  | * | mov [esi-4], eax ",gcc,1
"lea eax, [edx-1]  | * | test edx, edx ",gcc,1
"mov [esi-4], eax  | * | jle short loc_4108A4 ",gcc,1
"test edx, edx  | * | loc_410889:  ",gcc,1
"jle short loc_4108A4  | * | mov [ebx], edi ",gcc,1
loc_410889:   | * | loc_41088B:  ,gcc,1
"mov [ebx], edi  | * | add esp, 20h ",gcc,1
loc_41088B:   | * | pop ebx ,gcc,1
pop edi  | * | loc_410894:  ,gcc,1
"retn 4  | * | mov esi, edx ",gcc,1
loc_410894:   | * | jmp short loc_410859 ,gcc,1
"mov esi, edx  | * | loc_410898:  ",gcc,1
"jmp short loc_410859  | * | mov edi, [eax-4] ",gcc,1
"loc_410898:   | * | test edi, edi ",gcc,1
"mov edi, [eax-4]  | * | jg short loc_41084F ",gcc,1
"test edi, edi  | * | jmp short loc_41088B ",gcc,1
jg short loc_41084F  | * | align 4 ,gcc,1
jmp short loc_41088B  | * | loc_4108A4:  ,gcc,1
"align 4  | * | sub esi, 0Ch ",gcc,1
"loc_4108A4:   | * | mov [esp+2Ch+var_2C], esi  ",gcc,1
"sub esi, 0Ch  | * | call __ZdlPv  ",gcc,2
"mov [esp+2Ch+var_2C], esi   | * | jmp short loc_410889 ",gcc,1
call __ZdlPv   | * | align 4 ,gcc,1
jmp short loc_410889  | * | loc_4108B4:  ,gcc,1
"loc_4108B4:   | * | lea eax, [esi-4] ",gcc,1
"mov [esp+2Ch+var_2C], eax   | * | mov edx, eax ",gcc,1
"call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | test edx, edx ",gcc,1
"mov edx, eax  | * | jg short loc_410889 ",gcc,1
"test edx, edx  | * | jmp short loc_4108A4 ",gcc,1
jg short loc_410889  | * | __ZNSs7reserveEj endp ,gcc,1
jmp short loc_4108A4  | * | align 10h ,gcc,1
__ZNSs7reserveEj endp  | * | public __ZNSs8pop_backEv ,gcc,1
align 10h  | * | __ZNSs8pop_backEv proc near ,gcc,1
"sub esp, 1Ch  | * | mov eax, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | lea edx, [eax-1] ",gcc,1
"mov eax, [eax-0Ch]  | * | cmp edx, eax ",gcc,1
"lea edx, [eax-1]  | * | ja short loc_4108FE ",gcc,1
"cmp edx, eax  | * | mov [esp+1Ch+var_14], 0  ",gcc,1
"ja short loc_4108FE  | * | mov [esp+1Ch+var_18], 1  ",gcc,1
"call __ZNSs9_M_mutateEjjj   | * | add esp, 1Ch ",gcc,1
"sub esp, 0Ch  | * | retn ",gcc,1
"add esp, 1Ch  | * | loc_4108FE:  ",gcc,1
"retn  | * | mov [esp+1Ch+var_1C], offset aBasicStringEra  ",gcc,1
loc_4108FE:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringEra   | * | __ZNSs8pop_backEv endp ",gcc,1
__ZNSs8pop_backEv endp  | * | public __ZNSs9_M_assignEPcjc ,gcc,1
align 4  | * | __ZNSs9_M_assignEPcjc proc near ,gcc,1
"push edi  | * | mov edx, [esp+4+arg_8] ",gcc,1
"mov ecx, [esp+4+arg_4]  | * | cmp ecx, 1 ",gcc,1
"mov edx, [esp+4+arg_8]  | * | jz short loc_410924 ",gcc,1
"cmp ecx, 1  | * | mov al, dl ",gcc,1
"jz short loc_410924  | * | mov edi, [esp+4+this] ",gcc,1
"mov al, dl  | * | rep stosb ",gcc,1
"mov edi, [esp+4+this]  | * | pop edi ",gcc,1
rep stosb  | * | retn ,gcc,1
pop edi  | * | loc_410924:  ,gcc,1
"retn  | * | mov eax, [esp+4+this] ",gcc,1
"loc_410924:   | * | mov [eax], dl ",gcc,1
"mov eax, [esp+4+this]  | * | pop edi ",gcc,1
"mov [eax], dl  | * | retn ",gcc,1
pop edi  | * | __ZNSs9_M_assignEPcjc endp ,gcc,1
retn  | * | public __ZNSs9_M_mutateEjjj ,gcc,1
__ZNSs9_M_assignEPcjc endp  | * | __ZNSs9_M_mutateEjjj proc near  ,gcc,1
var_4C = dword ptr -4Ch  | * | var_44 = dword ptr -44h ,data,2
var_48 = dword ptr -48h  | * | var_34 = dword ptr -34h ,data,1
var_44 = dword ptr -44h  | * | var_30 = dword ptr -30h ,data,1
var_1D = byte ptr -1Dh  | * | arg_4 = dword ptr 8 ,data,1
"sub esp, 3Ch  | * | mov edi, [ecx] ",gcc,1
"mov ebp, ecx  | * | mov edx, [edi-0Ch] ",gcc,1
"mov edi, [ecx]  | * | mov ebx, [esp+4Ch+arg_8] ",gcc,1
"mov edx, [edi-0Ch]  | * | sub ebx, [esp+4Ch+arg_4] ",gcc,1
"mov ebx, [esp+4Ch+arg_8]  | * | add ebx, edx ",gcc,1
"sub ebx, [esp+4Ch+arg_4]  | * | sub edx, [esp+4Ch+this] ",gcc,1
"add ebx, edx  | * | sub edx, [esp+4Ch+arg_4] ",gcc,1
"sub edx, [esp+4Ch+this]  | * | mov eax, [edi-8] ",gcc,1
"sub edx, [esp+4Ch+arg_4]  | * | cmp ebx, eax ",gcc,1
"mov eax, [edi-8]  | * | ja short loc_41095A ",gcc,1
"cmp ebx, eax  | * | mov ecx, [edi-4] ",gcc,1
"ja short loc_41095A  | * | test ecx, ecx ",gcc,1
"mov ecx, [edi-4]  | * | jle short loc_4109D0 ",gcc,1
"test ecx, ecx  | * | loc_41095A:  ",gcc,1
"jle short loc_4109D0  | * | lea ecx, [esp+4Ch+var_1D] ",gcc,1
"loc_41095A:   | * | mov [esp+4Ch+var_44], ecx ",gcc,1
"lea ecx, [esp+4Ch+var_1D]  | * | mov [esp+4Ch+var_48], eax ",gcc,1
"mov [esp+4Ch+var_44], ecx  | * | mov [esp+4Ch+var_4C], ebx ",gcc,1
"mov [esp+4Ch+var_48], eax  | * | mov [esp+4Ch+var_34], edx ",gcc,1
"mov [esp+4Ch+var_4C], ebx  | * | call __ZNSs4_Rep9_S_createEjjRKSaIcE  ",gcc,1
"mov [esp+4Ch+var_34], edx  | * | mov esi, [esp+4Ch+this] ",gcc,1
"call __ZNSs4_Rep9_S_createEjjRKSaIcE   | * | test esi, esi ",gcc,1
"mov esi, [esp+4Ch+this]  | * | mov edx, [esp+4Ch+var_34] ",gcc,1
"test esi, esi  | * | jnz loc_410A40 ",gcc,1
"mov edx, [esp+4Ch+var_34]  | * | add eax, 0Ch ",gcc,1
"jnz loc_410A40  | * | mov [esp+4Ch+var_30], eax ",gcc,1
"add eax, 0Ch  | * | loc_410989:  ",gcc,1
"mov [esp+4Ch+var_30], eax  | * | test edx, edx ",gcc,1
loc_410989:   | * | jnz short loc_410A0C ,gcc,1
"test edx, edx  | * | loc_41098D:  ",gcc,1
"jnz short loc_410A0C  | * | mov esi, [ebp+0] ",gcc,1
"loc_41098D:   | * | mov edi, ds:__CRT_MT ",gcc,1
"mov esi, [ebp+0]  | * | test edi, edi ",gcc,1
"mov edi, ds:__CRT_MT  | * | jnz loc_410A60 ",gcc,1
"test edi, edi  | * | mov eax, [esi-4] ",gcc,1
"jnz loc_410A60  | * | lea edx, [eax-1] ",gcc,1
"lea edx, [eax-1]  | * | loc_4109A7:  ",gcc,1
"mov [esi-4], edx  | * | test eax, eax ",gcc,1
loc_4109A7:   | * | jle loc_410A78 ,gcc,1
"test eax, eax  | * | loc_4109AF:  ",gcc,1
"jle loc_410A78  | * | mov edi, [esp+4Ch+var_30] ",gcc,1
"loc_4109AF:   | * | mov [ebp+0], edi ",gcc,1
"mov edi, [esp+4Ch+var_30]  | * | loc_4109B6:  ",gcc,1
"mov [ebp+0], edi  | * | mov dword ptr [edi-4], 0 ",gcc,1
"loc_4109B6:   | * | mov [edi-0Ch], ebx ",gcc,1
"mov dword ptr [edi-4], 0  | * | mov byte ptr [edi+ebx], 0 ",gcc,1
"mov [edi-0Ch], ebx  | * | add esp, 3Ch ",gcc,1
"mov byte ptr [edi+ebx], 0  | * | pop ebx ",gcc,1
"add esp, 3Ch  | * | pop esi ",gcc,1
retn 0Ch  | * | loc_4109D0:  ,gcc,1
"align 10h  | * | test edx, edx ",gcc,1
loc_4109D0:   | * | jz short loc_4109B6 ,gcc,1
"test edx, edx  | * | mov ecx, [esp+4Ch+arg_8] ",gcc,1
"jz short loc_4109B6  | * | cmp [esp+4Ch+arg_4], ecx ",gcc,1
"mov ecx, [esp+4Ch+arg_8]  | * | jz short loc_4109B6 ",gcc,1
"cmp [esp+4Ch+arg_4], ecx  | * | mov esi, [esp+4Ch+arg_4] ",gcc,1
"jz short loc_4109B6  | * | add esi, [esp+4Ch+this] ",gcc,1
"mov esi, [esp+4Ch+arg_4]  | * | add esi, edi ",gcc,1
"add esi, [esp+4Ch+this]  | * | mov eax, [esp+4Ch+this] ",gcc,1
"add esi, edi  | * | add eax, ecx ",gcc,1
"mov eax, [esp+4Ch+this]  | * | add edi, eax ",gcc,1
"add eax, ecx  | * | cmp edx, 1 ",gcc,1
"add edi, eax  | * | jz short loc_410A34 ",gcc,1
"cmp edx, 1  | * | mov [esp+4Ch+var_44], edx  ",gcc,1
"jz short loc_410A34  | * | mov [esp+4Ch+var_48], esi  ",gcc,1
"mov [esp+4Ch+var_44], edx   | * | mov [esp+4Ch+var_4C], edi  ",gcc,1
"mov [esp+4Ch+var_48], esi   | * | call _memmove ",gcc,1
"mov [esp+4Ch+var_4C], edi   | * | mov edi, [ebp+0] ",gcc,1
call _memmove  | * | jmp short loc_4109B6 ,gcc,1
"mov edi, [ebp+0]  | * | align 4 ",gcc,1
jmp short loc_4109B6  | * | loc_410A0C:  ,gcc,1
"align 4  | * | mov esi, [esp+4Ch+arg_4] ",gcc,1
"loc_410A0C:   | * | add esi, [esp+4Ch+this] ",gcc,1
"mov esi, [esp+4Ch+arg_4]  | * | add esi, [ebp+0] ",gcc,1
"add esi, [esp+4Ch+this]  | * | mov eax, [esp+4Ch+arg_8] ",gcc,1
"add esi, [ebp+0]  | * | add eax, [esp+4Ch+this] ",gcc,1
"mov eax, [esp+4Ch+arg_8]  | * | add eax, [esp+4Ch+var_30] ",gcc,1
"add eax, [esp+4Ch+this]  | * | cmp edx, 1 ",gcc,1
"add eax, [esp+4Ch+var_30]  | * | jz short loc_410A88 ",gcc,1
"cmp edx, 1  | * | mov edi, eax ",gcc,1
"jz short loc_410A88  | * | mov ecx, edx ",gcc,1
"mov ecx, edx  | * | jmp loc_41098D ",gcc,1
jmp loc_41098D  | * | loc_410A34:  ,gcc,1
"loc_410A34:   | * | mov [edi], al ",gcc,1
"mov al, [esi]  | * | mov edi, [ebp+0] ",gcc,1
"mov [edi], al  | * | jmp loc_4109B6 ",gcc,1
"mov edi, [ebp+0]  | * | loc_410A40:  ",gcc,1
"jmp loc_4109B6  | * | mov esi, [ebp+0] ",gcc,1
"loc_410A40:   | * | cmp [esp+4Ch+this], 1 ",gcc,1
"mov esi, [ebp+0]  | * | jz short loc_410A94 ",gcc,1
"cmp [esp+4Ch+this], 1  | * | add eax, 0Ch ",gcc,1
"jz short loc_410A94  | * | mov [esp+4Ch+var_30], eax ",gcc,1
"add eax, 0Ch  | * | mov edi, eax ",gcc,1
"mov [esp+4Ch+var_30], eax  | * | mov ecx, [esp+4Ch+this] ",gcc,1
"mov ecx, [esp+4Ch+this]  | * | jmp loc_410989 ",gcc,1
rep movsb  | * | align 10h ,gcc,1
jmp loc_410989  | * | loc_410A60:  ,gcc,1
"align 10h  | * | mov [esp+4Ch+var_48], 0FFFFFFFFh  ",gcc,1
"loc_410A60:   | * | lea eax, [esi-4] ",gcc,1
"mov [esp+4Ch+var_48], 0FFFFFFFFh   | * | mov [esp+4Ch+var_4C], eax  ",gcc,1
"mov [esp+4Ch+var_4C], eax   | * | jmp loc_4109A7 ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | loc_410A78:  ,gcc,1
"jmp loc_4109A7  | * | sub esi, 0Ch ",gcc,1
"loc_410A78:   | * | mov [esp+4Ch+var_4C], esi  ",gcc,1
"mov [esp+4Ch+var_4C], esi   | * | jmp loc_4109AF ",gcc,1
call __ZdlPv   | * | loc_410A88:  ,gcc,1
"jmp loc_4109AF  | * | mov dl, [esi] ",gcc,1
"loc_410A88:   | * | mov [eax], dl ",gcc,1
"mov dl, [esi]  | * | jmp loc_41098D ",gcc,1
jmp loc_41098D  | * | loc_410A94:  ,gcc,1
"loc_410A94:   | * | mov [eax+0Ch], cl ",gcc,1
"mov cl, [esi]  | * | add eax, 0Ch ",gcc,1
"mov [eax+0Ch], cl  | * | mov [esp+4Ch+var_30], eax ",gcc,1
"add eax, 0Ch  | * | jmp loc_410989 ",gcc,1
"mov [esp+4Ch+var_30], eax  | * | __ZNSs9_M_mutateEjjj endp ",gcc,1
jmp loc_410989  | * | align 4 ,gcc,1
__ZNSs9_M_mutateEjjj endp  | * | public __ZNSs9push_backEc ,gcc,1
align 4  | * | __ZNSs9push_backEc proc near ,gcc,1
var_2C = dword ptr -2Ch  | * | this = dword ptr 4 ,data,1
"sub esp, 24h  | * | mov al, byte ptr [esp+2Ch+this] ",gcc,1
"mov esi, ecx  | * | mov [esp+2Ch+var_D], al ",gcc,1
"mov al, byte ptr [esp+2Ch+this]  | * | mov eax, [ecx] ",gcc,1
"mov [esp+2Ch+var_D], al  | * | mov edx, [eax-0Ch] ",gcc,1
"mov eax, [ecx]  | * | lea ebx, [edx+1] ",gcc,1
"mov edx, [eax-0Ch]  | * | cmp ebx, [eax-8] ",gcc,1
"lea ebx, [edx+1]  | * | ja short loc_410ACB ",gcc,1
"cmp ebx, [eax-8]  | * | mov ecx, [eax-4] ",gcc,1
"ja short loc_410ACB  | * | test ecx, ecx ",gcc,1
"mov ecx, [eax-4]  | * | jle short loc_410ADB ",gcc,1
"test ecx, ecx  | * | loc_410ACB:  ",gcc,1
"jle short loc_410ADB  | * | mov [esp+2Ch+var_2C], ebx  ",gcc,1
"loc_410ACB:   | * | mov ecx, esi ",gcc,1
"mov [esp+2Ch+var_2C], ebx   | * | call __ZNSs7reserveEj  ",gcc,1
"mov ecx, esi  | * | push eax ",gcc,1
"call __ZNSs7reserveEj   | * | mov eax, [esi] ",gcc,1
"push eax  | * | mov edx, [eax-0Ch] ",gcc,1
"mov eax, [esi]  | * | loc_410ADB:  ",gcc,1
"mov edx, [eax-0Ch]  | * | mov cl, [esp+2Ch+var_D] ",gcc,1
"loc_410ADB:   | * | mov [eax+edx], cl ",gcc,1
"mov cl, [esp+2Ch+var_D]  | * | mov eax, [esi] ",gcc,1
"mov [eax+edx], cl  | * | mov dword ptr [eax-4], 0 ",gcc,1
"mov eax, [esi]  | * | mov [eax-0Ch], ebx ",gcc,1
"mov dword ptr [eax-4], 0  | * | mov byte ptr [eax+ebx], 0 ",gcc,1
"mov [eax-0Ch], ebx  | * | add esp, 24h ",gcc,1
pop esi  | * | __ZNSs9push_backEc endp ,gcc,1
__ZNSs9push_backEc endp  | * | public __ZNSsC1EOSs ,gcc,1
align 4  | * | __ZNSsC1EOSs proc near ,gcc,1
var_68 = dword ptr -68h  | * | fctx = SjLj_Function_Context ptr -50h ,data,2
var_64 = dword ptr -64h  | * | var_D = byte ptr -0Dh ,data,2
fctx = SjLj_Function_Context ptr -50h  | * | arg_0 = dword ptr 4 ,data,2
"push esi  | * | sub esp, 60h ",gcc,2
"push ebx  | * | mov edi, ecx ",gcc,6
"sub esp, 60h  | * | mov ebx, [esp+6Ch+arg_0] ",gcc,2
"mov edi, ecx  | * | mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,2
"mov ebx, [esp+6Ch+arg_0]  | * | mov [esp+6Ch+fctx.lsda], offset dword_4123A0 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4123A0  | * | mov [esp+6Ch+lpfctx], esi  ",gcc,1
"mov [esp+6Ch+lpfctx], esi   | * | mov eax, [ebx] ",gcc,2
"call __Unwind_SjLj_Register  | * | mov [edi], eax ",gcc,2
"mov eax, [ebx]  | * | lea eax, [esp+6Ch+var_D] ",gcc,2
"mov [edi], eax  | * | mov [esp+6Ch+var_64], eax ",gcc,2
"mov [esp+6Ch+var_64], eax  | * | mov [esp+6Ch+lpfctx], 0 ",gcc,3
"mov [esp+6Ch+var_68], 0  | * | mov [esp+6Ch+fctx.call_site], 0 ",gcc,2
"mov [esp+6Ch+fctx.call_site], 0  | * | mov [ebx], eax ",gcc,2
"call __ZNSs12_S_constructEjcRKSaIcE   | * | mov [esp+6Ch+lpfctx], esi  ",gcc,2
"mov [ebx], eax  | * | call __Unwind_SjLj_Unregister ",gcc,2
"mov [esp+6Ch+lpfctx], esi   | * | add esp, 60h ",gcc,2
"add esp, 60h  | * | pop esi ",gcc,2
pop edi  | * | __ZNSsC1EOSs endp ,gcc,1
__ZNSsC1EOSs endp  | * | public __ZNSsC1EPKcRKSaIcE ,gcc,1
align 10h  | * | __ZNSsC1EPKcRKSaIcE proc near  ,gcc,1
var_18 = dword ptr -18h  | * | var_10 = byte ptr -10h ,data,14
var_10 = byte ptr -10h  | * | arg_4 = dword ptr 8 ,data,14
"sub esp, 14h  | * | mov edx, [esp+1Ch+arg_0] ",gcc,4
"mov ebx, ecx  | * | test edx, edx ",gcc,2
"mov edx, [esp+1Ch+arg_0]  | * | jz short loc_410BA4 ",gcc,1
"test edx, edx  | * | xor eax, eax ",gcc,2
"jz short loc_410BA4  | * | mov ecx, 0FFFFFFFFh ",gcc,1
"repne scasb  | * | lea ecx, [edx+ecx-1] ",gcc,2
not ecx  | * | loc_410B80:  ,gcc,1
"lea ecx, [edx+ecx-1]  | * | mov [esp+1Ch+var_10], 0 ",gcc,2
"loc_410B80:   | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
"mov [esp+1Ch+var_10], 0  | * | mov [esp+1Ch+var_14], eax ",gcc,8
"mov eax, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_18], ecx ",gcc,2
"mov [esp+1Ch+var_14], eax  | * | mov [esp+1Ch+var_1C], edx ",gcc,2
"mov [esp+1Ch+var_18], ecx  | * | call __ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag  ",gcc,2
"mov [esp+1Ch+var_1C], edx  | * | mov [ebx], eax ",gcc,2
"call __ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag   | * | add esp, 14h ",gcc,2
retn 8  | * | loc_410BA4:  ,gcc,1
"align 4  | * | mov ecx, 0FFFFFFFFh ",gcc,2
loc_410BA4:   | * | jmp short loc_410B80 ,gcc,1
"mov ecx, 0FFFFFFFFh  | * | __ZNSsC1EPKcRKSaIcE endp ",gcc,1
jmp short loc_410B80  | * | align 4 ,gcc,1
__ZNSsC1EPKcRKSaIcE endp  | * | public __ZNSsC1EPKcjRKSaIcE ,gcc,1
align 4  | * | __ZNSsC1EPKcjRKSaIcE proc near  ,gcc,1
"mov ebx, ecx  | * | mov [esp+1Ch+var_10], 0 ",gcc,4
"mov eax, [esp+1Ch+arg_0]  | * | mov edx, [esp+1Ch+arg_8] ",gcc,4
"mov [esp+1Ch+var_10], 0  | * | mov [esp+1Ch+var_14], edx ",gcc,4
"mov edx, [esp+1Ch+arg_8]  | * | mov edx, [esp+1Ch+arg_4] ",gcc,4
"mov [esp+1Ch+var_14], edx  | * | add edx, eax ",gcc,4
"mov edx, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_18], edx ",gcc,4
"add edx, eax  | * | mov [esp+1Ch+var_1C], eax ",gcc,4
"mov [esp+1Ch+var_18], edx  | * | call __ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag  ",gcc,4
"mov [esp+1Ch+var_1C], eax  | * | mov [ebx], eax ",gcc,12
"call __ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag   | * | add esp, 18h ",gcc,6
pop ebx  | * | __ZNSsC1EPKcjRKSaIcE endp ,gcc,1
__ZNSsC1EPKcjRKSaIcE endp  | * | public __ZNSsC1ERKSaIcE ,gcc,1
align 10h  | * | __ZNSsC1ERKSaIcE proc near ,gcc,1
"mov ebx, ecx  | * | mov [esp+1Ch+var_14], eax ",gcc,2
"mov eax, [esp+1Ch+arg_0]  | * | mov [esp+1Ch+var_18], 0 ",gcc,2
"mov [esp+1Ch+var_14], eax  | * | mov [esp+1Ch+var_1C], 0 ",gcc,2
"mov [esp+1Ch+var_18], 0  | * | call __ZNSs12_S_constructEjcRKSaIcE  ",gcc,2
"mov [esp+1Ch+var_1C], 0  | * | mov [ebx], eax ",gcc,2
"call __ZNSs12_S_constructEjcRKSaIcE   | * | add esp, 18h ",gcc,4
pop ebx  | * | __ZNSsC1ERKSaIcE endp ,gcc,1
__ZNSsC1ERKSaIcE endp  | * | public __ZNSsC1ERKSs ,gcc,1
align 4  | * | __ZNSsC1ERKSs proc near  ,gcc,1
var_38 = dword ptr -38h  | * | var_D = byte ptr -0Dh ,data,2
var_20 = dword ptr -20h  | * | this = dword ptr 4 ,data,2
"sub esp, 38h  | * | mov eax, [esp+3Ch+this] ",gcc,2
"mov ebx, ecx  | * | mov eax, [eax] ",gcc,2
"mov eax, [esp+3Ch+this]  | * | mov edx, [eax-4] ",gcc,2
"mov eax, [eax]  | * | test edx, edx ",gcc,2
"mov edx, [eax-4]  | * | js short loc_410C38 ",gcc,1
"test edx, edx  | * | mov ecx, ds:__CRT_MT ",gcc,2
"js short loc_410C38  | * | test ecx, ecx ",gcc,1
"mov ecx, ds:__CRT_MT  | * | jnz short loc_410C5C ",gcc,1
"test ecx, ecx  | * | inc edx ",gcc,2
"jnz short loc_410C5C  | * | mov [eax-4], edx ",gcc,1
"inc edx  | * | mov [ebx], eax ",gcc,2
"mov [eax-4], edx  | * | add esp, 38h ",gcc,2
"add esp, 38h  | * | retn 4 ",gcc,6
retn 4  | * | loc_410C38:  ,gcc,1
"align 4  | * | lea ecx, [eax-0Ch] ",gcc,2
"loc_410C38:   | * | mov [esp+3Ch+var_38], 0 ",gcc,1
"lea ecx, [eax-0Ch]  | * | lea eax, [esp+3Ch+var_D] ",gcc,2
"mov [esp+3Ch+var_38], 0  | * | mov [esp+3Ch+var_3C], eax ",gcc,2
"lea eax, [esp+3Ch+var_D]  | * | call __ZNSs4_Rep8_M_cloneERKSaIcEj  ",gcc,2
"mov [esp+3Ch+var_3C], eax  | * | sub esp, 8 ",gcc,2
"call __ZNSs4_Rep8_M_cloneERKSaIcEj   | * | mov [ebx], eax ",gcc,2
"sub esp, 8  | * | add esp, 38h ",gcc,2
retn 4  | * | loc_410C5C:  ,gcc,1
"align 4  | * | mov [esp+3Ch+var_38], 1  ",gcc,2
"loc_410C5C:   | * | lea edx, [eax-4] ",gcc,1
"mov [esp+3Ch+var_38], 1   | * | mov [esp+3Ch+var_3C], edx  ",gcc,2
"lea edx, [eax-4]  | * | mov [esp+3Ch+var_20], eax ",gcc,2
"mov [esp+3Ch+var_3C], edx   | * | call __ZN9__gnu_cxx12__atomic_addEPVii  ",gcc,2
"mov [esp+3Ch+var_20], eax  | * | mov eax, [esp+3Ch+var_20] ",gcc,2
"call __ZN9__gnu_cxx12__atomic_addEPVii   | * | mov [ebx], eax ",gcc,2
"mov eax, [esp+3Ch+var_20]  | * | add esp, 38h ",gcc,2
pop ebx  | * | __ZNSsC1ERKSs endp ,gcc,1
retn 4  | * | public __ZNSsC1ERKSsjj ,gcc,1
__ZNSsC1ERKSs endp  | * | __ZNSsC1ERKSsjj proc near  ,gcc,1
var_24 = dword ptr -24h  | * | var_D = byte ptr -0Dh ,data,2
var_20 = byte ptr -20h  | * | this = dword ptr 4 ,data,2
"sub esp, 20h  | * | mov eax, [esp+2Ch+arg_4] ",gcc,2
"mov edi, ecx  | * | mov edx, [esp+2Ch+this] ",gcc,2
"mov eax, [esp+2Ch+arg_4]  | * | mov edx, [edx] ",gcc,2
"mov edx, [esp+2Ch+this]  | * | mov esi, [edx-0Ch] ",gcc,2
"mov edx, [edx]  | * | mov ebx, esi ",gcc,4
"mov esi, [edx-0Ch]  | * | sub ebx, eax ",gcc,4
"mov ebx, esi  | * | cmp ebx, [esp+2Ch+arg_8] ",gcc,2
"sub ebx, eax  | * | jbe short loc_410CA3 ",gcc,1
"cmp ebx, [esp+2Ch+arg_8]  | * | mov ebx, [esp+2Ch+arg_8] ",gcc,2
jbe short loc_410CA3  | * | loc_410CA3:  ,gcc,1
"mov ebx, [esp+2Ch+arg_8]  | * | add ebx, eax ",gcc,2
"loc_410CA3:   | * | add ebx, edx ",gcc,1
"add ebx, eax  | * | cmp eax, esi ",gcc,4
"add ebx, edx  | * | ja short loc_410CD1 ",gcc,1
"cmp eax, esi  | * | mov [esp+2Ch+var_20], 0 ",gcc,2
"ja short loc_410CD1  | * | lea ecx, [esp+2Ch+var_D] ",gcc,1
"mov [esp+2Ch+var_20], 0  | * | mov [esp+2Ch+var_24], ecx ",gcc,2
"lea ecx, [esp+2Ch+var_D]  | * | mov [esp+2Ch+var_28], ebx ",gcc,2
"mov [esp+2Ch+var_24], ecx  | * | add eax, edx ",gcc,2
"mov [esp+2Ch+var_28], ebx  | * | mov [esp+2Ch+var_2C], eax ",gcc,2
"add eax, edx  | * | call __ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag  ",gcc,4
"mov [esp+2Ch+var_2C], eax  | * | mov [edi], eax ",gcc,2
"call __ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag   | * | add esp, 20h ",gcc,2
"mov [edi], eax  | * | pop ebx ",gcc,4
pop edi  | * | loc_410CD1:  ,gcc,1
"retn 0Ch  | * | mov [esp+2Ch+var_2C], offset aBasicStringBas  ",gcc,2
loc_410CD1:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+2Ch+var_2C], offset aBasicStringBas   | * | __ZNSsC1ERKSsjj endp ",gcc,1
__ZNSsC1ERKSsjj endp  | * | public __ZNSsC1ERKSsjjRKSaIcE ,gcc,1
align 10h  | * | __ZNSsC1ERKSsjjRKSaIcE proc near ,gcc,1
"mov edi, ecx  | * | mov edx, [esp+1Ch+arg_0] ",gcc,2
"mov eax, [esp+1Ch+arg_4]  | * | mov edx, [edx] ",gcc,2
"mov edx, [esp+1Ch+arg_0]  | * | mov esi, [edx-0Ch] ",gcc,2
"mov ebx, esi  | * | cmp ebx, [esp+1Ch+arg_8] ",gcc,2
"sub ebx, eax  | * | jbe short loc_410D03 ",gcc,1
"cmp ebx, [esp+1Ch+arg_8]  | * | mov ebx, [esp+1Ch+arg_8] ",gcc,2
jbe short loc_410D03  | * | loc_410D03:  ,gcc,1
"mov ebx, [esp+1Ch+arg_8]  | * | add ebx, eax ",gcc,2
"loc_410D03:   | * | add ebx, edx ",gcc,1
"add ebx, edx  | * | ja short loc_410D31 ",gcc,1
"cmp eax, esi  | * | mov [esp+1Ch+var_10], 0 ",gcc,2
"ja short loc_410D31  | * | mov ecx, [esp+1Ch+arg_C] ",gcc,1
"mov [esp+1Ch+var_10], 0  | * | mov [esp+1Ch+var_14], ecx ",gcc,2
"mov ecx, [esp+1Ch+arg_C]  | * | mov [esp+1Ch+var_18], ebx ",gcc,2
"mov [esp+1Ch+var_14], ecx  | * | add eax, edx ",gcc,2
"mov [esp+1Ch+var_18], ebx  | * | mov [esp+1Ch+var_1C], eax ",gcc,2
"mov [esp+1Ch+var_1C], eax  | * | mov [edi], eax ",gcc,2
"call __ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag   | * | add esp, 10h ",gcc,2
pop esi  | * | retn 10h ,gcc,2
pop edi  | * | loc_410D31:  ,gcc,1
"retn 10h  | * | mov [esp+1Ch+var_1C], offset aBasicStringBas  ",gcc,2
loc_410D31:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringBas   | * | __ZNSsC1ERKSsjjRKSaIcE endp ",gcc,1
__ZNSsC1ERKSsjjRKSaIcE endp  | * | public __ZNSsC1ESt16initializer_listIcERKSaIcE ,gcc,1
align 10h  | * | __ZNSsC1ESt16initializer_listIcERKSaIcE proc near ,gcc,1
pop ebx  | * | __ZNSsC1ESt16initializer_listIcERKSaIcE endp ,gcc,1
__ZNSsC1ESt16initializer_listIcERKSaIcE endp  | * | public __ZNSsC1EjcRKSaIcE ,gcc,1
align 4  | * | __ZNSsC1EjcRKSaIcE proc near ,gcc,1
"sub esp, 18h  | * | movsx eax, [esp+1Ch+arg_4] ",gcc,2
"mov ebx, ecx  | * | mov edx, [esp+1Ch+arg_8] ",gcc,2
"movsx eax, [esp+1Ch+arg_4]  | * | mov [esp+1Ch+var_14], edx ",gcc,2
"mov edx, [esp+1Ch+arg_8]  | * | mov [esp+1Ch+var_18], eax ",gcc,2
"mov [esp+1Ch+var_14], edx  | * | mov eax, [esp+1Ch+arg_0] ",gcc,2
"mov [esp+1Ch+var_18], eax  | * | mov [esp+1Ch+var_1C], eax ",gcc,8
"mov eax, [esp+1Ch+arg_0]  | * | call __ZNSs12_S_constructEjcRKSaIcE  ",gcc,2
pop ebx  | * | __ZNSsC1EjcRKSaIcE endp ,gcc,1
retn 0Ch  | * | public __ZNSsC1Ev ,gcc,1
__ZNSsC1EjcRKSaIcE endp  | * | __ZNSsC1Ev proc near ,gcc,1
var_28 = dword ptr -28h  | * | var_D = byte ptr -0Dh ,data,2
"sub esp, 28h  | * | lea eax, [esp+2Ch+var_D] ",gcc,2
"mov ebx, ecx  | * | mov [esp+2Ch+var_24], eax ",gcc,2
"lea eax, [esp+2Ch+var_D]  | * | mov [esp+2Ch+var_28], 0 ",gcc,2
"mov [esp+2Ch+var_24], eax  | * | mov [esp+2Ch+var_2C], 0 ",gcc,2
"mov [esp+2Ch+var_28], 0  | * | call __ZNSs12_S_constructEjcRKSaIcE  ",gcc,2
"mov [esp+2Ch+var_2C], 0  | * | mov [ebx], eax ",gcc,2
"call __ZNSs12_S_constructEjcRKSaIcE   | * | add esp, 28h ",gcc,2
pop ebx  | * | __ZNSsC1Ev endp ,gcc,1
__ZNSsC1Ev endp  | * | public __ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE ,gcc,1
align 4  | * | __ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE proc near ,gcc,1
"sub esp, 18h  | * | mov [esp+1Ch+var_10], 0 ",gcc,6
"mov ebx, ecx  | * | mov eax, [esp+1Ch+arg_8] ",gcc,6
"mov eax, [esp+1Ch+arg_8]  | * | mov eax, [esp+1Ch+arg_4] ",gcc,6
"mov [esp+1Ch+var_14], eax  | * | mov [esp+1Ch+var_18], eax ",gcc,6
"mov eax, [esp+1Ch+arg_4]  | * | mov eax, [esp+1Ch+arg_0] ",gcc,7
"mov eax, [esp+1Ch+arg_0]  | * | call __ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag  ",gcc,2
"call __ZNSs12_S_constructIN9__gnu_cxx17__normal_iteratorIPcSsEEEES2_T_S4_RKSaIcESt20forward_iterator_tag   | * | add esp, 18h ",gcc,2
pop ebx  | * | __ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE endp ,gcc,1
retn 0Ch  | * | public __ZNSsC1IPKcEET_S2_RKSaIcE ,gcc,1
__ZNSsC1IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE endp  | * | __ZNSsC1IPKcEET_S2_RKSaIcE proc near ,gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | call __ZNSs12_S_constructIPKcEEPcT_S3_RKSaIcESt20forward_iterator_tag  ",gcc,2
pop ebx  | * | __ZNSsC1IPKcEET_S2_RKSaIcE endp ,gcc,1
retn 0Ch  | * | public __ZNSsC1IPcEET_S1_RKSaIcE ,gcc,1
__ZNSsC1IPKcEET_S2_RKSaIcE endp  | * | __ZNSsC1IPcEET_S1_RKSaIcE proc near ,gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | call __ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag  ",gcc,2
"call __ZNSs12_S_constructIPcEES0_T_S1_RKSaIcESt20forward_iterator_tag   | * | add esp, 18h ",gcc,2
pop ebx  | * | __ZNSsC1IPcEET_S1_RKSaIcE endp ,gcc,1
retn 0Ch  | * | public __ZNSsC2EOSs ,gcc,1
__ZNSsC1IPcEET_S1_RKSaIcE endp  | * | __ZNSsC2EOSs proc near ,gcc,1
"mov ebx, [esp+6Ch+arg_0]  | * | mov [esp+6Ch+fctx.lsda], offset dword_4123A4 ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4123A4  | * | mov [esp+6Ch+lpfctx], esi  ",gcc,1
pop edi  | * | __ZNSsC2EOSs endp ,gcc,1
__ZNSsC2EOSs endp  | * | public __ZNSsC2EPKcRKSaIcE ,gcc,1
align 10h  | * | __ZNSsC2EPKcRKSaIcE proc near ,gcc,1
"mov edx, [esp+1Ch+arg_0]  | * | jz short loc_410F04 ",gcc,1
"jz short loc_410F04  | * | mov ecx, 0FFFFFFFFh ",gcc,1
not ecx  | * | loc_410EE0:  ,gcc,1
"loc_410EE0:   | * | mov eax, [esp+1Ch+arg_4] ",gcc,1
retn 8  | * | loc_410F04:  ,gcc,1
loc_410F04:   | * | jmp short loc_410EE0 ,gcc,1
"mov ecx, 0FFFFFFFFh  | * | __ZNSsC2EPKcRKSaIcE endp ",gcc,1
jmp short loc_410EE0  | * | align 4 ,gcc,1
__ZNSsC2EPKcRKSaIcE endp  | * | public __ZNSsC2EPKcjRKSaIcE ,gcc,1
align 4  | * | __ZNSsC2EPKcjRKSaIcE proc near ,gcc,1
pop ebx  | * | __ZNSsC2EPKcjRKSaIcE endp ,gcc,1
__ZNSsC2EPKcjRKSaIcE endp  | * | public __ZNSsC2ERKSaIcE ,gcc,1
align 10h  | * | __ZNSsC2ERKSaIcE proc near ,gcc,1
pop ebx  | * | __ZNSsC2ERKSaIcE endp ,gcc,1
__ZNSsC2ERKSaIcE endp  | * | public __ZNSsC2ERKSs ,gcc,1
align 4  | * | __ZNSsC2ERKSs proc near ,gcc,1
"mov edx, [eax-4]  | * | js short loc_410F98 ",gcc,1
"js short loc_410F98  | * | test ecx, ecx ",gcc,1
"mov ecx, ds:__CRT_MT  | * | jnz short loc_410FBC ",gcc,1
"jnz short loc_410FBC  | * | mov [eax-4], edx ",gcc,1
retn 4  | * | loc_410F98:  ,gcc,1
"loc_410F98:   | * | mov [esp+3Ch+var_38], 0 ",gcc,1
retn 4  | * | loc_410FBC:  ,gcc,1
"loc_410FBC:   | * | lea edx, [eax-4] ",gcc,1
pop ebx  | * | __ZNSsC2ERKSs endp ,gcc,1
retn 4  | * | public __ZNSsC2ERKSsjj ,gcc,1
__ZNSsC2ERKSs endp  | * | __ZNSsC2ERKSsjj proc near ,gcc,1
"sub ebx, eax  | * | jbe short loc_411003 ",gcc,1
jbe short loc_411003  | * | loc_411003:  ,gcc,1
"loc_411003:   | * | add ebx, edx ",gcc,1
"add ebx, edx  | * | ja short loc_411031 ",gcc,1
"ja short loc_411031  | * | lea ecx, [esp+2Ch+var_D] ",gcc,1
pop edi  | * | loc_411031:  ,gcc,1
loc_411031:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+2Ch+var_2C], offset aBasicStringBas   | * | __ZNSsC2ERKSsjj endp ",gcc,1
__ZNSsC2ERKSsjj endp  | * | public __ZNSsC2ERKSsjjRKSaIcE ,gcc,1
align 10h  | * | __ZNSsC2ERKSsjjRKSaIcE proc near ,gcc,1
"sub ebx, eax  | * | jbe short loc_411063 ",gcc,1
jbe short loc_411063  | * | loc_411063:  ,gcc,1
"loc_411063:   | * | add ebx, edx ",gcc,1
"add ebx, edx  | * | ja short loc_411091 ",gcc,1
"ja short loc_411091  | * | mov ecx, [esp+1Ch+arg_C] ",gcc,1
pop edi  | * | loc_411091:  ,gcc,1
loc_411091:   | * | call __ZSt20__throw_out_of_rangePKc  ,gcc,1
"mov [esp+1Ch+var_1C], offset aBasicStringBas   | * | __ZNSsC2ERKSsjjRKSaIcE endp ",gcc,1
__ZNSsC2ERKSsjjRKSaIcE endp  | * | public __ZNSsC2ESt16initializer_listIcERKSaIcE ,gcc,1
align 10h  | * | __ZNSsC2ESt16initializer_listIcERKSaIcE proc near ,gcc,1
pop ebx  | * | __ZNSsC2ESt16initializer_listIcERKSaIcE endp ,gcc,1
__ZNSsC2ESt16initializer_listIcERKSaIcE endp  | * | public __ZNSsC2EjcRKSaIcE ,gcc,1
align 4  | * | __ZNSsC2EjcRKSaIcE proc near ,gcc,1
pop ebx  | * | __ZNSsC2EjcRKSaIcE endp ,gcc,1
retn 0Ch  | * | public __ZNSsC2Ev ,gcc,1
__ZNSsC2EjcRKSaIcE endp  | * | __ZNSsC2Ev proc near ,gcc,1
pop ebx  | * | __ZNSsC2Ev endp ,gcc,1
__ZNSsC2Ev endp  | * | public __ZNSsC2IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE ,gcc,1
align 4  | * | __ZNSsC2IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE proc near ,gcc,1
pop ebx  | * | __ZNSsC2IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE endp ,gcc,1
retn 0Ch  | * | public __ZNSsC2IPKcEET_S2_RKSaIcE ,gcc,1
__ZNSsC2IN9__gnu_cxx17__normal_iteratorIPcSsEEEET_S4_RKSaIcE endp  | * | __ZNSsC2IPKcEET_S2_RKSaIcE proc near ,gcc,1
pop ebx  | * | __ZNSsC2IPKcEET_S2_RKSaIcE endp ,gcc,1
retn 0Ch  | * | public __ZNSsC2IPcEET_S1_RKSaIcE ,gcc,1
__ZNSsC2IPKcEET_S2_RKSaIcE endp  | * | __ZNSsC2IPcEET_S1_RKSaIcE proc near ,gcc,1
pop ebx  | * | __ZNSsC2IPcEET_S1_RKSaIcE endp ,gcc,1
retn 0Ch  | * | public __ZNSsD1Ev ,gcc,1
__ZNSsC2IPcEET_S1_RKSaIcE endp  | * | __ZNSsD1Ev proc near  ,gcc,1
"push ebx  | * | mov ebx, [ecx] ",gcc,2
"sub esp, 18h  | * | mov edx, ds:__CRT_MT ",gcc,1
"mov ebx, [ecx]  | * | test edx, edx ",gcc,1
"mov edx, ds:__CRT_MT  | * | jnz short loc_4111E0 ",gcc,1
"jnz short loc_4111E0  | * | lea edx, [eax-1] ",gcc,1
"mov [ebx-4], edx  | * | jle short loc_4111F7 ",gcc,1
"test eax, eax  | * | loc_4111D9:  ",gcc,1
"jle short loc_4111F7  | * | add esp, 18h ",gcc,1
loc_4111D9:   | * | pop ebx ,gcc,1
retn  | * | loc_4111E0:  ,gcc,1
"align 10h  | * | mov [esp+1Ch+var_18], 0FFFFFFFFh  ",gcc,1
"loc_4111E0:   | * | lea eax, [ebx-4] ",gcc,1
"mov [esp+1Ch+var_18], 0FFFFFFFFh   | * | mov [esp+1Ch+var_1C], eax  ",gcc,2
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | jg short loc_4111D9 ,gcc,1
"test eax, eax  | * | loc_4111F7:  ",gcc,1
"jg short loc_4111D9  | * | sub ebx, 0Ch ",gcc,1
"loc_4111F7:   | * | mov [esp+1Ch+var_1C], ebx  ",gcc,1
"sub ebx, 0Ch  | * | call __ZdlPv  ",gcc,2
pop ebx  | * | __ZNSsD1Ev endp ,gcc,1
__ZNSsD1Ev endp  | * | public __ZNSsD2Ev ,gcc,1
align 4  | * | __ZNSsD2Ev proc near ,gcc,1
"sub esp, 18h  | * | mov eax, ds:__CRT_MT ",gcc,1
"mov ebx, [ecx]  | * | test eax, eax ",gcc,1
"mov eax, ds:__CRT_MT  | * | jnz short loc_41122C ",gcc,1
"test eax, eax  | * | mov eax, [ebx-4] ",gcc,1
"jnz short loc_41122C  | * | lea edx, [eax-1] ",gcc,1
"mov [ebx-4], edx  | * | jle short loc_411243 ",gcc,1
"test eax, eax  | * | loc_411224:  ",gcc,1
"jle short loc_411243  | * | add esp, 18h ",gcc,1
loc_411224:   | * | pop ebx ,gcc,1
retn  | * | loc_41122C:  ,gcc,1
"align 4  | * | mov [esp+1Ch+var_18], 0FFFFFFFFh  ",gcc,1
"loc_41122C:   | * | lea eax, [ebx-4] ",gcc,1
call __ZN9__gnu_cxx18__exchange_and_addEPVii   | * | jg short loc_411224 ,gcc,1
"test eax, eax  | * | loc_411243:  ",gcc,1
"jg short loc_411224  | * | sub ebx, 0Ch ",gcc,1
"loc_411243:   | * | mov [esp+1Ch+var_1C], ebx  ",gcc,1
pop ebx  | * | __ZNSsD2Ev endp ,gcc,1
__ZNSsD2Ev endp  | * | public __ZNSsaSEOSs ,gcc,1
align 4  | * | __ZNSsaSEOSs proc near ,gcc,1
__ZNSsaSEOSs proc near  | * | push ebx ,gcc,1
"mov edx, [ecx-4]  | * | js short loc_41127C ",gcc,1
"test edx, edx  | * | loc_411264:  ",gcc,1
"js short loc_41127C  | * | mov edx, [ebx] ",gcc,1
"loc_411264:   | * | cmp dword ptr [edx-4], 0 ",gcc,1
"mov edx, [ebx]  | * | jns short loc_411273 ",gcc,1
jns short loc_411273  | * | loc_411273:  ,gcc,1
"loc_411273:   | * | mov [ebx], ecx ",gcc,1
retn 4  | * | loc_41127C:  ,gcc,1
loc_41127C:   | * | jmp short loc_411264 ,gcc,1
"mov dword ptr [ecx-4], 0  | * | __ZNSsaSEOSs endp ",gcc,1
jmp short loc_411264  | * | align 4 ,gcc,1
__ZNSsaSEOSs endp  | * | public __ZNSsaSEPKc ,gcc,1
align 4  | * | __ZNSsaSEPKc proc near ,gcc,1
"mov edx, [esp+1Ch+arg_0]  | * | xor eax, eax ",gcc,2
pop edi  | * | __ZNSsaSEPKc endp ,gcc,1
retn 4  | * | public __ZNSsaSERKSs ,gcc,1
__ZNSsaSEPKc endp  | * | __ZNSsaSERKSs proc near ,gcc,1
public __ZNSsaSERKSs  | * | jmp __ZNSs6assignERKSs  ,gcc,1
__ZNSsaSERKSs proc near  | * | __ZNSsaSERKSs endp ,gcc,1
jmp __ZNSs6assignERKSs   | * | align 4 ,gcc,1
__ZNSsaSERKSs endp  | * | public __ZNSsaSESt16initializer_listIcE ,gcc,1
align 4  | * | __ZNSsaSESt16initializer_listIcE proc near ,gcc,1
"mov ebx, ecx  | * | mov [esp+1Ch+var_18], eax  ",gcc,1
"mov eax, [esp+1Ch+arg_0]  | * | call __ZNSs6assignEPKcj  ",gcc,1
"call __ZNSs6assignEPKcj   | * | mov eax, ebx ",gcc,1
"sub esp, 8  | * | add esp, 18h ",gcc,1
pop ebx  | * | __ZNSsaSESt16initializer_listIcE endp ,gcc,1
__ZNSsaSESt16initializer_listIcE endp  | * | public __ZNSsaSEc ,gcc,1
align 4  | * | __ZNSsaSEc proc near ,gcc,1
var_14 = dword ptr -14h  | * | arg_0 = byte ptr 4 ,data,2
"sub esp, 18h  | * | movsx eax, [esp+1Ch+arg_0] ",gcc,1
"mov ebx, ecx  | * | mov [esp+1Ch+var_10], eax  ",gcc,1
"movsx eax, [esp+1Ch+arg_0]  | * | mov [esp+1Ch+var_14], 1  ",gcc,1
"mov [esp+1Ch+var_10], eax   | * | mov eax, [ecx] ",gcc,1
"mov [esp+1Ch+var_14], 1   | * | mov eax, [eax-0Ch] ",gcc,1
"call __ZNSs14_M_replace_auxEjjjc   | * | mov eax, ebx ",gcc,1
pop ebx  | * | __ZNSsaSEc endp ,gcc,1
retn 4  | * | public __ZNSsixEj ,gcc,1
__ZNSsaSEc endp  | * | __ZNSsixEj proc near ,gcc,1
__ZNSsixEj proc near  | * | push ebx ,gcc,1
"mov edx, [eax-4]  | * | js short loc_41133A ",gcc,1
"js short loc_41133A  | * | mov eax, [ebx] ",gcc,1
call __ZNSs12_M_leak_hardEv   | * | loc_41133A:  ,gcc,1
"mov eax, [ebx]  | * | add eax, [esp+0Ch+arg_0] ",gcc,1
"loc_41133A:   | * | add esp, 8 ",gcc,1
"add eax, [esp+0Ch+arg_0]  | * | pop ebx ",gcc,1
"add esp, 8  | * | retn 4 ",gcc,1
pop ebx  | * | __ZNSsixEj endp ,gcc,1
__ZNSsixEj endp  | * | public __ZNSspLEPKc ,gcc,1
align 4  | * | __ZNSspLEPKc proc near ,gcc,1
pop edi  | * | __ZNSspLEPKc endp ,gcc,1
retn 4  | * | public __ZNSspLERKSs ,gcc,1
__ZNSspLEPKc endp  | * | __ZNSspLERKSs proc near ,gcc,1
public __ZNSspLERKSs  | * | jmp __ZNSs6appendERKSs  ,gcc,1
__ZNSspLERKSs proc near  | * | __ZNSspLERKSs endp ,gcc,1
jmp __ZNSs6appendERKSs   | * | align 4 ,gcc,1
__ZNSspLERKSs endp  | * | public __ZNSspLESt16initializer_listIcE ,gcc,1
align 4  | * | __ZNSspLESt16initializer_listIcE proc near ,gcc,1
public __ZNSspLESt16initializer_listIcE  | * | jmp __ZNSs6appendEPKcj  ,gcc,1
__ZNSspLESt16initializer_listIcE proc near  | * | __ZNSspLESt16initializer_listIcE endp ,gcc,1
__ZNSspLESt16initializer_listIcE endp  | * | public __ZNSspLEc ,gcc,1
align 4  | * | __ZNSspLEc proc near ,gcc,1
"sub esp, 24h  | * | mov dl, [esp+2Ch+arg_0] ",gcc,1
"mov eax, ecx  | * | mov [esp+2Ch+var_D], dl ",gcc,1
"mov dl, [esp+2Ch+arg_0]  | * | mov edx, [ecx] ",gcc,1
"mov [esp+2Ch+var_D], dl  | * | mov esi, [edx-0Ch] ",gcc,1
"mov edx, [ecx]  | * | lea ebx, [esi+1] ",gcc,1
"mov esi, [edx-0Ch]  | * | cmp ebx, [edx-8] ",gcc,1
"lea ebx, [esi+1]  | * | ja short loc_4113AF ",gcc,1
"cmp ebx, [edx-8]  | * | mov ecx, [edx-4] ",gcc,1
"ja short loc_4113AF  | * | test ecx, ecx ",gcc,1
"mov ecx, [edx-4]  | * | jle short loc_4113C7 ",gcc,1
"test ecx, ecx  | * | loc_4113AF:  ",gcc,1
"jle short loc_4113C7  | * | mov [esp+2Ch+var_2C], ebx  ",gcc,1
"loc_4113AF:   | * | mov ecx, eax ",gcc,1
"mov [esp+2Ch+var_2C], ebx   | * | mov [esp+2Ch+var_14], eax ",gcc,1
"mov [esp+2Ch+var_14], eax  | * | push edx ",gcc,1
"call __ZNSs7reserveEj   | * | mov eax, [esp+2Ch+var_14] ",gcc,1
"push edx  | * | mov edx, [eax] ",gcc,1
"mov eax, [esp+2Ch+var_14]  | * | mov esi, [edx-0Ch] ",gcc,1
"mov edx, [eax]  | * | loc_4113C7:  ",gcc,1
"mov esi, [edx-0Ch]  | * | mov cl, [esp+2Ch+var_D] ",gcc,1
"loc_4113C7:   | * | mov [edx+esi], cl ",gcc,1
"mov cl, [esp+2Ch+var_D]  | * | mov edx, [eax] ",gcc,1
"mov [edx+esi], cl  | * | mov dword ptr [edx-4], 0 ",gcc,1
"mov [edx-0Ch], ebx  | * | add esp, 24h ",gcc,1
pop esi  | * | __ZNSspLEc endp ,gcc,1
__ZNSspLEc endp  | * | public __ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE ,gcc,1
align 4  | * | __ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE proc near ,gcc,1
"mov [ebp+var_4], ecx  | * | mov edx, [ebp+arg_0] ",gcc,4
"mov eax, [ebp+var_4]  | * | mov [eax], edx ",gcc,2
"mov edx, [ebp+arg_0]  | * | leave ",gcc,2
"mov [eax], edx  | * | retn 4 ",gcc,3
leave  | * | __ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE endp ,gcc,1
__ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE endp  | * | public __ZNSt17_Rb_tree_iteratorIiEmmEv ,gcc,1
align 10h  | * | __ZNSt17_Rb_tree_iteratorIiEmmEv proc near ,gcc,1
__ZNSt17_Rb_tree_iteratorIiEmmEv proc near  | * | push ebp ,gcc,1
"mov [ebp+var_C], ecx  | * | mov eax, [eax] ",gcc,1
"mov eax, [ebp+var_C]  | * | mov [esp], eax ",gcc,2
"mov eax, [eax]  | * | call __ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base  ",gcc,1
"mov [esp], eax  | * | mov edx, [ebp+var_C] ",gcc,1
"call __ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base   | * | mov [edx], eax ",gcc,1
"mov edx, [ebp+var_C]  | * | mov eax, [ebp+var_C] ",gcc,1
"mov [edx], eax  | * | leave ",gcc,1
leave  | * | __ZNSt17_Rb_tree_iteratorIiEmmEv endp ,gcc,1
retn  | * | public __ZNSt23_Rb_tree_const_iteratorIiEC1EPKSt13_Rb_tree_nodeIiE ,gcc,1
__ZNSt17_Rb_tree_iteratorIiEmmEv endp  | * | __ZNSt23_Rb_tree_const_iteratorIiEC1EPKSt13_Rb_tree_nodeIiE proc near ,gcc,1
leave  | * | __ZNSt23_Rb_tree_const_iteratorIiEC1EPKSt13_Rb_tree_nodeIiE endp ,gcc,1
__ZNSt23_Rb_tree_const_iteratorIiEC1EPKSt13_Rb_tree_nodeIiE endp  | * | public __ZNSt23_Rb_tree_const_iteratorIiEC1ERKSt17_Rb_tree_iteratorIiE ,gcc,1
align 4  | * | __ZNSt23_Rb_tree_const_iteratorIiEC1ERKSt17_Rb_tree_iteratorIiE proc near ,gcc,1
"mov eax, [ebp+arg_0]  | * | mov eax, [ebp+var_4] ",gcc,1
"mov edx, [eax]  | * | mov [eax], edx ",gcc,1
"mov eax, [ebp+var_4]  | * | leave ",gcc,6
leave  | * | __ZNSt23_Rb_tree_const_iteratorIiEC1ERKSt17_Rb_tree_iteratorIiE endp ,gcc,1
__ZNSt23_Rb_tree_const_iteratorIiEC1ERKSt17_Rb_tree_iteratorIiE endp  | * | public __ZNSt3setIiSt4lessIiESaIiEE4findERKi ,gcc,1
align 10h  | * | __ZNSt3setIiSt4lessIiESaIiEE4findERKi proc near ,gcc,1
var_1C = dword ptr -1Ch  | * | var_C = dword ptr -0Ch ,data,2
var_10 = dword ptr -10h  | * | arg_0 = dword ptr 8 ,data,2
"mov [ebp+var_1C], ecx  | * | mov edx, [ebp+arg_0] ",gcc,1
"mov eax, [ebp+var_1C]  | * | mov [esp], edx ",gcc,2
"mov edx, [ebp+arg_0]  | * | mov ecx, eax ",gcc,7
"mov [esp], edx  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi   | * | mov [ebp+var_C], eax ",gcc,1
"sub esp, 4  | * | lea eax, [ebp+var_10] ",gcc,1
"mov [ebp+var_C], eax  | * | lea edx, [ebp+var_C] ",gcc,1
"lea eax, [ebp+var_10]  | * | mov [esp], edx ",gcc,1
"lea edx, [ebp+var_C]  | * | mov ecx, eax ",gcc,1
"mov [esp], edx  | * | call __ZNSt23_Rb_tree_const_iteratorIiEC1ERKSt17_Rb_tree_iteratorIiE  ",gcc,2
"call __ZNSt23_Rb_tree_const_iteratorIiEC1ERKSt17_Rb_tree_iteratorIiE   | * | mov eax, [ebp+var_10] ",gcc,1
"mov eax, [ebp+var_10]  | * | retn 4 ",gcc,1
leave  | * | __ZNSt3setIiSt4lessIiESaIiEE4findERKi endp ,gcc,1
__ZNSt3setIiSt4lessIiESaIiEE4findERKi endp  | * | public __ZNSt3setIiSt4lessIiESaIiEE6insertERKi ,gcc,1
align 4  | * | __ZNSt3setIiSt4lessIiESaIiEE6insertERKi proc near ,gcc,1
var_78 = dword ptr -78h  | * | fctx = SjLj_Function_Context ptr -70h ,data,1
var_74 = dword ptr -74h  | * | var_3C = dword ptr -3Ch ,data,1
fctx = SjLj_Function_Context ptr -70h  | * | var_2C = dword ptr -2Ch ,data,1
var_1C = byte ptr -1Ch  | * | arg_0 = dword ptr 8 ,data,1
"push esi  | * | sub esp, 7Ch ",gcc,2
"push ebx  | * | mov [ebp+var_3C], ecx ",gcc,1
"sub esp, 7Ch  | * | mov [ebp+fctx.personality], offset ___gxx_personality_sj0 ",gcc,2
"mov [ebp+var_3C], ecx  | * | mov [ebp+fctx.lsda], offset dword_412234 ",gcc,1
"mov [ebp+fctx.lsda], offset dword_412234  | * | lea edx, [ebp+var_18] ",gcc,1
"lea edx, [ebp+var_18]  | * | mov edx, offset loc_411522 ",gcc,1
"mov edx, offset loc_411522  | * | mov [eax+8], esp ",gcc,1
"mov [esp], eax   | * | mov eax, [ebp+var_3C] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov edx, [ebp+arg_0] ",gcc,1
"mov eax, [ebp+var_3C]  | * | mov [esp], edx ",gcc,1
"mov edx, [ebp+arg_0]  | * | mov [ebp+fctx.call_site], 1 ",gcc,1
"mov [ebp+fctx.call_site], 1  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi   | * | mov [ebp+var_2C], eax ",gcc,1
"sub esp, 4  | * | mov [ebp+var_28], edx ",gcc,1
"mov [ebp+var_2C], eax  | * | lea eax, [ebp+var_1C] ",gcc,1
"mov [ebp+var_28], edx  | * | lea edx, [ebp+var_2C] ",gcc,1
"lea eax, [ebp+var_1C]  | * | mov [esp], edx ",gcc,1
"lea edx, [ebp+var_2C]  | * | mov ecx, eax ",gcc,1
"call __ZNSt23_Rb_tree_const_iteratorIiEC1ERKSt17_Rb_tree_iteratorIiE   | * | lea eax, [ebp+var_24] ",gcc,1
"sub esp, 4  | * | lea edx, [ebp+var_2C] ",gcc,1
"lea eax, [ebp+var_24]  | * | add edx, 4 ",gcc,1
"lea edx, [ebp+var_2C]  | * | mov [esp+4], edx ",gcc,1
"add edx, 4  | * | lea edx, [ebp+var_1C] ",gcc,1
"mov [esp+4], edx  | * | mov [esp], edx ",gcc,7
"lea edx, [ebp+var_1C]  | * | mov ecx, eax ",gcc,2
"mov [esp], edx  | * | call __ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC1ERKS1_RKb  ",gcc,1
"mov ecx, eax  | * | sub esp, 8 ",gcc,10
"call __ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC1ERKS1_RKb   | * | mov eax, [ebp+var_24] ",gcc,1
"sub esp, 8  | * | mov edx, [ebp+var_20] ",gcc,1
"mov eax, [ebp+var_24]  | * | mov [ebp+var_78], eax ",gcc,1
"mov edx, [ebp+var_20]  | * | mov [ebp+var_74], edx ",gcc,1
"mov [ebp+var_78], eax  | * | jmp short loc_411537 ",gcc,1
"mov [ebp+var_74], edx  | * | loc_411522:  ",gcc,1
"jmp short loc_411537  | * | lea ebp, [ebp+18h] ",gcc,1
"loc_411522:   | * | mov eax, [ebp+fctx.data] ",gcc,1
"lea ebp, [ebp+18h]  | * | mov [esp], eax  ",gcc,1
"mov eax, [ebp+fctx.data]  | * | mov [ebp+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [ebp+fctx.call_site], 0FFFFFFFFh  | * | loc_411537:  ",gcc,1
"loc_411537:   | * | mov [esp], eax  ",gcc,1
"mov [esp], eax   | * | mov eax, [ebp+var_78] ",gcc,1
"call __Unwind_SjLj_Unregister  | * | mov edx, [ebp+var_74] ",gcc,1
"mov eax, [ebp+var_78]  | * | lea esp, [ebp-0Ch] ",gcc,1
"mov edx, [ebp+var_74]  | * | pop ebx ",gcc,1
pop ebp  | * | __ZNSt3setIiSt4lessIiESaIiEE6insertERKi endp ,gcc,1
__ZNSt3setIiSt4lessIiESaIiEE6insertERKi endp  | * | public __ZNSt3setIiSt4lessIiESaIiEEC1Ev ,gcc,1
align 4  | * | __ZNSt3setIiSt4lessIiESaIiEEC1Ev proc near ,gcc,1
__ZNSt3setIiSt4lessIiESaIiEEC1Ev proc near  | * | push ebp ,gcc,1
"mov eax, [ebp+var_C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEC1Ev  ",gcc,1
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEC1Ev   | * | retn ,gcc,1
leave  | * | __ZNSt3setIiSt4lessIiESaIiEEC1Ev endp ,gcc,1
__ZNSt3setIiSt4lessIiESaIiEEC1Ev endp  | * | public __ZNSt3setIiSt4lessIiESaIiEED1Ev ,gcc,1
align 4  | * | __ZNSt3setIiSt4lessIiESaIiEED1Ev proc near ,gcc,1
__ZNSt3setIiSt4lessIiESaIiEED1Ev proc near  | * | push ebp ,gcc,1
"mov eax, [ebp+var_C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEED1Ev  ",gcc,1
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEED1Ev   | * | retn ,gcc,1
leave  | * | __ZNSt3setIiSt4lessIiESaIiEED1Ev endp ,gcc,1
__ZNSt3setIiSt4lessIiESaIiEED1Ev endp  | * | public __ZNSt4pairISt17_Rb_tree_iteratorIiEbEC1ERKS1_RKb ,gcc,1
align 4  | * | __ZNSt4pairISt17_Rb_tree_iteratorIiEbEC1ERKS1_RKb proc near ,gcc,1
"mov eax, [ebp+var_4]  | * | mov edx, [edx] ",gcc,2
"mov edx, [ebp+arg_0]  | * | mov [eax], edx ",gcc,2
"mov edx, [edx]  | * | mov eax, [ebp+arg_4] ",gcc,2
"mov [eax], edx  | * | mov dl, [eax] ",gcc,2
"mov eax, [ebp+arg_4]  | * | mov eax, [ebp+var_4] ",gcc,2
"mov dl, [eax]  | * | mov [eax+4], dl ",gcc,2
"mov [eax+4], dl  | * | retn 8 ",gcc,2
leave  | * | __ZNSt4pairISt17_Rb_tree_iteratorIiEbEC1ERKS1_RKb endp ,gcc,1
__ZNSt4pairISt17_Rb_tree_iteratorIiEbEC1ERKS1_RKb endp  | * | public __ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC1ERKS1_RKb ,gcc,1
align 4  | * | __ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC1ERKS1_RKb proc near ,gcc,1
leave  | * | __ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC1ERKS1_RKb endp ,gcc,1
__ZNSt4pairISt23_Rb_tree_const_iteratorIiEbEC1ERKS1_RKb endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi proc near ,gcc,1
var_15 = byte ptr -15h  | * | var_10 = dword ptr -10h ,data,1
var_14 = dword ptr -14h  | * | var_9 = byte ptr -9 ,data,1
var_9 = byte ptr -9  | * | arg_4 = dword ptr 0Ch ,data,1
arg_0 = dword ptr 8  | * | arg_8 = dword ptr 10h ,data,2
"push ebx  | * | mov [ebp+var_1C], ecx ",gcc,4
"sub esp, 30h  | * | mov bl, 0 ",gcc,1
"mov [ebp+var_1C], ecx  | * | cmp [ebp+arg_0], 0 ",gcc,1
"mov bl, 0  | * | jnz short loc_411628 ",gcc,1
"cmp [ebp+arg_0], 0  | * | mov eax, [ebp+var_1C] ",gcc,1
"jnz short loc_411628  | * | mov ecx, eax ",gcc,1
"mov eax, [ebp+var_1C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv  ",gcc,1
"mov ecx, eax  | * | cmp eax, [ebp+arg_4] ",gcc,1
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv   | * | jz short loc_411628 ,gcc,1
"cmp eax, [ebp+arg_4]  | * | mov eax, [ebp+arg_4] ",gcc,1
"jz short loc_411628  | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+arg_4]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base  ",gcc,1
"mov [esp], eax  | * | mov esi, eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base   | * | mov bl, 1 ",gcc,1
"mov esi, eax  | * | lea eax, [ebp+var_15] ",gcc,1
"mov bl, 1  | * | mov edx, [ebp+arg_8] ",gcc,1
"lea eax, [ebp+var_15]  | * | mov [esp], edx ",gcc,1
"mov edx, [ebp+arg_8]  | * | mov ecx, eax ",gcc,2
"mov [esp], edx  | * | call __ZNKSt9_IdentityIiEclERKi  ",gcc,3
"call __ZNKSt9_IdentityIiEclERKi   | * | mov edx, [ebp+var_1C] ",gcc,1
"sub esp, 4  | * | mov [esp+4], esi ",gcc,1
"mov edx, [ebp+var_1C]  | * | mov [esp], eax ",gcc,1
"mov [esp+4], esi  | * | mov ecx, edx ",gcc,1
"mov [esp], eax  | * | call __ZNKSt4lessIiEclERKiS2_  ",gcc,2
"mov ecx, edx  | * | sub esp, 8 ",gcc,2
"call __ZNKSt4lessIiEclERKiS2_   | * | test al, al ",gcc,3
"sub esp, 8  | * | jz short loc_41162C ",gcc,1
"test al, al  | * | loc_411628:  ",gcc,1
"jz short loc_41162C  | * | mov al, 1 ",gcc,1
loc_411628:   | * | jmp short loc_41162E ,gcc,1
"mov al, 1  | * | loc_41162C:  ",gcc,1
"jmp short loc_41162E  | * | mov al, 0 ",gcc,1
loc_41162C:   | * | loc_41162E:  ,gcc,1
"mov al, 0  | * | mov [ebp+var_9], al ",gcc,1
"loc_41162E:   | * | test bl, bl ",gcc,1
"mov [ebp+var_9], al  | * | mov eax, [ebp+var_1C] ",gcc,1
"test bl, bl  | * | mov edx, [ebp+arg_8] ",gcc,1
"mov [esp], edx  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeERKi  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeERKi   | * | mov [ebp+var_10], eax ",gcc,1
"sub esp, 4  | * | mov eax, [ebp+var_1C] ",gcc,1
"mov [ebp+var_10], eax  | * | lea edx, [eax+4] ",gcc,1
"mov eax, [ebp+var_1C]  | * | movzx eax, [ebp+var_9] ",gcc,1
"lea edx, [eax+4]  | * | mov [esp+0Ch], edx ",gcc,1
"movzx eax, [ebp+var_9]  | * | mov edx, [ebp+arg_4] ",gcc,1
"mov [esp+0Ch], edx  | * | mov [esp+8], edx ",gcc,1
"mov edx, [ebp+arg_4]  | * | mov edx, [ebp+var_10] ",gcc,1
"mov [esp+8], edx  | * | mov [esp+4], edx ",gcc,3
"mov edx, [ebp+var_10]  | * | mov [esp], eax ",gcc,1
"mov [esp+4], edx  | * | call __ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_  ",gcc,1
"mov [esp], eax  | * | mov eax, [ebp+var_1C] ",gcc,1
"call __ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_   | * | mov eax, [eax+14h] ",gcc,1
"mov eax, [ebp+var_1C]  | * | lea edx, [eax+1] ",gcc,1
"mov eax, [eax+14h]  | * | mov eax, [ebp+var_1C] ",gcc,1
"lea edx, [eax+1]  | * | mov [eax+14h], edx ",gcc,1
"mov eax, [ebp+var_1C]  | * | lea eax, [ebp+var_14] ",gcc,1
"mov [eax+14h], edx  | * | mov edx, [ebp+var_10] ",gcc,1
"lea eax, [ebp+var_14]  | * | mov [esp], edx ",gcc,1
"mov edx, [ebp+var_10]  | * | mov ecx, eax ",gcc,1
"mov [esp], edx  | * | call __ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE  ",gcc,5
"call __ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE   | * | mov eax, [ebp+var_14] ",gcc,1
"sub esp, 4  | * | lea esp, [ebp-8] ",gcc,1
"mov eax, [ebp+var_14]  | * | pop ebx ",gcc,1
"lea esp, [ebp-8]  | * | pop esi ",gcc,1
pop ebx  | * | pop ebp ,gcc,2
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv proc near  | * | push ebp ,gcc,1
"mov [ebp+var_C], ecx  | * | mov dword ptr [esp+4], 0 ",gcc,1
"mov eax, [ebp+var_C]  | * | mov dword ptr [esp], 1 ",gcc,1
"mov dword ptr [esp+4], 0  | * | mov ecx, eax ",gcc,1
"mov dword ptr [esp], 1  | * | call __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEjPKv  ",gcc,1
call __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE8allocateEjPKv   | * | leave ,gcc,1
"sub esp, 8  | * | retn ",gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE proc near ,gcc,1
"mov [ebp+var_C], ecx  | * | mov dword ptr [esp+4], 1  ",gcc,1
"mov eax, [ebp+var_C]  | * | mov edx, [ebp+arg_0] ",gcc,1
"mov dword ptr [esp+4], 1   | * | mov [esp], edx  ",gcc,1
"mov [esp], edx   | * | call __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_j  ",gcc,1
call __ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIiEE10deallocateEPS2_j   | * | leave ,gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE endp ,gcc,1
retn 4  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EE13_M_initializeEv ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE endp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EE13_M_initializeEv proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EE13_M_initializeEv proc near  | * | push ebp ,gcc,1
"mov [ebp+var_4], ecx  | * | mov dword ptr [eax+4], 0 ",gcc,1
"mov eax, [ebp+var_4]  | * | mov eax, [ebp+var_4] ",gcc,5
"mov dword ptr [eax+4], 0  | * | mov dword ptr [eax+8], 0 ",gcc,1
"mov dword ptr [eax+8], 0  | * | lea edx, [eax+4] ",gcc,1
"lea edx, [eax+4]  | * | mov [eax+0Ch], edx ",gcc,1
"mov [eax+0Ch], edx  | * | lea edx, [eax+4] ",gcc,1
"lea edx, [eax+4]  | * | mov [eax+10h], edx ",gcc,1
"mov [eax+10h], edx  | * | retn ",gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EE13_M_initializeEv endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EE13_M_initializeEv endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EEC1Ev ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EEC1Ev proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EEC1Ev proc near  | * | push ebp ,gcc,1
"push edi  | * | sub esp, 10h ",gcc,1
"push ebx  | * | mov [ebp+var_C], ecx ",gcc,1
"sub esp, 10h  | * | mov eax, [ebp+var_C] ",gcc,1
"mov eax, [ebp+var_C]  | * | call __ZNSaISt13_Rb_tree_nodeIiEEC2Ev  ",gcc,1
"mov ecx, eax  | * | mov eax, [ebp+var_C] ",gcc,2
"call __ZNSaISt13_Rb_tree_nodeIiEEC2Ev   | * | lea ebx, [eax+4] ",gcc,1
"mov eax, [ebp+var_C]  | * | mov al, 0 ",gcc,1
"lea ebx, [eax+4]  | * | mov edx, 10h ",gcc,1
"mov al, 0  | * | mov edi, ebx ",gcc,1
"mov edx, 10h  | * | mov ecx, edx ",gcc,1
"mov edi, ebx  | * | rep stosb ",gcc,1
"mov ecx, edx  | * | mov eax, [ebp+var_C] ",gcc,1
"rep stosb  | * | mov dword ptr [eax+14h], 0 ",gcc,1
"mov eax, [ebp+var_C]  | * | mov eax, [ebp+var_C] ",gcc,1
"mov dword ptr [eax+14h], 0  | * | mov ecx, eax ",gcc,1
"mov eax, [ebp+var_C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EE13_M_initializeEv  ",gcc,1
"mov ecx, eax  | * | add esp, 10h ",gcc,1
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EE13_M_initializeEv   | * | pop ebx ,gcc,1
"add esp, 10h  | * | pop edi ",gcc,1
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EEC1Ev endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EEC1Ev endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EED1Ev ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EED1Ev proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EED1Ev proc near  | * | push ebp ,gcc,1
"mov eax, [ebp+var_C]  | * | call __ZNSaISt13_Rb_tree_nodeIiEED2Ev  ",gcc,1
call __ZNSaISt13_Rb_tree_nodeIiEED2Ev   | * | retn ,gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EED1Ev endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EED1Ev endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeERKi ,gcc,1
align 10h  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeERKi proc near ,gcc,1
var_D = byte ptr -0Dh  | * | var_4 = dword ptr -4 ,data,1
var_C = dword ptr -0Ch  | * | arg_0 = dword ptr 8 ,data,1
push ebp  | * | push ebx ,gcc,2
"mov ebp, esp  | * | sub esp, 34h ",gcc,2
"sub esp, 34h  | * | mov eax, [ebp+var_1C] ",gcc,1
"mov [ebp+var_1C], ecx  | * | mov ecx, eax ",gcc,1
"mov eax, [ebp+var_1C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv  ",gcc,1
"mov ecx, eax  | * | mov [ebp+var_C], eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_get_nodeEv   | * | mov eax, [ebp+var_C] ",gcc,1
"mov [ebp+var_C], eax  | * | add eax, 10h ",gcc,1
"add eax, 10h  | * | call __ZSt11__addressofIiEPT_RS0_  ",gcc,2
"mov [esp], eax  | * | mov ebx, eax ",gcc,2
"call __ZSt11__addressofIiEPT_RS0_   | * | lea eax, [ebp+var_D] ",gcc,1
"mov ebx, eax  | * | mov edx, [ebp+var_1C] ",gcc,2
"lea eax, [ebp+var_D]  | * | mov [esp], edx ",gcc,1
"mov edx, [ebp+var_1C]  | * | mov ecx, eax ",gcc,2
"mov [esp], edx  | * | call __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13get_allocatorEv  ",gcc,2
"call __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13get_allocatorEv   | * | lea eax, [ebp+var_D] ",gcc,1
"sub esp, 4  | * | mov edx, [ebp+arg_0] ",gcc,1
"lea eax, [ebp+var_D]  | * | mov [esp+4], edx  ",gcc,1
"mov edx, [ebp+arg_0]  | * | mov [esp], ebx  ",gcc,1
"mov [esp+4], edx   | * | mov ecx, eax ",gcc,1
"mov [esp], ebx   | * | call __ZN9__gnu_cxx13new_allocatorIiE9constructEPiRKi  ",gcc,1
"call __ZN9__gnu_cxx13new_allocatorIiE9constructEPiRKi   | * | lea eax, [ebp+var_D] ",gcc,1
"sub esp, 8  | * | mov ecx, eax ",gcc,1
"lea eax, [ebp+var_D]  | * | call __ZNSaIiED1Ev  ",gcc,1
"call __ZNSaIiED1Ev   | * | mov ebx, [ebp+var_4] ",gcc,1
"mov eax, [ebp+var_C]  | * | leave ",gcc,1
"mov ebx, [ebp+var_4]  | * | retn 4 ",gcc,2
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeERKi endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_create_nodeERKi endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi proc near ,gcc,1
var_1C = dword ptr -1Ch  | * | arg_0 = dword ptr 8 ,data,4
var_C = dword ptr -0Ch  | * | arg_4 = dword ptr 0Ch ,data,1
"sub esp, 38h  | * | jmp short loc_411842 ",gcc,1
"mov [ebp+var_1C], ecx  | * | loc_4117F3:  ",gcc,1
"jmp short loc_411842  | * | mov eax, [ebp+arg_0] ",gcc,2
"loc_4117F3:   | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+arg_0]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE  ",gcc,1
"mov [esp], eax  | * | mov edx, eax ",gcc,2
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE   | * | mov eax, [ebp+var_1C] ",gcc,1
"mov edx, eax  | * | mov ecx, [ebp+arg_8] ",gcc,1
"mov eax, [ebp+var_1C]  | * | mov [esp+4], ecx ",gcc,1
"mov ecx, [ebp+arg_8]  | * | mov [esp], edx ",gcc,1
"mov [esp+4], ecx  | * | mov ecx, eax ",gcc,2
"mov [esp], edx  | * | call __ZNKSt4lessIiEclERKiS2_  ",gcc,3
"call __ZNKSt4lessIiEclERKiS2_   | * | xor eax, 1 ",gcc,1
"sub esp, 8  | * | test al, al ",gcc,1
"xor eax, 1  | * | jz short loc_411834 ",gcc,1
"test al, al  | * | mov eax, [ebp+arg_0] ",gcc,1
"jz short loc_411834  | * | mov [ebp+arg_4], eax ",gcc,1
"mov eax, [ebp+arg_0]  | * | mov eax, [ebp+arg_0] ",gcc,1
"mov [ebp+arg_4], eax  | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+arg_0]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base  ",gcc,2
"mov [esp], eax  | * | mov [ebp+arg_0], eax ",gcc,2
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base   | * | jmp short loc_411842 ,gcc,1
"mov [ebp+arg_0], eax  | * | loc_411834:  ",gcc,1
"loc_411834:   | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+arg_0]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base  ",gcc,2
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base   | * | loc_411842:  ,gcc,1
"mov [ebp+arg_0], eax  | * | cmp [ebp+arg_0], 0 ",gcc,2
loc_411842:   | * | setnz al ,gcc,1
"cmp [ebp+arg_0], 0  | * | test al, al ",gcc,2
setnz al  | * | jnz short loc_4117F3 ,gcc,1
"test al, al  | * | lea eax, [ebp+var_C] ",gcc,1
"jnz short loc_4117F3  | * | mov edx, [ebp+arg_4] ",gcc,1
"lea eax, [ebp+var_C]  | * | mov [esp], edx ",gcc,1
"mov edx, [ebp+arg_4]  | * | mov ecx, eax ",gcc,1
"call __ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE   | * | mov eax, [ebp+var_C] ",gcc,2
"mov eax, [ebp+var_C]  | * | retn 0Ch ",gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIiE ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIiE proc near ,gcc,1
var_1C = dword ptr -1Ch  | * | var_4 = dword ptr -4 ,data,1
var_9 = byte ptr -9  | * | arg_0 = dword ptr 8 ,data,1
"sub esp, 34h  | * | mov eax, [ebp+arg_0] ",gcc,1
"mov [ebp+var_1C], ecx  | * | add eax, 10h ",gcc,1
"mov eax, [ebp+arg_0]  | * | mov [esp], eax ",gcc,1
"call __ZSt11__addressofIiEPT_RS0_   | * | lea eax, [ebp+var_9] ",gcc,1
"lea eax, [ebp+var_9]  | * | mov [esp], edx ",gcc,1
"call __ZNKSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13get_allocatorEv   | * | lea eax, [ebp+var_9] ",gcc,1
"sub esp, 4  | * | mov [esp], ebx ",gcc,1
"lea eax, [ebp+var_9]  | * | mov ecx, eax ",gcc,1
"mov [esp], ebx  | * | call __ZN9__gnu_cxx13new_allocatorIiE7destroyEPi  ",gcc,1
"call __ZN9__gnu_cxx13new_allocatorIiE7destroyEPi   | * | lea eax, [ebp+var_9] ",gcc,1
"sub esp, 4  | * | mov ecx, eax ",gcc,2
"lea eax, [ebp+var_9]  | * | call __ZNSaIiED1Ev  ",gcc,1
"mov ecx, eax  | * | mov eax, [ebp+var_1C] ",gcc,1
"call __ZNSaIiED1Ev   | * | mov edx, [ebp+arg_0] ",gcc,1
"mov eax, [ebp+var_1C]  | * | mov [esp], edx  ",gcc,2
"mov [esp], edx   | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE11_M_put_nodeEPSt13_Rb_tree_nodeIiE   | * | mov ebx, [ebp+var_4] ",gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIiE endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIiE endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi proc near ,gcc,1
var_B0 = dword ptr -0B0h  | * | var_A8 = dword ptr -0A8h ,data,1
var_A8 = dword ptr -0A8h  | * | fctx = SjLj_Function_Context ptr -0A0h ,data,1
var_A4 = dword ptr -0A4h  | * | var_6C = dword ptr -6Ch ,data,1
fctx = SjLj_Function_Context ptr -0A0h  | * | var_5C = dword ptr -5Ch ,data,1
var_6C = dword ptr -6Ch  | * | var_55 = byte ptr -55h ,data,1
var_55 = byte ptr -55h  | * | var_50 = dword ptr -50h ,data,1
var_54 = dword ptr -54h  | * | var_4C = dword ptr -4Ch ,data,1
var_50 = dword ptr -50h  | * | var_45 = byte ptr -45h ,data,1
var_45 = byte ptr -45h  | * | var_3D = byte ptr -3Dh ,data,1
var_3D = byte ptr -3Dh  | * | var_38 = dword ptr -38h ,data,1
var_3C = dword ptr -3Ch  | * | var_31 = byte ptr -31h ,data,1
var_31 = byte ptr -31h  | * | var_2C = dword ptr -2Ch ,data,1
var_2C = dword ptr -2Ch  | * | var_22 = byte ptr -22h ,data,1
var_28 = dword ptr -28h  | * | var_21 = byte ptr -21h ,data,1
var_22 = byte ptr -22h  | * | var_20 = dword ptr -20h ,data,1
var_21 = byte ptr -21h  | * | var_1C = dword ptr -1Ch ,data,1
"push esi  | * | sub esp, 0BCh ",gcc,1
"push ebx  | * | mov [ebp+var_6C], ecx ",gcc,1
"sub esp, 0BCh  | * | mov [ebp+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov [ebp+var_6C], ecx  | * | mov [ebp+fctx.lsda], offset word_412242 ",gcc,1
"mov [ebp+fctx.lsda], offset word_412242  | * | lea edx, [ebp+var_18] ",gcc,1
"lea edx, [ebp+var_18]  | * | mov edx, offset loc_411B2F ",gcc,1
"mov edx, offset loc_411B2F  | * | mov [eax+8], esp ",gcc,1
"mov [esp], eax   | * | mov eax, [ebp+var_6C] ",gcc,2
"call __Unwind_SjLj_Register  | * | mov ecx, eax ",gcc,3
"mov eax, [ebp+var_6C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv  ",gcc,1
"mov ecx, eax  | * | mov [ebp+var_1C], eax ",gcc,2
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv   | * | mov eax, [ebp+var_6C] ",gcc,1
"mov [ebp+var_1C], eax  | * | mov ecx, eax ",gcc,1
"mov eax, [ebp+var_6C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv  ",gcc,1
"mov ecx, eax  | * | mov [ebp+var_20], eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv   | * | mov [ebp+var_21], 1 ",gcc,1
"mov [ebp+var_20], eax  | * | jmp short loc_4119A2 ",gcc,1
"mov [ebp+var_21], 1  | * | loc_411930:  ",gcc,1
"jmp short loc_4119A2  | * | mov eax, [ebp+var_1C] ",gcc,1
"loc_411930:   | * | mov [ebp+var_20], eax ",gcc,1
"mov eax, [ebp+var_1C]  | * | mov eax, [ebp+var_1C] ",gcc,1
"mov [ebp+var_20], eax  | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+var_1C]  | * | mov [ebp+fctx.call_site], 1 ",gcc,1
"mov [esp], eax  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE  ",gcc,1
"mov [ebp+fctx.call_site], 1  | * | mov [ebp+var_A4], eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE   | * | lea eax, [ebp+var_55] ",gcc,1
"mov [ebp+var_A4], eax  | * | mov edx, [ebp+arg_0] ",gcc,1
"lea eax, [ebp+var_55]  | * | mov [esp], edx ",gcc,1
"call __ZNKSt9_IdentityIiEclERKi   | * | mov edx, [ebp+var_6C] ",gcc,1
"sub esp, 4  | * | mov ecx, [ebp+var_A4] ",gcc,1
"mov edx, [ebp+var_6C]  | * | mov [esp+4], ecx ",gcc,1
"mov ecx, [ebp+var_A4]  | * | mov [esp], eax ",gcc,1
"mov [esp+4], ecx  | * | mov ecx, edx ",gcc,1
"call __ZNKSt4lessIiEclERKiS2_   | * | mov [ebp+var_21], al ",gcc,1
"sub esp, 8  | * | cmp [ebp+var_21], 0 ",gcc,1
"mov [ebp+var_21], al  | * | jz short loc_411994 ",gcc,1
"cmp [ebp+var_21], 0  | * | mov eax, [ebp+var_1C] ",gcc,1
"jz short loc_411994  | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+var_1C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base  ",gcc,1
"mov [esp], eax  | * | jmp short loc_41199F ",gcc,1
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base   | * | loc_411994:  ,gcc,1
"jmp short loc_41199F  | * | mov eax, [ebp+var_1C] ",gcc,1
"loc_411994:   | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+var_1C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base  ",gcc,1
"mov [esp], eax  | * | loc_41199F:  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base   | * | mov [ebp+var_1C], eax ",gcc,1
loc_41199F:   | * | loc_4119A2:  ,gcc,1
"mov [ebp+var_1C], eax  | * | cmp [ebp+var_1C], 0 ",gcc,1
loc_4119A2:   | * | setnz al ,gcc,1
"cmp [ebp+var_1C], 0  | * | test al, al ",gcc,1
setnz al  | * | jnz short loc_411930 ,gcc,1
"test al, al  | * | lea eax, [ebp+var_5C] ",gcc,1
"jnz short loc_411930  | * | mov edx, [ebp+var_20] ",gcc,1
"lea eax, [ebp+var_5C]  | * | mov [esp], edx ",gcc,2
"mov edx, [ebp+var_20]  | * | mov ecx, eax ",gcc,1
"call __ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE   | * | cmp [ebp+var_21], 0 ",gcc,1
"sub esp, 4  | * | jz loc_411A4F ",gcc,1
"cmp [ebp+var_21], 0  | * | mov eax, [ebp+var_6C] ",gcc,1
"jz loc_411A4F  | * | mov ecx, eax ",gcc,1
"mov eax, [ebp+var_6C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv  ",gcc,1
"mov ecx, eax  | * | mov [ebp+var_54], eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv   | * | lea eax, [ebp+var_5C] ",gcc,1
"mov [ebp+var_54], eax  | * | lea edx, [ebp+var_54] ",gcc,1
"lea edx, [ebp+var_54]  | * | mov ecx, eax ",gcc,1
"mov [esp], edx  | * | call __ZNKSt17_Rb_tree_iteratorIiEeqERKS0_  ",gcc,2
"call __ZNKSt17_Rb_tree_iteratorIiEeqERKS0_   | * | test al, al ",gcc,2
"sub esp, 4  | * | jz short loc_411A45 ",gcc,1
"test al, al  | * | mov [ebp+var_45], 1 ",gcc,1
"jz short loc_411A45  | * | mov eax, [ebp+var_6C] ",gcc,1
"mov [ebp+var_45], 1  | * | mov edx, [ebp+arg_0] ",gcc,1
"mov eax, [ebp+var_6C]  | * | mov [esp+8], edx ",gcc,2
"mov edx, [ebp+arg_0]  | * | mov edx, [ebp+var_20] ",gcc,2
"mov edx, [ebp+var_20]  | * | mov edx, [ebp+var_1C] ",gcc,2
"mov edx, [ebp+var_1C]  | * | mov [ebp+fctx.call_site], 2 ",gcc,1
"mov [ebp+fctx.call_site], 2  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi  ",gcc,1
"mov ecx, eax  | * | sub esp, 0Ch ",gcc,2
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi   | * | mov [ebp+var_44], eax ",gcc,1
"sub esp, 0Ch  | * | lea eax, [ebp+var_50] ",gcc,1
"mov [ebp+var_44], eax  | * | lea edx, [ebp+var_45] ",gcc,1
"lea eax, [ebp+var_50]  | * | mov [esp+4], edx ",gcc,1
"lea edx, [ebp+var_45]  | * | lea edx, [ebp+var_44] ",gcc,1
"lea edx, [ebp+var_44]  | * | mov ecx, eax ",gcc,1
"mov [esp], edx  | * | call __ZNSt4pairISt17_Rb_tree_iteratorIiEbEC1ERKS1_RKb  ",gcc,3
"call __ZNSt4pairISt17_Rb_tree_iteratorIiEbEC1ERKS1_RKb   | * | mov eax, [ebp+var_50] ",gcc,1
"sub esp, 8  | * | mov edx, [ebp+var_4C] ",gcc,1
"mov eax, [ebp+var_50]  | * | jmp loc_411B15 ",gcc,1
"mov edx, [ebp+var_4C]  | * | loc_411A45:  ",gcc,1
"jmp loc_411B15  | * | lea eax, [ebp+var_5C] ",gcc,1
"loc_411A45:   | * | mov ecx, eax ",gcc,1
"lea eax, [ebp+var_5C]  | * | call __ZNSt17_Rb_tree_iteratorIiEmmEv  ",gcc,1
"mov ecx, eax  | * | loc_411A4F:  ",gcc,1
"call __ZNSt17_Rb_tree_iteratorIiEmmEv   | * | lea eax, [ebp+var_3D] ",gcc,1
"loc_411A4F:   | * | mov edx, [ebp+arg_0] ",gcc,1
"lea eax, [ebp+var_3D]  | * | mov [esp], edx ",gcc,1
"call __ZNKSt9_IdentityIiEclERKi   | * | mov [ebp+var_A8], eax ",gcc,1
"sub esp, 4  | * | mov eax, [ebp+var_5C] ",gcc,1
"mov [ebp+var_A8], eax  | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+var_5C]  | * | mov [ebp+fctx.call_site], 3 ",gcc,1
"mov [esp], eax  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base  ",gcc,1
"mov [ebp+fctx.call_site], 3  | * | mov edx, eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base   | * | mov eax, [ebp+var_6C] ",gcc,1
"mov edx, eax  | * | mov ecx, [ebp+var_A8] ",gcc,1
"mov eax, [ebp+var_6C]  | * | mov [esp+4], ecx ",gcc,1
"mov ecx, [ebp+var_A8]  | * | mov [esp], edx ",gcc,1
"sub esp, 8  | * | jz short loc_411AF1 ",gcc,1
"test al, al  | * | mov [ebp+var_31], 1 ",gcc,1
"jz short loc_411AF1  | * | mov eax, [ebp+var_6C] ",gcc,1
"mov [ebp+var_31], 1  | * | mov edx, [ebp+arg_0] ",gcc,1
"mov edx, [ebp+var_1C]  | * | mov [ebp+fctx.call_site], 4 ",gcc,1
"mov [ebp+fctx.call_site], 4  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE10_M_insert_EPKSt18_Rb_tree_node_baseS8_RKi   | * | mov [ebp+var_30], eax ",gcc,1
"sub esp, 0Ch  | * | lea eax, [ebp+var_3C] ",gcc,1
"mov [ebp+var_30], eax  | * | lea edx, [ebp+var_31] ",gcc,1
"lea eax, [ebp+var_3C]  | * | mov [esp+4], edx ",gcc,1
"lea edx, [ebp+var_31]  | * | lea edx, [ebp+var_30] ",gcc,1
"lea edx, [ebp+var_30]  | * | mov ecx, eax ",gcc,1
"call __ZNSt4pairISt17_Rb_tree_iteratorIiEbEC1ERKS1_RKb   | * | mov eax, [ebp+var_3C] ",gcc,1
"sub esp, 8  | * | mov edx, [ebp+var_38] ",gcc,1
"mov eax, [ebp+var_3C]  | * | jmp short loc_411B15 ",gcc,1
"mov edx, [ebp+var_38]  | * | loc_411AF1:  ",gcc,1
"jmp short loc_411B15  | * | mov [ebp+var_22], 0 ",gcc,1
"loc_411AF1:   | * | lea eax, [ebp+var_2C] ",gcc,1
"mov [ebp+var_22], 0  | * | lea edx, [ebp+var_22] ",gcc,1
"lea eax, [ebp+var_2C]  | * | mov [esp+4], edx ",gcc,1
"lea edx, [ebp+var_22]  | * | lea edx, [ebp+var_5C] ",gcc,1
"lea edx, [ebp+var_5C]  | * | mov ecx, eax ",gcc,1
"call __ZNSt4pairISt17_Rb_tree_iteratorIiEbEC1ERKS1_RKb   | * | mov eax, [ebp+var_2C] ",gcc,1
"sub esp, 8  | * | mov edx, [ebp+var_28] ",gcc,1
"mov eax, [ebp+var_2C]  | * | loc_411B15:  ",gcc,1
"mov edx, [ebp+var_28]  | * | mov [ebp+var_B0], eax ",gcc,1
"loc_411B15:   | * | mov [ebp+var_AC], edx ",gcc,1
"mov [ebp+var_B0], eax  | * | jmp short loc_411B6C ",gcc,1
"mov [ebp+var_AC], edx  | * | loc_411B23:  ",gcc,1
"jmp short loc_411B6C  | * | mov eax, edx ",gcc,1
loc_411B23:   | * | jmp short loc_411B5A ,gcc,1
"mov eax, edx  | * | loc_411B27:  ",gcc,1
"jmp short loc_411B5A  | * | mov eax, edx ",gcc,2
loc_411B27:   | * | jmp short loc_411B5A ,gcc,1
"mov eax, edx  | * | loc_411B2B:  ",gcc,1
loc_411B2B:   | * | jmp short loc_411B5A ,gcc,1
"mov eax, edx  | * | loc_411B2F:  ",gcc,1
"jmp short loc_411B5A  | * | lea ebp, [ebp+18h] ",gcc,1
"loc_411B2F:   | * | mov edx, [ebp+fctx.data] ",gcc,1
"mov eax, [ebp+fctx.call_site]  | * | jz short loc_411B23 ",gcc,1
"cmp eax, 1  | * | cmp eax, 1 ",gcc,1
jz short loc_411B23  | * | jg short loc_411B4C ,gcc,1
jg short loc_411B4C  | * | jz short loc_411B58 ,gcc,1
"test eax, eax  | * | loc_411B4C:  ",gcc,1
"jz short loc_411B58  | * | cmp eax, 2 ",gcc,1
loc_411B4C:   | * | jz short loc_411B27 ,gcc,1
"cmp eax, 2  | * | cmp eax, 3 ",gcc,1
jz short loc_411B27  | * | jz short loc_411B2B ,gcc,1
"cmp eax, 3  | * | ud2 ",gcc,1
jz short loc_411B2B  | * | loc_411B58:  ,gcc,1
loc_411B58:   | * | loc_411B5A:  ,gcc,1
"loc_411B5A:   | * | mov [ebp+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [ebp+fctx.call_site], 0FFFFFFFFh  | * | loc_411B6C:  ",gcc,1
"loc_411B6C:   | * | mov [esp], eax  ",gcc,1
"mov [esp], eax   | * | mov eax, [ebp+var_B0] ",gcc,1
"call __Unwind_SjLj_Unregister  | * | mov edx, [ebp+var_AC] ",gcc,1
"mov eax, [ebp+var_B0]  | * | lea esp, [ebp-0Ch] ",gcc,1
"mov edx, [ebp+var_AC]  | * | pop ebx ",gcc,1
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi endp ,gcc,1
retn 4  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE16_M_insert_uniqueERKi endp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv proc near ,gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv endp ,gcc,1
retn  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv endp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi proc near ,gcc,1
var_6C = dword ptr -6Ch  | * | var_61 = byte ptr -61h ,data,1
var_61 = byte ptr -61h  | * | var_2C = dword ptr -2Ch ,data,1
fctx = SjLj_Function_Context ptr -60h  | * | var_20 = dword ptr -20h ,data,1
var_2C = dword ptr -2Ch  | * | var_1C = dword ptr -1Ch ,data,1
"push ebx  | * | mov [ebp+var_2C], ecx ",gcc,1
"mov [ebp+var_2C], ecx  | * | mov [ebp+fctx.lsda], offset word_41223A ",gcc,1
"mov [ebp+fctx.lsda], offset word_41223A  | * | lea edx, [ebp+var_18] ",gcc,1
"lea edx, [ebp+var_18]  | * | mov edx, offset loc_411CAD ",gcc,1
"mov edx, offset loc_411CAD  | * | mov [eax+8], esp ",gcc,1
"mov [esp], eax   | * | mov eax, [ebp+var_2C] ",gcc,1
"mov eax, [ebp+var_2C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv  ",gcc,1
"mov ecx, eax  | * | mov [ebp+var_68], eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv   | * | mov eax, [ebp+var_2C] ",gcc,1
"mov [ebp+var_68], eax  | * | mov ecx, eax ",gcc,1
"mov eax, [ebp+var_2C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv  ",gcc,1
"mov ecx, eax  | * | mov edx, [ebp+var_2C] ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv   | * | mov ecx, [ebp+arg_0] ",gcc,1
"mov edx, [ebp+var_2C]  | * | mov [esp+8], ecx ",gcc,1
"mov ecx, [ebp+arg_0]  | * | mov ecx, [ebp+var_68] ",gcc,1
"mov [esp+8], ecx  | * | mov [esp+4], ecx ",gcc,1
"mov ecx, [ebp+var_68]  | * | mov [esp], eax ",gcc,1
"mov [esp+4], ecx  | * | mov [ebp+fctx.call_site], 1 ",gcc,1
"mov [esp], eax  | * | mov ecx, edx ",gcc,1
"mov [ebp+fctx.call_site], 1  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi  ",gcc,1
"mov ecx, edx  | * | sub esp, 0Ch ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE14_M_lower_boundEPSt13_Rb_tree_nodeIiES8_RKi   | * | mov [ebp+var_20], eax ",gcc,1
"sub esp, 0Ch  | * | mov [ebp+var_61], 0 ",gcc,1
"mov [ebp+var_20], eax  | * | mov eax, [ebp+var_2C] ",gcc,1
"mov [ebp+var_61], 0  | * | mov [ebp+fctx.call_site], 2 ",gcc,1
"mov eax, [ebp+var_2C]  | * | mov ecx, eax ",gcc,2
"mov [ebp+fctx.call_site], 2  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv  ",gcc,2
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv   | * | mov [ebp+var_61], 1 ",gcc,1
"mov [ebp+var_1C], eax  | * | lea eax, [ebp+var_20] ",gcc,1
"mov [ebp+var_61], 1  | * | lea edx, [ebp+var_1C] ",gcc,1
"lea eax, [ebp+var_20]  | * | mov [esp], edx ",gcc,1
"sub esp, 4  | * | jnz short loc_411C86 ",gcc,1
"test al, al  | * | mov eax, [ebp+var_20] ",gcc,1
"jnz short loc_411C86  | * | mov [esp], eax ",gcc,1
"mov eax, [ebp+var_20]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base   | * | mov eax, [ebp+var_2C] ",gcc,1
"mov edx, eax  | * | mov [esp+4], edx ",gcc,1
"mov eax, [ebp+var_2C]  | * | mov edx, [ebp+arg_0] ",gcc,1
"sub esp, 8  | * | jz short loc_411C99 ",gcc,1
"test al, al  | * | loc_411C86:  ",gcc,1
"jz short loc_411C99  | * | mov eax, [ebp+var_2C] ",gcc,1
"loc_411C86:   | * | mov [ebp+fctx.call_site], 2 ",gcc,1
"mov ecx, eax  | * | jmp short loc_411C9C ",gcc,1
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE3endEv   | * | loc_411C99:  ,gcc,1
"jmp short loc_411C9C  | * | mov eax, [ebp+var_20] ",gcc,1
loc_411C99:   | * | loc_411C9C:  ,gcc,1
"mov eax, [ebp+var_20]  | * | cmp [ebp+var_61], 0 ",gcc,1
"loc_411C9C:   | * | mov [ebp+var_6C], eax ",gcc,1
"cmp [ebp+var_61], 0  | * | jmp short loc_411CD2 ",gcc,1
"mov [ebp+var_6C], eax  | * | loc_411CA5:  ",gcc,1
"jmp short loc_411CD2  | * | mov eax, edx ",gcc,1
"loc_411CA5:   | * | cmp [ebp+var_61], 0 ",gcc,1
"mov eax, edx  | * | jmp short loc_411CC3 ",gcc,1
"cmp [ebp+var_61], 0  | * | loc_411CAD:  ",gcc,1
"jmp short loc_411CC3  | * | lea ebp, [ebp+18h] ",gcc,1
"loc_411CAD:   | * | mov edx, [ebp+fctx.data] ",gcc,1
"mov edx, [ebp+fctx.data]  | * | test eax, eax ",gcc,1
"mov eax, [ebp+fctx.call_site]  | * | jz short loc_411CC1 ",gcc,1
"test eax, eax  | * | cmp eax, 1 ",gcc,1
jz short loc_411CC1  | * | jz short loc_411CA5 ,gcc,1
"cmp eax, 1  | * | ud2 ",gcc,1
jz short loc_411CA5  | * | loc_411CC1:  ,gcc,1
loc_411CC1:   | * | loc_411CC3:  ,gcc,1
"loc_411CC3:   | * | mov [ebp+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [ebp+fctx.call_site], 0FFFFFFFFh  | * | loc_411CD2:  ",gcc,1
"loc_411CD2:   | * | mov [esp], eax  ",gcc,1
"call __Unwind_SjLj_Unregister  | * | lea esp, [ebp-0Ch] ",gcc,1
"mov eax, [ebp+var_6C]  | * | pop ebx ",gcc,1
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE4findERKi endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv proc near ,gcc,1
"mov ebp, esp  | * | mov [ebp+var_14], ecx ",gcc,1
"sub esp, 18h  | * | mov eax, [ebp+var_14] ",gcc,1
"mov [ebp+var_14], ecx  | * | mov edx, [eax+0Ch] ",gcc,1
"mov eax, [ebp+var_14]  | * | lea eax, [ebp+var_4] ",gcc,1
"mov edx, [eax+0Ch]  | * | mov [esp], edx ",gcc,1
"lea eax, [ebp+var_4]  | * | mov ecx, eax ",gcc,1
"call __ZNSt17_Rb_tree_iteratorIiEC1EPSt13_Rb_tree_nodeIiE   | * | mov eax, [ebp+var_4] ",gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv endp ,gcc,1
retn  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE5beginEv endp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv proc near  | * | push ebp ,gcc,1
"mov [ebp+var_4], ecx  | * | add eax, 4 ",gcc,1
"add eax, 4  | * | retn ",gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_M_endEv endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE proc near ,gcc,1
"mov ebp, esp  | * | mov eax, [ebp+arg_0] ",gcc,2
"sub esp, 28h  | * | mov [esp], eax ",gcc,2
"mov eax, [ebp+arg_0]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE  ",gcc,1
"mov [esp], eax  | * | lea edx, [ebp+var_9] ",gcc,2
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE   | * | mov [esp], eax ",gcc,1
"lea edx, [ebp+var_9]  | * | mov ecx, edx ",gcc,2
"mov [esp], eax  | * | call __ZNKSt9_IdentityIiEclERKi  ",gcc,2
call __ZNKSt9_IdentityIiEclERKi   | * | leave ,gcc,2
"sub esp, 4  | * | retn ",gcc,2
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt13_Rb_tree_nodeIiE endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base proc near ,gcc,1
"mov eax, [ebp+arg_0]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base   | * | mov [esp], eax ",gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE6_S_keyEPKSt18_Rb_tree_node_base endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base proc near  | * | push ebp ,gcc,1
"push ebp  | * | mov eax, [ebp+arg_0] ",gcc,5
"mov ebp, esp  | * | mov eax, [eax+8] ",gcc,1
"mov eax, [ebp+arg_0]  | * | pop ebp ",gcc,4
"mov eax, [eax+8]  | * | retn ",gcc,2
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv proc near  | * | push ebp ,gcc,1
"mov [ebp+var_4], ecx  | * | mov eax, [eax+8] ",gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE proc near ,gcc,1
"sub esp, 38h  | * | jmp short loc_411DD9 ",gcc,1
"mov [ebp+var_1C], ecx  | * | loc_411D97:  ",gcc,1
"jmp short loc_411DD9  | * | mov eax, [ebp+arg_0] ",gcc,1
"loc_411D97:   | * | mov [esp], eax ",gcc,1
"mov [esp], eax  | * | mov edx, [ebp+var_1C] ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base   | * | mov [esp], eax  ",gcc,1
"mov edx, [ebp+var_1C]  | * | mov ecx, edx ",gcc,1
"mov [esp], eax   | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE   | * | mov eax, [ebp+arg_0] ",gcc,1
"sub esp, 4  | * | mov [esp], eax ",gcc,1
"mov [esp], eax  | * | mov [ebp+var_C], eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE7_S_leftEPSt18_Rb_tree_node_base   | * | mov eax, [ebp+var_1C] ",gcc,1
"mov [ebp+var_C], eax  | * | mov edx, [ebp+arg_0] ",gcc,1
"mov [esp], edx   | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIiE  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE15_M_destroy_nodeEPSt13_Rb_tree_nodeIiE   | * | mov eax, [ebp+var_C] ",gcc,1
"sub esp, 4  | * | mov [ebp+arg_0], eax ",gcc,1
"mov eax, [ebp+var_C]  | * | loc_411DD9:  ",gcc,1
loc_411DD9:   | * | setnz al ,gcc,1
setnz al  | * | jnz short loc_411D97 ,gcc,1
"test al, al  | * | leave ",gcc,1
jnz short loc_411D97  | * | retn 4 ,gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE endp ,gcc,1
retn 4  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE endp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base proc near  | * | push ebp ,gcc,1
"mov ebp, esp  | * | mov eax, [eax+0Ch] ",gcc,1
"mov eax, [eax+0Ch]  | * | retn ",gcc,1
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_rightEPSt18_Rb_tree_node_base endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE proc near  | * | push ebp ,gcc,1
"mov ebp, esp  | * | add eax, 10h ",gcc,2
"add eax, 10h  | * | retn ",gcc,2
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt13_Rb_tree_nodeIiE endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base ,gcc,1
align 10h  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base proc near  | * | push ebp ,gcc,1
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_S_valueEPKSt18_Rb_tree_node_base endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEC1Ev ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEC1Ev proc near ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEC1Ev proc near  | * | push ebp ,gcc,1
"mov eax, [ebp+var_C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EEC1Ev  ",gcc,1
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EEC1Ev   | * | retn ,gcc,1
leave  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEC1Ev endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEEC1Ev endp  | * | public __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEED1Ev ,gcc,1
align 4  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEED1Ev proc near ,gcc,1
lpuexcpt = dword ptr -54h  | * | var_1C = dword ptr -1Ch ,data,1
fctx = SjLj_Function_Context ptr -50h  | * | var_18 = byte ptr -18h ,data,1
"sub esp, 5Ch  | * | mov [ebp+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov [ebp+var_1C], ecx  | * | mov [ebp+fctx.lsda], offset word_41222E ",gcc,1
"mov [ebp+fctx.lsda], offset word_41222E  | * | lea edx, [ebp+var_18] ",gcc,1
"lea edx, [ebp+var_18]  | * | mov edx, offset loc_411E89 ",gcc,1
"mov edx, offset loc_411E89  | * | mov [eax+8], esp ",gcc,1
"mov [esp], eax   | * | mov eax, [ebp+var_1C] ",gcc,1
"mov eax, [ebp+var_1C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv  ",gcc,1
"mov ecx, eax  | * | mov edx, [ebp+var_1C] ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_beginEv   | * | mov [esp], eax  ",gcc,1
"mov edx, [ebp+var_1C]  | * | mov [ebp+fctx.call_site], 1 ",gcc,1
"mov [esp], eax   | * | mov ecx, edx ",gcc,1
"mov [ebp+fctx.call_site], 1  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE  ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE8_M_eraseEPSt13_Rb_tree_nodeIiE   | * | mov eax, [ebp+var_1C] ",gcc,1
"mov eax, [ebp+var_1C]  | * | call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EED1Ev  ",gcc,2
"mov ecx, eax  | * | jmp short loc_411EAE ",gcc,1
call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EED1Ev   | * | loc_411E89:  ,gcc,1
"jmp short loc_411EAE  | * | lea ebp, [ebp+18h] ",gcc,1
"loc_411E89:   | * | mov eax, [ebp+fctx.data] ",gcc,1
"lea ebp, [ebp+18h]  | * | mov [ebp+lpuexcpt], eax ",gcc,1
"mov eax, [ebp+fctx.data]  | * | mov eax, [ebp+var_1C] ",gcc,1
"mov [ebp+lpuexcpt], eax  | * | mov ecx, eax ",gcc,1
"call __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEE13_Rb_tree_implIS3_Lb0EED1Ev   | * | mov [esp], eax  ",gcc,1
"mov eax, [ebp+lpuexcpt]  | * | mov [ebp+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [ebp+fctx.call_site], 0FFFFFFFFh  | * | loc_411EAE:  ",gcc,1
"loc_411EAE:   | * | mov [esp], eax  ",gcc,1
"mov [esp], eax   | * | lea esp, [ebp-0Ch] ",gcc,1
pop ebp  | * | __ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEED1Ev endp ,gcc,1
__ZNSt8_Rb_treeIiiSt9_IdentityIiESt4lessIiESaIiEED1Ev endp  | * | public __ZSt11__addressofIiEPT_RS0_ ,gcc,1
align 4  | * | __ZSt11__addressofIiEPT_RS0_ proc near  ,gcc,1
__ZSt11__addressofIiEPT_RS0_ proc near   | * | push ebp ,gcc,1
"mov ebp, esp  | * | pop ebp ",gcc,2
"mov eax, [ebp+arg_0]  | * | retn ",gcc,1
pop ebp  | * | __ZSt11__addressofIiEPT_RS0_ endp ,gcc,1
retn  | * | public __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_ ,gcc,1
__ZSt11__addressofIiEPT_RS0_ endp  | * | __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_ proc near ,gcc,1
arg_8 = dword ptr 0Ch  | * | arg_1C = dword ptr 20h ,data,3
arg_1C = dword ptr 20h  | * | arg_6C = dword ptr 70h ,data,2
"push ebp  | * | sub esp, 64h ",gcc,1
"push edi  | * | mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"sub esp, 64h  | * | mov [esp+6Ch+fctx.lsda], offset dword_4123CC ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset dword_4123CC  | * | mov [esp+6Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+6Ch+var_D+1]  | * | mov [esp+6Ch+var_2C], offset loc_411FA3 ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_411FA3  | * | lea edx, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+lpfctx], edx   | * | xor eax, eax ",gcc,1
"call __Unwind_SjLj_Register  | * | mov ecx, 0FFFFFFFFh ",gcc,1
"xor eax, eax  | * | mov edi, [esp+6Ch+arg_4] ",gcc,1
"mov edi, [esp+6Ch+arg_4]  | * | not ecx ",gcc,1
"not ecx  | * | mov [esp+6Ch+var_54], ecx ",gcc,1
"dec ecx  | * | lea eax, [esp+6Ch+var_D] ",gcc,1
"mov [esp+6Ch+var_54], ecx  | * | mov [esp+6Ch+var_64], eax  ",gcc,1
"lea eax, [esp+6Ch+var_D]  | * | mov [esp+6Ch+var_68], 0  ",gcc,2
"mov [esp+6Ch+var_68], 0   | * | mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh ",gcc,2
"mov [esp+6Ch+fctx.call_site], 0FFFFFFFFh  | * | mov edx, [esp+6Ch+arg_0] ",gcc,2
"mov edx, [esp+6Ch+arg_0]  | * | mov edx, [esp+6Ch+arg_8] ",gcc,2
"mov [edx], eax  | * | mov eax, [edx] ",gcc,2
"mov edx, [esp+6Ch+arg_8]  | * | mov eax, [eax-0Ch] ",gcc,2
"mov eax, [edx]  | * | add eax, [esp+6Ch+var_54] ",gcc,1
"mov eax, [eax-0Ch]  | * | mov [esp+6Ch+lpfctx], eax  ",gcc,2
"add eax, [esp+6Ch+var_54]  | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | mov ecx, [esp+6Ch+arg_0] ",gcc,2
"mov ecx, [esp+6Ch+arg_0]  | * | push edi ",gcc,1
"call __ZNSs7reserveEj   | * | mov eax, [esp+6Ch+var_54] ",gcc,1
"push edi  | * | mov [esp+6Ch+var_68], eax  ",gcc,1
"mov eax, [esp+6Ch+var_54]  | * | mov edx, [esp+6Ch+arg_4] ",gcc,1
"mov [esp+6Ch+var_68], eax   | * | mov [esp+6Ch+lpfctx], edx  ",gcc,1
"mov edx, [esp+6Ch+arg_4]  | * | mov ecx, [esp+6Ch+arg_0] ",gcc,1
"mov [esp+6Ch+lpfctx], edx   | * | call __ZNSs6appendEPKcj  ",gcc,1
"mov ecx, [esp+6Ch+arg_0]  | * | sub esp, 8 ",gcc,2
"call __ZNSs6appendEPKcj   | * | mov eax, [esp+6Ch+arg_8] ",gcc,1
"mov eax, [esp+6Ch+arg_8]  | * | mov ecx, [esp+6Ch+arg_0] ",gcc,2
"mov [esp+6Ch+lpfctx], eax   | * | call __ZNSs6appendERKSs  ",gcc,2
"mov ecx, [esp+6Ch+arg_0]  | * | push ecx ",gcc,1
"call __ZNSs6appendERKSs   | * | lea edx, [esp+6Ch+fctx] ",gcc,2
"push ecx  | * | mov [esp+6Ch+lpfctx], edx  ",gcc,1
"lea edx, [esp+6Ch+fctx]  | * | call __Unwind_SjLj_Unregister ",gcc,2
"mov [esp+6Ch+lpfctx], edx   | * | mov eax, [esp+6Ch+arg_0] ",gcc,2
"mov eax, [esp+6Ch+arg_0]  | * | pop edi ",gcc,1
"add esp, 64h  | * | pop ebp ",gcc,1
pop ebp  | * | loc_411FA3:  ,gcc,1
"retn  | * | mov edx, [esp+arg_20] ",gcc,2
"loc_411FA3:   | * | mov [esp+lpuexcpt], edx ",gcc,1
"mov edx, [esp+arg_20]  | * | mov ecx, [esp+arg_6C] ",gcc,2
"mov [esp+lpuexcpt], edx  | * | call __ZNSsD1Ev  ",gcc,2
"mov ecx, [esp+arg_6C]  | * | mov eax, [esp+lpuexcpt] ",gcc,2
"call __ZNSsD1Ev   | * | mov [esp+0], eax  ",gcc,3
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_ endp ",gcc,1
call __Unwind_SjLj_Resume  | * | public __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_ ,gcc,1
__ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_EPKS3_RKS6_ endp  | * | __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_ proc near ,gcc,1
arg_1C = dword ptr 20h  | * | arg_5C = dword ptr 60h ,data,1
"sub esp, 58h  | * | mov [esp+5Ch+fctx.lsda], offset dword_4123D8 ",gcc,1
"mov [esp+5Ch+fctx.lsda], offset dword_4123D8  | * | mov [esp+5Ch+fctx.jbuf], eax ",gcc,1
"lea eax, [esp+5Ch+var_C]  | * | mov [esp+5Ch+var_1C], offset loc_412043 ",gcc,1
"mov [esp+5Ch+var_1C], offset loc_412043  | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov eax, [esp+5Ch+arg_4] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov [esp+5Ch+lpfctx], eax  ",gcc,1
"mov eax, [esp+5Ch+arg_4]  | * | mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh ",gcc,1
"mov [esp+5Ch+lpfctx], eax   | * | mov ecx, [esp+5Ch+arg_0] ",gcc,2
"mov [esp+5Ch+fctx.call_site], 0FFFFFFFFh  | * | call __ZNSsC1ERKSs  ",gcc,1
"mov ecx, [esp+5Ch+arg_0]  | * | push eax ",gcc,2
"call __ZNSsC1ERKSs   | * | mov eax, [esp+5Ch+arg_8] ",gcc,1
"mov eax, [esp+5Ch+arg_8]  | * | mov [esp+5Ch+fctx.call_site], 1 ",gcc,1
"mov [esp+5Ch+fctx.call_site], 1  | * | call __ZNSs6appendERKSs  ",gcc,1
"call __ZNSs6appendERKSs   | * | lea eax, [esp+5Ch+fctx] ",gcc,1
"mov eax, [esp+5Ch+arg_0]  | * | pop ebp ",gcc,1
pop ebp  | * | loc_412043:  ,gcc,1
"retn  | * | mov eax, [esp+arg_20] ",gcc,1
"loc_412043:   | * | mov [esp+lpuexcpt], eax ",gcc,1
"mov eax, [esp+arg_20]  | * | mov ecx, [esp+arg_5C] ",gcc,1
"mov ecx, [esp+arg_5C]  | * | mov eax, [esp+lpuexcpt] ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_ endp ",gcc,1
call __Unwind_SjLj_Resume  | * | public __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_ ,gcc,1
__ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ERKS6_S8_ endp  | * | __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_ proc near ,gcc,1
var_68 = dword ptr -68h  | * | var_51 = byte ptr -51h ,data,1
var_51 = byte ptr -51h  | * | var_2C = dword ptr -2Ch ,data,1
var_D = byte ptr -0Dh  | * | arg_0 = dword ptr 4 ,data,1
var_C = byte ptr -0Ch  | * | arg_4 = byte ptr 8 ,data,1
arg_4 = byte ptr 8  | * | lpuexcpt = dword ptr 14h ,data,1
"push ebp  | * | mov al, [esp+6Ch+arg_4] ",gcc,1
"sub esp, 68h  | * | mov [esp+6Ch+var_51], al ",gcc,1
"mov al, [esp+6Ch+arg_4]  | * | mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0 ",gcc,1
"mov [esp+6Ch+var_51], al  | * | mov [esp+6Ch+fctx.lsda], offset word_4123D2 ",gcc,1
"mov [esp+6Ch+fctx.personality], offset ___gxx_personality_sj0  | * | lea edx, [esp+6Ch+var_C] ",gcc,1
"mov [esp+6Ch+fctx.lsda], offset word_4123D2  | * | mov [esp+6Ch+fctx.jbuf], edx ",gcc,1
"lea edx, [esp+6Ch+var_C]  | * | mov [esp+6Ch+var_2C], offset loc_41212F ",gcc,1
"mov [esp+6Ch+fctx.jbuf], edx  | * | mov [esp+6Ch+var_28], esp ",gcc,1
"mov [esp+6Ch+var_2C], offset loc_41212F  | * | lea eax, [esp+6Ch+fctx] ",gcc,1
"mov [esp+6Ch+lpfctx], eax   | * | lea eax, [esp+6Ch+var_D] ",gcc,1
"call __Unwind_SjLj_Register  | * | mov [esp+6Ch+var_64], eax ",gcc,1
"mov eax, [edx]  | * | inc eax ",gcc,1
"inc eax  | * | mov [esp+6Ch+fctx.call_site], 1 ",gcc,1
"mov ecx, [esp+6Ch+arg_0]  | * | push eax ",gcc,1
"call __ZNSs7reserveEj   | * | movsx eax, [esp+6Ch+var_51] ",gcc,1
"push eax  | * | mov [esp+6Ch+var_68], eax  ",gcc,1
"movsx eax, [esp+6Ch+var_51]  | * | mov [esp+6Ch+lpfctx], 1 ",gcc,1
"mov [esp+6Ch+var_68], eax   | * | mov ecx, [esp+6Ch+arg_0] ",gcc,1
"mov [esp+6Ch+lpfctx], 1  | * | call __ZNSs6appendEjc_part_22  ",gcc,1
"call __ZNSs6appendEjc_part_22   | * | mov eax, [esp+6Ch+arg_8] ",gcc,1
"mov ecx, [esp+6Ch+arg_0]  | * | push ebp ",gcc,1
"push ebp  | * | mov [esp+6Ch+lpfctx], edx  ",gcc,1
"mov eax, [esp+6Ch+arg_0]  | * | pop ebp ",gcc,1
"add esp, 68h  | * | retn ",gcc,1
pop ebp  | * | loc_41212F:  ,gcc,1
"loc_41212F:   | * | mov [esp+lpuexcpt], edx ",gcc,1
"mov [esp+arg_1C], 0FFFFFFFFh  | * | __ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_ endp ",gcc,1
call __Unwind_SjLj_Resume  | * | public __ZnwjPv ,gcc,1
__ZStplIcSt11char_traitsIcESaIcEESbIT_T0_T1_ES3_RKS6_ endp  | * | __ZnwjPv proc near  ,gcc,1
__ZnwjPv proc near   | * | push ebp ,gcc,1
"push ebp  | * | mov eax, [ebp+arg_4] ",gcc,1
"mov eax, [ebp+arg_4]  | * | retn ",gcc,1
pop ebp  | * | __ZnwjPv endp ,gcc,1
retn  | * | __GLOBAL__sub_I___cxa_allocate_exception proc near ,gcc,1
"__GLOBAL__sub_I___cxa_allocate_exception proc near  | * | sub esp, 1Ch ",gcc,1
"sub esp, 1Ch  | * | test edx, edx ",gcc,1
"mov edx, ds:__CRT_MT  | * | jz short loc_412175 ",gcc,1
"test edx, edx  | * | mov [esp+1Ch+mutex], offset __ZN12_GLOBAL__N_115emergency_mutexE  ",gcc,1
jz short loc_412175  | * | call ___gthr_win32_mutex_init_function ,gcc,1
"mov [esp+1Ch+mutex], offset __ZN12_GLOBAL__N_115emergency_mutexE   | * | loc_412175:  ",gcc,1
"call ___gthr_win32_mutex_init_function  | * | mov [esp+1Ch+mutex], offset ___tcf_0  ",gcc,1
loc_412175:   | * | call _atexit ,gcc,1
"mov [esp+1Ch+mutex], offset ___tcf_0   | * | add esp, 1Ch ",gcc,1
call _atexit  | * | retn ,gcc,3
"add esp, 1Ch  | * | __GLOBAL__sub_I___cxa_allocate_exception endp ",gcc,1
__GLOBAL__sub_I___cxa_allocate_exception endp  | * | __GLOBAL__sub_I__ZNSt14error_categoryC2Ev proc near ,gcc,1
"__GLOBAL__sub_I__ZNSt14error_categoryC2Ev proc near  | * | sub esp, 1Ch ",gcc,1
"sub esp, 1Ch  | * | mov [esp+1Ch+var_1C], offset ___tcf_0_0  ",gcc,1
"mov ds:__ZN12_GLOBAL__N_1L25generic_category_instanceE, offset off_414188   | * | call _atexit ",gcc,1
"mov [esp+1Ch+var_1C], offset ___tcf_0_0   | * | mov ds:__ZN12_GLOBAL__N_1L24system_category_instanceE, offset off_4141C8  ",gcc,1
"call _atexit  | * | mov [esp+1Ch+var_1C], offset ___tcf_1  ",gcc,1
"mov ds:__ZN12_GLOBAL__N_1L24system_category_instanceE, offset off_4141C8   | * | call _atexit ",gcc,1
"mov [esp+1Ch+var_1C], offset ___tcf_1   | * | add esp, 1Ch ",gcc,1
"add esp, 1Ch  | * | __GLOBAL__sub_I__ZNSt14error_categoryC2Ev endp ",gcc,1
__GLOBAL__sub_I__ZNSt14error_categoryC2Ev endp  | * | __ZN10__cxxabiv1L30throw_recursive_init_exceptionEv proc near ,gcc,1
"mov [esp+1Ch+thrown_size], 4   | * | mov dword ptr [eax], offset off_416328 ",gcc,1
"call ___cxa_allocate_exception  | * | mov [esp+1Ch+var_14], offset __ZN9__gnu_cxx20recursive_init_errorD1Ev  ",gcc,1
"mov dword ptr [eax], offset off_416328  | * | mov [esp+1Ch+lptinfo], offset __ZTIN9__gnu_cxx20recursive_init_errorE  ",gcc,1
"mov [esp+1Ch+var_14], offset __ZN9__gnu_cxx20recursive_init_errorD1Ev   | * | mov [esp+1Ch+thrown_size], eax  ",gcc,1
"mov [esp+1Ch+lptinfo], offset __ZTIN9__gnu_cxx20recursive_init_errorE   | * | call ___cxa_throw ",gcc,1
"mov [esp+1Ch+thrown_size], eax   | * | __ZN10__cxxabiv1L30throw_recursive_init_exceptionEv endp ",gcc,1
__ZN10__cxxabiv1L30throw_recursive_init_exceptionEv endp  | * | _register_frame_ctor proc near  ,gcc,1
"_register_frame_ctor proc near   | * | mov ebp, esp ",gcc,1
"mov ebp, esp  | * | call ___gcc_register_frame ",gcc,1
"sub esp, 18h  | * | mov dword ptr [esp], offset ___gcc_deregister_frame  ",gcc,1
call ___gcc_register_frame  | * | call _atexit ,gcc,1
"mov dword ptr [esp], offset ___gcc_deregister_frame   | * | leave ",gcc,1
leave  | * | _register_frame_ctor endp ,gcc,1
_register_frame_ctor endp  | * | public ___CTOR_LIST__ ,gcc,1
"align 4  | * | ___CTOR_LIST__ dd 0FFFFFFFFh, 41215Ch  ",gcc,1
public ___CTOR_LIST__  | * | dd offset __GLOBAL__sub_I__ZNSt14error_categoryC2Ev ,gcc,1
"___CTOR_LIST__ dd 0FFFFFFFFh, 41215Ch   | * | dd offset _register_frame_ctor ",gcc,1
dd offset __GLOBAL__sub_I__ZNSt14error_categoryC2Ev  | * | dd 0 ,gcc,1
dd offset _register_frame_ctor  | * | public __DTOR_LIST__ ,gcc,1
"dd 0  | * | __DTOR_LIST__ dd 0FFFFFFFFh, 0 ",gcc,1
"public __DTOR_LIST__  | * | dword_412224 dd 601FFFFh, 10000h  ",gcc,1
"__DTOR_LIST__ dd 0FFFFFFFFh, 0  | * | db 2, 0 ",gcc,1
"dword_412224 dd 601FFFFh, 10000h   | * | word_41222E dw 0FFFFh  ",gcc,1
"db 2, 0  | * | dd 201h ",gcc,1
word_41222E dw 0FFFFh   | * | dword_412234 dd 201FFFFh  ,gcc,1
dd 201h  | * | db 2 dup(0) ,gcc,2
dword_412234 dd 201FFFFh   | * | word_41223A dw 0FFFFh  ,gcc,1
db 2 dup(0)  | * | dd 401h ,gcc,2
"word_41223A dw 0FFFFh   | * | db 1, 0 ",gcc,1
dd 401h  | * | word_412242 dw 0FFFFh  ,gcc,1
"db 1, 0  | * | dd 801h, 20001h, 3 ",gcc,1
"word_412242 dw 0FFFFh   | * | dword_412250 dd 10D00FFh, 1010002h, 2 dup(0) ",gcc,1
"dd 801h, 20001h, 3  | * | dword_412260 dd 10D00FFh, 1010004h, 100h, 0 ",gcc,1
"dword_412250 dd 10D00FFh, 1010002h, 2 dup(0)  | * | dword_412270 dd 401FFFFh, 10000h  ",gcc,1
"dword_412260 dd 10D00FFh, 1010004h, 100h, 0  | * | dword_412278 dd 401FFFFh, 10000h  ",gcc,1
"dword_412270 dd 401FFFFh, 10000h   | * | dword_412280 dd 401FFFFh, 10000h  ",gcc,1
"dword_412278 dd 401FFFFh, 10000h   | * | dword_412288 dd 401FFFFh, 10000h  ",gcc,1
"dword_412280 dd 401FFFFh, 10000h   | * | dword_412290 dd 401FFFFh, 10000h  ",gcc,1
"dword_412288 dd 401FFFFh, 10000h   | * | dword_412298 dd 401FFFFh, 10000h  ",gcc,1
"dword_412290 dd 401FFFFh, 10000h   | * | dword_4122A0 dd 401FFFFh, 10000h  ",gcc,1
"dword_412298 dd 401FFFFh, 10000h   | * | dword_4122A8 dd 401FFFFh, 10000h  ",gcc,1
"dword_4122A0 dd 401FFFFh, 10000h   | * | dword_4122B0 dd 401FFFFh, 10000h  ",gcc,1
"dword_4122A8 dd 401FFFFh, 10000h   | * | dword_4122B8 dd 201FFFFh  ",gcc,1
"dword_4122B0 dd 401FFFFh, 10000h   | * | db 2 dup(0) ",gcc,1
dword_4122B8 dd 201FFFFh   | * | word_4122BE dw 0FFFFh  ,gcc,1
"word_4122BE dw 0FFFFh   | * | db 1, 0 ",gcc,1
dd 401h  | * | word_4122C6 dw 0FFFFh  ,gcc,1
"db 1, 0  | * | dd 401h ",gcc,1
"word_4122C6 dw 0FFFFh   | * | db 1, 0 ",gcc,1
dd 401h  | * | word_4122CE dw 0FFFFh  ,gcc,1
"db 1, 0  | * | dd 201h ",gcc,1
"word_4122CE dw 0FFFFh   | * | dword_4122D4 dd 10D00FFh, 7F010002h, 0 ",gcc,1
dd 201h  | * | dd offset __ZTISt9bad_alloc  ,gcc,1
"dword_4122D4 dd 10D00FFh, 7F010002h, 0  | * | dd 1 ",gcc,1
"dd offset __ZTISt9bad_alloc   | * | dword_4122E8 dd 10D00FFh, 1010002h, 2 dup(0) ",gcc,1
"dd 1  | * | dword_4122F8 dd 10900FFh, 7F010002h, 2 dup(0) ",gcc,1
"dword_4122E8 dd 10D00FFh, 1010002h, 2 dup(0)  | * | dword_412308 dd 10900FFh, 7F010002h, 2 dup(0) ",gcc,1
"dword_4122F8 dd 10900FFh, 7F010002h, 2 dup(0)  | * | dword_412318 dd 10900FFh, 7F010002h, 2 dup(0) ",gcc,1
"dword_412308 dd 10900FFh, 7F010002h, 2 dup(0)  | * | dword_412328 dd 10900FFh, 7F010002h, 2 dup(0) ",gcc,1
"dword_412318 dd 10900FFh, 7F010002h, 2 dup(0)  | * | dword_412338 dd 10900FFh, 7F010002h, 2 dup(0) ",gcc,1
"dword_412328 dd 10900FFh, 7F010002h, 2 dup(0)  | * | dword_412348 dd 10900FFh, 1010004h, 7F01h, 0 ",gcc,1
"dword_412338 dd 10900FFh, 7F010002h, 2 dup(0)  | * | dword_412358 dd 10900FFh, 1010004h, 7F01h, 0 ",gcc,1
"dword_412348 dd 10900FFh, 1010004h, 7F01h, 0  | * | dword_412368 dd 10900FFh, 1010004h, 7F01h, 0 ",gcc,1
"dword_412358 dd 10900FFh, 1010004h, 7F01h, 0  | * | dword_412378 dd 10900FFh, 1010004h, 7F01h, 0 ",gcc,1
"dword_412368 dd 10900FFh, 1010004h, 7F01h, 0  | * | dword_412388 dd 1FFFFh  ",gcc,1
"dword_412378 dd 10900FFh, 1010004h, 7F01h, 0  | * | dword_41238C dd 201FFFFh, 0  ",gcc,1
dword_412388 dd 1FFFFh   | * | dword_412394 dd 201FFFFh  ,gcc,1
"dword_41238C dd 201FFFFh, 0   | * | db 2 dup(0) ",gcc,1
dword_412394 dd 201FFFFh   | * | word_41239A dw 0FFFFh  ,gcc,1
db 2 dup(0)  | * | dd 201h ,gcc,3
word_41239A dw 0FFFFh   | * | dword_4123A0 dd 1FFFFh  ,gcc,1
dd 201h  | * | dword_4123A4 dd 1FFFFh  ,gcc,1
dword_4123A0 dd 1FFFFh   | * | dword_4123A8 dd 1FFFFh  ,gcc,1
dword_4123A4 dd 1FFFFh   | * | dword_4123AC dd 1FFFFh  ,gcc,1
dword_4123A8 dd 1FFFFh   | * | dword_4123B0 dd 1FFFFh  ,gcc,1
dword_4123AC dd 1FFFFh   | * | dword_4123B4 dd 1FFFFh  ,gcc,1
dword_4123B0 dd 1FFFFh   | * | dword_4123B8 dd 1FFFFh  ,gcc,1
"dword_4123B4 dd 1FFFFh   | * | dword_4123BC dd 10D00FFh, 1010002h, 2 dup(0) ",gcc,1
dword_4123B8 dd 1FFFFh   | * | dword_4123CC dd 201FFFFh  ,gcc,1
"dword_4123BC dd 10D00FFh, 1010002h, 2 dup(0)  | * | db 2 dup(0) ",gcc,1
dword_4123CC dd 201FFFFh   | * | word_4123D2 dw 0FFFFh  ,gcc,1
word_4123D2 dw 0FFFFh   | * | dword_4123D8 dd 201FFFFh  ,gcc,1
dword_4123D8 dd 201FFFFh   | * | word_4123DE dw 0FFFFh  ,gcc,1
"word_4123DE dw 0FFFFh   | * | dword_4123E4 dd 10900FFh, 7F030002h, 7D0000h, 0 ",gcc,1
"dd 201h  | * | dword_4123F4 dd 201FFFFh, 0  ",gcc,1
"dword_4123E4 dd 10900FFh, 7F030002h, 7D0000h, 0  | * | dword_4123FC dd 201FFFFh, 0  ",gcc,1
"dword_4123F4 dd 201FFFFh, 0   | * | dword_412404 dd 10900FFh, 7F010002h, 2 dup(0) ",gcc,1
"dword_4123FC dd 201FFFFh, 0   | * | dword_412414 dd 10900FFh, 7F010002h, 2 dup(0) ",gcc,1
"dword_412404 dd 10900FFh, 7F010002h, 2 dup(0)  | * | dword_412424 dd 11100FFh, 2030002h, 7D0100h, 0 ",gcc,1
"dword_412414 dd 10900FFh, 7F010002h, 2 dup(0)  | * | dd offset __ZTISt9exception  ",gcc,1
"dword_412424 dd 11100FFh, 2030002h, 7D0100h, 0  | * | align 200h ",gcc,1
dd offset __ZTISt9exception   | * | dd 280h dup(?) ,gcc,1
align 200h  | * | _text ends ,gcc,1
