idiom,label,count
var_24 = dword ptr -24h  | * | var_1C = dword ptr -1Ch ,data,1
var_20 = dword ptr -20h  | * | var_18 = dword ptr -18h ,data,1
var_1C = dword ptr -1Ch  | * | var_14 = dword ptr -14h ,data,1
var_18 = dword ptr -18h  | * | var_10 = dword ptr -10h ,data,1
var_14 = dword ptr -14h  | * | var_C = dword ptr -0Ch ,data,1
var_10 = dword ptr -10h  | * | var_8 = dword ptr -8 ,data,1
var_C = dword ptr -0Ch  | * | var_4 = dword ptr -4 ,data,1
"push rbp  | * | sub rsp, 30h ",xcode,1
"mov rbp, rsp  | * | lea rax, _FF ",xcode,1
"sub rsp, 30h  | * | mov [rbp+var_8], edi ",xcode,1
"lea rax, _FF  | * | mov [rbp+var_C], esi ",xcode,1
"mov [rbp+var_8], edi  | * | movsxd rcx, [rbp+var_C] ",xcode,1
"mov [rbp+var_C], esi  | * | movsxd rdx, [rbp+var_8] ",xcode,1
"movsxd rcx, [rbp+var_C]  | * | imul rdx, 61A80h ",xcode,4
"movsxd rdx, [rbp+var_8]  | * | add rax, rdx ",xcode,4
"imul rdx, 61A80h  | * | cmp dword ptr [rax+rcx*4], 0FFFFFFFFh ",xcode,1
"add rax, rdx  | * | jnz loc_1000015E5 ",xcode,1
"cmp dword ptr [rax+rcx*4], 0FFFFFFFFh  | * | mov eax, [rbp+var_8] ",xcode,1
"jnz loc_1000015E5  | * | cmp eax, cs:_m ",xcode,1
"mov eax, [rbp+var_8]  | * | jnz loc_1000014BF ",xcode,1
"cmp eax, cs:_m  | * | lea rax, _FF ",xcode,1
"jnz loc_1000014BF  | * | movsxd rcx, [rbp+var_C] ",xcode,1
"lea rax, _FF  | * | movsxd rdx, [rbp+var_8] ",xcode,2
"imul rdx, 61A80h  | * | mov dword ptr [rax+rcx*4], 0 ",xcode,4
"add rax, rdx  | * | mov [rbp+var_4], 0 ",xcode,1
"mov dword ptr [rax+rcx*4], 0  | * | jmp loc_100001604 ",xcode,1
"mov [rbp+var_4], 0  | * | loc_1000014BF:  ",xcode,1
"jmp loc_100001604  | * | mov [rbp+var_10], 0 ",xcode,1
loc_1000014BF:   | * | loc_1000014C6:  ,xcode,1
"mov [rbp+var_10], 0  | * | lea rax, _sAA ",xcode,1
"loc_1000014C6:   | * | mov ecx, [rbp+var_10] ",xcode,1
"lea rax, _sAA  | * | movsxd rdx, [rbp+var_8] ",xcode,1
"mov ecx, [rbp+var_10]  | * | cmp ecx, [rax+rdx*4] ",xcode,1
"movsxd rdx, [rbp+var_8]  | * | jge loc_1000015E0 ",xcode,1
"cmp ecx, [rax+rdx*4]  | * | lea rax, _FF ",xcode,1
"jge loc_1000015E0  | * | lea rcx, _S3 ",xcode,1
"lea rax, _FF  | * | lea rdx, _S ",xcode,1
"lea rcx, _S3  | * | lea rsi, _AA ",xcode,1
"lea rdx, _S  | * | movsxd rdi, [rbp+var_10] ",xcode,1
"lea rsi, _AA  | * | movsxd r8, [rbp+var_8] ",xcode,1
"movsxd rdi, [rbp+var_10]  | * | imul r8, 61A80h ",xcode,1
"movsxd r8, [rbp+var_8]  | * | add rsi, r8 ",xcode,1
"imul r8, 61A80h  | * | mov r9d, [rsi+rdi*4] ",xcode,1
"add rsi, r8  | * | mov [rbp+var_18], r9d ",xcode,1
"mov r9d, [rsi+rdi*4]  | * | movsxd rsi, [rbp+var_18] ",xcode,1
"mov [rbp+var_18], r9d  | * | mov r9d, [rdx+rsi*4] ",xcode,1
"movsxd rsi, [rbp+var_18]  | * | shl r9d, 2 ",xcode,1
"mov r9d, [rdx+rsi*4]  | * | mov r10d, [rbp+var_C] ",xcode,1
"shl r9d, 2  | * | and r10d, [rbp+var_18] ",xcode,1
"mov r10d, [rbp+var_C]  | * | movsxd rsi, r10d ",xcode,1
"and r10d, [rbp+var_18]  | * | mov r10d, [rdx+rsi*4] ",xcode,1
"movsxd rsi, r10d  | * | shl r10d, 1 ",xcode,1
"mov r10d, [rdx+rsi*4]  | * | sub r9d, r10d ",xcode,1
"shl r10d, 1  | * | movsxd rdx, [rbp+var_18] ",xcode,1
"sub r9d, r10d  | * | mov r10d, [rcx+rdx*4] ",xcode,1
"movsxd rdx, [rbp+var_18]  | * | shl r10d, 1 ",xcode,1
"mov r10d, [rcx+rdx*4]  | * | sub r9d, r10d ",xcode,1
"shl r10d, 1  | * | mov [rbp+var_14], r9d ",xcode,1
"sub r9d, r10d  | * | movsxd rcx, [rbp+var_C] ",xcode,1
"mov [rbp+var_14], r9d  | * | movsxd rdx, [rbp+var_8] ",xcode,1
"imul rdx, 61A80h  | * | mov r9d, [rax+rcx*4] ",xcode,1
"add rax, rdx  | * | mov r10d, [rbp+var_14] ",xcode,1
"mov r9d, [rax+rcx*4]  | * | mov r11d, [rbp+var_8] ",xcode,1
"mov r10d, [rbp+var_14]  | * | add r11d, 1 ",xcode,1
"mov r11d, [rbp+var_8]  | * | mov esi, [rbp+var_18]  ",xcode,1
"add r11d, 1  | * | mov edi, r11d  ",xcode,1
"mov esi, [rbp+var_18]   | * | mov [rbp+var_1C], r9d ",xcode,1
"mov edi, r11d   | * | mov [rbp+var_20], r10d ",xcode,1
"mov [rbp+var_1C], r9d  | * | call __Z1Fii  ",xcode,1
"mov [rbp+var_20], r10d  | * | mov esi, [rbp+var_20] ",xcode,1
"call __Z1Fii   | * | add esi, eax ",xcode,1
"mov esi, [rbp+var_20]  | * | mov eax, [rbp+var_1C] ",xcode,1
"add esi, eax  | * | cmp eax, esi ",xcode,1
"mov eax, [rbp+var_1C]  | * | jge loc_1000015CB ",xcode,1
"cmp eax, esi  | * | mov eax, [rbp+var_14] ",xcode,1
"jge loc_1000015CB  | * | mov ecx, [rbp+var_8] ",xcode,1
"mov eax, [rbp+var_14]  | * | add ecx, 1 ",xcode,1
"mov ecx, [rbp+var_8]  | * | mov esi, [rbp+var_18]  ",xcode,1
"add ecx, 1  | * | mov edi, ecx  ",xcode,1
"mov esi, [rbp+var_18]   | * | mov [rbp+var_24], eax ",xcode,1
"mov edi, ecx   | * | call __Z1Fii  ",xcode,1
"mov [rbp+var_24], eax  | * | lea rdx, _FF ",xcode,1
"call __Z1Fii   | * | mov ecx, [rbp+var_24] ",xcode,1
"lea rdx, _FF  | * | add ecx, eax ",xcode,1
"mov ecx, [rbp+var_24]  | * | movsxd r8, [rbp+var_C] ",xcode,1
"add ecx, eax  | * | movsxd r9, [rbp+var_8] ",xcode,1
"movsxd r8, [rbp+var_C]  | * | imul r9, 61A80h ",xcode,1
"movsxd r9, [rbp+var_8]  | * | add rdx, r9 ",xcode,1
"imul r9, 61A80h  | * | mov [rdx+r8*4], ecx ",xcode,1
"add rdx, r9  | * | loc_1000015CB:  ",xcode,1
"mov [rdx+r8*4], ecx  | * | jmp $+5 ",xcode,1
loc_1000015CB:   | * | loc_1000015D0:  ,xcode,1
"jmp $+5  | * | mov eax, [rbp+var_10] ",xcode,1
"loc_1000015D0:   | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_10]  | * | mov [rbp+var_10], eax ",xcode,1
"add eax, 1  | * | jmp loc_1000014C6 ",xcode,1
"mov [rbp+var_10], eax  | * | loc_1000015E0:  ",xcode,1
jmp loc_1000014C6  | * | jmp $+5 ,xcode,1
loc_1000015E0:   | * | loc_1000015E5:  ,xcode,1
"jmp $+5  | * | lea rax, _FF ",xcode,1
"loc_1000015E5:   | * | movsxd rcx, [rbp+var_C] ",xcode,1
"imul rdx, 61A80h  | * | mov esi, [rax+rcx*4] ",xcode,1
"add rax, rdx  | * | mov [rbp+var_4], esi ",xcode,1
"mov esi, [rax+rcx*4]  | * | loc_100001604:  ",xcode,1
"mov [rbp+var_4], esi  | * | mov eax, [rbp+var_4] ",xcode,1
"loc_100001604:   | * | add rsp, 30h ",xcode,1
"mov eax, [rbp+var_4]  | * | pop rbp ",xcode,1
"add rsp, 30h  | * | retn ",xcode,1
pop rbp  | * | __Z1Fii endp ,xcode,1
retn  | * | align 10h ,xcode,1
__Z1Fii endp  | * | public _main ,xcode,1
align 10h  | * | _main proc near ,xcode,1
var_C4 = dword ptr -0C4h  | * | var_BC = dword ptr -0BCh ,data,1
var_C0 = dword ptr -0C0h  | * | var_B8 = dword ptr -0B8h ,data,1
var_BC = dword ptr -0BCh  | * | var_B4 = dword ptr -0B4h ,data,1
var_B8 = dword ptr -0B8h  | * | var_B0 = dword ptr -0B0h ,data,1
var_B4 = dword ptr -0B4h  | * | var_AC = dword ptr -0ACh ,data,1
var_B0 = dword ptr -0B0h  | * | var_A8 = dword ptr -0A8h ,data,1
var_AC = dword ptr -0ACh  | * | var_A4 = dword ptr -0A4h ,data,1
var_A8 = dword ptr -0A8h  | * | var_A0 = dword ptr -0A0h ,data,1
var_A4 = dword ptr -0A4h  | * | var_9C = dword ptr -9Ch ,data,1
var_A0 = dword ptr -0A0h  | * | var_95 = byte ptr -95h ,data,1
var_9C = dword ptr -9Ch  | * | var_94 = dword ptr -94h ,data,1
var_95 = byte ptr -95h  | * | var_90 = dword ptr -90h ,data,1
var_94 = dword ptr -94h  | * | var_8C = dword ptr -8Ch ,data,1
var_90 = dword ptr -90h  | * | var_88 = dword ptr -88h ,data,1
var_8C = dword ptr -8Ch  | * | var_84 = dword ptr -84h ,data,1
var_88 = dword ptr -88h  | * | var_80 = dword ptr -80h ,data,1
var_84 = dword ptr -84h  | * | var_7C = dword ptr -7Ch ,data,1
var_80 = dword ptr -80h  | * | var_78 = qword ptr -78h ,data,1
var_7C = dword ptr -7Ch  | * | var_70 = qword ptr -70h ,data,1
var_78 = qword ptr -78h  | * | var_68 = dword ptr -68h ,data,1
var_70 = qword ptr -70h  | * | var_64 = dword ptr -64h ,data,1
var_68 = dword ptr -68h  | * | var_60 = dword ptr -60h ,data,1
var_64 = dword ptr -64h  | * | var_59 = byte ptr -59h ,data,1
var_60 = dword ptr -60h  | * | var_58 = qword ptr -58h ,data,1
var_59 = byte ptr -59h  | * | var_50 = qword ptr -50h ,data,1
var_58 = qword ptr -58h  | * | var_48 = qword ptr -48h ,data,1
var_50 = qword ptr -50h  | * | var_40 = qword ptr -40h ,data,1
var_48 = qword ptr -48h  | * | var_38 = qword ptr -38h ,data,1
var_40 = qword ptr -40h  | * | var_2C = dword ptr -2Ch ,data,1
var_38 = qword ptr -38h  | * | var_28 = qword ptr -28h ,data,1
var_2C = dword ptr -2Ch  | * | var_20 = qword ptr -20h ,data,1
var_28 = qword ptr -28h  | * | var_18 = qword ptr -18h ,data,1
var_20 = qword ptr -20h  | * | var_10 = qword ptr -10h ,data,1
var_18 = qword ptr -18h  | * | var_8 = qword ptr -8 ,data,1
"push rbp  | * | sub rsp, 0D0h ",xcode,1
"mov rbp, rsp  | * | lea rdi, aESmallIn  ",xcode,1
"sub rsp, 0D0h  | * | lea rsi, aR  ",xcode,1
"lea rdi, aESmallIn   | * | mov [rbp+var_60], 0 ",xcode,1
"lea rsi, aR   | * | call _fopen ",xcode,1
"mov [rbp+var_60], 0  | * | lea rdi, aESmallOut  ",xcode,1
"call _fopen  | * | lea rsi, aW  ",xcode,1
"lea rdi, aESmallOut   | * | mov [rbp+var_70], rax ",xcode,1
"lea rsi, aW   | * | call _fopen ",xcode,1
"mov [rbp+var_70], rax  | * | lea rsi, aD  ",xcode,1
"call _fopen  | * | lea rdx, [rbp+var_68] ",xcode,1
"lea rsi, aD   | * | mov [rbp+var_78], rax ",xcode,1
"lea rdx, [rbp+var_68]  | * | mov rdi, [rbp+var_70]  ",xcode,1
"mov [rbp+var_78], rax  | * | mov al, 0 ",xcode,1
"mov rdi, [rbp+var_70]   | * | call _fscanf ",xcode,2
"mov al, 0  | * | mov [rbp+var_64], 0 ",xcode,1
"call _fscanf  | * | mov [rbp+var_8C], eax ",xcode,1
"mov [rbp+var_64], 0  | * | loc_100001673:  ",xcode,1
"mov [rbp+var_8C], eax  | * | mov eax, [rbp+var_64] ",xcode,1
"loc_100001673:   | * | cmp eax, [rbp+var_68] ",xcode,1
"mov eax, [rbp+var_64]  | * | jge loc_100001ECC ",xcode,1
"cmp eax, [rbp+var_68]  | * | lea rsi, aDD  ",xcode,1
"jge loc_100001ECC  | * | lea rdx, _m ",xcode,1
"lea rsi, aDD   | * | lea rcx, _n ",xcode,1
"lea rdx, _m  | * | mov [rbp+var_7C], 0 ",xcode,1
"lea rcx, _n  | * | mov rdi, [rbp+var_70]  ",xcode,1
"mov [rbp+var_7C], 0  | * | mov al, 0 ",xcode,1
"mov al, 0  | * | mov [rbp+var_80], 0 ",xcode,1
"call _fscanf  | * | mov [rbp+var_90], eax ",xcode,1
"mov [rbp+var_80], 0  | * | loc_1000016B3:  ",xcode,1
"mov [rbp+var_90], eax  | * | cmp [rbp+var_80], 14h ",xcode,1
loc_1000016B3:   | * | jge loc_100001725 ,xcode,1
"cmp [rbp+var_80], 14h  | * | mov [rbp+var_84], 0 ",xcode,1
jge loc_100001725  | * | loc_1000016CA:  ,xcode,1
"mov [rbp+var_84], 0  | * | cmp [rbp+var_84], 14h ",xcode,1
loc_1000016CA:   | * | jge loc_100001710 ,xcode,1
"cmp [rbp+var_84], 14h  | * | lea rax, _C ",xcode,1
"jge loc_100001710  | * | movsxd rcx, [rbp+var_84] ",xcode,1
"lea rax, _C  | * | movsxd rdx, [rbp+var_80] ",xcode,2
"movsxd rcx, [rbp+var_84]  | * | imul rdx, 14h ",xcode,3
"movsxd rdx, [rbp+var_80]  | * | add rax, rdx ",xcode,3
"imul rdx, 14h  | * | mov byte ptr [rax+rcx], 2Eh  ",xcode,1
"add rax, rdx  | * | mov eax, [rbp+var_84] ",xcode,1
"mov byte ptr [rax+rcx], 2Eh   | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_84]  | * | mov [rbp+var_84], eax ",xcode,5
"add eax, 1  | * | jmp loc_1000016CA ",xcode,1
"mov [rbp+var_84], eax  | * | loc_100001710:  ",xcode,1
jmp loc_1000016CA  | * | jmp $+5 ,xcode,1
loc_100001710:   | * | loc_100001715:  ,xcode,1
"jmp $+5  | * | mov eax, [rbp+var_80] ",xcode,7
"loc_100001715:   | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_80]  | * | mov [rbp+var_80], eax ",xcode,7
"add eax, 1  | * | jmp loc_1000016B3 ",xcode,1
"mov [rbp+var_80], eax  | * | loc_100001725:  ",xcode,1
"jmp loc_1000016B3  | * | mov [rbp+var_80], 0 ",xcode,1
loc_100001725:   | * | loc_10000172C:  ,xcode,1
"mov [rbp+var_80], 0  | * | mov eax, [rbp+var_80] ",xcode,6
"loc_10000172C:   | * | cmp eax, cs:_m ",xcode,1
"mov eax, [rbp+var_80]  | * | jge loc_10000186D ",xcode,1
"cmp eax, cs:_m  | * | mov [rbp+var_84], 0 ",xcode,1
jge loc_10000186D  | * | loc_100001745:  ,xcode,1
"mov [rbp+var_84], 0  | * | mov eax, [rbp+var_84] ",xcode,3
"loc_100001745:   | * | cmp eax, cs:_n ",xcode,1
"mov eax, [rbp+var_84]  | * | jge loc_100001858 ",xcode,1
"cmp eax, cs:_n  | * | jmp $+5 ",xcode,1
jge loc_100001858  | * | loc_10000175C:  ,xcode,1
"jmp $+5  | * | lea rsi, aC  ",xcode,1
"loc_10000175C:   | * | lea rax, _C ",xcode,1
"lea rsi, aC   | * | mov rdi, [rbp+var_70]  ",xcode,1
"lea rax, _C  | * | movsxd rcx, [rbp+var_84] ",xcode,1
"mov rdi, [rbp+var_70]   | * | movsxd rdx, [rbp+var_80] ",xcode,1
"imul rdx, 14h  | * | add rax, rcx ",xcode,1
"add rax, rdx  | * | mov rdx, rax ",xcode,1
"add rax, rcx  | * | mov al, 0 ",xcode,1
"mov rdx, rax  | * | call _fscanf ",xcode,1
"mov al, 0  | * | mov [rbp+var_94], eax ",xcode,1
"call _fscanf  | * | mov al, 0 ",xcode,1
"mov [rbp+var_94], eax  | * | lea rcx, _C ",xcode,1
"mov al, 0  | * | movsxd rdx, [rbp+var_84] ",xcode,2
"lea rcx, _C  | * | movsxd rsi, [rbp+var_80] ",xcode,3
"movsxd rdx, [rbp+var_84]  | * | imul rsi, 14h ",xcode,3
"movsxd rsi, [rbp+var_80]  | * | add rcx, rsi ",xcode,2
"imul rsi, 14h  | * | movsx edi, byte ptr [rcx+rdx] ",xcode,2
"add rcx, rsi  | * | cmp edi, 2Eh  ",xcode,1
"movsx edi, byte ptr [rcx+rdx]  | * | mov [rbp+var_95], al ",xcode,2
"cmp edi, 2Eh   | * | jz loc_10000182F ",xcode,1
"mov [rbp+var_95], al  | * | mov al, 0 ",xcode,1
"jz loc_10000182F  | * | lea rcx, _C ",xcode,1
"add rcx, rsi  | * | cmp edi, 23h  ",xcode,1
"cmp edi, 23h   | * | jz loc_10000182F ",xcode,1
"mov [rbp+var_95], al  | * | lea rax, _C ",xcode,1
"jz loc_10000182F  | * | movsxd rcx, [rbp+var_84] ",xcode,1
"imul rdx, 14h  | * | movsx esi, byte ptr [rax+rcx] ",xcode,3
"add rax, rdx  | * | cmp esi, 3Fh  ",xcode,1
"movsx esi, byte ptr [rax+rcx]  | * | setnz dil ",xcode,1
"cmp esi, 3Fh   | * | mov [rbp+var_95], dil ",xcode,1
setnz dil  | * | loc_10000182F:  ,xcode,1
"mov [rbp+var_95], dil  | * | mov al, [rbp+var_95] ",xcode,1
"loc_10000182F:   | * | test al, 1 ",xcode,1
"mov al, [rbp+var_95]  | * | jnz loc_10000175C ",xcode,1
"test al, 1  | * | jmp $+5 ",xcode,1
jnz loc_10000175C  | * | loc_100001842:  ,xcode,1
"jmp $+5  | * | mov eax, [rbp+var_84] ",xcode,2
"loc_100001842:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100001745 ",xcode,1
"mov [rbp+var_84], eax  | * | loc_100001858:  ",xcode,1
jmp loc_100001745  | * | jmp $+5 ,xcode,1
loc_100001858:   | * | loc_10000185D:  ,xcode,1
"loc_10000185D:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_10000172C ",xcode,1
"mov [rbp+var_80], eax  | * | loc_10000186D:  ",xcode,1
"jmp loc_10000172C  | * | mov eax, cs:_m ",xcode,1
"loc_10000186D:   | * | cmp eax, cs:_n ",xcode,1
"mov eax, cs:_m  | * | jge loc_1000019B0 ",xcode,1
"cmp eax, cs:_n  | * | mov [rbp+var_80], 0 ",xcode,1
jge loc_1000019B0  | * | loc_100001886:  ,xcode,1
"loc_100001886:   | * | cmp eax, cs:_n ",xcode,1
"mov eax, [rbp+var_80]  | * | jge loc_100001961 ",xcode,1
"cmp eax, cs:_n  | * | mov eax, [rbp+var_80] ",xcode,1
"jge loc_100001961  | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_80]  | * | mov [rbp+var_84], eax ",xcode,1
"add eax, 1  | * | loc_1000018A3:  ",xcode,1
"mov [rbp+var_84], eax  | * | mov eax, [rbp+var_84] ",xcode,1
"loc_1000018A3:   | * | cmp eax, cs:_n ",xcode,1
"mov eax, [rbp+var_84]  | * | jge loc_10000194C ",xcode,1
"cmp eax, cs:_n  | * | lea rax, [rbp+var_59] ",xcode,1
"jge loc_10000194C  | * | lea rcx, _C ",xcode,1
"lea rax, [rbp+var_59]  | * | movsxd rdx, [rbp+var_84] ",xcode,1
"movsxd rsi, [rbp+var_80]  | * | mov rdi, rcx ",xcode,1
"imul rsi, 14h  | * | add rdi, rsi ",xcode,1
"mov rdi, rcx  | * | add rdi, rdx ",xcode,1
"add rdi, rsi  | * | movsxd rdx, [rbp+var_80] ",xcode,1
"add rdi, rdx  | * | movsxd rsi, [rbp+var_84] ",xcode,1
"movsxd rdx, [rbp+var_80]  | * | imul rsi, 14h ",xcode,1
"movsxd rsi, [rbp+var_84]  | * | add rcx, rsi ",xcode,1
"imul rsi, 14h  | * | add rcx, rdx ",xcode,1
"add rcx, rsi  | * | mov [rbp+var_50], rdi ",xcode,1
"add rcx, rdx  | * | mov [rbp+var_58], rcx ",xcode,1
"mov [rbp+var_50], rdi  | * | mov rcx, [rbp+var_50] ",xcode,1
"mov [rbp+var_58], rcx  | * | mov [rbp+var_48], rcx ",xcode,1
"mov rcx, [rbp+var_50]  | * | mov rcx, [rbp+var_48] ",xcode,1
"mov [rbp+var_48], rcx  | * | mov r8b, [rcx] ",xcode,1
"mov rcx, [rbp+var_48]  | * | mov [rbp+var_59], r8b ",xcode,1
"mov r8b, [rcx]  | * | mov rcx, [rbp+var_58] ",xcode,1
"mov [rbp+var_59], r8b  | * | mov [rbp+var_38], rcx ",xcode,1
"mov rcx, [rbp+var_58]  | * | mov rcx, [rbp+var_38] ",xcode,1
"mov [rbp+var_38], rcx  | * | mov r8b, [rcx] ",xcode,1
"mov rcx, [rbp+var_38]  | * | mov rcx, [rbp+var_50] ",xcode,1
"mov r8b, [rcx]  | * | mov [rcx], r8b ",xcode,1
"mov rcx, [rbp+var_50]  | * | mov [rbp+var_40], rax ",xcode,1
"mov [rcx], r8b  | * | mov rax, [rbp+var_40] ",xcode,1
"mov [rbp+var_40], rax  | * | mov r8b, [rax] ",xcode,1
"mov rax, [rbp+var_40]  | * | mov rax, [rbp+var_58] ",xcode,1
"mov r8b, [rax]  | * | mov [rax], r8b ",xcode,1
"mov rax, [rbp+var_58]  | * | mov eax, [rbp+var_84] ",xcode,1
"mov [rax], r8b  | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_1000018A3 ",xcode,1
"mov [rbp+var_84], eax  | * | loc_10000194C:  ",xcode,1
jmp loc_1000018A3  | * | jmp $+5 ,xcode,1
loc_10000194C:   | * | loc_100001951:  ,xcode,1
"loc_100001951:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100001886 ",xcode,1
"mov [rbp+var_80], eax  | * | loc_100001961:  ",xcode,1
"jmp loc_100001886  | * | lea rax, [rbp+var_2C] ",xcode,1
"loc_100001961:   | * | lea rcx, _m ",xcode,1
"lea rax, [rbp+var_2C]  | * | lea rdx, _n ",xcode,1
"lea rcx, _m  | * | mov [rbp+var_20], rdx ",xcode,1
"lea rdx, _n  | * | mov [rbp+var_28], rcx ",xcode,1
"mov [rbp+var_20], rdx  | * | mov rcx, [rbp+var_20] ",xcode,1
"mov [rbp+var_28], rcx  | * | mov [rbp+var_18], rcx ",xcode,1
"mov rcx, [rbp+var_20]  | * | mov rcx, [rbp+var_18] ",xcode,1
"mov [rbp+var_18], rcx  | * | mov esi, [rcx] ",xcode,1
"mov rcx, [rbp+var_18]  | * | mov [rbp+var_2C], esi ",xcode,1
"mov esi, [rcx]  | * | mov rcx, [rbp+var_28] ",xcode,1
"mov [rbp+var_2C], esi  | * | mov [rbp+var_8], rcx ",xcode,1
"mov rcx, [rbp+var_28]  | * | mov rcx, [rbp+var_8] ",xcode,1
"mov [rbp+var_8], rcx  | * | mov esi, [rcx] ",xcode,1
"mov rcx, [rbp+var_8]  | * | mov rcx, [rbp+var_20] ",xcode,1
"mov esi, [rcx]  | * | mov [rcx], esi ",xcode,1
"mov rcx, [rbp+var_20]  | * | mov [rbp+var_10], rax ",xcode,1
"mov [rcx], esi  | * | mov rax, [rbp+var_10] ",xcode,1
"mov [rbp+var_10], rax  | * | mov esi, [rax] ",xcode,1
"mov rax, [rbp+var_10]  | * | mov rax, [rbp+var_28] ",xcode,1
"mov esi, [rax]  | * | mov [rax], esi ",xcode,1
"mov rax, [rbp+var_28]  | * | loc_1000019B0:  ",xcode,1
"mov [rax], esi  | * | mov [rbp+var_84], 0 ",xcode,1
loc_1000019B0:   | * | loc_1000019BA:  ,xcode,1
"loc_1000019BA:   | * | cmp eax, cs:_m ",xcode,1
"mov eax, [rbp+var_84]  | * | jge loc_1000019F7 ",xcode,1
"cmp eax, cs:_m  | * | lea rax, _sAA ",xcode,1
"jge loc_1000019F7  | * | movsxd rcx, [rbp+var_84] ",xcode,1
"lea rax, _sAA  | * | mov dword ptr [rax+rcx*4], 0 ",xcode,1
"movsxd rcx, [rbp+var_84]  | * | mov eax, [rbp+var_84] ",xcode,1
"mov dword ptr [rax+rcx*4], 0  | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_1000019BA ",xcode,1
"mov [rbp+var_84], eax  | * | loc_1000019F7:  ",xcode,1
"jmp loc_1000019BA  | * | mov [rbp+var_84], 0 ",xcode,1
loc_1000019F7:   | * | loc_100001A01:  ,xcode,1
"loc_100001A01:   | * | cmp eax, cs:_m ",xcode,1
"mov eax, [rbp+var_84]  | * | jge loc_100001CD5 ",xcode,1
"cmp eax, cs:_m  | * | mov [rbp+var_88], 0 ",xcode,1
jge loc_100001CD5  | * | loc_100001A1D:  ,xcode,1
"mov [rbp+var_88], 0  | * | mov eax, 1 ",xcode,2
"loc_100001A1D:   | * | mov ecx, [rbp+var_88] ",xcode,1
"mov eax, 1  | * | mov edx, cs:_n ",xcode,2
"mov ecx, [rbp+var_88]  | * | mov [rbp+var_9C], ecx ",xcode,1
"mov edx, cs:_n  | * | mov ecx, edx ",xcode,2
"mov [rbp+var_9C], ecx  | * | shl eax, cl ",xcode,1
"mov ecx, edx  | * | mov edx, [rbp+var_9C] ",xcode,1
"shl eax, cl  | * | cmp edx, eax ",xcode,2
"mov edx, [rbp+var_9C]  | * | jge loc_100001CBA ",xcode,1
"cmp edx, eax  | * | lea rax, _V ",xcode,1
"jge loc_100001CBA  | * | movsxd rcx, [rbp+var_88] ",xcode,1
"lea rax, _V  | * | movsxd rdx, [rbp+var_84] ",xcode,5
"movsxd rcx, [rbp+var_88]  | * | imul rdx, 61A80h ",xcode,5
"movsxd rdx, [rbp+var_84]  | * | add rax, rdx ",xcode,7
"imul rdx, 61A80h  | * | mov dword ptr [rax+rcx*4], 1 ",xcode,1
"add rax, rdx  | * | mov [rbp+var_80], 0 ",xcode,1
"mov dword ptr [rax+rcx*4], 1  | * | loc_100001A73:  ",xcode,1
"loc_100001A73:   | * | cmp eax, cs:_n ",xcode,1
"mov eax, [rbp+var_80]  | * | jge loc_100001B71 ",xcode,1
"cmp eax, cs:_n  | * | mov eax, 1 ",xcode,2
"jge loc_100001B71  | * | mov ecx, [rbp+var_88] ",xcode,1
"mov eax, 1  | * | mov edx, [rbp+var_80] ",xcode,2
"mov ecx, [rbp+var_88]  | * | mov [rbp+var_A0], ecx ",xcode,1
"mov edx, [rbp+var_80]  | * | mov ecx, edx ",xcode,4
"mov [rbp+var_A0], ecx  | * | shl eax, cl ",xcode,1
"mov ecx, edx  | * | mov edx, [rbp+var_A0] ",xcode,1
"shl eax, cl  | * | and edx, eax ",xcode,2
"mov edx, [rbp+var_A0]  | * | cmp edx, 0 ",xcode,1
"and edx, eax  | * | jz loc_100001B05 ",xcode,1
"cmp edx, 0  | * | lea rax, _C ",xcode,1
"jz loc_100001B05  | * | movsxd rcx, [rbp+var_80] ",xcode,1
"lea rax, _C  | * | movsxd rdx, [rbp+var_84] ",xcode,2
"movsxd rcx, [rbp+var_80]  | * | imul rdx, 14h ",xcode,2
"add rax, rdx  | * | cmp esi, 2Eh  ",xcode,1
"movsx esi, byte ptr [rax+rcx]  | * | jnz loc_100001B00 ",xcode,1
"cmp esi, 2Eh   | * | lea rax, _V ",xcode,1
"jnz loc_100001B00  | * | movsxd rcx, [rbp+var_88] ",xcode,1
"add rax, rdx  | * | loc_100001B00:  ",xcode,1
"mov dword ptr [rax+rcx*4], 0  | * | jmp loc_100001B5C ",xcode,1
loc_100001B00:   | * | loc_100001B05:  ,xcode,1
"jmp loc_100001B5C  | * | lea rax, _C ",xcode,1
"loc_100001B05:   | * | movsxd rcx, [rbp+var_80] ",xcode,1
"add rax, rdx  | * | cmp esi, 23h  ",xcode,1
"movsx esi, byte ptr [rax+rcx]  | * | jnz loc_100001B57 ",xcode,1
"cmp esi, 23h   | * | lea rax, _V ",xcode,1
"jnz loc_100001B57  | * | movsxd rcx, [rbp+var_88] ",xcode,1
"add rax, rdx  | * | loc_100001B57:  ",xcode,1
"mov dword ptr [rax+rcx*4], 0  | * | jmp $+5 ",xcode,2
loc_100001B57:   | * | loc_100001B5C:  ,xcode,1
jmp $+5  | * | jmp $+5 ,xcode,1
loc_100001B5C:   | * | loc_100001B61:  ,xcode,1
"loc_100001B61:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100001A73 ",xcode,1
"mov [rbp+var_80], eax  | * | loc_100001B71:  ",xcode,1
"jmp loc_100001A73  | * | mov [rbp+var_80], 0 ",xcode,1
loc_100001B71:   | * | loc_100001B78:  ,xcode,1
"loc_100001B78:   | * | mov ecx, cs:_n ",xcode,1
"mov eax, [rbp+var_80]  | * | sub ecx, 2 ",xcode,1
"mov ecx, cs:_n  | * | cmp eax, ecx ",xcode,2
"sub ecx, 2  | * | jge loc_100001C2D ",xcode,1
"cmp eax, ecx  | * | mov eax, 7 ",xcode,1
"jge loc_100001C2D  | * | mov ecx, [rbp+var_88] ",xcode,1
"mov eax, 7  | * | mov edx, [rbp+var_80] ",xcode,1
"mov ecx, [rbp+var_88]  | * | mov [rbp+var_A4], ecx ",xcode,1
"mov [rbp+var_A4], ecx  | * | mov edx, eax ",xcode,1
"mov ecx, edx  | * | shl edx, cl ",xcode,2
"mov edx, eax  | * | mov esi, [rbp+var_A4] ",xcode,1
"shl edx, cl  | * | and esi, edx ",xcode,2
"mov esi, [rbp+var_A4]  | * | mov ecx, [rbp+var_80] ",xcode,1
"and esi, edx  | * | shl eax, cl ",xcode,2
"mov ecx, [rbp+var_80]  | * | cmp esi, eax ",xcode,2
"shl eax, cl  | * | jnz loc_100001C18 ",xcode,1
"cmp esi, eax  | * | lea rax, _C ",xcode,1
"jnz loc_100001C18  | * | mov ecx, [rbp+var_80] ",xcode,1
"lea rax, _C  | * | add ecx, 1 ",xcode,1
"mov ecx, [rbp+var_80]  | * | movsxd rdx, ecx ",xcode,1
"add ecx, 1  | * | movsxd rsi, [rbp+var_84] ",xcode,1
"movsxd rdx, ecx  | * | imul rsi, 14h ",xcode,1
"movsxd rsi, [rbp+var_84]  | * | add rax, rsi ",xcode,1
"imul rsi, 14h  | * | movsx ecx, byte ptr [rax+rdx] ",xcode,1
"add rax, rsi  | * | cmp ecx, 3Fh  ",xcode,1
"movsx ecx, byte ptr [rax+rdx]  | * | jnz loc_100001C18 ",xcode,1
"cmp ecx, 3Fh   | * | lea rax, _V ",xcode,1
"jnz loc_100001C18  | * | movsxd rcx, [rbp+var_88] ",xcode,1
"add rax, rdx  | * | loc_100001C18:  ",xcode,1
loc_100001C18:   | * | loc_100001C1D:  ,xcode,1
"loc_100001C1D:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100001B78 ",xcode,1
"mov [rbp+var_80], eax  | * | loc_100001C2D:  ",xcode,1
"jmp loc_100001B78  | * | lea rax, _V ",xcode,1
"loc_100001C2D:   | * | movsxd rcx, [rbp+var_88] ",xcode,1
"imul rdx, 61A80h  | * | cmp dword ptr [rax+rcx*4], 1 ",xcode,1
"add rax, rdx  | * | jnz loc_100001C9F ",xcode,1
"cmp dword ptr [rax+rcx*4], 1  | * | lea rax, _sAA ",xcode,1
"jnz loc_100001C9F  | * | lea rcx, _AA ",xcode,1
"lea rax, _sAA  | * | mov edx, [rbp+var_88] ",xcode,1
"lea rcx, _AA  | * | movsxd rsi, [rbp+var_84] ",xcode,1
"mov edx, [rbp+var_88]  | * | movsxd rsi, dword ptr [rax+rsi*4] ",xcode,1
"movsxd rsi, [rbp+var_84]  | * | movsxd rdi, [rbp+var_84] ",xcode,1
"movsxd rsi, dword ptr [rax+rsi*4]  | * | imul rdi, 61A80h ",xcode,1
"movsxd rdi, [rbp+var_84]  | * | add rcx, rdi ",xcode,1
"imul rdi, 61A80h  | * | mov [rcx+rsi*4], edx ",xcode,1
"add rcx, rdi  | * | movsxd rcx, [rbp+var_84] ",xcode,1
"mov [rcx+rsi*4], edx  | * | mov edx, [rax+rcx*4] ",xcode,1
"movsxd rcx, [rbp+var_84]  | * | add edx, 1 ",xcode,1
"mov edx, [rax+rcx*4]  | * | mov [rax+rcx*4], edx ",xcode,3
"add edx, 1  | * | loc_100001C9F:  ",xcode,1
"mov [rax+rcx*4], edx  | * | jmp $+5 ",xcode,3
loc_100001C9F:   | * | loc_100001CA4:  ,xcode,1
"jmp $+5  | * | mov eax, [rbp+var_88] ",xcode,2
"loc_100001CA4:   | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_88]  | * | mov [rbp+var_88], eax ",xcode,2
"add eax, 1  | * | jmp loc_100001A1D ",xcode,1
"mov [rbp+var_88], eax  | * | loc_100001CBA:  ",xcode,1
jmp loc_100001A1D  | * | jmp $+5 ,xcode,1
loc_100001CBA:   | * | loc_100001CBF:  ,xcode,1
"loc_100001CBF:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100001A01 ",xcode,1
"mov [rbp+var_84], eax  | * | loc_100001CD5:  ",xcode,1
"jmp loc_100001A01  | * | mov [rbp+var_88], 0 ",xcode,1
loc_100001CD5:   | * | loc_100001CDF:  ,xcode,1
"loc_100001CDF:   | * | mov ecx, [rbp+var_88] ",xcode,1
"mov ecx, [rbp+var_88]  | * | mov [rbp+var_A8], ecx ",xcode,1
"mov [rbp+var_A8], ecx  | * | shl eax, cl ",xcode,1
"mov ecx, edx  | * | mov edx, [rbp+var_A8] ",xcode,1
"mov edx, [rbp+var_A8]  | * | jge loc_100001E3A ",xcode,1
"cmp edx, eax  | * | lea rax, _S ",xcode,1
"jge loc_100001E3A  | * | movsxd rcx, [rbp+var_88] ",xcode,1
"lea rax, _S  | * | mov dword ptr [rax+rcx*4], 0 ",xcode,1
"movsxd rcx, [rbp+var_88]  | * | mov [rbp+var_80], 0 ",xcode,2
"mov dword ptr [rax+rcx*4], 0  | * | loc_100001D24:  ",xcode,1
"loc_100001D24:   | * | cmp eax, cs:_n ",xcode,1
"mov eax, [rbp+var_80]  | * | jge loc_100001D8E ",xcode,1
"jge loc_100001D8E  | * | mov ecx, [rbp+var_88] ",xcode,1
"mov ecx, [rbp+var_88]  | * | mov [rbp+var_AC], ecx ",xcode,1
"mov [rbp+var_AC], ecx  | * | shl eax, cl ",xcode,1
"mov ecx, edx  | * | mov edx, [rbp+var_AC] ",xcode,1
"mov edx, [rbp+var_AC]  | * | cmp edx, 0 ",xcode,1
"and edx, eax  | * | jz loc_100001D79 ",xcode,1
"cmp edx, 0  | * | lea rax, _S ",xcode,1
"jz loc_100001D79  | * | movsxd rcx, [rbp+var_88] ",xcode,1
"lea rax, _S  | * | mov edx, [rax+rcx*4] ",xcode,1
"movsxd rcx, [rbp+var_88]  | * | add edx, 1 ",xcode,2
"add edx, 1  | * | loc_100001D79:  ",xcode,1
loc_100001D79:   | * | loc_100001D7E:  ,xcode,1
"loc_100001D7E:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100001D24 ",xcode,1
"mov [rbp+var_80], eax  | * | loc_100001D8E:  ",xcode,1
"jmp loc_100001D24  | * | lea rax, _S3 ",xcode,1
"loc_100001D8E:   | * | movsxd rcx, [rbp+var_88] ",xcode,1
"lea rax, _S3  | * | mov dword ptr [rax+rcx*4], 0 ",xcode,1
"mov dword ptr [rax+rcx*4], 0  | * | loc_100001DAA:  ",xcode,1
"loc_100001DAA:   | * | mov ecx, cs:_n ",xcode,1
"mov eax, [rbp+var_80]  | * | sub ecx, 1 ",xcode,1
"sub ecx, 1  | * | jge loc_100001E1F ",xcode,1
"cmp eax, ecx  | * | mov eax, 3 ",xcode,1
"jge loc_100001E1F  | * | mov ecx, [rbp+var_88] ",xcode,1
"mov eax, 3  | * | mov edx, [rbp+var_80] ",xcode,1
"mov ecx, [rbp+var_88]  | * | mov [rbp+var_B0], ecx ",xcode,1
"mov [rbp+var_B0], ecx  | * | mov edx, eax ",xcode,1
"mov edx, eax  | * | mov esi, [rbp+var_B0] ",xcode,1
"mov esi, [rbp+var_B0]  | * | mov ecx, [rbp+var_80] ",xcode,1
"shl eax, cl  | * | jnz loc_100001E0A ",xcode,1
"cmp esi, eax  | * | lea rax, _S3 ",xcode,1
"jnz loc_100001E0A  | * | movsxd rcx, [rbp+var_88] ",xcode,1
"lea rax, _S3  | * | mov edx, [rax+rcx*4] ",xcode,1
"add edx, 1  | * | loc_100001E0A:  ",xcode,1
loc_100001E0A:   | * | loc_100001E0F:  ,xcode,1
"loc_100001E0F:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100001DAA ",xcode,1
"mov [rbp+var_80], eax  | * | loc_100001E1F:  ",xcode,1
jmp loc_100001DAA  | * | jmp $+5 ,xcode,1
loc_100001E1F:   | * | loc_100001E24:  ,xcode,1
"loc_100001E24:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100001CDF ",xcode,1
"mov [rbp+var_88], eax  | * | loc_100001E3A:  ",xcode,1
"jmp loc_100001CDF  | * | mov eax, 0 ",xcode,1
"loc_100001E3A:   | * | lea rcx, _FF ",xcode,1
"mov eax, 0  | * | mov esi, 0FFh  ",xcode,1
"lea rcx, _FF  | * | mov rdx, 7A1200h  ",xcode,1
"mov esi, 0FFh   | * | mov rdi, rcx  ",xcode,1
"mov rdx, 7A1200h   | * | mov [rbp+var_B4], eax ",xcode,1
"mov rdi, rcx   | * | call _memset ",xcode,1
"mov [rbp+var_B4], eax  | * | mov edi, [rbp+var_B4]  ",xcode,1
"call _memset  | * | mov esi, [rbp+var_B4]  ",xcode,1
"mov edi, [rbp+var_B4]   | * | call __Z1Fii  ",xcode,1
"mov esi, [rbp+var_B4]   | * | lea rdi, aCaseDD  ",xcode,1
"call __Z1Fii   | * | mov [rbp+var_7C], eax ",xcode,1
"lea rdi, aCaseDD   | * | mov eax, [rbp+var_64] ",xcode,1
"mov [rbp+var_7C], eax  | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_64]  | * | mov edx, [rbp+var_7C] ",xcode,1
"add eax, 1  | * | mov esi, eax ",xcode,1
"mov edx, [rbp+var_7C]  | * | mov al, 0 ",xcode,1
"mov esi, eax  | * | call _printf ",xcode,1
"mov al, 0  | * | lea rsi, aCaseDD  ",xcode,1
"call _printf  | * | mov rdi, [rbp+var_78]  ",xcode,1
"lea rsi, aCaseDD   | * | mov edx, [rbp+var_64] ",xcode,1
"mov rdi, [rbp+var_78]   | * | add edx, 1 ",xcode,1
"mov edx, [rbp+var_64]  | * | mov ecx, [rbp+var_7C] ",xcode,1
"add edx, 1  | * | mov [rbp+var_B8], eax ",xcode,1
"mov ecx, [rbp+var_7C]  | * | mov al, 0 ",xcode,1
"mov [rbp+var_B8], eax  | * | call _fprintf ",xcode,1
"mov al, 0  | * | mov [rbp+var_BC], eax ",xcode,1
"call _fprintf  | * | mov eax, [rbp+var_64] ",xcode,1
"mov [rbp+var_BC], eax  | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_64]  | * | mov [rbp+var_64], eax ",xcode,1
"add eax, 1  | * | jmp loc_100001673 ",xcode,1
"mov [rbp+var_64], eax  | * | loc_100001ECC:  ",xcode,1
"jmp loc_100001673  | * | mov rdi, [rbp+var_78]  ",xcode,1
loc_100001ECC:   | * | call _fclose ,xcode,1
"mov rdi, [rbp+var_78]   | * | mov rdi, [rbp+var_70]  ",xcode,1
"call _fclose  | * | mov [rbp+var_C0], eax ",xcode,1
"mov rdi, [rbp+var_70]   | * | call _fclose ",xcode,1
"mov [rbp+var_C0], eax  | * | mov ecx, 0 ",xcode,1
"call _fclose  | * | mov [rbp+var_C4], eax ",xcode,1
"mov ecx, 0  | * | mov eax, ecx ",xcode,1
"mov [rbp+var_C4], eax  | * | add rsp, 0D0h ",xcode,1
"mov eax, ecx  | * | pop rbp ",xcode,1
"add rsp, 0D0h  | * | retn ",xcode,1
pop rbp  | * | _main endp ,xcode,1
retn  | * | __text ends ,xcode,1
