idiom,label,count
var_38 = dword ptr -38h  | * | var_30 = dword ptr -30h ,data,1
var_34 = dword ptr -34h  | * | var_2C = dword ptr -2Ch ,data,1
var_30 = dword ptr -30h  | * | var_28 = dword ptr -28h ,data,1
var_2C = dword ptr -2Ch  | * | var_24 = dword ptr -24h ,data,1
var_28 = dword ptr -28h  | * | var_20 = dword ptr -20h ,data,1
var_24 = dword ptr -24h  | * | var_1C = dword ptr -1Ch ,data,1
var_20 = dword ptr -20h  | * | var_18 = dword ptr -18h ,data,1
var_1C = dword ptr -1Ch  | * | var_14 = dword ptr -14h ,data,1
var_18 = dword ptr -18h  | * | var_10 = dword ptr -10h ,data,1
var_14 = dword ptr -14h  | * | var_C = dword ptr -0Ch ,data,1
var_10 = dword ptr -10h  | * | var_8 = dword ptr -8 ,data,1
var_C = dword ptr -0Ch  | * | var_4 = dword ptr -4 ,data,1
"push rbp  | * | sub rsp, 40h ",xcode,1
"mov rbp, rsp  | * | lea rdi, aD  ",xcode,1
"sub rsp, 40h  | * | lea rsi, [rbp+var_8] ",xcode,1
"lea rdi, aD   | * | mov [rbp+var_4], 0 ",xcode,1
"lea rsi, [rbp+var_8]  | * | mov al, 0 ",xcode,1
"mov [rbp+var_4], 0  | * | call _scanf ",xcode,1
"mov al, 0  | * | mov [rbp+var_C], 1 ",xcode,1
"call _scanf  | * | mov [rbp+var_24], eax ",xcode,1
"mov [rbp+var_C], 1  | * | loc_100000DBB:  ",xcode,1
"mov [rbp+var_24], eax  | * | mov eax, [rbp+var_C] ",xcode,1
"loc_100000DBB:   | * | cmp eax, [rbp+var_8] ",xcode,1
"mov eax, [rbp+var_C]  | * | jg loc_100000F45 ",xcode,1
"cmp eax, [rbp+var_8]  | * | lea rdi, aDD  ",xcode,1
"jg loc_100000F45  | * | lea rsi, _n ",xcode,1
"lea rdi, aDD   | * | lea rdx, _m ",xcode,1
"lea rsi, _n  | * | mov al, 0 ",xcode,1
"lea rdx, _m  | * | call _scanf ",xcode,1
"mov al, 0  | * | mov [rbp+var_10], 1 ",xcode,1
"call _scanf  | * | mov [rbp+var_28], eax ",xcode,1
"mov [rbp+var_10], 1  | * | loc_100000DED:  ",xcode,1
"mov [rbp+var_28], eax  | * | imul eax, [rbp+var_10], 0Ah ",xcode,1
"loc_100000DED:   | * | cmp eax, cs:_n ",xcode,1
"imul eax, [rbp+var_10], 0Ah  | * | jg loc_100000E0F ",xcode,1
"cmp eax, cs:_n  | * | imul eax, [rbp+var_10], 0Ah ",xcode,1
"jg loc_100000E0F  | * | mov [rbp+var_10], eax ",xcode,1
"imul eax, [rbp+var_10], 0Ah  | * | jmp loc_100000DED ",xcode,1
"mov [rbp+var_10], eax  | * | loc_100000E0F:  ",xcode,1
"jmp loc_100000DED  | * | mov [rbp+var_14], 0 ",xcode,1
"loc_100000E0F:   | * | mov eax, cs:_n ",xcode,1
"mov [rbp+var_14], 0  | * | mov [rbp+var_18], eax ",xcode,1
"mov eax, cs:_n  | * | loc_100000E1F:  ",xcode,1
"mov [rbp+var_18], eax  | * | mov eax, [rbp+var_18] ",xcode,1
"loc_100000E1F:   | * | cmp eax, cs:_m ",xcode,1
"mov eax, [rbp+var_18]  | * | jg loc_100000F0C ",xcode,1
"cmp eax, cs:_m  | * | mov eax, cs:_ct ",xcode,1
"jg loc_100000F0C  | * | add eax, 1 ",xcode,1
"mov eax, cs:_ct  | * | mov cs:_ct, eax ",xcode,1
"add eax, 1  | * | mov eax, [rbp+var_18] ",xcode,1
"mov cs:_ct, eax  | * | mov [rbp+var_1C], eax ",xcode,1
"mov eax, [rbp+var_18]  | * | mov [rbp+var_20], 0 ",xcode,1
"mov [rbp+var_1C], eax  | * | loc_100000E4C:  ",xcode,1
"mov [rbp+var_20], 0  | * | cmp [rbp+var_20], 0Ah ",xcode,1
loc_100000E4C:   | * | jge loc_100000EF7 ,xcode,1
"cmp [rbp+var_20], 0Ah  | * | mov eax, [rbp+var_1C] ",xcode,1
"jge loc_100000EF7  | * | cmp eax, cs:_n ",xcode,1
"mov eax, [rbp+var_1C]  | * | jl loc_100000EBD ",xcode,1
"cmp eax, cs:_n  | * | mov eax, [rbp+var_1C] ",xcode,1
"jl loc_100000EBD  | * | cmp eax, cs:_m ",xcode,1
"mov eax, [rbp+var_1C]  | * | jg loc_100000EBD ",xcode,1
"cmp eax, cs:_m  | * | mov eax, [rbp+var_1C] ",xcode,1
"jg loc_100000EBD  | * | cmp eax, [rbp+var_18] ",xcode,1
"mov eax, [rbp+var_1C]  | * | jz loc_100000EBD ",xcode,1
"cmp eax, [rbp+var_18]  | * | lea rax, _was ",xcode,1
"jz loc_100000EBD  | * | movsxd rcx, [rbp+var_1C] ",xcode,1
"lea rax, _was  | * | mov edx, [rax+rcx*4] ",xcode,1
"movsxd rcx, [rbp+var_1C]  | * | cmp edx, cs:_ct ",xcode,1
"mov edx, [rax+rcx*4]  | * | jz loc_100000EBD ",xcode,1
"cmp edx, cs:_ct  | * | lea rax, _was ",xcode,1
"jz loc_100000EBD  | * | mov ecx, cs:_ct ",xcode,1
"lea rax, _was  | * | movsxd rdx, [rbp+var_1C] ",xcode,1
"mov ecx, cs:_ct  | * | mov [rax+rdx*4], ecx ",xcode,1
"movsxd rdx, [rbp+var_1C]  | * | mov ecx, [rbp+var_14] ",xcode,1
"mov [rax+rdx*4], ecx  | * | add ecx, 1 ",xcode,1
"mov ecx, [rbp+var_14]  | * | mov [rbp+var_14], ecx ",xcode,1
"add ecx, 1  | * | loc_100000EBD:  ",xcode,1
"mov [rbp+var_14], ecx  | * | mov eax, 0Ah ",xcode,1
"loc_100000EBD:   | * | mov ecx, [rbp+var_1C] ",xcode,1
"mov eax, 0Ah  | * | mov [rbp+var_2C], eax ",xcode,1
"mov ecx, [rbp+var_1C]  | * | mov eax, ecx ",xcode,1
"mov [rbp+var_2C], eax  | * | cdq ",xcode,1
"mov eax, ecx  | * | mov ecx, [rbp+var_2C] ",xcode,1
cdq  | * | idiv ecx ,xcode,2
"mov ecx, [rbp+var_2C]  | * | mov edx, [rbp+var_1C] ",xcode,1
"idiv ecx  | * | mov [rbp+var_30], eax ",xcode,1
"mov edx, [rbp+var_1C]  | * | mov eax, edx ",xcode,1
"mov [rbp+var_30], eax  | * | cdq ",xcode,1
"mov eax, edx  | * | idiv ecx ",xcode,1
"cdq  | * | imul edx, [rbp+var_10] ",xcode,1
"idiv ecx  | * | mov eax, [rbp+var_30] ",xcode,1
"imul edx, [rbp+var_10]  | * | add eax, edx ",xcode,1
"mov eax, [rbp+var_30]  | * | mov [rbp+var_1C], eax ",xcode,1
"add eax, edx  | * | mov eax, [rbp+var_20] ",xcode,1
"mov [rbp+var_1C], eax  | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_20]  | * | mov [rbp+var_20], eax ",xcode,1
"add eax, 1  | * | jmp loc_100000E4C ",xcode,1
"mov [rbp+var_20], eax  | * | loc_100000EF7:  ",xcode,1
jmp loc_100000E4C  | * | jmp $+5 ,xcode,1
loc_100000EF7:   | * | loc_100000EFC:  ,xcode,1
"jmp $+5  | * | mov eax, [rbp+var_18] ",xcode,1
"loc_100000EFC:   | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_18]  | * | mov [rbp+var_18], eax ",xcode,1
"add eax, 1  | * | jmp loc_100000E1F ",xcode,1
"mov [rbp+var_18], eax  | * | loc_100000F0C:  ",xcode,1
"jmp loc_100000E1F  | * | lea rdi, aCaseDD  ",xcode,1
"loc_100000F0C:   | * | mov eax, 2 ",xcode,1
"lea rdi, aCaseDD   | * | mov esi, [rbp+var_C] ",xcode,1
"mov eax, 2  | * | mov ecx, [rbp+var_14] ",xcode,1
"mov esi, [rbp+var_C]  | * | mov [rbp+var_34], eax ",xcode,1
"mov ecx, [rbp+var_14]  | * | mov eax, ecx ",xcode,1
"mov [rbp+var_34], eax  | * | cdq ",xcode,1
"mov eax, ecx  | * | mov ecx, [rbp+var_34] ",xcode,1
"mov ecx, [rbp+var_34]  | * | mov edx, eax ",xcode,1
"idiv ecx  | * | mov al, 0 ",xcode,1
"mov edx, eax  | * | call _printf ",xcode,1
"mov al, 0  | * | mov [rbp+var_38], eax ",xcode,1
"call _printf  | * | mov eax, [rbp+var_C] ",xcode,1
"mov [rbp+var_38], eax  | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_C]  | * | mov [rbp+var_C], eax ",xcode,1
"add eax, 1  | * | jmp loc_100000DBB ",xcode,1
"mov [rbp+var_C], eax  | * | loc_100000F45:  ",xcode,1
"jmp loc_100000DBB  | * | mov eax, 0 ",xcode,1
"loc_100000F45:   | * | add rsp, 40h ",xcode,1
"mov eax, 0  | * | pop rbp ",xcode,1
"add rsp, 40h  | * | retn ",xcode,1
pop rbp  | * | _main endp ,xcode,1
retn  | * | __text ends ,xcode,1
