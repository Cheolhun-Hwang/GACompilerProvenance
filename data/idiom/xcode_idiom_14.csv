idiom,label,count
var_2C = dword ptr -2Ch  | * | var_24 = dword ptr -24h ,data,1
var_28 = dword ptr -28h  | * | var_20 = dword ptr -20h ,data,1
var_24 = dword ptr -24h  | * | var_1C = dword ptr -1Ch ,data,1
var_20 = dword ptr -20h  | * | var_18 = dword ptr -18h ,data,1
var_1C = dword ptr -1Ch  | * | var_14 = dword ptr -14h ,data,1
var_18 = dword ptr -18h  | * | var_10 = dword ptr -10h ,data,1
var_14 = dword ptr -14h  | * | var_C = dword ptr -0Ch ,data,1
var_10 = dword ptr -10h  | * | var_8 = dword ptr -8 ,data,1
var_C = dword ptr -0Ch  | * | var_4 = dword ptr -4 ,data,1
"push rbp  | * | sub rsp, 30h ",xcode,1
"mov rbp, rsp  | * | lea rdi, aD  ",xcode,1
"sub rsp, 30h  | * | lea rsi, [rbp+var_C] ",xcode,1
"lea rdi, aD   | * | mov [rbp+var_4], 0 ",xcode,1
"lea rsi, [rbp+var_C]  | * | mov al, 0 ",xcode,1
"mov [rbp+var_4], 0  | * | call _scanf ",xcode,1
"mov al, 0  | * | mov [rbp+var_8], 1 ",xcode,1
"call _scanf  | * | mov [rbp+var_18], eax ",xcode,1
"mov [rbp+var_8], 1  | * | loc_100000DAB:  ",xcode,1
"mov [rbp+var_18], eax  | * | mov eax, [rbp+var_8] ",xcode,1
"loc_100000DAB:   | * | cmp eax, [rbp+var_C] ",xcode,1
"mov eax, [rbp+var_8]  | * | jg loc_100000F3B ",xcode,1
"cmp eax, [rbp+var_C]  | * | lea rdi, aDDD  ",xcode,1
"jg loc_100000F3B  | * | lea rsi, _n ",xcode,1
"lea rdi, aDDD   | * | lea rdx, _s ",xcode,1
"lea rsi, _n  | * | lea rcx, _p ",xcode,1
"lea rdx, _s  | * | mov al, 0 ",xcode,1
"lea rcx, _p  | * | call _scanf ",xcode,1
"mov al, 0  | * | mov [rbp+var_10], 0 ",xcode,1
"call _scanf  | * | mov [rbp+var_1C], eax ",xcode,1
"mov [rbp+var_10], 0  | * | loc_100000DE4:  ",xcode,1
"mov [rbp+var_1C], eax  | * | mov eax, [rbp+var_10] ",xcode,1
"loc_100000DE4:   | * | cmp eax, cs:_n ",xcode,1
"mov eax, [rbp+var_10]  | * | jge loc_100000E29 ",xcode,1
"cmp eax, cs:_n  | * | lea rdi, aD_0  ",xcode,1
"jge loc_100000E29  | * | lea rax, _t ",xcode,1
"lea rdi, aD_0   | * | movsxd rcx, [rbp+var_10] ",xcode,1
"lea rax, _t  | * | shl rcx, 2 ",xcode,1
"movsxd rcx, [rbp+var_10]  | * | add rax, rcx ",xcode,1
"shl rcx, 2  | * | mov rsi, rax ",xcode,1
"add rax, rcx  | * | mov al, 0 ",xcode,1
"mov rsi, rax  | * | call _scanf ",xcode,1
"mov al, 0  | * | mov [rbp+var_20], eax ",xcode,1
"call _scanf  | * | mov eax, [rbp+var_10] ",xcode,1
"mov [rbp+var_20], eax  | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_10]  | * | mov [rbp+var_10], eax ",xcode,2
"add eax, 1  | * | jmp loc_100000DE4 ",xcode,1
"mov [rbp+var_10], eax  | * | loc_100000E29:  ",xcode,1
"jmp loc_100000DE4  | * | mov [rbp+var_14], 0 ",xcode,1
"loc_100000E29:   | * | mov [rbp+var_10], 0 ",xcode,1
"mov [rbp+var_14], 0  | * | loc_100000E37:  ",xcode,1
"mov [rbp+var_10], 0  | * | mov eax, [rbp+var_10] ",xcode,1
"loc_100000E37:   | * | cmp eax, cs:_n ",xcode,1
"mov eax, [rbp+var_10]  | * | jge loc_100000F14 ",xcode,1
"cmp eax, cs:_n  | * | mov eax, 3 ",xcode,1
"jge loc_100000F14  | * | lea rcx, _t ",xcode,1
"mov eax, 3  | * | movsxd rdx, [rbp+var_10] ",xcode,2
"lea rcx, _t  | * | mov esi, [rcx+rdx*4] ",xcode,2
"movsxd rdx, [rbp+var_10]  | * | add esi, 2 ",xcode,1
"mov esi, [rcx+rdx*4]  | * | mov [rbp+var_24], eax ",xcode,1
"add esi, 2  | * | mov eax, esi ",xcode,1
"mov [rbp+var_24], eax  | * | cdq ",xcode,1
"mov eax, esi  | * | mov esi, [rbp+var_24] ",xcode,1
cdq  | * | idiv esi ,xcode,2
"mov esi, [rbp+var_24]  | * | cmp eax, cs:_p ",xcode,1
idiv esi  | * | jl loc_100000E86 ,xcode,1
"cmp eax, cs:_p  | * | mov eax, [rbp+var_14] ",xcode,2
"jl loc_100000E86  | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_14]  | * | mov [rbp+var_14], eax ",xcode,2
"add eax, 1  | * | jmp loc_100000EFF ",xcode,1
"mov [rbp+var_14], eax  | * | loc_100000E86:  ",xcode,1
"jmp loc_100000EFF  | * | cmp cs:_s, 0 ",xcode,1
loc_100000E86:   | * | jle loc_100000EFA ,xcode,1
"cmp cs:_s, 0  | * | lea rax, _t ",xcode,1
"jle loc_100000EFA  | * | movsxd rcx, [rbp+var_10] ",xcode,1
"lea rax, _t  | * | cmp dword ptr [rax+rcx*4], 2 ",xcode,1
"movsxd rcx, [rbp+var_10]  | * | jl loc_100000EFA ",xcode,1
"cmp dword ptr [rax+rcx*4], 2  | * | mov eax, 3 ",xcode,1
"jl loc_100000EFA  | * | lea rcx, _t ",xcode,1
"movsxd rdx, [rbp+var_10]  | * | add esi, 4 ",xcode,1
"mov esi, [rcx+rdx*4]  | * | mov [rbp+var_28], eax ",xcode,1
"add esi, 4  | * | mov eax, esi ",xcode,1
"mov [rbp+var_28], eax  | * | cdq ",xcode,1
"mov eax, esi  | * | mov esi, [rbp+var_28] ",xcode,1
"mov esi, [rbp+var_28]  | * | cmp eax, cs:_p ",xcode,1
idiv esi  | * | jl loc_100000EFA ,xcode,1
"jl loc_100000EFA  | * | add eax, 1 ",xcode,1
"add eax, 1  | * | mov eax, cs:_s ",xcode,1
"mov [rbp+var_14], eax  | * | add eax, 0FFFFFFFFh ",xcode,1
"mov eax, cs:_s  | * | mov cs:_s, eax ",xcode,1
"add eax, 0FFFFFFFFh  | * | loc_100000EFA:  ",xcode,1
"mov cs:_s, eax  | * | jmp $+5 ",xcode,1
loc_100000EFA:   | * | loc_100000EFF:  ,xcode,1
jmp $+5  | * | jmp $+5 ,xcode,1
loc_100000EFF:   | * | loc_100000F04:  ,xcode,1
"jmp $+5  | * | mov eax, [rbp+var_10] ",xcode,1
"loc_100000F04:   | * | add eax, 1 ",xcode,1
"add eax, 1  | * | jmp loc_100000E37 ",xcode,1
"mov [rbp+var_10], eax  | * | loc_100000F14:  ",xcode,1
"jmp loc_100000E37  | * | lea rdi, aCaseDD  ",xcode,1
"loc_100000F14:   | * | mov esi, [rbp+var_8] ",xcode,1
"lea rdi, aCaseDD   | * | mov edx, [rbp+var_14] ",xcode,1
"mov esi, [rbp+var_8]  | * | mov al, 0 ",xcode,1
"mov edx, [rbp+var_14]  | * | call _printf ",xcode,1
"mov al, 0  | * | mov [rbp+var_2C], eax ",xcode,1
"call _printf  | * | mov eax, [rbp+var_8] ",xcode,1
"mov [rbp+var_2C], eax  | * | add eax, 1 ",xcode,1
"mov eax, [rbp+var_8]  | * | mov [rbp+var_8], eax ",xcode,1
"add eax, 1  | * | jmp loc_100000DAB ",xcode,1
"mov [rbp+var_8], eax  | * | loc_100000F3B:  ",xcode,1
"jmp loc_100000DAB  | * | mov eax, 0 ",xcode,1
"loc_100000F3B:   | * | add rsp, 30h ",xcode,1
"mov eax, 0  | * | pop rbp ",xcode,1
"add rsp, 30h  | * | retn ",xcode,1
pop rbp  | * | _main endp ,xcode,1
retn  | * | __text ends ,xcode,1
