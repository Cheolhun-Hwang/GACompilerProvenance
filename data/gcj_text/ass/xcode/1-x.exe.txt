__text:0000000100000F50 ; =============== S U B R O U T I N E =======================================
__text:0000000100000F50
__text:0000000100000F50 ; Attributes: bp-based frame
__text:0000000100000F50
__text:0000000100000F50 ; int __cdecl main(int argc, const char **argv, const char **envp)
__text:0000000100000F50                 public _main
__text:0000000100000F50 _main           proc near
__text:0000000100000F50
__text:0000000100000F50 var_628         = dword ptr -628h
__text:0000000100000F50 var_621         = byte ptr -621h
__text:0000000100000F50 var_620         = qword ptr -620h
__text:0000000100000F50 var_618         = qword ptr -618h
__text:0000000100000F50 var_60C         = dword ptr -60Ch
__text:0000000100000F50 var_608         = qword ptr -608h
__text:0000000100000F50 var_600         = qword ptr -600h
__text:0000000100000F50 var_5F8         = qword ptr -5F8h
__text:0000000100000F50 var_5E9         = byte ptr -5E9h
__text:0000000100000F50 var_5E8         = qword ptr -5E8h
__text:0000000100000F50 var_5E0         = qword ptr -5E0h
__text:0000000100000F50 var_5D8         = qword ptr -5D8h
__text:0000000100000F50 var_5D0         = qword ptr -5D0h
__text:0000000100000F50 var_5C8         = qword ptr -5C8h
__text:0000000100000F50 var_5C0         = qword ptr -5C0h
__text:0000000100000F50 var_5B8         = qword ptr -5B8h
__text:0000000100000F50 var_5B0         = qword ptr -5B0h
__text:0000000100000F50 var_5A8         = qword ptr -5A8h
__text:0000000100000F50 var_59C         = dword ptr -59Ch
__text:0000000100000F50 var_598         = qword ptr -598h
__text:0000000100000F50 var_590         = dword ptr -590h
__text:0000000100000F50 var_58C         = dword ptr -58Ch
__text:0000000100000F50 var_588         = qword ptr -588h
__text:0000000100000F50 var_579         = byte ptr -579h
__text:0000000100000F50 var_578         = qword ptr -578h
__text:0000000100000F50 var_56C         = dword ptr -56Ch
__text:0000000100000F50 var_568         = qword ptr -568h
__text:0000000100000F50 var_560         = qword ptr -560h
__text:0000000100000F50 var_558         = qword ptr -558h
__text:0000000100000F50 var_54C         = dword ptr -54Ch
__text:0000000100000F50 var_548         = qword ptr -548h
__text:0000000100000F50 var_540         = qword ptr -540h
__text:0000000100000F50 var_538         = qword ptr -538h
__text:0000000100000F50 var_530         = qword ptr -530h
__text:0000000100000F50 var_521         = byte ptr -521h
__text:0000000100000F50 var_520         = qword ptr -520h
__text:0000000100000F50 var_518         = qword ptr -518h
__text:0000000100000F50 var_510         = qword ptr -510h
__text:0000000100000F50 var_508         = qword ptr -508h
__text:0000000100000F50 var_500         = qword ptr -500h
__text:0000000100000F50 var_4F8         = qword ptr -4F8h
__text:0000000100000F50 var_4F0         = qword ptr -4F0h
__text:0000000100000F50 var_4E8         = qword ptr -4E8h
__text:0000000100000F50 var_4DC         = dword ptr -4DCh
__text:0000000100000F50 var_4D8         = qword ptr -4D8h
__text:0000000100000F50 var_4CC         = dword ptr -4CCh
__text:0000000100000F50 var_4C8         = byte ptr -4C8h
__text:0000000100000F50 var_4B0         = dword ptr -4B0h
__text:0000000100000F50 var_4AC         = dword ptr -4ACh
__text:0000000100000F50 var_4A8         = dword ptr -4A8h
__text:0000000100000F50 var_4A4         = dword ptr -4A4h
__text:0000000100000F50 var_4A0         = qword ptr -4A0h
__text:0000000100000F50 var_498         = byte ptr -498h
__text:0000000100000F50 var_480         = byte ptr -480h
__text:0000000100000F50 var_468         = dword ptr -468h
__text:0000000100000F50 var_464         = dword ptr -464h
__text:0000000100000F50 var_460         = qword ptr -460h
__text:0000000100000F50 var_458         = qword ptr -458h
__text:0000000100000F50 var_450         = qword ptr -450h
__text:0000000100000F50 var_448         = qword ptr -448h
__text:0000000100000F50 var_440         = qword ptr -440h
__text:0000000100000F50 var_438         = qword ptr -438h
__text:0000000100000F50 var_430         = qword ptr -430h
__text:0000000100000F50 var_428         = qword ptr -428h
__text:0000000100000F50 var_420         = qword ptr -420h
__text:0000000100000F50 var_418         = qword ptr -418h
__text:0000000100000F50 var_410         = qword ptr -410h
__text:0000000100000F50 var_408         = qword ptr -408h
__text:0000000100000F50 var_400         = qword ptr -400h
__text:0000000100000F50 var_3F8         = qword ptr -3F8h
__text:0000000100000F50 var_3F0         = qword ptr -3F0h
__text:0000000100000F50 var_3E8         = qword ptr -3E8h
__text:0000000100000F50 var_3E0         = qword ptr -3E0h
__text:0000000100000F50 var_3D8         = qword ptr -3D8h
__text:0000000100000F50 var_3D0         = qword ptr -3D0h
__text:0000000100000F50 var_3C8         = qword ptr -3C8h
__text:0000000100000F50 var_3C0         = qword ptr -3C0h
__text:0000000100000F50 var_3B8         = qword ptr -3B8h
__text:0000000100000F50 var_3B0         = qword ptr -3B0h
__text:0000000100000F50 var_3A8         = qword ptr -3A8h
__text:0000000100000F50 var_3A0         = qword ptr -3A0h
__text:0000000100000F50 var_398         = qword ptr -398h
__text:0000000100000F50 var_390         = qword ptr -390h
__text:0000000100000F50 var_388         = qword ptr -388h
__text:0000000100000F50 var_380         = qword ptr -380h
__text:0000000100000F50 var_378         = qword ptr -378h
__text:0000000100000F50 var_370         = qword ptr -370h
__text:0000000100000F50 var_368         = qword ptr -368h
__text:0000000100000F50 var_360         = qword ptr -360h
__text:0000000100000F50 var_358         = qword ptr -358h
__text:0000000100000F50 var_350         = qword ptr -350h
__text:0000000100000F50 var_348         = qword ptr -348h
__text:0000000100000F50 var_340         = qword ptr -340h
__text:0000000100000F50 var_338         = qword ptr -338h
__text:0000000100000F50 var_330         = qword ptr -330h
__text:0000000100000F50 var_328         = qword ptr -328h
__text:0000000100000F50 var_320         = qword ptr -320h
__text:0000000100000F50 var_318         = qword ptr -318h
__text:0000000100000F50 var_310         = qword ptr -310h
__text:0000000100000F50 var_308         = qword ptr -308h
__text:0000000100000F50 var_300         = qword ptr -300h
__text:0000000100000F50 var_2F8         = qword ptr -2F8h
__text:0000000100000F50 var_2F0         = qword ptr -2F0h
__text:0000000100000F50 var_2E8         = qword ptr -2E8h
__text:0000000100000F50 var_2E0         = qword ptr -2E0h
__text:0000000100000F50 var_2D8         = qword ptr -2D8h
__text:0000000100000F50 var_2D0         = qword ptr -2D0h
__text:0000000100000F50 var_2C8         = qword ptr -2C8h
__text:0000000100000F50 var_2C0         = qword ptr -2C0h
__text:0000000100000F50 var_2B8         = qword ptr -2B8h
__text:0000000100000F50 var_2B0         = qword ptr -2B0h
__text:0000000100000F50 var_2A8         = qword ptr -2A8h
__text:0000000100000F50 var_2A0         = qword ptr -2A0h
__text:0000000100000F50 var_298         = qword ptr -298h
__text:0000000100000F50 var_290         = qword ptr -290h
__text:0000000100000F50 var_288         = qword ptr -288h
__text:0000000100000F50 var_280         = qword ptr -280h
__text:0000000100000F50 var_278         = qword ptr -278h
__text:0000000100000F50 var_270         = qword ptr -270h
__text:0000000100000F50 var_268         = qword ptr -268h
__text:0000000100000F50 var_260         = qword ptr -260h
__text:0000000100000F50 var_258         = qword ptr -258h
__text:0000000100000F50 var_250         = qword ptr -250h
__text:0000000100000F50 var_248         = qword ptr -248h
__text:0000000100000F50 var_240         = qword ptr -240h
__text:0000000100000F50 var_238         = qword ptr -238h
__text:0000000100000F50 var_230         = qword ptr -230h
__text:0000000100000F50 var_228         = qword ptr -228h
__text:0000000100000F50 var_220         = qword ptr -220h
__text:0000000100000F50 var_218         = qword ptr -218h
__text:0000000100000F50 var_210         = qword ptr -210h
__text:0000000100000F50 var_208         = qword ptr -208h
__text:0000000100000F50 var_200         = qword ptr -200h
__text:0000000100000F50 var_1F8         = qword ptr -1F8h
__text:0000000100000F50 var_1F0         = qword ptr -1F0h
__text:0000000100000F50 var_1E8         = qword ptr -1E8h
__text:0000000100000F50 var_1E0         = qword ptr -1E0h
__text:0000000100000F50 var_1D8         = qword ptr -1D8h
__text:0000000100000F50 var_1D0         = qword ptr -1D0h
__text:0000000100000F50 var_1C8         = qword ptr -1C8h
__text:0000000100000F50 var_1C0         = qword ptr -1C0h
__text:0000000100000F50 var_1B8         = qword ptr -1B8h
__text:0000000100000F50 var_1B0         = qword ptr -1B0h
__text:0000000100000F50 var_1A8         = qword ptr -1A8h
__text:0000000100000F50 var_1A0         = qword ptr -1A0h
__text:0000000100000F50 var_198         = qword ptr -198h
__text:0000000100000F50 var_190         = qword ptr -190h
__text:0000000100000F50 var_188         = qword ptr -188h
__text:0000000100000F50 var_180         = qword ptr -180h
__text:0000000100000F50 var_178         = qword ptr -178h
__text:0000000100000F50 var_170         = qword ptr -170h
__text:0000000100000F50 var_168         = qword ptr -168h
__text:0000000100000F50 var_160         = qword ptr -160h
__text:0000000100000F50 var_158         = qword ptr -158h
__text:0000000100000F50 var_150         = qword ptr -150h
__text:0000000100000F50 var_148         = qword ptr -148h
__text:0000000100000F50 var_140         = qword ptr -140h
__text:0000000100000F50 var_138         = qword ptr -138h
__text:0000000100000F50 var_130         = qword ptr -130h
__text:0000000100000F50 var_128         = qword ptr -128h
__text:0000000100000F50 var_120         = qword ptr -120h
__text:0000000100000F50 var_118         = qword ptr -118h
__text:0000000100000F50 var_110         = qword ptr -110h
__text:0000000100000F50 var_104         = dword ptr -104h
__text:0000000100000F50 var_100         = qword ptr -100h
__text:0000000100000F50 var_F8          = byte ptr -0F8h
__text:0000000100000F50 var_E9          = byte ptr -0E9h
__text:0000000100000F50 var_E8          = qword ptr -0E8h
__text:0000000100000F50 var_E0          = qword ptr -0E0h
__text:0000000100000F50 var_D1          = byte ptr -0D1h
__text:0000000100000F50 var_D0          = qword ptr -0D0h
__text:0000000100000F50 var_C8          = qword ptr -0C8h
__text:0000000100000F50 var_C0          = qword ptr -0C0h
__text:0000000100000F50 var_B8          = qword ptr -0B8h
__text:0000000100000F50 var_B0          = qword ptr -0B0h
__text:0000000100000F50 var_A8          = qword ptr -0A8h
__text:0000000100000F50 var_A0          = qword ptr -0A0h
__text:0000000100000F50 var_98          = qword ptr -98h
__text:0000000100000F50 var_90          = qword ptr -90h
__text:0000000100000F50 var_88          = qword ptr -88h
__text:0000000100000F50 var_80          = qword ptr -80h
__text:0000000100000F50 var_78          = qword ptr -78h
__text:0000000100000F50 var_70          = qword ptr -70h
__text:0000000100000F50 var_68          = qword ptr -68h
__text:0000000100000F50 var_60          = qword ptr -60h
__text:0000000100000F50 var_58          = qword ptr -58h
__text:0000000100000F50 var_50          = qword ptr -50h
__text:0000000100000F50 var_48          = qword ptr -48h
__text:0000000100000F50 var_40          = qword ptr -40h
__text:0000000100000F50 var_38          = qword ptr -38h
__text:0000000100000F50 var_30          = qword ptr -30h
__text:0000000100000F50 var_24          = dword ptr -24h
__text:0000000100000F50 var_20          = qword ptr -20h
__text:0000000100000F50 var_18          = qword ptr -18h
__text:0000000100000F50 var_10          = qword ptr -10h
__text:0000000100000F50 var_8           = qword ptr -8
__text:0000000100000F50
__text:0000000100000F50                 push    rbp
__text:0000000100000F51                 mov     rbp, rsp
__text:0000000100000F54                 sub     rsp, 630h
__text:0000000100000F5B                 mov     [rbp+var_464], 0
__text:0000000100000F65                 mov     [rbp+var_468], 0
__text:0000000100000F6F
__text:0000000100000F6F loc_100000F6F:                          ; CODE XREF: _main+5BD↓j
__text:0000000100000F6F                 cmp     [rbp+var_468], 5
__text:0000000100000F79                 jge     loc_10000152D
__text:0000000100000F7F                 movsxd  rax, [rbp+var_468]
__text:0000000100000F86                 lea     rax, [rax+rax*2]
__text:0000000100000F8A                 lea     rcx, __ZL4cons  ; cons
__text:0000000100000F91                 lea     rsi, [rcx+rax*8]
__text:0000000100000F95                 lea     rdi, [rbp+var_480]
__text:0000000100000F9C                 mov     [rbp+var_4D8], rcx
__text:0000000100000FA3                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_ ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::basic_string(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> const&)
__text:0000000100000FA8                 mov     edx, [rbp+var_468]
__text:0000000100000FAE                 add     edx, 5
__text:0000000100000FB1                 movsxd  rax, edx
__text:0000000100000FB4                 lea     rax, [rax+rax*2]
__text:0000000100000FB8                 mov     rcx, [rbp+var_4D8]
__text:0000000100000FBF                 lea     rsi, [rcx+rax*8]
__text:0000000100000FC3                 lea     rdi, [rbp+var_498]
__text:0000000100000FCA                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_ ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::basic_string(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> const&)
__text:0000000100000FCF                 jmp     $+5
__text:0000000100000FD4 ; ---------------------------------------------------------------------------
__text:0000000100000FD4
__text:0000000100000FD4 loc_100000FD4:                          ; CODE XREF: _main+7F↑j
__text:0000000100000FD4                 mov     [rbp+var_4A8], 0
__text:0000000100000FDE
__text:0000000100000FDE loc_100000FDE:                          ; CODE XREF: _main+58A↓j
__text:0000000100000FDE                 lea     rax, [rbp+var_480]
__text:0000000100000FE5                 mov     ecx, [rbp+var_4A8]
__text:0000000100000FEB                 mov     [rbp+var_460], rax
__text:0000000100000FF2                 mov     rax, [rbp+var_460]
__text:0000000100000FF9                 mov     [rbp+var_458], rax
__text:0000000100001000                 mov     rdx, [rbp+var_458]
__text:0000000100001007                 mov     [rbp+var_450], rdx
__text:000000010000100E                 mov     rdx, [rbp+var_450]
__text:0000000100001015                 mov     [rbp+var_448], rdx
__text:000000010000101C                 mov     rdx, [rbp+var_448]
__text:0000000100001023                 movzx   esi, byte ptr [rdx]
__text:0000000100001026                 and     esi, 1
__text:000000010000102C                 cmp     esi, 0
__text:0000000100001032                 mov     [rbp+var_4DC], ecx
__text:0000000100001038                 mov     [rbp+var_4E8], rax
__text:000000010000103F                 jz      loc_100001086
__text:0000000100001045                 mov     rax, [rbp+var_4E8]
__text:000000010000104C                 mov     [rbp+var_428], rax
__text:0000000100001053                 mov     rcx, [rbp+var_428]
__text:000000010000105A                 mov     [rbp+var_420], rcx
__text:0000000100001061                 mov     rcx, [rbp+var_420]
__text:0000000100001068                 mov     [rbp+var_418], rcx
__text:000000010000106F                 mov     rcx, [rbp+var_418]
__text:0000000100001076                 mov     rcx, [rcx+8]
__text:000000010000107A                 mov     [rbp+var_4F0], rcx
__text:0000000100001081                 jmp     loc_1000010C7
__text:0000000100001086 ; ---------------------------------------------------------------------------
__text:0000000100001086
__text:0000000100001086 loc_100001086:                          ; CODE XREF: _main+EF↑j
__text:0000000100001086                 mov     rax, [rbp+var_4E8]
__text:000000010000108D                 mov     [rbp+var_440], rax
__text:0000000100001094                 mov     rcx, [rbp+var_440]
__text:000000010000109B                 mov     [rbp+var_438], rcx
__text:00000001000010A2                 mov     rcx, [rbp+var_438]
__text:00000001000010A9                 mov     [rbp+var_430], rcx
__text:00000001000010B0                 mov     rcx, [rbp+var_430]
__text:00000001000010B7                 movzx   edx, byte ptr [rcx]
__text:00000001000010BA                 sar     edx, 1
__text:00000001000010BD                 movsxd  rcx, edx
__text:00000001000010C0                 mov     [rbp+var_4F0], rcx
__text:00000001000010C7
__text:00000001000010C7 loc_1000010C7:                          ; CODE XREF: _main+131↑j
__text:00000001000010C7                 mov     rax, [rbp+var_4F0]
__text:00000001000010CE                 mov     ecx, eax
__text:00000001000010D0                 mov     edx, [rbp+var_4DC]
__text:00000001000010D6                 cmp     edx, ecx
__text:00000001000010D8                 jge     loc_1000014DF
__text:00000001000010DE                 lea     rax, [rbp+var_480]
__text:00000001000010E5                 movsxd  rcx, [rbp+var_4A8]
__text:00000001000010EC                 mov     [rbp+var_408], rax
__text:00000001000010F3                 mov     [rbp+var_410], rcx
__text:00000001000010FA                 mov     rax, [rbp+var_408]
__text:0000000100001101                 mov     [rbp+var_400], rax
__text:0000000100001108                 mov     rax, [rbp+var_400]
__text:000000010000110F                 mov     [rbp+var_3F8], rax
__text:0000000100001116                 mov     rcx, [rbp+var_3F8]
__text:000000010000111D                 mov     [rbp+var_3F0], rcx
__text:0000000100001124                 mov     rcx, [rbp+var_3F0]
__text:000000010000112B                 mov     [rbp+var_3E8], rcx
__text:0000000100001132                 mov     rcx, [rbp+var_3E8]
__text:0000000100001139                 movzx   edx, byte ptr [rcx]
__text:000000010000113C                 and     edx, 1
__text:0000000100001142                 cmp     edx, 0
__text:0000000100001148                 mov     [rbp+var_4F8], rax
__text:000000010000114F                 jz      loc_100001196
__text:0000000100001155                 mov     rax, [rbp+var_4F8]
__text:000000010000115C                 mov     [rbp+var_3B8], rax
__text:0000000100001163                 mov     rcx, [rbp+var_3B8]
__text:000000010000116A                 mov     [rbp+var_3B0], rcx
__text:0000000100001171                 mov     rcx, [rbp+var_3B0]
__text:0000000100001178                 mov     [rbp+var_3A8], rcx
__text:000000010000117F                 mov     rcx, [rbp+var_3A8]
__text:0000000100001186                 mov     rcx, [rcx+10h]
__text:000000010000118A                 mov     [rbp+var_500], rcx
__text:0000000100001191                 jmp     loc_1000011F1
__text:0000000100001196 ; ---------------------------------------------------------------------------
__text:0000000100001196
__text:0000000100001196 loc_100001196:                          ; CODE XREF: _main+1FF↑j
__text:0000000100001196                 mov     rax, [rbp+var_4F8]
__text:000000010000119D                 mov     [rbp+var_3E0], rax
__text:00000001000011A4                 mov     rcx, [rbp+var_3E0]
__text:00000001000011AB                 mov     [rbp+var_3D8], rcx
__text:00000001000011B2                 mov     rcx, [rbp+var_3D8]
__text:00000001000011B9                 mov     [rbp+var_3D0], rcx
__text:00000001000011C0                 mov     rcx, [rbp+var_3D0]
__text:00000001000011C7                 add     rcx, 1
__text:00000001000011CE                 mov     [rbp+var_3C8], rcx
__text:00000001000011D5                 mov     rcx, [rbp+var_3C8]
__text:00000001000011DC                 mov     [rbp+var_3C0], rcx
__text:00000001000011E3                 mov     rcx, [rbp+var_3C0]
__text:00000001000011EA                 mov     [rbp+var_500], rcx
__text:00000001000011F1
__text:00000001000011F1 loc_1000011F1:                          ; CODE XREF: _main+241↑j
__text:00000001000011F1                 mov     rax, [rbp+var_500]
__text:00000001000011F8                 add     rax, [rbp+var_410]
__text:00000001000011FF                 mov     [rbp+var_508], rax
__text:0000000100001206                 mov     rax, [rbp+var_508]
__text:000000010000120D                 movsx   ecx, byte ptr [rax]
__text:0000000100001210                 cmp     ecx, 20h ; ' '
__text:0000000100001216                 jz      loc_1000014C4
__text:000000010000121C                 lea     rax, [rbp+var_498]
__text:0000000100001223                 movsxd  rcx, [rbp+var_4A8]
__text:000000010000122A                 mov     [rbp+var_2B0], rax
__text:0000000100001231                 mov     [rbp+var_2B8], rcx
__text:0000000100001238                 mov     rax, [rbp+var_2B0]
__text:000000010000123F                 mov     [rbp+var_2A8], rax
__text:0000000100001246                 mov     rax, [rbp+var_2A8]
__text:000000010000124D                 mov     [rbp+var_2A0], rax
__text:0000000100001254                 mov     rcx, [rbp+var_2A0]
__text:000000010000125B                 mov     [rbp+var_298], rcx
__text:0000000100001262                 mov     rcx, [rbp+var_298]
__text:0000000100001269                 mov     [rbp+var_290], rcx
__text:0000000100001270                 mov     rcx, [rbp+var_290]
__text:0000000100001277                 movzx   edx, byte ptr [rcx]
__text:000000010000127A                 and     edx, 1
__text:0000000100001280                 cmp     edx, 0
__text:0000000100001286                 mov     [rbp+var_510], rax
__text:000000010000128D                 jz      loc_1000012D4
__text:0000000100001293                 mov     rax, [rbp+var_510]
__text:000000010000129A                 mov     [rbp+var_260], rax
__text:00000001000012A1                 mov     rcx, [rbp+var_260]
__text:00000001000012A8                 mov     [rbp+var_258], rcx
__text:00000001000012AF                 mov     rcx, [rbp+var_258]
__text:00000001000012B6                 mov     [rbp+var_250], rcx
__text:00000001000012BD                 mov     rcx, [rbp+var_250]
__text:00000001000012C4                 mov     rcx, [rcx+10h]
__text:00000001000012C8                 mov     [rbp+var_518], rcx
__text:00000001000012CF                 jmp     loc_10000132F
__text:00000001000012D4 ; ---------------------------------------------------------------------------
__text:00000001000012D4
__text:00000001000012D4 loc_1000012D4:                          ; CODE XREF: _main+33D↑j
__text:00000001000012D4                 mov     rax, [rbp+var_510]
__text:00000001000012DB                 mov     [rbp+var_288], rax
__text:00000001000012E2                 mov     rcx, [rbp+var_288]
__text:00000001000012E9                 mov     [rbp+var_280], rcx
__text:00000001000012F0                 mov     rcx, [rbp+var_280]
__text:00000001000012F7                 mov     [rbp+var_278], rcx
__text:00000001000012FE                 mov     rcx, [rbp+var_278]
__text:0000000100001305                 add     rcx, 1
__text:000000010000130C                 mov     [rbp+var_270], rcx
__text:0000000100001313                 mov     rcx, [rbp+var_270]
__text:000000010000131A                 mov     [rbp+var_268], rcx
__text:0000000100001321                 mov     rcx, [rbp+var_268]
__text:0000000100001328                 mov     [rbp+var_518], rcx
__text:000000010000132F
__text:000000010000132F loc_10000132F:                          ; CODE XREF: _main+37F↑j
__text:000000010000132F                 mov     rax, [rbp+var_518]
__text:0000000100001336                 add     rax, [rbp+var_2B8]
__text:000000010000133D                 mov     [rbp+var_520], rax
__text:0000000100001344                 lea     rax, [rbp+var_480]
__text:000000010000134B                 mov     rcx, [rbp+var_520]
__text:0000000100001352                 mov     dl, [rcx]
__text:0000000100001354                 movsxd  rsi, [rbp+var_4A8]
__text:000000010000135B                 mov     [rbp+var_C0], rax
__text:0000000100001362                 mov     [rbp+var_C8], rsi
__text:0000000100001369                 mov     rax, [rbp+var_C0]
__text:0000000100001370                 mov     [rbp+var_B8], rax
__text:0000000100001377                 mov     rax, [rbp+var_B8]
__text:000000010000137E                 mov     [rbp+var_B0], rax
__text:0000000100001385                 mov     rsi, [rbp+var_B0]
__text:000000010000138C                 mov     [rbp+var_A8], rsi
__text:0000000100001393                 mov     rsi, [rbp+var_A8]
__text:000000010000139A                 mov     [rbp+var_A0], rsi
__text:00000001000013A1                 mov     rsi, [rbp+var_A0]
__text:00000001000013A8                 movzx   edi, byte ptr [rsi]
__text:00000001000013AB                 and     edi, 1
__text:00000001000013B1                 cmp     edi, 0
__text:00000001000013B7                 mov     [rbp+var_521], dl
__text:00000001000013BD                 mov     [rbp+var_530], rax
__text:00000001000013C4                 jz      loc_1000013F9
__text:00000001000013CA                 mov     rax, [rbp+var_530]
__text:00000001000013D1                 mov     [rbp+var_70], rax
__text:00000001000013D5                 mov     rcx, [rbp+var_70]
__text:00000001000013D9                 mov     [rbp+var_68], rcx
__text:00000001000013DD                 mov     rcx, [rbp+var_68]
__text:00000001000013E1                 mov     [rbp+var_60], rcx
__text:00000001000013E5                 mov     rcx, [rbp+var_60]
__text:00000001000013E9                 mov     rcx, [rcx+10h]
__text:00000001000013ED                 mov     [rbp+var_538], rcx
__text:00000001000013F4                 jmp     loc_100001448
__text:00000001000013F9 ; ---------------------------------------------------------------------------
__text:00000001000013F9
__text:00000001000013F9 loc_1000013F9:                          ; CODE XREF: _main+474↑j
__text:00000001000013F9                 mov     rax, [rbp+var_530]
__text:0000000100001400                 mov     [rbp+var_98], rax
__text:0000000100001407                 mov     rcx, [rbp+var_98]
__text:000000010000140E                 mov     [rbp+var_90], rcx
__text:0000000100001415                 mov     rcx, [rbp+var_90]
__text:000000010000141C                 mov     [rbp+var_88], rcx
__text:0000000100001423                 mov     rcx, [rbp+var_88]
__text:000000010000142A                 add     rcx, 1
__text:0000000100001431                 mov     [rbp+var_80], rcx
__text:0000000100001435                 mov     rcx, [rbp+var_80]
__text:0000000100001439                 mov     [rbp+var_78], rcx
__text:000000010000143D                 mov     rcx, [rbp+var_78]
__text:0000000100001441                 mov     [rbp+var_538], rcx
__text:0000000100001448
__text:0000000100001448 loc_100001448:                          ; CODE XREF: _main+4A4↑j
__text:0000000100001448                 mov     rax, [rbp+var_538]
__text:000000010000144F                 add     rax, [rbp+var_C8]
__text:0000000100001456                 mov     [rbp+var_540], rax
__text:000000010000145D                 lea     rdi, _ma
__text:0000000100001464                 mov     rsi, [rbp+var_540]
__text:000000010000146B                 call    j___ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEEixERS5_ ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)
__text:0000000100001470                 mov     [rbp+var_548], rax
__text:0000000100001477                 jmp     $+5
__text:000000010000147C ; ---------------------------------------------------------------------------
__text:000000010000147C
__text:000000010000147C loc_10000147C:                          ; CODE XREF: _main+527↑j
__text:000000010000147C                 mov     rax, [rbp+var_548]
__text:0000000100001483                 mov     cl, [rbp+var_521]
__text:0000000100001489                 mov     [rax], cl
__text:000000010000148B                 jmp     loc_1000014C4
__text:0000000100001490 ; ---------------------------------------------------------------------------
__text:0000000100001490                 mov     ecx, edx
__text:0000000100001492                 mov     [rbp+var_4A0], rax
__text:0000000100001499                 mov     [rbp+var_4A4], ecx
__text:000000010000149F                 jmp     loc_100001517
__text:00000001000014A4 ; ---------------------------------------------------------------------------
__text:00000001000014A4                 mov     ecx, edx
__text:00000001000014A6                 mov     [rbp+var_4A0], rax
__text:00000001000014AD                 mov     [rbp+var_4A4], ecx
__text:00000001000014B3                 lea     rdi, [rbp+var_498]
__text:00000001000014BA                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000014BF                 jmp     loc_100001512
__text:00000001000014C4 ; ---------------------------------------------------------------------------
__text:00000001000014C4
__text:00000001000014C4 loc_1000014C4:                          ; CODE XREF: _main+2C6↑j
__text:00000001000014C4                                         ; _main+53B↑j
__text:00000001000014C4                 jmp     $+5
__text:00000001000014C9 ; ---------------------------------------------------------------------------
__text:00000001000014C9
__text:00000001000014C9 loc_1000014C9:                          ; CODE XREF: _main:loc_1000014C4↑j
__text:00000001000014C9                 mov     eax, [rbp+var_4A8]
__text:00000001000014CF                 add     eax, 1
__text:00000001000014D4                 mov     [rbp+var_4A8], eax
__text:00000001000014DA                 jmp     loc_100000FDE
__text:00000001000014DF ; ---------------------------------------------------------------------------
__text:00000001000014DF
__text:00000001000014DF loc_1000014DF:                          ; CODE XREF: _main+188↑j
__text:00000001000014DF                 lea     rdi, [rbp+var_498]
__text:00000001000014E6                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000014EB                 jmp     $+5
__text:00000001000014F0 ; ---------------------------------------------------------------------------
__text:00000001000014F0
__text:00000001000014F0 loc_1000014F0:                          ; CODE XREF: _main+59B↑j
__text:00000001000014F0                 lea     rdi, [rbp+var_480]
__text:00000001000014F7                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000014FC                 mov     eax, [rbp+var_468]
__text:0000000100001502                 add     eax, 1
__text:0000000100001507                 mov     [rbp+var_468], eax
__text:000000010000150D                 jmp     loc_100000F6F
__text:0000000100001512 ; ---------------------------------------------------------------------------
__text:0000000100001512
__text:0000000100001512 loc_100001512:                          ; CODE XREF: _main+56F↑j
__text:0000000100001512                 jmp     $+5
__text:0000000100001517 ; ---------------------------------------------------------------------------
__text:0000000100001517
__text:0000000100001517 loc_100001517:                          ; CODE XREF: _main+54F↑j
__text:0000000100001517                                         ; _main:loc_100001512↑j
__text:0000000100001517                 lea     rdi, [rbp+var_480]
__text:000000010000151E                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001523                 jmp     $+5
__text:0000000100001528 ; ---------------------------------------------------------------------------
__text:0000000100001528
__text:0000000100001528 loc_100001528:                          ; CODE XREF: _main+5D3↑j
__text:0000000100001528                 jmp     loc_100001E26
__text:000000010000152D ; ---------------------------------------------------------------------------
__text:000000010000152D
__text:000000010000152D loc_10000152D:                          ; CODE XREF: _main+29↑j
__text:000000010000152D                 lea     rdi, aD         ; "%d\n"
__text:0000000100001534                 lea     rsi, [rbp+var_4AC]
__text:000000010000153B                 mov     al, 0
__text:000000010000153D                 call    _scanf
__text:0000000100001542                 mov     [rbp+var_4B0], 0
__text:000000010000154C                 mov     [rbp+var_54C], eax
__text:0000000100001552
__text:0000000100001552 loc_100001552:                          ; CODE XREF: _main+EBE↓j
__text:0000000100001552                 mov     eax, [rbp+var_4B0]
__text:0000000100001558                 cmp     eax, [rbp+var_4AC]
__text:000000010000155E                 jge     loc_100001E18
__text:0000000100001564                 lea     rax, [rbp+var_4C8]
__text:000000010000156B                 mov     [rbp+var_58], rax
__text:000000010000156F                 mov     rax, [rbp+var_58]
__text:0000000100001573                 mov     [rbp+var_50], rax
__text:0000000100001577                 mov     rax, [rbp+var_50]
__text:000000010000157B                 mov     [rbp+var_48], rax
__text:000000010000157F                 mov     rcx, [rbp+var_48]
__text:0000000100001583                 mov     [rbp+var_40], rcx
__text:0000000100001587                 mov     rcx, [rbp+var_40]
__text:000000010000158B                 mov     [rbp+var_38], rcx
__text:000000010000158F                 mov     rcx, [rbp+var_38]
__text:0000000100001593                 mov     [rbp+var_30], rcx
__text:0000000100001597                 mov     [rbp+var_18], rax
__text:000000010000159B                 mov     rax, [rbp+var_18]
__text:000000010000159F                 mov     [rbp+var_10], rax
__text:00000001000015A3                 mov     rax, [rbp+var_10]
__text:00000001000015A7                 mov     [rbp+var_8], rax
__text:00000001000015AB                 mov     rax, [rbp+var_8]
__text:00000001000015AF                 mov     [rbp+var_20], rax
__text:00000001000015B3                 mov     [rbp+var_24], 0
__text:00000001000015BA
__text:00000001000015BA loc_1000015BA:                          ; CODE XREF: _main+693↓j
__text:00000001000015BA                 cmp     [rbp+var_24], 3
__text:00000001000015C1                 jnb     loc_1000015E8
__text:00000001000015C7                 mov     eax, [rbp+var_24]
__text:00000001000015CA                 mov     ecx, eax
__text:00000001000015CC                 mov     rdx, [rbp+var_20]
__text:00000001000015D0                 mov     qword ptr [rdx+rcx*8], 0
__text:00000001000015D8                 mov     eax, [rbp+var_24]
__text:00000001000015DB                 add     eax, 1
__text:00000001000015E0                 mov     [rbp+var_24], eax
__text:00000001000015E3                 jmp     loc_1000015BA
__text:00000001000015E8 ; ---------------------------------------------------------------------------
__text:00000001000015E8
__text:00000001000015E8 loc_1000015E8:                          ; CODE XREF: _main+671↑j
__text:00000001000015E8                 mov     rax, cs:__ZNSt3__13cinE_ptr
__text:00000001000015EF                 mov     [rbp+var_110], rax
__text:00000001000015F6                 lea     rax, [rbp+var_4C8]
__text:00000001000015FD                 mov     [rbp+var_118], rax
__text:0000000100001604                 mov     rcx, [rbp+var_110]
__text:000000010000160B                 mov     rdx, [rcx]
__text:000000010000160E                 mov     rdx, [rdx-18h]
__text:0000000100001612                 mov     rsi, rcx
__text:0000000100001615                 add     rsi, rdx
__text:0000000100001618                 mov     [rbp+var_E8], rsi
__text:000000010000161F                 mov     [rbp+var_E9], 0Ah
__text:0000000100001626                 mov     rsi, [rbp+var_E8]
__text:000000010000162D                 lea     rdi, [rbp+var_F8] ; this
__text:0000000100001634                 mov     [rbp+var_558], rax
__text:000000010000163B                 mov     [rbp+var_560], rcx
__text:0000000100001642                 call    __ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
__text:0000000100001647                 jmp     $+5
__text:000000010000164C ; ---------------------------------------------------------------------------
__text:000000010000164C
__text:000000010000164C loc_10000164C:                          ; CODE XREF: _main+6F7↑j
__text:000000010000164C                 lea     rax, [rbp+var_F8]
__text:0000000100001653                 mov     [rbp+var_E0], rax
__text:000000010000165A                 mov     rsi, cs:__ZNSt3__15ctypeIcE2idE_ptr
__text:0000000100001661                 mov     rdi, rax
__text:0000000100001664                 call    __ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
__text:0000000100001669                 mov     [rbp+var_568], rax
__text:0000000100001670                 jmp     $+5
__text:0000000100001675 ; ---------------------------------------------------------------------------
__text:0000000100001675
__text:0000000100001675 loc_100001675:                          ; CODE XREF: _main+720↑j
__text:0000000100001675                 mov     al, [rbp+var_E9]
__text:000000010000167B                 mov     rcx, [rbp+var_568]
__text:0000000100001682                 mov     [rbp+var_D0], rcx
__text:0000000100001689                 mov     [rbp+var_D1], al
__text:000000010000168F                 mov     rdx, [rbp+var_D0]
__text:0000000100001696                 mov     rsi, [rdx]
__text:0000000100001699                 mov     rsi, [rsi+38h]
__text:000000010000169D                 movsx   edi, [rbp+var_D1]
__text:00000001000016A4                 mov     [rbp+var_56C], edi
__text:00000001000016AA                 mov     rdi, rdx
__text:00000001000016AD                 mov     r8d, [rbp+var_56C]
__text:00000001000016B4                 mov     [rbp+var_578], rsi
__text:00000001000016BB                 mov     esi, r8d
__text:00000001000016BE                 mov     rdx, [rbp+var_578]
__text:00000001000016C5                 call    rdx
__text:00000001000016C7                 mov     [rbp+var_579], al
__text:00000001000016CD                 jmp     loc_100001721
__text:00000001000016D2 ; ---------------------------------------------------------------------------
__text:00000001000016D2                 mov     ecx, edx
__text:00000001000016D4                 mov     [rbp+var_100], rax
__text:00000001000016DB                 mov     [rbp+var_104], ecx
__text:00000001000016E1                 lea     rdi, [rbp+var_F8] ; this
__text:00000001000016E8                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:00000001000016ED                 jmp     $+5
__text:00000001000016F2 ; ---------------------------------------------------------------------------
__text:00000001000016F2
__text:00000001000016F2 loc_1000016F2:                          ; CODE XREF: _main+79D↑j
__text:00000001000016F2                 mov     rax, [rbp+var_100]
__text:00000001000016F9                 mov     ecx, [rbp+var_104]
__text:00000001000016FF                 mov     [rbp+var_588], rax
__text:0000000100001706                 mov     [rbp+var_58C], ecx
__text:000000010000170C                 jmp     loc_100001C48
__text:0000000100001711 ; ---------------------------------------------------------------------------
__text:0000000100001711                 mov     ecx, edx
__text:0000000100001713                 mov     rdi, rax
__text:0000000100001716                 mov     [rbp+var_590], ecx
__text:000000010000171C                 call    ___clang_call_terminate
__text:0000000100001721 ; ---------------------------------------------------------------------------
__text:0000000100001721
__text:0000000100001721 loc_100001721:                          ; CODE XREF: _main+77D↑j
__text:0000000100001721                 lea     rdi, [rbp+var_F8] ; this
__text:0000000100001728                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:000000010000172D                 jmp     $+5
__text:0000000100001732 ; ---------------------------------------------------------------------------
__text:0000000100001732
__text:0000000100001732 loc_100001732:                          ; CODE XREF: _main+7DD↑j
__text:0000000100001732                 mov     al, [rbp+var_579]
__text:0000000100001738                 movsx   edx, al
__text:000000010000173B                 mov     rdi, [rbp+var_560]
__text:0000000100001742                 mov     rsi, [rbp+var_558]
__text:0000000100001749                 call    j___ZNSt3__17getlineIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EES6_ ; std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)
__text:000000010000174E                 mov     [rbp+var_598], rax
__text:0000000100001755                 jmp     $+5
__text:000000010000175A ; ---------------------------------------------------------------------------
__text:000000010000175A
__text:000000010000175A loc_10000175A:                          ; CODE XREF: _main+805↑j
__text:000000010000175A                 jmp     $+5
__text:000000010000175F ; ---------------------------------------------------------------------------
__text:000000010000175F
__text:000000010000175F loc_10000175F:                          ; CODE XREF: _main:loc_10000175A↑j
__text:000000010000175F                 mov     [rbp+var_4CC], 0
__text:0000000100001769
__text:0000000100001769 loc_100001769:                          ; CODE XREF: _main+D39↓j
__text:0000000100001769                 lea     rax, [rbp+var_4C8]
__text:0000000100001770                 mov     ecx, [rbp+var_4CC]
__text:0000000100001776                 mov     [rbp+var_168], rax
__text:000000010000177D                 mov     rax, [rbp+var_168]
__text:0000000100001784                 mov     [rbp+var_160], rax
__text:000000010000178B                 mov     rdx, [rbp+var_160]
__text:0000000100001792                 mov     [rbp+var_158], rdx
__text:0000000100001799                 mov     rdx, [rbp+var_158]
__text:00000001000017A0                 mov     [rbp+var_150], rdx
__text:00000001000017A7                 mov     rdx, [rbp+var_150]
__text:00000001000017AE                 movzx   esi, byte ptr [rdx]
__text:00000001000017B1                 and     esi, 1
__text:00000001000017B7                 cmp     esi, 0
__text:00000001000017BD                 mov     [rbp+var_59C], ecx
__text:00000001000017C3                 mov     [rbp+var_5A8], rax
__text:00000001000017CA                 jz      loc_100001811
__text:00000001000017D0                 mov     rax, [rbp+var_5A8]
__text:00000001000017D7                 mov     [rbp+var_130], rax
__text:00000001000017DE                 mov     rcx, [rbp+var_130]
__text:00000001000017E5                 mov     [rbp+var_128], rcx
__text:00000001000017EC                 mov     rcx, [rbp+var_128]
__text:00000001000017F3                 mov     [rbp+var_120], rcx
__text:00000001000017FA                 mov     rcx, [rbp+var_120]
__text:0000000100001801                 mov     rcx, [rcx+8]
__text:0000000100001805                 mov     [rbp+var_5B0], rcx
__text:000000010000180C                 jmp     loc_100001852
__text:0000000100001811 ; ---------------------------------------------------------------------------
__text:0000000100001811
__text:0000000100001811 loc_100001811:                          ; CODE XREF: _main+87A↑j
__text:0000000100001811                 mov     rax, [rbp+var_5A8]
__text:0000000100001818                 mov     [rbp+var_148], rax
__text:000000010000181F                 mov     rcx, [rbp+var_148]
__text:0000000100001826                 mov     [rbp+var_140], rcx
__text:000000010000182D                 mov     rcx, [rbp+var_140]
__text:0000000100001834                 mov     [rbp+var_138], rcx
__text:000000010000183B                 mov     rcx, [rbp+var_138]
__text:0000000100001842                 movzx   edx, byte ptr [rcx]
__text:0000000100001845                 sar     edx, 1
__text:0000000100001848                 movsxd  rcx, edx
__text:000000010000184B                 mov     [rbp+var_5B0], rcx
__text:0000000100001852
__text:0000000100001852 loc_100001852:                          ; CODE XREF: _main+8BC↑j
__text:0000000100001852                 mov     rax, [rbp+var_5B0]
__text:0000000100001859                 mov     ecx, eax
__text:000000010000185B                 mov     edx, [rbp+var_59C]
__text:0000000100001861                 cmp     edx, ecx
__text:0000000100001863                 jge     loc_100001C8E
__text:0000000100001869                 lea     rax, [rbp+var_4C8]
__text:0000000100001870                 movsxd  rcx, [rbp+var_4CC]
__text:0000000100001877                 mov     [rbp+var_1D0], rax
__text:000000010000187E                 mov     [rbp+var_1D8], rcx
__text:0000000100001885                 mov     rax, [rbp+var_1D0]
__text:000000010000188C                 mov     [rbp+var_1C8], rax
__text:0000000100001893                 mov     rax, [rbp+var_1C8]
__text:000000010000189A                 mov     [rbp+var_1C0], rax
__text:00000001000018A1                 mov     rcx, [rbp+var_1C0]
__text:00000001000018A8                 mov     [rbp+var_1B8], rcx
__text:00000001000018AF                 mov     rcx, [rbp+var_1B8]
__text:00000001000018B6                 mov     [rbp+var_1B0], rcx
__text:00000001000018BD                 mov     rcx, [rbp+var_1B0]
__text:00000001000018C4                 movzx   edx, byte ptr [rcx]
__text:00000001000018C7                 and     edx, 1
__text:00000001000018CD                 cmp     edx, 0
__text:00000001000018D3                 mov     [rbp+var_5B8], rax
__text:00000001000018DA                 jz      loc_100001921
__text:00000001000018E0                 mov     rax, [rbp+var_5B8]
__text:00000001000018E7                 mov     [rbp+var_180], rax
__text:00000001000018EE                 mov     rcx, [rbp+var_180]
__text:00000001000018F5                 mov     [rbp+var_178], rcx
__text:00000001000018FC                 mov     rcx, [rbp+var_178]
__text:0000000100001903                 mov     [rbp+var_170], rcx
__text:000000010000190A                 mov     rcx, [rbp+var_170]
__text:0000000100001911                 mov     rcx, [rcx+10h]
__text:0000000100001915                 mov     [rbp+var_5C0], rcx
__text:000000010000191C                 jmp     loc_10000197C
__text:0000000100001921 ; ---------------------------------------------------------------------------
__text:0000000100001921
__text:0000000100001921 loc_100001921:                          ; CODE XREF: _main+98A↑j
__text:0000000100001921                 mov     rax, [rbp+var_5B8]
__text:0000000100001928                 mov     [rbp+var_1A8], rax
__text:000000010000192F                 mov     rcx, [rbp+var_1A8]
__text:0000000100001936                 mov     [rbp+var_1A0], rcx
__text:000000010000193D                 mov     rcx, [rbp+var_1A0]
__text:0000000100001944                 mov     [rbp+var_198], rcx
__text:000000010000194B                 mov     rcx, [rbp+var_198]
__text:0000000100001952                 add     rcx, 1
__text:0000000100001959                 mov     [rbp+var_190], rcx
__text:0000000100001960                 mov     rcx, [rbp+var_190]
__text:0000000100001967                 mov     [rbp+var_188], rcx
__text:000000010000196E                 mov     rcx, [rbp+var_188]
__text:0000000100001975                 mov     [rbp+var_5C0], rcx
__text:000000010000197C
__text:000000010000197C loc_10000197C:                          ; CODE XREF: _main+9CC↑j
__text:000000010000197C                 mov     rax, [rbp+var_5C0]
__text:0000000100001983                 add     rax, [rbp+var_1D8]
__text:000000010000198A                 mov     [rbp+var_5C8], rax
__text:0000000100001991                 mov     rax, [rbp+var_5C8]
__text:0000000100001998                 movsx   ecx, byte ptr [rax]
__text:000000010000199B                 cmp     ecx, 20h ; ' '
__text:00000001000019A1                 jz      loc_100001C73
__text:00000001000019A7                 lea     rax, [rbp+var_4C8]
__text:00000001000019AE                 movsxd  rcx, [rbp+var_4CC]
__text:00000001000019B5                 mov     [rbp+var_240], rax
__text:00000001000019BC                 mov     [rbp+var_248], rcx
__text:00000001000019C3                 mov     rax, [rbp+var_240]
__text:00000001000019CA                 mov     [rbp+var_238], rax
__text:00000001000019D1                 mov     rax, [rbp+var_238]
__text:00000001000019D8                 mov     [rbp+var_230], rax
__text:00000001000019DF                 mov     rcx, [rbp+var_230]
__text:00000001000019E6                 mov     [rbp+var_228], rcx
__text:00000001000019ED                 mov     rcx, [rbp+var_228]
__text:00000001000019F4                 mov     [rbp+var_220], rcx
__text:00000001000019FB                 mov     rcx, [rbp+var_220]
__text:0000000100001A02                 movzx   edx, byte ptr [rcx]
__text:0000000100001A05                 and     edx, 1
__text:0000000100001A0B                 cmp     edx, 0
__text:0000000100001A11                 mov     [rbp+var_5D0], rax
__text:0000000100001A18                 jz      loc_100001A5F
__text:0000000100001A1E                 mov     rax, [rbp+var_5D0]
__text:0000000100001A25                 mov     [rbp+var_1F0], rax
__text:0000000100001A2C                 mov     rcx, [rbp+var_1F0]
__text:0000000100001A33                 mov     [rbp+var_1E8], rcx
__text:0000000100001A3A                 mov     rcx, [rbp+var_1E8]
__text:0000000100001A41                 mov     [rbp+var_1E0], rcx
__text:0000000100001A48                 mov     rcx, [rbp+var_1E0]
__text:0000000100001A4F                 mov     rcx, [rcx+10h]
__text:0000000100001A53                 mov     [rbp+var_5D8], rcx
__text:0000000100001A5A                 jmp     loc_100001ABA
__text:0000000100001A5F ; ---------------------------------------------------------------------------
__text:0000000100001A5F
__text:0000000100001A5F loc_100001A5F:                          ; CODE XREF: _main+AC8↑j
__text:0000000100001A5F                 mov     rax, [rbp+var_5D0]
__text:0000000100001A66                 mov     [rbp+var_218], rax
__text:0000000100001A6D                 mov     rcx, [rbp+var_218]
__text:0000000100001A74                 mov     [rbp+var_210], rcx
__text:0000000100001A7B                 mov     rcx, [rbp+var_210]
__text:0000000100001A82                 mov     [rbp+var_208], rcx
__text:0000000100001A89                 mov     rcx, [rbp+var_208]
__text:0000000100001A90                 add     rcx, 1
__text:0000000100001A97                 mov     [rbp+var_200], rcx
__text:0000000100001A9E                 mov     rcx, [rbp+var_200]
__text:0000000100001AA5                 mov     [rbp+var_1F8], rcx
__text:0000000100001AAC                 mov     rcx, [rbp+var_1F8]
__text:0000000100001AB3                 mov     [rbp+var_5D8], rcx
__text:0000000100001ABA
__text:0000000100001ABA loc_100001ABA:                          ; CODE XREF: _main+B0A↑j
__text:0000000100001ABA                 mov     rax, [rbp+var_5D8]
__text:0000000100001AC1                 add     rax, [rbp+var_248]
__text:0000000100001AC8                 mov     [rbp+var_5E0], rax
__text:0000000100001ACF                 lea     rdi, _ma
__text:0000000100001AD6                 mov     rsi, [rbp+var_5E0]
__text:0000000100001ADD                 call    j___ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEEixERS5_ ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)
__text:0000000100001AE2                 mov     [rbp+var_5E8], rax
__text:0000000100001AE9                 jmp     $+5
__text:0000000100001AEE ; ---------------------------------------------------------------------------
__text:0000000100001AEE
__text:0000000100001AEE loc_100001AEE:                          ; CODE XREF: _main+B99↑j
__text:0000000100001AEE                 lea     rax, [rbp+var_4C8]
__text:0000000100001AF5                 mov     rcx, [rbp+var_5E8]
__text:0000000100001AFC                 mov     dl, [rcx]
__text:0000000100001AFE                 movsxd  rsi, [rbp+var_4CC]
__text:0000000100001B05                 mov     [rbp+var_320], rax
__text:0000000100001B0C                 mov     [rbp+var_328], rsi
__text:0000000100001B13                 mov     rax, [rbp+var_320]
__text:0000000100001B1A                 mov     [rbp+var_318], rax
__text:0000000100001B21                 mov     rax, [rbp+var_318]
__text:0000000100001B28                 mov     [rbp+var_310], rax
__text:0000000100001B2F                 mov     rsi, [rbp+var_310]
__text:0000000100001B36                 mov     [rbp+var_308], rsi
__text:0000000100001B3D                 mov     rsi, [rbp+var_308]
__text:0000000100001B44                 mov     [rbp+var_300], rsi
__text:0000000100001B4B                 mov     rsi, [rbp+var_300]
__text:0000000100001B52                 movzx   edi, byte ptr [rsi]
__text:0000000100001B55                 and     edi, 1
__text:0000000100001B5B                 cmp     edi, 0
__text:0000000100001B61                 mov     [rbp+var_5E9], dl
__text:0000000100001B67                 mov     [rbp+var_5F8], rax
__text:0000000100001B6E                 jz      loc_100001BB5
__text:0000000100001B74                 mov     rax, [rbp+var_5F8]
__text:0000000100001B7B                 mov     [rbp+var_2D0], rax
__text:0000000100001B82                 mov     rcx, [rbp+var_2D0]
__text:0000000100001B89                 mov     [rbp+var_2C8], rcx
__text:0000000100001B90                 mov     rcx, [rbp+var_2C8]
__text:0000000100001B97                 mov     [rbp+var_2C0], rcx
__text:0000000100001B9E                 mov     rcx, [rbp+var_2C0]
__text:0000000100001BA5                 mov     rcx, [rcx+10h]
__text:0000000100001BA9                 mov     [rbp+var_600], rcx
__text:0000000100001BB0                 jmp     loc_100001C10
__text:0000000100001BB5 ; ---------------------------------------------------------------------------
__text:0000000100001BB5
__text:0000000100001BB5 loc_100001BB5:                          ; CODE XREF: _main+C1E↑j
__text:0000000100001BB5                 mov     rax, [rbp+var_5F8]
__text:0000000100001BBC                 mov     [rbp+var_2F8], rax
__text:0000000100001BC3                 mov     rcx, [rbp+var_2F8]
__text:0000000100001BCA                 mov     [rbp+var_2F0], rcx
__text:0000000100001BD1                 mov     rcx, [rbp+var_2F0]
__text:0000000100001BD8                 mov     [rbp+var_2E8], rcx
__text:0000000100001BDF                 mov     rcx, [rbp+var_2E8]
__text:0000000100001BE6                 add     rcx, 1
__text:0000000100001BED                 mov     [rbp+var_2E0], rcx
__text:0000000100001BF4                 mov     rcx, [rbp+var_2E0]
__text:0000000100001BFB                 mov     [rbp+var_2D8], rcx
__text:0000000100001C02                 mov     rcx, [rbp+var_2D8]
__text:0000000100001C09                 mov     [rbp+var_600], rcx
__text:0000000100001C10
__text:0000000100001C10 loc_100001C10:                          ; CODE XREF: _main+C60↑j
__text:0000000100001C10                 mov     rax, [rbp+var_600]
__text:0000000100001C17                 add     rax, [rbp+var_328]
__text:0000000100001C1E                 mov     [rbp+var_608], rax
__text:0000000100001C25                 mov     rax, [rbp+var_608]
__text:0000000100001C2C                 mov     cl, [rbp+var_5E9]
__text:0000000100001C32                 mov     [rax], cl
__text:0000000100001C34                 jmp     loc_100001C73
__text:0000000100001C39 ; ---------------------------------------------------------------------------
__text:0000000100001C39                 mov     ecx, edx
__text:0000000100001C3B                 mov     [rbp+var_588], rax
__text:0000000100001C42                 mov     [rbp+var_58C], ecx
__text:0000000100001C48
__text:0000000100001C48 loc_100001C48:                          ; CODE XREF: _main+7BC↑j
__text:0000000100001C48                 mov     eax, [rbp+var_58C]
__text:0000000100001C4E                 mov     rcx, [rbp+var_588]
__text:0000000100001C55                 mov     [rbp+var_4A0], rcx
__text:0000000100001C5C                 mov     [rbp+var_4A4], eax
__text:0000000100001C62                 lea     rdi, [rbp+var_4C8]
__text:0000000100001C69                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001C6E                 jmp     loc_100001E13
__text:0000000100001C73 ; ---------------------------------------------------------------------------
__text:0000000100001C73
__text:0000000100001C73 loc_100001C73:                          ; CODE XREF: _main+A51↑j
__text:0000000100001C73                                         ; _main+CE4↑j
__text:0000000100001C73                 jmp     $+5
__text:0000000100001C78 ; ---------------------------------------------------------------------------
__text:0000000100001C78
__text:0000000100001C78 loc_100001C78:                          ; CODE XREF: _main:loc_100001C73↑j
__text:0000000100001C78                 mov     eax, [rbp+var_4CC]
__text:0000000100001C7E                 add     eax, 1
__text:0000000100001C83                 mov     [rbp+var_4CC], eax
__text:0000000100001C89                 jmp     loc_100001769
__text:0000000100001C8E ; ---------------------------------------------------------------------------
__text:0000000100001C8E
__text:0000000100001C8E loc_100001C8E:                          ; CODE XREF: _main+913↑j
__text:0000000100001C8E                 lea     rax, [rbp+var_4C8]
__text:0000000100001C95                 mov     ecx, [rbp+var_4B0]
__text:0000000100001C9B                 add     ecx, 1
__text:0000000100001CA1                 mov     [rbp+var_3A0], rax
__text:0000000100001CA8                 mov     rax, [rbp+var_3A0]
__text:0000000100001CAF                 mov     [rbp+var_398], rax
__text:0000000100001CB6                 mov     rax, [rbp+var_398]
__text:0000000100001CBD                 mov     [rbp+var_390], rax
__text:0000000100001CC4                 mov     rax, [rbp+var_390]
__text:0000000100001CCB                 mov     [rbp+var_388], rax
__text:0000000100001CD2                 mov     rdx, [rbp+var_388]
__text:0000000100001CD9                 mov     [rbp+var_380], rdx
__text:0000000100001CE0                 mov     rdx, [rbp+var_380]
__text:0000000100001CE7                 mov     [rbp+var_378], rdx
__text:0000000100001CEE                 mov     rdx, [rbp+var_378]
__text:0000000100001CF5                 movzx   esi, byte ptr [rdx]
__text:0000000100001CF8                 and     esi, 1
__text:0000000100001CFE                 cmp     esi, 0
__text:0000000100001D04                 mov     [rbp+var_60C], ecx
__text:0000000100001D0A                 mov     [rbp+var_618], rax
__text:0000000100001D11                 jz      loc_100001D58
__text:0000000100001D17                 mov     rax, [rbp+var_618]
__text:0000000100001D1E                 mov     [rbp+var_348], rax
__text:0000000100001D25                 mov     rcx, [rbp+var_348]
__text:0000000100001D2C                 mov     [rbp+var_340], rcx
__text:0000000100001D33                 mov     rcx, [rbp+var_340]
__text:0000000100001D3A                 mov     [rbp+var_338], rcx
__text:0000000100001D41                 mov     rcx, [rbp+var_338]
__text:0000000100001D48                 mov     rcx, [rcx+10h]
__text:0000000100001D4C                 mov     [rbp+var_620], rcx
__text:0000000100001D53                 jmp     loc_100001DB3
__text:0000000100001D58 ; ---------------------------------------------------------------------------
__text:0000000100001D58
__text:0000000100001D58 loc_100001D58:                          ; CODE XREF: _main+DC1↑j
__text:0000000100001D58                 mov     rax, [rbp+var_618]
__text:0000000100001D5F                 mov     [rbp+var_370], rax
__text:0000000100001D66                 mov     rcx, [rbp+var_370]
__text:0000000100001D6D                 mov     [rbp+var_368], rcx
__text:0000000100001D74                 mov     rcx, [rbp+var_368]
__text:0000000100001D7B                 mov     [rbp+var_360], rcx
__text:0000000100001D82                 mov     rcx, [rbp+var_360]
__text:0000000100001D89                 add     rcx, 1
__text:0000000100001D90                 mov     [rbp+var_358], rcx
__text:0000000100001D97                 mov     rcx, [rbp+var_358]
__text:0000000100001D9E                 mov     [rbp+var_350], rcx
__text:0000000100001DA5                 mov     rcx, [rbp+var_350]
__text:0000000100001DAC                 mov     [rbp+var_620], rcx
__text:0000000100001DB3
__text:0000000100001DB3 loc_100001DB3:                          ; CODE XREF: _main+E03↑j
__text:0000000100001DB3                 mov     rax, [rbp+var_620]
__text:0000000100001DBA                 mov     [rbp+var_330], rax
__text:0000000100001DC1                 lea     rdi, aCaseDS    ; "Case #%d: %s\n"
__text:0000000100001DC8                 xor     ecx, ecx
__text:0000000100001DCA                 mov     dl, cl
__text:0000000100001DCC                 mov     esi, [rbp+var_60C]
__text:0000000100001DD2                 mov     [rbp+var_621], dl
__text:0000000100001DD8                 mov     rdx, rax
__text:0000000100001DDB                 mov     al, [rbp+var_621]
__text:0000000100001DE1                 call    _printf
__text:0000000100001DE6                 mov     [rbp+var_628], eax
__text:0000000100001DEC                 jmp     $+5
__text:0000000100001DF1 ; ---------------------------------------------------------------------------
__text:0000000100001DF1
__text:0000000100001DF1 loc_100001DF1:                          ; CODE XREF: _main+E9C↑j
__text:0000000100001DF1                 lea     rdi, [rbp+var_4C8]
__text:0000000100001DF8                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001DFD                 mov     eax, [rbp+var_4B0]
__text:0000000100001E03                 add     eax, 1
__text:0000000100001E08                 mov     [rbp+var_4B0], eax
__text:0000000100001E0E                 jmp     loc_100001552
__text:0000000100001E13 ; ---------------------------------------------------------------------------
__text:0000000100001E13
__text:0000000100001E13 loc_100001E13:                          ; CODE XREF: _main+D1E↑j
__text:0000000100001E13                 jmp     loc_100001E26
__text:0000000100001E18 ; ---------------------------------------------------------------------------
__text:0000000100001E18
__text:0000000100001E18 loc_100001E18:                          ; CODE XREF: _main+60E↑j
__text:0000000100001E18                 mov     eax, 0
__text:0000000100001E1D                 add     rsp, 630h
__text:0000000100001E24                 pop     rbp
__text:0000000100001E25                 retn
__text:0000000100001E26 ; ---------------------------------------------------------------------------
__text:0000000100001E26
__text:0000000100001E26 loc_100001E26:                          ; CODE XREF: _main:loc_100001528↑j
__text:0000000100001E26                                         ; _main:loc_100001E13↑j
__text:0000000100001E26                 mov     rdi, [rbp+var_4A0]
__text:0000000100001E2D                 call    __Unwind_Resume
__text:0000000100001E2D _main           endp
__text:0000000100001E2D
__text:0000000100001E32 ; ---------------------------------------------------------------------------
__text:0000000100001E32                 mov     ecx, edx
__text:0000000100001E34                 mov     rdi, rax
__text:0000000100001E37                 mov     [rbp-62Ch], ecx
__text:0000000100001E3D                 call    ___clang_call_terminate
__text:0000000100001E3D ; ---------------------------------------------------------------------------
__text:0000000100001E42                 align 10h
__text:0000000100001E50
__text:0000000100001E50 ; =============== S U B R O U T I N E =======================================
__text:0000000100001E50
__text:0000000100001E50 ; Attributes: bp-based frame
__text:0000000100001E50
__text:0000000100001E50 ___cxx_global_var_init proc near        ; CODE XREF: `global constructor keyed to'_a+4↓p
__text:0000000100001E50
__text:0000000100001E50 var_3DC         = dword ptr -3DCh
__text:0000000100001E50 var_3D8         = qword ptr -3D8h
__text:0000000100001E50 var_3D0         = qword ptr -3D0h
__text:0000000100001E50 var_3C8         = qword ptr -3C8h
__text:0000000100001E50 var_3C0         = qword ptr -3C0h
__text:0000000100001E50 var_3B8         = qword ptr -3B8h
__text:0000000100001E50 var_3B0         = qword ptr -3B0h
__text:0000000100001E50 var_3A8         = qword ptr -3A8h
__text:0000000100001E50 var_3A0         = qword ptr -3A0h
__text:0000000100001E50 var_398         = qword ptr -398h
__text:0000000100001E50 var_390         = qword ptr -390h
__text:0000000100001E50 var_388         = qword ptr -388h
__text:0000000100001E50 var_380         = qword ptr -380h
__text:0000000100001E50 var_378         = qword ptr -378h
__text:0000000100001E50 var_370         = qword ptr -370h
__text:0000000100001E50 var_368         = qword ptr -368h
__text:0000000100001E50 var_360         = qword ptr -360h
__text:0000000100001E50 var_358         = qword ptr -358h
__text:0000000100001E50 var_350         = qword ptr -350h
__text:0000000100001E50 var_348         = qword ptr -348h
__text:0000000100001E50 var_340         = qword ptr -340h
__text:0000000100001E50 var_338         = qword ptr -338h
__text:0000000100001E50 var_330         = qword ptr -330h
__text:0000000100001E50 var_328         = qword ptr -328h
__text:0000000100001E50 var_320         = qword ptr -320h
__text:0000000100001E50 var_318         = qword ptr -318h
__text:0000000100001E50 var_310         = qword ptr -310h
__text:0000000100001E50 var_308         = qword ptr -308h
__text:0000000100001E50 var_300         = qword ptr -300h
__text:0000000100001E50 var_2F8         = qword ptr -2F8h
__text:0000000100001E50 var_2F0         = qword ptr -2F0h
__text:0000000100001E50 var_2D8         = qword ptr -2D8h
__text:0000000100001E50 var_2D0         = qword ptr -2D0h
__text:0000000100001E50 var_2C8         = qword ptr -2C8h
__text:0000000100001E50 var_2C0         = qword ptr -2C0h
__text:0000000100001E50 var_2B8         = qword ptr -2B8h
__text:0000000100001E50 var_2B0         = qword ptr -2B0h
__text:0000000100001E50 var_2A8         = qword ptr -2A8h
__text:0000000100001E50 var_2A0         = qword ptr -2A0h
__text:0000000100001E50 var_298         = qword ptr -298h
__text:0000000100001E50 var_290         = qword ptr -290h
__text:0000000100001E50 var_288         = qword ptr -288h
__text:0000000100001E50 var_280         = qword ptr -280h
__text:0000000100001E50 var_278         = qword ptr -278h
__text:0000000100001E50 var_270         = qword ptr -270h
__text:0000000100001E50 var_268         = qword ptr -268h
__text:0000000100001E50 var_260         = qword ptr -260h
__text:0000000100001E50 var_258         = qword ptr -258h
__text:0000000100001E50 var_250         = qword ptr -250h
__text:0000000100001E50 var_248         = qword ptr -248h
__text:0000000100001E50 var_240         = qword ptr -240h
__text:0000000100001E50 var_238         = qword ptr -238h
__text:0000000100001E50 var_230         = qword ptr -230h
__text:0000000100001E50 var_228         = qword ptr -228h
__text:0000000100001E50 var_220         = qword ptr -220h
__text:0000000100001E50 var_218         = qword ptr -218h
__text:0000000100001E50 var_210         = qword ptr -210h
__text:0000000100001E50 var_208         = qword ptr -208h
__text:0000000100001E50 var_200         = qword ptr -200h
__text:0000000100001E50 var_1F8         = qword ptr -1F8h
__text:0000000100001E50 var_1F0         = qword ptr -1F0h
__text:0000000100001E50 var_1E8         = qword ptr -1E8h
__text:0000000100001E50 var_1E0         = qword ptr -1E0h
__text:0000000100001E50 var_1D8         = qword ptr -1D8h
__text:0000000100001E50 var_1D0         = qword ptr -1D0h
__text:0000000100001E50 var_1C8         = qword ptr -1C8h
__text:0000000100001E50 var_1C0         = qword ptr -1C0h
__text:0000000100001E50 var_1B8         = qword ptr -1B8h
__text:0000000100001E50 var_1B0         = qword ptr -1B0h
__text:0000000100001E50 var_1A8         = qword ptr -1A8h
__text:0000000100001E50 var_1A0         = qword ptr -1A0h
__text:0000000100001E50 var_198         = qword ptr -198h
__text:0000000100001E50 var_190         = qword ptr -190h
__text:0000000100001E50 var_188         = qword ptr -188h
__text:0000000100001E50 var_180         = qword ptr -180h
__text:0000000100001E50 var_178         = qword ptr -178h
__text:0000000100001E50 var_170         = qword ptr -170h
__text:0000000100001E50 var_168         = qword ptr -168h
__text:0000000100001E50 var_160         = qword ptr -160h
__text:0000000100001E50 var_158         = qword ptr -158h
__text:0000000100001E50 var_150         = qword ptr -150h
__text:0000000100001E50 var_148         = qword ptr -148h
__text:0000000100001E50 var_140         = qword ptr -140h
__text:0000000100001E50 var_138         = qword ptr -138h
__text:0000000100001E50 var_130         = qword ptr -130h
__text:0000000100001E50 var_128         = qword ptr -128h
__text:0000000100001E50 var_120         = qword ptr -120h
__text:0000000100001E50 var_118         = qword ptr -118h
__text:0000000100001E50 var_110         = qword ptr -110h
__text:0000000100001E50 var_108         = qword ptr -108h
__text:0000000100001E50 var_100         = qword ptr -100h
__text:0000000100001E50 var_F8          = qword ptr -0F8h
__text:0000000100001E50 var_F0          = qword ptr -0F0h
__text:0000000100001E50 var_E8          = qword ptr -0E8h
__text:0000000100001E50 var_E0          = qword ptr -0E0h
__text:0000000100001E50 var_D8          = qword ptr -0D8h
__text:0000000100001E50 var_D0          = qword ptr -0D0h
__text:0000000100001E50 var_C8          = qword ptr -0C8h
__text:0000000100001E50 var_C0          = qword ptr -0C0h
__text:0000000100001E50 var_B8          = qword ptr -0B8h
__text:0000000100001E50 var_B0          = qword ptr -0B0h
__text:0000000100001E50 var_A8          = qword ptr -0A8h
__text:0000000100001E50 var_A0          = qword ptr -0A0h
__text:0000000100001E50 var_98          = qword ptr -98h
__text:0000000100001E50 var_90          = qword ptr -90h
__text:0000000100001E50 var_88          = qword ptr -88h
__text:0000000100001E50 var_80          = qword ptr -80h
__text:0000000100001E50 var_78          = qword ptr -78h
__text:0000000100001E50 var_70          = qword ptr -70h
__text:0000000100001E50 var_68          = qword ptr -68h
__text:0000000100001E50 var_60          = qword ptr -60h
__text:0000000100001E50 var_58          = qword ptr -58h
__text:0000000100001E50 var_50          = qword ptr -50h
__text:0000000100001E50 var_48          = qword ptr -48h
__text:0000000100001E50 var_40          = qword ptr -40h
__text:0000000100001E50 var_38          = qword ptr -38h
__text:0000000100001E50 var_30          = qword ptr -30h
__text:0000000100001E50 var_28          = qword ptr -28h
__text:0000000100001E50 var_20          = qword ptr -20h
__text:0000000100001E50 var_18          = qword ptr -18h
__text:0000000100001E50 var_10          = qword ptr -10h
__text:0000000100001E50 var_8           = qword ptr -8
__text:0000000100001E50
__text:0000000100001E50                 push    rbp
__text:0000000100001E51                 mov     rbp, rsp
__text:0000000100001E54                 sub     rsp, 400h
__text:0000000100001E5B                 lea     rax, __ZL4cons  ; cons
__text:0000000100001E62                 mov     [rbp+var_2D8], rax
__text:0000000100001E69                 mov     [rbp+var_2C8], rax
__text:0000000100001E70                 lea     rax, aEjpMysljylcKdK ; "ejp mysljylc kd kxveddknmc re jsicpdrys"...
__text:0000000100001E77                 mov     [rbp+var_2D0], rax
__text:0000000100001E7E                 mov     rcx, [rbp+var_2C8]
__text:0000000100001E85                 mov     [rbp+var_2B8], rcx
__text:0000000100001E8C                 mov     [rbp+var_2C0], rax
__text:0000000100001E93                 mov     rax, [rbp+var_2B8]
__text:0000000100001E9A                 mov     [rbp+var_2B0], rax
__text:0000000100001EA1                 mov     [rbp+var_2A8], rax
__text:0000000100001EA8                 mov     [rbp+var_2A0], rax
__text:0000000100001EAF                 mov     [rbp+var_298], rax
__text:0000000100001EB6                 mov     rcx, [rbp+var_2C0]
__text:0000000100001EBD                 mov     [rbp+var_290], rcx
__text:0000000100001EC4                 mov     rdi, rcx        ; char *
__text:0000000100001EC7                 mov     [rbp+var_2F0], rax
__text:0000000100001ECE                 mov     [rbp+var_2F8], rcx
__text:0000000100001ED5                 call    _strlen
__text:0000000100001EDA                 mov     [rbp+var_300], rax
__text:0000000100001EE1                 jmp     $+5
__text:0000000100001EE6 ; ---------------------------------------------------------------------------
__text:0000000100001EE6
__text:0000000100001EE6 loc_100001EE6:                          ; CODE XREF: ___cxx_global_var_init+91↑j
__text:0000000100001EE6                 mov     rdi, [rbp+var_2F0]
__text:0000000100001EED                 mov     rsi, [rbp+var_2F8]
__text:0000000100001EF4                 mov     rdx, [rbp+var_300]
__text:0000000100001EFB                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001F00                 jmp     $+5
__text:0000000100001F05 ; ---------------------------------------------------------------------------
__text:0000000100001F05
__text:0000000100001F05 loc_100001F05:                          ; CODE XREF: ___cxx_global_var_init+B0↑j
__text:0000000100001F05                 jmp     $+5
__text:0000000100001F0A ; ---------------------------------------------------------------------------
__text:0000000100001F0A
__text:0000000100001F0A loc_100001F0A:                          ; CODE XREF: ___cxx_global_var_init:loc_100001F05↑j
__text:0000000100001F0A                 lea     rax, unk_100006168
__text:0000000100001F11                 mov     [rbp+var_2D8], rax
__text:0000000100001F18                 mov     [rbp+var_280], rax
__text:0000000100001F1F                 lea     rax, aRbcpcYpcRtcsra ; "rbcpc ypc rtcsra dkh wyfrepkym veddknkm"...
__text:0000000100001F26                 mov     [rbp+var_288], rax
__text:0000000100001F2D                 mov     rcx, [rbp+var_280]
__text:0000000100001F34                 mov     [rbp+var_270], rcx
__text:0000000100001F3B                 mov     [rbp+var_278], rax
__text:0000000100001F42                 mov     rax, [rbp+var_270]
__text:0000000100001F49                 mov     [rbp+var_268], rax
__text:0000000100001F50                 mov     [rbp+var_260], rax
__text:0000000100001F57                 mov     [rbp+var_258], rax
__text:0000000100001F5E                 mov     [rbp+var_250], rax
__text:0000000100001F65                 mov     rcx, [rbp+var_278]
__text:0000000100001F6C                 mov     [rbp+var_248], rcx
__text:0000000100001F73                 mov     rdi, rcx        ; char *
__text:0000000100001F76                 mov     [rbp+var_308], rax
__text:0000000100001F7D                 mov     [rbp+var_310], rcx
__text:0000000100001F84                 call    _strlen
__text:0000000100001F89                 mov     [rbp+var_318], rax
__text:0000000100001F90                 jmp     $+5
__text:0000000100001F95 ; ---------------------------------------------------------------------------
__text:0000000100001F95
__text:0000000100001F95 loc_100001F95:                          ; CODE XREF: ___cxx_global_var_init+140↑j
__text:0000000100001F95                 mov     rdi, [rbp+var_308]
__text:0000000100001F9C                 mov     rsi, [rbp+var_310]
__text:0000000100001FA3                 mov     rdx, [rbp+var_318]
__text:0000000100001FAA                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001FAF                 jmp     $+5
__text:0000000100001FB4 ; ---------------------------------------------------------------------------
__text:0000000100001FB4
__text:0000000100001FB4 loc_100001FB4:                          ; CODE XREF: ___cxx_global_var_init+15F↑j
__text:0000000100001FB4                 jmp     $+5
__text:0000000100001FB9 ; ---------------------------------------------------------------------------
__text:0000000100001FB9
__text:0000000100001FB9 loc_100001FB9:                          ; CODE XREF: ___cxx_global_var_init:loc_100001FB4↑j
__text:0000000100001FB9                 lea     rax, unk_100006180
__text:0000000100001FC0                 mov     [rbp+var_2D8], rax
__text:0000000100001FC7                 mov     [rbp+var_238], rax
__text:0000000100001FCE                 lea     rax, aDeKrKdEoyaKwAe ; "de kr kd eoya kw aej tysr re ujdr lkgc "...
__text:0000000100001FD5                 mov     [rbp+var_240], rax
__text:0000000100001FDC                 mov     rcx, [rbp+var_238]
__text:0000000100001FE3                 mov     [rbp+var_228], rcx
__text:0000000100001FEA                 mov     [rbp+var_230], rax
__text:0000000100001FF1                 mov     rax, [rbp+var_228]
__text:0000000100001FF8                 mov     [rbp+var_220], rax
__text:0000000100001FFF                 mov     [rbp+var_218], rax
__text:0000000100002006                 mov     [rbp+var_210], rax
__text:000000010000200D                 mov     [rbp+var_208], rax
__text:0000000100002014                 mov     rcx, [rbp+var_230]
__text:000000010000201B                 mov     [rbp+var_200], rcx
__text:0000000100002022                 mov     rdi, rcx        ; char *
__text:0000000100002025                 mov     [rbp+var_320], rax
__text:000000010000202C                 mov     [rbp+var_328], rcx
__text:0000000100002033                 call    _strlen
__text:0000000100002038                 mov     [rbp+var_330], rax
__text:000000010000203F                 jmp     $+5
__text:0000000100002044 ; ---------------------------------------------------------------------------
__text:0000000100002044
__text:0000000100002044 loc_100002044:                          ; CODE XREF: ___cxx_global_var_init+1EF↑j
__text:0000000100002044                 mov     rdi, [rbp+var_320]
__text:000000010000204B                 mov     rsi, [rbp+var_328]
__text:0000000100002052                 mov     rdx, [rbp+var_330]
__text:0000000100002059                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:000000010000205E                 jmp     $+5
__text:0000000100002063 ; ---------------------------------------------------------------------------
__text:0000000100002063
__text:0000000100002063 loc_100002063:                          ; CODE XREF: ___cxx_global_var_init+20E↑j
__text:0000000100002063                 jmp     $+5
__text:0000000100002068 ; ---------------------------------------------------------------------------
__text:0000000100002068
__text:0000000100002068 loc_100002068:                          ; CODE XREF: ___cxx_global_var_init:loc_100002063↑j
__text:0000000100002068                 lea     rax, unk_100006198
__text:000000010000206F                 mov     [rbp+var_2D8], rax
__text:0000000100002076                 mov     [rbp+var_1F0], rax
__text:000000010000207D                 lea     rax, aYQee      ; "y qee"
__text:0000000100002084                 mov     [rbp+var_1F8], rax
__text:000000010000208B                 mov     rcx, [rbp+var_1F0]
__text:0000000100002092                 mov     [rbp+var_1E0], rcx
__text:0000000100002099                 mov     [rbp+var_1E8], rax
__text:00000001000020A0                 mov     rax, [rbp+var_1E0]
__text:00000001000020A7                 mov     [rbp+var_1D8], rax
__text:00000001000020AE                 mov     [rbp+var_1D0], rax
__text:00000001000020B5                 mov     [rbp+var_1C8], rax
__text:00000001000020BC                 mov     [rbp+var_1C0], rax
__text:00000001000020C3                 mov     rcx, [rbp+var_1E8]
__text:00000001000020CA                 mov     [rbp+var_1B8], rcx
__text:00000001000020D1                 mov     rdi, rcx        ; char *
__text:00000001000020D4                 mov     [rbp+var_338], rax
__text:00000001000020DB                 mov     [rbp+var_340], rcx
__text:00000001000020E2                 call    _strlen
__text:00000001000020E7                 mov     [rbp+var_348], rax
__text:00000001000020EE                 jmp     $+5
__text:00000001000020F3 ; ---------------------------------------------------------------------------
__text:00000001000020F3
__text:00000001000020F3 loc_1000020F3:                          ; CODE XREF: ___cxx_global_var_init+29E↑j
__text:00000001000020F3                 mov     rdi, [rbp+var_338]
__text:00000001000020FA                 mov     rsi, [rbp+var_340]
__text:0000000100002101                 mov     rdx, [rbp+var_348]
__text:0000000100002108                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:000000010000210D                 jmp     $+5
__text:0000000100002112 ; ---------------------------------------------------------------------------
__text:0000000100002112
__text:0000000100002112 loc_100002112:                          ; CODE XREF: ___cxx_global_var_init+2BD↑j
__text:0000000100002112                 jmp     $+5
__text:0000000100002117 ; ---------------------------------------------------------------------------
__text:0000000100002117
__text:0000000100002117 loc_100002117:                          ; CODE XREF: ___cxx_global_var_init:loc_100002112↑j
__text:0000000100002117                 lea     rax, unk_1000061B0
__text:000000010000211E                 mov     [rbp+var_2D8], rax
__text:0000000100002125                 mov     [rbp+var_1A8], rax
__text:000000010000212C                 lea     rax, aZ         ; "z"
__text:0000000100002133                 mov     [rbp+var_1B0], rax
__text:000000010000213A                 mov     rcx, [rbp+var_1A8]
__text:0000000100002141                 mov     [rbp+var_198], rcx
__text:0000000100002148                 mov     [rbp+var_1A0], rax
__text:000000010000214F                 mov     rax, [rbp+var_198]
__text:0000000100002156                 mov     [rbp+var_190], rax
__text:000000010000215D                 mov     [rbp+var_188], rax
__text:0000000100002164                 mov     [rbp+var_180], rax
__text:000000010000216B                 mov     [rbp+var_178], rax
__text:0000000100002172                 mov     rcx, [rbp+var_1A0]
__text:0000000100002179                 mov     [rbp+var_170], rcx
__text:0000000100002180                 mov     rdi, rcx        ; char *
__text:0000000100002183                 mov     [rbp+var_350], rax
__text:000000010000218A                 mov     [rbp+var_358], rcx
__text:0000000100002191                 call    _strlen
__text:0000000100002196                 mov     [rbp+var_360], rax
__text:000000010000219D                 jmp     $+5
__text:00000001000021A2 ; ---------------------------------------------------------------------------
__text:00000001000021A2
__text:00000001000021A2 loc_1000021A2:                          ; CODE XREF: ___cxx_global_var_init+34D↑j
__text:00000001000021A2                 mov     rdi, [rbp+var_350]
__text:00000001000021A9                 mov     rsi, [rbp+var_358]
__text:00000001000021B0                 mov     rdx, [rbp+var_360]
__text:00000001000021B7                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:00000001000021BC                 jmp     $+5
__text:00000001000021C1 ; ---------------------------------------------------------------------------
__text:00000001000021C1
__text:00000001000021C1 loc_1000021C1:                          ; CODE XREF: ___cxx_global_var_init+36C↑j
__text:00000001000021C1                 jmp     $+5
__text:00000001000021C6 ; ---------------------------------------------------------------------------
__text:00000001000021C6
__text:00000001000021C6 loc_1000021C6:                          ; CODE XREF: ___cxx_global_var_init:loc_1000021C1↑j
__text:00000001000021C6                 lea     rax, unk_1000061C8
__text:00000001000021CD                 mov     [rbp+var_2D8], rax
__text:00000001000021D4                 mov     [rbp+var_160], rax
__text:00000001000021DB                 lea     rax, aOurLanguageIsI ; "our language is impossible to understan"...
__text:00000001000021E2                 mov     [rbp+var_168], rax
__text:00000001000021E9                 mov     rcx, [rbp+var_160]
__text:00000001000021F0                 mov     [rbp+var_150], rcx
__text:00000001000021F7                 mov     [rbp+var_158], rax
__text:00000001000021FE                 mov     rax, [rbp+var_150]
__text:0000000100002205                 mov     [rbp+var_148], rax
__text:000000010000220C                 mov     [rbp+var_140], rax
__text:0000000100002213                 mov     [rbp+var_138], rax
__text:000000010000221A                 mov     [rbp+var_130], rax
__text:0000000100002221                 mov     rcx, [rbp+var_158]
__text:0000000100002228                 mov     [rbp+var_128], rcx
__text:000000010000222F                 mov     rdi, rcx        ; char *
__text:0000000100002232                 mov     [rbp+var_368], rax
__text:0000000100002239                 mov     [rbp+var_370], rcx
__text:0000000100002240                 call    _strlen
__text:0000000100002245                 mov     [rbp+var_378], rax
__text:000000010000224C                 jmp     $+5
__text:0000000100002251 ; ---------------------------------------------------------------------------
__text:0000000100002251
__text:0000000100002251 loc_100002251:                          ; CODE XREF: ___cxx_global_var_init+3FC↑j
__text:0000000100002251                 mov     rdi, [rbp+var_368]
__text:0000000100002258                 mov     rsi, [rbp+var_370]
__text:000000010000225F                 mov     rdx, [rbp+var_378]
__text:0000000100002266                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:000000010000226B                 jmp     $+5
__text:0000000100002270 ; ---------------------------------------------------------------------------
__text:0000000100002270
__text:0000000100002270 loc_100002270:                          ; CODE XREF: ___cxx_global_var_init+41B↑j
__text:0000000100002270                 jmp     $+5
__text:0000000100002275 ; ---------------------------------------------------------------------------
__text:0000000100002275
__text:0000000100002275 loc_100002275:                          ; CODE XREF: ___cxx_global_var_init:loc_100002270↑j
__text:0000000100002275                 lea     rax, unk_1000061E0
__text:000000010000227C                 mov     [rbp+var_2D8], rax
__text:0000000100002283                 mov     [rbp+var_118], rax
__text:000000010000228A                 lea     rax, aThereAreTwenty ; "there are twenty six factorial possibil"...
__text:0000000100002291                 mov     [rbp+var_120], rax
__text:0000000100002298                 mov     rcx, [rbp+var_118]
__text:000000010000229F                 mov     [rbp+var_108], rcx
__text:00000001000022A6                 mov     [rbp+var_110], rax
__text:00000001000022AD                 mov     rax, [rbp+var_108]
__text:00000001000022B4                 mov     [rbp+var_100], rax
__text:00000001000022BB                 mov     [rbp+var_F8], rax
__text:00000001000022C2                 mov     [rbp+var_F0], rax
__text:00000001000022C9                 mov     [rbp+var_E8], rax
__text:00000001000022D0                 mov     rcx, [rbp+var_110]
__text:00000001000022D7                 mov     [rbp+var_E0], rcx
__text:00000001000022DE                 mov     rdi, rcx        ; char *
__text:00000001000022E1                 mov     [rbp+var_380], rax
__text:00000001000022E8                 mov     [rbp+var_388], rcx
__text:00000001000022EF                 call    _strlen
__text:00000001000022F4                 mov     [rbp+var_390], rax
__text:00000001000022FB                 jmp     $+5
__text:0000000100002300 ; ---------------------------------------------------------------------------
__text:0000000100002300
__text:0000000100002300 loc_100002300:                          ; CODE XREF: ___cxx_global_var_init+4AB↑j
__text:0000000100002300                 mov     rdi, [rbp+var_380]
__text:0000000100002307                 mov     rsi, [rbp+var_388]
__text:000000010000230E                 mov     rdx, [rbp+var_390]
__text:0000000100002315                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:000000010000231A                 jmp     $+5
__text:000000010000231F ; ---------------------------------------------------------------------------
__text:000000010000231F
__text:000000010000231F loc_10000231F:                          ; CODE XREF: ___cxx_global_var_init+4CA↑j
__text:000000010000231F                 jmp     $+5
__text:0000000100002324 ; ---------------------------------------------------------------------------
__text:0000000100002324
__text:0000000100002324 loc_100002324:                          ; CODE XREF: ___cxx_global_var_init:loc_10000231F↑j
__text:0000000100002324                 lea     rax, unk_1000061F8
__text:000000010000232B                 mov     [rbp+var_2D8], rax
__text:0000000100002332                 mov     [rbp+var_D0], rax
__text:0000000100002339                 lea     rax, aSoItIsOkayIfYo ; "so it is okay if you want to just give "...
__text:0000000100002340                 mov     [rbp+var_D8], rax
__text:0000000100002347                 mov     rcx, [rbp+var_D0]
__text:000000010000234E                 mov     [rbp+var_C0], rcx
__text:0000000100002355                 mov     [rbp+var_C8], rax
__text:000000010000235C                 mov     rax, [rbp+var_C0]
__text:0000000100002363                 mov     [rbp+var_B8], rax
__text:000000010000236A                 mov     [rbp+var_B0], rax
__text:0000000100002371                 mov     [rbp+var_A8], rax
__text:0000000100002378                 mov     [rbp+var_A0], rax
__text:000000010000237F                 mov     rcx, [rbp+var_C8]
__text:0000000100002386                 mov     [rbp+var_98], rcx
__text:000000010000238D                 mov     rdi, rcx        ; char *
__text:0000000100002390                 mov     [rbp+var_398], rax
__text:0000000100002397                 mov     [rbp+var_3A0], rcx
__text:000000010000239E                 call    _strlen
__text:00000001000023A3                 mov     [rbp+var_3A8], rax
__text:00000001000023AA                 jmp     $+5
__text:00000001000023AF ; ---------------------------------------------------------------------------
__text:00000001000023AF
__text:00000001000023AF loc_1000023AF:                          ; CODE XREF: ___cxx_global_var_init+55A↑j
__text:00000001000023AF                 mov     rdi, [rbp+var_398]
__text:00000001000023B6                 mov     rsi, [rbp+var_3A0]
__text:00000001000023BD                 mov     rdx, [rbp+var_3A8]
__text:00000001000023C4                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:00000001000023C9                 jmp     $+5
__text:00000001000023CE ; ---------------------------------------------------------------------------
__text:00000001000023CE
__text:00000001000023CE loc_1000023CE:                          ; CODE XREF: ___cxx_global_var_init+579↑j
__text:00000001000023CE                 jmp     $+5
__text:00000001000023D3 ; ---------------------------------------------------------------------------
__text:00000001000023D3
__text:00000001000023D3 loc_1000023D3:                          ; CODE XREF: ___cxx_global_var_init:loc_1000023CE↑j
__text:00000001000023D3                 lea     rax, unk_100006210
__text:00000001000023DA                 mov     [rbp+var_2D8], rax
__text:00000001000023E1                 mov     [rbp+var_88], rax
__text:00000001000023E8                 lea     rax, aAZoo      ; "a zoo"
__text:00000001000023EF                 mov     [rbp+var_90], rax
__text:00000001000023F6                 mov     rcx, [rbp+var_88]
__text:00000001000023FD                 mov     [rbp+var_78], rcx
__text:0000000100002401                 mov     [rbp+var_80], rax
__text:0000000100002405                 mov     rax, [rbp+var_78]
__text:0000000100002409                 mov     [rbp+var_70], rax
__text:000000010000240D                 mov     [rbp+var_68], rax
__text:0000000100002411                 mov     [rbp+var_60], rax
__text:0000000100002415                 mov     [rbp+var_58], rax
__text:0000000100002419                 mov     rcx, [rbp+var_80]
__text:000000010000241D                 mov     [rbp+var_50], rcx
__text:0000000100002421                 mov     rdi, rcx        ; char *
__text:0000000100002424                 mov     [rbp+var_3B0], rax
__text:000000010000242B                 mov     [rbp+var_3B8], rcx
__text:0000000100002432                 call    _strlen
__text:0000000100002437                 mov     [rbp+var_3C0], rax
__text:000000010000243E                 jmp     $+5
__text:0000000100002443 ; ---------------------------------------------------------------------------
__text:0000000100002443
__text:0000000100002443 loc_100002443:                          ; CODE XREF: ___cxx_global_var_init+5EE↑j
__text:0000000100002443                 mov     rdi, [rbp+var_3B0]
__text:000000010000244A                 mov     rsi, [rbp+var_3B8]
__text:0000000100002451                 mov     rdx, [rbp+var_3C0]
__text:0000000100002458                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:000000010000245D                 jmp     $+5
__text:0000000100002462 ; ---------------------------------------------------------------------------
__text:0000000100002462
__text:0000000100002462 loc_100002462:                          ; CODE XREF: ___cxx_global_var_init+60D↑j
__text:0000000100002462                 jmp     $+5
__text:0000000100002467 ; ---------------------------------------------------------------------------
__text:0000000100002467
__text:0000000100002467 loc_100002467:                          ; CODE XREF: ___cxx_global_var_init:loc_100002462↑j
__text:0000000100002467                 lea     rax, unk_100006228
__text:000000010000246E                 mov     [rbp+var_2D8], rax
__text:0000000100002475                 mov     [rbp+var_40], rax
__text:0000000100002479                 lea     rax, aQ         ; "q"
__text:0000000100002480                 mov     [rbp+var_48], rax
__text:0000000100002484                 mov     rcx, [rbp+var_40]
__text:0000000100002488                 mov     [rbp+var_30], rcx
__text:000000010000248C                 mov     [rbp+var_38], rax
__text:0000000100002490                 mov     rax, [rbp+var_30]
__text:0000000100002494                 mov     [rbp+var_28], rax
__text:0000000100002498                 mov     [rbp+var_20], rax
__text:000000010000249C                 mov     [rbp+var_18], rax
__text:00000001000024A0                 mov     [rbp+var_10], rax
__text:00000001000024A4                 mov     rcx, [rbp+var_38]
__text:00000001000024A8                 mov     [rbp+var_8], rcx
__text:00000001000024AC                 mov     rdi, rcx        ; char *
__text:00000001000024AF                 mov     [rbp+var_3C8], rax
__text:00000001000024B6                 mov     [rbp+var_3D0], rcx
__text:00000001000024BD                 call    _strlen
__text:00000001000024C2                 mov     [rbp+var_3D8], rax
__text:00000001000024C9                 jmp     $+5
__text:00000001000024CE ; ---------------------------------------------------------------------------
__text:00000001000024CE
__text:00000001000024CE loc_1000024CE:                          ; CODE XREF: ___cxx_global_var_init+679↑j
__text:00000001000024CE                 mov     rdi, [rbp+var_3C8]
__text:00000001000024D5                 mov     rsi, [rbp+var_3D0]
__text:00000001000024DC                 mov     rdx, [rbp+var_3D8]
__text:00000001000024E3                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:00000001000024E8                 jmp     $+5
__text:00000001000024ED ; ---------------------------------------------------------------------------
__text:00000001000024ED
__text:00000001000024ED loc_1000024ED:                          ; CODE XREF: ___cxx_global_var_init+698↑j
__text:00000001000024ED                 jmp     $+5
__text:00000001000024F2 ; ---------------------------------------------------------------------------
__text:00000001000024F2
__text:00000001000024F2 loc_1000024F2:                          ; CODE XREF: ___cxx_global_var_init:loc_1000024ED↑j
__text:00000001000024F2                 lea     rdi, ___cxx_global_array_dtor ; lpfunc
__text:00000001000024F9                 mov     rsi, 0          ; obj
__text:0000000100002503                 lea     rdx, __mh_execute_header ; lpdso_handle
__text:000000010000250A                 call    ___cxa_atexit
__text:000000010000250F                 mov     [rbp+var_3DC], eax
__text:0000000100002515                 add     rsp, 400h
__text:000000010000251C                 pop     rbp
__text:000000010000251D                 retn
__text:000000010000251D ___cxx_global_var_init endp
__text:000000010000251D
__text:000000010000251E ; ---------------------------------------------------------------------------
__text:000000010000251E                 lea     rcx, __ZL4cons  ; cons
__text:0000000100002525                 mov     esi, edx
__text:0000000100002527                 mov     [rbp-2E0h], rax
__text:000000010000252E                 mov     [rbp-2E4h], esi
__text:0000000100002534                 mov     rax, [rbp-2D8h]
__text:000000010000253B                 cmp     rcx, rax
__text:000000010000253E                 mov     [rbp-3E8h], rax
__text:0000000100002545                 jz      loc_100002588
__text:000000010000254B
__text:000000010000254B loc_10000254B:                          ; CODE XREF: __text:0000000100002582↓j
__text:000000010000254B                 mov     rax, [rbp-3E8h]
__text:0000000100002552                 add     rax, 0FFFFFFFFFFFFFFE8h
__text:0000000100002556                 mov     rdi, rax
__text:0000000100002559                 mov     [rbp-3F0h], rax
__text:0000000100002560                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002565                 jmp     $+5
__text:000000010000256A ; ---------------------------------------------------------------------------
__text:000000010000256A
__text:000000010000256A loc_10000256A:                          ; CODE XREF: __text:0000000100002565↑j
__text:000000010000256A                 lea     rax, __ZL4cons  ; cons
__text:0000000100002571                 mov     rcx, [rbp-3F0h]
__text:0000000100002578                 cmp     rcx, rax
__text:000000010000257B                 mov     [rbp-3E8h], rcx
__text:0000000100002582                 jnz     loc_10000254B
__text:0000000100002588
__text:0000000100002588 loc_100002588:                          ; CODE XREF: __text:0000000100002545↑j
__text:0000000100002588                 jmp     $+5
__text:000000010000258D ; ---------------------------------------------------------------------------
__text:000000010000258D
__text:000000010000258D loc_10000258D:                          ; CODE XREF: __text:loc_100002588↑j
__text:000000010000258D                 mov     rdi, [rbp-2E0h]
__text:0000000100002594                 call    __Unwind_Resume
__text:0000000100002599 ; ---------------------------------------------------------------------------
__text:0000000100002599                 mov     ecx, edx
__text:000000010000259B                 mov     rdi, rax
__text:000000010000259E                 mov     [rbp-3F4h], ecx
__text:00000001000025A4                 call    ___clang_call_terminate
__text:00000001000025A4 ; ---------------------------------------------------------------------------
__text:00000001000025A9                 align 10h
__text:00000001000025B0
__text:00000001000025B0 ; =============== S U B R O U T I N E =======================================
__text:00000001000025B0
__text:00000001000025B0 ; Attributes: bp-based frame
__text:00000001000025B0
__text:00000001000025B0 ; void __cdecl __cxx_global_array_dtor(void *)
__text:00000001000025B0 ___cxx_global_array_dtor proc near      ; DATA XREF: ___cxx_global_var_init:loc_1000024F2↑o
__text:00000001000025B0
__text:00000001000025B0 var_28          = qword ptr -28h
__text:00000001000025B0 var_20          = qword ptr -20h
__text:00000001000025B0 var_8           = qword ptr -8
__text:00000001000025B0
__text:00000001000025B0                 push    rbp
__text:00000001000025B1                 mov     rbp, rsp
__text:00000001000025B4                 sub     rsp, 40h
__text:00000001000025B8                 lea     rax, __ZL4cons  ; cons
__text:00000001000025BF                 add     rax, 0F0h
__text:00000001000025C5                 mov     [rbp+var_8], rdi
__text:00000001000025C9                 mov     [rbp+var_20], rax
__text:00000001000025CD
__text:00000001000025CD loc_1000025CD:                          ; CODE XREF: ___cxx_global_array_dtor+48↓j
__text:00000001000025CD                 mov     rax, [rbp+var_20]
__text:00000001000025D1                 add     rax, 0FFFFFFFFFFFFFFE8h
__text:00000001000025D5                 mov     rdi, rax
__text:00000001000025D8                 mov     [rbp+var_28], rax
__text:00000001000025DC                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000025E1                 jmp     $+5
__text:00000001000025E6 ; ---------------------------------------------------------------------------
__text:00000001000025E6
__text:00000001000025E6 loc_1000025E6:                          ; CODE XREF: ___cxx_global_array_dtor+31↑j
__text:00000001000025E6                 lea     rax, __ZL4cons  ; cons
__text:00000001000025ED                 mov     rcx, [rbp+var_28]
__text:00000001000025F1                 cmp     rcx, rax
__text:00000001000025F4                 mov     [rbp+var_20], rcx
__text:00000001000025F8                 jnz     loc_1000025CD
__text:00000001000025FE                 add     rsp, 40h
__text:0000000100002602                 pop     rbp
__text:0000000100002603                 retn
__text:0000000100002603 ___cxx_global_array_dtor endp
__text:0000000100002603
__text:0000000100002604 ; ---------------------------------------------------------------------------
__text:0000000100002604                 lea     rcx, __ZL4cons  ; cons
__text:000000010000260B                 mov     esi, edx
__text:000000010000260D                 mov     [rbp-10h], rax
__text:0000000100002611                 mov     [rbp-14h], esi
__text:0000000100002614                 mov     rax, [rbp-28h]
__text:0000000100002618                 cmp     rcx, rax
__text:000000010000261B                 mov     [rbp-30h], rax
__text:000000010000261F                 jz      loc_100002656
__text:0000000100002625
__text:0000000100002625 loc_100002625:                          ; CODE XREF: __text:0000000100002650↓j
__text:0000000100002625                 mov     rax, [rbp-30h]
__text:0000000100002629                 add     rax, 0FFFFFFFFFFFFFFE8h
__text:000000010000262D                 mov     rdi, rax
__text:0000000100002630                 mov     [rbp-38h], rax
__text:0000000100002634                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002639                 jmp     $+5
__text:000000010000263E ; ---------------------------------------------------------------------------
__text:000000010000263E
__text:000000010000263E loc_10000263E:                          ; CODE XREF: __text:0000000100002639↑j
__text:000000010000263E                 lea     rax, __ZL4cons  ; cons
__text:0000000100002645                 mov     rcx, [rbp-38h]
__text:0000000100002649                 cmp     rcx, rax
__text:000000010000264C                 mov     [rbp-30h], rcx
__text:0000000100002650                 jnz     loc_100002625
__text:0000000100002656
__text:0000000100002656 loc_100002656:                          ; CODE XREF: __text:000000010000261F↑j
__text:0000000100002656                 jmp     $+5
__text:000000010000265B ; ---------------------------------------------------------------------------
__text:000000010000265B
__text:000000010000265B loc_10000265B:                          ; CODE XREF: __text:loc_100002656↑j
__text:000000010000265B                 mov     rdi, [rbp-10h]
__text:000000010000265F                 call    __Unwind_Resume
__text:0000000100002664 ; ---------------------------------------------------------------------------
__text:0000000100002664                 mov     ecx, edx
__text:0000000100002666                 mov     rdi, rax
__text:0000000100002669                 mov     [rbp-3Ch], ecx
__text:000000010000266C                 call    ___clang_call_terminate
__text:000000010000266C ; ---------------------------------------------------------------------------
__text:0000000100002671                 align 20h
__text:0000000100002680
__text:0000000100002680 ; =============== S U B R O U T I N E =======================================
__text:0000000100002680
__text:0000000100002680 ; Attributes: bp-based frame
__text:0000000100002680
__text:0000000100002680 ___cxx_global_var_init10 proc near      ; CODE XREF: `global constructor keyed to'_a+9↓p
__text:0000000100002680
__text:0000000100002680 var_5C          = dword ptr -5Ch
__text:0000000100002680 var_58          = byte ptr -58h
__text:0000000100002680 var_50          = qword ptr -50h
__text:0000000100002680 var_48          = qword ptr -48h
__text:0000000100002680 var_38          = byte ptr -38h
__text:0000000100002680 var_30          = qword ptr -30h
__text:0000000100002680 var_28          = qword ptr -28h
__text:0000000100002680 var_18          = qword ptr -18h
__text:0000000100002680 var_8           = qword ptr -8
__text:0000000100002680
__text:0000000100002680                 push    rbp
__text:0000000100002681                 mov     rbp, rsp
__text:0000000100002684                 sub     rsp, 60h
__text:0000000100002688                 lea     rax, [rbp+var_38]
__text:000000010000268C                 lea     rcx, [rbp+var_58]
__text:0000000100002690                 lea     rdx, _ma
__text:0000000100002697                 mov     [rbp+var_48], rdx
__text:000000010000269B                 mov     [rbp+var_50], rcx
__text:000000010000269F                 mov     rcx, [rbp+var_48]
__text:00000001000026A3                 mov     rdx, [rbp+var_50]
__text:00000001000026A7                 mov     [rbp+var_28], rcx
__text:00000001000026AB                 mov     [rbp+var_30], rdx
__text:00000001000026AF                 mov     rdi, [rbp+var_28]
__text:00000001000026B3                 mov     [rbp+var_18], rax
__text:00000001000026B7                 mov     rcx, [rbp+var_18]
__text:00000001000026BB                 mov     [rbp+var_8], rcx
__text:00000001000026BF                 mov     rsi, rax
__text:00000001000026C2                 call    j___ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_ ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::__tree(std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true> const&)
__text:00000001000026C7                 mov     rax, cs:__ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEED1Ev_ptr
__text:00000001000026CE                 lea     rcx, _ma
__text:00000001000026D5                 lea     rdx, __mh_execute_header ; lpdso_handle
__text:00000001000026DC                 mov     rdi, rax        ; lpfunc
__text:00000001000026DF                 mov     rsi, rcx        ; obj
__text:00000001000026E2                 call    ___cxa_atexit
__text:00000001000026E7                 mov     [rbp+var_5C], eax
__text:00000001000026EA                 add     rsp, 60h
__text:00000001000026EE                 pop     rbp
__text:00000001000026EF                 retn
__text:00000001000026EF ___cxx_global_var_init10 endp
__text:00000001000026EF
__text:00000001000026F0
__text:00000001000026F0 ; =============== S U B R O U T I N E =======================================
__text:00000001000026F0
__text:00000001000026F0 ; Attributes: bp-based frame
__text:00000001000026F0
__text:00000001000026F0 ; `global constructor keyed to'_a
__text:00000001000026F0                 public __GLOBAL__I_a
__text:00000001000026F0 __GLOBAL__I_a   proc near               ; DATA XREF: __mod_init_func:0000000100006140↓o
__text:00000001000026F0                 push    rbp
__text:00000001000026F1                 mov     rbp, rsp
__text:00000001000026F4                 call    ___cxx_global_var_init
__text:00000001000026F9                 call    ___cxx_global_var_init10
__text:00000001000026FE                 pop     rbp
__text:00000001000026FF                 retn
__text:00000001000026FF __GLOBAL__I_a   endp
__text:00000001000026FF
__text:0000000100002700
__text:0000000100002700 ; =============== S U B R O U T I N E =======================================
__text:0000000100002700
__text:0000000100002700 ; Attributes: noreturn bp-based frame
__text:0000000100002700
__text:0000000100002700 ___clang_call_terminate proc near       ; CODE XREF: _main+7CC↑p
__text:0000000100002700                                         ; __text:0000000100001E3D↑p ...
__text:0000000100002700
__text:0000000100002700 var_8           = qword ptr -8
__text:0000000100002700
__text:0000000100002700                 push    rbp
__text:0000000100002701                 mov     rbp, rsp
__text:0000000100002704                 sub     rsp, 10h
__text:0000000100002708                 call    ___cxa_begin_catch
__text:000000010000270D                 mov     [rbp+var_8], rax
__text:0000000100002711                 call    __ZSt9terminatev ; std::terminate(void)
__text:0000000100002711 ___clang_call_terminate endp
__text:0000000100002711
__text:0000000100002711 ; ---------------------------------------------------------------------------
__text:0000000100002716                 align 20h
__text:0000000100002720
__text:0000000100002720 ; =============== S U B R O U T I N E =======================================
__text:0000000100002720
__text:0000000100002720 ; Attributes: bp-based frame
__text:0000000100002720
__text:0000000100002720 ; std::__1::map<char, char, std::__1::less<char>, std::__1::allocator<std::__1::pair<char const, char>>>::~map()
__text:0000000100002720 __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEED1Ev proc near
__text:0000000100002720                                         ; DATA XREF: __got:__ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEED1Ev_ptr↓o
__text:0000000100002720
__text:0000000100002720 var_8           = qword ptr -8
__text:0000000100002720
__text:0000000100002720                 push    rbp
__text:0000000100002721                 mov     rbp, rsp
__text:0000000100002724                 sub     rsp, 10h
__text:0000000100002728                 mov     [rbp+var_8], rdi
__text:000000010000272C                 mov     rdi, [rbp+var_8]
__text:0000000100002730                 call    j___ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEED2Ev ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::~map()
__text:0000000100002735                 add     rsp, 10h
__text:0000000100002739                 pop     rbp
__text:000000010000273A                 retn
__text:000000010000273A __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEED1Ev endp
__text:000000010000273A
__text:000000010000273A ; ---------------------------------------------------------------------------
__text:000000010000273B                 align 20h
__text:0000000100002740
__text:0000000100002740 ; =============== S U B R O U T I N E =======================================
__text:0000000100002740
__text:0000000100002740 ; Attributes: bp-based frame
__text:0000000100002740
__text:0000000100002740 ; std::__1::map<char, char, std::__1::less<char>, std::__1::allocator<std::__1::pair<char const, char>>>::operator[](char const&)
__text:0000000100002740 __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEEixERS5_ proc near
__text:0000000100002740                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEEixERS5__ptr↓o
__text:0000000100002740
__text:0000000100002740 var_6E0         = qword ptr -6E0h
__text:0000000100002740 var_6D8         = qword ptr -6D8h
__text:0000000100002740 var_6D0         = qword ptr -6D0h
__text:0000000100002740 var_6C8         = qword ptr -6C8h
__text:0000000100002740 var_6C0         = qword ptr -6C0h
__text:0000000100002740 var_6B8         = qword ptr -6B8h
__text:0000000100002740 var_6B0         = qword ptr -6B0h
__text:0000000100002740 var_6A8         = qword ptr -6A8h
__text:0000000100002740 var_69C         = dword ptr -69Ch
__text:0000000100002740 var_698         = qword ptr -698h
__text:0000000100002740 var_690         = byte ptr -690h
__text:0000000100002740 var_678         = qword ptr -678h
__text:0000000100002740 var_670         = qword ptr -670h
__text:0000000100002740 var_658         = qword ptr -658h
__text:0000000100002740 var_650         = qword ptr -650h
__text:0000000100002740 var_648         = qword ptr -648h
__text:0000000100002740 var_640         = qword ptr -640h
__text:0000000100002740 var_638         = qword ptr -638h
__text:0000000100002740 var_630         = qword ptr -630h
__text:0000000100002740 var_628         = qword ptr -628h
__text:0000000100002740 var_620         = qword ptr -620h
__text:0000000100002740 var_618         = qword ptr -618h
__text:0000000100002740 var_610         = qword ptr -610h
__text:0000000100002740 var_608         = qword ptr -608h
__text:0000000100002740 var_600         = qword ptr -600h
__text:0000000100002740 var_5F8         = qword ptr -5F8h
__text:0000000100002740 var_5F0         = qword ptr -5F0h
__text:0000000100002740 var_5E8         = qword ptr -5E8h
__text:0000000100002740 var_5E0         = qword ptr -5E0h
__text:0000000100002740 var_5D8         = qword ptr -5D8h
__text:0000000100002740 var_5D0         = qword ptr -5D0h
__text:0000000100002740 var_5C8         = qword ptr -5C8h
__text:0000000100002740 var_5B0         = qword ptr -5B0h
__text:0000000100002740 var_5A8         = qword ptr -5A8h
__text:0000000100002740 var_5A0         = qword ptr -5A0h
__text:0000000100002740 var_598         = qword ptr -598h
__text:0000000100002740 var_590         = qword ptr -590h
__text:0000000100002740 var_588         = qword ptr -588h
__text:0000000100002740 var_580         = qword ptr -580h
__text:0000000100002740 var_578         = qword ptr -578h
__text:0000000100002740 var_570         = qword ptr -570h
__text:0000000100002740 var_558         = qword ptr -558h
__text:0000000100002740 var_550         = qword ptr -550h
__text:0000000100002740 var_548         = qword ptr -548h
__text:0000000100002740 var_540         = qword ptr -540h
__text:0000000100002740 var_528         = qword ptr -528h
__text:0000000100002740 var_520         = qword ptr -520h
__text:0000000100002740 var_518         = qword ptr -518h
__text:0000000100002740 var_510         = qword ptr -510h
__text:0000000100002740 var_508         = qword ptr -508h
__text:0000000100002740 var_500         = qword ptr -500h
__text:0000000100002740 var_4F8         = qword ptr -4F8h
__text:0000000100002740 var_4F0         = qword ptr -4F0h
__text:0000000100002740 var_4E8         = qword ptr -4E8h
__text:0000000100002740 var_4E0         = qword ptr -4E0h
__text:0000000100002740 var_4D8         = qword ptr -4D8h
__text:0000000100002740 var_4D0         = qword ptr -4D0h
__text:0000000100002740 var_4C8         = qword ptr -4C8h
__text:0000000100002740 var_4C0         = qword ptr -4C0h
__text:0000000100002740 var_4B8         = qword ptr -4B8h
__text:0000000100002740 var_398         = qword ptr -398h
__text:0000000100002740 var_390         = qword ptr -390h
__text:0000000100002740 var_388         = qword ptr -388h
__text:0000000100002740 var_380         = qword ptr -380h
__text:0000000100002740 var_378         = qword ptr -378h
__text:0000000100002740 var_370         = qword ptr -370h
__text:0000000100002740 var_368         = qword ptr -368h
__text:0000000100002740 var_360         = qword ptr -360h
__text:0000000100002740 var_358         = qword ptr -358h
__text:0000000100002740 var_350         = qword ptr -350h
__text:0000000100002740 var_348         = qword ptr -348h
__text:0000000100002740 var_340         = qword ptr -340h
__text:0000000100002740 var_338         = qword ptr -338h
__text:0000000100002740 var_330         = qword ptr -330h
__text:0000000100002740 var_328         = qword ptr -328h
__text:0000000100002740 var_320         = qword ptr -320h
__text:0000000100002740 var_318         = qword ptr -318h
__text:0000000100002740 var_310         = qword ptr -310h
__text:0000000100002740 var_308         = qword ptr -308h
__text:0000000100002740 var_300         = qword ptr -300h
__text:0000000100002740 var_2F8         = qword ptr -2F8h
__text:0000000100002740 var_2F0         = qword ptr -2F0h
__text:0000000100002740 var_2E8         = qword ptr -2E8h
__text:0000000100002740 var_2E0         = qword ptr -2E0h
__text:0000000100002740 var_2D8         = qword ptr -2D8h
__text:0000000100002740 var_2D0         = qword ptr -2D0h
__text:0000000100002740 var_2C8         = qword ptr -2C8h
__text:0000000100002740 var_2C0         = qword ptr -2C0h
__text:0000000100002740 var_2B8         = qword ptr -2B8h
__text:0000000100002740 var_2B0         = qword ptr -2B0h
__text:0000000100002740 var_2A8         = qword ptr -2A8h
__text:0000000100002740 var_2A0         = qword ptr -2A0h
__text:0000000100002740 var_298         = qword ptr -298h
__text:0000000100002740 var_290         = qword ptr -290h
__text:0000000100002740 var_288         = qword ptr -288h
__text:0000000100002740 var_280         = qword ptr -280h
__text:0000000100002740 var_278         = qword ptr -278h
__text:0000000100002740 var_270         = qword ptr -270h
__text:0000000100002740 var_268         = qword ptr -268h
__text:0000000100002740 var_260         = qword ptr -260h
__text:0000000100002740 var_258         = qword ptr -258h
__text:0000000100002740 var_250         = qword ptr -250h
__text:0000000100002740 var_248         = qword ptr -248h
__text:0000000100002740 var_230         = qword ptr -230h
__text:0000000100002740 var_228         = qword ptr -228h
__text:0000000100002740 var_220         = qword ptr -220h
__text:0000000100002740 var_218         = qword ptr -218h
__text:0000000100002740 var_210         = qword ptr -210h
__text:0000000100002740 var_208         = qword ptr -208h
__text:0000000100002740 var_200         = qword ptr -200h
__text:0000000100002740 var_1F8         = qword ptr -1F8h
__text:0000000100002740 var_1F0         = qword ptr -1F0h
__text:0000000100002740 var_1D8         = qword ptr -1D8h
__text:0000000100002740 var_1D0         = qword ptr -1D0h
__text:0000000100002740 var_1C8         = qword ptr -1C8h
__text:0000000100002740 var_1C0         = qword ptr -1C0h
__text:0000000100002740 var_1A8         = qword ptr -1A8h
__text:0000000100002740 var_1A0         = qword ptr -1A0h
__text:0000000100002740 var_198         = qword ptr -198h
__text:0000000100002740 var_190         = qword ptr -190h
__text:0000000100002740 var_188         = qword ptr -188h
__text:0000000100002740 var_180         = qword ptr -180h
__text:0000000100002740 var_178         = qword ptr -178h
__text:0000000100002740 var_170         = qword ptr -170h
__text:0000000100002740 var_168         = qword ptr -168h
__text:0000000100002740 var_160         = qword ptr -160h
__text:0000000100002740 var_158         = qword ptr -158h
__text:0000000100002740 var_150         = qword ptr -150h
__text:0000000100002740 var_148         = qword ptr -148h
__text:0000000100002740 var_140         = qword ptr -140h
__text:0000000100002740 var_138         = qword ptr -138h
__text:0000000100002740 var_130         = qword ptr -130h
__text:0000000100002740 var_118         = qword ptr -118h
__text:0000000100002740 var_110         = qword ptr -110h
__text:0000000100002740 var_108         = qword ptr -108h
__text:0000000100002740 var_100         = qword ptr -100h
__text:0000000100002740 var_F8          = qword ptr -0F8h
__text:0000000100002740 var_F0          = qword ptr -0F0h
__text:0000000100002740 var_E8          = qword ptr -0E8h
__text:0000000100002740 var_E0          = qword ptr -0E0h
__text:0000000100002740 var_D8          = qword ptr -0D8h
__text:0000000100002740 var_C0          = qword ptr -0C0h
__text:0000000100002740 var_B8          = qword ptr -0B8h
__text:0000000100002740 var_B0          = qword ptr -0B0h
__text:0000000100002740 var_A8          = qword ptr -0A8h
__text:0000000100002740 var_90          = qword ptr -90h
__text:0000000100002740 var_88          = qword ptr -88h
__text:0000000100002740 var_80          = qword ptr -80h
__text:0000000100002740 var_78          = qword ptr -78h
__text:0000000100002740 var_70          = qword ptr -70h
__text:0000000100002740 var_68          = qword ptr -68h
__text:0000000100002740 var_60          = qword ptr -60h
__text:0000000100002740 var_58          = qword ptr -58h
__text:0000000100002740 var_50          = qword ptr -50h
__text:0000000100002740 var_48          = qword ptr -48h
__text:0000000100002740 var_40          = qword ptr -40h
__text:0000000100002740 var_38          = qword ptr -38h
__text:0000000100002740 var_30          = qword ptr -30h
__text:0000000100002740 var_28          = qword ptr -28h
__text:0000000100002740 var_20          = qword ptr -20h
__text:0000000100002740 var_18          = qword ptr -18h
__text:0000000100002740 var_10          = qword ptr -10h
__text:0000000100002740 var_8           = qword ptr -8
__text:0000000100002740
__text:0000000100002740                 push    rbp
__text:0000000100002741                 mov     rbp, rsp
__text:0000000100002744                 sub     rsp, 6E0h
__text:000000010000274B                 lea     rax, [rbp+var_640]
__text:0000000100002752                 mov     [rbp+var_630], rdi
__text:0000000100002759                 mov     [rbp+var_638], rsi
__text:0000000100002760                 mov     rsi, [rbp+var_630]
__text:0000000100002767                 mov     rdx, [rbp+var_638]
__text:000000010000276E                 mov     rdi, rsi
__text:0000000100002771                 mov     [rbp+var_6A8], rsi
__text:0000000100002778                 mov     rsi, rax
__text:000000010000277B                 call    j___ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS5_ ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)
__text:0000000100002780                 lea     rdx, [rbp+var_658]
__text:0000000100002787                 lea     rsi, [rbp+var_628]
__text:000000010000278E                 mov     [rbp+var_648], rax
__text:0000000100002795                 mov     rax, [rbp+var_648]
__text:000000010000279C                 mov     rax, [rax]
__text:000000010000279F                 mov     [rbp+var_650], rax
__text:00000001000027A6                 mov     rax, [rbp+var_648]
__text:00000001000027AD                 mov     rax, [rax]
__text:00000001000027B0                 mov     [rbp+var_618], rsi
__text:00000001000027B7                 mov     [rbp+var_620], 0FFFFFFFFFFFFFFFFh
__text:00000001000027C2                 mov     rsi, [rbp+var_618]
__text:00000001000027C9                 mov     rdi, [rbp+var_620]
__text:00000001000027D0                 mov     [rbp+var_608], rsi
__text:00000001000027D7                 mov     [rbp+var_610], rdi
__text:00000001000027DE                 mov     rsi, [rbp+var_608]
__text:00000001000027E5                 mov     qword ptr [rsi], 0
__text:00000001000027EC                 mov     rsi, [rbp+var_628]
__text:00000001000027F3                 mov     [rbp+var_658], rsi
__text:00000001000027FA                 mov     [rbp+var_600], rdx
__text:0000000100002801                 cmp     rax, 0
__text:0000000100002807                 jnz     loc_1000031BB
__text:000000010000280D                 lea     rdi, [rbp+var_690]
__text:0000000100002814                 mov     rdx, [rbp+var_638]
__text:000000010000281B                 mov     rsi, [rbp+var_6A8]
__text:0000000100002822                 call    j___ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEE25__construct_node_with_keyERS5_ ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)
__text:0000000100002827                 lea     rdx, [rbp+var_4D8]
__text:000000010000282E                 lea     rsi, [rbp+var_690]
__text:0000000100002835                 mov     [rbp+var_4E0], rsi
__text:000000010000283C                 mov     rsi, [rbp+var_4E0]
__text:0000000100002843                 mov     [rbp+var_4C8], rdx
__text:000000010000284A                 mov     [rbp+var_4D0], rsi
__text:0000000100002851                 mov     rdx, [rbp+var_4C8]
__text:0000000100002858                 mov     rsi, [rbp+var_4D0]
__text:000000010000285F                 mov     [rbp+var_4B8], rdx
__text:0000000100002866                 mov     [rbp+var_4C0], rsi
__text:000000010000286D                 mov     rdx, [rbp+var_4B8]
__text:0000000100002874                 mov     rsi, [rbp+var_4C0]
__text:000000010000287B                 mov     [rdx], rsi
__text:000000010000287E                 mov     rdx, [rbp+var_4D8]
__text:0000000100002885                 mov     [rbp+var_6B0], rdx
__text:000000010000288C                 lea     rax, [rbp+var_308]
__text:0000000100002893                 lea     rcx, [rbp+var_2F8]
__text:000000010000289A                 lea     rdx, [rbp+var_330]
__text:00000001000028A1                 lea     rsi, [rbp+var_320]
__text:00000001000028A8                 lea     rdi, [rbp+var_378]
__text:00000001000028AF                 lea     r8, [rbp+var_670]
__text:00000001000028B6                 mov     r9, [rbp+var_6B0]
__text:00000001000028BD                 mov     [rbp+var_678], r9
__text:00000001000028C4                 mov     r10, [rbp+var_678]
__text:00000001000028CB                 mov     [rbp+var_390], r8
__text:00000001000028D2                 mov     [rbp+var_398], r10
__text:00000001000028D9                 mov     r8, [rbp+var_390]
__text:00000001000028E0                 mov     r10, [rbp+var_398]
__text:00000001000028E7                 mov     [rbp+var_370], r8
__text:00000001000028EE                 mov     [rbp+var_378], r10
__text:00000001000028F5                 mov     r8, [rbp+var_370]
__text:00000001000028FC                 mov     [rbp+var_368], rdi
__text:0000000100002903                 mov     r10, [rbp+var_368]
__text:000000010000290A                 mov     r10, [r10]
__text:000000010000290D                 mov     [rbp+var_2A0], r10
__text:0000000100002914                 mov     r10, [rbp+var_2A0]
__text:000000010000291B                 mov     [rbp+var_298], r10
__text:0000000100002922                 mov     r11, [rbp+var_298]
__text:0000000100002929                 mov     [rbp+var_290], r11
__text:0000000100002930                 mov     r11, [rbp+var_290]
__text:0000000100002937                 mov     r11, [r11]
__text:000000010000293A                 mov     [rbp+var_2A8], r11
__text:0000000100002941                 mov     [rbp+var_288], r10
__text:0000000100002948                 mov     r10, [rbp+var_288]
__text:000000010000294F                 mov     [rbp+var_280], r10
__text:0000000100002956                 mov     r10, [rbp+var_280]
__text:000000010000295D                 mov     qword ptr [r10], 0
__text:0000000100002964                 mov     r10, [rbp+var_2A8]
__text:000000010000296B                 mov     [rbp+var_2B0], rdi
__text:0000000100002972                 mov     rdi, [rbp+var_2B0]
__text:0000000100002979                 mov     rdi, [rdi]
__text:000000010000297C                 mov     [rbp+var_2C8], rdi
__text:0000000100002983                 mov     rdi, [rbp+var_2C8]
__text:000000010000298A                 mov     [rbp+var_2C0], rdi
__text:0000000100002991                 mov     rdi, [rbp+var_2C0]
__text:0000000100002998                 mov     [rbp+var_2B8], rdi
__text:000000010000299F                 mov     rdi, [rbp+var_2B8]
__text:00000001000029A6                 add     rdi, 8
__text:00000001000029AD                 mov     [rbp+var_2D0], rdi
__text:00000001000029B4                 mov     rdi, [rbp+var_2D0]
__text:00000001000029BB                 mov     r11, [rdi]
__text:00000001000029BE                 mov     [rbp+var_388], r11
__text:00000001000029C5                 mov     rdi, [rdi+8]
__text:00000001000029C9                 mov     [rbp+var_380], rdi
__text:00000001000029D0                 mov     rdi, [rbp+var_388]
__text:00000001000029D7                 mov     r11, [rbp+var_380]
__text:00000001000029DE                 mov     [rbp+var_348], r8
__text:00000001000029E5                 mov     [rbp+var_350], r10
__text:00000001000029EC                 mov     [rbp+var_360], rdi
__text:00000001000029F3                 mov     [rbp+var_358], r11
__text:00000001000029FA                 mov     rdi, [rbp+var_348]
__text:0000000100002A01                 mov     r8, [rbp+var_350]
__text:0000000100002A08                 mov     r10, [rbp+var_360]
__text:0000000100002A0F                 mov     r11, [rbp+var_358]
__text:0000000100002A16                 mov     [rbp+var_318], rdi
__text:0000000100002A1D                 mov     [rbp+var_320], r8
__text:0000000100002A24                 mov     [rbp+var_330], r10
__text:0000000100002A2B                 mov     [rbp+var_328], r11
__text:0000000100002A32                 mov     rdi, [rbp+var_318]
__text:0000000100002A39                 mov     [rbp+var_310], rsi
__text:0000000100002A40                 mov     rsi, [rbp+var_310]
__text:0000000100002A47                 mov     rsi, [rsi]
__text:0000000100002A4A                 mov     [rbp+var_2D8], rdx
__text:0000000100002A51                 mov     rdx, [rbp+var_2D8]
__text:0000000100002A58                 mov     r8, [rdx]
__text:0000000100002A5B                 mov     [rbp+var_340], r8
__text:0000000100002A62                 mov     rdx, [rdx+8]
__text:0000000100002A66                 mov     [rbp+var_338], rdx
__text:0000000100002A6D                 mov     rdx, [rbp+var_340]
__text:0000000100002A74                 mov     r8, [rbp+var_338]
__text:0000000100002A7B                 mov     [rbp+var_2F0], rdi
__text:0000000100002A82                 mov     [rbp+var_2F8], rsi
__text:0000000100002A89                 mov     [rbp+var_308], rdx
__text:0000000100002A90                 mov     [rbp+var_300], r8
__text:0000000100002A97                 mov     rdx, [rbp+var_2F0]
__text:0000000100002A9E                 mov     [rbp+var_2E8], rcx
__text:0000000100002AA5                 mov     rcx, [rbp+var_2E8]
__text:0000000100002AAC                 mov     rcx, [rcx]
__text:0000000100002AAF                 mov     [rdx], rcx
__text:0000000100002AB2                 mov     [rbp+var_2E0], rax
__text:0000000100002AB9                 mov     rax, [rbp+var_2E0]
__text:0000000100002AC0                 mov     rcx, [rax]
__text:0000000100002AC3                 mov     [rdx+8], rcx
__text:0000000100002AC7                 mov     rax, [rax+8]
__text:0000000100002ACB                 mov     [rdx+10h], rax
__text:0000000100002ACF                 lea     rax, [rbp+var_690]
__text:0000000100002AD6                 mov     [rbp+var_160], rax
__text:0000000100002ADD                 mov     rax, [rbp+var_160]
__text:0000000100002AE4                 mov     [rbp+var_158], rax
__text:0000000100002AEB                 mov     rax, [rbp+var_158]
__text:0000000100002AF2                 mov     [rbp+var_140], rax
__text:0000000100002AF9                 mov     [rbp+var_148], 0
__text:0000000100002B04                 mov     rax, [rbp+var_140]
__text:0000000100002B0B                 mov     [rbp+var_138], rax
__text:0000000100002B12                 mov     rcx, [rbp+var_138]
__text:0000000100002B19                 mov     [rbp+var_130], rcx
__text:0000000100002B20                 mov     rcx, [rbp+var_130]
__text:0000000100002B27                 mov     rcx, [rcx]
__text:0000000100002B2A                 mov     [rbp+var_150], rcx
__text:0000000100002B31                 mov     rcx, [rbp+var_148]
__text:0000000100002B38                 mov     [rbp+var_68], rax
__text:0000000100002B3C                 mov     rdx, [rbp+var_68]
__text:0000000100002B40                 mov     [rbp+var_60], rdx
__text:0000000100002B44                 mov     rdx, [rbp+var_60]
__text:0000000100002B48                 mov     [rdx], rcx
__text:0000000100002B4B                 cmp     [rbp+var_150], 0
__text:0000000100002B56                 mov     [rbp+var_6B8], rax
__text:0000000100002B5D                 jz      loc_100002CD3
__text:0000000100002B63                 mov     rax, [rbp+var_6B8]
__text:0000000100002B6A                 mov     [rbp+var_58], rax
__text:0000000100002B6E                 mov     rcx, [rbp+var_58]
__text:0000000100002B72                 mov     [rbp+var_50], rcx
__text:0000000100002B76                 mov     rcx, [rbp+var_50]
__text:0000000100002B7A                 add     rcx, 8
__text:0000000100002B81                 mov     rdx, [rbp+var_150]
__text:0000000100002B88                 mov     [rbp+var_110], rcx
__text:0000000100002B8F                 mov     [rbp+var_118], rdx
__text:0000000100002B96                 mov     rcx, [rbp+var_110]
__text:0000000100002B9D                 test    byte ptr [rcx+9], 1
__text:0000000100002BA1                 mov     [rbp+var_6C0], rcx
__text:0000000100002BA8                 jz      loc_100002C05
__text:0000000100002BAE                 mov     rax, [rbp+var_6C0]
__text:0000000100002BB5                 mov     rcx, [rax]
__text:0000000100002BB8                 mov     rdx, [rbp+var_118]
__text:0000000100002BBF                 add     rdx, 19h
__text:0000000100002BC6                 add     rdx, 1
__text:0000000100002BCD                 mov     [rbp+var_108], rdx
__text:0000000100002BD4                 mov     rdx, [rbp+var_108]
__text:0000000100002BDB                 mov     [rbp+var_B8], rcx
__text:0000000100002BE2                 mov     [rbp+var_C0], rdx
__text:0000000100002BE9                 mov     rcx, [rbp+var_B8]
__text:0000000100002BF0                 mov     rdx, [rbp+var_C0]
__text:0000000100002BF7                 mov     [rbp+var_A8], rcx
__text:0000000100002BFE                 mov     [rbp+var_B0], rdx
__text:0000000100002C05
__text:0000000100002C05 loc_100002C05:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+468↑j
__text:0000000100002C05                 mov     rax, [rbp+var_6C0]
__text:0000000100002C0C                 test    byte ptr [rax+8], 1
__text:0000000100002C10                 jz      loc_100002C5A
__text:0000000100002C16                 mov     rax, [rbp+var_6C0]
__text:0000000100002C1D                 mov     rcx, [rax]
__text:0000000100002C20                 mov     rdx, [rbp+var_118]
__text:0000000100002C27                 add     rdx, 19h
__text:0000000100002C2E                 mov     [rbp+var_70], rdx
__text:0000000100002C32                 mov     rdx, [rbp+var_70]
__text:0000000100002C36                 mov     [rbp+var_88], rcx
__text:0000000100002C3D                 mov     [rbp+var_90], rdx
__text:0000000100002C44                 mov     rcx, [rbp+var_88]
__text:0000000100002C4B                 mov     rdx, [rbp+var_90]
__text:0000000100002C52                 mov     [rbp+var_78], rcx
__text:0000000100002C56                 mov     [rbp+var_80], rdx
__text:0000000100002C5A
__text:0000000100002C5A loc_100002C5A:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+4D0↑j
__text:0000000100002C5A                 cmp     [rbp+var_118], 0
__text:0000000100002C65                 jz      loc_100002CCE
__text:0000000100002C6B                 mov     rax, [rbp+var_6C0]
__text:0000000100002C72                 mov     rcx, [rax]
__text:0000000100002C75                 mov     rdx, [rbp+var_118]
__text:0000000100002C7C                 mov     [rbp+var_F0], rcx
__text:0000000100002C83                 mov     [rbp+var_F8], rdx
__text:0000000100002C8A                 mov     [rbp+var_100], 1
__text:0000000100002C95                 mov     rcx, [rbp+var_F0]
__text:0000000100002C9C                 mov     rdx, [rbp+var_F8]
__text:0000000100002CA3                 mov     rsi, [rbp+var_100]
__text:0000000100002CAA                 mov     [rbp+var_D8], rcx
__text:0000000100002CB1                 mov     [rbp+var_E0], rdx
__text:0000000100002CB8                 mov     [rbp+var_E8], rsi
__text:0000000100002CBF                 mov     rcx, [rbp+var_E0]
__text:0000000100002CC6                 mov     rdi, rcx        ; void *
__text:0000000100002CC9                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100002CCE
__text:0000000100002CCE loc_100002CCE:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+525↑j
__text:0000000100002CCE                 jmp     $+5
__text:0000000100002CD3 ; ---------------------------------------------------------------------------
__text:0000000100002CD3
__text:0000000100002CD3 loc_100002CD3:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+41D↑j
__text:0000000100002CD3                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&):loc_100002CCE↑j
__text:0000000100002CD3                 mov     rsi, [rbp+var_640]
__text:0000000100002CDA                 mov     rdx, [rbp+var_648]
__text:0000000100002CE1                 lea     rax, [rbp+var_670]
__text:0000000100002CE8                 mov     [rbp+var_48], rax
__text:0000000100002CEC                 mov     [rbp+var_40], rax
__text:0000000100002CF0                 mov     [rbp+var_38], rax
__text:0000000100002CF4                 mov     rcx, [rbp+var_670]
__text:0000000100002CFB                 mov     rdi, [rbp+var_6A8]
__text:0000000100002D02                 call    j___ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_ ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::__insert_node_at(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *&,std::__1::__tree_node_base<void *> *)
__text:0000000100002D07                 jmp     $+5
__text:0000000100002D0C ; ---------------------------------------------------------------------------
__text:0000000100002D0C
__text:0000000100002D0C loc_100002D0C:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+5C7↑j
__text:0000000100002D0C                 lea     rax, [rbp+var_670]
__text:0000000100002D13                 mov     [rbp+var_28], rax
__text:0000000100002D17                 mov     rcx, [rbp+var_28]
__text:0000000100002D1B                 mov     [rbp+var_20], rcx
__text:0000000100002D1F                 mov     rdx, [rbp+var_20]
__text:0000000100002D23                 mov     [rbp+var_18], rdx
__text:0000000100002D27                 mov     rdx, [rbp+var_18]
__text:0000000100002D2B                 mov     rdx, [rdx]
__text:0000000100002D2E                 mov     [rbp+var_30], rdx
__text:0000000100002D32                 mov     [rbp+var_10], rcx
__text:0000000100002D36                 mov     rcx, [rbp+var_10]
__text:0000000100002D3A                 mov     [rbp+var_8], rcx
__text:0000000100002D3E                 mov     rcx, [rbp+var_8]
__text:0000000100002D42                 mov     qword ptr [rcx], 0
__text:0000000100002D49                 mov     rcx, [rbp+var_30]
__text:0000000100002D4D                 mov     [rbp+var_650], rcx
__text:0000000100002D54                 mov     [rbp+var_278], rax
__text:0000000100002D5B                 mov     rax, [rbp+var_278]
__text:0000000100002D62                 mov     [rbp+var_270], rax
__text:0000000100002D69                 mov     rax, [rbp+var_270]
__text:0000000100002D70                 mov     [rbp+var_258], rax
__text:0000000100002D77                 mov     [rbp+var_260], 0
__text:0000000100002D82                 mov     rax, [rbp+var_258]
__text:0000000100002D89                 mov     [rbp+var_250], rax
__text:0000000100002D90                 mov     rcx, [rbp+var_250]
__text:0000000100002D97                 mov     [rbp+var_248], rcx
__text:0000000100002D9E                 mov     rcx, [rbp+var_248]
__text:0000000100002DA5                 mov     rcx, [rcx]
__text:0000000100002DA8                 mov     [rbp+var_268], rcx
__text:0000000100002DAF                 mov     rcx, [rbp+var_260]
__text:0000000100002DB6                 mov     [rbp+var_180], rax
__text:0000000100002DBD                 mov     rdx, [rbp+var_180]
__text:0000000100002DC4                 mov     [rbp+var_178], rdx
__text:0000000100002DCB                 mov     rdx, [rbp+var_178]
__text:0000000100002DD2                 mov     [rdx], rcx
__text:0000000100002DD5                 cmp     [rbp+var_268], 0
__text:0000000100002DE0                 mov     [rbp+var_6C8], rax
__text:0000000100002DE7                 jz      loc_100002F75
__text:0000000100002DED                 mov     rax, [rbp+var_6C8]
__text:0000000100002DF4                 mov     [rbp+var_170], rax
__text:0000000100002DFB                 mov     rcx, [rbp+var_170]
__text:0000000100002E02                 mov     [rbp+var_168], rcx
__text:0000000100002E09                 mov     rcx, [rbp+var_168]
__text:0000000100002E10                 add     rcx, 8
__text:0000000100002E17                 mov     rdx, [rbp+var_268]
__text:0000000100002E1E                 mov     [rbp+var_228], rcx
__text:0000000100002E25                 mov     [rbp+var_230], rdx
__text:0000000100002E2C                 mov     rcx, [rbp+var_228]
__text:0000000100002E33                 test    byte ptr [rcx+9], 1
__text:0000000100002E37                 mov     [rbp+var_6D0], rcx
__text:0000000100002E3E                 jz      loc_100002E9B
__text:0000000100002E44                 mov     rax, [rbp+var_6D0]
__text:0000000100002E4B                 mov     rcx, [rax]
__text:0000000100002E4E                 mov     rdx, [rbp+var_230]
__text:0000000100002E55                 add     rdx, 19h
__text:0000000100002E5C                 add     rdx, 1
__text:0000000100002E63                 mov     [rbp+var_220], rdx
__text:0000000100002E6A                 mov     rdx, [rbp+var_220]
__text:0000000100002E71                 mov     [rbp+var_1D0], rcx
__text:0000000100002E78                 mov     [rbp+var_1D8], rdx
__text:0000000100002E7F                 mov     rcx, [rbp+var_1D0]
__text:0000000100002E86                 mov     rdx, [rbp+var_1D8]
__text:0000000100002E8D                 mov     [rbp+var_1C0], rcx
__text:0000000100002E94                 mov     [rbp+var_1C8], rdx
__text:0000000100002E9B
__text:0000000100002E9B loc_100002E9B:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+6FE↑j
__text:0000000100002E9B                 mov     rax, [rbp+var_6D0]
__text:0000000100002EA2                 test    byte ptr [rax+8], 1
__text:0000000100002EA6                 jz      loc_100002EFC
__text:0000000100002EAC                 mov     rax, [rbp+var_6D0]
__text:0000000100002EB3                 mov     rcx, [rax]
__text:0000000100002EB6                 mov     rdx, [rbp+var_230]
__text:0000000100002EBD                 add     rdx, 19h
__text:0000000100002EC4                 mov     [rbp+var_188], rdx
__text:0000000100002ECB                 mov     rdx, [rbp+var_188]
__text:0000000100002ED2                 mov     [rbp+var_1A0], rcx
__text:0000000100002ED9                 mov     [rbp+var_1A8], rdx
__text:0000000100002EE0                 mov     rcx, [rbp+var_1A0]
__text:0000000100002EE7                 mov     rdx, [rbp+var_1A8]
__text:0000000100002EEE                 mov     [rbp+var_190], rcx
__text:0000000100002EF5                 mov     [rbp+var_198], rdx
__text:0000000100002EFC
__text:0000000100002EFC loc_100002EFC:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+766↑j
__text:0000000100002EFC                 cmp     [rbp+var_230], 0
__text:0000000100002F07                 jz      loc_100002F70
__text:0000000100002F0D                 mov     rax, [rbp+var_6D0]
__text:0000000100002F14                 mov     rcx, [rax]
__text:0000000100002F17                 mov     rdx, [rbp+var_230]
__text:0000000100002F1E                 mov     [rbp+var_208], rcx
__text:0000000100002F25                 mov     [rbp+var_210], rdx
__text:0000000100002F2C                 mov     [rbp+var_218], 1
__text:0000000100002F37                 mov     rcx, [rbp+var_208]
__text:0000000100002F3E                 mov     rdx, [rbp+var_210]
__text:0000000100002F45                 mov     rsi, [rbp+var_218]
__text:0000000100002F4C                 mov     [rbp+var_1F0], rcx
__text:0000000100002F53                 mov     [rbp+var_1F8], rdx
__text:0000000100002F5A                 mov     [rbp+var_200], rsi
__text:0000000100002F61                 mov     rcx, [rbp+var_1F8]
__text:0000000100002F68                 mov     rdi, rcx        ; void *
__text:0000000100002F6B                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100002F70
__text:0000000100002F70 loc_100002F70:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+7C7↑j
__text:0000000100002F70                 jmp     $+5
__text:0000000100002F75 ; ---------------------------------------------------------------------------
__text:0000000100002F75
__text:0000000100002F75 loc_100002F75:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+6A7↑j
__text:0000000100002F75                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&):loc_100002F70↑j
__text:0000000100002F75                 jmp     loc_1000031BB
__text:0000000100002F7A ; ---------------------------------------------------------------------------
__text:0000000100002F7A                 lea     rcx, [rbp+var_670]
__text:0000000100002F81                 mov     esi, edx
__text:0000000100002F83                 mov     [rbp+var_698], rax
__text:0000000100002F8A                 mov     [rbp+var_69C], esi
__text:0000000100002F90                 mov     [rbp+var_5F8], rcx
__text:0000000100002F97                 mov     rax, [rbp+var_5F8]
__text:0000000100002F9E                 mov     [rbp+var_5F0], rax
__text:0000000100002FA5                 mov     rax, [rbp+var_5F0]
__text:0000000100002FAC                 mov     [rbp+var_5D8], rax
__text:0000000100002FB3                 mov     [rbp+var_5E0], 0
__text:0000000100002FBE                 mov     rax, [rbp+var_5D8]
__text:0000000100002FC5                 mov     [rbp+var_5D0], rax
__text:0000000100002FCC                 mov     rcx, [rbp+var_5D0]
__text:0000000100002FD3                 mov     [rbp+var_5C8], rcx
__text:0000000100002FDA                 mov     rcx, [rbp+var_5C8]
__text:0000000100002FE1                 mov     rcx, [rcx]
__text:0000000100002FE4                 mov     [rbp+var_5E8], rcx
__text:0000000100002FEB                 mov     rcx, [rbp+var_5E0]
__text:0000000100002FF2                 mov     [rbp+var_500], rax
__text:0000000100002FF9                 mov     rdx, [rbp+var_500]
__text:0000000100003000                 mov     [rbp+var_4F8], rdx
__text:0000000100003007                 mov     rdx, [rbp+var_4F8]
__text:000000010000300E                 mov     [rdx], rcx
__text:0000000100003011                 cmp     [rbp+var_5E8], 0
__text:000000010000301C                 mov     [rbp+var_6D8], rax
__text:0000000100003023                 jz      loc_1000031B1
__text:0000000100003029                 mov     rax, [rbp+var_6D8]
__text:0000000100003030                 mov     [rbp+var_4F0], rax
__text:0000000100003037                 mov     rcx, [rbp+var_4F0]
__text:000000010000303E                 mov     [rbp+var_4E8], rcx
__text:0000000100003045                 mov     rcx, [rbp+var_4E8]
__text:000000010000304C                 add     rcx, 8
__text:0000000100003053                 mov     rdx, [rbp+var_5E8]
__text:000000010000305A                 mov     [rbp+var_5A8], rcx
__text:0000000100003061                 mov     [rbp+var_5B0], rdx
__text:0000000100003068                 mov     rcx, [rbp+var_5A8]
__text:000000010000306F                 test    byte ptr [rcx+9], 1
__text:0000000100003073                 mov     [rbp+var_6E0], rcx
__text:000000010000307A                 jz      loc_1000030D7
__text:0000000100003080                 mov     rax, [rbp+var_6E0]
__text:0000000100003087                 mov     rcx, [rax]
__text:000000010000308A                 mov     rdx, [rbp+var_5B0]
__text:0000000100003091                 add     rdx, 19h
__text:0000000100003098                 add     rdx, 1
__text:000000010000309F                 mov     [rbp+var_5A0], rdx
__text:00000001000030A6                 mov     rdx, [rbp+var_5A0]
__text:00000001000030AD                 mov     [rbp+var_550], rcx
__text:00000001000030B4                 mov     [rbp+var_558], rdx
__text:00000001000030BB                 mov     rcx, [rbp+var_550]
__text:00000001000030C2                 mov     rdx, [rbp+var_558]
__text:00000001000030C9                 mov     [rbp+var_540], rcx
__text:00000001000030D0                 mov     [rbp+var_548], rdx
__text:00000001000030D7
__text:00000001000030D7 loc_1000030D7:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+93A↑j
__text:00000001000030D7                 mov     rax, [rbp+var_6E0]
__text:00000001000030DE                 test    byte ptr [rax+8], 1
__text:00000001000030E2                 jz      loc_100003138
__text:00000001000030E8                 mov     rax, [rbp+var_6E0]
__text:00000001000030EF                 mov     rcx, [rax]
__text:00000001000030F2                 mov     rdx, [rbp+var_5B0]
__text:00000001000030F9                 add     rdx, 19h
__text:0000000100003100                 mov     [rbp+var_508], rdx
__text:0000000100003107                 mov     rdx, [rbp+var_508]
__text:000000010000310E                 mov     [rbp+var_520], rcx
__text:0000000100003115                 mov     [rbp+var_528], rdx
__text:000000010000311C                 mov     rcx, [rbp+var_520]
__text:0000000100003123                 mov     rdx, [rbp+var_528]
__text:000000010000312A                 mov     [rbp+var_510], rcx
__text:0000000100003131                 mov     [rbp+var_518], rdx
__text:0000000100003138
__text:0000000100003138 loc_100003138:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+9A2↑j
__text:0000000100003138                 cmp     [rbp+var_5B0], 0
__text:0000000100003143                 jz      loc_1000031AC
__text:0000000100003149                 mov     rax, [rbp+var_6E0]
__text:0000000100003150                 mov     rcx, [rax]
__text:0000000100003153                 mov     rdx, [rbp+var_5B0]
__text:000000010000315A                 mov     [rbp+var_588], rcx
__text:0000000100003161                 mov     [rbp+var_590], rdx
__text:0000000100003168                 mov     [rbp+var_598], 1
__text:0000000100003173                 mov     rcx, [rbp+var_588]
__text:000000010000317A                 mov     rdx, [rbp+var_590]
__text:0000000100003181                 mov     rsi, [rbp+var_598]
__text:0000000100003188                 mov     [rbp+var_570], rcx
__text:000000010000318F                 mov     [rbp+var_578], rdx
__text:0000000100003196                 mov     [rbp+var_580], rsi
__text:000000010000319D                 mov     rcx, [rbp+var_578]
__text:00000001000031A4                 mov     rdi, rcx        ; void *
__text:00000001000031A7                 call    __ZdlPv         ; operator delete(void *)
__text:00000001000031AC
__text:00000001000031AC loc_1000031AC:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+A03↑j
__text:00000001000031AC                 jmp     $+5
__text:00000001000031B1 ; ---------------------------------------------------------------------------
__text:00000001000031B1
__text:00000001000031B1 loc_1000031B1:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+8E3↑j
__text:00000001000031B1                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&):loc_1000031AC↑j
__text:00000001000031B1                 jmp     $+5
__text:00000001000031B6 ; ---------------------------------------------------------------------------
__text:00000001000031B6
__text:00000001000031B6 loc_1000031B6:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&):loc_1000031B1↑j
__text:00000001000031B6                 jmp     loc_1000031D7
__text:00000001000031BB ; ---------------------------------------------------------------------------
__text:00000001000031BB
__text:00000001000031BB loc_1000031BB:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&)+C7↑j
__text:00000001000031BB                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&):loc_100002F75↑j
__text:00000001000031BB                 mov     rax, [rbp+var_650]
__text:00000001000031C2                 add     rax, 19h
__text:00000001000031C8                 add     rax, 1
__text:00000001000031CE                 add     rsp, 6E0h
__text:00000001000031D5                 pop     rbp
__text:00000001000031D6                 retn
__text:00000001000031D7 ; ---------------------------------------------------------------------------
__text:00000001000031D7
__text:00000001000031D7 loc_1000031D7:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::operator[](char const&):loc_1000031B6↑j
__text:00000001000031D7                 mov     rdi, [rbp+var_698]
__text:00000001000031DE                 call    __Unwind_Resume
__text:00000001000031DE __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEEixERS5_ endp
__text:00000001000031DE
__text:00000001000031DE ; ---------------------------------------------------------------------------
__text:00000001000031E3                 align 10h
__text:00000001000031F0
__text:00000001000031F0 ; =============== S U B R O U T I N E =======================================
__text:00000001000031F0
__text:00000001000031F0 ; Attributes: bp-based frame
__text:00000001000031F0
__text:00000001000031F0 ; std::__1::basic_istream<char, std::__1::char_traits<char>> & std::__1::getline<char, std::__1::char_traits<char>, std::__1::allocator<char>>(std::__1::basic_istream<char, std::__1::char_traits<char>> &, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> &, char)
__text:00000001000031F0 __ZNSt3__17getlineIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EES6_ proc near
__text:00000001000031F0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__17getlineIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EES6__ptr↓o
__text:00000001000031F0
__text:00000001000031F0 var_258         = qword ptr -258h
__text:00000001000031F0 var_250         = qword ptr -250h
__text:00000001000031F0 var_248         = qword ptr -248h
__text:00000001000031F0 var_240         = dword ptr -240h
__text:00000001000031F0 var_23C         = dword ptr -23Ch
__text:00000001000031F0 var_238         = qword ptr -238h
__text:00000001000031F0 var_230         = qword ptr -230h
__text:00000001000031F0 var_228         = qword ptr -228h
__text:00000001000031F0 var_21E         = byte ptr -21Eh
__text:00000001000031F0 var_21D         = byte ptr -21Dh
__text:00000001000031F0 var_21C         = dword ptr -21Ch
__text:00000001000031F0 var_218         = qword ptr -218h
__text:00000001000031F0 var_210         = dword ptr -210h
__text:00000001000031F0 var_20C         = dword ptr -20Ch
__text:00000001000031F0 var_208         = qword ptr -208h
__text:00000001000031F0 var_200         = byte ptr -200h
__text:00000001000031F0 var_1F9         = byte ptr -1F9h
__text:00000001000031F0 var_1F8         = qword ptr -1F8h
__text:00000001000031F0 var_1F0         = qword ptr -1F0h
__text:00000001000031F0 var_1E8         = qword ptr -1E8h
__text:00000001000031F0 var_1DE         = byte ptr -1DEh
__text:00000001000031F0 var_1DD         = byte ptr -1DDh
__text:00000001000031F0 var_1D0         = qword ptr -1D0h
__text:00000001000031F0 var_1C8         = qword ptr -1C8h
__text:00000001000031F0 var_1C0         = qword ptr -1C0h
__text:00000001000031F0 var_1B8         = qword ptr -1B8h
__text:00000001000031F0 var_1B0         = qword ptr -1B0h
__text:00000001000031F0 var_1A8         = qword ptr -1A8h
__text:00000001000031F0 var_1A0         = qword ptr -1A0h
__text:00000001000031F0 var_198         = qword ptr -198h
__text:00000001000031F0 var_190         = qword ptr -190h
__text:00000001000031F0 var_188         = qword ptr -188h
__text:00000001000031F0 var_180         = qword ptr -180h
__text:00000001000031F0 var_178         = qword ptr -178h
__text:00000001000031F0 var_170         = qword ptr -170h
__text:00000001000031F0 var_168         = qword ptr -168h
__text:00000001000031F0 var_160         = qword ptr -160h
__text:00000001000031F0 var_158         = qword ptr -158h
__text:00000001000031F0 var_150         = qword ptr -150h
__text:00000001000031F0 var_148         = qword ptr -148h
__text:00000001000031F0 var_140         = qword ptr -140h
__text:00000001000031F0 var_138         = qword ptr -138h
__text:00000001000031F0 var_130         = qword ptr -130h
__text:00000001000031F0 var_128         = qword ptr -128h
__text:00000001000031F0 var_120         = qword ptr -120h
__text:00000001000031F0 var_118         = qword ptr -118h
__text:00000001000031F0 var_110         = qword ptr -110h
__text:00000001000031F0 var_104         = dword ptr -104h
__text:00000001000031F0 var_100         = qword ptr -100h
__text:00000001000031F0 var_F4          = dword ptr -0F4h
__text:00000001000031F0 var_F0          = qword ptr -0F0h
__text:00000001000031F0 var_E8          = qword ptr -0E8h
__text:00000001000031F0 var_E0          = qword ptr -0E0h
__text:00000001000031F0 var_D8          = qword ptr -0D8h
__text:00000001000031F0 var_D0          = qword ptr -0D0h
__text:00000001000031F0 var_C8          = qword ptr -0C8h
__text:00000001000031F0 var_C0          = qword ptr -0C0h
__text:00000001000031F0 var_B8          = qword ptr -0B8h
__text:00000001000031F0 var_90          = qword ptr -90h
__text:00000001000031F0 var_88          = qword ptr -88h
__text:00000001000031F0 var_78          = qword ptr -78h
__text:00000001000031F0 var_70          = qword ptr -70h
__text:00000001000031F0 var_68          = qword ptr -68h
__text:00000001000031F0 var_60          = qword ptr -60h
__text:00000001000031F0 var_58          = qword ptr -58h
__text:00000001000031F0 var_50          = qword ptr -50h
__text:00000001000031F0 var_48          = qword ptr -48h
__text:00000001000031F0 var_40          = qword ptr -40h
__text:00000001000031F0 var_38          = qword ptr -38h
__text:00000001000031F0 var_30          = qword ptr -30h
__text:00000001000031F0 var_28          = qword ptr -28h
__text:00000001000031F0 var_1E          = byte ptr -1Eh
__text:00000001000031F0 var_1D          = byte ptr -1Dh
__text:00000001000031F0 var_1C          = dword ptr -1Ch
__text:00000001000031F0 var_18          = dword ptr -18h
__text:00000001000031F0 var_14          = dword ptr -14h
__text:00000001000031F0 var_10          = qword ptr -10h
__text:00000001000031F0 var_8           = dword ptr -8
__text:00000001000031F0 var_1           = byte ptr -1
__text:00000001000031F0
__text:00000001000031F0                 push    rbp
__text:00000001000031F1                 mov     rbp, rsp
__text:00000001000031F4                 sub     rsp, 260h
__text:00000001000031FB                 mov     al, dl
__text:00000001000031FD                 mov     [rbp+var_1F0], rdi
__text:0000000100003204                 mov     [rbp+var_1F8], rsi
__text:000000010000320B                 mov     [rbp+var_1F9], al
__text:0000000100003211                 mov     rsi, [rbp+var_1F0]
__text:0000000100003218                 lea     rdi, [rbp+var_200]
__text:000000010000321F                 mov     edx, 1
__text:0000000100003224                 call    __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEE6sentryC1ERS3_b ; std::__1::basic_istream<char,std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_istream<char,std::__1::char_traits<char>>&,bool)
__text:0000000100003229                 jmp     $+5
__text:000000010000322E ; ---------------------------------------------------------------------------
__text:000000010000322E
__text:000000010000322E loc_10000322E:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+39↑j
__text:000000010000322E                 lea     rax, [rbp+var_200]
__text:0000000100003235                 mov     [rbp+var_1E8], rax
__text:000000010000323C                 mov     rax, [rbp+var_1E8]
__text:0000000100003243                 mov     cl, [rax]
__text:0000000100003245                 mov     [rbp+var_21E], cl
__text:000000010000324B                 mov     al, [rbp+var_21E]
__text:0000000100003251                 test    al, 1
__text:0000000100003253                 jnz     loc_10000325E
__text:0000000100003259                 jmp     loc_1000037C0
__text:000000010000325E ; ---------------------------------------------------------------------------
__text:000000010000325E
__text:000000010000325E loc_10000325E:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+63↑j
__text:000000010000325E                 mov     rax, [rbp+var_1F8]
__text:0000000100003265                 mov     [rbp+var_1D0], rax
__text:000000010000326C                 mov     rax, [rbp+var_1D0]
__text:0000000100003273                 mov     [rbp+var_1C8], rax
__text:000000010000327A                 mov     [rbp+var_120], rax
__text:0000000100003281                 mov     rcx, [rbp+var_120]
__text:0000000100003288                 mov     [rbp+var_118], rcx
__text:000000010000328F                 mov     rcx, [rbp+var_118]
__text:0000000100003296                 mov     [rbp+var_110], rcx
__text:000000010000329D                 mov     rcx, [rbp+var_110]
__text:00000001000032A4                 movzx   edx, byte ptr [rcx]
__text:00000001000032A7                 and     edx, 1
__text:00000001000032AD                 cmp     edx, 0
__text:00000001000032B3                 mov     [rbp+var_228], rax
__text:00000001000032BA                 jz      loc_10000336A
__text:00000001000032C0                 lea     rax, [rbp+var_1DD]
__text:00000001000032C7                 mov     rcx, [rbp+var_228]
__text:00000001000032CE                 mov     [rbp+var_138], rcx
__text:00000001000032D5                 mov     rdx, [rbp+var_138]
__text:00000001000032DC                 mov     [rbp+var_130], rdx
__text:00000001000032E3                 mov     rdx, [rbp+var_130]
__text:00000001000032EA                 mov     [rbp+var_128], rdx
__text:00000001000032F1                 mov     rdx, [rbp+var_128]
__text:00000001000032F8                 mov     rdx, [rdx+10h]
__text:00000001000032FC                 mov     [rbp+var_1DD], 0
__text:0000000100003303                 mov     [rbp+var_140], rdx
__text:000000010000330A                 mov     [rbp+var_148], rax
__text:0000000100003311                 mov     rax, [rbp+var_148]
__text:0000000100003318                 mov     sil, [rax]
__text:000000010000331B                 mov     rax, [rbp+var_140]
__text:0000000100003322                 mov     [rax], sil
__text:0000000100003325                 mov     [rbp+var_160], rcx
__text:000000010000332C                 mov     [rbp+var_168], 0
__text:0000000100003337                 mov     rax, [rbp+var_160]
__text:000000010000333E                 mov     rdx, [rbp+var_168]
__text:0000000100003345                 mov     [rbp+var_158], rax
__text:000000010000334C                 mov     rax, [rbp+var_158]
__text:0000000100003353                 mov     [rbp+var_150], rax
__text:000000010000335A                 mov     rax, [rbp+var_150]
__text:0000000100003361                 mov     [rax+8], rdx
__text:0000000100003365                 jmp     loc_100003434
__text:000000010000336A ; ---------------------------------------------------------------------------
__text:000000010000336A
__text:000000010000336A loc_10000336A:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+CA↑j
__text:000000010000336A                 lea     rax, [rbp+var_1DE]
__text:0000000100003371                 mov     rcx, [rbp+var_228]
__text:0000000100003378                 mov     [rbp+var_190], rcx
__text:000000010000337F                 mov     rdx, [rbp+var_190]
__text:0000000100003386                 mov     [rbp+var_188], rdx
__text:000000010000338D                 mov     rdx, [rbp+var_188]
__text:0000000100003394                 mov     [rbp+var_180], rdx
__text:000000010000339B                 mov     rdx, [rbp+var_180]
__text:00000001000033A2                 add     rdx, 1
__text:00000001000033A9                 mov     [rbp+var_178], rdx
__text:00000001000033B0                 mov     rdx, [rbp+var_178]
__text:00000001000033B7                 mov     [rbp+var_170], rdx
__text:00000001000033BE                 mov     rdx, [rbp+var_170]
__text:00000001000033C5                 mov     [rbp+var_1DE], 0
__text:00000001000033CC                 mov     [rbp+var_198], rdx
__text:00000001000033D3                 mov     [rbp+var_1A0], rax
__text:00000001000033DA                 mov     rax, [rbp+var_1A0]
__text:00000001000033E1                 mov     sil, [rax]
__text:00000001000033E4                 mov     rax, [rbp+var_198]
__text:00000001000033EB                 mov     [rax], sil
__text:00000001000033EE                 mov     [rbp+var_1B8], rcx
__text:00000001000033F5                 mov     [rbp+var_1C0], 0
__text:0000000100003400                 mov     rax, [rbp+var_1B8]
__text:0000000100003407                 mov     rdx, [rbp+var_1C0]
__text:000000010000340E                 shl     rdx, 1
__text:0000000100003412                 mov     sil, dl
__text:0000000100003415                 mov     [rbp+var_1B0], rax
__text:000000010000341C                 mov     rax, [rbp+var_1B0]
__text:0000000100003423                 mov     [rbp+var_1A8], rax
__text:000000010000342A                 mov     rax, [rbp+var_1A8]
__text:0000000100003431                 mov     [rax], sil
__text:0000000100003434
__text:0000000100003434 loc_100003434:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+175↑j
__text:0000000100003434                 mov     [rbp+var_210], 0
__text:000000010000343E                 mov     [rbp+var_218], 0
__text:0000000100003449
__text:0000000100003449 loc_100003449:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char):loc_10000373E↓j
__text:0000000100003449                 jmp     $+5
__text:000000010000344E ; ---------------------------------------------------------------------------
__text:000000010000344E
__text:000000010000344E loc_10000344E:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char):loc_100003449↑j
__text:000000010000344E                 mov     rax, [rbp+var_1F0]
__text:0000000100003455                 mov     rcx, [rax]
__text:0000000100003458                 mov     rcx, [rcx-18h]
__text:000000010000345C                 add     rax, rcx
__text:000000010000345F                 mov     [rbp+var_E8], rax
__text:0000000100003466                 mov     rax, [rbp+var_E8]
__text:000000010000346D                 mov     [rbp+var_E0], rax
__text:0000000100003474                 mov     rax, [rbp+var_E0]
__text:000000010000347B                 mov     rax, [rax+28h]
__text:000000010000347F                 mov     [rbp+var_230], rax
__text:0000000100003486                 mov     rax, [rbp+var_230]
__text:000000010000348D                 mov     [rbp+var_10], rax
__text:0000000100003491                 mov     rcx, [rbp+var_10]
__text:0000000100003495                 mov     rdx, [rcx+18h]
__text:0000000100003499                 cmp     rdx, [rcx+20h]
__text:000000010000349D                 mov     [rbp+var_238], rcx
__text:00000001000034A4                 jnz     loc_1000034D6
__text:00000001000034AA                 mov     rax, [rbp+var_238]
__text:00000001000034B1                 mov     rcx, [rax]
__text:00000001000034B4                 mov     rcx, [rcx+50h]
__text:00000001000034B8                 mov     rdi, rax
__text:00000001000034BB                 call    rcx
__text:00000001000034BD                 mov     [rbp+var_23C], eax
__text:00000001000034C3                 jmp     $+5
__text:00000001000034C8 ; ---------------------------------------------------------------------------
__text:00000001000034C8
__text:00000001000034C8 loc_1000034C8:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+2D3↑j
__text:00000001000034C8                 mov     eax, [rbp+var_23C]
__text:00000001000034CE                 mov     [rbp+var_8], eax
__text:00000001000034D1                 jmp     loc_1000034FD
__text:00000001000034D6 ; ---------------------------------------------------------------------------
__text:00000001000034D6
__text:00000001000034D6 loc_1000034D6:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+2B4↑j
__text:00000001000034D6                 mov     rax, [rbp+var_238]
__text:00000001000034DD                 mov     rcx, [rax+18h]
__text:00000001000034E1                 mov     rdx, rcx
__text:00000001000034E4                 add     rdx, 1
__text:00000001000034EB                 mov     [rax+18h], rdx
__text:00000001000034EF                 mov     sil, [rcx]
__text:00000001000034F2                 mov     [rbp+var_1], sil
__text:00000001000034F6                 movzx   edi, [rbp+var_1]
__text:00000001000034FA                 mov     [rbp+var_8], edi
__text:00000001000034FD
__text:00000001000034FD loc_1000034FD:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+2E1↑j
__text:00000001000034FD                 mov     eax, [rbp+var_8]
__text:0000000100003500                 mov     [rbp+var_240], eax
__text:0000000100003506                 mov     eax, [rbp+var_240]
__text:000000010000350C                 mov     [rbp+var_21C], eax
__text:0000000100003512                 mov     ecx, [rbp+var_21C]
__text:0000000100003518                 mov     [rbp+var_14], ecx
__text:000000010000351B                 mov     [rbp+var_18], 0FFFFFFFFh
__text:0000000100003522                 mov     ecx, [rbp+var_14]
__text:0000000100003525                 cmp     ecx, [rbp+var_18]
__text:0000000100003528                 jnz     loc_100003596
__text:000000010000352E                 mov     eax, [rbp+var_210]
__text:0000000100003534                 or      eax, 2
__text:0000000100003539                 mov     [rbp+var_210], eax
__text:000000010000353F                 jmp     loc_100003743
__text:0000000100003544 ; ---------------------------------------------------------------------------
__text:0000000100003544                 mov     ecx, edx
__text:0000000100003546                 mov     [rbp+var_208], rax
__text:000000010000354D                 mov     [rbp+var_20C], ecx
__text:0000000100003553                 mov     rdi, [rbp+var_208] ; void *
__text:000000010000355A                 call    ___cxa_begin_catch
__text:000000010000355F                 mov     rdi, [rbp+var_1F0]
__text:0000000100003566                 mov     rcx, [rdi]
__text:0000000100003569                 mov     rcx, [rcx-18h]
__text:000000010000356D                 add     rdi, rcx        ; this
__text:0000000100003570                 mov     [rbp+var_248], rax
__text:0000000100003577                 call    __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv ; std::__1::ios_base::__set_badbit_and_consider_rethrow(void)
__text:000000010000357C                 jmp     $+5
__text:0000000100003581 ; ---------------------------------------------------------------------------
__text:0000000100003581
__text:0000000100003581 loc_100003581:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+38C↑j
__text:0000000100003581                 call    ___cxa_end_catch
__text:0000000100003586
__text:0000000100003586 loc_100003586:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char):loc_1000037C0↓j
__text:0000000100003586                 mov     rax, [rbp+var_1F0]
__text:000000010000358D                 add     rsp, 260h
__text:0000000100003594                 pop     rbp
__text:0000000100003595                 retn
__text:0000000100003596 ; ---------------------------------------------------------------------------
__text:0000000100003596
__text:0000000100003596 loc_100003596:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+338↑j
__text:0000000100003596                 mov     rax, [rbp+var_218]
__text:000000010000359D                 add     rax, 1
__text:00000001000035A3                 mov     [rbp+var_218], rax
__text:00000001000035AA                 mov     ecx, [rbp+var_21C]
__text:00000001000035B0                 mov     [rbp+var_1C], ecx
__text:00000001000035B3                 mov     ecx, [rbp+var_1C]
__text:00000001000035B6                 mov     dl, cl
__text:00000001000035B8                 mov     [rbp+var_21D], dl
__text:00000001000035BE                 mov     dl, [rbp+var_21D]
__text:00000001000035C4                 mov     sil, [rbp+var_1F9]
__text:00000001000035CB                 mov     [rbp+var_1D], dl
__text:00000001000035CE                 mov     [rbp+var_1E], sil
__text:00000001000035D2                 movsx   ecx, [rbp+var_1D]
__text:00000001000035D6                 movsx   edi, [rbp+var_1E]
__text:00000001000035DA                 cmp     ecx, edi
__text:00000001000035DC                 jnz     loc_1000035E7
__text:00000001000035E2                 jmp     loc_100003743
__text:00000001000035E7 ; ---------------------------------------------------------------------------
__text:00000001000035E7
__text:00000001000035E7 loc_1000035E7:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+3EC↑j
__text:00000001000035E7                 mov     rdi, [rbp+var_1F8]
__text:00000001000035EE                 movsx   esi, [rbp+var_21D]
__text:00000001000035F5                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE9push_backEc ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::push_back(char)
__text:00000001000035FA                 jmp     $+5
__text:00000001000035FF ; ---------------------------------------------------------------------------
__text:00000001000035FF
__text:00000001000035FF loc_1000035FF:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+40A↑j
__text:00000001000035FF                 mov     rax, [rbp+var_1F8]
__text:0000000100003606                 mov     [rbp+var_70], rax
__text:000000010000360A                 mov     rax, [rbp+var_70]
__text:000000010000360E                 mov     [rbp+var_68], rax
__text:0000000100003612                 mov     rcx, [rbp+var_68]
__text:0000000100003616                 mov     [rbp+var_60], rcx
__text:000000010000361A                 mov     rcx, [rbp+var_60]
__text:000000010000361E                 mov     [rbp+var_58], rcx
__text:0000000100003622                 mov     rcx, [rbp+var_58]
__text:0000000100003626                 movzx   edx, byte ptr [rcx]
__text:0000000100003629                 and     edx, 1
__text:000000010000362F                 cmp     edx, 0
__text:0000000100003635                 mov     [rbp+var_250], rax
__text:000000010000363C                 jz      loc_100003671
__text:0000000100003642                 mov     rax, [rbp+var_250]
__text:0000000100003649                 mov     [rbp+var_38], rax
__text:000000010000364D                 mov     rcx, [rbp+var_38]
__text:0000000100003651                 mov     [rbp+var_30], rcx
__text:0000000100003655                 mov     rcx, [rbp+var_30]
__text:0000000100003659                 mov     [rbp+var_28], rcx
__text:000000010000365D                 mov     rcx, [rbp+var_28]
__text:0000000100003661                 mov     rcx, [rcx+8]
__text:0000000100003665                 mov     [rbp+var_258], rcx
__text:000000010000366C                 jmp     loc_1000036A0
__text:0000000100003671 ; ---------------------------------------------------------------------------
__text:0000000100003671
__text:0000000100003671 loc_100003671:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+44C↑j
__text:0000000100003671                 mov     rax, [rbp+var_250]
__text:0000000100003678                 mov     [rbp+var_50], rax
__text:000000010000367C                 mov     rcx, [rbp+var_50]
__text:0000000100003680                 mov     [rbp+var_48], rcx
__text:0000000100003684                 mov     rcx, [rbp+var_48]
__text:0000000100003688                 mov     [rbp+var_40], rcx
__text:000000010000368C                 mov     rcx, [rbp+var_40]
__text:0000000100003690                 movzx   edx, byte ptr [rcx]
__text:0000000100003693                 sar     edx, 1
__text:0000000100003696                 movsxd  rcx, edx
__text:0000000100003699                 mov     [rbp+var_258], rcx
__text:00000001000036A0
__text:00000001000036A0 loc_1000036A0:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+47C↑j
__text:00000001000036A0                 mov     rax, [rbp+var_258]
__text:00000001000036A7                 mov     rcx, [rbp+var_1F8]
__text:00000001000036AE                 mov     [rbp+var_D0], rcx
__text:00000001000036B5                 mov     rcx, [rbp+var_D0]
__text:00000001000036BC                 mov     [rbp+var_C8], rcx
__text:00000001000036C3                 mov     rcx, [rbp+var_C8]
__text:00000001000036CA                 mov     [rbp+var_C0], rcx
__text:00000001000036D1                 mov     rcx, [rbp+var_C0]
__text:00000001000036D8                 mov     [rbp+var_B8], rcx
__text:00000001000036DF                 mov     rcx, [rbp+var_B8]
__text:00000001000036E6                 mov     [rbp+var_90], rcx
__text:00000001000036ED                 mov     rcx, [rbp+var_90]
__text:00000001000036F4                 mov     [rbp+var_88], rcx
__text:00000001000036FB                 mov     rcx, [rbp+var_88]
__text:0000000100003702                 mov     [rbp+var_78], rcx
__text:0000000100003706                 mov     [rbp+var_D8], 0FFFFFFFFFFFFFFFFh
__text:0000000100003711                 mov     rcx, [rbp+var_D8]
__text:0000000100003718                 sub     rcx, 10h
__text:000000010000371F                 cmp     rax, rcx
__text:0000000100003722                 jnz     loc_10000373E
__text:0000000100003728                 mov     eax, [rbp+var_210]
__text:000000010000372E                 or      eax, 4
__text:0000000100003733                 mov     [rbp+var_210], eax
__text:0000000100003739                 jmp     loc_100003743
__text:000000010000373E ; ---------------------------------------------------------------------------
__text:000000010000373E
__text:000000010000373E loc_10000373E:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+532↑j
__text:000000010000373E                 jmp     loc_100003449
__text:0000000100003743 ; ---------------------------------------------------------------------------
__text:0000000100003743
__text:0000000100003743 loc_100003743:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+34F↑j
__text:0000000100003743                                         ; std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+3F2↑j ...
__text:0000000100003743                 cmp     [rbp+var_218], 0
__text:000000010000374E                 jnz     loc_100003765
__text:0000000100003754                 mov     eax, [rbp+var_210]
__text:000000010000375A                 or      eax, 4
__text:000000010000375F                 mov     [rbp+var_210], eax
__text:0000000100003765
__text:0000000100003765 loc_100003765:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+55E↑j
__text:0000000100003765                 mov     rax, [rbp+var_1F0]
__text:000000010000376C                 mov     rcx, [rax]
__text:000000010000376F                 mov     rcx, [rcx-18h]
__text:0000000100003773                 add     rax, rcx
__text:0000000100003776                 mov     edx, [rbp+var_210]
__text:000000010000377C                 mov     [rbp+var_100], rax
__text:0000000100003783                 mov     [rbp+var_104], edx
__text:0000000100003789                 mov     rax, [rbp+var_100]
__text:0000000100003790                 mov     [rbp+var_F0], rax
__text:0000000100003797                 mov     [rbp+var_F4], edx
__text:000000010000379D                 mov     rax, [rbp+var_F0]
__text:00000001000037A4                 mov     esi, [rax+20h]
__text:00000001000037A7                 or      esi, edx        ; unsigned int
__text:00000001000037A9                 mov     rdi, rax        ; this
__text:00000001000037AC                 call    __ZNSt3__18ios_base5clearEj ; std::__1::ios_base::clear(uint)
__text:00000001000037B1                 jmp     $+5
__text:00000001000037B6 ; ---------------------------------------------------------------------------
__text:00000001000037B6
__text:00000001000037B6 loc_1000037B6:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+5C1↑j
__text:00000001000037B6                 jmp     $+5
__text:00000001000037BB ; ---------------------------------------------------------------------------
__text:00000001000037BB
__text:00000001000037BB loc_1000037BB:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char):loc_1000037B6↑j
__text:00000001000037BB                 jmp     $+5
__text:00000001000037C0 ; ---------------------------------------------------------------------------
__text:00000001000037C0
__text:00000001000037C0 loc_1000037C0:                          ; CODE XREF: std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char)+69↑j
__text:00000001000037C0                                         ; std::__1::getline<char,std::__1::char_traits<char>,std::__1::allocator<char>>(std::__1::basic_istream<char,std::__1::char_traits<char>> &,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>> &,char):loc_1000037BB↑j
__text:00000001000037C0                 jmp     loc_100003586
__text:00000001000037C0 __ZNSt3__17getlineIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS_13basic_istreamIT_T0_EES9_RNS_12basic_stringIS6_S7_T1_EES6_ endp
__text:00000001000037C0
__text:00000001000037C5 ; ---------------------------------------------------------------------------
__text:00000001000037C5                 mov     ecx, edx
__text:00000001000037C7                 mov     [rbp-208h], rax
__text:00000001000037CE                 mov     [rbp-20Ch], ecx
__text:00000001000037D4                 call    ___cxa_end_catch
__text:00000001000037D9                 jmp     $+5
__text:00000001000037DE ; ---------------------------------------------------------------------------
__text:00000001000037DE
__text:00000001000037DE loc_1000037DE:                          ; CODE XREF: __text:00000001000037D9↑j
__text:00000001000037DE                 jmp     $+5
__text:00000001000037E3 ; ---------------------------------------------------------------------------
__text:00000001000037E3
__text:00000001000037E3 loc_1000037E3:                          ; CODE XREF: __text:loc_1000037DE↑j
__text:00000001000037E3                 mov     rdi, [rbp-208h]
__text:00000001000037EA                 call    __Unwind_Resume
__text:00000001000037EF ; ---------------------------------------------------------------------------
__text:00000001000037EF                 mov     ecx, edx
__text:00000001000037F1                 mov     rdi, rax
__text:00000001000037F4                 mov     [rbp-25Ch], ecx
__text:00000001000037FA                 call    ___clang_call_terminate
__text:00000001000037FA ; ---------------------------------------------------------------------------
__text:00000001000037FF                 align 20h
__text:0000000100003800
__text:0000000100003800 ; =============== S U B R O U T I N E =======================================
__text:0000000100003800
__text:0000000100003800 ; Attributes: bp-based frame
__text:0000000100003800
__text:0000000100003800 ; std::__1::map<char, char, std::__1::less<char>, std::__1::allocator<std::__1::pair<char const, char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&, char const&)
__text:0000000100003800 __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS5_ proc near
__text:0000000100003800                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS5__ptr↓o
__text:0000000100003800
__text:0000000100003800 var_1A0         = qword ptr -1A0h
__text:0000000100003800 var_198         = qword ptr -198h
__text:0000000100003800 var_190         = qword ptr -190h
__text:0000000100003800 var_188         = qword ptr -188h
__text:0000000100003800 var_180         = qword ptr -180h
__text:0000000100003800 var_178         = qword ptr -178h
__text:0000000100003800 var_170         = qword ptr -170h
__text:0000000100003800 var_168         = qword ptr -168h
__text:0000000100003800 var_160         = qword ptr -160h
__text:0000000100003800 var_158         = qword ptr -158h
__text:0000000100003800 var_150         = qword ptr -150h
__text:0000000100003800 var_148         = qword ptr -148h
__text:0000000100003800 var_140         = qword ptr -140h
__text:0000000100003800 var_138         = qword ptr -138h
__text:0000000100003800 var_130         = qword ptr -130h
__text:0000000100003800 var_128         = qword ptr -128h
__text:0000000100003800 var_120         = qword ptr -120h
__text:0000000100003800 var_118         = qword ptr -118h
__text:0000000100003800 var_110         = qword ptr -110h
__text:0000000100003800 var_108         = qword ptr -108h
__text:0000000100003800 var_100         = qword ptr -100h
__text:0000000100003800 var_F8          = qword ptr -0F8h
__text:0000000100003800 var_F0          = qword ptr -0F0h
__text:0000000100003800 var_E8          = qword ptr -0E8h
__text:0000000100003800 var_E0          = qword ptr -0E0h
__text:0000000100003800 var_D8          = qword ptr -0D8h
__text:0000000100003800 var_D0          = qword ptr -0D0h
__text:0000000100003800 var_C8          = qword ptr -0C8h
__text:0000000100003800 var_C0          = qword ptr -0C0h
__text:0000000100003800 var_B8          = qword ptr -0B8h
__text:0000000100003800 var_B0          = qword ptr -0B0h
__text:0000000100003800 var_A8          = qword ptr -0A8h
__text:0000000100003800 var_A0          = qword ptr -0A0h
__text:0000000100003800 var_98          = qword ptr -98h
__text:0000000100003800 var_90          = qword ptr -90h
__text:0000000100003800 var_88          = qword ptr -88h
__text:0000000100003800 var_80          = qword ptr -80h
__text:0000000100003800 var_78          = qword ptr -78h
__text:0000000100003800 var_70          = qword ptr -70h
__text:0000000100003800 var_68          = qword ptr -68h
__text:0000000100003800 var_60          = qword ptr -60h
__text:0000000100003800 var_58          = qword ptr -58h
__text:0000000100003800 var_50          = qword ptr -50h
__text:0000000100003800 var_48          = qword ptr -48h
__text:0000000100003800 var_40          = qword ptr -40h
__text:0000000100003800 var_38          = qword ptr -38h
__text:0000000100003800 var_30          = qword ptr -30h
__text:0000000100003800 var_28          = qword ptr -28h
__text:0000000100003800 var_20          = qword ptr -20h
__text:0000000100003800 var_18          = qword ptr -18h
__text:0000000100003800 var_10          = qword ptr -10h
__text:0000000100003800 var_8           = qword ptr -8
__text:0000000100003800
__text:0000000100003800                 push    rbp
__text:0000000100003801                 mov     rbp, rsp
__text:0000000100003804                 sub     rsp, 120h
__text:000000010000380B                 lea     rax, [rbp+var_188]
__text:0000000100003812                 lea     rcx, [rbp+var_28]
__text:0000000100003816                 mov     [rbp+var_168], rdi
__text:000000010000381D                 mov     [rbp+var_170], rsi
__text:0000000100003824                 mov     [rbp+var_178], rdx
__text:000000010000382B                 mov     rdx, [rbp+var_168]
__text:0000000100003832                 mov     [rbp+var_158], rdx
__text:0000000100003839                 mov     rsi, [rbp+var_158]
__text:0000000100003840                 mov     [rbp+var_150], rsi
__text:0000000100003847                 mov     rsi, [rbp+var_150]
__text:000000010000384E                 add     rsi, 8
__text:0000000100003855                 mov     [rbp+var_148], rsi
__text:000000010000385C                 mov     rsi, [rbp+var_148]
__text:0000000100003863                 mov     [rbp+var_140], rsi
__text:000000010000386A                 mov     rsi, [rbp+var_140]
__text:0000000100003871                 mov     [rbp+var_138], rsi
__text:0000000100003878                 mov     rsi, [rbp+var_138]
__text:000000010000387F                 mov     [rbp+var_130], rsi
__text:0000000100003886                 mov     rsi, [rbp+var_130]
__text:000000010000388D                 mov     rsi, [rsi]
__text:0000000100003890                 mov     [rbp+var_180], rsi
__text:0000000100003897                 mov     rsi, [rbp+var_180]
__text:000000010000389E                 mov     [rbp+var_18], rcx
__text:00000001000038A2                 mov     [rbp+var_20], 0FFFFFFFFFFFFFFFFh
__text:00000001000038AA                 mov     rcx, [rbp+var_18]
__text:00000001000038AE                 mov     rdi, [rbp+var_20]
__text:00000001000038B2                 mov     [rbp+var_8], rcx
__text:00000001000038B6                 mov     [rbp+var_10], rdi
__text:00000001000038BA                 mov     rcx, [rbp+var_8]
__text:00000001000038BE                 mov     qword ptr [rcx], 0
__text:00000001000038C5                 mov     rcx, [rbp+var_28]
__text:00000001000038C9                 mov     [rbp+var_188], rcx
__text:00000001000038D0                 mov     [rbp+var_30], rax
__text:00000001000038D4                 cmp     rsi, 0
__text:00000001000038DB                 mov     [rbp+var_1A0], rdx
__text:00000001000038E2                 jz      loc_100003B79
__text:00000001000038E8                 jmp     $+5
__text:00000001000038ED ; ---------------------------------------------------------------------------
__text:00000001000038ED
__text:00000001000038ED loc_1000038ED:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+E8↑j
__text:00000001000038ED                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&):loc_100003B74↓j
__text:00000001000038ED                 mov     rax, [rbp+var_1A0]
__text:00000001000038F4                 mov     [rbp+var_48], rax
__text:00000001000038F8                 mov     rcx, [rbp+var_48]
__text:00000001000038FC                 add     rcx, 10h
__text:0000000100003903                 mov     [rbp+var_40], rcx
__text:0000000100003907                 mov     rcx, [rbp+var_40]
__text:000000010000390B                 mov     [rbp+var_38], rcx
__text:000000010000390F                 mov     rcx, [rbp+var_38]
__text:0000000100003913                 mov     [rbp+var_50], rcx
__text:0000000100003917                 mov     rcx, [rbp+var_50]
__text:000000010000391B                 mov     rdx, [rbp+var_178]
__text:0000000100003922                 mov     rsi, [rbp+var_180]
__text:0000000100003929                 add     rsi, 19h
__text:0000000100003930                 mov     [rbp+var_58], rcx
__text:0000000100003934                 mov     [rbp+var_60], rdx
__text:0000000100003938                 mov     [rbp+var_68], rsi
__text:000000010000393C                 mov     rcx, [rbp+var_60]
__text:0000000100003940                 movsx   edi, byte ptr [rcx]
__text:0000000100003943                 mov     rcx, [rbp+var_68]
__text:0000000100003947                 movsx   r8d, byte ptr [rcx]
__text:000000010000394B                 cmp     edi, r8d
__text:000000010000394E                 jge     loc_1000039FD
__text:0000000100003954                 lea     rax, [rbp+var_190]
__text:000000010000395B                 lea     rcx, [rbp+var_90]
__text:0000000100003962                 mov     rdx, [rbp+var_180]
__text:0000000100003969                 mov     rdx, [rdx]
__text:000000010000396C                 mov     [rbp+var_80], rcx
__text:0000000100003970                 mov     [rbp+var_88], 0FFFFFFFFFFFFFFFFh
__text:000000010000397B                 mov     rcx, [rbp+var_80]
__text:000000010000397F                 mov     rsi, [rbp+var_88]
__text:0000000100003986                 mov     [rbp+var_70], rcx
__text:000000010000398A                 mov     [rbp+var_78], rsi
__text:000000010000398E                 mov     rcx, [rbp+var_70]
__text:0000000100003992                 mov     qword ptr [rcx], 0
__text:0000000100003999                 mov     rcx, [rbp+var_90]
__text:00000001000039A0                 mov     [rbp+var_190], rcx
__text:00000001000039A7                 mov     [rbp+var_98], rax
__text:00000001000039AE                 cmp     rdx, 0
__text:00000001000039B5                 jz      loc_1000039D1
__text:00000001000039BB                 mov     rax, [rbp+var_180]
__text:00000001000039C2                 mov     rax, [rax]
__text:00000001000039C5                 mov     [rbp+var_180], rax
__text:00000001000039CC                 jmp     loc_1000039F8
__text:00000001000039D1 ; ---------------------------------------------------------------------------
__text:00000001000039D1
__text:00000001000039D1 loc_1000039D1:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+1B5↑j
__text:00000001000039D1                 mov     rax, [rbp+var_180]
__text:00000001000039D8                 mov     rcx, [rbp+var_170]
__text:00000001000039DF                 mov     [rcx], rax
__text:00000001000039E2                 mov     rax, [rbp+var_170]
__text:00000001000039E9                 mov     rax, [rax]
__text:00000001000039EC                 mov     [rbp+var_160], rax
__text:00000001000039F3                 jmp     loc_100003BE8
__text:00000001000039F8 ; ---------------------------------------------------------------------------
__text:00000001000039F8
__text:00000001000039F8 loc_1000039F8:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+1CC↑j
__text:00000001000039F8                 jmp     loc_100003B74
__text:00000001000039FD ; ---------------------------------------------------------------------------
__text:00000001000039FD
__text:00000001000039FD loc_1000039FD:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+14E↑j
__text:00000001000039FD                 mov     rax, [rbp+var_1A0]
__text:0000000100003A04                 mov     [rbp+var_B0], rax
__text:0000000100003A0B                 mov     rcx, [rbp+var_B0]
__text:0000000100003A12                 add     rcx, 10h
__text:0000000100003A19                 mov     [rbp+var_A8], rcx
__text:0000000100003A20                 mov     rcx, [rbp+var_A8]
__text:0000000100003A27                 mov     [rbp+var_A0], rcx
__text:0000000100003A2E                 mov     rcx, [rbp+var_A0]
__text:0000000100003A35                 mov     [rbp+var_B8], rcx
__text:0000000100003A3C                 mov     rcx, [rbp+var_B8]
__text:0000000100003A43                 mov     rdx, [rbp+var_180]
__text:0000000100003A4A                 add     rdx, 19h
__text:0000000100003A51                 mov     rsi, [rbp+var_178]
__text:0000000100003A58                 mov     [rbp+var_C0], rcx
__text:0000000100003A5F                 mov     [rbp+var_C8], rdx
__text:0000000100003A66                 mov     [rbp+var_D0], rsi
__text:0000000100003A6D                 mov     rcx, [rbp+var_C8]
__text:0000000100003A74                 movsx   edi, byte ptr [rcx]
__text:0000000100003A77                 mov     rcx, [rbp+var_D0]
__text:0000000100003A7E                 movsx   r8d, byte ptr [rcx]
__text:0000000100003A82                 cmp     edi, r8d
__text:0000000100003A85                 jge     loc_100003B4B
__text:0000000100003A8B                 lea     rax, [rbp+var_198]
__text:0000000100003A92                 lea     rcx, [rbp+var_F8]
__text:0000000100003A99                 mov     rdx, [rbp+var_180]
__text:0000000100003AA0                 mov     rdx, [rdx+8]
__text:0000000100003AA4                 mov     [rbp+var_E8], rcx
__text:0000000100003AAB                 mov     [rbp+var_F0], 0FFFFFFFFFFFFFFFFh
__text:0000000100003AB6                 mov     rcx, [rbp+var_E8]
__text:0000000100003ABD                 mov     rsi, [rbp+var_F0]
__text:0000000100003AC4                 mov     [rbp+var_D8], rcx
__text:0000000100003ACB                 mov     [rbp+var_E0], rsi
__text:0000000100003AD2                 mov     rcx, [rbp+var_D8]
__text:0000000100003AD9                 mov     qword ptr [rcx], 0
__text:0000000100003AE0                 mov     rcx, [rbp+var_F8]
__text:0000000100003AE7                 mov     [rbp+var_198], rcx
__text:0000000100003AEE                 mov     [rbp+var_100], rax
__text:0000000100003AF5                 cmp     rdx, 0
__text:0000000100003AFC                 jz      loc_100003B19
__text:0000000100003B02                 mov     rax, [rbp+var_180]
__text:0000000100003B09                 mov     rax, [rax+8]
__text:0000000100003B0D                 mov     [rbp+var_180], rax
__text:0000000100003B14                 jmp     loc_100003B46
__text:0000000100003B19 ; ---------------------------------------------------------------------------
__text:0000000100003B19
__text:0000000100003B19 loc_100003B19:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+2FC↑j
__text:0000000100003B19                 mov     rax, [rbp+var_180]
__text:0000000100003B20                 mov     rcx, [rbp+var_170]
__text:0000000100003B27                 mov     [rcx], rax
__text:0000000100003B2A                 mov     rax, [rbp+var_170]
__text:0000000100003B31                 mov     rax, [rax]
__text:0000000100003B34                 add     rax, 8
__text:0000000100003B3A                 mov     [rbp+var_160], rax
__text:0000000100003B41                 jmp     loc_100003BE8
__text:0000000100003B46 ; ---------------------------------------------------------------------------
__text:0000000100003B46
__text:0000000100003B46 loc_100003B46:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+314↑j
__text:0000000100003B46                 jmp     loc_100003B6F
__text:0000000100003B4B ; ---------------------------------------------------------------------------
__text:0000000100003B4B
__text:0000000100003B4B loc_100003B4B:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+285↑j
__text:0000000100003B4B                 mov     rax, [rbp+var_180]
__text:0000000100003B52                 mov     rcx, [rbp+var_170]
__text:0000000100003B59                 mov     [rcx], rax
__text:0000000100003B5C                 mov     rax, [rbp+var_170]
__text:0000000100003B63                 mov     [rbp+var_160], rax
__text:0000000100003B6A                 jmp     loc_100003BE8
__text:0000000100003B6F ; ---------------------------------------------------------------------------
__text:0000000100003B6F
__text:0000000100003B6F loc_100003B6F:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&):loc_100003B46↑j
__text:0000000100003B6F                 jmp     $+5
__text:0000000100003B74 ; ---------------------------------------------------------------------------
__text:0000000100003B74
__text:0000000100003B74 loc_100003B74:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&):loc_1000039F8↑j
__text:0000000100003B74                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&):loc_100003B6F↑j
__text:0000000100003B74                 jmp     loc_1000038ED
__text:0000000100003B79 ; ---------------------------------------------------------------------------
__text:0000000100003B79
__text:0000000100003B79 loc_100003B79:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+E2↑j
__text:0000000100003B79                 mov     rax, [rbp+var_1A0]
__text:0000000100003B80                 mov     [rbp+var_128], rax
__text:0000000100003B87                 mov     rcx, [rbp+var_128]
__text:0000000100003B8E                 add     rcx, 8
__text:0000000100003B95                 mov     [rbp+var_120], rcx
__text:0000000100003B9C                 mov     rcx, [rbp+var_120]
__text:0000000100003BA3                 mov     [rbp+var_118], rcx
__text:0000000100003BAA                 mov     rcx, [rbp+var_118]
__text:0000000100003BB1                 mov     [rbp+var_110], rcx
__text:0000000100003BB8                 mov     rcx, [rbp+var_110]
__text:0000000100003BBF                 mov     [rbp+var_108], rcx
__text:0000000100003BC6                 mov     rcx, [rbp+var_108]
__text:0000000100003BCD                 mov     rdx, [rbp+var_170]
__text:0000000100003BD4                 mov     [rdx], rcx
__text:0000000100003BD7                 mov     rcx, [rbp+var_170]
__text:0000000100003BDE                 mov     rcx, [rcx]
__text:0000000100003BE1                 mov     [rbp+var_160], rcx
__text:0000000100003BE8
__text:0000000100003BE8 loc_100003BE8:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+1F3↑j
__text:0000000100003BE8                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,char const&)+341↑j ...
__text:0000000100003BE8                 mov     rax, [rbp+var_160]
__text:0000000100003BEF                 add     rsp, 120h
__text:0000000100003BF6                 pop     rbp
__text:0000000100003BF7                 retn
__text:0000000100003BF7 __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS5_ endp
__text:0000000100003BF7
__text:0000000100003BF7 ; ---------------------------------------------------------------------------
__text:0000000100003BF8                 align 20h
__text:0000000100003C00
__text:0000000100003C00 ; =============== S U B R O U T I N E =======================================
__text:0000000100003C00
__text:0000000100003C00 ; Attributes: bp-based frame
__text:0000000100003C00
__text:0000000100003C00 ; std::__1::map<char, char, std::__1::less<char>, std::__1::allocator<std::__1::pair<char const, char>>>::__construct_node_with_key(char const&)
__text:0000000100003C00 __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEE25__construct_node_with_keyERS5_ proc near
__text:0000000100003C00                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEE25__construct_node_with_keyERS5__ptr↓o
__text:0000000100003C00
__text:0000000100003C00 var_DB8         = qword ptr -0DB8h
__text:0000000100003C00 var_DB0         = qword ptr -0DB0h
__text:0000000100003C00 var_DA8         = qword ptr -0DA8h
__text:0000000100003C00 var_DA0         = qword ptr -0DA0h
__text:0000000100003C00 var_D98         = qword ptr -0D98h
__text:0000000100003C00 var_D90         = qword ptr -0D90h
__text:0000000100003C00 var_D88         = qword ptr -0D88h
__text:0000000100003C00 var_D80         = qword ptr -0D80h
__text:0000000100003C00 var_D78         = qword ptr -0D78h
__text:0000000100003C00 var_D70         = qword ptr -0D70h
__text:0000000100003C00 var_D68         = qword ptr -0D68h
__text:0000000100003C00 var_D60         = qword ptr -0D60h
__text:0000000100003C00 var_D58         = qword ptr -0D58h
__text:0000000100003C00 var_D50         = qword ptr -0D50h
__text:0000000100003C00 var_D48         = qword ptr -0D48h
__text:0000000100003C00 var_D40         = qword ptr -0D40h
__text:0000000100003C00 var_D34         = dword ptr -0D34h
__text:0000000100003C00 var_D30         = byte ptr -0D30h
__text:0000000100003C00 var_D18         = qword ptr -0D18h
__text:0000000100003C00 var_D00         = qword ptr -0D00h
__text:0000000100003C00 var_CF8         = qword ptr -0CF8h
__text:0000000100003C00 var_CF0         = byte ptr -0CF0h
__text:0000000100003C00 var_CD8         = qword ptr -0CD8h
__text:0000000100003C00 var_CD0         = qword ptr -0CD0h
__text:0000000100003C00 var_CC8         = qword ptr -0CC8h
__text:0000000100003C00 var_CC0         = qword ptr -0CC0h
__text:0000000100003C00 var_CB8         = qword ptr -0CB8h
__text:0000000100003C00 var_CB0         = qword ptr -0CB0h
__text:0000000100003C00 var_CA8         = qword ptr -0CA8h
__text:0000000100003C00 var_CA0         = qword ptr -0CA0h
__text:0000000100003C00 var_C98         = qword ptr -0C98h
__text:0000000100003C00 var_C90         = qword ptr -0C90h
__text:0000000100003C00 var_C88         = qword ptr -0C88h
__text:0000000100003C00 var_C80         = qword ptr -0C80h
__text:0000000100003C00 var_C78         = qword ptr -0C78h
__text:0000000100003C00 var_C70         = qword ptr -0C70h
__text:0000000100003C00 var_C68         = qword ptr -0C68h
__text:0000000100003C00 var_B48         = qword ptr -0B48h
__text:0000000100003C00 var_B40         = qword ptr -0B40h
__text:0000000100003C00 var_B38         = qword ptr -0B38h
__text:0000000100003C00 var_B30         = qword ptr -0B30h
__text:0000000100003C00 var_B28         = qword ptr -0B28h
__text:0000000100003C00 var_B20         = qword ptr -0B20h
__text:0000000100003C00 var_B18         = qword ptr -0B18h
__text:0000000100003C00 var_B10         = qword ptr -0B10h
__text:0000000100003C00 var_B08         = qword ptr -0B08h
__text:0000000100003C00 var_B00         = qword ptr -0B00h
__text:0000000100003C00 var_AF8         = qword ptr -0AF8h
__text:0000000100003C00 var_AF0         = qword ptr -0AF0h
__text:0000000100003C00 var_AE8         = qword ptr -0AE8h
__text:0000000100003C00 var_AE0         = qword ptr -0AE0h
__text:0000000100003C00 var_AD8         = qword ptr -0AD8h
__text:0000000100003C00 var_AD0         = qword ptr -0AD0h
__text:0000000100003C00 var_AC8         = qword ptr -0AC8h
__text:0000000100003C00 var_AC0         = qword ptr -0AC0h
__text:0000000100003C00 var_AB8         = qword ptr -0AB8h
__text:0000000100003C00 var_AB0         = qword ptr -0AB0h
__text:0000000100003C00 var_AA8         = qword ptr -0AA8h
__text:0000000100003C00 var_AA0         = qword ptr -0AA0h
__text:0000000100003C00 var_A98         = qword ptr -0A98h
__text:0000000100003C00 var_A90         = qword ptr -0A90h
__text:0000000100003C00 var_A88         = qword ptr -0A88h
__text:0000000100003C00 var_A80         = qword ptr -0A80h
__text:0000000100003C00 var_A78         = qword ptr -0A78h
__text:0000000100003C00 var_A70         = qword ptr -0A70h
__text:0000000100003C00 var_A68         = qword ptr -0A68h
__text:0000000100003C00 var_A60         = qword ptr -0A60h
__text:0000000100003C00 var_940         = qword ptr -940h
__text:0000000100003C00 var_938         = qword ptr -938h
__text:0000000100003C00 var_930         = qword ptr -930h
__text:0000000100003C00 var_928         = qword ptr -928h
__text:0000000100003C00 var_920         = qword ptr -920h
__text:0000000100003C00 var_918         = qword ptr -918h
__text:0000000100003C00 var_910         = qword ptr -910h
__text:0000000100003C00 var_908         = qword ptr -908h
__text:0000000100003C00 var_900         = qword ptr -900h
__text:0000000100003C00 var_8F8         = qword ptr -8F8h
__text:0000000100003C00 var_8E0         = qword ptr -8E0h
__text:0000000100003C00 var_8D8         = qword ptr -8D8h
__text:0000000100003C00 var_8D0         = qword ptr -8D0h
__text:0000000100003C00 var_8C8         = qword ptr -8C8h
__text:0000000100003C00 var_8C0         = qword ptr -8C0h
__text:0000000100003C00 var_8B8         = qword ptr -8B8h
__text:0000000100003C00 var_8B0         = qword ptr -8B0h
__text:0000000100003C00 var_8A8         = qword ptr -8A8h
__text:0000000100003C00 var_8A0         = qword ptr -8A0h
__text:0000000100003C00 var_888         = qword ptr -888h
__text:0000000100003C00 var_880         = qword ptr -880h
__text:0000000100003C00 var_878         = qword ptr -878h
__text:0000000100003C00 var_870         = qword ptr -870h
__text:0000000100003C00 var_858         = qword ptr -858h
__text:0000000100003C00 var_850         = qword ptr -850h
__text:0000000100003C00 var_848         = qword ptr -848h
__text:0000000100003C00 var_840         = qword ptr -840h
__text:0000000100003C00 var_838         = qword ptr -838h
__text:0000000100003C00 var_830         = qword ptr -830h
__text:0000000100003C00 var_828         = qword ptr -828h
__text:0000000100003C00 var_820         = qword ptr -820h
__text:0000000100003C00 var_818         = qword ptr -818h
__text:0000000100003C00 var_810         = qword ptr -810h
__text:0000000100003C00 var_808         = qword ptr -808h
__text:0000000100003C00 var_800         = qword ptr -800h
__text:0000000100003C00 var_7F8         = qword ptr -7F8h
__text:0000000100003C00 var_7F0         = qword ptr -7F0h
__text:0000000100003C00 var_7E8         = qword ptr -7E8h
__text:0000000100003C00 var_7E0         = qword ptr -7E0h
__text:0000000100003C00 var_7D8         = qword ptr -7D8h
__text:0000000100003C00 var_7C0         = qword ptr -7C0h
__text:0000000100003C00 var_7B8         = qword ptr -7B8h
__text:0000000100003C00 var_7B0         = qword ptr -7B0h
__text:0000000100003C00 var_7A8         = qword ptr -7A8h
__text:0000000100003C00 var_7A0         = qword ptr -7A0h
__text:0000000100003C00 var_798         = qword ptr -798h
__text:0000000100003C00 var_790         = qword ptr -790h
__text:0000000100003C00 var_788         = qword ptr -788h
__text:0000000100003C00 var_780         = qword ptr -780h
__text:0000000100003C00 var_768         = qword ptr -768h
__text:0000000100003C00 var_760         = qword ptr -760h
__text:0000000100003C00 var_758         = qword ptr -758h
__text:0000000100003C00 var_750         = qword ptr -750h
__text:0000000100003C00 var_738         = qword ptr -738h
__text:0000000100003C00 var_730         = qword ptr -730h
__text:0000000100003C00 var_728         = qword ptr -728h
__text:0000000100003C00 var_720         = qword ptr -720h
__text:0000000100003C00 var_718         = qword ptr -718h
__text:0000000100003C00 var_710         = qword ptr -710h
__text:0000000100003C00 var_708         = qword ptr -708h
__text:0000000100003C00 var_700         = qword ptr -700h
__text:0000000100003C00 var_6F8         = qword ptr -6F8h
__text:0000000100003C00 var_6F0         = qword ptr -6F0h
__text:0000000100003C00 var_6E8         = qword ptr -6E8h
__text:0000000100003C00 var_6E0         = qword ptr -6E0h
__text:0000000100003C00 var_6D8         = qword ptr -6D8h
__text:0000000100003C00 var_6D0         = qword ptr -6D0h
__text:0000000100003C00 var_6C8         = qword ptr -6C8h
__text:0000000100003C00 var_6C0         = qword ptr -6C0h
__text:0000000100003C00 var_6B8         = qword ptr -6B8h
__text:0000000100003C00 var_6B0         = qword ptr -6B0h
__text:0000000100003C00 var_6A8         = qword ptr -6A8h
__text:0000000100003C00 var_6A0         = qword ptr -6A0h
__text:0000000100003C00 var_698         = qword ptr -698h
__text:0000000100003C00 var_690         = qword ptr -690h
__text:0000000100003C00 var_688         = qword ptr -688h
__text:0000000100003C00 var_680         = qword ptr -680h
__text:0000000100003C00 var_678         = qword ptr -678h
__text:0000000100003C00 var_670         = qword ptr -670h
__text:0000000100003C00 var_668         = qword ptr -668h
__text:0000000100003C00 var_660         = qword ptr -660h
__text:0000000100003C00 var_658         = qword ptr -658h
__text:0000000100003C00 var_650         = qword ptr -650h
__text:0000000100003C00 var_648         = qword ptr -648h
__text:0000000100003C00 var_640         = qword ptr -640h
__text:0000000100003C00 var_638         = qword ptr -638h
__text:0000000100003C00 var_630         = qword ptr -630h
__text:0000000100003C00 var_628         = qword ptr -628h
__text:0000000100003C00 var_620         = qword ptr -620h
__text:0000000100003C00 var_618         = qword ptr -618h
__text:0000000100003C00 var_610         = qword ptr -610h
__text:0000000100003C00 var_608         = qword ptr -608h
__text:0000000100003C00 var_600         = qword ptr -600h
__text:0000000100003C00 var_5F8         = qword ptr -5F8h
__text:0000000100003C00 var_5F0         = qword ptr -5F0h
__text:0000000100003C00 var_5E8         = qword ptr -5E8h
__text:0000000100003C00 var_5E0         = qword ptr -5E0h
__text:0000000100003C00 var_5D8         = qword ptr -5D8h
__text:0000000100003C00 var_5D0         = qword ptr -5D0h
__text:0000000100003C00 var_5C8         = qword ptr -5C8h
__text:0000000100003C00 var_5C0         = qword ptr -5C0h
__text:0000000100003C00 var_5B8         = qword ptr -5B8h
__text:0000000100003C00 var_5B0         = qword ptr -5B0h
__text:0000000100003C00 var_5A8         = qword ptr -5A8h
__text:0000000100003C00 var_5A0         = qword ptr -5A0h
__text:0000000100003C00 var_598         = qword ptr -598h
__text:0000000100003C00 var_590         = qword ptr -590h
__text:0000000100003C00 var_578         = qword ptr -578h
__text:0000000100003C00 var_570         = byte ptr -570h
__text:0000000100003C00 var_558         = qword ptr -558h
__text:0000000100003C00 var_550         = qword ptr -550h
__text:0000000100003C00 var_548         = qword ptr -548h
__text:0000000100003C00 var_540         = qword ptr -540h
__text:0000000100003C00 var_538         = qword ptr -538h
__text:0000000100003C00 var_530         = qword ptr -530h
__text:0000000100003C00 var_528         = qword ptr -528h
__text:0000000100003C00 var_520         = qword ptr -520h
__text:0000000100003C00 var_518         = qword ptr -518h
__text:0000000100003C00 var_510         = qword ptr -510h
__text:0000000100003C00 var_508         = qword ptr -508h
__text:0000000100003C00 var_500         = qword ptr -500h
__text:0000000100003C00 var_4F8         = qword ptr -4F8h
__text:0000000100003C00 var_4F0         = qword ptr -4F0h
__text:0000000100003C00 var_4E8         = qword ptr -4E8h
__text:0000000100003C00 var_4E0         = qword ptr -4E0h
__text:0000000100003C00 var_4D8         = qword ptr -4D8h
__text:0000000100003C00 var_4D0         = qword ptr -4D0h
__text:0000000100003C00 var_4C8         = qword ptr -4C8h
__text:0000000100003C00 var_4C0         = qword ptr -4C0h
__text:0000000100003C00 var_4B8         = qword ptr -4B8h
__text:0000000100003C00 var_4B0         = qword ptr -4B0h
__text:0000000100003C00 var_4A8         = qword ptr -4A8h
__text:0000000100003C00 var_4A0         = qword ptr -4A0h
__text:0000000100003C00 var_498         = qword ptr -498h
__text:0000000100003C00 var_490         = qword ptr -490h
__text:0000000100003C00 var_488         = qword ptr -488h
__text:0000000100003C00 var_480         = qword ptr -480h
__text:0000000100003C00 var_478         = qword ptr -478h
__text:0000000100003C00 var_470         = qword ptr -470h
__text:0000000100003C00 var_468         = qword ptr -468h
__text:0000000100003C00 var_460         = qword ptr -460h
__text:0000000100003C00 var_458         = qword ptr -458h
__text:0000000100003C00 var_450         = qword ptr -450h
__text:0000000100003C00 var_448         = qword ptr -448h
__text:0000000100003C00 var_440         = qword ptr -440h
__text:0000000100003C00 var_438         = qword ptr -438h
__text:0000000100003C00 var_430         = qword ptr -430h
__text:0000000100003C00 var_428         = qword ptr -428h
__text:0000000100003C00 var_420         = qword ptr -420h
__text:0000000100003C00 var_418         = qword ptr -418h
__text:0000000100003C00 var_410         = qword ptr -410h
__text:0000000100003C00 var_2F0         = qword ptr -2F0h
__text:0000000100003C00 var_2E8         = qword ptr -2E8h
__text:0000000100003C00 var_2E0         = qword ptr -2E0h
__text:0000000100003C00 var_2D8         = qword ptr -2D8h
__text:0000000100003C00 var_2D0         = qword ptr -2D0h
__text:0000000100003C00 var_2C8         = qword ptr -2C8h
__text:0000000100003C00 var_2C0         = qword ptr -2C0h
__text:0000000100003C00 var_2B8         = qword ptr -2B8h
__text:0000000100003C00 var_2B0         = qword ptr -2B0h
__text:0000000100003C00 var_2A8         = qword ptr -2A8h
__text:0000000100003C00 var_2A0         = qword ptr -2A0h
__text:0000000100003C00 var_298         = qword ptr -298h
__text:0000000100003C00 var_290         = qword ptr -290h
__text:0000000100003C00 var_278         = qword ptr -278h
__text:0000000100003C00 var_270         = qword ptr -270h
__text:0000000100003C00 var_268         = qword ptr -268h
__text:0000000100003C00 var_260         = qword ptr -260h
__text:0000000100003C00 var_258         = qword ptr -258h
__text:0000000100003C00 var_250         = qword ptr -250h
__text:0000000100003C00 var_248         = qword ptr -248h
__text:0000000100003C00 var_240         = qword ptr -240h
__text:0000000100003C00 var_238         = qword ptr -238h
__text:0000000100003C00 var_220         = qword ptr -220h
__text:0000000100003C00 var_218         = qword ptr -218h
__text:0000000100003C00 var_210         = qword ptr -210h
__text:0000000100003C00 var_208         = qword ptr -208h
__text:0000000100003C00 var_1F0         = qword ptr -1F0h
__text:0000000100003C00 var_1E8         = qword ptr -1E8h
__text:0000000100003C00 var_1E0         = qword ptr -1E0h
__text:0000000100003C00 var_1D8         = qword ptr -1D8h
__text:0000000100003C00 var_1D0         = qword ptr -1D0h
__text:0000000100003C00 var_1C8         = qword ptr -1C8h
__text:0000000100003C00 var_1C0         = qword ptr -1C0h
__text:0000000100003C00 var_1B8         = qword ptr -1B8h
__text:0000000100003C00 var_1B0         = qword ptr -1B0h
__text:0000000100003C00 var_1A8         = qword ptr -1A8h
__text:0000000100003C00 var_1A0         = qword ptr -1A0h
__text:0000000100003C00 var_198         = qword ptr -198h
__text:0000000100003C00 var_190         = qword ptr -190h
__text:0000000100003C00 var_188         = qword ptr -188h
__text:0000000100003C00 var_180         = qword ptr -180h
__text:0000000100003C00 var_178         = qword ptr -178h
__text:0000000100003C00 var_170         = qword ptr -170h
__text:0000000100003C00 var_168         = qword ptr -168h
__text:0000000100003C00 var_160         = qword ptr -160h
__text:0000000100003C00 var_158         = qword ptr -158h
__text:0000000100003C00 var_150         = qword ptr -150h
__text:0000000100003C00 var_148         = qword ptr -148h
__text:0000000100003C00 var_140         = qword ptr -140h
__text:0000000100003C00 var_138         = qword ptr -138h
__text:0000000100003C00 var_130         = qword ptr -130h
__text:0000000100003C00 var_128         = qword ptr -128h
__text:0000000100003C00 var_120         = qword ptr -120h
__text:0000000100003C00 var_118         = qword ptr -118h
__text:0000000100003C00 var_110         = qword ptr -110h
__text:0000000100003C00 var_108         = qword ptr -108h
__text:0000000100003C00 var_100         = qword ptr -100h
__text:0000000100003C00 var_F8          = qword ptr -0F8h
__text:0000000100003C00 var_F0          = qword ptr -0F0h
__text:0000000100003C00 var_E8          = qword ptr -0E8h
__text:0000000100003C00 var_E0          = qword ptr -0E0h
__text:0000000100003C00 var_D8          = qword ptr -0D8h
__text:0000000100003C00 var_D0          = qword ptr -0D0h
__text:0000000100003C00 var_C8          = qword ptr -0C8h
__text:0000000100003C00 var_C0          = qword ptr -0C0h
__text:0000000100003C00 var_B8          = qword ptr -0B8h
__text:0000000100003C00 var_B0          = qword ptr -0B0h
__text:0000000100003C00 var_A8          = qword ptr -0A8h
__text:0000000100003C00 var_A0          = qword ptr -0A0h
__text:0000000100003C00 var_98          = qword ptr -98h
__text:0000000100003C00 var_90          = qword ptr -90h
__text:0000000100003C00 var_88          = qword ptr -88h
__text:0000000100003C00 var_80          = qword ptr -80h
__text:0000000100003C00 var_78          = qword ptr -78h
__text:0000000100003C00 var_70          = qword ptr -70h
__text:0000000100003C00 var_68          = qword ptr -68h
__text:0000000100003C00 var_60          = qword ptr -60h
__text:0000000100003C00 var_58          = qword ptr -58h
__text:0000000100003C00 var_50          = qword ptr -50h
__text:0000000100003C00 var_48          = qword ptr -48h
__text:0000000100003C00 var_40          = qword ptr -40h
__text:0000000100003C00 var_38          = qword ptr -38h
__text:0000000100003C00 var_30          = qword ptr -30h
__text:0000000100003C00
__text:0000000100003C00                 push    rbp
__text:0000000100003C01                 mov     rbp, rsp
__text:0000000100003C04                 push    r15
__text:0000000100003C06                 push    r14
__text:0000000100003C08                 push    r13
__text:0000000100003C0A                 push    r12
__text:0000000100003C0C                 push    rbx
__text:0000000100003C0D                 sub     rsp, 0D98h
__text:0000000100003C14                 mov     rax, rdi
__text:0000000100003C17                 mov     [rbp+var_CC8], rsi
__text:0000000100003C1E                 mov     [rbp+var_CD0], rdx
__text:0000000100003C25                 mov     rdx, [rbp+var_CC8]
__text:0000000100003C2C                 mov     [rbp+var_CC0], rdx
__text:0000000100003C33                 mov     rdx, [rbp+var_CC0]
__text:0000000100003C3A                 add     rdx, 8
__text:0000000100003C41                 mov     [rbp+var_CB8], rdx
__text:0000000100003C48                 mov     rdx, [rbp+var_CB8]
__text:0000000100003C4F                 mov     [rbp+var_CB0], rdx
__text:0000000100003C56                 mov     rdx, [rbp+var_CB0]
__text:0000000100003C5D                 mov     [rbp+var_CD8], rdx
__text:0000000100003C64                 mov     rdx, [rbp+var_CD8]
__text:0000000100003C6B                 mov     [rbp+var_CA0], rdx
__text:0000000100003C72                 mov     [rbp+var_CA8], 1
__text:0000000100003C7D                 mov     rdx, [rbp+var_CA0]
__text:0000000100003C84                 mov     rsi, [rbp+var_CA8]
__text:0000000100003C8B                 mov     [rbp+var_C88], rdx
__text:0000000100003C92                 mov     [rbp+var_C90], rsi
__text:0000000100003C99                 mov     [rbp+var_C98], 0
__text:0000000100003CA4                 mov     rdx, [rbp+var_C90]
__text:0000000100003CAB                 shl     rdx, 5
__text:0000000100003CAF                 mov     [rbp+var_D40], rdi
__text:0000000100003CB6                 mov     rdi, rdx        ; unsigned __int64
__text:0000000100003CB9                 mov     [rbp+var_D48], rax
__text:0000000100003CC0                 call    __Znwm          ; operator new(ulong)
__text:0000000100003CC5                 lea     rdx, [rbp+var_CF0]
__text:0000000100003CCC                 lea     rsi, [rbp+var_A98]
__text:0000000100003CD3                 lea     rdi, [rbp+var_A88]
__text:0000000100003CDA                 lea     rcx, [rbp+var_AC0]
__text:0000000100003CE1                 lea     r8, [rbp+var_AB0]
__text:0000000100003CE8                 lea     r9, [rbp+var_B18]
__text:0000000100003CEF                 lea     r10, [rbp+var_B08]
__text:0000000100003CF6                 lea     r11, [rbp+var_D00]
__text:0000000100003CFD                 mov     rbx, [rbp+var_CD8]
__text:0000000100003D04                 mov     [rbp+var_C78], r11
__text:0000000100003D0B                 mov     [rbp+var_C80], rbx
__text:0000000100003D12                 mov     r11, [rbp+var_C78]
__text:0000000100003D19                 mov     rbx, [rbp+var_C80]
__text:0000000100003D20                 mov     [rbp+var_C68], r11
__text:0000000100003D27                 mov     [rbp+var_C70], rbx
__text:0000000100003D2E                 mov     r11, [rbp+var_C68]
__text:0000000100003D35                 mov     rbx, [rbp+var_C70]
__text:0000000100003D3C                 mov     [r11], rbx
__text:0000000100003D3F                 mov     byte ptr [r11+8], 0
__text:0000000100003D44                 mov     byte ptr [r11+9], 0
__text:0000000100003D49                 mov     r11, [rbp+var_D00]
__text:0000000100003D50                 mov     rbx, [rbp+var_CF8]
__text:0000000100003D57                 mov     [rbp+var_B30], rdx
__text:0000000100003D5E                 mov     [rbp+var_B38], rax
__text:0000000100003D65                 mov     [rbp+var_B48], r11
__text:0000000100003D6C                 mov     [rbp+var_B40], rbx
__text:0000000100003D73                 mov     rax, [rbp+var_B30]
__text:0000000100003D7A                 mov     r11, [rbp+var_B38]
__text:0000000100003D81                 mov     rbx, [rbp+var_B48]
__text:0000000100003D88                 mov     r14, [rbp+var_B40]
__text:0000000100003D8F                 mov     [rbp+var_B00], rax
__text:0000000100003D96                 mov     [rbp+var_B08], r11
__text:0000000100003D9D                 mov     [rbp+var_B18], rbx
__text:0000000100003DA4                 mov     [rbp+var_B10], r14
__text:0000000100003DAB                 mov     rax, [rbp+var_B00]
__text:0000000100003DB2                 mov     [rbp+var_AF8], r10
__text:0000000100003DB9                 mov     r10, [rbp+var_AF8]
__text:0000000100003DC0                 mov     r10, [r10]
__text:0000000100003DC3                 mov     [rbp+var_A60], r9
__text:0000000100003DCA                 mov     r9, [rbp+var_A60]
__text:0000000100003DD1                 mov     r11, [r9]
__text:0000000100003DD4                 mov     [rbp+var_B28], r11
__text:0000000100003DDB                 mov     r9, [r9+8]
__text:0000000100003DDF                 mov     [rbp+var_B20], r9
__text:0000000100003DE6                 mov     r9, [rbp+var_B28]
__text:0000000100003DED                 mov     r11, [rbp+var_B20]
__text:0000000100003DF4                 mov     [rbp+var_AD8], rax
__text:0000000100003DFB                 mov     [rbp+var_AE0], r10
__text:0000000100003E02                 mov     [rbp+var_AF0], r9
__text:0000000100003E09                 mov     [rbp+var_AE8], r11
__text:0000000100003E10                 mov     rax, [rbp+var_AD8]
__text:0000000100003E17                 mov     r9, [rbp+var_AE0]
__text:0000000100003E1E                 mov     r10, [rbp+var_AF0]
__text:0000000100003E25                 mov     r11, [rbp+var_AE8]
__text:0000000100003E2C                 mov     [rbp+var_AA8], rax
__text:0000000100003E33                 mov     [rbp+var_AB0], r9
__text:0000000100003E3A                 mov     [rbp+var_AC0], r10
__text:0000000100003E41                 mov     [rbp+var_AB8], r11
__text:0000000100003E48                 mov     rax, [rbp+var_AA8]
__text:0000000100003E4F                 mov     [rbp+var_AA0], r8
__text:0000000100003E56                 mov     r8, [rbp+var_AA0]
__text:0000000100003E5D                 mov     r8, [r8]
__text:0000000100003E60                 mov     [rbp+var_A68], rcx
__text:0000000100003E67                 mov     rcx, [rbp+var_A68]
__text:0000000100003E6E                 mov     r9, [rcx]
__text:0000000100003E71                 mov     [rbp+var_AD0], r9
__text:0000000100003E78                 mov     rcx, [rcx+8]
__text:0000000100003E7C                 mov     [rbp+var_AC8], rcx
__text:0000000100003E83                 mov     rcx, [rbp+var_AD0]
__text:0000000100003E8A                 mov     r9, [rbp+var_AC8]
__text:0000000100003E91                 mov     [rbp+var_A80], rax
__text:0000000100003E98                 mov     [rbp+var_A88], r8
__text:0000000100003E9F                 mov     [rbp+var_A98], rcx
__text:0000000100003EA6                 mov     [rbp+var_A90], r9
__text:0000000100003EAD                 mov     rax, [rbp+var_A80]
__text:0000000100003EB4                 mov     [rbp+var_A78], rdi
__text:0000000100003EBB                 mov     rcx, [rbp+var_A78]
__text:0000000100003EC2                 mov     rcx, [rcx]
__text:0000000100003EC5                 mov     [rax], rcx
__text:0000000100003EC8                 mov     [rbp+var_A70], rsi
__text:0000000100003ECF                 mov     rcx, [rbp+var_A70]
__text:0000000100003ED6                 mov     rsi, [rcx]
__text:0000000100003ED9                 mov     [rax+8], rsi
__text:0000000100003EDD                 mov     rcx, [rcx+8]
__text:0000000100003EE1                 mov     [rax+10h], rcx
__text:0000000100003EE5                 mov     rax, [rbp+var_CD8]
__text:0000000100003EEC                 mov     [rbp+var_940], rdx
__text:0000000100003EF3                 mov     rcx, [rbp+var_940]
__text:0000000100003EFA                 mov     [rbp+var_938], rcx
__text:0000000100003F01                 mov     rcx, [rbp+var_938]
__text:0000000100003F08                 mov     [rbp+var_930], rcx
__text:0000000100003F0F                 mov     rcx, [rbp+var_930]
__text:0000000100003F16                 mov     rcx, [rcx]
__text:0000000100003F19                 add     rcx, 19h
__text:0000000100003F20                 mov     [rbp+var_810], rcx
__text:0000000100003F27                 mov     rcx, [rbp+var_810]
__text:0000000100003F2E                 mov     rdx, [rbp+var_CD0]
__text:0000000100003F35                 mov     [rbp+var_6E0], rax
__text:0000000100003F3C                 mov     [rbp+var_6E8], rcx
__text:0000000100003F43                 mov     [rbp+var_6F0], rdx
__text:0000000100003F4A                 mov     rax, [rbp+var_6E8]
__text:0000000100003F51                 cmp     rax, 0
__text:0000000100003F57                 mov     [rbp+var_D50], rax
__text:0000000100003F5E                 jz      loc_100003F76
__text:0000000100003F64                 mov     rax, [rbp+var_6F0]
__text:0000000100003F6B                 mov     cl, [rax]
__text:0000000100003F6D                 mov     rax, [rbp+var_D50]
__text:0000000100003F74                 mov     [rax], cl
__text:0000000100003F76
__text:0000000100003F76 loc_100003F76:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+35E↑j
__text:0000000100003F76                 lea     rax, [rbp+var_CF0]
__text:0000000100003F7D                 mov     [rbp+var_88], rax
__text:0000000100003F84                 mov     rcx, [rbp+var_88]
__text:0000000100003F8B                 mov     [rbp+var_80], rcx
__text:0000000100003F8F                 mov     rcx, [rbp+var_80]
__text:0000000100003F93                 mov     [rbp+var_78], rcx
__text:0000000100003F97                 mov     rcx, [rbp+var_78]
__text:0000000100003F9B                 mov     byte ptr [rcx+10h], 1
__text:0000000100003F9F                 mov     rcx, [rbp+var_CD8]
__text:0000000100003FA6                 mov     [rbp+var_40], rax
__text:0000000100003FAA                 mov     rax, [rbp+var_40]
__text:0000000100003FAE                 mov     [rbp+var_38], rax
__text:0000000100003FB2                 mov     rax, [rbp+var_38]
__text:0000000100003FB6                 mov     [rbp+var_30], rax
__text:0000000100003FBA                 mov     rax, [rbp+var_30]
__text:0000000100003FBE                 mov     rax, [rax]
__text:0000000100003FC1                 add     rax, 19h
__text:0000000100003FC7                 add     rax, 1
__text:0000000100003FCD                 mov     [rbp+var_48], rax
__text:0000000100003FD1                 mov     rax, [rbp+var_48]
__text:0000000100003FD5                 mov     [rbp+var_50], rcx
__text:0000000100003FD9                 mov     [rbp+var_58], rax
__text:0000000100003FDD                 mov     rax, [rbp+var_58]
__text:0000000100003FE1                 cmp     rax, 0
__text:0000000100003FE7                 mov     [rbp+var_D58], rax
__text:0000000100003FEE                 jz      loc_100003FFE
__text:0000000100003FF4                 mov     rax, [rbp+var_D58]
__text:0000000100003FFB                 mov     byte ptr [rax], 0
__text:0000000100003FFE
__text:0000000100003FFE loc_100003FFE:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+3EE↑j
__text:0000000100003FFE                 lea     rax, [rbp+var_570]
__text:0000000100004005                 lea     rcx, [rbp+var_118]
__text:000000010000400C                 lea     rdx, [rbp+var_108]
__text:0000000100004013                 lea     rsi, [rbp+var_140]
__text:000000010000401A                 lea     rdi, [rbp+var_130]
__text:0000000100004021                 lea     r8, [rbp+var_188]
__text:0000000100004028                 lea     r9, [rbp+var_D30]
__text:000000010000402F                 lea     r10, [rbp+var_2E8]
__text:0000000100004036                 lea     r11, [rbp+var_498]
__text:000000010000403D                 lea     rbx, [rbp+var_488]
__text:0000000100004044                 lea     r14, [rbp+var_4C0]
__text:000000010000404B                 lea     r15, [rbp+var_4B0]
__text:0000000100004052                 lea     r12, [rbp+var_508]
__text:0000000100004059                 lea     r13, [rbp+var_578]
__text:0000000100004060                 mov     [rbp+var_D60], rax
__text:0000000100004067                 lea     rax, [rbp+var_CF0]
__text:000000010000406E                 mov     [rbp+var_70], rax
__text:0000000100004072                 mov     [rbp+var_D68], rax
__text:0000000100004079                 mov     rax, [rbp+var_70]
__text:000000010000407D                 mov     [rbp+var_68], rax
__text:0000000100004081                 mov     rax, [rbp+var_68]
__text:0000000100004085                 mov     [rbp+var_60], rax
__text:0000000100004089                 mov     rax, [rbp+var_60]
__text:000000010000408D                 mov     byte ptr [rax+11h], 1
__text:0000000100004091                 mov     rax, [rbp+var_D68]
__text:0000000100004098                 mov     [rbp+var_550], rax
__text:000000010000409F                 mov     rax, [rbp+var_550]
__text:00000001000040A6                 mov     [rbp+var_540], r13
__text:00000001000040AD                 mov     [rbp+var_548], rax
__text:00000001000040B4                 mov     rax, [rbp+var_540]
__text:00000001000040BB                 mov     r13, [rbp+var_548]
__text:00000001000040C2                 mov     [rbp+var_530], rax
__text:00000001000040C9                 mov     [rbp+var_538], r13
__text:00000001000040D0                 mov     rax, [rbp+var_530]
__text:00000001000040D7                 mov     r13, [rbp+var_538]
__text:00000001000040DE                 mov     [rax], r13
__text:00000001000040E1                 mov     rax, [rbp+var_578]
__text:00000001000040E8                 mov     r13, [rbp+var_D60]
__text:00000001000040EF                 mov     [rbp+var_520], r13
__text:00000001000040F6                 mov     [rbp+var_528], rax
__text:00000001000040FD                 mov     rax, [rbp+var_520]
__text:0000000100004104                 mov     r13, [rbp+var_528]
__text:000000010000410B                 mov     [rbp+var_500], rax
__text:0000000100004112                 mov     [rbp+var_508], r13
__text:0000000100004119                 mov     rax, [rbp+var_500]
__text:0000000100004120                 mov     [rbp+var_4F8], r12
__text:0000000100004127                 mov     r13, [rbp+var_4F8]
__text:000000010000412E                 mov     r13, [r13+0]
__text:0000000100004132                 mov     [rbp+var_430], r13
__text:0000000100004139                 mov     r13, [rbp+var_430]
__text:0000000100004140                 mov     [rbp+var_428], r13
__text:0000000100004147                 mov     [rbp+var_D70], rax
__text:000000010000414E                 mov     rax, [rbp+var_428]
__text:0000000100004155                 mov     [rbp+var_420], rax
__text:000000010000415C                 mov     rax, [rbp+var_420]
__text:0000000100004163                 mov     rax, [rax]
__text:0000000100004166                 mov     [rbp+var_438], rax
__text:000000010000416D                 mov     [rbp+var_418], r13
__text:0000000100004174                 mov     rax, [rbp+var_418]
__text:000000010000417B                 mov     [rbp+var_410], rax
__text:0000000100004182                 mov     rax, [rbp+var_410]
__text:0000000100004189                 mov     qword ptr [rax], 0
__text:0000000100004190                 mov     rax, [rbp+var_438]
__text:0000000100004197                 mov     [rbp+var_440], r12
__text:000000010000419E                 mov     r12, [rbp+var_440]
__text:00000001000041A5                 mov     r12, [r12]
__text:00000001000041A9                 mov     [rbp+var_458], r12
__text:00000001000041B0                 mov     r12, [rbp+var_458]
__text:00000001000041B7                 mov     [rbp+var_450], r12
__text:00000001000041BE                 mov     r12, [rbp+var_450]
__text:00000001000041C5                 mov     [rbp+var_448], r12
__text:00000001000041CC                 mov     r12, [rbp+var_448]
__text:00000001000041D3                 add     r12, 8
__text:00000001000041DA                 mov     [rbp+var_460], r12
__text:00000001000041E1                 mov     r12, [rbp+var_460]
__text:00000001000041E8                 mov     r13, [r12]
__text:00000001000041EC                 mov     [rbp+var_518], r13
__text:00000001000041F3                 mov     r12, [r12+8]
__text:00000001000041F8                 mov     [rbp+var_510], r12
__text:00000001000041FF                 mov     r12, [rbp+var_518]
__text:0000000100004206                 mov     r13, [rbp+var_510]
__text:000000010000420D                 mov     [rbp+var_D78], rax
__text:0000000100004214                 mov     rax, [rbp+var_D70]
__text:000000010000421B                 mov     [rbp+var_4D8], rax
__text:0000000100004222                 mov     rax, [rbp+var_D78]
__text:0000000100004229                 mov     [rbp+var_4E0], rax
__text:0000000100004230                 mov     [rbp+var_4F0], r12
__text:0000000100004237                 mov     [rbp+var_4E8], r13
__text:000000010000423E                 mov     r12, [rbp+var_4D8]
__text:0000000100004245                 mov     r13, [rbp+var_4E0]
__text:000000010000424C                 mov     rax, [rbp+var_4F0]
__text:0000000100004253                 mov     [rbp+var_D80], rax
__text:000000010000425A                 mov     rax, [rbp+var_4E8]
__text:0000000100004261                 mov     [rbp+var_4A8], r12
__text:0000000100004268                 mov     [rbp+var_4B0], r13
__text:000000010000426F                 mov     r12, [rbp+var_D80]
__text:0000000100004276                 mov     [rbp+var_4C0], r12
__text:000000010000427D                 mov     [rbp+var_4B8], rax
__text:0000000100004284                 mov     rax, [rbp+var_4A8]
__text:000000010000428B                 mov     [rbp+var_4A0], r15
__text:0000000100004292                 mov     r15, [rbp+var_4A0]
__text:0000000100004299                 mov     r15, [r15]
__text:000000010000429C                 mov     [rbp+var_468], r14
__text:00000001000042A3                 mov     r14, [rbp+var_468]
__text:00000001000042AA                 mov     r13, [r14]
__text:00000001000042AD                 mov     [rbp+var_4D0], r13
__text:00000001000042B4                 mov     r14, [r14+8]
__text:00000001000042B8                 mov     [rbp+var_4C8], r14
__text:00000001000042BF                 mov     r14, [rbp+var_4D0]
__text:00000001000042C6                 mov     r13, [rbp+var_4C8]
__text:00000001000042CD                 mov     [rbp+var_480], rax
__text:00000001000042D4                 mov     [rbp+var_488], r15
__text:00000001000042DB                 mov     [rbp+var_498], r14
__text:00000001000042E2                 mov     [rbp+var_490], r13
__text:00000001000042E9                 mov     rax, [rbp+var_480]
__text:00000001000042F0                 mov     [rbp+var_478], rbx
__text:00000001000042F7                 mov     rbx, [rbp+var_478]
__text:00000001000042FE                 mov     rbx, [rbx]
__text:0000000100004301                 mov     [rax], rbx
__text:0000000100004304                 mov     [rbp+var_470], r11
__text:000000010000430B                 mov     r11, [rbp+var_470]
__text:0000000100004312                 mov     rbx, [r11]
__text:0000000100004315                 mov     [rax+8], rbx
__text:0000000100004319                 mov     r11, [r11+8]
__text:000000010000431D                 mov     [rax+10h], r11
__text:0000000100004321                 mov     rax, [rbp+var_D60]
__text:0000000100004328                 mov     [rbp+var_2F0], rax
__text:000000010000432F                 mov     r11, [rbp+var_2F0]
__text:0000000100004336                 mov     [rbp+var_2D8], r10
__text:000000010000433D                 mov     [rbp+var_2E0], r11
__text:0000000100004344                 mov     r10, [rbp+var_2D8]
__text:000000010000434B                 mov     r11, [rbp+var_2E0]
__text:0000000100004352                 mov     [rbp+var_2C8], r10
__text:0000000100004359                 mov     [rbp+var_2D0], r11
__text:0000000100004360                 mov     r10, [rbp+var_2C8]
__text:0000000100004367                 mov     r11, [rbp+var_2D0]
__text:000000010000436E                 mov     [r10], r11
__text:0000000100004371                 mov     r10, [rbp+var_2E8]
__text:0000000100004378                 mov     [rbp+var_558], r10
__text:000000010000437F                 mov     r10, [rbp+var_558]
__text:0000000100004386                 mov     [rbp+var_1A0], r9
__text:000000010000438D                 mov     [rbp+var_1A8], r10
__text:0000000100004394                 mov     r9, [rbp+var_1A0]
__text:000000010000439B                 mov     r10, [rbp+var_1A8]
__text:00000001000043A2                 mov     [rbp+var_180], r9
__text:00000001000043A9                 mov     [rbp+var_188], r10
__text:00000001000043B0                 mov     r9, [rbp+var_180]
__text:00000001000043B7                 mov     [rbp+var_178], r8
__text:00000001000043BE                 mov     r10, [rbp+var_178]
__text:00000001000043C5                 mov     r10, [r10]
__text:00000001000043C8                 mov     [rbp+var_B0], r10
__text:00000001000043CF                 mov     r10, [rbp+var_B0]
__text:00000001000043D6                 mov     [rbp+var_A8], r10
__text:00000001000043DD                 mov     r11, [rbp+var_A8]
__text:00000001000043E4                 mov     [rbp+var_A0], r11
__text:00000001000043EB                 mov     r11, [rbp+var_A0]
__text:00000001000043F2                 mov     r11, [r11]
__text:00000001000043F5                 mov     [rbp+var_B8], r11
__text:00000001000043FC                 mov     [rbp+var_98], r10
__text:0000000100004403                 mov     r10, [rbp+var_98]
__text:000000010000440A                 mov     [rbp+var_90], r10
__text:0000000100004411                 mov     r10, [rbp+var_90]
__text:0000000100004418                 mov     qword ptr [r10], 0
__text:000000010000441F                 mov     r10, [rbp+var_B8]
__text:0000000100004426                 mov     [rbp+var_C0], r8
__text:000000010000442D                 mov     r8, [rbp+var_C0]
__text:0000000100004434                 mov     r8, [r8]
__text:0000000100004437                 mov     [rbp+var_D8], r8
__text:000000010000443E                 mov     r8, [rbp+var_D8]
__text:0000000100004445                 mov     [rbp+var_D0], r8
__text:000000010000444C                 mov     r8, [rbp+var_D0]
__text:0000000100004453                 mov     [rbp+var_C8], r8
__text:000000010000445A                 mov     r8, [rbp+var_C8]
__text:0000000100004461                 add     r8, 8
__text:0000000100004468                 mov     [rbp+var_E0], r8
__text:000000010000446F                 mov     r8, [rbp+var_E0]
__text:0000000100004476                 mov     r11, [r8]
__text:0000000100004479                 mov     [rbp+var_198], r11
__text:0000000100004480                 mov     r8, [r8+8]
__text:0000000100004484                 mov     [rbp+var_190], r8
__text:000000010000448B                 mov     r8, [rbp+var_198]
__text:0000000100004492                 mov     r11, [rbp+var_190]
__text:0000000100004499                 mov     [rbp+var_158], r9
__text:00000001000044A0                 mov     [rbp+var_160], r10
__text:00000001000044A7                 mov     [rbp+var_170], r8
__text:00000001000044AE                 mov     [rbp+var_168], r11
__text:00000001000044B5                 mov     r8, [rbp+var_158]
__text:00000001000044BC                 mov     r9, [rbp+var_160]
__text:00000001000044C3                 mov     r10, [rbp+var_170]
__text:00000001000044CA                 mov     r11, [rbp+var_168]
__text:00000001000044D1                 mov     [rbp+var_128], r8
__text:00000001000044D8                 mov     [rbp+var_130], r9
__text:00000001000044DF                 mov     [rbp+var_140], r10
__text:00000001000044E6                 mov     [rbp+var_138], r11
__text:00000001000044ED                 mov     r8, [rbp+var_128]
__text:00000001000044F4                 mov     [rbp+var_120], rdi
__text:00000001000044FB                 mov     rdi, [rbp+var_120]
__text:0000000100004502                 mov     rdi, [rdi]
__text:0000000100004505                 mov     [rbp+var_E8], rsi
__text:000000010000450C                 mov     rsi, [rbp+var_E8]
__text:0000000100004513                 mov     r9, [rsi]
__text:0000000100004516                 mov     [rbp+var_150], r9
__text:000000010000451D                 mov     rsi, [rsi+8]
__text:0000000100004521                 mov     [rbp+var_148], rsi
__text:0000000100004528                 mov     rsi, [rbp+var_150]
__text:000000010000452F                 mov     r9, [rbp+var_148]
__text:0000000100004536                 mov     [rbp+var_100], r8
__text:000000010000453D                 mov     [rbp+var_108], rdi
__text:0000000100004544                 mov     [rbp+var_118], rsi
__text:000000010000454B                 mov     [rbp+var_110], r9
__text:0000000100004552                 mov     rsi, [rbp+var_100]
__text:0000000100004559                 mov     [rbp+var_F8], rdx
__text:0000000100004560                 mov     rdx, [rbp+var_F8]
__text:0000000100004567                 mov     rdx, [rdx]
__text:000000010000456A                 mov     [rsi], rdx
__text:000000010000456D                 mov     [rbp+var_F0], rcx
__text:0000000100004574                 mov     rcx, [rbp+var_F0]
__text:000000010000457B                 mov     rdx, [rcx]
__text:000000010000457E                 mov     [rsi+8], rdx
__text:0000000100004582                 mov     rcx, [rcx+8]
__text:0000000100004586                 mov     [rsi+10h], rcx
__text:000000010000458A                 mov     [rbp+var_2C0], rax
__text:0000000100004591                 mov     rcx, [rbp+var_2C0]
__text:0000000100004598                 mov     [rbp+var_2B8], rcx
__text:000000010000459F                 mov     rcx, [rbp+var_2B8]
__text:00000001000045A6                 mov     [rbp+var_2A0], rcx
__text:00000001000045AD                 mov     [rbp+var_2A8], 0
__text:00000001000045B8                 mov     rcx, [rbp+var_2A0]
__text:00000001000045BF                 mov     [rbp+var_298], rcx
__text:00000001000045C6                 mov     rdx, [rbp+var_298]
__text:00000001000045CD                 mov     [rbp+var_290], rdx
__text:00000001000045D4                 mov     rdx, [rbp+var_290]
__text:00000001000045DB                 mov     rdx, [rdx]
__text:00000001000045DE                 mov     [rbp+var_2B0], rdx
__text:00000001000045E5                 mov     rdx, [rbp+var_2A8]
__text:00000001000045EC                 mov     [rbp+var_1C8], rcx
__text:00000001000045F3                 mov     rsi, [rbp+var_1C8]
__text:00000001000045FA                 mov     [rbp+var_1C0], rsi
__text:0000000100004601                 mov     rsi, [rbp+var_1C0]
__text:0000000100004608                 mov     [rsi], rdx
__text:000000010000460B                 cmp     [rbp+var_2B0], 0
__text:0000000100004616                 mov     [rbp+var_D88], rcx
__text:000000010000461D                 jz      loc_1000047AB
__text:0000000100004623                 mov     rax, [rbp+var_D88]
__text:000000010000462A                 mov     [rbp+var_1B8], rax
__text:0000000100004631                 mov     rcx, [rbp+var_1B8]
__text:0000000100004638                 mov     [rbp+var_1B0], rcx
__text:000000010000463F                 mov     rcx, [rbp+var_1B0]
__text:0000000100004646                 add     rcx, 8
__text:000000010000464D                 mov     rdx, [rbp+var_2B0]
__text:0000000100004654                 mov     [rbp+var_270], rcx
__text:000000010000465B                 mov     [rbp+var_278], rdx
__text:0000000100004662                 mov     rcx, [rbp+var_270]
__text:0000000100004669                 test    byte ptr [rcx+9], 1
__text:000000010000466D                 mov     [rbp+var_D90], rcx
__text:0000000100004674                 jz      loc_1000046D1
__text:000000010000467A                 mov     rax, [rbp+var_D90]
__text:0000000100004681                 mov     rcx, [rax]
__text:0000000100004684                 mov     rdx, [rbp+var_278]
__text:000000010000468B                 add     rdx, 19h
__text:0000000100004692                 add     rdx, 1
__text:0000000100004699                 mov     [rbp+var_268], rdx
__text:00000001000046A0                 mov     rdx, [rbp+var_268]
__text:00000001000046A7                 mov     [rbp+var_218], rcx
__text:00000001000046AE                 mov     [rbp+var_220], rdx
__text:00000001000046B5                 mov     rcx, [rbp+var_218]
__text:00000001000046BC                 mov     rdx, [rbp+var_220]
__text:00000001000046C3                 mov     [rbp+var_208], rcx
__text:00000001000046CA                 mov     [rbp+var_210], rdx
__text:00000001000046D1
__text:00000001000046D1 loc_1000046D1:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+A74↑j
__text:00000001000046D1                 mov     rax, [rbp+var_D90]
__text:00000001000046D8                 test    byte ptr [rax+8], 1
__text:00000001000046DC                 jz      loc_100004732
__text:00000001000046E2                 mov     rax, [rbp+var_D90]
__text:00000001000046E9                 mov     rcx, [rax]
__text:00000001000046EC                 mov     rdx, [rbp+var_278]
__text:00000001000046F3                 add     rdx, 19h
__text:00000001000046FA                 mov     [rbp+var_1D0], rdx
__text:0000000100004701                 mov     rdx, [rbp+var_1D0]
__text:0000000100004708                 mov     [rbp+var_1E8], rcx
__text:000000010000470F                 mov     [rbp+var_1F0], rdx
__text:0000000100004716                 mov     rcx, [rbp+var_1E8]
__text:000000010000471D                 mov     rdx, [rbp+var_1F0]
__text:0000000100004724                 mov     [rbp+var_1D8], rcx
__text:000000010000472B                 mov     [rbp+var_1E0], rdx
__text:0000000100004732
__text:0000000100004732 loc_100004732:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+ADC↑j
__text:0000000100004732                 cmp     [rbp+var_278], 0
__text:000000010000473D                 jz      loc_1000047A6
__text:0000000100004743                 mov     rax, [rbp+var_D90]
__text:000000010000474A                 mov     rcx, [rax]
__text:000000010000474D                 mov     rdx, [rbp+var_278]
__text:0000000100004754                 mov     [rbp+var_250], rcx
__text:000000010000475B                 mov     [rbp+var_258], rdx
__text:0000000100004762                 mov     [rbp+var_260], 1
__text:000000010000476D                 mov     rcx, [rbp+var_250]
__text:0000000100004774                 mov     rdx, [rbp+var_258]
__text:000000010000477B                 mov     rsi, [rbp+var_260]
__text:0000000100004782                 mov     [rbp+var_238], rcx
__text:0000000100004789                 mov     [rbp+var_240], rdx
__text:0000000100004790                 mov     [rbp+var_248], rsi
__text:0000000100004797                 mov     rcx, [rbp+var_240]
__text:000000010000479E                 mov     rdi, rcx        ; void *
__text:00000001000047A1                 call    __ZdlPv         ; operator delete(void *)
__text:00000001000047A6
__text:00000001000047A6 loc_1000047A6:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+B3D↑j
__text:00000001000047A6                 jmp     $+5
__text:00000001000047AB ; ---------------------------------------------------------------------------
__text:00000001000047AB
__text:00000001000047AB loc_1000047AB:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+A1D↑j
__text:00000001000047AB                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&):loc_1000047A6↑j
__text:00000001000047AB                 jmp     $+5
__text:00000001000047B0 ; ---------------------------------------------------------------------------
__text:00000001000047B0
__text:00000001000047B0 loc_1000047B0:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&):loc_1000047AB↑j
__text:00000001000047B0                 lea     rax, [rbp+var_5B0]
__text:00000001000047B7                 lea     rcx, [rbp+var_D30]
__text:00000001000047BE                 mov     [rbp+var_5B8], rcx
__text:00000001000047C5                 mov     rcx, [rbp+var_5B8]
__text:00000001000047CC                 mov     [rbp+var_5A0], rax
__text:00000001000047D3                 mov     [rbp+var_5A8], rcx
__text:00000001000047DA                 mov     rax, [rbp+var_5A0]
__text:00000001000047E1                 mov     rcx, [rbp+var_5A8]
__text:00000001000047E8                 mov     [rbp+var_590], rax
__text:00000001000047EF                 mov     [rbp+var_598], rcx
__text:00000001000047F6                 mov     rax, [rbp+var_590]
__text:00000001000047FD                 mov     rcx, [rbp+var_598]
__text:0000000100004804                 mov     [rax], rcx
__text:0000000100004807                 mov     rax, [rbp+var_5B0]
__text:000000010000480E                 mov     [rbp+var_D98], rax
__text:0000000100004815                 lea     rax, [rbp+var_648]
__text:000000010000481C                 lea     rcx, [rbp+var_638]
__text:0000000100004823                 lea     rdx, [rbp+var_670]
__text:000000010000482A                 lea     rsi, [rbp+var_660]
__text:0000000100004831                 lea     rdi, [rbp+var_6B8]
__text:0000000100004838                 mov     r8, [rbp+var_D98]
__text:000000010000483F                 mov     [rbp+var_D18], r8
__text:0000000100004846                 mov     r9, [rbp+var_D18]
__text:000000010000484D                 mov     r10, [rbp+var_D40]
__text:0000000100004854                 mov     [rbp+var_6D0], r10
__text:000000010000485B                 mov     [rbp+var_6D8], r9
__text:0000000100004862                 mov     r9, [rbp+var_6D0]
__text:0000000100004869                 mov     r11, [rbp+var_6D8]
__text:0000000100004870                 mov     [rbp+var_6B0], r9
__text:0000000100004877                 mov     [rbp+var_6B8], r11
__text:000000010000487E                 mov     r9, [rbp+var_6B0]
__text:0000000100004885                 mov     [rbp+var_6A8], rdi
__text:000000010000488C                 mov     r11, [rbp+var_6A8]
__text:0000000100004893                 mov     r11, [r11]
__text:0000000100004896                 mov     [rbp+var_5E0], r11
__text:000000010000489D                 mov     r11, [rbp+var_5E0]
__text:00000001000048A4                 mov     [rbp+var_5D8], r11
__text:00000001000048AB                 mov     rbx, [rbp+var_5D8]
__text:00000001000048B2                 mov     [rbp+var_5D0], rbx
__text:00000001000048B9                 mov     rbx, [rbp+var_5D0]
__text:00000001000048C0                 mov     rbx, [rbx]
__text:00000001000048C3                 mov     [rbp+var_5E8], rbx
__text:00000001000048CA                 mov     [rbp+var_5C8], r11
__text:00000001000048D1                 mov     r11, [rbp+var_5C8]
__text:00000001000048D8                 mov     [rbp+var_5C0], r11
__text:00000001000048DF                 mov     r11, [rbp+var_5C0]
__text:00000001000048E6                 mov     qword ptr [r11], 0
__text:00000001000048ED                 mov     r11, [rbp+var_5E8]
__text:00000001000048F4                 mov     [rbp+var_5F0], rdi
__text:00000001000048FB                 mov     rdi, [rbp+var_5F0]
__text:0000000100004902                 mov     rdi, [rdi]
__text:0000000100004905                 mov     [rbp+var_608], rdi
__text:000000010000490C                 mov     rdi, [rbp+var_608]
__text:0000000100004913                 mov     [rbp+var_600], rdi
__text:000000010000491A                 mov     rdi, [rbp+var_600]
__text:0000000100004921                 mov     [rbp+var_5F8], rdi
__text:0000000100004928                 mov     rdi, [rbp+var_5F8]
__text:000000010000492F                 add     rdi, 8
__text:0000000100004936                 mov     [rbp+var_610], rdi
__text:000000010000493D                 mov     rdi, [rbp+var_610]
__text:0000000100004944                 mov     rbx, [rdi]
__text:0000000100004947                 mov     [rbp+var_6C8], rbx
__text:000000010000494E                 mov     rdi, [rdi+8]
__text:0000000100004952                 mov     [rbp+var_6C0], rdi
__text:0000000100004959                 mov     rdi, [rbp+var_6C8]
__text:0000000100004960                 mov     rbx, [rbp+var_6C0]
__text:0000000100004967                 mov     [rbp+var_688], r9
__text:000000010000496E                 mov     [rbp+var_690], r11
__text:0000000100004975                 mov     [rbp+var_6A0], rdi
__text:000000010000497C                 mov     [rbp+var_698], rbx
__text:0000000100004983                 mov     rdi, [rbp+var_688]
__text:000000010000498A                 mov     r9, [rbp+var_690]
__text:0000000100004991                 mov     r11, [rbp+var_6A0]
__text:0000000100004998                 mov     rbx, [rbp+var_698]
__text:000000010000499F                 mov     [rbp+var_658], rdi
__text:00000001000049A6                 mov     [rbp+var_660], r9
__text:00000001000049AD                 mov     [rbp+var_670], r11
__text:00000001000049B4                 mov     [rbp+var_668], rbx
__text:00000001000049BB                 mov     rdi, [rbp+var_658]
__text:00000001000049C2                 mov     [rbp+var_650], rsi
__text:00000001000049C9                 mov     rsi, [rbp+var_650]
__text:00000001000049D0                 mov     rsi, [rsi]
__text:00000001000049D3                 mov     [rbp+var_618], rdx
__text:00000001000049DA                 mov     rdx, [rbp+var_618]
__text:00000001000049E1                 mov     r9, [rdx]
__text:00000001000049E4                 mov     [rbp+var_680], r9
__text:00000001000049EB                 mov     rdx, [rdx+8]
__text:00000001000049EF                 mov     [rbp+var_678], rdx
__text:00000001000049F6                 mov     rdx, [rbp+var_680]
__text:00000001000049FD                 mov     r9, [rbp+var_678]
__text:0000000100004A04                 mov     [rbp+var_630], rdi
__text:0000000100004A0B                 mov     [rbp+var_638], rsi
__text:0000000100004A12                 mov     [rbp+var_648], rdx
__text:0000000100004A19                 mov     [rbp+var_640], r9
__text:0000000100004A20                 mov     rdx, [rbp+var_630]
__text:0000000100004A27                 mov     [rbp+var_628], rcx
__text:0000000100004A2E                 mov     rcx, [rbp+var_628]
__text:0000000100004A35                 mov     rcx, [rcx]
__text:0000000100004A38                 mov     [rdx], rcx
__text:0000000100004A3B                 mov     [rbp+var_620], rax
__text:0000000100004A42                 mov     rax, [rbp+var_620]
__text:0000000100004A49                 mov     rcx, [rax]
__text:0000000100004A4C                 mov     [rdx+8], rcx
__text:0000000100004A50                 mov     rax, [rax+8]
__text:0000000100004A54                 mov     [rdx+10h], rax
__text:0000000100004A58                 lea     rax, [rbp+var_D30]
__text:0000000100004A5F                 mov     [rbp+var_808], rax
__text:0000000100004A66                 mov     rax, [rbp+var_808]
__text:0000000100004A6D                 mov     [rbp+var_800], rax
__text:0000000100004A74                 mov     rax, [rbp+var_800]
__text:0000000100004A7B                 mov     [rbp+var_7E8], rax
__text:0000000100004A82                 mov     [rbp+var_7F0], 0
__text:0000000100004A8D                 mov     rax, [rbp+var_7E8]
__text:0000000100004A94                 mov     [rbp+var_7E0], rax
__text:0000000100004A9B                 mov     rcx, [rbp+var_7E0]
__text:0000000100004AA2                 mov     [rbp+var_7D8], rcx
__text:0000000100004AA9                 mov     rcx, [rbp+var_7D8]
__text:0000000100004AB0                 mov     rcx, [rcx]
__text:0000000100004AB3                 mov     [rbp+var_7F8], rcx
__text:0000000100004ABA                 mov     rcx, [rbp+var_7F0]
__text:0000000100004AC1                 mov     [rbp+var_710], rax
__text:0000000100004AC8                 mov     rdx, [rbp+var_710]
__text:0000000100004ACF                 mov     [rbp+var_708], rdx
__text:0000000100004AD6                 mov     rdx, [rbp+var_708]
__text:0000000100004ADD                 mov     [rdx], rcx
__text:0000000100004AE0                 cmp     [rbp+var_7F8], 0
__text:0000000100004AEB                 mov     [rbp+var_DA0], rax
__text:0000000100004AF2                 jz      loc_100004C80
__text:0000000100004AF8                 mov     rax, [rbp+var_DA0]
__text:0000000100004AFF                 mov     [rbp+var_700], rax
__text:0000000100004B06                 mov     rcx, [rbp+var_700]
__text:0000000100004B0D                 mov     [rbp+var_6F8], rcx
__text:0000000100004B14                 mov     rcx, [rbp+var_6F8]
__text:0000000100004B1B                 add     rcx, 8
__text:0000000100004B22                 mov     rdx, [rbp+var_7F8]
__text:0000000100004B29                 mov     [rbp+var_7B8], rcx
__text:0000000100004B30                 mov     [rbp+var_7C0], rdx
__text:0000000100004B37                 mov     rcx, [rbp+var_7B8]
__text:0000000100004B3E                 test    byte ptr [rcx+9], 1
__text:0000000100004B42                 mov     [rbp+var_DA8], rcx
__text:0000000100004B49                 jz      loc_100004BA6
__text:0000000100004B4F                 mov     rax, [rbp+var_DA8]
__text:0000000100004B56                 mov     rcx, [rax]
__text:0000000100004B59                 mov     rdx, [rbp+var_7C0]
__text:0000000100004B60                 add     rdx, 19h
__text:0000000100004B67                 add     rdx, 1
__text:0000000100004B6E                 mov     [rbp+var_7B0], rdx
__text:0000000100004B75                 mov     rdx, [rbp+var_7B0]
__text:0000000100004B7C                 mov     [rbp+var_760], rcx
__text:0000000100004B83                 mov     [rbp+var_768], rdx
__text:0000000100004B8A                 mov     rcx, [rbp+var_760]
__text:0000000100004B91                 mov     rdx, [rbp+var_768]
__text:0000000100004B98                 mov     [rbp+var_750], rcx
__text:0000000100004B9F                 mov     [rbp+var_758], rdx
__text:0000000100004BA6
__text:0000000100004BA6 loc_100004BA6:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+F49↑j
__text:0000000100004BA6                 mov     rax, [rbp+var_DA8]
__text:0000000100004BAD                 test    byte ptr [rax+8], 1
__text:0000000100004BB1                 jz      loc_100004C07
__text:0000000100004BB7                 mov     rax, [rbp+var_DA8]
__text:0000000100004BBE                 mov     rcx, [rax]
__text:0000000100004BC1                 mov     rdx, [rbp+var_7C0]
__text:0000000100004BC8                 add     rdx, 19h
__text:0000000100004BCF                 mov     [rbp+var_718], rdx
__text:0000000100004BD6                 mov     rdx, [rbp+var_718]
__text:0000000100004BDD                 mov     [rbp+var_730], rcx
__text:0000000100004BE4                 mov     [rbp+var_738], rdx
__text:0000000100004BEB                 mov     rcx, [rbp+var_730]
__text:0000000100004BF2                 mov     rdx, [rbp+var_738]
__text:0000000100004BF9                 mov     [rbp+var_720], rcx
__text:0000000100004C00                 mov     [rbp+var_728], rdx
__text:0000000100004C07
__text:0000000100004C07 loc_100004C07:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+FB1↑j
__text:0000000100004C07                 cmp     [rbp+var_7C0], 0
__text:0000000100004C12                 jz      loc_100004C7B
__text:0000000100004C18                 mov     rax, [rbp+var_DA8]
__text:0000000100004C1F                 mov     rcx, [rax]
__text:0000000100004C22                 mov     rdx, [rbp+var_7C0]
__text:0000000100004C29                 mov     [rbp+var_798], rcx
__text:0000000100004C30                 mov     [rbp+var_7A0], rdx
__text:0000000100004C37                 mov     [rbp+var_7A8], 1
__text:0000000100004C42                 mov     rcx, [rbp+var_798]
__text:0000000100004C49                 mov     rdx, [rbp+var_7A0]
__text:0000000100004C50                 mov     rsi, [rbp+var_7A8]
__text:0000000100004C57                 mov     [rbp+var_780], rcx
__text:0000000100004C5E                 mov     [rbp+var_788], rdx
__text:0000000100004C65                 mov     [rbp+var_790], rsi
__text:0000000100004C6C                 mov     rcx, [rbp+var_788]
__text:0000000100004C73                 mov     rdi, rcx        ; void *
__text:0000000100004C76                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100004C7B
__text:0000000100004C7B loc_100004C7B:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+1012↑j
__text:0000000100004C7B                 jmp     $+5
__text:0000000100004C80 ; ---------------------------------------------------------------------------
__text:0000000100004C80
__text:0000000100004C80 loc_100004C80:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+EF2↑j
__text:0000000100004C80                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&):loc_100004C7B↑j
__text:0000000100004C80                 jmp     $+5
__text:0000000100004C85 ; ---------------------------------------------------------------------------
__text:0000000100004C85
__text:0000000100004C85 loc_100004C85:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&):loc_100004C80↑j
__text:0000000100004C85                 lea     rax, [rbp+var_CF0]
__text:0000000100004C8C                 mov     [rbp+var_D34], 1
__text:0000000100004C96                 mov     [rbp+var_928], rax
__text:0000000100004C9D                 mov     rax, [rbp+var_928]
__text:0000000100004CA4                 mov     [rbp+var_920], rax
__text:0000000100004CAB                 mov     rax, [rbp+var_920]
__text:0000000100004CB2                 mov     [rbp+var_908], rax
__text:0000000100004CB9                 mov     [rbp+var_910], 0
__text:0000000100004CC4                 mov     rax, [rbp+var_908]
__text:0000000100004CCB                 mov     [rbp+var_900], rax
__text:0000000100004CD2                 mov     rcx, [rbp+var_900]
__text:0000000100004CD9                 mov     [rbp+var_8F8], rcx
__text:0000000100004CE0                 mov     rcx, [rbp+var_8F8]
__text:0000000100004CE7                 mov     rcx, [rcx]
__text:0000000100004CEA                 mov     [rbp+var_918], rcx
__text:0000000100004CF1                 mov     rcx, [rbp+var_910]
__text:0000000100004CF8                 mov     [rbp+var_830], rax
__text:0000000100004CFF                 mov     rdx, [rbp+var_830]
__text:0000000100004D06                 mov     [rbp+var_828], rdx
__text:0000000100004D0D                 mov     rdx, [rbp+var_828]
__text:0000000100004D14                 mov     [rdx], rcx
__text:0000000100004D17                 cmp     [rbp+var_918], 0
__text:0000000100004D22                 mov     [rbp+var_DB0], rax
__text:0000000100004D29                 jz      loc_100004EB7
__text:0000000100004D2F                 mov     rax, [rbp+var_DB0]
__text:0000000100004D36                 mov     [rbp+var_820], rax
__text:0000000100004D3D                 mov     rcx, [rbp+var_820]
__text:0000000100004D44                 mov     [rbp+var_818], rcx
__text:0000000100004D4B                 mov     rcx, [rbp+var_818]
__text:0000000100004D52                 add     rcx, 8
__text:0000000100004D59                 mov     rdx, [rbp+var_918]
__text:0000000100004D60                 mov     [rbp+var_8D8], rcx
__text:0000000100004D67                 mov     [rbp+var_8E0], rdx
__text:0000000100004D6E                 mov     rcx, [rbp+var_8D8]
__text:0000000100004D75                 test    byte ptr [rcx+9], 1
__text:0000000100004D79                 mov     [rbp+var_DB8], rcx
__text:0000000100004D80                 jz      loc_100004DDD
__text:0000000100004D86                 mov     rax, [rbp+var_DB8]
__text:0000000100004D8D                 mov     rcx, [rax]
__text:0000000100004D90                 mov     rdx, [rbp+var_8E0]
__text:0000000100004D97                 add     rdx, 19h
__text:0000000100004D9E                 add     rdx, 1
__text:0000000100004DA5                 mov     [rbp+var_8D0], rdx
__text:0000000100004DAC                 mov     rdx, [rbp+var_8D0]
__text:0000000100004DB3                 mov     [rbp+var_880], rcx
__text:0000000100004DBA                 mov     [rbp+var_888], rdx
__text:0000000100004DC1                 mov     rcx, [rbp+var_880]
__text:0000000100004DC8                 mov     rdx, [rbp+var_888]
__text:0000000100004DCF                 mov     [rbp+var_870], rcx
__text:0000000100004DD6                 mov     [rbp+var_878], rdx
__text:0000000100004DDD
__text:0000000100004DDD loc_100004DDD:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+1180↑j
__text:0000000100004DDD                 mov     rax, [rbp+var_DB8]
__text:0000000100004DE4                 test    byte ptr [rax+8], 1
__text:0000000100004DE8                 jz      loc_100004E3E
__text:0000000100004DEE                 mov     rax, [rbp+var_DB8]
__text:0000000100004DF5                 mov     rcx, [rax]
__text:0000000100004DF8                 mov     rdx, [rbp+var_8E0]
__text:0000000100004DFF                 add     rdx, 19h
__text:0000000100004E06                 mov     [rbp+var_838], rdx
__text:0000000100004E0D                 mov     rdx, [rbp+var_838]
__text:0000000100004E14                 mov     [rbp+var_850], rcx
__text:0000000100004E1B                 mov     [rbp+var_858], rdx
__text:0000000100004E22                 mov     rcx, [rbp+var_850]
__text:0000000100004E29                 mov     rdx, [rbp+var_858]
__text:0000000100004E30                 mov     [rbp+var_840], rcx
__text:0000000100004E37                 mov     [rbp+var_848], rdx
__text:0000000100004E3E
__text:0000000100004E3E loc_100004E3E:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+11E8↑j
__text:0000000100004E3E                 cmp     [rbp+var_8E0], 0
__text:0000000100004E49                 jz      loc_100004EB2
__text:0000000100004E4F                 mov     rax, [rbp+var_DB8]
__text:0000000100004E56                 mov     rcx, [rax]
__text:0000000100004E59                 mov     rdx, [rbp+var_8E0]
__text:0000000100004E60                 mov     [rbp+var_8B8], rcx
__text:0000000100004E67                 mov     [rbp+var_8C0], rdx
__text:0000000100004E6E                 mov     [rbp+var_8C8], 1
__text:0000000100004E79                 mov     rcx, [rbp+var_8B8]
__text:0000000100004E80                 mov     rdx, [rbp+var_8C0]
__text:0000000100004E87                 mov     rsi, [rbp+var_8C8]
__text:0000000100004E8E                 mov     [rbp+var_8A0], rcx
__text:0000000100004E95                 mov     [rbp+var_8A8], rdx
__text:0000000100004E9C                 mov     [rbp+var_8B0], rsi
__text:0000000100004EA3                 mov     rcx, [rbp+var_8A8]
__text:0000000100004EAA                 mov     rdi, rcx        ; void *
__text:0000000100004EAD                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100004EB2
__text:0000000100004EB2 loc_100004EB2:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+1249↑j
__text:0000000100004EB2                 jmp     $+5
__text:0000000100004EB7 ; ---------------------------------------------------------------------------
__text:0000000100004EB7
__text:0000000100004EB7 loc_100004EB7:                          ; CODE XREF: std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&)+1129↑j
__text:0000000100004EB7                                         ; std::__1::map<char,char,std::__1::less<char>,std::__1::allocator<std::__1::pair<char const,char>>>::__construct_node_with_key(char const&):loc_100004EB2↑j
__text:0000000100004EB7                 mov     rax, [rbp+var_D48]
__text:0000000100004EBE                 add     rsp, 0D98h
__text:0000000100004EC5                 pop     rbx
__text:0000000100004EC6                 pop     r12
__text:0000000100004EC8                 pop     r13
__text:0000000100004ECA                 pop     r14
__text:0000000100004ECC                 pop     r15
__text:0000000100004ECE                 pop     rbp
__text:0000000100004ECF                 retn
__text:0000000100004ECF __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEE25__construct_node_with_keyERS5_ endp
__text:0000000100004ECF
__text:0000000100004ED0
__text:0000000100004ED0 ; =============== S U B R O U T I N E =======================================
__text:0000000100004ED0
__text:0000000100004ED0 ; Attributes: bp-based frame
__text:0000000100004ED0
__text:0000000100004ED0 ; std::__1::__tree<std::__1::__value_type<char, char>, std::__1::__map_value_compare<char, std::__1::__value_type<char, char>, std::__1::less<char>, true>, std::__1::allocator<std::__1::__value_type<char, char>>>::__insert_node_at(std::__1::__tree_node_base<void *> *, std::__1::__tree_node_base<void *> *&, std::__1::__tree_node_base<void *> *)
__text:0000000100004ED0 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_ proc near
__text:0000000100004ED0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD__ptr↓o
__text:0000000100004ED0
__text:0000000100004ED0 var_130         = qword ptr -130h
__text:0000000100004ED0 var_128         = qword ptr -128h
__text:0000000100004ED0 var_120         = qword ptr -120h
__text:0000000100004ED0 var_118         = qword ptr -118h
__text:0000000100004ED0 var_110         = qword ptr -110h
__text:0000000100004ED0 var_108         = qword ptr -108h
__text:0000000100004ED0 var_100         = qword ptr -100h
__text:0000000100004ED0 var_F8          = qword ptr -0F8h
__text:0000000100004ED0 var_F0          = qword ptr -0F0h
__text:0000000100004ED0 var_E8          = qword ptr -0E8h
__text:0000000100004ED0 var_E0          = qword ptr -0E0h
__text:0000000100004ED0 var_D8          = qword ptr -0D8h
__text:0000000100004ED0 var_D0          = qword ptr -0D0h
__text:0000000100004ED0 var_C8          = qword ptr -0C8h
__text:0000000100004ED0 var_C0          = qword ptr -0C0h
__text:0000000100004ED0 var_B8          = qword ptr -0B8h
__text:0000000100004ED0 var_B0          = qword ptr -0B0h
__text:0000000100004ED0 var_A8          = qword ptr -0A8h
__text:0000000100004ED0 var_A0          = qword ptr -0A0h
__text:0000000100004ED0 var_98          = qword ptr -98h
__text:0000000100004ED0 var_90          = qword ptr -90h
__text:0000000100004ED0 var_88          = qword ptr -88h
__text:0000000100004ED0 var_80          = qword ptr -80h
__text:0000000100004ED0 var_78          = qword ptr -78h
__text:0000000100004ED0 var_70          = qword ptr -70h
__text:0000000100004ED0 var_68          = qword ptr -68h
__text:0000000100004ED0 var_60          = qword ptr -60h
__text:0000000100004ED0 var_58          = qword ptr -58h
__text:0000000100004ED0 var_50          = qword ptr -50h
__text:0000000100004ED0 var_48          = qword ptr -48h
__text:0000000100004ED0 var_40          = qword ptr -40h
__text:0000000100004ED0 var_38          = qword ptr -38h
__text:0000000100004ED0 var_30          = qword ptr -30h
__text:0000000100004ED0 var_28          = qword ptr -28h
__text:0000000100004ED0 var_20          = qword ptr -20h
__text:0000000100004ED0 var_18          = qword ptr -18h
__text:0000000100004ED0 var_10          = qword ptr -10h
__text:0000000100004ED0
__text:0000000100004ED0                 push    rbp
__text:0000000100004ED1                 mov     rbp, rsp
__text:0000000100004ED4                 push    rbx
__text:0000000100004ED5                 sub     rsp, 128h
__text:0000000100004EDC                 lea     rax, [rbp+var_128]
__text:0000000100004EE3                 lea     r8, [rbp+var_68]
__text:0000000100004EE7                 lea     r9, [rbp+var_120]
__text:0000000100004EEE                 lea     r10, [rbp+var_30]
__text:0000000100004EF2                 lea     r11, [rbp+var_118]
__text:0000000100004EF9                 lea     rbx, [rbp+var_F0]
__text:0000000100004F00                 mov     [rbp+var_F8], rdi
__text:0000000100004F07                 mov     [rbp+var_100], rsi
__text:0000000100004F0E                 mov     [rbp+var_108], rdx
__text:0000000100004F15                 mov     [rbp+var_110], rcx
__text:0000000100004F1C                 mov     rcx, [rbp+var_F8]
__text:0000000100004F23                 mov     [rbp+var_E0], rbx
__text:0000000100004F2A                 mov     [rbp+var_E8], 0FFFFFFFFFFFFFFFFh
__text:0000000100004F35                 mov     rdx, [rbp+var_E0]
__text:0000000100004F3C                 mov     rsi, [rbp+var_E8]
__text:0000000100004F43                 mov     [rbp+var_D0], rdx
__text:0000000100004F4A                 mov     [rbp+var_D8], rsi
__text:0000000100004F51                 mov     rdx, [rbp+var_D0]
__text:0000000100004F58                 mov     qword ptr [rdx], 0
__text:0000000100004F5F                 mov     rdx, [rbp+var_F0]
__text:0000000100004F66                 mov     [rbp+var_118], rdx
__text:0000000100004F6D                 mov     [rbp+var_B0], r11
__text:0000000100004F74                 mov     rdx, [rbp+var_110]
__text:0000000100004F7B                 mov     qword ptr [rdx], 0
__text:0000000100004F82                 mov     [rbp+var_20], r10
__text:0000000100004F86                 mov     [rbp+var_28], 0FFFFFFFFFFFFFFFFh
__text:0000000100004F8E                 mov     rdx, [rbp+var_20]
__text:0000000100004F92                 mov     rsi, [rbp+var_28]
__text:0000000100004F96                 mov     [rbp+var_10], rdx
__text:0000000100004F9A                 mov     [rbp+var_18], rsi
__text:0000000100004F9E                 mov     rdx, [rbp+var_10]
__text:0000000100004FA2                 mov     qword ptr [rdx], 0
__text:0000000100004FA9                 mov     rdx, [rbp+var_30]
__text:0000000100004FAD                 mov     [rbp+var_120], rdx
__text:0000000100004FB4                 mov     [rbp+var_38], r9
__text:0000000100004FB8                 mov     rdx, [rbp+var_110]
__text:0000000100004FBF                 mov     qword ptr [rdx+8], 0
__text:0000000100004FC7                 mov     rdx, [rbp+var_100]
__text:0000000100004FCE                 mov     rsi, [rbp+var_110]
__text:0000000100004FD5                 mov     [rsi+10h], rdx
__text:0000000100004FD9                 mov     rdx, [rbp+var_110]
__text:0000000100004FE0                 mov     rsi, [rbp+var_108]
__text:0000000100004FE7                 mov     [rsi], rdx
__text:0000000100004FEA                 mov     [rbp+var_40], rcx
__text:0000000100004FEE                 mov     rdx, [rbp+var_40]
__text:0000000100004FF2                 mov     rdx, [rdx]
__text:0000000100004FF5                 mov     rdx, [rdx]
__text:0000000100004FF8                 mov     [rbp+var_58], r8
__text:0000000100004FFC                 mov     [rbp+var_60], 0FFFFFFFFFFFFFFFFh
__text:0000000100005004                 mov     rsi, [rbp+var_58]
__text:0000000100005008                 mov     rdi, [rbp+var_60]
__text:000000010000500C                 mov     [rbp+var_48], rsi
__text:0000000100005010                 mov     [rbp+var_50], rdi
__text:0000000100005014                 mov     rsi, [rbp+var_48]
__text:0000000100005018                 mov     qword ptr [rsi], 0
__text:000000010000501F                 mov     rsi, [rbp+var_68]
__text:0000000100005023                 mov     [rbp+var_128], rsi
__text:000000010000502A                 mov     [rbp+var_70], rax
__text:000000010000502E                 cmp     rdx, 0
__text:0000000100005035                 mov     [rbp+var_130], rcx
__text:000000010000503C                 jz      loc_100005062
__text:0000000100005042                 mov     rax, [rbp+var_130]
__text:0000000100005049                 mov     [rbp+var_78], rax
__text:000000010000504D                 mov     rcx, [rbp+var_78]
__text:0000000100005051                 mov     rcx, [rcx]
__text:0000000100005054                 mov     rcx, [rcx]
__text:0000000100005057                 mov     [rbp+var_80], rax
__text:000000010000505B                 mov     rdx, [rbp+var_80]
__text:000000010000505F                 mov     [rdx], rcx
__text:0000000100005062
__text:0000000100005062 loc_100005062:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::__insert_node_at(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *&,std::__1::__tree_node_base<void *> *)+16C↑j
__text:0000000100005062                 mov     rax, [rbp+var_130]
__text:0000000100005069                 mov     [rbp+var_A8], rax
__text:0000000100005070                 mov     rcx, [rbp+var_A8]
__text:0000000100005077                 add     rcx, 8
__text:000000010000507E                 mov     [rbp+var_A0], rcx
__text:0000000100005085                 mov     rcx, [rbp+var_A0]
__text:000000010000508C                 mov     [rbp+var_98], rcx
__text:0000000100005093                 mov     rcx, [rbp+var_98]
__text:000000010000509A                 mov     [rbp+var_90], rcx
__text:00000001000050A1                 mov     rcx, [rbp+var_90]
__text:00000001000050A8                 mov     [rbp+var_88], rcx
__text:00000001000050AF                 mov     rcx, [rbp+var_88]
__text:00000001000050B6                 mov     rdi, [rcx]
__text:00000001000050B9                 mov     rcx, [rbp+var_108]
__text:00000001000050C0                 mov     rsi, [rcx]
__text:00000001000050C3                 call    j___ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)
__text:00000001000050C8                 mov     rax, [rbp+var_130]
__text:00000001000050CF                 mov     [rbp+var_C8], rax
__text:00000001000050D6                 mov     rcx, [rbp+var_C8]
__text:00000001000050DD                 add     rcx, 10h
__text:00000001000050E4                 mov     [rbp+var_C0], rcx
__text:00000001000050EB                 mov     rcx, [rbp+var_C0]
__text:00000001000050F2                 mov     [rbp+var_B8], rcx
__text:00000001000050F9                 mov     rcx, [rbp+var_B8]
__text:0000000100005100                 mov     rsi, [rcx]
__text:0000000100005103                 add     rsi, 1
__text:000000010000510A                 mov     [rcx], rsi
__text:000000010000510D                 add     rsp, 128h
__text:0000000100005114                 pop     rbx
__text:0000000100005115                 pop     rbp
__text:0000000100005116                 retn
__text:0000000100005116 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_ endp
__text:0000000100005116
__text:0000000100005116 ; ---------------------------------------------------------------------------
__text:0000000100005117                 align 20h
__text:0000000100005120
__text:0000000100005120 ; =============== S U B R O U T I N E =======================================
__text:0000000100005120
__text:0000000100005120 ; Attributes: bp-based frame
__text:0000000100005120
__text:0000000100005120 ; void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *, std::__1::__tree_node_base<void *> *)
__text:0000000100005120 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ proc near
__text:0000000100005120                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5__ptr↓o
__text:0000000100005120
__text:0000000100005120 var_E0          = qword ptr -0E0h
__text:0000000100005120 var_D8          = qword ptr -0D8h
__text:0000000100005120 var_D0          = qword ptr -0D0h
__text:0000000100005120 var_C8          = qword ptr -0C8h
__text:0000000100005120 var_B9          = byte ptr -0B9h
__text:0000000100005120 var_B8          = qword ptr -0B8h
__text:0000000100005120 var_B0          = qword ptr -0B0h
__text:0000000100005120 var_A8          = qword ptr -0A8h
__text:0000000100005120 var_90          = qword ptr -90h
__text:0000000100005120 var_88          = qword ptr -88h
__text:0000000100005120 var_80          = qword ptr -80h
__text:0000000100005120 var_78          = qword ptr -78h
__text:0000000100005120 var_70          = qword ptr -70h
__text:0000000100005120 var_68          = qword ptr -68h
__text:0000000100005120 var_60          = qword ptr -60h
__text:0000000100005120 var_58          = qword ptr -58h
__text:0000000100005120 var_50          = qword ptr -50h
__text:0000000100005120 var_48          = qword ptr -48h
__text:0000000100005120 var_40          = qword ptr -40h
__text:0000000100005120 var_38          = qword ptr -38h
__text:0000000100005120 var_30          = qword ptr -30h
__text:0000000100005120 var_28          = qword ptr -28h
__text:0000000100005120 var_20          = qword ptr -20h
__text:0000000100005120 var_18          = qword ptr -18h
__text:0000000100005120 var_10          = qword ptr -10h
__text:0000000100005120 var_8           = qword ptr -8
__text:0000000100005120
__text:0000000100005120                 push    rbp
__text:0000000100005121                 mov     rbp, rsp
__text:0000000100005124                 sub     rsp, 0E0h
__text:000000010000512B                 mov     [rbp+var_80], rdi
__text:000000010000512F                 mov     [rbp+var_88], rsi
__text:0000000100005136                 mov     rsi, [rbp+var_88]
__text:000000010000513D                 cmp     rsi, [rbp+var_80]
__text:0000000100005141                 setz    al
__text:0000000100005144                 mov     rsi, [rbp+var_88]
__text:000000010000514B                 and     al, 1
__text:000000010000514D                 mov     [rsi+18h], al
__text:0000000100005150
__text:0000000100005150 loc_100005150:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_1000054BC↓j
__text:0000000100005150                 mov     al, 0
__text:0000000100005152                 mov     rcx, [rbp+var_88]
__text:0000000100005159                 cmp     rcx, [rbp+var_80]
__text:000000010000515D                 mov     [rbp+var_B9], al
__text:0000000100005163                 jz      loc_100005180
__text:0000000100005169                 mov     rax, [rbp+var_88]
__text:0000000100005170                 mov     rax, [rax+10h]
__text:0000000100005174                 mov     cl, [rax+18h]
__text:0000000100005177                 xor     cl, 1
__text:000000010000517A                 mov     [rbp+var_B9], cl
__text:0000000100005180
__text:0000000100005180 loc_100005180:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+43↑j
__text:0000000100005180                 mov     al, [rbp+var_B9]
__text:0000000100005186                 test    al, 1
__text:0000000100005188                 jnz     loc_100005193
__text:000000010000518E                 jmp     loc_1000054C1
__text:0000000100005193 ; ---------------------------------------------------------------------------
__text:0000000100005193
__text:0000000100005193 loc_100005193:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+68↑j
__text:0000000100005193                 mov     rax, [rbp+var_88]
__text:000000010000519A                 mov     rax, [rax+10h]
__text:000000010000519E                 mov     [rbp+var_78], rax
__text:00000001000051A2                 mov     rax, [rbp+var_78]
__text:00000001000051A6                 mov     rcx, [rbp+var_78]
__text:00000001000051AA                 mov     rcx, [rcx+10h]
__text:00000001000051AE                 cmp     rax, [rcx]
__text:00000001000051B1                 jnz     loc_10000533A
__text:00000001000051B7                 lea     rax, [rbp+var_70]
__text:00000001000051BB                 mov     rcx, [rbp+var_88]
__text:00000001000051C2                 mov     rcx, [rcx+10h]
__text:00000001000051C6                 mov     rcx, [rcx+10h]
__text:00000001000051CA                 mov     rcx, [rcx+8]
__text:00000001000051CE                 mov     [rbp+var_90], rcx
__text:00000001000051D5                 mov     rcx, [rbp+var_90]
__text:00000001000051DC                 mov     [rbp+var_60], rax
__text:00000001000051E0                 mov     [rbp+var_68], 0FFFFFFFFFFFFFFFFh
__text:00000001000051E8                 mov     rax, [rbp+var_60]
__text:00000001000051EC                 mov     rdx, [rbp+var_68]
__text:00000001000051F0                 mov     [rbp+var_50], rax
__text:00000001000051F4                 mov     [rbp+var_58], rdx
__text:00000001000051F8                 mov     rax, [rbp+var_50]
__text:00000001000051FC                 mov     qword ptr [rax], 0
__text:0000000100005203                 mov     rax, [rbp+var_70]
__text:0000000100005207                 mov     [rbp+var_C8], rcx
__text:000000010000520E                 mov     [rbp+var_D0], rax
__text:0000000100005215                 lea     rax, [rbp+var_A8]
__text:000000010000521C                 mov     rcx, [rbp+var_D0]
__text:0000000100005223                 mov     [rbp+var_A8], rcx
__text:000000010000522A                 mov     [rbp+var_48], rax
__text:000000010000522E                 mov     rax, [rbp+var_C8]
__text:0000000100005235                 cmp     rax, 0
__text:000000010000523B                 jz      loc_1000052AC
__text:0000000100005241                 mov     rax, [rbp+var_90]
__text:0000000100005248                 test    byte ptr [rax+18h], 1
__text:000000010000524C                 jnz     loc_1000052AC
__text:0000000100005252                 mov     rax, [rbp+var_88]
__text:0000000100005259                 mov     rax, [rax+10h]
__text:000000010000525D                 mov     [rbp+var_88], rax
__text:0000000100005264                 mov     rax, [rbp+var_88]
__text:000000010000526B                 mov     byte ptr [rax+18h], 1
__text:000000010000526F                 mov     rax, [rbp+var_88]
__text:0000000100005276                 mov     rax, [rax+10h]
__text:000000010000527A                 mov     [rbp+var_88], rax
__text:0000000100005281                 mov     rax, [rbp+var_88]
__text:0000000100005288                 cmp     rax, [rbp+var_80]
__text:000000010000528C                 setz    cl
__text:000000010000528F                 mov     rax, [rbp+var_88]
__text:0000000100005296                 and     cl, 1
__text:0000000100005299                 mov     [rax+18h], cl
__text:000000010000529C                 mov     rax, [rbp+var_90]
__text:00000001000052A3                 mov     byte ptr [rax+18h], 1
__text:00000001000052A7                 jmp     loc_100005335
__text:00000001000052AC ; ---------------------------------------------------------------------------
__text:00000001000052AC
__text:00000001000052AC loc_1000052AC:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+11B↑j
__text:00000001000052AC                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+12C↑j
__text:00000001000052AC                 mov     rax, [rbp+var_88]
__text:00000001000052B3                 mov     [rbp+var_8], rax
__text:00000001000052B7                 mov     rax, [rbp+var_8]
__text:00000001000052BB                 mov     rcx, [rbp+var_8]
__text:00000001000052BF                 mov     rcx, [rcx+10h]
__text:00000001000052C3                 cmp     rax, [rcx]
__text:00000001000052C6                 jz      loc_1000052EA
__text:00000001000052CC                 mov     rax, [rbp+var_88]
__text:00000001000052D3                 mov     rax, [rax+10h]
__text:00000001000052D7                 mov     [rbp+var_88], rax
__text:00000001000052DE                 mov     rdi, [rbp+var_88]
__text:00000001000052E5                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000052EA
__text:00000001000052EA loc_1000052EA:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+1A6↑j
__text:00000001000052EA                 mov     rax, [rbp+var_88]
__text:00000001000052F1                 mov     rax, [rax+10h]
__text:00000001000052F5                 mov     [rbp+var_88], rax
__text:00000001000052FC                 mov     rax, [rbp+var_88]
__text:0000000100005303                 mov     byte ptr [rax+18h], 1
__text:0000000100005307                 mov     rax, [rbp+var_88]
__text:000000010000530E                 mov     rax, [rax+10h]
__text:0000000100005312                 mov     [rbp+var_88], rax
__text:0000000100005319                 mov     rax, [rbp+var_88]
__text:0000000100005320                 mov     byte ptr [rax+18h], 0
__text:0000000100005324                 mov     rdi, [rbp+var_88]
__text:000000010000532B                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100005330                 jmp     loc_1000054C1
__text:0000000100005335 ; ---------------------------------------------------------------------------
__text:0000000100005335
__text:0000000100005335 loc_100005335:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+187↑j
__text:0000000100005335                 jmp     loc_1000054BC
__text:000000010000533A ; ---------------------------------------------------------------------------
__text:000000010000533A
__text:000000010000533A loc_10000533A:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+91↑j
__text:000000010000533A                 lea     rax, [rbp+var_30]
__text:000000010000533E                 mov     rcx, [rbp+var_88]
__text:0000000100005345                 mov     rcx, [rcx+10h]
__text:0000000100005349                 mov     rcx, [rcx+10h]
__text:000000010000534D                 mov     rcx, [rcx]
__text:0000000100005350                 mov     [rbp+var_B0], rcx
__text:0000000100005357                 mov     rcx, [rbp+var_B0]
__text:000000010000535E                 mov     [rbp+var_20], rax
__text:0000000100005362                 mov     [rbp+var_28], 0FFFFFFFFFFFFFFFFh
__text:000000010000536A                 mov     rax, [rbp+var_20]
__text:000000010000536E                 mov     rdx, [rbp+var_28]
__text:0000000100005372                 mov     [rbp+var_10], rax
__text:0000000100005376                 mov     [rbp+var_18], rdx
__text:000000010000537A                 mov     rax, [rbp+var_10]
__text:000000010000537E                 mov     qword ptr [rax], 0
__text:0000000100005385                 mov     rax, [rbp+var_30]
__text:0000000100005389                 mov     [rbp+var_D8], rcx
__text:0000000100005390                 mov     [rbp+var_E0], rax
__text:0000000100005397                 lea     rax, [rbp+var_B8]
__text:000000010000539E                 mov     rcx, [rbp+var_E0]
__text:00000001000053A5                 mov     [rbp+var_B8], rcx
__text:00000001000053AC                 mov     [rbp+var_38], rax
__text:00000001000053B0                 mov     rax, [rbp+var_D8]
__text:00000001000053B7                 cmp     rax, 0
__text:00000001000053BD                 jz      loc_10000542E
__text:00000001000053C3                 mov     rax, [rbp+var_B0]
__text:00000001000053CA                 test    byte ptr [rax+18h], 1
__text:00000001000053CE                 jnz     loc_10000542E
__text:00000001000053D4                 mov     rax, [rbp+var_88]
__text:00000001000053DB                 mov     rax, [rax+10h]
__text:00000001000053DF                 mov     [rbp+var_88], rax
__text:00000001000053E6                 mov     rax, [rbp+var_88]
__text:00000001000053ED                 mov     byte ptr [rax+18h], 1
__text:00000001000053F1                 mov     rax, [rbp+var_88]
__text:00000001000053F8                 mov     rax, [rax+10h]
__text:00000001000053FC                 mov     [rbp+var_88], rax
__text:0000000100005403                 mov     rax, [rbp+var_88]
__text:000000010000540A                 cmp     rax, [rbp+var_80]
__text:000000010000540E                 setz    cl
__text:0000000100005411                 mov     rax, [rbp+var_88]
__text:0000000100005418                 and     cl, 1
__text:000000010000541B                 mov     [rax+18h], cl
__text:000000010000541E                 mov     rax, [rbp+var_B0]
__text:0000000100005425                 mov     byte ptr [rax+18h], 1
__text:0000000100005429                 jmp     loc_1000054B7
__text:000000010000542E ; ---------------------------------------------------------------------------
__text:000000010000542E
__text:000000010000542E loc_10000542E:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+29D↑j
__text:000000010000542E                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+2AE↑j
__text:000000010000542E                 mov     rax, [rbp+var_88]
__text:0000000100005435                 mov     [rbp+var_40], rax
__text:0000000100005439                 mov     rax, [rbp+var_40]
__text:000000010000543D                 mov     rcx, [rbp+var_40]
__text:0000000100005441                 mov     rcx, [rcx+10h]
__text:0000000100005445                 cmp     rax, [rcx]
__text:0000000100005448                 jnz     loc_10000546C
__text:000000010000544E                 mov     rax, [rbp+var_88]
__text:0000000100005455                 mov     rax, [rax+10h]
__text:0000000100005459                 mov     [rbp+var_88], rax
__text:0000000100005460                 mov     rdi, [rbp+var_88]
__text:0000000100005467                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:000000010000546C
__text:000000010000546C loc_10000546C:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+328↑j
__text:000000010000546C                 mov     rax, [rbp+var_88]
__text:0000000100005473                 mov     rax, [rax+10h]
__text:0000000100005477                 mov     [rbp+var_88], rax
__text:000000010000547E                 mov     rax, [rbp+var_88]
__text:0000000100005485                 mov     byte ptr [rax+18h], 1
__text:0000000100005489                 mov     rax, [rbp+var_88]
__text:0000000100005490                 mov     rax, [rax+10h]
__text:0000000100005494                 mov     [rbp+var_88], rax
__text:000000010000549B                 mov     rax, [rbp+var_88]
__text:00000001000054A2                 mov     byte ptr [rax+18h], 0
__text:00000001000054A6                 mov     rdi, [rbp+var_88]
__text:00000001000054AD                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000054B2                 jmp     loc_1000054C1
__text:00000001000054B7 ; ---------------------------------------------------------------------------
__text:00000001000054B7
__text:00000001000054B7 loc_1000054B7:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+309↑j
__text:00000001000054B7                 jmp     $+5
__text:00000001000054BC ; ---------------------------------------------------------------------------
__text:00000001000054BC
__text:00000001000054BC loc_1000054BC:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100005335↑j
__text:00000001000054BC                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_1000054B7↑j
__text:00000001000054BC                 jmp     loc_100005150
__text:00000001000054C1 ; ---------------------------------------------------------------------------
__text:00000001000054C1
__text:00000001000054C1 loc_1000054C1:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+6E↑j
__text:00000001000054C1                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+210↑j ...
__text:00000001000054C1                 add     rsp, 0E0h
__text:00000001000054C8                 pop     rbp
__text:00000001000054C9                 retn
__text:00000001000054C9 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ endp
__text:00000001000054C9
__text:00000001000054C9 ; ---------------------------------------------------------------------------
__text:00000001000054CA                 align 10h
__text:00000001000054D0
__text:00000001000054D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000054D0
__text:00000001000054D0 ; Attributes: bp-based frame
__text:00000001000054D0
__text:00000001000054D0 ; void std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000054D0 __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ proc near
__text:00000001000054D0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT__ptr↓o
__text:00000001000054D0
__text:00000001000054D0 var_70          = qword ptr -70h
__text:00000001000054D0 var_68          = qword ptr -68h
__text:00000001000054D0 var_60          = qword ptr -60h
__text:00000001000054D0 var_48          = qword ptr -48h
__text:00000001000054D0 var_40          = qword ptr -40h
__text:00000001000054D0 var_38          = qword ptr -38h
__text:00000001000054D0 var_30          = qword ptr -30h
__text:00000001000054D0 var_28          = qword ptr -28h
__text:00000001000054D0 var_20          = qword ptr -20h
__text:00000001000054D0 var_18          = qword ptr -18h
__text:00000001000054D0 var_10          = qword ptr -10h
__text:00000001000054D0 var_8           = qword ptr -8
__text:00000001000054D0
__text:00000001000054D0                 push    rbp
__text:00000001000054D1                 mov     rbp, rsp
__text:00000001000054D4                 lea     rax, [rbp+var_38]
__text:00000001000054D8                 mov     [rbp+var_40], rdi
__text:00000001000054DC                 mov     rdi, [rbp+var_40]
__text:00000001000054E0                 mov     rdi, [rdi+8]
__text:00000001000054E4                 mov     [rbp+var_48], rdi
__text:00000001000054E8                 mov     rdi, [rbp+var_48]
__text:00000001000054EC                 mov     rdi, [rdi]
__text:00000001000054EF                 mov     rcx, [rbp+var_40]
__text:00000001000054F3                 mov     [rcx+8], rdi
__text:00000001000054F7                 mov     rcx, [rbp+var_40]
__text:00000001000054FB                 mov     rcx, [rcx+8]
__text:00000001000054FF                 mov     [rbp+var_28], rax
__text:0000000100005503                 mov     [rbp+var_30], 0FFFFFFFFFFFFFFFFh
__text:000000010000550B                 mov     rax, [rbp+var_28]
__text:000000010000550F                 mov     rdi, [rbp+var_30]
__text:0000000100005513                 mov     [rbp+var_18], rax
__text:0000000100005517                 mov     [rbp+var_20], rdi
__text:000000010000551B                 mov     rax, [rbp+var_18]
__text:000000010000551F                 mov     qword ptr [rax], 0
__text:0000000100005526                 mov     rax, [rbp+var_38]
__text:000000010000552A                 mov     [rbp+var_68], rcx
__text:000000010000552E                 mov     [rbp+var_70], rax
__text:0000000100005532                 lea     rax, [rbp+var_60]
__text:0000000100005536                 mov     rcx, [rbp+var_70]
__text:000000010000553A                 mov     [rbp+var_60], rcx
__text:000000010000553E                 mov     [rbp+var_8], rax
__text:0000000100005542                 mov     rax, [rbp+var_68]
__text:0000000100005546                 cmp     rax, 0
__text:000000010000554C                 jz      loc_100005562
__text:0000000100005552                 mov     rax, [rbp+var_40]
__text:0000000100005556                 mov     rcx, [rbp+var_40]
__text:000000010000555A                 mov     rcx, [rcx+8]
__text:000000010000555E                 mov     [rcx+10h], rax
__text:0000000100005562
__text:0000000100005562 loc_100005562:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+7C↑j
__text:0000000100005562                 mov     rax, [rbp+var_40]
__text:0000000100005566                 mov     rax, [rax+10h]
__text:000000010000556A                 mov     rcx, [rbp+var_48]
__text:000000010000556E                 mov     [rcx+10h], rax
__text:0000000100005572                 mov     rax, [rbp+var_40]
__text:0000000100005576                 mov     [rbp+var_10], rax
__text:000000010000557A                 mov     rax, [rbp+var_10]
__text:000000010000557E                 mov     rcx, [rbp+var_10]
__text:0000000100005582                 mov     rcx, [rcx+10h]
__text:0000000100005586                 cmp     rax, [rcx]
__text:0000000100005589                 jnz     loc_1000055A3
__text:000000010000558F                 mov     rax, [rbp+var_48]
__text:0000000100005593                 mov     rcx, [rbp+var_40]
__text:0000000100005597                 mov     rcx, [rcx+10h]
__text:000000010000559B                 mov     [rcx], rax
__text:000000010000559E                 jmp     loc_1000055B3
__text:00000001000055A3 ; ---------------------------------------------------------------------------
__text:00000001000055A3
__text:00000001000055A3 loc_1000055A3:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+B9↑j
__text:00000001000055A3                 mov     rax, [rbp+var_48]
__text:00000001000055A7                 mov     rcx, [rbp+var_40]
__text:00000001000055AB                 mov     rcx, [rcx+10h]
__text:00000001000055AF                 mov     [rcx+8], rax
__text:00000001000055B3
__text:00000001000055B3 loc_1000055B3:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+CE↑j
__text:00000001000055B3                 mov     rax, [rbp+var_40]
__text:00000001000055B7                 mov     rcx, [rbp+var_48]
__text:00000001000055BB                 mov     [rcx], rax
__text:00000001000055BE                 mov     rax, [rbp+var_48]
__text:00000001000055C2                 mov     rcx, [rbp+var_40]
__text:00000001000055C6                 mov     [rcx+10h], rax
__text:00000001000055CA                 pop     rbp
__text:00000001000055CB                 retn
__text:00000001000055CB __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ endp
__text:00000001000055CB
__text:00000001000055CB ; ---------------------------------------------------------------------------
__text:00000001000055CC                 align 10h
__text:00000001000055D0
__text:00000001000055D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000055D0
__text:00000001000055D0 ; Attributes: bp-based frame
__text:00000001000055D0
__text:00000001000055D0 ; void std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000055D0 __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ proc near
__text:00000001000055D0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT__ptr↓o
__text:00000001000055D0
__text:00000001000055D0 var_70          = qword ptr -70h
__text:00000001000055D0 var_68          = qword ptr -68h
__text:00000001000055D0 var_60          = qword ptr -60h
__text:00000001000055D0 var_48          = qword ptr -48h
__text:00000001000055D0 var_40          = qword ptr -40h
__text:00000001000055D0 var_38          = qword ptr -38h
__text:00000001000055D0 var_30          = qword ptr -30h
__text:00000001000055D0 var_28          = qword ptr -28h
__text:00000001000055D0 var_20          = qword ptr -20h
__text:00000001000055D0 var_18          = qword ptr -18h
__text:00000001000055D0 var_10          = qword ptr -10h
__text:00000001000055D0 var_8           = qword ptr -8
__text:00000001000055D0
__text:00000001000055D0                 push    rbp
__text:00000001000055D1                 mov     rbp, rsp
__text:00000001000055D4                 lea     rax, [rbp+var_38]
__text:00000001000055D8                 mov     [rbp+var_40], rdi
__text:00000001000055DC                 mov     rdi, [rbp+var_40]
__text:00000001000055E0                 mov     rdi, [rdi]
__text:00000001000055E3                 mov     [rbp+var_48], rdi
__text:00000001000055E7                 mov     rdi, [rbp+var_48]
__text:00000001000055EB                 mov     rdi, [rdi+8]
__text:00000001000055EF                 mov     rcx, [rbp+var_40]
__text:00000001000055F3                 mov     [rcx], rdi
__text:00000001000055F6                 mov     rcx, [rbp+var_40]
__text:00000001000055FA                 mov     rcx, [rcx]
__text:00000001000055FD                 mov     [rbp+var_28], rax
__text:0000000100005601                 mov     [rbp+var_30], 0FFFFFFFFFFFFFFFFh
__text:0000000100005609                 mov     rax, [rbp+var_28]
__text:000000010000560D                 mov     rdi, [rbp+var_30]
__text:0000000100005611                 mov     [rbp+var_18], rax
__text:0000000100005615                 mov     [rbp+var_20], rdi
__text:0000000100005619                 mov     rax, [rbp+var_18]
__text:000000010000561D                 mov     qword ptr [rax], 0
__text:0000000100005624                 mov     rax, [rbp+var_38]
__text:0000000100005628                 mov     [rbp+var_68], rcx
__text:000000010000562C                 mov     [rbp+var_70], rax
__text:0000000100005630                 lea     rax, [rbp+var_60]
__text:0000000100005634                 mov     rcx, [rbp+var_70]
__text:0000000100005638                 mov     [rbp+var_60], rcx
__text:000000010000563C                 mov     [rbp+var_8], rax
__text:0000000100005640                 mov     rax, [rbp+var_68]
__text:0000000100005644                 cmp     rax, 0
__text:000000010000564A                 jz      loc_10000565F
__text:0000000100005650                 mov     rax, [rbp+var_40]
__text:0000000100005654                 mov     rcx, [rbp+var_40]
__text:0000000100005658                 mov     rcx, [rcx]
__text:000000010000565B                 mov     [rcx+10h], rax
__text:000000010000565F
__text:000000010000565F loc_10000565F:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+7A↑j
__text:000000010000565F                 mov     rax, [rbp+var_40]
__text:0000000100005663                 mov     rax, [rax+10h]
__text:0000000100005667                 mov     rcx, [rbp+var_48]
__text:000000010000566B                 mov     [rcx+10h], rax
__text:000000010000566F                 mov     rax, [rbp+var_40]
__text:0000000100005673                 mov     [rbp+var_10], rax
__text:0000000100005677                 mov     rax, [rbp+var_10]
__text:000000010000567B                 mov     rcx, [rbp+var_10]
__text:000000010000567F                 mov     rcx, [rcx+10h]
__text:0000000100005683                 cmp     rax, [rcx]
__text:0000000100005686                 jnz     loc_1000056A0
__text:000000010000568C                 mov     rax, [rbp+var_48]
__text:0000000100005690                 mov     rcx, [rbp+var_40]
__text:0000000100005694                 mov     rcx, [rcx+10h]
__text:0000000100005698                 mov     [rcx], rax
__text:000000010000569B                 jmp     loc_1000056B0
__text:00000001000056A0 ; ---------------------------------------------------------------------------
__text:00000001000056A0
__text:00000001000056A0 loc_1000056A0:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+B6↑j
__text:00000001000056A0                 mov     rax, [rbp+var_48]
__text:00000001000056A4                 mov     rcx, [rbp+var_40]
__text:00000001000056A8                 mov     rcx, [rcx+10h]
__text:00000001000056AC                 mov     [rcx+8], rax
__text:00000001000056B0
__text:00000001000056B0 loc_1000056B0:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+CB↑j
__text:00000001000056B0                 mov     rax, [rbp+var_40]
__text:00000001000056B4                 mov     rcx, [rbp+var_48]
__text:00000001000056B8                 mov     [rcx+8], rax
__text:00000001000056BC                 mov     rax, [rbp+var_48]
__text:00000001000056C0                 mov     rcx, [rbp+var_40]
__text:00000001000056C4                 mov     [rcx+10h], rax
__text:00000001000056C8                 pop     rbp
__text:00000001000056C9                 retn
__text:00000001000056C9 __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ endp
__text:00000001000056C9
__text:00000001000056C9 ; ---------------------------------------------------------------------------
__text:00000001000056CA                 align 10h
__text:00000001000056D0
__text:00000001000056D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000056D0
__text:00000001000056D0 ; Attributes: bp-based frame
__text:00000001000056D0
__text:00000001000056D0 ; std::__1::__tree<std::__1::__value_type<char, char>, std::__1::__map_value_compare<char, std::__1::__value_type<char, char>, std::__1::less<char>, true>, std::__1::allocator<std::__1::__value_type<char, char>>>::__tree(std::__1::__map_value_compare<char, std::__1::__value_type<char, char>, std::__1::less<char>, true> const&)
__text:00000001000056D0 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_ proc near
__text:00000001000056D0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6__ptr↓o
__text:00000001000056D0
__text:00000001000056D0 var_10          = qword ptr -10h
__text:00000001000056D0 var_8           = qword ptr -8
__text:00000001000056D0
__text:00000001000056D0                 push    rbp
__text:00000001000056D1                 mov     rbp, rsp
__text:00000001000056D4                 sub     rsp, 10h
__text:00000001000056D8                 mov     [rbp+var_8], rdi
__text:00000001000056DC                 mov     [rbp+var_10], rsi
__text:00000001000056E0                 mov     rdi, [rbp+var_8]
__text:00000001000056E4                 mov     rsi, [rbp+var_10]
__text:00000001000056E8                 call    j___ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC2ERKS6_ ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::__tree(std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true> const&)
__text:00000001000056ED                 add     rsp, 10h
__text:00000001000056F1                 pop     rbp
__text:00000001000056F2                 retn
__text:00000001000056F2 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC1ERKS6_ endp
__text:00000001000056F2
__text:00000001000056F2 ; ---------------------------------------------------------------------------
__text:00000001000056F3                 align 20h
__text:0000000100005700
__text:0000000100005700 ; =============== S U B R O U T I N E =======================================
__text:0000000100005700
__text:0000000100005700 ; Attributes: bp-based frame
__text:0000000100005700
__text:0000000100005700 ; std::__1::__tree<std::__1::__value_type<char, char>, std::__1::__map_value_compare<char, std::__1::__value_type<char, char>, std::__1::less<char>, true>, std::__1::allocator<std::__1::__value_type<char, char>>>::__tree(std::__1::__map_value_compare<char, std::__1::__value_type<char, char>, std::__1::less<char>, true> const&)
__text:0000000100005700 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC2ERKS6_ proc near
__text:0000000100005700                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC2ERKS6__ptr↓o
__text:0000000100005700
__text:0000000100005700 var_E0          = qword ptr -0E0h
__text:0000000100005700 var_D8          = qword ptr -0D8h
__text:0000000100005700 var_D0          = qword ptr -0D0h
__text:0000000100005700 var_C8          = qword ptr -0C8h
__text:0000000100005700 var_C0          = qword ptr -0C0h
__text:0000000100005700 var_B8          = qword ptr -0B8h
__text:0000000100005700 var_B0          = qword ptr -0B0h
__text:0000000100005700 var_A8          = qword ptr -0A8h
__text:0000000100005700 var_A0          = qword ptr -0A0h
__text:0000000100005700 var_98          = qword ptr -98h
__text:0000000100005700 var_90          = qword ptr -90h
__text:0000000100005700 var_88          = qword ptr -88h
__text:0000000100005700 var_80          = qword ptr -80h
__text:0000000100005700 var_78          = qword ptr -78h
__text:0000000100005700 var_68          = qword ptr -68h
__text:0000000100005700 var_60          = qword ptr -60h
__text:0000000100005700 var_50          = byte ptr -50h
__text:0000000100005700 var_48          = qword ptr -48h
__text:0000000100005700 var_40          = qword ptr -40h
__text:0000000100005700 var_38          = qword ptr -38h
__text:0000000100005700 var_30          = byte ptr -30h
__text:0000000100005700 var_28          = qword ptr -28h
__text:0000000100005700 var_20          = qword ptr -20h
__text:0000000100005700 var_18          = qword ptr -18h
__text:0000000100005700 var_10          = qword ptr -10h
__text:0000000100005700 var_8           = qword ptr -8
__text:0000000100005700
__text:0000000100005700                 push    rbp
__text:0000000100005701                 mov     rbp, rsp
__text:0000000100005704                 sub     rsp, 68h
__text:0000000100005708                 lea     rax, [rbp+var_28]
__text:000000010000570C                 lea     rcx, [rbp+var_30]
__text:0000000100005710                 lea     rdx, [rbp+var_50]
__text:0000000100005714                 lea     r8, [rbp+var_48]
__text:0000000100005718                 mov     [rbp+var_D8], rdi
__text:000000010000571F                 mov     [rbp+var_E0], rsi
__text:0000000100005726                 mov     rsi, [rbp+var_D8]
__text:000000010000572D                 mov     rdi, rsi
__text:0000000100005730                 add     rdi, 8
__text:0000000100005737                 mov     [rbp+var_D0], rdi
__text:000000010000573E                 mov     rdi, [rbp+var_D0]
__text:0000000100005745                 mov     [rbp+var_C8], rdi
__text:000000010000574C                 mov     rdi, [rbp+var_C8]
__text:0000000100005753                 mov     [rbp+var_C0], rdi
__text:000000010000575A                 mov     rdi, [rbp+var_C0]
__text:0000000100005761                 mov     r9, rdi
__text:0000000100005764                 mov     [rbp+var_B8], r9
__text:000000010000576B                 mov     [rbp+var_B0], rdi
__text:0000000100005772                 mov     rdi, [rbp+var_B0]
__text:0000000100005779                 mov     [rbp+var_A8], rdi
__text:0000000100005780                 mov     rdi, [rbp+var_A8]
__text:0000000100005787                 mov     qword ptr [rdi], 0
__text:000000010000578E                 mov     rdi, rsi
__text:0000000100005791                 add     rdi, 10h
__text:0000000100005798                 mov     [rbp+var_60], rdi
__text:000000010000579C                 mov     [rbp+var_68], 0
__text:00000001000057A4                 mov     rdi, [rbp+var_60]
__text:00000001000057A8                 mov     r9, [rbp+var_68]
__text:00000001000057AC                 mov     [rbp+var_40], rdi
__text:00000001000057B0                 mov     [rbp+var_48], r9
__text:00000001000057B4                 mov     rdi, [rbp+var_40]
__text:00000001000057B8                 mov     [rbp+var_38], r8
__text:00000001000057BC                 mov     r8, [rbp+var_38]
__text:00000001000057C0                 mov     r8, [r8]
__text:00000001000057C3                 mov     [rbp+var_8], rdx
__text:00000001000057C7                 mov     [rbp+var_20], rdi
__text:00000001000057CB                 mov     [rbp+var_28], r8
__text:00000001000057CF                 mov     rdx, [rbp+var_20]
__text:00000001000057D3                 mov     [rbp+var_18], rcx
__text:00000001000057D7                 mov     [rbp+var_10], rax
__text:00000001000057DB                 mov     rax, [rbp+var_10]
__text:00000001000057DF                 mov     rax, [rax]
__text:00000001000057E2                 mov     [rdx], rax
__text:00000001000057E5                 mov     [rbp+var_98], rsi
__text:00000001000057EC                 mov     rax, [rbp+var_98]
__text:00000001000057F3                 add     rax, 8
__text:00000001000057F9                 mov     [rbp+var_90], rax
__text:0000000100005800                 mov     rax, [rbp+var_90]
__text:0000000100005807                 mov     [rbp+var_88], rax
__text:000000010000580E                 mov     rax, [rbp+var_88]
__text:0000000100005815                 mov     [rbp+var_80], rax
__text:0000000100005819                 mov     rax, [rbp+var_80]
__text:000000010000581D                 mov     [rbp+var_78], rax
__text:0000000100005821                 mov     rax, [rbp+var_78]
__text:0000000100005825                 mov     [rbp+var_A0], rsi
__text:000000010000582C                 mov     rcx, [rbp+var_A0]
__text:0000000100005833                 mov     [rcx], rax
__text:0000000100005836                 add     rsp, 68h
__text:000000010000583A                 pop     rbp
__text:000000010000583B                 retn
__text:000000010000583B __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEEC2ERKS6_ endp
__text:000000010000583B
__text:000000010000583B ; ---------------------------------------------------------------------------
__text:000000010000583C                 align 20h
__text:0000000100005840
__text:0000000100005840 ; =============== S U B R O U T I N E =======================================
__text:0000000100005840
__text:0000000100005840 ; Attributes: bp-based frame
__text:0000000100005840
__text:0000000100005840 ; std::__1::map<char, char, std::__1::less<char>, std::__1::allocator<std::__1::pair<char const, char>>>::~map()
__text:0000000100005840 __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEED2Ev proc near
__text:0000000100005840                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEED2Ev_ptr↓o
__text:0000000100005840
__text:0000000100005840 var_8           = qword ptr -8
__text:0000000100005840
__text:0000000100005840                 push    rbp
__text:0000000100005841                 mov     rbp, rsp
__text:0000000100005844                 sub     rsp, 10h
__text:0000000100005848                 mov     [rbp+var_8], rdi
__text:000000010000584C                 mov     rdi, [rbp+var_8]
__text:0000000100005850                 call    j___ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::~__tree()
__text:0000000100005855                 add     rsp, 10h
__text:0000000100005859                 pop     rbp
__text:000000010000585A                 retn
__text:000000010000585A __ZNSt3__13mapIccNS_4lessIcEENS_9allocatorINS_4pairIKccEEEEED2Ev endp
__text:000000010000585A
__text:000000010000585A ; ---------------------------------------------------------------------------
__text:000000010000585B                 align 20h
__text:0000000100005860
__text:0000000100005860 ; =============== S U B R O U T I N E =======================================
__text:0000000100005860
__text:0000000100005860 ; Attributes: bp-based frame
__text:0000000100005860
__text:0000000100005860 ; std::__1::__tree<std::__1::__value_type<char, char>, std::__1::__map_value_compare<char, std::__1::__value_type<char, char>, std::__1::less<char>, true>, std::__1::allocator<std::__1::__value_type<char, char>>>::~__tree()
__text:0000000100005860 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev proc near
__text:0000000100005860                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev_ptr↓o
__text:0000000100005860
__text:0000000100005860 var_8           = qword ptr -8
__text:0000000100005860
__text:0000000100005860                 push    rbp
__text:0000000100005861                 mov     rbp, rsp
__text:0000000100005864                 sub     rsp, 10h
__text:0000000100005868                 mov     [rbp+var_8], rdi
__text:000000010000586C                 mov     rdi, [rbp+var_8]
__text:0000000100005870                 call    j___ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED2Ev ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::~__tree()
__text:0000000100005875                 add     rsp, 10h
__text:0000000100005879                 pop     rbp
__text:000000010000587A                 retn
__text:000000010000587A __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED1Ev endp
__text:000000010000587A
__text:000000010000587A ; ---------------------------------------------------------------------------
__text:000000010000587B                 align 20h
__text:0000000100005880
__text:0000000100005880 ; =============== S U B R O U T I N E =======================================
__text:0000000100005880
__text:0000000100005880 ; Attributes: bp-based frame
__text:0000000100005880
__text:0000000100005880 ; std::__1::__tree<std::__1::__value_type<char, char>, std::__1::__map_value_compare<char, std::__1::__value_type<char, char>, std::__1::less<char>, true>, std::__1::allocator<std::__1::__value_type<char, char>>>::~__tree()
__text:0000000100005880 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED2Ev proc near
__text:0000000100005880                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED2Ev_ptr↓o
__text:0000000100005880
__text:0000000100005880 var_38          = qword ptr -38h
__text:0000000100005880 var_30          = qword ptr -30h
__text:0000000100005880 var_28          = qword ptr -28h
__text:0000000100005880 var_20          = qword ptr -20h
__text:0000000100005880 var_18          = qword ptr -18h
__text:0000000100005880 var_10          = qword ptr -10h
__text:0000000100005880 var_8           = qword ptr -8
__text:0000000100005880
__text:0000000100005880                 push    rbp
__text:0000000100005881                 mov     rbp, rsp
__text:0000000100005884                 sub     rsp, 40h
__text:0000000100005888                 mov     [rbp+var_38], rdi
__text:000000010000588C                 mov     rdi, [rbp+var_38]
__text:0000000100005890                 mov     [rbp+var_30], rdi
__text:0000000100005894                 mov     rax, [rbp+var_30]
__text:0000000100005898                 mov     [rbp+var_28], rax
__text:000000010000589C                 mov     rax, [rbp+var_28]
__text:00000001000058A0                 add     rax, 8
__text:00000001000058A6                 mov     [rbp+var_20], rax
__text:00000001000058AA                 mov     rax, [rbp+var_20]
__text:00000001000058AE                 mov     [rbp+var_18], rax
__text:00000001000058B2                 mov     rax, [rbp+var_18]
__text:00000001000058B6                 mov     [rbp+var_10], rax
__text:00000001000058BA                 mov     rax, [rbp+var_10]
__text:00000001000058BE                 mov     [rbp+var_8], rax
__text:00000001000058C2                 mov     rax, [rbp+var_8]
__text:00000001000058C6                 mov     rax, [rax]
__text:00000001000058C9                 mov     rsi, rax
__text:00000001000058CC                 call    j___ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::destroy(std::__1::__tree_node<std::__1::__value_type<char,char>,void *> *)
__text:00000001000058D1                 add     rsp, 40h
__text:00000001000058D5                 pop     rbp
__text:00000001000058D6                 retn
__text:00000001000058D6 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEED2Ev endp
__text:00000001000058D6
__text:00000001000058D6 ; ---------------------------------------------------------------------------
__text:00000001000058D7                 align 20h
__text:00000001000058E0
__text:00000001000058E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000058E0
__text:00000001000058E0 ; Attributes: bp-based frame
__text:00000001000058E0
__text:00000001000058E0 ; std::__1::__tree<std::__1::__value_type<char, char>, std::__1::__map_value_compare<char, std::__1::__value_type<char, char>, std::__1::less<char>, true>, std::__1::allocator<std::__1::__value_type<char, char>>>::destroy(std::__1::__tree_node<std::__1::__value_type<char, char>, void *> *)
__text:00000001000058E0 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE proc near
__text:00000001000058E0                                         ; CODE XREF: std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::destroy(std::__1::__tree_node<std::__1::__value_type<char,char>,void *> *)+C9↓p
__text:00000001000058E0                                         ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::destroy(std::__1::__tree_node<std::__1::__value_type<char,char>,void *> *)+E3↓p
__text:00000001000058E0                                         ; DATA XREF: ...
__text:00000001000058E0
__text:00000001000058E0 var_F8          = qword ptr -0F8h
__text:00000001000058E0 var_F0          = qword ptr -0F0h
__text:00000001000058E0 var_E8          = qword ptr -0E8h
__text:00000001000058E0 var_E0          = qword ptr -0E0h
__text:00000001000058E0 var_D8          = qword ptr -0D8h
__text:00000001000058E0 var_C0          = qword ptr -0C0h
__text:00000001000058E0 var_B8          = qword ptr -0B8h
__text:00000001000058E0 var_B0          = qword ptr -0B0h
__text:00000001000058E0 var_A8          = qword ptr -0A8h
__text:00000001000058E0 var_A0          = qword ptr -0A0h
__text:00000001000058E0 var_98          = qword ptr -98h
__text:00000001000058E0 var_90          = qword ptr -90h
__text:00000001000058E0 var_88          = qword ptr -88h
__text:00000001000058E0 var_80          = qword ptr -80h
__text:00000001000058E0 var_78          = qword ptr -78h
__text:00000001000058E0 var_70          = qword ptr -70h
__text:00000001000058E0 var_68          = qword ptr -68h
__text:00000001000058E0 var_60          = qword ptr -60h
__text:00000001000058E0 var_58          = qword ptr -58h
__text:00000001000058E0 var_40          = qword ptr -40h
__text:00000001000058E0 var_38          = qword ptr -38h
__text:00000001000058E0 var_30          = qword ptr -30h
__text:00000001000058E0 var_28          = qword ptr -28h
__text:00000001000058E0 var_20          = qword ptr -20h
__text:00000001000058E0 var_18          = qword ptr -18h
__text:00000001000058E0 var_10          = qword ptr -10h
__text:00000001000058E0 var_8           = qword ptr -8
__text:00000001000058E0
__text:00000001000058E0                 push    rbp
__text:00000001000058E1                 mov     rbp, rsp
__text:00000001000058E4                 sub     rsp, 100h
__text:00000001000058EB                 lea     rax, [rbp+var_B0]
__text:00000001000058F2                 mov     [rbp+var_B8], rdi
__text:00000001000058F9                 mov     [rbp+var_C0], rsi
__text:0000000100005900                 mov     rsi, [rbp+var_B8]
__text:0000000100005907                 mov     rdi, [rbp+var_C0]
__text:000000010000590E                 mov     [rbp+var_A0], rax
__text:0000000100005915                 mov     [rbp+var_A8], 0FFFFFFFFFFFFFFFFh
__text:0000000100005920                 mov     rax, [rbp+var_A0]
__text:0000000100005927                 mov     rcx, [rbp+var_A8]
__text:000000010000592E                 mov     [rbp+var_90], rax
__text:0000000100005935                 mov     [rbp+var_98], rcx
__text:000000010000593C                 mov     rax, [rbp+var_90]
__text:0000000100005943                 mov     qword ptr [rax], 0
__text:000000010000594A                 mov     rax, [rbp+var_B0]
__text:0000000100005951                 mov     [rbp+var_E8], rdi
__text:0000000100005958                 mov     [rbp+var_F0], rsi
__text:000000010000595F                 mov     [rbp+var_F8], rax
__text:0000000100005966                 lea     rax, [rbp+var_D8]
__text:000000010000596D                 mov     rcx, [rbp+var_F8]
__text:0000000100005974                 mov     [rbp+var_D8], rcx
__text:000000010000597B                 mov     [rbp+var_88], rax
__text:0000000100005982                 mov     rax, [rbp+var_E8]
__text:0000000100005989                 cmp     rax, 0
__text:000000010000598F                 jz      loc_100005A6C
__text:0000000100005995                 mov     rax, [rbp+var_C0]
__text:000000010000599C                 mov     rax, [rax]
__text:000000010000599F                 mov     rdi, [rbp+var_F0]
__text:00000001000059A6                 mov     rsi, rax
__text:00000001000059A9                 call    __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::destroy(std::__1::__tree_node<std::__1::__value_type<char,char>,void *> *)
__text:00000001000059AE                 mov     rax, [rbp+var_C0]
__text:00000001000059B5                 mov     rax, [rax+8]
__text:00000001000059B9                 mov     rdi, [rbp+var_F0]
__text:00000001000059C0                 mov     rsi, rax
__text:00000001000059C3                 call    __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::destroy(std::__1::__tree_node<std::__1::__value_type<char,char>,void *> *)
__text:00000001000059C8                 mov     rax, [rbp+var_F0]
__text:00000001000059CF                 mov     [rbp+var_18], rax
__text:00000001000059D3                 mov     rsi, [rbp+var_18]
__text:00000001000059D7                 add     rsi, 8
__text:00000001000059DE                 mov     [rbp+var_10], rsi
__text:00000001000059E2                 mov     rsi, [rbp+var_10]
__text:00000001000059E6                 mov     [rbp+var_8], rsi
__text:00000001000059EA                 mov     rsi, [rbp+var_8]
__text:00000001000059EE                 mov     [rbp+var_E0], rsi
__text:00000001000059F5                 mov     rsi, [rbp+var_E0]
__text:00000001000059FC                 mov     rdi, [rbp+var_C0]
__text:0000000100005A03                 add     rdi, 19h
__text:0000000100005A0A                 mov     [rbp+var_20], rdi
__text:0000000100005A0E                 mov     rdi, [rbp+var_20]
__text:0000000100005A12                 mov     [rbp+var_38], rsi
__text:0000000100005A16                 mov     [rbp+var_40], rdi
__text:0000000100005A1A                 mov     rsi, [rbp+var_38]
__text:0000000100005A1E                 mov     rdi, [rbp+var_40]
__text:0000000100005A22                 mov     [rbp+var_28], rsi
__text:0000000100005A26                 mov     [rbp+var_30], rdi
__text:0000000100005A2A                 mov     rax, [rbp+var_E0]
__text:0000000100005A31                 mov     rcx, [rbp+var_C0]
__text:0000000100005A38                 mov     [rbp+var_70], rax
__text:0000000100005A3C                 mov     [rbp+var_78], rcx
__text:0000000100005A40                 mov     [rbp+var_80], 1
__text:0000000100005A48                 mov     rax, [rbp+var_70]
__text:0000000100005A4C                 mov     rcx, [rbp+var_78]
__text:0000000100005A50                 mov     rdx, [rbp+var_80]
__text:0000000100005A54                 mov     [rbp+var_58], rax
__text:0000000100005A58                 mov     [rbp+var_60], rcx
__text:0000000100005A5C                 mov     [rbp+var_68], rdx
__text:0000000100005A60                 mov     rax, [rbp+var_60]
__text:0000000100005A64                 mov     rdi, rax        ; void *
__text:0000000100005A67                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100005A6C
__text:0000000100005A6C loc_100005A6C:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<char,char>,std::__1::__map_value_compare<char,std::__1::__value_type<char,char>,std::__1::less<char>,true>,std::__1::allocator<std::__1::__value_type<char,char>>>::destroy(std::__1::__tree_node<std::__1::__value_type<char,char>,void *> *)+AF↑j
__text:0000000100005A6C                 add     rsp, 100h
__text:0000000100005A73                 pop     rbp
__text:0000000100005A74                 retn
__text:0000000100005A74 __ZNSt3__16__treeINS_12__value_typeIccEENS_19__map_value_compareIcS2_NS_4lessIcEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE endp
__text:0000000100005A74
__text:0000000100005A74 __text          ends
__text:0000000100005A74