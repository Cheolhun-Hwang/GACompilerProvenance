__text:00000001000016D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000016D0
__text:00000001000016D0 ; Attributes: bp-based frame
__text:00000001000016D0
__text:00000001000016D0 ; __int64 read(void)
__text:00000001000016D0                 public __Z4readv
__text:00000001000016D0 __Z4readv       proc near               ; CODE XREF: _main+79↓p
__text:00000001000016D0
__text:00000001000016D0 var_14          = dword ptr -14h
__text:00000001000016D0 var_10          = qword ptr -10h
__text:00000001000016D0 var_4           = dword ptr -4
__text:00000001000016D0
__text:00000001000016D0                 push    rbp
__text:00000001000016D1                 mov     rbp, rsp
__text:00000001000016D4                 sub     rsp, 20h
__text:00000001000016D8                 mov     rdi, cs:__ZNSt3__13cinE_ptr
__text:00000001000016DF                 lea     rsi, _k
__text:00000001000016E6                 call    __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi ; std::__1::basic_istream<char,std::__1::char_traits<char>>::operator>>(int &)
__text:00000001000016EB                 lea     rsi, _n
__text:00000001000016F2                 mov     rdi, rax
__text:00000001000016F5                 call    __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi ; std::__1::basic_istream<char,std::__1::char_traits<char>>::operator>>(int &)
__text:00000001000016FA                 lea     rsi, _m
__text:0000000100001701                 mov     rdi, rax
__text:0000000100001704                 call    __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi ; std::__1::basic_istream<char,std::__1::char_traits<char>>::operator>>(int &)
__text:0000000100001709                 mov     [rbp+var_4], 0
__text:0000000100001710                 mov     [rbp+var_10], rax
__text:0000000100001714
__text:0000000100001714 loc_100001714:                          ; CODE XREF: read(void)+84↓j
__text:0000000100001714                 mov     eax, [rbp+var_4]
__text:0000000100001717                 cmp     eax, cs:_k
__text:000000010000171D                 jge     loc_100001759
__text:0000000100001723                 lea     rdi, aD         ; "%d"
__text:000000010000172A                 lea     rax, _r
__text:0000000100001731                 movsxd  rcx, [rbp+var_4]
__text:0000000100001735                 shl     rcx, 2
__text:0000000100001739                 add     rax, rcx
__text:000000010000173C                 mov     rsi, rax
__text:000000010000173F                 mov     al, 0
__text:0000000100001741                 call    _scanf
__text:0000000100001746                 mov     [rbp+var_14], eax
__text:0000000100001749                 mov     eax, [rbp+var_4]
__text:000000010000174C                 add     eax, 1
__text:0000000100001751                 mov     [rbp+var_4], eax
__text:0000000100001754                 jmp     loc_100001714
__text:0000000100001759 ; ---------------------------------------------------------------------------
__text:0000000100001759
__text:0000000100001759 loc_100001759:                          ; CODE XREF: read(void)+4D↑j
__text:0000000100001759                 add     rsp, 20h
__text:000000010000175D                 pop     rbp
__text:000000010000175E                 retn
__text:000000010000175E __Z4readv       endp
__text:000000010000175E
__text:000000010000175E ; ---------------------------------------------------------------------------
__text:000000010000175F                 align 20h
__text:0000000100001760
__text:0000000100001760 ; =============== S U B R O U T I N E =======================================
__text:0000000100001760
__text:0000000100001760 ; Attributes: bp-based frame
__text:0000000100001760
__text:0000000100001760 ; __int64 __fastcall rec(int, int)
__text:0000000100001760                 public __Z3recii
__text:0000000100001760 __Z3recii       proc near               ; CODE XREF: rec(int,int)+B2B↓p
__text:0000000100001760                                         ; rec(int,int)+F8A↓p ...
__text:0000000100001760
__text:0000000100001760 var_5E0         = qword ptr -5E0h
__text:0000000100001760 var_5D8         = qword ptr -5D8h
__text:0000000100001760 var_5D0         = qword ptr -5D0h
__text:0000000100001760 var_5C4         = dword ptr -5C4h
__text:0000000100001760 var_5C0         = qword ptr -5C0h
__text:0000000100001760 var_5B8         = qword ptr -5B8h
__text:0000000100001760 var_5AC         = dword ptr -5ACh
__text:0000000100001760 var_5A8         = qword ptr -5A8h
__text:0000000100001760 var_5A0         = qword ptr -5A0h
__text:0000000100001760 var_598         = qword ptr -598h
__text:0000000100001760 var_590         = dword ptr -590h
__text:0000000100001760 var_58C         = dword ptr -58Ch
__text:0000000100001760 var_588         = qword ptr -588h
__text:0000000100001760 var_580         = dword ptr -580h
__text:0000000100001760 var_57C         = dword ptr -57Ch
__text:0000000100001760 var_578         = byte ptr -578h
__text:0000000100001760 var_570         = dword ptr -570h
__text:0000000100001760 var_56C         = dword ptr -56Ch
__text:0000000100001760 var_568         = byte ptr -568h
__text:0000000100001760 var_560         = dword ptr -560h
__text:0000000100001760 var_55C         = dword ptr -55Ch
__text:0000000100001760 var_558         = byte ptr -558h
__text:0000000100001760 var_550         = dword ptr -550h
__text:0000000100001760 var_54C         = dword ptr -54Ch
__text:0000000100001760 var_548         = byte ptr -548h
__text:0000000100001760 var_540         = dword ptr -540h
__text:0000000100001760 var_539         = byte ptr -539h
__text:0000000100001760 var_538         = dword ptr -538h
__text:0000000100001760 var_531         = byte ptr -531h
__text:0000000100001760 var_530         = qword ptr -530h
__text:0000000100001760 var_528         = qword ptr -528h
__text:0000000100001760 var_520         = qword ptr -520h
__text:0000000100001760 var_518         = dword ptr -518h
__text:0000000100001760 var_514         = dword ptr -514h
__text:0000000100001760 var_510         = dword ptr -510h
__text:0000000100001760 var_50C         = dword ptr -50Ch
__text:0000000100001760 var_508         = dword ptr -508h
__text:0000000100001760 var_501         = byte ptr -501h
__text:0000000100001760 var_500         = qword ptr -500h
__text:0000000100001760 var_4F8         = qword ptr -4F8h
__text:0000000100001760 var_4F0         = qword ptr -4F0h
__text:0000000100001760 var_4E8         = qword ptr -4E8h
__text:0000000100001760 var_4E0         = qword ptr -4E0h
__text:0000000100001760 var_4D8         = qword ptr -4D8h
__text:0000000100001760 var_4D0         = qword ptr -4D0h
__text:0000000100001760 var_4C8         = qword ptr -4C8h
__text:0000000100001760 var_4C0         = qword ptr -4C0h
__text:0000000100001760 var_4B8         = qword ptr -4B8h
__text:0000000100001760 var_4B0         = qword ptr -4B0h
__text:0000000100001760 var_4A8         = qword ptr -4A8h
__text:0000000100001760 var_4A0         = qword ptr -4A0h
__text:0000000100001760 var_498         = qword ptr -498h
__text:0000000100001760 var_490         = qword ptr -490h
__text:0000000100001760 var_488         = qword ptr -488h
__text:0000000100001760 var_480         = qword ptr -480h
__text:0000000100001760 var_478         = qword ptr -478h
__text:0000000100001760 var_470         = qword ptr -470h
__text:0000000100001760 var_468         = qword ptr -468h
__text:0000000100001760 var_460         = qword ptr -460h
__text:0000000100001760 var_458         = qword ptr -458h
__text:0000000100001760 var_440         = qword ptr -440h
__text:0000000100001760 var_438         = qword ptr -438h
__text:0000000100001760 var_430         = qword ptr -430h
__text:0000000100001760 var_428         = qword ptr -428h
__text:0000000100001760 var_420         = qword ptr -420h
__text:0000000100001760 var_408         = qword ptr -408h
__text:0000000100001760 var_400         = qword ptr -400h
__text:0000000100001760 var_3F8         = qword ptr -3F8h
__text:0000000100001760 var_3F0         = qword ptr -3F0h
__text:0000000100001760 var_3E8         = qword ptr -3E8h
__text:0000000100001760 var_3E0         = qword ptr -3E0h
__text:0000000100001760 var_3D8         = qword ptr -3D8h
__text:0000000100001760 var_3D0         = qword ptr -3D0h
__text:0000000100001760 var_3C8         = qword ptr -3C8h
__text:0000000100001760 var_3C0         = dword ptr -3C0h
__text:0000000100001760 var_3BC         = dword ptr -3BCh
__text:0000000100001760 var_3B8         = qword ptr -3B8h
__text:0000000100001760 var_3B0         = qword ptr -3B0h
__text:0000000100001760 var_3A8         = qword ptr -3A8h
__text:0000000100001760 var_3A0         = qword ptr -3A0h
__text:0000000100001760 var_398         = qword ptr -398h
__text:0000000100001760 var_390         = qword ptr -390h
__text:0000000100001760 var_380         = qword ptr -380h
__text:0000000100001760 var_378         = qword ptr -378h
__text:0000000100001760 var_370         = byte ptr -370h
__text:0000000100001760 var_368         = qword ptr -368h
__text:0000000100001760 var_360         = qword ptr -360h
__text:0000000100001760 var_358         = qword ptr -358h
__text:0000000100001760 var_350         = qword ptr -350h
__text:0000000100001760 var_348         = qword ptr -348h
__text:0000000100001760 var_340         = qword ptr -340h
__text:0000000100001760 var_338         = qword ptr -338h
__text:0000000100001760 var_330         = qword ptr -330h
__text:0000000100001760 var_328         = qword ptr -328h
__text:0000000100001760 var_320         = qword ptr -320h
__text:0000000100001760 var_318         = qword ptr -318h
__text:0000000100001760 var_310         = qword ptr -310h
__text:0000000100001760 var_308         = qword ptr -308h
__text:0000000100001760 var_300         = qword ptr -300h
__text:0000000100001760 var_2F8         = qword ptr -2F8h
__text:0000000100001760 var_2F0         = qword ptr -2F0h
__text:0000000100001760 var_2E8         = qword ptr -2E8h
__text:0000000100001760 var_2E0         = qword ptr -2E0h
__text:0000000100001760 var_2D8         = qword ptr -2D8h
__text:0000000100001760 var_2D0         = dword ptr -2D0h
__text:0000000100001760 var_2CC         = dword ptr -2CCh
__text:0000000100001760 var_2C8         = qword ptr -2C8h
__text:0000000100001760 var_2C0         = qword ptr -2C0h
__text:0000000100001760 var_2B8         = qword ptr -2B8h
__text:0000000100001760 var_2B0         = qword ptr -2B0h
__text:0000000100001760 var_2A8         = qword ptr -2A8h
__text:0000000100001760 var_2A0         = qword ptr -2A0h
__text:0000000100001760 var_290         = qword ptr -290h
__text:0000000100001760 var_288         = qword ptr -288h
__text:0000000100001760 var_280         = byte ptr -280h
__text:0000000100001760 var_278         = qword ptr -278h
__text:0000000100001760 var_270         = qword ptr -270h
__text:0000000100001760 var_268         = qword ptr -268h
__text:0000000100001760 var_260         = qword ptr -260h
__text:0000000100001760 var_258         = qword ptr -258h
__text:0000000100001760 var_250         = qword ptr -250h
__text:0000000100001760 var_248         = qword ptr -248h
__text:0000000100001760 var_240         = qword ptr -240h
__text:0000000100001760 var_238         = qword ptr -238h
__text:0000000100001760 var_230         = qword ptr -230h
__text:0000000100001760 var_228         = qword ptr -228h
__text:0000000100001760 var_220         = qword ptr -220h
__text:0000000100001760 var_218         = qword ptr -218h
__text:0000000100001760 var_210         = qword ptr -210h
__text:0000000100001760 var_208         = qword ptr -208h
__text:0000000100001760 var_200         = qword ptr -200h
__text:0000000100001760 var_1F8         = qword ptr -1F8h
__text:0000000100001760 var_1F0         = qword ptr -1F0h
__text:0000000100001760 var_1E8         = qword ptr -1E8h
__text:0000000100001760 var_1E0         = qword ptr -1E0h
__text:0000000100001760 var_1D8         = qword ptr -1D8h
__text:0000000100001760 var_1D0         = qword ptr -1D0h
__text:0000000100001760 var_1C8         = qword ptr -1C8h
__text:0000000100001760 var_1C0         = qword ptr -1C0h
__text:0000000100001760 var_1B8         = qword ptr -1B8h
__text:0000000100001760 var_1B0         = dword ptr -1B0h
__text:0000000100001760 var_1AC         = dword ptr -1ACh
__text:0000000100001760 var_1A8         = qword ptr -1A8h
__text:0000000100001760 var_1A0         = qword ptr -1A0h
__text:0000000100001760 var_198         = qword ptr -198h
__text:0000000100001760 var_190         = qword ptr -190h
__text:0000000100001760 var_188         = qword ptr -188h
__text:0000000100001760 var_180         = qword ptr -180h
__text:0000000100001760 var_170         = qword ptr -170h
__text:0000000100001760 var_168         = qword ptr -168h
__text:0000000100001760 var_160         = byte ptr -160h
__text:0000000100001760 var_158         = qword ptr -158h
__text:0000000100001760 var_150         = qword ptr -150h
__text:0000000100001760 var_148         = qword ptr -148h
__text:0000000100001760 var_140         = qword ptr -140h
__text:0000000100001760 var_138         = qword ptr -138h
__text:0000000100001760 var_130         = qword ptr -130h
__text:0000000100001760 var_128         = qword ptr -128h
__text:0000000100001760 var_120         = dword ptr -120h
__text:0000000100001760 var_11C         = dword ptr -11Ch
__text:0000000100001760 var_118         = qword ptr -118h
__text:0000000100001760 var_110         = qword ptr -110h
__text:0000000100001760 var_108         = qword ptr -108h
__text:0000000100001760 var_100         = qword ptr -100h
__text:0000000100001760 var_F8          = qword ptr -0F8h
__text:0000000100001760 var_F0          = qword ptr -0F0h
__text:0000000100001760 var_E0          = qword ptr -0E0h
__text:0000000100001760 var_D8          = qword ptr -0D8h
__text:0000000100001760 var_D0          = byte ptr -0D0h
__text:0000000100001760 var_C8          = qword ptr -0C8h
__text:0000000100001760 var_C0          = qword ptr -0C0h
__text:0000000100001760 var_B8          = qword ptr -0B8h
__text:0000000100001760 var_B0          = qword ptr -0B0h
__text:0000000100001760 var_A8          = qword ptr -0A8h
__text:0000000100001760 var_A0          = qword ptr -0A0h
__text:0000000100001760 var_98          = qword ptr -98h
__text:0000000100001760 var_90          = qword ptr -90h
__text:0000000100001760 var_88          = qword ptr -88h
__text:0000000100001760 var_80          = qword ptr -80h
__text:0000000100001760 var_78          = qword ptr -78h
__text:0000000100001760 var_70          = qword ptr -70h
__text:0000000100001760 var_68          = qword ptr -68h
__text:0000000100001760 var_60          = qword ptr -60h
__text:0000000100001760 var_58          = qword ptr -58h
__text:0000000100001760 var_50          = qword ptr -50h
__text:0000000100001760 var_48          = qword ptr -48h
__text:0000000100001760 var_40          = qword ptr -40h
__text:0000000100001760 var_38          = qword ptr -38h
__text:0000000100001760 var_30          = qword ptr -30h
__text:0000000100001760 var_28          = qword ptr -28h
__text:0000000100001760 var_20          = qword ptr -20h
__text:0000000100001760 var_18          = qword ptr -18h
__text:0000000100001760 var_10          = qword ptr -10h
__text:0000000100001760 var_8           = qword ptr -8
__text:0000000100001760
__text:0000000100001760                 push    rbp
__text:0000000100001761                 mov     rbp, rsp
__text:0000000100001764                 sub     rsp, 5E0h
__text:000000010000176B                 mov     [rbp+var_508], edi
__text:0000000100001771                 mov     [rbp+var_50C], esi
__text:0000000100001777                 mov     esi, [rbp+var_50C]
__text:000000010000177D                 cmp     esi, cs:_k
__text:0000000100001783                 jnz     loc_100001809
__text:0000000100001789                 mov     [rbp+var_510], 0
__text:0000000100001793
__text:0000000100001793 loc_100001793:                          ; CODE XREF: rec(int,int)+86↓j
__text:0000000100001793                 mov     eax, [rbp+var_510]
__text:0000000100001799                 cmp     eax, cs:_k
__text:000000010000179F                 jge     loc_1000017EB
__text:00000001000017A5                 lea     rdi, aDD        ; "%d %d "
__text:00000001000017AC                 lea     rax, _ans
__text:00000001000017B3                 movsxd  rcx, [rbp+var_510]
__text:00000001000017BA                 mov     esi, [rax+rcx*8]
__text:00000001000017BD                 movsxd  rcx, [rbp+var_510]
__text:00000001000017C4                 mov     edx, [rax+rcx*8+4]
__text:00000001000017C8                 mov     al, 0
__text:00000001000017CA                 call    _printf
__text:00000001000017CF                 mov     [rbp+var_58C], eax
__text:00000001000017D5                 mov     eax, [rbp+var_510]
__text:00000001000017DB                 add     eax, 1
__text:00000001000017E0                 mov     [rbp+var_510], eax
__text:00000001000017E6                 jmp     loc_100001793
__text:00000001000017EB ; ---------------------------------------------------------------------------
__text:00000001000017EB
__text:00000001000017EB loc_1000017EB:                          ; CODE XREF: rec(int,int)+3F↑j
__text:00000001000017EB                 lea     rdi, byte_100008EFA ; char *
__text:00000001000017F2                 call    _puts
__text:00000001000017F7                 mov     [rbp+var_501], 1
__text:00000001000017FE                 mov     [rbp+var_590], eax
__text:0000000100001804                 jmp     loc_10000279C
__text:0000000100001809 ; ---------------------------------------------------------------------------
__text:0000000100001809
__text:0000000100001809 loc_100001809:                          ; CODE XREF: rec(int,int)+23↑j
__text:0000000100001809                 lea     rax, _a
__text:0000000100001810                 mov     [rbp+var_500], rax
__text:0000000100001817                 mov     rax, [rbp+var_500]
__text:000000010000181E                 mov     [rbp+var_4F8], rax
__text:0000000100001825                 mov     rax, [rbp+var_4F8]
__text:000000010000182C                 add     rax, 10h
__text:0000000100001832                 mov     [rbp+var_4F0], rax
__text:0000000100001839                 mov     rax, [rbp+var_4F0]
__text:0000000100001840                 mov     [rbp+var_4E8], rax
__text:0000000100001847                 mov     rax, [rbp+var_4E8]
__text:000000010000184E                 cmp     qword ptr [rax], 0
__text:0000000100001855                 jnz     loc_100001867
__text:000000010000185B                 mov     [rbp+var_501], 0
__text:0000000100001862                 jmp     loc_10000279C
__text:0000000100001867 ; ---------------------------------------------------------------------------
__text:0000000100001867
__text:0000000100001867 loc_100001867:                          ; CODE XREF: rec(int,int)+F5↑j
__text:0000000100001867                 lea     rax, _a
__text:000000010000186E                 lea     rcx, [rbp+var_330]
__text:0000000100001875                 lea     rdx, [rbp+var_320]
__text:000000010000187C                 lea     rsi, [rbp+var_518]
__text:0000000100001883                 lea     rdi, [rbp+var_520]
__text:000000010000188A                 lea     r8, [rbp+var_4D0]
__text:0000000100001891                 lea     r9, [rbp+var_4C0]
__text:0000000100001898                 mov     [rbp+var_4D8], rax
__text:000000010000189F                 mov     r10, [rbp+var_4D8]
__text:00000001000018A6                 mov     [rbp+var_4C8], r10
__text:00000001000018AD                 mov     r10, [rbp+var_4C8]
__text:00000001000018B4                 mov     [rbp+var_4B8], r10
__text:00000001000018BB                 mov     r10, [rbp+var_4B8]
__text:00000001000018C2                 mov     r10, [r10]
__text:00000001000018C5                 mov     [rbp+var_4A8], r9
__text:00000001000018CC                 mov     [rbp+var_4B0], r10
__text:00000001000018D3                 mov     r9, [rbp+var_4A8]
__text:00000001000018DA                 mov     r10, [rbp+var_4B0]
__text:00000001000018E1                 mov     [rbp+var_498], r9
__text:00000001000018E8                 mov     [rbp+var_4A0], r10
__text:00000001000018EF                 mov     r9, [rbp+var_498]
__text:00000001000018F6                 mov     r10, [rbp+var_4A0]
__text:00000001000018FD                 mov     [r9], r10
__text:0000000100001900                 mov     r9, [rbp+var_4C0]
__text:0000000100001907                 mov     [rbp+var_4E0], r9
__text:000000010000190E                 mov     r9, [rbp+var_4E0]
__text:0000000100001915                 mov     [rbp+var_488], r8
__text:000000010000191C                 mov     [rbp+var_490], r9
__text:0000000100001923                 mov     r8, [rbp+var_488]
__text:000000010000192A                 mov     r9, [rbp+var_490]
__text:0000000100001931                 mov     [rbp+var_478], r8
__text:0000000100001938                 mov     [rbp+var_480], r9
__text:000000010000193F                 mov     r8, [rbp+var_478]
__text:0000000100001946                 mov     r9, [rbp+var_480]
__text:000000010000194D                 mov     [r8], r9
__text:0000000100001950                 mov     r8, [rbp+var_4D0]
__text:0000000100001957                 mov     [rbp+var_520], r8
__text:000000010000195E                 mov     [rbp+var_470], rdi
__text:0000000100001965                 mov     rdi, [rbp+var_470]
__text:000000010000196C                 mov     rdi, [rdi]
__text:000000010000196F                 add     rdi, 1Ch
__text:0000000100001976                 mov     [rbp+var_3D8], rsi
__text:000000010000197D                 mov     [rbp+var_3E0], rdi
__text:0000000100001984                 mov     rsi, [rbp+var_3D8]
__text:000000010000198B                 mov     rdi, [rbp+var_3E0]
__text:0000000100001992                 mov     [rbp+var_3C8], rsi
__text:0000000100001999                 mov     [rbp+var_3D0], rdi
__text:00000001000019A0                 mov     rsi, [rbp+var_3C8]
__text:00000001000019A7                 mov     rdi, [rbp+var_3D0]
__text:00000001000019AE                 mov     r11d, [rdi]
__text:00000001000019B1                 mov     [rsi], r11d
__text:00000001000019B4                 mov     rdi, [rbp+var_3D0]
__text:00000001000019BB                 mov     r11d, [rdi+4]
__text:00000001000019BF                 mov     [rsi+4], r11d
__text:00000001000019C3                 mov     [rbp+var_338], rax
__text:00000001000019CA                 mov     rsi, [rbp+var_338]
__text:00000001000019D1                 mov     [rbp+var_328], rsi
__text:00000001000019D8                 mov     rsi, [rbp+var_328]
__text:00000001000019DF                 mov     [rbp+var_318], rsi
__text:00000001000019E6                 mov     rsi, [rbp+var_318]
__text:00000001000019ED                 mov     rsi, [rsi]
__text:00000001000019F0                 mov     [rbp+var_308], rdx
__text:00000001000019F7                 mov     [rbp+var_310], rsi
__text:00000001000019FE                 mov     rdx, [rbp+var_308]
__text:0000000100001A05                 mov     rsi, [rbp+var_310]
__text:0000000100001A0C                 mov     [rbp+var_2F8], rdx
__text:0000000100001A13                 mov     [rbp+var_300], rsi
__text:0000000100001A1A                 mov     rdx, [rbp+var_2F8]
__text:0000000100001A21                 mov     rsi, [rbp+var_300]
__text:0000000100001A28                 mov     [rdx], rsi
__text:0000000100001A2B                 mov     rdx, [rbp+var_320]
__text:0000000100001A32                 mov     [rbp+var_340], rdx
__text:0000000100001A39                 mov     rdx, [rbp+var_340]
__text:0000000100001A40                 mov     [rbp+var_2E8], rcx
__text:0000000100001A47                 mov     [rbp+var_2F0], rdx
__text:0000000100001A4E                 mov     rcx, [rbp+var_2E8]
__text:0000000100001A55                 mov     rdx, [rbp+var_2F0]
__text:0000000100001A5C                 mov     [rbp+var_2D8], rcx
__text:0000000100001A63                 mov     [rbp+var_2E0], rdx
__text:0000000100001A6A                 mov     rcx, [rbp+var_2D8]
__text:0000000100001A71                 mov     rdx, [rbp+var_2E0]
__text:0000000100001A78                 mov     [rcx], rdx
__text:0000000100001A7B                 mov     rcx, [rbp+var_330]
__text:0000000100001A82                 mov     [rbp+var_528], rcx
__text:0000000100001A89                 mov     rcx, [rbp+var_528]
__text:0000000100001A90                 mov     [rbp+var_1F8], rax
__text:0000000100001A97                 mov     [rbp+var_200], rcx
__text:0000000100001A9E                 mov     rdi, [rbp+var_1F8]
__text:0000000100001AA5                 mov     rax, [rbp+var_200]
__text:0000000100001AAC                 mov     [rbp+var_210], rax
__text:0000000100001AB3                 mov     rsi, [rbp+var_210]
__text:0000000100001ABA                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5eraseENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::erase(std::__1::__tree_const_iterator<std::__1::pair<int,int>,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,long>)
__text:0000000100001ABF                 lea     rcx, [rbp+var_1F0]
__text:0000000100001AC6                 mov     [rbp+var_208], rax
__text:0000000100001ACD                 mov     rax, [rbp+var_208]
__text:0000000100001AD4                 mov     [rbp+var_1E0], rcx
__text:0000000100001ADB                 mov     [rbp+var_1E8], rax
__text:0000000100001AE2                 mov     rax, [rbp+var_1E0]
__text:0000000100001AE9                 mov     rcx, [rbp+var_1E8]
__text:0000000100001AF0                 mov     [rbp+var_1D0], rax
__text:0000000100001AF7                 mov     [rbp+var_1D8], rcx
__text:0000000100001AFE                 mov     rax, [rbp+var_1D0]
__text:0000000100001B05                 mov     rcx, [rbp+var_1D8]
__text:0000000100001B0C                 mov     [rax], rcx
__text:0000000100001B0F                 mov     rax, [rbp+var_1F0]
__text:0000000100001B16                 mov     [rbp+var_530], rax
__text:0000000100001B1D
__text:0000000100001B1D loc_100001B1D:                          ; CODE XREF: rec(int,int)+3E6↓j
__text:0000000100001B1D                 lea     rax, _u
__text:0000000100001B24                 movsxd  rcx, [rbp+var_508]
__text:0000000100001B2B                 test    byte ptr [rax+rcx], 1
__text:0000000100001B2F                 jz      loc_100001B4B
__text:0000000100001B35                 mov     eax, [rbp+var_508]
__text:0000000100001B3B                 add     eax, 1
__text:0000000100001B40                 mov     [rbp+var_508], eax
__text:0000000100001B46                 jmp     loc_100001B1D
__text:0000000100001B4B ; ---------------------------------------------------------------------------
__text:0000000100001B4B
__text:0000000100001B4B loc_100001B4B:                          ; CODE XREF: rec(int,int)+3CF↑j
__text:0000000100001B4B                 mov     [rbp+var_531], 0
__text:0000000100001B52                 mov     eax, [rbp+var_508]
__text:0000000100001B58                 mov     [rbp+var_538], eax
__text:0000000100001B5E
__text:0000000100001B5E loc_100001B5E:                          ; CODE XREF: rec(int,int)+F79↓j
__text:0000000100001B5E                 mov     eax, [rbp+var_538]
__text:0000000100001B64                 cmp     eax, cs:_k
__text:0000000100001B6A                 jge     loc_1000026DE
__text:0000000100001B70                 lea     rax, _u
__text:0000000100001B77                 movsxd  rcx, [rbp+var_538]
__text:0000000100001B7E                 test    byte ptr [rax+rcx], 1
__text:0000000100001B82                 jnz     loc_1000026C3
__text:0000000100001B88                 lea     rax, [rbp+var_518]
__text:0000000100001B8F                 lea     rcx, _ans
__text:0000000100001B96                 movsxd  rdx, [rbp+var_538]
__text:0000000100001B9D                 shl     rdx, 3
__text:0000000100001BA1                 add     rcx, rdx
__text:0000000100001BA4                 mov     [rbp+var_1C0], rcx
__text:0000000100001BAB                 mov     [rbp+var_1C8], rax
__text:0000000100001BB2                 mov     rax, [rbp+var_1C0]
__text:0000000100001BB9                 mov     rcx, [rbp+var_1C8]
__text:0000000100001BC0                 mov     esi, [rcx]
__text:0000000100001BC2                 mov     [rax], esi
__text:0000000100001BC4                 mov     rcx, [rbp+var_1C8]
__text:0000000100001BCB                 mov     esi, [rcx+4]
__text:0000000100001BCE                 mov     [rax+4], esi
__text:0000000100001BD1                 cmp     [rbp+var_518], 0
__text:0000000100001BDB                 jz      loc_100001C08
__text:0000000100001BE1                 lea     rax, _ans
__text:0000000100001BE8                 lea     rcx, _r
__text:0000000100001BEF                 movsxd  rdx, [rbp+var_538]
__text:0000000100001BF6                 mov     esi, [rcx+rdx*4]
__text:0000000100001BF9                 movsxd  rcx, [rbp+var_538]
__text:0000000100001C00                 mov     edi, [rax+rcx*8]
__text:0000000100001C03                 add     edi, esi
__text:0000000100001C05                 mov     [rax+rcx*8], edi
__text:0000000100001C08
__text:0000000100001C08 loc_100001C08:                          ; CODE XREF: rec(int,int)+47B↑j
__text:0000000100001C08                 cmp     [rbp+var_514], 0
__text:0000000100001C12                 jz      loc_100001C41
__text:0000000100001C18                 lea     rax, _ans
__text:0000000100001C1F                 lea     rcx, _r
__text:0000000100001C26                 movsxd  rdx, [rbp+var_538]
__text:0000000100001C2D                 mov     esi, [rcx+rdx*4]
__text:0000000100001C30                 movsxd  rcx, [rbp+var_538]
__text:0000000100001C37                 mov     edi, [rax+rcx*8+4]
__text:0000000100001C3B                 add     edi, esi
__text:0000000100001C3D                 mov     [rax+rcx*8+4], edi
__text:0000000100001C41
__text:0000000100001C41 loc_100001C41:                          ; CODE XREF: rec(int,int)+4B2↑j
__text:0000000100001C41                 lea     rax, _ans
__text:0000000100001C48                 movsxd  rcx, [rbp+var_538]
__text:0000000100001C4F                 mov     edx, [rax+rcx*8]
__text:0000000100001C52                 cmp     edx, cs:_n
__text:0000000100001C58                 jg      loc_100001C7C
__text:0000000100001C5E                 lea     rax, _ans
__text:0000000100001C65                 movsxd  rcx, [rbp+var_538]
__text:0000000100001C6C                 mov     edx, [rax+rcx*8+4]
__text:0000000100001C70                 cmp     edx, cs:_m
__text:0000000100001C76                 jle     loc_100001C81
__text:0000000100001C7C
__text:0000000100001C7C loc_100001C7C:                          ; CODE XREF: rec(int,int)+4F8↑j
__text:0000000100001C7C                 jmp     loc_1000026C8
__text:0000000100001C81 ; ---------------------------------------------------------------------------
__text:0000000100001C81
__text:0000000100001C81 loc_100001C81:                          ; CODE XREF: rec(int,int)+516↑j
__text:0000000100001C81                 mov     [rbp+var_539], 1
__text:0000000100001C88                 mov     [rbp+var_540], 0
__text:0000000100001C92
__text:0000000100001C92 loc_100001C92:                          ; CODE XREF: rec(int,int)+6BD↓j
__text:0000000100001C92                 lea     rax, _h
__text:0000000100001C99                 mov     ecx, [rbp+var_540]
__text:0000000100001C9F                 mov     [rbp+var_1B8], rax
__text:0000000100001CA6                 mov     rax, [rbp+var_1B8]
__text:0000000100001CAD                 mov     rdx, [rax+8]
__text:0000000100001CB1                 mov     rax, [rax]
__text:0000000100001CB4                 sub     rdx, rax
__text:0000000100001CB7                 sar     rdx, 2
__text:0000000100001CBB                 mov     esi, edx
__text:0000000100001CBD                 cmp     ecx, esi
__text:0000000100001CBF                 jge     loc_100001E22
__text:0000000100001CC5                 movsd   xmm0, cs:qword_100008D40
__text:0000000100001CCD                 lea     rax, _r
__text:0000000100001CD4                 lea     rcx, _h
__text:0000000100001CDB                 lea     rdx, _ans
__text:0000000100001CE2                 movsxd  rsi, [rbp+var_538]
__text:0000000100001CE9                 mov     edi, [rdx+rsi*8]
__text:0000000100001CEC                 movsxd  rsi, [rbp+var_540]
__text:0000000100001CF3                 mov     [rbp+var_128], rcx
__text:0000000100001CFA                 mov     [rbp+var_130], rsi
__text:0000000100001D01                 mov     rsi, [rbp+var_128]
__text:0000000100001D08                 mov     r8, [rbp+var_130]
__text:0000000100001D0F                 mov     rsi, [rsi]
__text:0000000100001D12                 movsxd  rsi, dword ptr [rsi+r8*4]
__text:0000000100001D16                 sub     edi, [rdx+rsi*8]
__text:0000000100001D19                 cvtsi2sd xmm1, edi
__text:0000000100001D1D                 movsxd  rsi, [rbp+var_538]
__text:0000000100001D24                 mov     edi, [rdx+rsi*8]
__text:0000000100001D27                 movsxd  rsi, [rbp+var_540]
__text:0000000100001D2E                 mov     [rbp+var_38], rcx
__text:0000000100001D32                 mov     [rbp+var_40], rsi
__text:0000000100001D36                 mov     rsi, [rbp+var_38]
__text:0000000100001D3A                 mov     r8, [rbp+var_40]
__text:0000000100001D3E                 mov     rsi, [rsi]
__text:0000000100001D41                 movsxd  rsi, dword ptr [rsi+r8*4]
__text:0000000100001D45                 sub     edi, [rdx+rsi*8]
__text:0000000100001D48                 cvtsi2sd xmm2, edi
__text:0000000100001D4C                 mulsd   xmm1, xmm2
__text:0000000100001D50                 movsxd  rsi, [rbp+var_538]
__text:0000000100001D57                 mov     edi, [rdx+rsi*8+4]
__text:0000000100001D5B                 movsxd  rsi, [rbp+var_540]
__text:0000000100001D62                 mov     [rbp+var_8], rcx
__text:0000000100001D66                 mov     [rbp+var_10], rsi
__text:0000000100001D6A                 mov     rsi, [rbp+var_8]
__text:0000000100001D6E                 mov     r8, [rbp+var_10]
__text:0000000100001D72                 mov     rsi, [rsi]
__text:0000000100001D75                 movsxd  rsi, dword ptr [rsi+r8*4]
__text:0000000100001D79                 sub     edi, [rdx+rsi*8+4]
__text:0000000100001D7D                 cvtsi2sd xmm2, edi
__text:0000000100001D81                 movsxd  rsi, [rbp+var_538]
__text:0000000100001D88                 mov     edi, [rdx+rsi*8+4]
__text:0000000100001D8C                 movsxd  rsi, [rbp+var_540]
__text:0000000100001D93                 mov     [rbp+var_18], rcx
__text:0000000100001D97                 mov     [rbp+var_20], rsi
__text:0000000100001D9B                 mov     rsi, [rbp+var_18]
__text:0000000100001D9F                 mov     r8, [rbp+var_20]
__text:0000000100001DA3                 mov     rsi, [rsi]
__text:0000000100001DA6                 movsxd  rsi, dword ptr [rsi+r8*4]
__text:0000000100001DAA                 sub     edi, [rdx+rsi*8+4]
__text:0000000100001DAE                 cvtsi2sd xmm3, edi
__text:0000000100001DB2                 mulsd   xmm2, xmm3
__text:0000000100001DB6                 addsd   xmm1, xmm2
__text:0000000100001DBA                 sqrtsd  xmm1, xmm1
__text:0000000100001DBE                 movsxd  rdx, [rbp+var_538]
__text:0000000100001DC5                 mov     edi, [rax+rdx*4]
__text:0000000100001DC8                 movsxd  rdx, [rbp+var_540]
__text:0000000100001DCF                 mov     [rbp+var_28], rcx
__text:0000000100001DD3                 mov     [rbp+var_30], rdx
__text:0000000100001DD7                 mov     rcx, [rbp+var_28]
__text:0000000100001DDB                 mov     rdx, [rbp+var_30]
__text:0000000100001DDF                 mov     rcx, [rcx]
__text:0000000100001DE2                 movsxd  rcx, dword ptr [rcx+rdx*4]
__text:0000000100001DE6                 add     edi, [rax+rcx*4]
__text:0000000100001DE9                 cvtsi2sd xmm2, edi
__text:0000000100001DED                 subsd   xmm2, xmm0
__text:0000000100001DF1                 ucomisd xmm2, xmm1
__text:0000000100001DF5                 jbe     loc_100001E07
__text:0000000100001DFB                 mov     [rbp+var_539], 0
__text:0000000100001E02                 jmp     loc_100001E22
__text:0000000100001E07 ; ---------------------------------------------------------------------------
__text:0000000100001E07
__text:0000000100001E07 loc_100001E07:                          ; CODE XREF: rec(int,int)+695↑j
__text:0000000100001E07                 jmp     $+5
__text:0000000100001E0C ; ---------------------------------------------------------------------------
__text:0000000100001E0C
__text:0000000100001E0C loc_100001E0C:                          ; CODE XREF: rec(int,int):loc_100001E07↑j
__text:0000000100001E0C                 mov     eax, [rbp+var_540]
__text:0000000100001E12                 add     eax, 1
__text:0000000100001E17                 mov     [rbp+var_540], eax
__text:0000000100001E1D                 jmp     loc_100001C92
__text:0000000100001E22 ; ---------------------------------------------------------------------------
__text:0000000100001E22
__text:0000000100001E22 loc_100001E22:                          ; CODE XREF: rec(int,int)+55F↑j
__text:0000000100001E22                                         ; rec(int,int)+6A2↑j
__text:0000000100001E22                 test    [rbp+var_539], 1
__text:0000000100001E29                 jnz     loc_100001E34
__text:0000000100001E2F                 jmp     loc_1000026C8
__text:0000000100001E34 ; ---------------------------------------------------------------------------
__text:0000000100001E34
__text:0000000100001E34 loc_100001E34:                          ; CODE XREF: rec(int,int)+6C9↑j
__text:0000000100001E34                 lea     rax, [rbp+var_538]
__text:0000000100001E3B                 lea     rcx, _h
__text:0000000100001E42                 mov     [rbp+var_531], 1
__text:0000000100001E49                 mov     [rbp+var_98], rcx
__text:0000000100001E50                 mov     [rbp+var_A0], rax
__text:0000000100001E57                 mov     rax, [rbp+var_98]
__text:0000000100001E5E                 mov     rcx, [rax+8]
__text:0000000100001E62                 mov     rdx, rax
__text:0000000100001E65                 mov     [rbp+var_90], rdx
__text:0000000100001E6C                 mov     rdx, [rbp+var_90]
__text:0000000100001E73                 add     rdx, 10h
__text:0000000100001E7A                 mov     [rbp+var_88], rdx
__text:0000000100001E81                 mov     rdx, [rbp+var_88]
__text:0000000100001E88                 mov     [rbp+var_80], rdx
__text:0000000100001E8C                 mov     rdx, [rbp+var_80]
__text:0000000100001E90                 cmp     rcx, [rdx]
__text:0000000100001E93                 mov     [rbp+var_598], rax
__text:0000000100001E9A                 jz      loc_100001F3A
__text:0000000100001EA0                 mov     rax, [rbp+var_598]
__text:0000000100001EA7                 mov     [rbp+var_78], rax
__text:0000000100001EAB                 mov     rax, [rbp+var_78]
__text:0000000100001EAF                 add     rax, 10h
__text:0000000100001EB5                 mov     [rbp+var_70], rax
__text:0000000100001EB9                 mov     rax, [rbp+var_70]
__text:0000000100001EBD                 mov     [rbp+var_68], rax
__text:0000000100001EC1                 mov     rax, [rbp+var_68]
__text:0000000100001EC5                 mov     rcx, [rbp+var_598]
__text:0000000100001ECC                 mov     rdx, [rcx+8]
__text:0000000100001ED0                 mov     [rbp+var_48], rdx
__text:0000000100001ED4                 mov     rdx, [rbp+var_48]
__text:0000000100001ED8                 mov     rsi, [rbp+var_A0]
__text:0000000100001EDF                 mov     [rbp+var_50], rax
__text:0000000100001EE3                 mov     [rbp+var_58], rdx
__text:0000000100001EE7                 mov     [rbp+var_60], rsi
__text:0000000100001EEB                 mov     rax, [rbp+var_58]
__text:0000000100001EEF                 cmp     rax, 0
__text:0000000100001EF5                 mov     [rbp+var_5A0], rax
__text:0000000100001EFC                 jz      loc_100001F1F
__text:0000000100001F02                 mov     rax, [rbp+var_5A0]
__text:0000000100001F09                 mov     rcx, [rbp+var_60]
__text:0000000100001F0D                 mov     edx, [rcx]
__text:0000000100001F0F                 mov     rcx, [rbp+var_5A0]
__text:0000000100001F16                 mov     [rcx], edx
__text:0000000100001F18                 mov     [rbp+var_5A8], rax
__text:0000000100001F1F
__text:0000000100001F1F loc_100001F1F:                          ; CODE XREF: rec(int,int)+79C↑j
__text:0000000100001F1F                 mov     rax, [rbp+var_598]
__text:0000000100001F26                 mov     rcx, [rax+8]
__text:0000000100001F2A                 add     rcx, 4
__text:0000000100001F31                 mov     [rax+8], rcx
__text:0000000100001F35                 jmp     loc_100001F4D
__text:0000000100001F3A ; ---------------------------------------------------------------------------
__text:0000000100001F3A
__text:0000000100001F3A loc_100001F3A:                          ; CODE XREF: rec(int,int)+73A↑j
__text:0000000100001F3A                 mov     rsi, [rbp+var_A0]
__text:0000000100001F41                 mov     rdi, [rbp+var_598]
__text:0000000100001F48                 call    j___ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT_ ; std::__1::vector<int,std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)
__text:0000000100001F4D
__text:0000000100001F4D loc_100001F4D:                          ; CODE XREF: rec(int,int)+7D5↑j
__text:0000000100001F4D                 lea     rax, [rbp+var_D0]
__text:0000000100001F54                 lea     rcx, [rbp+var_550]
__text:0000000100001F5B                 lea     rdx, [rbp+var_54C]
__text:0000000100001F62                 lea     rsi, _r
__text:0000000100001F69                 lea     rdi, _ans
__text:0000000100001F70                 lea     r8, _u
__text:0000000100001F77                 movsxd  r9, [rbp+var_538]
__text:0000000100001F7E                 mov     byte ptr [r8+r9], 1
__text:0000000100001F83                 movsxd  r8, [rbp+var_538]
__text:0000000100001F8A                 mov     r10d, [rdi+r8*8]
__text:0000000100001F8E                 movsxd  r8, [rbp+var_538]
__text:0000000100001F95                 add     r10d, [rsi+r8*4]
__text:0000000100001F99                 mov     [rbp+var_54C], 0
__text:0000000100001FA3                 movsxd  r8, [rbp+var_538]
__text:0000000100001FAA                 mov     r11d, [rdi+r8*8+4]
__text:0000000100001FAF                 movsxd  rdi, [rbp+var_538]
__text:0000000100001FB6                 sub     r11d, [rsi+rdi*4]
__text:0000000100001FBA                 mov     [rbp+var_550], r11d
__text:0000000100001FC1                 mov     [rbp+var_D8], rdx
__text:0000000100001FC8                 mov     [rbp+var_E0], rcx
__text:0000000100001FCF                 mov     rcx, [rbp+var_D8]
__text:0000000100001FD6                 mov     rdx, [rbp+var_E0]
__text:0000000100001FDD                 mov     [rbp+var_C0], rcx
__text:0000000100001FE4                 mov     [rbp+var_C8], rdx
__text:0000000100001FEB                 mov     rcx, [rbp+var_C0]
__text:0000000100001FF2                 mov     rdx, [rbp+var_C8]
__text:0000000100001FF9                 mov     [rbp+var_A8], rax
__text:0000000100002000                 mov     [rbp+var_B0], rcx
__text:0000000100002007                 mov     [rbp+var_B8], rdx
__text:000000010000200E                 mov     rax, [rbp+var_B0]
__text:0000000100002015                 mov     r11d, [rax]
__text:0000000100002018                 mov     rax, [rbp+var_B8]
__text:000000010000201F                 cmp     r11d, [rax]
__text:0000000100002022                 mov     [rbp+var_5AC], r10d
__text:0000000100002029                 jge     loc_100002042
__text:000000010000202F                 mov     rax, [rbp+var_C8]
__text:0000000100002036                 mov     [rbp+var_5B8], rax
__text:000000010000203D                 jmp     loc_100002050
__text:0000000100002042 ; ---------------------------------------------------------------------------
__text:0000000100002042
__text:0000000100002042 loc_100002042:                          ; CODE XREF: rec(int,int)+8C9↑j
__text:0000000100002042                 mov     rax, [rbp+var_C0]
__text:0000000100002049                 mov     [rbp+var_5B8], rax
__text:0000000100002050
__text:0000000100002050 loc_100002050:                          ; CODE XREF: rec(int,int)+8DD↑j
__text:0000000100002050                 mov     rax, [rbp+var_5B8]
__text:0000000100002057                 lea     rcx, [rbp+var_548]
__text:000000010000205E                 lea     rdx, [rbp+var_120]
__text:0000000100002065                 lea     rsi, [rbp+var_11C]
__text:000000010000206C                 mov     edi, [rax]
__text:000000010000206E                 mov     r8d, [rbp+var_5AC]
__text:0000000100002075                 mov     [rbp+var_11C], r8d
__text:000000010000207C                 mov     [rbp+var_120], edi
__text:0000000100002082                 mov     [rbp+var_108], rcx
__text:0000000100002089                 mov     [rbp+var_110], rsi
__text:0000000100002090                 mov     [rbp+var_118], rdx
__text:0000000100002097                 mov     rax, [rbp+var_108]
__text:000000010000209E                 mov     rdx, [rbp+var_110]
__text:00000001000020A5                 mov     rsi, [rbp+var_118]
__text:00000001000020AC                 mov     [rbp+var_F0], rax
__text:00000001000020B3                 mov     [rbp+var_F8], rdx
__text:00000001000020BA                 mov     [rbp+var_100], rsi
__text:00000001000020C1                 mov     rax, [rbp+var_F0]
__text:00000001000020C8                 mov     rdx, [rbp+var_F8]
__text:00000001000020CF                 mov     edi, [rdx]
__text:00000001000020D1                 mov     [rax], edi
__text:00000001000020D3                 mov     rdx, [rbp+var_100]
__text:00000001000020DA                 mov     edi, [rdx]
__text:00000001000020DC                 mov     [rax+4], edi
__text:00000001000020DF                 mov     rdi, rcx
__text:00000001000020E2                 call    j___Z3addNSt3__14pairIiiEE ; add(std::__1::pair<int,int>)
__text:00000001000020E7                 lea     rax, [rbp+var_160]
__text:00000001000020EE                 lea     rcx, [rbp+var_560]
__text:00000001000020F5                 lea     rdx, [rbp+var_55C]
__text:00000001000020FC                 lea     rsi, _r
__text:0000000100002103                 lea     rdi, _ans
__text:000000010000210A                 mov     [rbp+var_55C], 0
__text:0000000100002114                 movsxd  r9, [rbp+var_538]
__text:000000010000211B                 mov     r8d, [rdi+r9*8]
__text:000000010000211F                 movsxd  rdi, [rbp+var_538]
__text:0000000100002126                 sub     r8d, [rsi+rdi*4]
__text:000000010000212A                 mov     [rbp+var_560], r8d
__text:0000000100002131                 mov     [rbp+var_168], rdx
__text:0000000100002138                 mov     [rbp+var_170], rcx
__text:000000010000213F                 mov     rcx, [rbp+var_168]
__text:0000000100002146                 mov     rdx, [rbp+var_170]
__text:000000010000214D                 mov     [rbp+var_150], rcx
__text:0000000100002154                 mov     [rbp+var_158], rdx
__text:000000010000215B                 mov     rcx, [rbp+var_150]
__text:0000000100002162                 mov     rdx, [rbp+var_158]
__text:0000000100002169                 mov     [rbp+var_138], rax
__text:0000000100002170                 mov     [rbp+var_140], rcx
__text:0000000100002177                 mov     [rbp+var_148], rdx
__text:000000010000217E                 mov     rax, [rbp+var_140]
__text:0000000100002185                 mov     r8d, [rax]
__text:0000000100002188                 mov     rax, [rbp+var_148]
__text:000000010000218F                 cmp     r8d, [rax]
__text:0000000100002192                 jge     loc_1000021AB
__text:0000000100002198                 mov     rax, [rbp+var_158]
__text:000000010000219F                 mov     [rbp+var_5C0], rax
__text:00000001000021A6                 jmp     loc_1000021B9
__text:00000001000021AB ; ---------------------------------------------------------------------------
__text:00000001000021AB
__text:00000001000021AB loc_1000021AB:                          ; CODE XREF: rec(int,int)+A32↑j
__text:00000001000021AB                 mov     rax, [rbp+var_150]
__text:00000001000021B2                 mov     [rbp+var_5C0], rax
__text:00000001000021B9
__text:00000001000021B9 loc_1000021B9:                          ; CODE XREF: rec(int,int)+A46↑j
__text:00000001000021B9                 mov     rax, [rbp+var_5C0]
__text:00000001000021C0                 lea     rcx, [rbp+var_558]
__text:00000001000021C7                 lea     rdx, [rbp+var_1B0]
__text:00000001000021CE                 lea     rsi, [rbp+var_1AC]
__text:00000001000021D5                 lea     rdi, _r
__text:00000001000021DC                 lea     r8, _ans
__text:00000001000021E3                 mov     r9d, [rax]
__text:00000001000021E6                 movsxd  rax, [rbp+var_538]
__text:00000001000021ED                 mov     r10d, [r8+rax*8+4]
__text:00000001000021F2                 movsxd  rax, [rbp+var_538]
__text:00000001000021F9                 add     r10d, [rdi+rax*4]
__text:00000001000021FD                 mov     [rbp+var_1AC], r9d
__text:0000000100002204                 mov     [rbp+var_1B0], r10d
__text:000000010000220B                 mov     [rbp+var_198], rcx
__text:0000000100002212                 mov     [rbp+var_1A0], rsi
__text:0000000100002219                 mov     [rbp+var_1A8], rdx
__text:0000000100002220                 mov     rax, [rbp+var_198]
__text:0000000100002227                 mov     rdx, [rbp+var_1A0]
__text:000000010000222E                 mov     rsi, [rbp+var_1A8]
__text:0000000100002235                 mov     [rbp+var_180], rax
__text:000000010000223C                 mov     [rbp+var_188], rdx
__text:0000000100002243                 mov     [rbp+var_190], rsi
__text:000000010000224A                 mov     rax, [rbp+var_180]
__text:0000000100002251                 mov     rdx, [rbp+var_188]
__text:0000000100002258                 mov     r9d, [rdx]
__text:000000010000225B                 mov     [rax], r9d
__text:000000010000225E                 mov     rdx, [rbp+var_190]
__text:0000000100002265                 mov     r9d, [rdx]
__text:0000000100002268                 mov     [rax+4], r9d
__text:000000010000226C                 mov     rdi, rcx
__text:000000010000226F                 call    j___Z3addNSt3__14pairIiiEE ; add(std::__1::pair<int,int>)
__text:0000000100002274                 mov     edi, [rbp+var_508] ; int
__text:000000010000227A                 mov     r9d, [rbp+var_50C]
__text:0000000100002281                 add     r9d, 1
__text:0000000100002288                 mov     esi, r9d        ; int
__text:000000010000228B                 call    __Z3recii       ; rec(int,int)
__text:0000000100002290                 test    al, 1
__text:0000000100002292                 jnz     loc_10000229D
__text:0000000100002298                 jmp     loc_1000022A9
__text:000000010000229D ; ---------------------------------------------------------------------------
__text:000000010000229D
__text:000000010000229D loc_10000229D:                          ; CODE XREF: rec(int,int)+B32↑j
__text:000000010000229D                 mov     [rbp+var_501], 1
__text:00000001000022A4                 jmp     loc_10000279C
__text:00000001000022A9 ; ---------------------------------------------------------------------------
__text:00000001000022A9
__text:00000001000022A9 loc_1000022A9:                          ; CODE XREF: rec(int,int)+B38↑j
__text:00000001000022A9                 lea     rax, [rbp+var_280]
__text:00000001000022B0                 lea     rcx, [rbp+var_570]
__text:00000001000022B7                 lea     rdx, [rbp+var_56C]
__text:00000001000022BE                 lea     rsi, _r
__text:00000001000022C5                 lea     rdi, _ans
__text:00000001000022CC                 movsxd  r8, [rbp+var_538]
__text:00000001000022D3                 mov     r9d, [rdi+r8*8]
__text:00000001000022D7                 movsxd  r8, [rbp+var_538]
__text:00000001000022DE                 add     r9d, [rsi+r8*4]
__text:00000001000022E2                 mov     [rbp+var_56C], 0
__text:00000001000022EC                 movsxd  r8, [rbp+var_538]
__text:00000001000022F3                 mov     r10d, [rdi+r8*8+4]
__text:00000001000022F8                 movsxd  rdi, [rbp+var_538]
__text:00000001000022FF                 sub     r10d, [rsi+rdi*4]
__text:0000000100002303                 mov     [rbp+var_570], r10d
__text:000000010000230A                 mov     [rbp+var_288], rdx
__text:0000000100002311                 mov     [rbp+var_290], rcx
__text:0000000100002318                 mov     rcx, [rbp+var_288]
__text:000000010000231F                 mov     rdx, [rbp+var_290]
__text:0000000100002326                 mov     [rbp+var_270], rcx
__text:000000010000232D                 mov     [rbp+var_278], rdx
__text:0000000100002334                 mov     rcx, [rbp+var_270]
__text:000000010000233B                 mov     rdx, [rbp+var_278]
__text:0000000100002342                 mov     [rbp+var_258], rax
__text:0000000100002349                 mov     [rbp+var_260], rcx
__text:0000000100002350                 mov     [rbp+var_268], rdx
__text:0000000100002357                 mov     rax, [rbp+var_260]
__text:000000010000235E                 mov     r10d, [rax]
__text:0000000100002361                 mov     rax, [rbp+var_268]
__text:0000000100002368                 cmp     r10d, [rax]
__text:000000010000236B                 mov     [rbp+var_5C4], r9d
__text:0000000100002372                 jge     loc_10000238B
__text:0000000100002378                 mov     rax, [rbp+var_278]
__text:000000010000237F                 mov     [rbp+var_5D0], rax
__text:0000000100002386                 jmp     loc_100002399
__text:000000010000238B ; ---------------------------------------------------------------------------
__text:000000010000238B
__text:000000010000238B loc_10000238B:                          ; CODE XREF: rec(int,int)+C12↑j
__text:000000010000238B                 mov     rax, [rbp+var_270]
__text:0000000100002392                 mov     [rbp+var_5D0], rax
__text:0000000100002399
__text:0000000100002399 loc_100002399:                          ; CODE XREF: rec(int,int)+C26↑j
__text:0000000100002399                 mov     rax, [rbp+var_5D0]
__text:00000001000023A0                 lea     rcx, [rbp+var_568]
__text:00000001000023A7                 lea     rdx, [rbp+var_2D0]
__text:00000001000023AE                 lea     rsi, [rbp+var_2CC]
__text:00000001000023B5                 mov     edi, [rax]
__text:00000001000023B7                 mov     r8d, [rbp+var_5C4]
__text:00000001000023BE                 mov     [rbp+var_2CC], r8d
__text:00000001000023C5                 mov     [rbp+var_2D0], edi
__text:00000001000023CB                 mov     [rbp+var_2B8], rcx
__text:00000001000023D2                 mov     [rbp+var_2C0], rsi
__text:00000001000023D9                 mov     [rbp+var_2C8], rdx
__text:00000001000023E0                 mov     rax, [rbp+var_2B8]
__text:00000001000023E7                 mov     rdx, [rbp+var_2C0]
__text:00000001000023EE                 mov     rsi, [rbp+var_2C8]
__text:00000001000023F5                 mov     [rbp+var_2A0], rax
__text:00000001000023FC                 mov     [rbp+var_2A8], rdx
__text:0000000100002403                 mov     [rbp+var_2B0], rsi
__text:000000010000240A                 mov     rax, [rbp+var_2A0]
__text:0000000100002411                 mov     rdx, [rbp+var_2A8]
__text:0000000100002418                 mov     edi, [rdx]
__text:000000010000241A                 mov     [rax], edi
__text:000000010000241C                 mov     rdx, [rbp+var_2B0]
__text:0000000100002423                 mov     edi, [rdx]
__text:0000000100002425                 mov     [rax+4], edi
__text:0000000100002428                 mov     rdi, rcx
__text:000000010000242B                 call    j___Z3delNSt3__14pairIiiEE ; del(std::__1::pair<int,int>)
__text:0000000100002430                 lea     rax, [rbp+var_370]
__text:0000000100002437                 lea     rcx, [rbp+var_580]
__text:000000010000243E                 lea     rdx, [rbp+var_57C]
__text:0000000100002445                 lea     rsi, _r
__text:000000010000244C                 lea     rdi, _ans
__text:0000000100002453                 mov     [rbp+var_57C], 0
__text:000000010000245D                 movsxd  r9, [rbp+var_538]
__text:0000000100002464                 mov     r8d, [rdi+r9*8]
__text:0000000100002468                 movsxd  rdi, [rbp+var_538]
__text:000000010000246F                 sub     r8d, [rsi+rdi*4]
__text:0000000100002473                 mov     [rbp+var_580], r8d
__text:000000010000247A                 mov     [rbp+var_378], rdx
__text:0000000100002481                 mov     [rbp+var_380], rcx
__text:0000000100002488                 mov     rcx, [rbp+var_378]
__text:000000010000248F                 mov     rdx, [rbp+var_380]
__text:0000000100002496                 mov     [rbp+var_360], rcx
__text:000000010000249D                 mov     [rbp+var_368], rdx
__text:00000001000024A4                 mov     rcx, [rbp+var_360]
__text:00000001000024AB                 mov     rdx, [rbp+var_368]
__text:00000001000024B2                 mov     [rbp+var_348], rax
__text:00000001000024B9                 mov     [rbp+var_350], rcx
__text:00000001000024C0                 mov     [rbp+var_358], rdx
__text:00000001000024C7                 mov     rax, [rbp+var_350]
__text:00000001000024CE                 mov     r8d, [rax]
__text:00000001000024D1                 mov     rax, [rbp+var_358]
__text:00000001000024D8                 cmp     r8d, [rax]
__text:00000001000024DB                 jge     loc_1000024F4
__text:00000001000024E1                 mov     rax, [rbp+var_368]
__text:00000001000024E8                 mov     [rbp+var_5D8], rax
__text:00000001000024EF                 jmp     loc_100002502
__text:00000001000024F4 ; ---------------------------------------------------------------------------
__text:00000001000024F4
__text:00000001000024F4 loc_1000024F4:                          ; CODE XREF: rec(int,int)+D7B↑j
__text:00000001000024F4                 mov     rax, [rbp+var_360]
__text:00000001000024FB                 mov     [rbp+var_5D8], rax
__text:0000000100002502
__text:0000000100002502 loc_100002502:                          ; CODE XREF: rec(int,int)+D8F↑j
__text:0000000100002502                 mov     rax, [rbp+var_5D8]
__text:0000000100002509                 lea     rcx, [rbp+var_578]
__text:0000000100002510                 lea     rdx, [rbp+var_3C0]
__text:0000000100002517                 lea     rsi, [rbp+var_3BC]
__text:000000010000251E                 lea     rdi, _r
__text:0000000100002525                 lea     r8, _ans
__text:000000010000252C                 mov     r9d, [rax]
__text:000000010000252F                 movsxd  rax, [rbp+var_538]
__text:0000000100002536                 mov     r10d, [r8+rax*8+4]
__text:000000010000253B                 movsxd  rax, [rbp+var_538]
__text:0000000100002542                 add     r10d, [rdi+rax*4]
__text:0000000100002546                 mov     [rbp+var_3BC], r9d
__text:000000010000254D                 mov     [rbp+var_3C0], r10d
__text:0000000100002554                 mov     [rbp+var_3A8], rcx
__text:000000010000255B                 mov     [rbp+var_3B0], rsi
__text:0000000100002562                 mov     [rbp+var_3B8], rdx
__text:0000000100002569                 mov     rax, [rbp+var_3A8]
__text:0000000100002570                 mov     rdx, [rbp+var_3B0]
__text:0000000100002577                 mov     rsi, [rbp+var_3B8]
__text:000000010000257E                 mov     [rbp+var_390], rax
__text:0000000100002585                 mov     [rbp+var_398], rdx
__text:000000010000258C                 mov     [rbp+var_3A0], rsi
__text:0000000100002593                 mov     rax, [rbp+var_390]
__text:000000010000259A                 mov     rdx, [rbp+var_398]
__text:00000001000025A1                 mov     r9d, [rdx]
__text:00000001000025A4                 mov     [rax], r9d
__text:00000001000025A7                 mov     rdx, [rbp+var_3A0]
__text:00000001000025AE                 mov     r9d, [rdx]
__text:00000001000025B1                 mov     [rax+4], r9d
__text:00000001000025B5                 mov     rdi, rcx
__text:00000001000025B8                 call    j___Z3delNSt3__14pairIiiEE ; del(std::__1::pair<int,int>)
__text:00000001000025BD                 lea     rax, _h
__text:00000001000025C4                 mov     [rbp+var_468], rax
__text:00000001000025CB                 mov     rax, [rbp+var_468]
__text:00000001000025D2                 mov     rcx, [rax+8]
__text:00000001000025D6                 add     rcx, 0FFFFFFFFFFFFFFFCh
__text:00000001000025DD                 mov     [rbp+var_458], rax
__text:00000001000025E4                 mov     [rbp+var_460], rcx
__text:00000001000025EB                 mov     rax, [rbp+var_458]
__text:00000001000025F2                 mov     rcx, [rbp+var_460]
__text:00000001000025F9                 mov     [rbp+var_438], rax
__text:0000000100002600                 mov     [rbp+var_440], rcx
__text:0000000100002607                 mov     rax, [rbp+var_438]
__text:000000010000260E                 mov     [rbp+var_5E0], rax
__text:0000000100002615
__text:0000000100002615 loc_100002615:                          ; CODE XREF: rec(int,int)+F4C↓j
__text:0000000100002615                 mov     rax, [rbp+var_440]
__text:000000010000261C                 mov     rcx, [rbp+var_5E0]
__text:0000000100002623                 cmp     rax, [rcx+8]
__text:0000000100002627                 jz      loc_1000026B1
__text:000000010000262D                 mov     rax, [rbp+var_5E0]
__text:0000000100002634                 mov     [rbp+var_430], rax
__text:000000010000263B                 mov     rcx, [rbp+var_430]
__text:0000000100002642                 add     rcx, 10h
__text:0000000100002649                 mov     [rbp+var_428], rcx
__text:0000000100002650                 mov     rcx, [rbp+var_428]
__text:0000000100002657                 mov     [rbp+var_420], rcx
__text:000000010000265E                 mov     rcx, [rbp+var_420]
__text:0000000100002665                 mov     rdx, [rax+8]
__text:0000000100002669                 add     rdx, 0FFFFFFFFFFFFFFFCh
__text:0000000100002670                 mov     [rax+8], rdx
__text:0000000100002674                 mov     [rbp+var_3E8], rdx
__text:000000010000267B                 mov     rdx, [rbp+var_3E8]
__text:0000000100002682                 mov     [rbp+var_400], rcx
__text:0000000100002689                 mov     [rbp+var_408], rdx
__text:0000000100002690                 mov     rcx, [rbp+var_400]
__text:0000000100002697                 mov     rdx, [rbp+var_408]
__text:000000010000269E                 mov     [rbp+var_3F0], rcx
__text:00000001000026A5                 mov     [rbp+var_3F8], rdx
__text:00000001000026AC                 jmp     loc_100002615
__text:00000001000026B1 ; ---------------------------------------------------------------------------
__text:00000001000026B1
__text:00000001000026B1 loc_1000026B1:                          ; CODE XREF: rec(int,int)+EC7↑j
__text:00000001000026B1                 lea     rax, _u
__text:00000001000026B8                 movsxd  rcx, [rbp+var_538]
__text:00000001000026BF                 mov     byte ptr [rax+rcx], 0
__text:00000001000026C3
__text:00000001000026C3 loc_1000026C3:                          ; CODE XREF: rec(int,int)+422↑j
__text:00000001000026C3                 jmp     $+5
__text:00000001000026C8 ; ---------------------------------------------------------------------------
__text:00000001000026C8
__text:00000001000026C8 loc_1000026C8:                          ; CODE XREF: rec(int,int):loc_100001C7C↑j
__text:00000001000026C8                                         ; rec(int,int)+6CF↑j ...
__text:00000001000026C8                 mov     eax, [rbp+var_538]
__text:00000001000026CE                 add     eax, 1
__text:00000001000026D3                 mov     [rbp+var_538], eax
__text:00000001000026D9                 jmp     loc_100001B5E
__text:00000001000026DE ; ---------------------------------------------------------------------------
__text:00000001000026DE
__text:00000001000026DE loc_1000026DE:                          ; CODE XREF: rec(int,int)+40A↑j
__text:00000001000026DE                 mov     edi, [rbp+var_508] ; int
__text:00000001000026E4                 mov     esi, [rbp+var_50C] ; int
__text:00000001000026EA                 call    __Z3recii       ; rec(int,int)
__text:00000001000026EF                 test    al, 1
__text:00000001000026F1                 jnz     loc_1000026FC
__text:00000001000026F7                 jmp     loc_100002708
__text:00000001000026FC ; ---------------------------------------------------------------------------
__text:00000001000026FC
__text:00000001000026FC loc_1000026FC:                          ; CODE XREF: rec(int,int)+F91↑j
__text:00000001000026FC                 mov     [rbp+var_501], 1
__text:0000000100002703                 jmp     loc_10000279C
__text:0000000100002708 ; ---------------------------------------------------------------------------
__text:0000000100002708
__text:0000000100002708 loc_100002708:                          ; CODE XREF: rec(int,int)+F97↑j
__text:0000000100002708                 lea     rax, [rbp+var_518]
__text:000000010000270F                 lea     rcx, _a
__text:0000000100002716                 mov     [rbp+var_240], rcx
__text:000000010000271D                 mov     [rbp+var_248], rax
__text:0000000100002724                 mov     rdi, [rbp+var_240]
__text:000000010000272B                 mov     rsi, [rbp+var_248]
__text:0000000100002732                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__insert_multiERKS2_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)
__text:0000000100002737                 lea     rcx, [rbp+var_238]
__text:000000010000273E                 mov     [rbp+var_250], rax
__text:0000000100002745                 mov     rax, [rbp+var_250]
__text:000000010000274C                 mov     [rbp+var_228], rcx
__text:0000000100002753                 mov     [rbp+var_230], rax
__text:000000010000275A                 mov     rax, [rbp+var_228]
__text:0000000100002761                 mov     rcx, [rbp+var_230]
__text:0000000100002768                 mov     [rbp+var_218], rax
__text:000000010000276F                 mov     [rbp+var_220], rcx
__text:0000000100002776                 mov     rax, [rbp+var_218]
__text:000000010000277D                 mov     rcx, [rbp+var_220]
__text:0000000100002784                 mov     [rax], rcx
__text:0000000100002787                 mov     rax, [rbp+var_238]
__text:000000010000278E                 mov     [rbp+var_588], rax
__text:0000000100002795                 mov     [rbp+var_501], 0
__text:000000010000279C
__text:000000010000279C loc_10000279C:                          ; CODE XREF: rec(int,int)+A4↑j
__text:000000010000279C                                         ; rec(int,int)+102↑j ...
__text:000000010000279C                 mov     al, [rbp+var_501]
__text:00000001000027A2                 and     al, 1
__text:00000001000027A4                 movzx   eax, al
__text:00000001000027A7                 add     rsp, 5E0h
__text:00000001000027AE                 pop     rbp
__text:00000001000027AF                 retn
__text:00000001000027AF __Z3recii       endp
__text:00000001000027AF
__text:00000001000027B0
__text:00000001000027B0 ; =============== S U B R O U T I N E =======================================
__text:00000001000027B0
__text:00000001000027B0 ; Attributes: bp-based frame
__text:00000001000027B0
__text:00000001000027B0 ; __int64 solve(void)
__text:00000001000027B0                 public __Z5solvev
__text:00000001000027B0 __Z5solvev      proc near               ; CODE XREF: _main+98↓p
__text:00000001000027B0
__text:00000001000027B0 var_139         = byte ptr -139h
__text:00000001000027B0 var_138         = qword ptr -138h
__text:00000001000027B0 var_130         = qword ptr -130h
__text:00000001000027B0 var_128         = qword ptr -128h
__text:00000001000027B0 var_120         = qword ptr -120h
__text:00000001000027B0 var_118         = byte ptr -118h
__text:00000001000027B0 var_110         = dword ptr -110h
__text:00000001000027B0 var_10C         = dword ptr -10Ch
__text:00000001000027B0 var_108         = qword ptr -108h
__text:00000001000027B0 var_100         = qword ptr -100h
__text:00000001000027B0 var_F8          = qword ptr -0F8h
__text:00000001000027B0 var_F0          = qword ptr -0F0h
__text:00000001000027B0 var_E8          = qword ptr -0E8h
__text:00000001000027B0 var_E0          = qword ptr -0E0h
__text:00000001000027B0 var_D8          = qword ptr -0D8h
__text:00000001000027B0 var_D0          = qword ptr -0D0h
__text:00000001000027B0 var_C8          = qword ptr -0C8h
__text:00000001000027B0 var_C0          = qword ptr -0C0h
__text:00000001000027B0 var_B8          = qword ptr -0B8h
__text:00000001000027B0 var_B0          = qword ptr -0B0h
__text:00000001000027B0 var_A8          = qword ptr -0A8h
__text:00000001000027B0 var_A0          = qword ptr -0A0h
__text:00000001000027B0 var_88          = qword ptr -88h
__text:00000001000027B0 var_80          = qword ptr -80h
__text:00000001000027B0 var_68          = qword ptr -68h
__text:00000001000027B0 var_60          = qword ptr -60h
__text:00000001000027B0 var_58          = qword ptr -58h
__text:00000001000027B0 var_50          = qword ptr -50h
__text:00000001000027B0 var_48          = qword ptr -48h
__text:00000001000027B0 var_30          = qword ptr -30h
__text:00000001000027B0 var_28          = qword ptr -28h
__text:00000001000027B0 var_20          = qword ptr -20h
__text:00000001000027B0 var_18          = qword ptr -18h
__text:00000001000027B0 var_10          = qword ptr -10h
__text:00000001000027B0 var_8           = qword ptr -8
__text:00000001000027B0
__text:00000001000027B0                 push    rbp
__text:00000001000027B1                 mov     rbp, rsp
__text:00000001000027B4                 sub     rsp, 140h
__text:00000001000027BB                 lea     rax, [rbp+var_118]
__text:00000001000027C2                 lea     rcx, _a
__text:00000001000027C9                 lea     rdx, [rbp+var_110]
__text:00000001000027D0                 lea     rsi, [rbp+var_10C]
__text:00000001000027D7                 mov     [rbp+var_10C], 0
__text:00000001000027E1                 mov     [rbp+var_110], 0
__text:00000001000027EB                 mov     [rbp+var_F8], rax
__text:00000001000027F2                 mov     [rbp+var_100], rsi
__text:00000001000027F9                 mov     [rbp+var_108], rdx
__text:0000000100002800                 mov     rdx, [rbp+var_F8]
__text:0000000100002807                 mov     rsi, [rbp+var_100]
__text:000000010000280E                 mov     rdi, [rbp+var_108]
__text:0000000100002815                 mov     [rbp+var_E0], rdx
__text:000000010000281C                 mov     [rbp+var_E8], rsi
__text:0000000100002823                 mov     [rbp+var_F0], rdi
__text:000000010000282A                 mov     rdx, [rbp+var_E0]
__text:0000000100002831                 mov     rsi, [rbp+var_E8]
__text:0000000100002838                 mov     r8d, [rsi]
__text:000000010000283B                 mov     [rdx], r8d
__text:000000010000283E                 mov     rsi, [rbp+var_F0]
__text:0000000100002845                 mov     r8d, [rsi]
__text:0000000100002848                 mov     [rdx+4], r8d
__text:000000010000284C                 mov     [rbp+var_C8], rcx
__text:0000000100002853                 mov     [rbp+var_D0], rax
__text:000000010000285A                 mov     rdi, [rbp+var_C8]
__text:0000000100002861                 mov     rsi, [rbp+var_D0]
__text:0000000100002868                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__insert_multiERKS2_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)
__text:000000010000286D                 lea     rcx, _h
__text:0000000100002874                 lea     rdi, _u         ; void *
__text:000000010000287B                 mov     esi, 0          ; int
__text:0000000100002880                 mov     rdx, 44Ch       ; size_t
__text:000000010000288A                 lea     r9, [rbp+var_C0]
__text:0000000100002891                 mov     [rbp+var_D8], rax
__text:0000000100002898                 mov     rax, [rbp+var_D8]
__text:000000010000289F                 mov     [rbp+var_B0], r9
__text:00000001000028A6                 mov     [rbp+var_B8], rax
__text:00000001000028AD                 mov     rax, [rbp+var_B0]
__text:00000001000028B4                 mov     r9, [rbp+var_B8]
__text:00000001000028BB                 mov     [rbp+var_A0], rax
__text:00000001000028C2                 mov     [rbp+var_A8], r9
__text:00000001000028C9                 mov     rax, [rbp+var_A0]
__text:00000001000028D0                 mov     r9, [rbp+var_A8]
__text:00000001000028D7                 mov     [rax], r9
__text:00000001000028DA                 mov     rax, [rbp+var_C0]
__text:00000001000028E1                 mov     [rbp+var_120], rax
__text:00000001000028E8                 mov     [rbp+var_128], rcx
__text:00000001000028EF                 call    _memset
__text:00000001000028F4                 mov     rax, [rbp+var_128]
__text:00000001000028FB                 mov     [rbp+var_88], rax
__text:0000000100002902                 mov     rcx, [rbp+var_88]
__text:0000000100002909                 mov     rdx, rcx
__text:000000010000290C                 mov     [rbp+var_80], rdx
__text:0000000100002910                 mov     rdx, [rbp+var_80]
__text:0000000100002914                 mov     rdi, [rdx]
__text:0000000100002917                 mov     [rbp+var_60], rdx
__text:000000010000291B                 mov     [rbp+var_68], rdi
__text:000000010000291F                 mov     rdx, [rbp+var_60]
__text:0000000100002923                 mov     [rbp+var_130], rcx
__text:000000010000292A                 mov     [rbp+var_138], rdx
__text:0000000100002931
__text:0000000100002931 loc_100002931:                          ; CODE XREF: solve(void)+1EB↓j
__text:0000000100002931                 mov     rax, [rbp+var_68]
__text:0000000100002935                 mov     rcx, [rbp+var_138]
__text:000000010000293C                 cmp     rax, [rcx+8]
__text:0000000100002940                 jz      loc_1000029A0
__text:0000000100002946                 mov     rax, [rbp+var_138]
__text:000000010000294D                 mov     [rbp+var_58], rax
__text:0000000100002951                 mov     rcx, [rbp+var_58]
__text:0000000100002955                 add     rcx, 10h
__text:000000010000295C                 mov     [rbp+var_50], rcx
__text:0000000100002960                 mov     rcx, [rbp+var_50]
__text:0000000100002964                 mov     [rbp+var_48], rcx
__text:0000000100002968                 mov     rcx, [rbp+var_48]
__text:000000010000296C                 mov     rdx, [rax+8]
__text:0000000100002970                 add     rdx, 0FFFFFFFFFFFFFFFCh
__text:0000000100002977                 mov     [rax+8], rdx
__text:000000010000297B                 mov     [rbp+var_10], rdx
__text:000000010000297F                 mov     rdx, [rbp+var_10]
__text:0000000100002983                 mov     [rbp+var_28], rcx
__text:0000000100002987                 mov     [rbp+var_30], rdx
__text:000000010000298B                 mov     rcx, [rbp+var_28]
__text:000000010000298F                 mov     rdx, [rbp+var_30]
__text:0000000100002993                 mov     [rbp+var_18], rcx
__text:0000000100002997                 mov     [rbp+var_20], rdx
__text:000000010000299B                 jmp     loc_100002931
__text:00000001000029A0 ; ---------------------------------------------------------------------------
__text:00000001000029A0
__text:00000001000029A0 loc_1000029A0:                          ; CODE XREF: solve(void)+190↑j
__text:00000001000029A0                 mov     eax, 0
__text:00000001000029A5                 mov     rcx, [rbp+var_130]
__text:00000001000029AC                 mov     [rbp+var_8], rcx
__text:00000001000029B0                 mov     edi, eax        ; int
__text:00000001000029B2                 mov     esi, eax        ; int
__text:00000001000029B4                 call    __Z3recii       ; rec(int,int)
__text:00000001000029B9                 mov     [rbp+var_139], al
__text:00000001000029BF                 add     rsp, 140h
__text:00000001000029C6                 pop     rbp
__text:00000001000029C7                 retn
__text:00000001000029C7 __Z5solvev      endp
__text:00000001000029C7
__text:00000001000029C7 ; ---------------------------------------------------------------------------
__text:00000001000029C8                 align 10h
__text:00000001000029D0
__text:00000001000029D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000029D0
__text:00000001000029D0 ; Attributes: bp-based frame
__text:00000001000029D0
__text:00000001000029D0 ; int __cdecl main(int argc, const char **argv, const char **envp)
__text:00000001000029D0                 public _main
__text:00000001000029D0 _main           proc near
__text:00000001000029D0
__text:00000001000029D0 var_34          = dword ptr -34h
__text:00000001000029D0 var_30          = qword ptr -30h
__text:00000001000029D0 var_28          = qword ptr -28h
__text:00000001000029D0 var_1C          = dword ptr -1Ch
__text:00000001000029D0 var_18          = dword ptr -18h
__text:00000001000029D0 var_14          = dword ptr -14h
__text:00000001000029D0 var_10          = qword ptr -10h
__text:00000001000029D0 var_8           = qword ptr -8
__text:00000001000029D0
__text:00000001000029D0                 push    rbp
__text:00000001000029D1                 mov     rbp, rsp
__text:00000001000029D4                 sub     rsp, 40h
__text:00000001000029D8                 mov     rdi, cs:__ZNSt3__13cinE_ptr
__text:00000001000029DF                 lea     rsi, [rbp+var_18]
__text:00000001000029E3                 mov     [rbp+var_14], 0
__text:00000001000029EA                 call    __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi ; std::__1::basic_istream<char,std::__1::char_traits<char>>::operator>>(int &)
__text:00000001000029EF                 mov     [rbp+var_1C], 0
__text:00000001000029F6                 mov     [rbp+var_28], rax
__text:00000001000029FA
__text:00000001000029FA loc_1000029FA:                          ; CODE XREF: _main+A8↓j
__text:00000001000029FA                 mov     eax, [rbp+var_1C]
__text:00000001000029FD                 cmp     eax, [rbp+var_18]
__text:0000000100002A00                 jge     loc_100002A7D
__text:0000000100002A06                 mov     rdi, cs:__ZNSt3__14cerrE_ptr
__text:0000000100002A0D                 mov     esi, [rbp+var_1C]
__text:0000000100002A10                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
__text:0000000100002A15                 lea     rsi, asc_100008EFB ; "/"
__text:0000000100002A1C                 mov     rdi, rax
__text:0000000100002A1F                 call    j___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)
__text:0000000100002A24                 mov     esi, [rbp+var_18]
__text:0000000100002A27                 mov     rdi, rax
__text:0000000100002A2A                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
__text:0000000100002A2F                 lea     rdi, __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ ; std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)
__text:0000000100002A36                 mov     [rbp+var_8], rax
__text:0000000100002A3A                 mov     [rbp+var_10], rdi
__text:0000000100002A3E                 mov     rdi, [rbp+var_8]
__text:0000000100002A42                 call    [rbp+var_10]
__text:0000000100002A45                 mov     [rbp+var_30], rax
__text:0000000100002A49                 call    __Z4readv       ; read(void)
__text:0000000100002A4E                 lea     rdi, aCaseD     ; "Case #%d: "
__text:0000000100002A55                 mov     esi, [rbp+var_1C]
__text:0000000100002A58                 add     esi, 1
__text:0000000100002A5E                 mov     al, 0
__text:0000000100002A60                 call    _printf
__text:0000000100002A65                 mov     [rbp+var_34], eax
__text:0000000100002A68                 call    __Z5solvev      ; solve(void)
__text:0000000100002A6D                 mov     eax, [rbp+var_1C]
__text:0000000100002A70                 add     eax, 1
__text:0000000100002A75                 mov     [rbp+var_1C], eax
__text:0000000100002A78                 jmp     loc_1000029FA
__text:0000000100002A7D ; ---------------------------------------------------------------------------
__text:0000000100002A7D
__text:0000000100002A7D loc_100002A7D:                          ; CODE XREF: _main+30↑j
__text:0000000100002A7D                 mov     eax, 0
__text:0000000100002A82                 add     rsp, 40h
__text:0000000100002A86                 pop     rbp
__text:0000000100002A87                 retn
__text:0000000100002A87 _main           endp
__text:0000000100002A87
__text:0000000100002A87 ; ---------------------------------------------------------------------------
__text:0000000100002A88                 align 10h
__text:0000000100002A90
__text:0000000100002A90 ; =============== S U B R O U T I N E =======================================
__text:0000000100002A90
__text:0000000100002A90 ; Attributes: bp-based frame
__text:0000000100002A90
__text:0000000100002A90 ___cxx_global_var_init proc near        ; CODE XREF: `global constructor keyed to'_a+4↓p
__text:0000000100002A90
__text:0000000100002A90 var_2C          = dword ptr -2Ch
__text:0000000100002A90 var_28          = byte ptr -28h
__text:0000000100002A90 var_20          = qword ptr -20h
__text:0000000100002A90 var_18          = qword ptr -18h
__text:0000000100002A90 var_10          = qword ptr -10h
__text:0000000100002A90 var_8           = qword ptr -8
__text:0000000100002A90
__text:0000000100002A90                 push    rbp
__text:0000000100002A91                 mov     rbp, rsp
__text:0000000100002A94                 sub     rsp, 30h
__text:0000000100002A98                 lea     rax, [rbp+var_28]
__text:0000000100002A9C                 lea     rcx, _a
__text:0000000100002AA3                 mov     [rbp+var_18], rcx
__text:0000000100002AA7                 mov     [rbp+var_20], rax
__text:0000000100002AAB                 mov     rax, [rbp+var_18]
__text:0000000100002AAF                 mov     rcx, [rbp+var_20]
__text:0000000100002AB3                 mov     [rbp+var_8], rax
__text:0000000100002AB7                 mov     [rbp+var_10], rcx
__text:0000000100002ABB                 mov     rdi, [rbp+var_8]
__text:0000000100002ABF                 mov     rsi, [rbp+var_10]
__text:0000000100002AC3                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__tree(std::__1::less<std::__1::pair<int,int>> const&)
__text:0000000100002AC8                 mov     rax, cs:__ZNSt3__18multisetINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev_ptr
__text:0000000100002ACF                 lea     rcx, _a
__text:0000000100002AD6                 lea     rdx, __mh_execute_header ; lpdso_handle
__text:0000000100002ADD                 mov     rdi, rax        ; lpfunc
__text:0000000100002AE0                 mov     rsi, rcx        ; obj
__text:0000000100002AE3                 call    ___cxa_atexit
__text:0000000100002AE8                 mov     [rbp+var_2C], eax
__text:0000000100002AEB                 add     rsp, 30h
__text:0000000100002AEF                 pop     rbp
__text:0000000100002AF0                 retn
__text:0000000100002AF0 ___cxx_global_var_init endp
__text:0000000100002AF0
__text:0000000100002AF0 ; ---------------------------------------------------------------------------
__text:0000000100002AF1                 align 20h
__text:0000000100002B00
__text:0000000100002B00 ; =============== S U B R O U T I N E =======================================
__text:0000000100002B00
__text:0000000100002B00 ; Attributes: bp-based frame
__text:0000000100002B00
__text:0000000100002B00 ___cxx_global_var_init1 proc near       ; CODE XREF: `global constructor keyed to'_a+9↓p
__text:0000000100002B00
__text:0000000100002B00 var_18          = qword ptr -18h
__text:0000000100002B00 var_10          = qword ptr -10h
__text:0000000100002B00 var_8           = qword ptr -8
__text:0000000100002B00
__text:0000000100002B00                 push    rbp
__text:0000000100002B01                 mov     rbp, rsp
__text:0000000100002B04                 lea     rax, _ans
__text:0000000100002B0B                 mov     [rbp+var_18], rax
__text:0000000100002B0F
__text:0000000100002B0F loc_100002B0F:                          ; CODE XREF: ___cxx_global_var_init1+4B↓j
__text:0000000100002B0F                 mov     rax, [rbp+var_18]
__text:0000000100002B13                 lea     rcx, _ans
__text:0000000100002B1A                 add     rcx, 2260h
__text:0000000100002B21                 mov     [rbp+var_10], rax
__text:0000000100002B25                 mov     rdx, [rbp+var_10]
__text:0000000100002B29                 mov     [rbp+var_8], rdx
__text:0000000100002B2D                 mov     rdx, [rbp+var_8]
__text:0000000100002B31                 mov     dword ptr [rdx], 0
__text:0000000100002B37                 mov     dword ptr [rdx+4], 0
__text:0000000100002B3E                 add     rax, 8
__text:0000000100002B44                 cmp     rax, rcx
__text:0000000100002B47                 mov     [rbp+var_18], rax
__text:0000000100002B4B                 jnz     loc_100002B0F
__text:0000000100002B51                 pop     rbp
__text:0000000100002B52                 retn
__text:0000000100002B52 ___cxx_global_var_init1 endp
__text:0000000100002B52
__text:0000000100002B52 ; ---------------------------------------------------------------------------
__text:0000000100002B53                 align 20h
__text:0000000100002B60
__text:0000000100002B60 ; =============== S U B R O U T I N E =======================================
__text:0000000100002B60
__text:0000000100002B60 ; Attributes: bp-based frame
__text:0000000100002B60
__text:0000000100002B60 ___cxx_global_var_init2 proc near       ; CODE XREF: `global constructor keyed to'_a+E↓p
__text:0000000100002B60
__text:0000000100002B60 var_13C         = dword ptr -13Ch
__text:0000000100002B60 lpdso_handle    = qword ptr -138h
__text:0000000100002B60 var_130         = qword ptr -130h
__text:0000000100002B60 var_128         = qword ptr -128h
__text:0000000100002B60 var_120         = qword ptr -120h
__text:0000000100002B60 var_118         = qword ptr -118h
__text:0000000100002B60 var_110         = qword ptr -110h
__text:0000000100002B60 var_108         = qword ptr -108h
__text:0000000100002B60 var_100         = qword ptr -100h
__text:0000000100002B60 var_F8          = qword ptr -0F8h
__text:0000000100002B60 var_F0          = qword ptr -0F0h
__text:0000000100002B60 var_E8          = qword ptr -0E8h
__text:0000000100002B60 var_E0          = qword ptr -0E0h
__text:0000000100002B60 var_D8          = qword ptr -0D8h
__text:0000000100002B60 var_D0          = qword ptr -0D0h
__text:0000000100002B60 var_C8          = qword ptr -0C8h
__text:0000000100002B60 var_C0          = qword ptr -0C0h
__text:0000000100002B60 var_B8          = qword ptr -0B8h
__text:0000000100002B60 var_B0          = qword ptr -0B0h
__text:0000000100002B60 var_A8          = qword ptr -0A8h
__text:0000000100002B60 var_A0          = qword ptr -0A0h
__text:0000000100002B60 var_98          = qword ptr -98h
__text:0000000100002B60 var_90          = qword ptr -90h
__text:0000000100002B60 var_88          = qword ptr -88h
__text:0000000100002B60 var_80          = qword ptr -80h
__text:0000000100002B60 var_78          = qword ptr -78h
__text:0000000100002B60 var_70          = qword ptr -70h
__text:0000000100002B60 var_68          = qword ptr -68h
__text:0000000100002B60 var_60          = qword ptr -60h
__text:0000000100002B60 var_58          = qword ptr -58h
__text:0000000100002B60 var_50          = qword ptr -50h
__text:0000000100002B60 var_48          = qword ptr -48h
__text:0000000100002B60 var_40          = qword ptr -40h
__text:0000000100002B60 var_38          = qword ptr -38h
__text:0000000100002B60 var_30          = qword ptr -30h
__text:0000000100002B60 var_28          = qword ptr -28h
__text:0000000100002B60
__text:0000000100002B60                 push    rbp
__text:0000000100002B61                 mov     rbp, rsp
__text:0000000100002B64                 push    r15
__text:0000000100002B66                 push    r14
__text:0000000100002B68                 push    r12
__text:0000000100002B6A                 push    rbx
__text:0000000100002B6B                 sub     rsp, 120h
__text:0000000100002B72                 mov     rax, cs:__ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev_ptr
__text:0000000100002B79                 lea     rcx, _h
__text:0000000100002B80                 mov     rdx, rcx
__text:0000000100002B83                 lea     rsi, __mh_execute_header
__text:0000000100002B8A                 lea     rdi, [rbp+var_D0]
__text:0000000100002B91                 lea     r8, [rbp+var_E8]
__text:0000000100002B98                 lea     r9, [rbp+var_120]
__text:0000000100002B9F                 lea     r10, [rbp+var_A8]
__text:0000000100002BA6                 lea     r11, [rbp+var_118]
__text:0000000100002BAD                 lea     rbx, [rbp+var_78]
__text:0000000100002BB1                 lea     r14, [rbp+var_110]
__text:0000000100002BB8                 lea     r15, [rbp+var_48]
__text:0000000100002BBC                 mov     [rbp+var_130], rcx
__text:0000000100002BC3                 mov     rcx, [rbp+var_130]
__text:0000000100002BCA                 mov     [rbp+var_128], rcx
__text:0000000100002BD1                 mov     rcx, [rbp+var_128]
__text:0000000100002BD8                 mov     [rbp+var_108], rcx
__text:0000000100002BDF                 mov     rcx, [rbp+var_108]
__text:0000000100002BE6                 mov     r12, rcx
__text:0000000100002BE9                 mov     [rbp+var_100], r12
__text:0000000100002BF0                 mov     [rbp+var_38], r15
__text:0000000100002BF4                 mov     [rbp+var_40], 0FFFFFFFFFFFFFFFFh
__text:0000000100002BFC                 mov     r15, [rbp+var_38]
__text:0000000100002C00                 mov     r12, [rbp+var_40]
__text:0000000100002C04                 mov     [rbp+var_28], r15
__text:0000000100002C08                 mov     [rbp+var_30], r12
__text:0000000100002C0C                 mov     r15, [rbp+var_28]
__text:0000000100002C10                 mov     qword ptr [r15], 0
__text:0000000100002C17                 mov     r15, [rbp+var_48]
__text:0000000100002C1B                 mov     [rbp+var_110], r15
__text:0000000100002C22                 mov     [rbp+var_50], r14
__text:0000000100002C26                 mov     qword ptr [rcx], 0
__text:0000000100002C2D                 mov     [rbp+var_68], rbx
__text:0000000100002C31                 mov     [rbp+var_70], 0FFFFFFFFFFFFFFFFh
__text:0000000100002C39                 mov     rbx, [rbp+var_68]
__text:0000000100002C3D                 mov     r14, [rbp+var_70]
__text:0000000100002C41                 mov     [rbp+var_58], rbx
__text:0000000100002C45                 mov     [rbp+var_60], r14
__text:0000000100002C49                 mov     rbx, [rbp+var_58]
__text:0000000100002C4D                 mov     qword ptr [rbx], 0
__text:0000000100002C54                 mov     rbx, [rbp+var_78]
__text:0000000100002C58                 mov     [rbp+var_118], rbx
__text:0000000100002C5F                 mov     [rbp+var_80], r11
__text:0000000100002C63                 mov     qword ptr [rcx+8], 0
__text:0000000100002C6B                 add     rcx, 10h
__text:0000000100002C72                 mov     [rbp+var_98], r10
__text:0000000100002C79                 mov     [rbp+var_A0], 0FFFFFFFFFFFFFFFFh
__text:0000000100002C84                 mov     r10, [rbp+var_98]
__text:0000000100002C8B                 mov     r11, [rbp+var_A0]
__text:0000000100002C92                 mov     [rbp+var_88], r10
__text:0000000100002C99                 mov     [rbp+var_90], r11
__text:0000000100002CA0                 mov     r10, [rbp+var_88]
__text:0000000100002CA7                 mov     qword ptr [r10], 0
__text:0000000100002CAE                 mov     r10, [rbp+var_A8]
__text:0000000100002CB5                 mov     [rbp+var_120], r10
__text:0000000100002CBC                 mov     [rbp+var_B0], r9
__text:0000000100002CC3                 mov     [rbp+var_F0], rcx
__text:0000000100002CCA                 mov     [rbp+var_F8], 0
__text:0000000100002CD5                 mov     rcx, [rbp+var_F0]
__text:0000000100002CDC                 mov     r9, [rbp+var_F8]
__text:0000000100002CE3                 mov     [rbp+var_E0], rcx
__text:0000000100002CEA                 mov     [rbp+var_E8], r9
__text:0000000100002CF1                 mov     rcx, [rbp+var_E0]
__text:0000000100002CF8                 mov     [rbp+var_D8], r8
__text:0000000100002CFF                 mov     r8, [rbp+var_D8]
__text:0000000100002D06                 mov     r8, [r8]
__text:0000000100002D09                 mov     [rbp+var_C8], rcx
__text:0000000100002D10                 mov     [rbp+var_D0], r8
__text:0000000100002D17                 mov     rcx, [rbp+var_C8]
__text:0000000100002D1E                 mov     r8, rcx
__text:0000000100002D21                 mov     [rbp+var_C0], r8
__text:0000000100002D28                 mov     [rbp+var_B8], rdi
__text:0000000100002D2F                 mov     rdi, [rbp+var_B8]
__text:0000000100002D36                 mov     rdi, [rdi]
__text:0000000100002D39                 mov     [rcx], rdi
__text:0000000100002D3C                 mov     rdi, rax        ; lpfunc
__text:0000000100002D3F                 mov     [rbp+lpdso_handle], rsi
__text:0000000100002D46                 mov     rsi, rdx        ; obj
__text:0000000100002D49                 mov     rdx, [rbp+lpdso_handle] ; lpdso_handle
__text:0000000100002D50                 call    ___cxa_atexit
__text:0000000100002D55                 mov     [rbp+var_13C], eax
__text:0000000100002D5B                 add     rsp, 120h
__text:0000000100002D62                 pop     rbx
__text:0000000100002D63                 pop     r12
__text:0000000100002D65                 pop     r14
__text:0000000100002D67                 pop     r15
__text:0000000100002D69                 pop     rbp
__text:0000000100002D6A                 retn
__text:0000000100002D6A ___cxx_global_var_init2 endp
__text:0000000100002D6A
__text:0000000100002D6A ; ---------------------------------------------------------------------------
__text:0000000100002D6B                 align 10h
__text:0000000100002D70
__text:0000000100002D70 ; =============== S U B R O U T I N E =======================================
__text:0000000100002D70
__text:0000000100002D70 ; Attributes: bp-based frame
__text:0000000100002D70
__text:0000000100002D70 ; `global constructor keyed to'_a
__text:0000000100002D70                 public __GLOBAL__I_a
__text:0000000100002D70 __GLOBAL__I_a   proc near               ; DATA XREF: __mod_init_func:0000000100009208↓o
__text:0000000100002D70                 push    rbp
__text:0000000100002D71                 mov     rbp, rsp
__text:0000000100002D74                 call    ___cxx_global_var_init
__text:0000000100002D79                 call    ___cxx_global_var_init1
__text:0000000100002D7E                 call    ___cxx_global_var_init2
__text:0000000100002D83                 pop     rbp
__text:0000000100002D84                 retn
__text:0000000100002D84 __GLOBAL__I_a   endp
__text:0000000100002D84
__text:0000000100002D84 ; ---------------------------------------------------------------------------
__text:0000000100002D85                 align 10h
__text:0000000100002D90
__text:0000000100002D90 ; =============== S U B R O U T I N E =======================================
__text:0000000100002D90
__text:0000000100002D90 ; Attributes: bp-based frame
__text:0000000100002D90
__text:0000000100002D90 ; std::__1::multiset<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::~multiset()
__text:0000000100002D90 __ZNSt3__18multisetINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev proc near
__text:0000000100002D90                                         ; DATA XREF: __got:__ZNSt3__18multisetINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev_ptr↓o
__text:0000000100002D90
__text:0000000100002D90 var_8           = qword ptr -8
__text:0000000100002D90
__text:0000000100002D90                 push    rbp
__text:0000000100002D91                 mov     rbp, rsp
__text:0000000100002D94                 sub     rsp, 10h
__text:0000000100002D98                 mov     [rbp+var_8], rdi
__text:0000000100002D9C                 mov     rdi, [rbp+var_8]
__text:0000000100002DA0                 call    j___ZNSt3__18multisetINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev ; std::__1::multiset<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::~multiset()
__text:0000000100002DA5                 add     rsp, 10h
__text:0000000100002DA9                 pop     rbp
__text:0000000100002DAA                 retn
__text:0000000100002DAA __ZNSt3__18multisetINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev endp
__text:0000000100002DAA
__text:0000000100002DAA ; ---------------------------------------------------------------------------
__text:0000000100002DAB                 align 10h
__text:0000000100002DB0
__text:0000000100002DB0 ; =============== S U B R O U T I N E =======================================
__text:0000000100002DB0
__text:0000000100002DB0 ; Attributes: bp-based frame
__text:0000000100002DB0
__text:0000000100002DB0 ; std::__1::vector<int, std::__1::allocator<int>>::~vector()
__text:0000000100002DB0 __ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev proc near
__text:0000000100002DB0                                         ; DATA XREF: __got:__ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev_ptr↓o
__text:0000000100002DB0
__text:0000000100002DB0 var_8           = qword ptr -8
__text:0000000100002DB0
__text:0000000100002DB0                 push    rbp
__text:0000000100002DB1                 mov     rbp, rsp
__text:0000000100002DB4                 sub     rsp, 10h
__text:0000000100002DB8                 mov     [rbp+var_8], rdi
__text:0000000100002DBC                 mov     rdi, [rbp+var_8]
__text:0000000100002DC0                 call    j___ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev ; std::__1::vector<int,std::__1::allocator<int>>::~vector()
__text:0000000100002DC5                 add     rsp, 10h
__text:0000000100002DC9                 pop     rbp
__text:0000000100002DCA                 retn
__text:0000000100002DCA __ZNSt3__16vectorIiNS_9allocatorIiEEED1Ev endp
__text:0000000100002DCA
__text:0000000100002DCA ; ---------------------------------------------------------------------------
__text:0000000100002DCB                 align 10h
__text:0000000100002DD0
__text:0000000100002DD0 ; =============== S U B R O U T I N E =======================================
__text:0000000100002DD0
__text:0000000100002DD0 ; Attributes: bp-based frame
__text:0000000100002DD0
__text:0000000100002DD0 ; add(std::__1::pair<int, int>)
__text:0000000100002DD0 __Z3addNSt3__14pairIiiEE proc near      ; DATA XREF: __la_symbol_ptr:__Z3addNSt3__14pairIiiEE_ptr↓o
__text:0000000100002DD0
__text:0000000100002DD0 var_50          = qword ptr -50h
__text:0000000100002DD0 var_48          = qword ptr -48h
__text:0000000100002DD0 var_40          = qword ptr -40h
__text:0000000100002DD0 var_38          = qword ptr -38h
__text:0000000100002DD0 var_30          = qword ptr -30h
__text:0000000100002DD0 var_28          = qword ptr -28h
__text:0000000100002DD0 var_20          = qword ptr -20h
__text:0000000100002DD0 var_18          = qword ptr -18h
__text:0000000100002DD0 var_10          = qword ptr -10h
__text:0000000100002DD0 var_8           = qword ptr -8
__text:0000000100002DD0
__text:0000000100002DD0                 push    rbp
__text:0000000100002DD1                 mov     rbp, rsp
__text:0000000100002DD4                 sub     rsp, 50h
__text:0000000100002DD8                 mov     eax, [rdi]
__text:0000000100002DDA                 cmp     eax, cs:_n
__text:0000000100002DE0                 mov     [rbp+var_50], rdi
__text:0000000100002DE4                 jg      loc_100002E54
__text:0000000100002DEA                 mov     rax, [rbp+var_50]
__text:0000000100002DEE                 mov     ecx, [rax+4]
__text:0000000100002DF1                 cmp     ecx, cs:_m
__text:0000000100002DF7                 jg      loc_100002E54
__text:0000000100002DFD                 lea     rax, _a
__text:0000000100002E04                 mov     [rbp+var_30], rax
__text:0000000100002E08                 mov     rax, [rbp+var_50]
__text:0000000100002E0C                 mov     [rbp+var_38], rax
__text:0000000100002E10                 mov     rdi, [rbp+var_30]
__text:0000000100002E14                 mov     rsi, [rbp+var_38]
__text:0000000100002E18                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__insert_multiERKS2_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)
__text:0000000100002E1D                 lea     rsi, [rbp+var_28]
__text:0000000100002E21                 mov     [rbp+var_40], rax
__text:0000000100002E25                 mov     rax, [rbp+var_40]
__text:0000000100002E29                 mov     [rbp+var_18], rsi
__text:0000000100002E2D                 mov     [rbp+var_20], rax
__text:0000000100002E31                 mov     rax, [rbp+var_18]
__text:0000000100002E35                 mov     rsi, [rbp+var_20]
__text:0000000100002E39                 mov     [rbp+var_8], rax
__text:0000000100002E3D                 mov     [rbp+var_10], rsi
__text:0000000100002E41                 mov     rax, [rbp+var_8]
__text:0000000100002E45                 mov     rsi, [rbp+var_10]
__text:0000000100002E49                 mov     [rax], rsi
__text:0000000100002E4C                 mov     rax, [rbp+var_28]
__text:0000000100002E50                 mov     [rbp+var_48], rax
__text:0000000100002E54
__text:0000000100002E54 loc_100002E54:                          ; CODE XREF: add(std::__1::pair<int,int>)+14↑j
__text:0000000100002E54                                         ; add(std::__1::pair<int,int>)+27↑j
__text:0000000100002E54                 add     rsp, 50h
__text:0000000100002E58                 pop     rbp
__text:0000000100002E59                 retn
__text:0000000100002E59 __Z3addNSt3__14pairIiiEE endp
__text:0000000100002E59
__text:0000000100002E59 ; ---------------------------------------------------------------------------
__text:0000000100002E5A                 align 20h
__text:0000000100002E60
__text:0000000100002E60 ; =============== S U B R O U T I N E =======================================
__text:0000000100002E60
__text:0000000100002E60 ; Attributes: bp-based frame
__text:0000000100002E60
__text:0000000100002E60 ; del(std::__1::pair<int, int>)
__text:0000000100002E60 __Z3delNSt3__14pairIiiEE proc near      ; DATA XREF: __la_symbol_ptr:__Z3delNSt3__14pairIiiEE_ptr↓o
__text:0000000100002E60
__text:0000000100002E60 var_A0          = qword ptr -0A0h
__text:0000000100002E60 var_98          = qword ptr -98h
__text:0000000100002E60 var_90          = qword ptr -90h
__text:0000000100002E60 var_88          = qword ptr -88h
__text:0000000100002E60 var_80          = qword ptr -80h
__text:0000000100002E60 var_78          = qword ptr -78h
__text:0000000100002E60 var_70          = qword ptr -70h
__text:0000000100002E60 var_68          = qword ptr -68h
__text:0000000100002E60 var_60          = qword ptr -60h
__text:0000000100002E60 var_58          = qword ptr -58h
__text:0000000100002E60 var_50          = qword ptr -50h
__text:0000000100002E60 var_48          = qword ptr -48h
__text:0000000100002E60 var_40          = qword ptr -40h
__text:0000000100002E60 var_38          = qword ptr -38h
__text:0000000100002E60 var_30          = qword ptr -30h
__text:0000000100002E60 var_28          = qword ptr -28h
__text:0000000100002E60 var_20          = qword ptr -20h
__text:0000000100002E60 var_18          = qword ptr -18h
__text:0000000100002E60 var_10          = qword ptr -10h
__text:0000000100002E60 var_8           = qword ptr -8
__text:0000000100002E60
__text:0000000100002E60                 push    rbp
__text:0000000100002E61                 mov     rbp, rsp
__text:0000000100002E64                 sub     rsp, 0A0h
__text:0000000100002E6B                 mov     eax, [rdi]
__text:0000000100002E6D                 cmp     eax, cs:_n
__text:0000000100002E73                 mov     [rbp+var_A0], rdi
__text:0000000100002E7A                 jg      loc_100002F5E
__text:0000000100002E80                 mov     rax, [rbp+var_A0]
__text:0000000100002E87                 mov     ecx, [rax+4]
__text:0000000100002E8A                 cmp     ecx, cs:_m
__text:0000000100002E90                 jg      loc_100002F5E
__text:0000000100002E96                 lea     rax, _a
__text:0000000100002E9D                 mov     [rbp+var_78], rax
__text:0000000100002EA1                 mov     rax, [rbp+var_A0]
__text:0000000100002EA8                 mov     [rbp+var_80], rax
__text:0000000100002EAC                 mov     rdi, [rbp+var_78]
__text:0000000100002EB0                 mov     rsi, [rbp+var_80]
__text:0000000100002EB4                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::find<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)
__text:0000000100002EB9                 lea     rsi, _a
__text:0000000100002EC0                 lea     rdi, [rbp+var_70]
__text:0000000100002EC4                 mov     [rbp+var_88], rax
__text:0000000100002ECB                 mov     rax, [rbp+var_88]
__text:0000000100002ED2                 mov     [rbp+var_60], rdi
__text:0000000100002ED6                 mov     [rbp+var_68], rax
__text:0000000100002EDA                 mov     rax, [rbp+var_60]
__text:0000000100002EDE                 mov     rdi, [rbp+var_68]
__text:0000000100002EE2                 mov     [rbp+var_50], rax
__text:0000000100002EE6                 mov     [rbp+var_58], rdi
__text:0000000100002EEA                 mov     rax, [rbp+var_50]
__text:0000000100002EEE                 mov     rdi, [rbp+var_58]
__text:0000000100002EF2                 mov     [rax], rdi
__text:0000000100002EF5                 mov     rax, [rbp+var_70]
__text:0000000100002EF9                 mov     [rbp+var_90], rax
__text:0000000100002F00                 mov     rax, [rbp+var_90]
__text:0000000100002F07                 mov     [rbp+var_30], rsi
__text:0000000100002F0B                 mov     [rbp+var_38], rax
__text:0000000100002F0F                 mov     rdi, [rbp+var_30]
__text:0000000100002F13                 mov     rax, [rbp+var_38]
__text:0000000100002F17                 mov     [rbp+var_48], rax
__text:0000000100002F1B                 mov     rsi, [rbp+var_48]
__text:0000000100002F1F                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5eraseENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::erase(std::__1::__tree_const_iterator<std::__1::pair<int,int>,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,long>)
__text:0000000100002F24                 lea     rsi, [rbp+var_28]
__text:0000000100002F28                 mov     [rbp+var_40], rax
__text:0000000100002F2C                 mov     rax, [rbp+var_40]
__text:0000000100002F30                 mov     [rbp+var_18], rsi
__text:0000000100002F34                 mov     [rbp+var_20], rax
__text:0000000100002F38                 mov     rax, [rbp+var_18]
__text:0000000100002F3C                 mov     rsi, [rbp+var_20]
__text:0000000100002F40                 mov     [rbp+var_8], rax
__text:0000000100002F44                 mov     [rbp+var_10], rsi
__text:0000000100002F48                 mov     rax, [rbp+var_8]
__text:0000000100002F4C                 mov     rsi, [rbp+var_10]
__text:0000000100002F50                 mov     [rax], rsi
__text:0000000100002F53                 mov     rax, [rbp+var_28]
__text:0000000100002F57                 mov     [rbp+var_98], rax
__text:0000000100002F5E
__text:0000000100002F5E loc_100002F5E:                          ; CODE XREF: del(std::__1::pair<int,int>)+1A↑j
__text:0000000100002F5E                                         ; del(std::__1::pair<int,int>)+30↑j
__text:0000000100002F5E                 add     rsp, 0A0h
__text:0000000100002F65                 pop     rbp
__text:0000000100002F66                 retn
__text:0000000100002F66 __Z3delNSt3__14pairIiiEE endp
__text:0000000100002F66
__text:0000000100002F66 ; ---------------------------------------------------------------------------
__text:0000000100002F67                 align 10h
__text:0000000100002F70
__text:0000000100002F70 ; =============== S U B R O U T I N E =======================================
__text:0000000100002F70
__text:0000000100002F70 ; Attributes: bp-based frame
__text:0000000100002F70
__text:0000000100002F70 ; std::__1::basic_ostream<char, std::__1::char_traits<char>> & std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, char const*)
__text:0000000100002F70 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc proc near
__text:0000000100002F70                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc_ptr↓o
__text:0000000100002F70
__text:0000000100002F70 var_1A8         = qword ptr -1A8h
__text:0000000100002F70 var_1A0         = qword ptr -1A0h
__text:0000000100002F70 var_191         = byte ptr -191h
__text:0000000100002F70 var_190         = dword ptr -190h
__text:0000000100002F70 var_18C         = dword ptr -18Ch
__text:0000000100002F70 var_188         = qword ptr -188h
__text:0000000100002F70 var_179         = byte ptr -179h
__text:0000000100002F70 var_178         = qword ptr -178h
__text:0000000100002F70 var_16C         = dword ptr -16Ch
__text:0000000100002F70 var_168         = qword ptr -168h
__text:0000000100002F70 var_160         = qword ptr -160h
__text:0000000100002F70 var_158         = qword ptr -158h
__text:0000000100002F70 var_150         = qword ptr -150h
__text:0000000100002F70 var_148         = qword ptr -148h
__text:0000000100002F70 var_140         = qword ptr -140h
__text:0000000100002F70 var_134         = dword ptr -134h
__text:0000000100002F70 var_130         = qword ptr -130h
__text:0000000100002F70 var_128         = qword ptr -128h
__text:0000000100002F70 var_119         = byte ptr -119h
__text:0000000100002F70 var_118         = qword ptr -118h
__text:0000000100002F70 var_110         = qword ptr -110h
__text:0000000100002F70 var_108         = qword ptr -108h
__text:0000000100002F70 var_FC          = dword ptr -0FCh
__text:0000000100002F70 var_F8          = qword ptr -0F8h
__text:0000000100002F70 var_F0          = byte ptr -0F0h
__text:0000000100002F70 var_E0          = qword ptr -0E0h
__text:0000000100002F70 var_D8          = qword ptr -0D8h
__text:0000000100002F70 var_D0          = qword ptr -0D0h
__text:0000000100002F70 var_C8          = qword ptr -0C8h
__text:0000000100002F70 var_C0          = qword ptr -0C0h
__text:0000000100002F70 var_B8          = qword ptr -0B8h
__text:0000000100002F70 var_A0          = qword ptr -0A0h
__text:0000000100002F70 var_98          = qword ptr -98h
__text:0000000100002F70 var_90          = qword ptr -90h
__text:0000000100002F70 var_88          = qword ptr -88h
__text:0000000100002F70 var_7C          = dword ptr -7Ch
__text:0000000100002F70 var_78          = qword ptr -78h
__text:0000000100002F70 var_6C          = dword ptr -6Ch
__text:0000000100002F70 var_68          = qword ptr -68h
__text:0000000100002F70 var_60          = qword ptr -60h
__text:0000000100002F70 var_58          = qword ptr -58h
__text:0000000100002F70 var_50          = qword ptr -50h
__text:0000000100002F70 var_44          = dword ptr -44h
__text:0000000100002F70 var_40          = qword ptr -40h
__text:0000000100002F70 var_38          = byte ptr -38h
__text:0000000100002F70 var_29          = byte ptr -29h
__text:0000000100002F70 var_28          = qword ptr -28h
__text:0000000100002F70 var_20          = qword ptr -20h
__text:0000000100002F70 var_11          = byte ptr -11h
__text:0000000100002F70 var_10          = qword ptr -10h
__text:0000000100002F70 var_8           = dword ptr -8
__text:0000000100002F70 var_4           = dword ptr -4
__text:0000000100002F70
__text:0000000100002F70                 push    rbp
__text:0000000100002F71                 mov     rbp, rsp
__text:0000000100002F74                 sub     rsp, 1B0h
__text:0000000100002F7B                 mov     [rbp+var_D8], rdi
__text:0000000100002F82                 mov     [rbp+var_E0], rsi
__text:0000000100002F89                 mov     rsi, [rbp+var_D8]
__text:0000000100002F90                 lea     rdi, [rbp+var_F0]
__text:0000000100002F97                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_ ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char,std::__1::char_traits<char>>&)
__text:0000000100002F9C                 jmp     $+5
__text:0000000100002FA1 ; ---------------------------------------------------------------------------
__text:0000000100002FA1
__text:0000000100002FA1 loc_100002FA1:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2C↑j
__text:0000000100002FA1                 lea     rax, [rbp+var_F0]
__text:0000000100002FA8                 mov     [rbp+var_D0], rax
__text:0000000100002FAF                 mov     rax, [rbp+var_D0]
__text:0000000100002FB6                 mov     cl, [rax]
__text:0000000100002FB8                 mov     [rbp+var_119], cl
__text:0000000100002FBE                 mov     al, [rbp+var_119]
__text:0000000100002FC4                 test    al, 1
__text:0000000100002FC6                 jnz     loc_100002FD1
__text:0000000100002FCC                 jmp     loc_100003376
__text:0000000100002FD1 ; ---------------------------------------------------------------------------
__text:0000000100002FD1
__text:0000000100002FD1 loc_100002FD1:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+56↑j
__text:0000000100002FD1                 mov     rax, [rbp+var_E0]
__text:0000000100002FD8                 mov     [rbp+var_C8], rax
__text:0000000100002FDF                 mov     rdi, rax        ; char *
__text:0000000100002FE2                 call    _strlen
__text:0000000100002FE7                 mov     [rbp+var_128], rax
__text:0000000100002FEE                 jmp     $+5
__text:0000000100002FF3 ; ---------------------------------------------------------------------------
__text:0000000100002FF3
__text:0000000100002FF3 loc_100002FF3:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+7E↑j
__text:0000000100002FF3                 jmp     $+5
__text:0000000100002FF8 ; ---------------------------------------------------------------------------
__text:0000000100002FF8
__text:0000000100002FF8 loc_100002FF8:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100002FF3↑j
__text:0000000100002FF8                 lea     rax, [rbp+var_110]
__text:0000000100002FFF                 mov     rcx, [rbp+var_128]
__text:0000000100003006                 mov     [rbp+var_108], rcx
__text:000000010000300D                 mov     rdx, [rbp+var_D8]
__text:0000000100003014                 mov     [rbp+var_B8], rax
__text:000000010000301B                 mov     [rbp+var_C0], rdx
__text:0000000100003022                 mov     rax, [rbp+var_B8]
__text:0000000100003029                 mov     rdx, [rbp+var_C0]
__text:0000000100003030                 mov     [rbp+var_98], rax
__text:0000000100003037                 mov     [rbp+var_A0], rdx
__text:000000010000303E                 mov     rax, [rbp+var_98]
__text:0000000100003045                 mov     rdx, [rbp+var_A0]
__text:000000010000304C                 mov     rsi, [rdx]
__text:000000010000304F                 mov     rsi, [rsi-18h]
__text:0000000100003053                 add     rdx, rsi
__text:0000000100003056                 mov     [rbp+var_90], rdx
__text:000000010000305D                 mov     rdx, [rbp+var_90]
__text:0000000100003064                 mov     [rbp+var_88], rdx
__text:000000010000306B                 mov     rdx, [rbp+var_88]
__text:0000000100003072                 mov     rdx, [rdx+28h]
__text:0000000100003076                 mov     [rax], rdx
__text:0000000100003079                 mov     rsi, [rbp+var_E0]
__text:0000000100003080                 mov     rax, [rbp+var_D8]
__text:0000000100003087                 mov     rdx, [rax]
__text:000000010000308A                 mov     rdx, [rdx-18h]
__text:000000010000308E                 add     rax, rdx
__text:0000000100003091                 mov     [rbp+var_60], rax
__text:0000000100003095                 mov     rax, [rbp+var_60]
__text:0000000100003099                 mov     edi, [rax+8]
__text:000000010000309C                 mov     [rbp+var_130], rsi
__text:00000001000030A3                 mov     [rbp+var_134], edi
__text:00000001000030A9                 mov     eax, [rbp+var_134]
__text:00000001000030AF                 and     eax, 0B0h
__text:00000001000030B4                 cmp     eax, 20h ; ' '
__text:00000001000030B9                 jnz     loc_1000030D9
__text:00000001000030BF                 mov     rax, [rbp+var_E0]
__text:00000001000030C6                 add     rax, [rbp+var_108]
__text:00000001000030CD                 mov     [rbp+var_140], rax
__text:00000001000030D4                 jmp     loc_1000030E7
__text:00000001000030D9 ; ---------------------------------------------------------------------------
__text:00000001000030D9
__text:00000001000030D9 loc_1000030D9:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+149↑j
__text:00000001000030D9                 mov     rax, [rbp+var_E0]
__text:00000001000030E0                 mov     [rbp+var_140], rax
__text:00000001000030E7
__text:00000001000030E7 loc_1000030E7:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+164↑j
__text:00000001000030E7                 mov     rax, [rbp+var_140]
__text:00000001000030EE                 mov     rcx, [rbp+var_E0]
__text:00000001000030F5                 add     rcx, [rbp+var_108]
__text:00000001000030FC                 mov     rdx, [rbp+var_D8]
__text:0000000100003103                 mov     rsi, [rdx]
__text:0000000100003106                 mov     rsi, [rsi-18h]
__text:000000010000310A                 add     rdx, rsi
__text:000000010000310D                 mov     rsi, [rbp+var_D8]
__text:0000000100003114                 mov     rdi, [rsi]
__text:0000000100003117                 mov     rdi, [rdi-18h]
__text:000000010000311B                 add     rsi, rdi
__text:000000010000311E                 mov     [rbp+var_50], rsi
__text:0000000100003122                 mov     rsi, [rbp+var_50]
__text:0000000100003126                 mov     r8d, [rsi+90h]
__text:000000010000312D                 mov     [rbp+var_4], 0FFFFFFFFh
__text:0000000100003134                 mov     [rbp+var_8], r8d
__text:0000000100003138                 mov     r8d, [rbp+var_4]
__text:000000010000313C                 cmp     r8d, [rbp+var_8]
__text:0000000100003140                 mov     [rbp+var_148], rax
__text:0000000100003147                 mov     [rbp+var_150], rcx
__text:000000010000314E                 mov     [rbp+var_158], rdx
__text:0000000100003155                 mov     [rbp+var_160], rsi
__text:000000010000315C                 jnz     loc_100003258
__text:0000000100003162                 mov     rax, [rbp+var_160]
__text:0000000100003169                 mov     [rbp+var_28], rax
__text:000000010000316D                 mov     [rbp+var_29], 20h ; ' '
__text:0000000100003171                 mov     rsi, [rbp+var_28]
__text:0000000100003175                 lea     rdi, [rbp+var_38] ; this
__text:0000000100003179                 call    __ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
__text:000000010000317E                 jmp     $+5
__text:0000000100003183 ; ---------------------------------------------------------------------------
__text:0000000100003183
__text:0000000100003183 loc_100003183:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+20E↑j
__text:0000000100003183                 lea     rax, [rbp+var_38]
__text:0000000100003187                 mov     [rbp+var_20], rax
__text:000000010000318B                 mov     rsi, cs:__ZNSt3__15ctypeIcE2idE_ptr
__text:0000000100003192                 mov     rdi, rax
__text:0000000100003195                 call    __ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
__text:000000010000319A                 mov     [rbp+var_168], rax
__text:00000001000031A1                 jmp     $+5
__text:00000001000031A6 ; ---------------------------------------------------------------------------
__text:00000001000031A6
__text:00000001000031A6 loc_1000031A6:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+231↑j
__text:00000001000031A6                 mov     al, [rbp+var_29]
__text:00000001000031A9                 mov     rcx, [rbp+var_168]
__text:00000001000031B0                 mov     [rbp+var_10], rcx
__text:00000001000031B4                 mov     [rbp+var_11], al
__text:00000001000031B7                 mov     rdx, [rbp+var_10]
__text:00000001000031BB                 mov     rsi, [rdx]
__text:00000001000031BE                 mov     rsi, [rsi+38h]
__text:00000001000031C2                 movsx   edi, [rbp+var_11]
__text:00000001000031C6                 mov     [rbp+var_16C], edi
__text:00000001000031CC                 mov     rdi, rdx
__text:00000001000031CF                 mov     r8d, [rbp+var_16C]
__text:00000001000031D6                 mov     [rbp+var_178], rsi
__text:00000001000031DD                 mov     esi, r8d
__text:00000001000031E0                 mov     rdx, [rbp+var_178]
__text:00000001000031E7                 call    rdx
__text:00000001000031E9                 mov     [rbp+var_179], al
__text:00000001000031EF                 jmp     loc_100003234
__text:00000001000031F4 ; ---------------------------------------------------------------------------
__text:00000001000031F4                 mov     ecx, edx
__text:00000001000031F6                 mov     [rbp+var_40], rax
__text:00000001000031FA                 mov     [rbp+var_44], ecx
__text:00000001000031FD                 lea     rdi, [rbp+var_38] ; this
__text:0000000100003201                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:0000000100003206                 jmp     $+5
__text:000000010000320B ; ---------------------------------------------------------------------------
__text:000000010000320B
__text:000000010000320B loc_10000320B:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+296↑j
__text:000000010000320B                 mov     rax, [rbp+var_40]
__text:000000010000320F                 mov     ecx, [rbp+var_44]
__text:0000000100003212                 mov     [rbp+var_188], rax
__text:0000000100003219                 mov     [rbp+var_18C], ecx
__text:000000010000321F                 jmp     loc_100003346
__text:0000000100003224 ; ---------------------------------------------------------------------------
__text:0000000100003224                 mov     ecx, edx
__text:0000000100003226                 mov     rdi, rax
__text:0000000100003229                 mov     [rbp+var_190], ecx
__text:000000010000322F                 call    ___clang_call_terminate
__text:0000000100003234 ; ---------------------------------------------------------------------------
__text:0000000100003234
__text:0000000100003234 loc_100003234:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+27F↑j
__text:0000000100003234                 lea     rdi, [rbp+var_38] ; this
__text:0000000100003238                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:000000010000323D                 jmp     $+5
__text:0000000100003242 ; ---------------------------------------------------------------------------
__text:0000000100003242
__text:0000000100003242 loc_100003242:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2CD↑j
__text:0000000100003242                 mov     al, [rbp+var_179]
__text:0000000100003248                 movsx   ecx, al
__text:000000010000324B                 mov     rdx, [rbp+var_160]
__text:0000000100003252                 mov     [rdx+90h], ecx
__text:0000000100003258
__text:0000000100003258 loc_100003258:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+1EC↑j
__text:0000000100003258                 mov     rax, [rbp+var_160]
__text:000000010000325F                 mov     ecx, [rax+90h]
__text:0000000100003265                 mov     dl, cl
__text:0000000100003267                 mov     [rbp+var_191], dl
__text:000000010000326D                 mov     rdi, [rbp+var_110]
__text:0000000100003274                 mov     al, [rbp+var_191]
__text:000000010000327A                 movsx   r9d, al
__text:000000010000327E                 mov     rsi, [rbp+var_130]
__text:0000000100003285                 mov     rdx, [rbp+var_148]
__text:000000010000328C                 mov     rcx, [rbp+var_150]
__text:0000000100003293                 mov     r8, [rbp+var_158]
__text:000000010000329A                 call    __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)
__text:000000010000329F                 mov     [rbp+var_1A0], rax
__text:00000001000032A6                 jmp     $+5
__text:00000001000032AB ; ---------------------------------------------------------------------------
__text:00000001000032AB
__text:00000001000032AB loc_1000032AB:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+336↑j
__text:00000001000032AB                 lea     rax, [rbp+var_118]
__text:00000001000032B2                 mov     rcx, [rbp+var_1A0]
__text:00000001000032B9                 mov     [rbp+var_118], rcx
__text:00000001000032C0                 mov     [rbp+var_58], rax
__text:00000001000032C4                 mov     rax, [rbp+var_58]
__text:00000001000032C8                 cmp     qword ptr [rax], 0
__text:00000001000032CF                 jnz     loc_100003371
__text:00000001000032D5                 mov     rax, [rbp+var_D8]
__text:00000001000032DC                 mov     rcx, [rax]
__text:00000001000032DF                 mov     rcx, [rcx-18h]
__text:00000001000032E3                 add     rax, rcx
__text:00000001000032E6                 mov     [rbp+var_78], rax
__text:00000001000032EA                 mov     [rbp+var_7C], 5
__text:00000001000032F1                 mov     rax, [rbp+var_78]
__text:00000001000032F5                 mov     [rbp+var_68], rax
__text:00000001000032F9                 mov     [rbp+var_6C], 5
__text:0000000100003300                 mov     rax, [rbp+var_68]
__text:0000000100003304                 mov     edx, [rax+20h]
__text:0000000100003307                 or      edx, 5
__text:000000010000330A                 mov     rdi, rax        ; this
__text:000000010000330D                 mov     esi, edx        ; unsigned int
__text:000000010000330F                 call    __ZNSt3__18ios_base5clearEj ; std::__1::ios_base::clear(uint)
__text:0000000100003314                 jmp     $+5
__text:0000000100003319 ; ---------------------------------------------------------------------------
__text:0000000100003319
__text:0000000100003319 loc_100003319:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3A4↑j
__text:0000000100003319                 jmp     $+5
__text:000000010000331E ; ---------------------------------------------------------------------------
__text:000000010000331E
__text:000000010000331E loc_10000331E:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100003319↑j
__text:000000010000331E                 jmp     loc_100003371
__text:0000000100003323 ; ---------------------------------------------------------------------------
__text:0000000100003323                 mov     ecx, edx
__text:0000000100003325                 mov     [rbp+var_F8], rax
__text:000000010000332C                 mov     [rbp+var_FC], ecx
__text:0000000100003332                 jmp     loc_100003391
__text:0000000100003337 ; ---------------------------------------------------------------------------
__text:0000000100003337                 mov     ecx, edx
__text:0000000100003339                 mov     [rbp+var_188], rax
__text:0000000100003340                 mov     [rbp+var_18C], ecx
__text:0000000100003346
__text:0000000100003346 loc_100003346:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2AF↑j
__text:0000000100003346                 mov     eax, [rbp+var_18C]
__text:000000010000334C                 mov     rcx, [rbp+var_188]
__text:0000000100003353                 mov     [rbp+var_F8], rcx
__text:000000010000335A                 mov     [rbp+var_FC], eax
__text:0000000100003360                 lea     rdi, [rbp+var_F0]
__text:0000000100003367                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
__text:000000010000336C                 jmp     loc_10000338C
__text:0000000100003371 ; ---------------------------------------------------------------------------
__text:0000000100003371
__text:0000000100003371 loc_100003371:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+35F↑j
__text:0000000100003371                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_10000331E↑j
__text:0000000100003371                 jmp     $+5
__text:0000000100003376 ; ---------------------------------------------------------------------------
__text:0000000100003376
__text:0000000100003376 loc_100003376:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+5C↑j
__text:0000000100003376                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100003371↑j
__text:0000000100003376                 lea     rdi, [rbp+var_F0]
__text:000000010000337D                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
__text:0000000100003382                 jmp     $+5
__text:0000000100003387 ; ---------------------------------------------------------------------------
__text:0000000100003387
__text:0000000100003387 loc_100003387:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+412↑j
__text:0000000100003387                 jmp     loc_1000033C4
__text:000000010000338C ; ---------------------------------------------------------------------------
__text:000000010000338C
__text:000000010000338C loc_10000338C:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3FC↑j
__text:000000010000338C                 jmp     $+5
__text:0000000100003391 ; ---------------------------------------------------------------------------
__text:0000000100003391
__text:0000000100003391 loc_100003391:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3C2↑j
__text:0000000100003391                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_10000338C↑j
__text:0000000100003391                 mov     rdi, [rbp+var_F8] ; void *
__text:0000000100003398                 call    ___cxa_begin_catch
__text:000000010000339D                 mov     rdi, [rbp+var_D8]
__text:00000001000033A4                 mov     rcx, [rdi]
__text:00000001000033A7                 mov     rcx, [rcx-18h]
__text:00000001000033AB                 add     rdi, rcx        ; this
__text:00000001000033AE                 mov     [rbp+var_1A8], rax
__text:00000001000033B5                 call    __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv ; std::__1::ios_base::__set_badbit_and_consider_rethrow(void)
__text:00000001000033BA                 jmp     $+5
__text:00000001000033BF ; ---------------------------------------------------------------------------
__text:00000001000033BF
__text:00000001000033BF loc_1000033BF:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+44A↑j
__text:00000001000033BF                 call    ___cxa_end_catch
__text:00000001000033C4
__text:00000001000033C4 loc_1000033C4:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100003387↑j
__text:00000001000033C4                 mov     rax, [rbp+var_D8]
__text:00000001000033CB                 add     rsp, 1B0h
__text:00000001000033D2                 pop     rbp
__text:00000001000033D3                 retn
__text:00000001000033D3 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc endp
__text:00000001000033D3
__text:00000001000033D4 ; ---------------------------------------------------------------------------
__text:00000001000033D4                 mov     ecx, edx
__text:00000001000033D6                 mov     [rbp-0F8h], rax
__text:00000001000033DD                 mov     [rbp-0FCh], ecx
__text:00000001000033E3                 call    ___cxa_end_catch
__text:00000001000033E8                 jmp     $+5
__text:00000001000033ED ; ---------------------------------------------------------------------------
__text:00000001000033ED
__text:00000001000033ED loc_1000033ED:                          ; CODE XREF: __text:00000001000033E8↑j
__text:00000001000033ED                 jmp     $+5
__text:00000001000033F2 ; ---------------------------------------------------------------------------
__text:00000001000033F2
__text:00000001000033F2 loc_1000033F2:                          ; CODE XREF: __text:loc_1000033ED↑j
__text:00000001000033F2                 mov     rdi, [rbp-0F8h]
__text:00000001000033F9                 call    __Unwind_Resume
__text:00000001000033FE ; ---------------------------------------------------------------------------
__text:00000001000033FE                 mov     ecx, edx
__text:0000000100003400                 mov     rdi, rax
__text:0000000100003403                 mov     [rbp-1ACh], ecx
__text:0000000100003409                 call    ___clang_call_terminate
__text:0000000100003409 ; ---------------------------------------------------------------------------
__text:000000010000340E                 align 10h
__text:0000000100003410
__text:0000000100003410 ; =============== S U B R O U T I N E =======================================
__text:0000000100003410
__text:0000000100003410 ; Attributes: bp-based frame
__text:0000000100003410
__text:0000000100003410 ; std::__1::basic_ostream<char, std::__1::char_traits<char>> & std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)
__text:0000000100003410 __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ proc near
__text:0000000100003410                                         ; DATA XREF: _main+5F↑o
__text:0000000100003410
__text:0000000100003410 var_88          = qword ptr -88h
__text:0000000100003410 var_80          = qword ptr -80h
__text:0000000100003410 var_78          = dword ptr -78h
__text:0000000100003410 var_71          = byte ptr -71h
__text:0000000100003410 var_70          = qword ptr -70h
__text:0000000100003410 var_64          = dword ptr -64h
__text:0000000100003410 var_60          = qword ptr -60h
__text:0000000100003410 var_58          = qword ptr -58h
__text:0000000100003410 var_50          = qword ptr -50h
__text:0000000100003410 var_48          = qword ptr -48h
__text:0000000100003410 var_3C          = dword ptr -3Ch
__text:0000000100003410 var_38          = qword ptr -38h
__text:0000000100003410 var_30          = byte ptr -30h
__text:0000000100003410 var_21          = byte ptr -21h
__text:0000000100003410 var_20          = qword ptr -20h
__text:0000000100003410 var_18          = qword ptr -18h
__text:0000000100003410 var_9           = byte ptr -9
__text:0000000100003410 var_8           = qword ptr -8
__text:0000000100003410
__text:0000000100003410                 push    rbp
__text:0000000100003411                 mov     rbp, rsp
__text:0000000100003414                 sub     rsp, 90h
__text:000000010000341B                 mov     [rbp+var_48], rdi
__text:000000010000341F                 mov     rax, rdi
__text:0000000100003422                 mov     rcx, [rdi]
__text:0000000100003425                 mov     rcx, [rcx-18h]
__text:0000000100003429                 add     rdi, rcx
__text:000000010000342C                 mov     [rbp+var_20], rdi
__text:0000000100003430                 mov     [rbp+var_21], 0Ah
__text:0000000100003434                 mov     rsi, [rbp+var_20]
__text:0000000100003438                 lea     rcx, [rbp+var_30]
__text:000000010000343C                 mov     rdi, rcx        ; this
__text:000000010000343F                 mov     [rbp+var_50], rax
__text:0000000100003443                 mov     [rbp+var_58], rcx
__text:0000000100003447                 call    __ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
__text:000000010000344C                 mov     rax, [rbp+var_58]
__text:0000000100003450                 mov     [rbp+var_18], rax
__text:0000000100003454                 mov     rsi, cs:__ZNSt3__15ctypeIcE2idE_ptr
__text:000000010000345B                 mov     rdi, rax
__text:000000010000345E                 call    __ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
__text:0000000100003463                 mov     [rbp+var_60], rax
__text:0000000100003467                 jmp     $+5
__text:000000010000346C ; ---------------------------------------------------------------------------
__text:000000010000346C
__text:000000010000346C loc_10000346C:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+57↑j
__text:000000010000346C                 mov     al, [rbp+var_21]
__text:000000010000346F                 mov     rcx, [rbp+var_60]
__text:0000000100003473                 mov     [rbp+var_8], rcx
__text:0000000100003477                 mov     [rbp+var_9], al
__text:000000010000347A                 mov     rdx, [rbp+var_8]
__text:000000010000347E                 mov     rsi, [rdx]
__text:0000000100003481                 mov     rsi, [rsi+38h]
__text:0000000100003485                 movsx   edi, [rbp+var_9]
__text:0000000100003489                 mov     [rbp+var_64], edi
__text:000000010000348C                 mov     rdi, rdx
__text:000000010000348F                 mov     r8d, [rbp+var_64]
__text:0000000100003493                 mov     [rbp+var_70], rsi
__text:0000000100003497                 mov     esi, r8d
__text:000000010000349A                 mov     rdx, [rbp+var_70]
__text:000000010000349E                 call    rdx
__text:00000001000034A0                 mov     [rbp+var_71], al
__text:00000001000034A3                 jmp     loc_1000034D5
__text:00000001000034A8 ; ---------------------------------------------------------------------------
__text:00000001000034A8                 mov     ecx, edx
__text:00000001000034AA                 mov     [rbp+var_38], rax
__text:00000001000034AE                 mov     [rbp+var_3C], ecx
__text:00000001000034B1                 lea     rdi, [rbp+var_30] ; this
__text:00000001000034B5                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:00000001000034BA                 jmp     $+5
__text:00000001000034BF ; ---------------------------------------------------------------------------
__text:00000001000034BF
__text:00000001000034BF loc_1000034BF:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+AA↑j
__text:00000001000034BF                 mov     rdi, [rbp+var_38]
__text:00000001000034C3                 call    __Unwind_Resume
__text:00000001000034C8 ; ---------------------------------------------------------------------------
__text:00000001000034C8                 mov     ecx, edx
__text:00000001000034CA                 mov     rdi, rax
__text:00000001000034CD                 mov     [rbp+var_78], ecx
__text:00000001000034D0                 call    ___clang_call_terminate
__text:00000001000034D5 ; ---------------------------------------------------------------------------
__text:00000001000034D5
__text:00000001000034D5 loc_1000034D5:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+93↑j
__text:00000001000034D5                 lea     rdi, [rbp+var_30] ; this
__text:00000001000034D9                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:00000001000034DE                 mov     rdi, [rbp+var_50]
__text:00000001000034E2                 mov     al, [rbp+var_71]
__text:00000001000034E5                 movsx   esi, al
__text:00000001000034E8                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::put(char)
__text:00000001000034ED                 mov     rdi, [rbp+var_48]
__text:00000001000034F1                 mov     [rbp+var_80], rax
__text:00000001000034F5                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::flush(void)
__text:00000001000034FA                 mov     rdi, [rbp+var_48]
__text:00000001000034FE                 mov     [rbp+var_88], rax
__text:0000000100003505                 mov     rax, rdi
__text:0000000100003508                 add     rsp, 90h
__text:000000010000350F                 pop     rbp
__text:0000000100003510                 retn
__text:0000000100003510 __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ endp
__text:0000000100003510
__text:0000000100003510 ; ---------------------------------------------------------------------------
__text:0000000100003511                 align 20h
__text:0000000100003520
__text:0000000100003520 ; =============== S U B R O U T I N E =======================================
__text:0000000100003520
__text:0000000100003520 ; Attributes: noreturn bp-based frame
__text:0000000100003520
__text:0000000100003520 ___clang_call_terminate proc near       ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2BF↑p
__text:0000000100003520                                         ; __text:0000000100003409↑p ...
__text:0000000100003520
__text:0000000100003520 var_8           = qword ptr -8
__text:0000000100003520
__text:0000000100003520                 push    rbp
__text:0000000100003521                 mov     rbp, rsp
__text:0000000100003524                 sub     rsp, 10h
__text:0000000100003528                 call    ___cxa_begin_catch
__text:000000010000352D                 mov     [rbp+var_8], rax
__text:0000000100003531                 call    __ZSt9terminatev ; std::terminate(void)
__text:0000000100003531 ___clang_call_terminate endp
__text:0000000100003531
__text:0000000100003531 ; ---------------------------------------------------------------------------
__text:0000000100003536                 align 20h
__text:0000000100003540
__text:0000000100003540 ; =============== S U B R O U T I N E =======================================
__text:0000000100003540
__text:0000000100003540 ; Attributes: bp-based frame
__text:0000000100003540
__text:0000000100003540 ; std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> std::__1::__pad_and_output<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, char const*, char const*, char const*, std::__1::ios_base &, char)
__text:0000000100003540 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ proc near
__text:0000000100003540                                         ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+32A↑p
__text:0000000100003540
__text:0000000100003540 var_2CC         = dword ptr -2CCh
__text:0000000100003540 var_2C8         = dword ptr -2C8h
__text:0000000100003540 var_2C4         = dword ptr -2C4h
__text:0000000100003540 var_2C0         = qword ptr -2C0h
__text:0000000100003540 var_2B8         = qword ptr -2B8h
__text:0000000100003540 var_2B0         = qword ptr -2B0h
__text:0000000100003540 var_2A8         = qword ptr -2A8h
__text:0000000100003540 var_2A0         = qword ptr -2A0h
__text:0000000100003540 var_298         = qword ptr -298h
__text:0000000100003540 var_290         = qword ptr -290h
__text:0000000100003540 var_288         = qword ptr -288h
__text:0000000100003540 var_27C         = dword ptr -27Ch
__text:0000000100003540 var_278         = qword ptr -278h
__text:0000000100003540 var_26C         = dword ptr -26Ch
__text:0000000100003540 var_268         = qword ptr -268h
__text:0000000100003540 var_260         = byte ptr -260h
__text:0000000100003540 var_248         = qword ptr -248h
__text:0000000100003540 var_240         = qword ptr -240h
__text:0000000100003540 var_238         = qword ptr -238h
__text:0000000100003540 var_230         = qword ptr -230h
__text:0000000100003540 var_228         = qword ptr -228h
__text:0000000100003540 var_219         = byte ptr -219h
__text:0000000100003540 var_218         = qword ptr -218h
__text:0000000100003540 var_210         = qword ptr -210h
__text:0000000100003540 var_208         = qword ptr -208h
__text:0000000100003540 var_200         = qword ptr -200h
__text:0000000100003540 var_1F8         = qword ptr -1F8h
__text:0000000100003540 var_1F0         = qword ptr -1F0h
__text:0000000100003540 var_1E8         = qword ptr -1E8h
__text:0000000100003540 var_1E0         = qword ptr -1E0h
__text:0000000100003540 var_1D8         = qword ptr -1D8h
__text:0000000100003540 var_1D0         = qword ptr -1D0h
__text:0000000100003540 var_1C8         = qword ptr -1C8h
__text:0000000100003540 var_1C0         = qword ptr -1C0h
__text:0000000100003540 var_1B8         = qword ptr -1B8h
__text:0000000100003540 var_1B0         = qword ptr -1B0h
__text:0000000100003540 var_1A8         = qword ptr -1A8h
__text:0000000100003540 var_1A0         = qword ptr -1A0h
__text:0000000100003540 var_198         = qword ptr -198h
__text:0000000100003540 var_190         = qword ptr -190h
__text:0000000100003540 var_188         = qword ptr -188h
__text:0000000100003540 var_180         = qword ptr -180h
__text:0000000100003540 var_178         = qword ptr -178h
__text:0000000100003540 var_170         = qword ptr -170h
__text:0000000100003540 var_168         = qword ptr -168h
__text:0000000100003540 var_160         = qword ptr -160h
__text:0000000100003540 var_158         = qword ptr -158h
__text:0000000100003540 var_150         = qword ptr -150h
__text:0000000100003540 var_148         = qword ptr -148h
__text:0000000100003540 var_140         = qword ptr -140h
__text:0000000100003540 var_138         = qword ptr -138h
__text:0000000100003540 var_130         = qword ptr -130h
__text:0000000100003540 var_128         = qword ptr -128h
__text:0000000100003540 var_120         = qword ptr -120h
__text:0000000100003540 var_118         = qword ptr -118h
__text:0000000100003540 var_110         = qword ptr -110h
__text:0000000100003540 var_108         = qword ptr -108h
__text:0000000100003540 var_100         = qword ptr -100h
__text:0000000100003540 var_F8          = qword ptr -0F8h
__text:0000000100003540 var_F0          = qword ptr -0F0h
__text:0000000100003540 var_E8          = qword ptr -0E8h
__text:0000000100003540 var_E0          = qword ptr -0E0h
__text:0000000100003540 var_D8          = qword ptr -0D8h
__text:0000000100003540 var_D0          = qword ptr -0D0h
__text:0000000100003540 var_C8          = qword ptr -0C8h
__text:0000000100003540 var_C0          = qword ptr -0C0h
__text:0000000100003540 var_B8          = qword ptr -0B8h
__text:0000000100003540 var_B0          = qword ptr -0B0h
__text:0000000100003540 var_A8          = qword ptr -0A8h
__text:0000000100003540 var_A0          = qword ptr -0A0h
__text:0000000100003540 var_98          = qword ptr -98h
__text:0000000100003540 var_90          = qword ptr -90h
__text:0000000100003540 var_88          = qword ptr -88h
__text:0000000100003540 var_80          = qword ptr -80h
__text:0000000100003540 var_78          = qword ptr -78h
__text:0000000100003540 var_70          = qword ptr -70h
__text:0000000100003540 var_68          = qword ptr -68h
__text:0000000100003540 var_60          = qword ptr -60h
__text:0000000100003540 var_51          = byte ptr -51h
__text:0000000100003540 var_50          = qword ptr -50h
__text:0000000100003540 var_48          = qword ptr -48h
__text:0000000100003540 var_39          = byte ptr -39h
__text:0000000100003540 var_38          = qword ptr -38h
__text:0000000100003540 var_30          = qword ptr -30h
__text:0000000100003540 var_28          = qword ptr -28h
__text:0000000100003540 var_20          = qword ptr -20h
__text:0000000100003540 var_18          = qword ptr -18h
__text:0000000100003540 var_10          = qword ptr -10h
__text:0000000100003540 var_8           = qword ptr -8
__text:0000000100003540
__text:0000000100003540                 push    rbp
__text:0000000100003541                 mov     rbp, rsp
__text:0000000100003544                 sub     rsp, 2D0h
__text:000000010000354B                 mov     al, r9b
__text:000000010000354E                 lea     r10, [rbp+var_228]
__text:0000000100003555                 lea     r11, [rbp+var_1E8]
__text:000000010000355C                 mov     [rbp+var_1F8], rdi
__text:0000000100003563                 mov     [rbp+var_200], rsi
__text:000000010000356A                 mov     [rbp+var_208], rdx
__text:0000000100003571                 mov     [rbp+var_210], rcx
__text:0000000100003578                 mov     [rbp+var_218], r8
__text:000000010000357F                 mov     [rbp+var_219], al
__text:0000000100003585                 mov     rcx, [rbp+var_1F8]
__text:000000010000358C                 mov     [rbp+var_1D8], r11
__text:0000000100003593                 mov     [rbp+var_1E0], 0FFFFFFFFFFFFFFFFh
__text:000000010000359E                 mov     rdx, [rbp+var_1D8]
__text:00000001000035A5                 mov     rsi, [rbp+var_1E0]
__text:00000001000035AC                 mov     [rbp+var_1C8], rdx
__text:00000001000035B3                 mov     [rbp+var_1D0], rsi
__text:00000001000035BA                 mov     rdx, [rbp+var_1C8]
__text:00000001000035C1                 mov     qword ptr [rdx], 0
__text:00000001000035C8                 mov     rdx, [rbp+var_1E8]
__text:00000001000035CF                 mov     [rbp+var_228], rdx
__text:00000001000035D6                 mov     [rbp+var_1C0], r10
__text:00000001000035DD                 cmp     rcx, 0
__text:00000001000035E4                 jnz     loc_1000035FD
__text:00000001000035EA                 mov     rax, [rbp+var_1F8]
__text:00000001000035F1                 mov     [rbp+var_1F0], rax
__text:00000001000035F8                 jmp     loc_100003BC2
__text:00000001000035FD ; ---------------------------------------------------------------------------
__text:00000001000035FD
__text:00000001000035FD loc_1000035FD:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+A4↑j
__text:00000001000035FD                 mov     rax, [rbp+var_210]
__text:0000000100003604                 mov     rcx, [rbp+var_200]
__text:000000010000360B                 sub     rax, rcx
__text:000000010000360E                 mov     [rbp+var_230], rax
__text:0000000100003615                 mov     rax, [rbp+var_218]
__text:000000010000361C                 mov     [rbp+var_158], rax
__text:0000000100003623                 mov     rax, [rbp+var_158]
__text:000000010000362A                 mov     rax, [rax+18h]
__text:000000010000362E                 mov     [rbp+var_238], rax
__text:0000000100003635                 mov     rax, [rbp+var_238]
__text:000000010000363C                 cmp     rax, [rbp+var_230]
__text:0000000100003643                 jle     loc_100003666
__text:0000000100003649                 mov     rax, [rbp+var_230]
__text:0000000100003650                 mov     rcx, [rbp+var_238]
__text:0000000100003657                 sub     rcx, rax
__text:000000010000365A                 mov     [rbp+var_238], rcx
__text:0000000100003661                 jmp     loc_100003671
__text:0000000100003666 ; ---------------------------------------------------------------------------
__text:0000000100003666
__text:0000000100003666 loc_100003666:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+103↑j
__text:0000000100003666                 mov     [rbp+var_238], 0
__text:0000000100003671
__text:0000000100003671 loc_100003671:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+121↑j
__text:0000000100003671                 mov     rax, [rbp+var_208]
__text:0000000100003678                 mov     rcx, [rbp+var_200]
__text:000000010000367F                 sub     rax, rcx
__text:0000000100003682                 mov     [rbp+var_240], rax
__text:0000000100003689                 cmp     [rbp+var_240], 0
__text:0000000100003694                 jle     loc_100003771
__text:000000010000369A                 mov     rax, [rbp+var_1F8]
__text:00000001000036A1                 mov     rcx, [rbp+var_200]
__text:00000001000036A8                 mov     rdx, [rbp+var_240]
__text:00000001000036AF                 mov     [rbp+var_F8], rax
__text:00000001000036B6                 mov     [rbp+var_100], rcx
__text:00000001000036BD                 mov     [rbp+var_108], rdx
__text:00000001000036C4                 mov     rax, [rbp+var_F8]
__text:00000001000036CB                 mov     rcx, [rax]
__text:00000001000036CE                 mov     rcx, [rcx+60h]
__text:00000001000036D2                 mov     rsi, [rbp+var_100]
__text:00000001000036D9                 mov     rdx, [rbp+var_108]
__text:00000001000036E0                 mov     rdi, rax
__text:00000001000036E3                 call    rcx
__text:00000001000036E5                 cmp     rax, [rbp+var_240]
__text:00000001000036EC                 jz      loc_10000376C
__text:00000001000036F2                 lea     rax, [rbp+var_248]
__text:00000001000036F9                 lea     rcx, [rbp+var_F0]
__text:0000000100003700                 mov     [rbp+var_E0], rcx
__text:0000000100003707                 mov     [rbp+var_E8], 0FFFFFFFFFFFFFFFFh
__text:0000000100003712                 mov     rcx, [rbp+var_E0]
__text:0000000100003719                 mov     rdx, [rbp+var_E8]
__text:0000000100003720                 mov     [rbp+var_D0], rcx
__text:0000000100003727                 mov     [rbp+var_D8], rdx
__text:000000010000372E                 mov     rcx, [rbp+var_D0]
__text:0000000100003735                 mov     qword ptr [rcx], 0
__text:000000010000373C                 mov     rcx, [rbp+var_F0]
__text:0000000100003743                 mov     [rbp+var_248], rcx
__text:000000010000374A                 mov     [rbp+var_8], rax
__text:000000010000374E                 mov     [rbp+var_1F8], 0
__text:0000000100003759                 mov     rax, [rbp+var_1F8]
__text:0000000100003760                 mov     [rbp+var_1F0], rax
__text:0000000100003767                 jmp     loc_100003BC2
__text:000000010000376C ; ---------------------------------------------------------------------------
__text:000000010000376C
__text:000000010000376C loc_10000376C:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+1AC↑j
__text:000000010000376C                 jmp     $+5
__text:0000000100003771 ; ---------------------------------------------------------------------------
__text:0000000100003771
__text:0000000100003771 loc_100003771:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+154↑j
__text:0000000100003771                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_10000376C↑j
__text:0000000100003771                 cmp     [rbp+var_238], 0
__text:000000010000377C                 jle     loc_100003A7B
__text:0000000100003782                 lea     rax, [rbp+var_260]
__text:0000000100003789                 mov     rcx, [rbp+var_238]
__text:0000000100003790                 mov     dl, [rbp+var_219]
__text:0000000100003796                 mov     [rbp+var_48], rax
__text:000000010000379A                 mov     [rbp+var_50], rcx
__text:000000010000379E                 mov     [rbp+var_51], dl
__text:00000001000037A1                 mov     rax, [rbp+var_48]
__text:00000001000037A5                 mov     rcx, [rbp+var_50]
__text:00000001000037A9                 mov     dl, [rbp+var_51]
__text:00000001000037AC                 mov     [rbp+var_30], rax
__text:00000001000037B0                 mov     [rbp+var_38], rcx
__text:00000001000037B4                 mov     [rbp+var_39], dl
__text:00000001000037B7                 mov     rax, [rbp+var_30]
__text:00000001000037BB                 mov     [rbp+var_28], rax
__text:00000001000037BF                 mov     rcx, [rbp+var_28]
__text:00000001000037C3                 mov     [rbp+var_20], rcx
__text:00000001000037C7                 mov     rcx, [rbp+var_20]
__text:00000001000037CB                 mov     [rbp+var_18], rcx
__text:00000001000037CF                 mov     rcx, [rbp+var_18]
__text:00000001000037D3                 mov     [rbp+var_10], rcx
__text:00000001000037D7                 mov     rsi, [rbp+var_38]
__text:00000001000037DB                 mov     rdi, rax
__text:00000001000037DE                 movsx   edx, [rbp+var_39]
__text:00000001000037E2                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(ulong,char)
__text:00000001000037E7                 lea     rax, [rbp+var_260]
__text:00000001000037EE                 mov     rcx, [rbp+var_1F8]
__text:00000001000037F5                 mov     [rbp+var_C8], rax
__text:00000001000037FC                 mov     rax, [rbp+var_C8]
__text:0000000100003803                 mov     [rbp+var_C0], rax
__text:000000010000380A                 mov     rax, [rbp+var_C0]
__text:0000000100003811                 mov     [rbp+var_B8], rax
__text:0000000100003818                 mov     rsi, [rbp+var_B8]
__text:000000010000381F                 mov     [rbp+var_B0], rsi
__text:0000000100003826                 mov     rsi, [rbp+var_B0]
__text:000000010000382D                 mov     [rbp+var_A8], rsi
__text:0000000100003834                 mov     rsi, [rbp+var_A8]
__text:000000010000383B                 movzx   edx, byte ptr [rsi]
__text:000000010000383E                 and     edx, 1
__text:0000000100003844                 cmp     edx, 0
__text:000000010000384A                 mov     [rbp+var_290], rcx
__text:0000000100003851                 mov     [rbp+var_298], rax
__text:0000000100003858                 jz      loc_10000388D
__text:000000010000385E                 mov     rax, [rbp+var_298]
__text:0000000100003865                 mov     [rbp+var_78], rax
__text:0000000100003869                 mov     rcx, [rbp+var_78]
__text:000000010000386D                 mov     [rbp+var_70], rcx
__text:0000000100003871                 mov     rcx, [rbp+var_70]
__text:0000000100003875                 mov     [rbp+var_68], rcx
__text:0000000100003879                 mov     rcx, [rbp+var_68]
__text:000000010000387D                 mov     rcx, [rcx+10h]
__text:0000000100003881                 mov     [rbp+var_2A0], rcx
__text:0000000100003888                 jmp     loc_1000038E2
__text:000000010000388D ; ---------------------------------------------------------------------------
__text:000000010000388D
__text:000000010000388D loc_10000388D:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+318↑j
__text:000000010000388D                 mov     rax, [rbp+var_298]
__text:0000000100003894                 mov     [rbp+var_A0], rax
__text:000000010000389B                 mov     rcx, [rbp+var_A0]
__text:00000001000038A2                 mov     [rbp+var_98], rcx
__text:00000001000038A9                 mov     rcx, [rbp+var_98]
__text:00000001000038B0                 mov     [rbp+var_90], rcx
__text:00000001000038B7                 mov     rcx, [rbp+var_90]
__text:00000001000038BE                 add     rcx, 1
__text:00000001000038C5                 mov     [rbp+var_88], rcx
__text:00000001000038CC                 mov     rcx, [rbp+var_88]
__text:00000001000038D3                 mov     [rbp+var_80], rcx
__text:00000001000038D7                 mov     rcx, [rbp+var_80]
__text:00000001000038DB                 mov     [rbp+var_2A0], rcx
__text:00000001000038E2
__text:00000001000038E2 loc_1000038E2:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+348↑j
__text:00000001000038E2                 mov     rax, [rbp+var_2A0]
__text:00000001000038E9                 mov     [rbp+var_60], rax
__text:00000001000038ED                 mov     rcx, [rbp+var_238]
__text:00000001000038F4                 mov     rdx, [rbp+var_290]
__text:00000001000038FB                 mov     [rbp+var_110], rdx
__text:0000000100003902                 mov     [rbp+var_118], rax
__text:0000000100003909                 mov     [rbp+var_120], rcx
__text:0000000100003910                 mov     rax, [rbp+var_110]
__text:0000000100003917                 mov     rsi, [rax]
__text:000000010000391A                 mov     rsi, [rsi+60h]
__text:000000010000391E                 mov     rdi, [rbp+var_118]
__text:0000000100003925                 mov     [rbp+var_2A8], rdi
__text:000000010000392C                 mov     rdi, rax
__text:000000010000392F                 mov     rax, [rbp+var_2A8]
__text:0000000100003936                 mov     [rbp+var_2B0], rsi
__text:000000010000393D                 mov     rsi, rax
__text:0000000100003940                 mov     rdx, rcx
__text:0000000100003943                 mov     rcx, [rbp+var_2B0]
__text:000000010000394A                 call    rcx
__text:000000010000394C                 mov     [rbp+var_2B8], rax
__text:0000000100003953                 jmp     $+5
__text:0000000100003958 ; ---------------------------------------------------------------------------
__text:0000000100003958
__text:0000000100003958 loc_100003958:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+413↑j
__text:0000000100003958                 jmp     $+5
__text:000000010000395D ; ---------------------------------------------------------------------------
__text:000000010000395D
__text:000000010000395D loc_10000395D:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100003958↑j
__text:000000010000395D                 mov     rax, [rbp+var_2B8]
__text:0000000100003964                 cmp     rax, [rbp+var_238]
__text:000000010000396B                 jz      loc_100003A26
__text:0000000100003971                 lea     rax, [rbp+var_148]
__text:0000000100003978                 mov     [rbp+var_138], rax
__text:000000010000397F                 mov     [rbp+var_140], 0FFFFFFFFFFFFFFFFh
__text:000000010000398A                 mov     rax, [rbp+var_138]
__text:0000000100003991                 mov     rcx, [rbp+var_140]
__text:0000000100003998                 mov     [rbp+var_128], rax
__text:000000010000399F                 mov     [rbp+var_130], rcx
__text:00000001000039A6                 mov     rax, [rbp+var_128]
__text:00000001000039AD                 mov     qword ptr [rax], 0
__text:00000001000039B4                 mov     rax, [rbp+var_148]
__text:00000001000039BB                 mov     [rbp+var_2C0], rax
__text:00000001000039C2                 lea     rax, [rbp+var_278]
__text:00000001000039C9                 mov     rcx, [rbp+var_2C0]
__text:00000001000039D0                 mov     [rbp+var_278], rcx
__text:00000001000039D7                 mov     [rbp+var_150], rax
__text:00000001000039DE                 mov     [rbp+var_1F8], 0
__text:00000001000039E9                 mov     rax, [rbp+var_1F8]
__text:00000001000039F0                 mov     [rbp+var_1F0], rax
__text:00000001000039F7                 mov     [rbp+var_27C], 1
__text:0000000100003A01                 jmp     loc_100003A30
__text:0000000100003A06 ; ---------------------------------------------------------------------------
__text:0000000100003A06                 mov     ecx, edx
__text:0000000100003A08                 mov     [rbp+var_268], rax
__text:0000000100003A0F                 mov     [rbp+var_26C], ecx
__text:0000000100003A15                 lea     rdi, [rbp+var_260]
__text:0000000100003A1C                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100003A21                 jmp     loc_100003A76
__text:0000000100003A26 ; ---------------------------------------------------------------------------
__text:0000000100003A26
__text:0000000100003A26 loc_100003A26:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+42B↑j
__text:0000000100003A26                 mov     [rbp+var_27C], 0
__text:0000000100003A30
__text:0000000100003A30 loc_100003A30:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+4C1↑j
__text:0000000100003A30                 lea     rdi, [rbp+var_260]
__text:0000000100003A37                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100003A3C                 mov     eax, [rbp+var_27C]
__text:0000000100003A42                 mov     ecx, eax
__text:0000000100003A44                 sub     ecx, 1
__text:0000000100003A47                 mov     [rbp+var_2C4], eax
__text:0000000100003A4D                 mov     [rbp+var_2C8], ecx
__text:0000000100003A53                 jz      loc_100003BC2
__text:0000000100003A59                 jmp     $+5
__text:0000000100003A5E ; ---------------------------------------------------------------------------
__text:0000000100003A5E
__text:0000000100003A5E loc_100003A5E:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+519↑j
__text:0000000100003A5E                 mov     eax, [rbp+var_2C4]
__text:0000000100003A64                 test    eax, eax
__text:0000000100003A66                 jnz     loc_100003BEE
__text:0000000100003A6C                 jmp     $+5
__text:0000000100003A71 ; ---------------------------------------------------------------------------
__text:0000000100003A71
__text:0000000100003A71 loc_100003A71:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+52C↑j
__text:0000000100003A71                 jmp     loc_100003A7B
__text:0000000100003A76 ; ---------------------------------------------------------------------------
__text:0000000100003A76
__text:0000000100003A76 loc_100003A76:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+4E1↑j
__text:0000000100003A76                 jmp     loc_100003BD2
__text:0000000100003A7B ; ---------------------------------------------------------------------------
__text:0000000100003A7B
__text:0000000100003A7B loc_100003A7B:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+23C↑j
__text:0000000100003A7B                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100003A71↑j
__text:0000000100003A7B                 mov     rax, [rbp+var_210]
__text:0000000100003A82                 mov     rcx, [rbp+var_208]
__text:0000000100003A89                 sub     rax, rcx
__text:0000000100003A8C                 mov     [rbp+var_240], rax
__text:0000000100003A93                 cmp     [rbp+var_240], 0
__text:0000000100003A9E                 jle     loc_100003B7E
__text:0000000100003AA4                 mov     rax, [rbp+var_1F8]
__text:0000000100003AAB                 mov     rcx, [rbp+var_208]
__text:0000000100003AB2                 mov     rdx, [rbp+var_240]
__text:0000000100003AB9                 mov     [rbp+var_160], rax
__text:0000000100003AC0                 mov     [rbp+var_168], rcx
__text:0000000100003AC7                 mov     [rbp+var_170], rdx
__text:0000000100003ACE                 mov     rax, [rbp+var_160]
__text:0000000100003AD5                 mov     rcx, [rax]
__text:0000000100003AD8                 mov     rcx, [rcx+60h]
__text:0000000100003ADC                 mov     rsi, [rbp+var_168]
__text:0000000100003AE3                 mov     rdx, [rbp+var_170]
__text:0000000100003AEA                 mov     rdi, rax
__text:0000000100003AED                 call    rcx
__text:0000000100003AEF                 cmp     rax, [rbp+var_240]
__text:0000000100003AF6                 jz      loc_100003B79
__text:0000000100003AFC                 lea     rax, [rbp+var_288]
__text:0000000100003B03                 lea     rcx, [rbp+var_198]
__text:0000000100003B0A                 mov     [rbp+var_188], rcx
__text:0000000100003B11                 mov     [rbp+var_190], 0FFFFFFFFFFFFFFFFh
__text:0000000100003B1C                 mov     rcx, [rbp+var_188]
__text:0000000100003B23                 mov     rdx, [rbp+var_190]
__text:0000000100003B2A                 mov     [rbp+var_178], rcx
__text:0000000100003B31                 mov     [rbp+var_180], rdx
__text:0000000100003B38                 mov     rcx, [rbp+var_178]
__text:0000000100003B3F                 mov     qword ptr [rcx], 0
__text:0000000100003B46                 mov     rcx, [rbp+var_198]
__text:0000000100003B4D                 mov     [rbp+var_288], rcx
__text:0000000100003B54                 mov     [rbp+var_1A0], rax
__text:0000000100003B5B                 mov     [rbp+var_1F8], 0
__text:0000000100003B66                 mov     rax, [rbp+var_1F8]
__text:0000000100003B6D                 mov     [rbp+var_1F0], rax
__text:0000000100003B74                 jmp     loc_100003BC2
__text:0000000100003B79 ; ---------------------------------------------------------------------------
__text:0000000100003B79
__text:0000000100003B79 loc_100003B79:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+5B6↑j
__text:0000000100003B79                 jmp     $+5
__text:0000000100003B7E ; ---------------------------------------------------------------------------
__text:0000000100003B7E
__text:0000000100003B7E loc_100003B7E:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+55E↑j
__text:0000000100003B7E                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100003B79↑j
__text:0000000100003B7E                 mov     rax, [rbp+var_218]
__text:0000000100003B85                 mov     [rbp+var_1A8], rax
__text:0000000100003B8C                 mov     [rbp+var_1B0], 0
__text:0000000100003B97                 mov     rax, [rbp+var_1A8]
__text:0000000100003B9E                 mov     rcx, [rax+18h]
__text:0000000100003BA2                 mov     [rbp+var_1B8], rcx
__text:0000000100003BA9                 mov     rcx, [rbp+var_1B0]
__text:0000000100003BB0                 mov     [rax+18h], rcx
__text:0000000100003BB4                 mov     rax, [rbp+var_1F8]
__text:0000000100003BBB                 mov     [rbp+var_1F0], rax
__text:0000000100003BC2
__text:0000000100003BC2 loc_100003BC2:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+B8↑j
__text:0000000100003BC2                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+227↑j ...
__text:0000000100003BC2                 mov     rax, [rbp+var_1F0]
__text:0000000100003BC9                 add     rsp, 2D0h
__text:0000000100003BD0                 pop     rbp
__text:0000000100003BD1                 retn
__text:0000000100003BD2 ; ---------------------------------------------------------------------------
__text:0000000100003BD2
__text:0000000100003BD2 loc_100003BD2:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100003A76↑j
__text:0000000100003BD2                 mov     rdi, [rbp+var_268]
__text:0000000100003BD9                 call    __Unwind_Resume
__text:0000000100003BDE ; ---------------------------------------------------------------------------
__text:0000000100003BDE                 mov     ecx, edx
__text:0000000100003BE0                 mov     rdi, rax
__text:0000000100003BE3                 mov     [rbp+var_2CC], ecx
__text:0000000100003BE9                 call    ___clang_call_terminate
__text:0000000100003BEE ; ---------------------------------------------------------------------------
__text:0000000100003BEE
__text:0000000100003BEE loc_100003BEE:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+526↑j
__text:0000000100003BEE                 xchg    ax, ax
__text:0000000100003BEE __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ endp ; sp-analysis failed
__text:0000000100003BEE
__text:0000000100003BF0
__text:0000000100003BF0 ; =============== S U B R O U T I N E =======================================
__text:0000000100003BF0
__text:0000000100003BF0 ; Attributes: bp-based frame
__text:0000000100003BF0
__text:0000000100003BF0 ; void std::__1::vector<int, std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)
__text:0000000100003BF0 __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT_ proc near
__text:0000000100003BF0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT__ptr↓o
__text:0000000100003BF0
__text:0000000100003BF0 var_168         = qword ptr -168h
__text:0000000100003BF0 var_160         = qword ptr -160h
__text:0000000100003BF0 var_158         = qword ptr -158h
__text:0000000100003BF0 var_150         = qword ptr -150h
__text:0000000100003BF0 var_148         = qword ptr -148h
__text:0000000100003BF0 var_130         = byte ptr -130h
__text:0000000100003BF0 var_120         = qword ptr -120h
__text:0000000100003BF0 var_108         = qword ptr -108h
__text:0000000100003BF0 var_100         = qword ptr -100h
__text:0000000100003BF0 var_F8          = qword ptr -0F8h
__text:0000000100003BF0 var_F0          = qword ptr -0F0h
__text:0000000100003BF0 var_E8          = qword ptr -0E8h
__text:0000000100003BF0 var_E0          = qword ptr -0E0h
__text:0000000100003BF0 var_D8          = qword ptr -0D8h
__text:0000000100003BF0 var_D0          = qword ptr -0D0h
__text:0000000100003BF0 var_C8          = qword ptr -0C8h
__text:0000000100003BF0 var_C0          = qword ptr -0C0h
__text:0000000100003BF0 var_B8          = qword ptr -0B8h
__text:0000000100003BF0 var_B0          = qword ptr -0B0h
__text:0000000100003BF0 var_A8          = qword ptr -0A8h
__text:0000000100003BF0 var_A0          = qword ptr -0A0h
__text:0000000100003BF0 var_98          = qword ptr -98h
__text:0000000100003BF0 var_90          = qword ptr -90h
__text:0000000100003BF0 var_88          = qword ptr -88h
__text:0000000100003BF0 var_80          = qword ptr -80h
__text:0000000100003BF0 var_70          = qword ptr -70h
__text:0000000100003BF0 var_68          = qword ptr -68h
__text:0000000100003BF0 var_60          = byte ptr -60h
__text:0000000100003BF0 var_58          = qword ptr -58h
__text:0000000100003BF0 var_50          = qword ptr -50h
__text:0000000100003BF0 var_48          = qword ptr -48h
__text:0000000100003BF0 var_40          = qword ptr -40h
__text:0000000100003BF0 var_38          = qword ptr -38h
__text:0000000100003BF0 var_30          = qword ptr -30h
__text:0000000100003BF0 var_28          = qword ptr -28h
__text:0000000100003BF0 var_20          = qword ptr -20h
__text:0000000100003BF0 var_18          = qword ptr -18h
__text:0000000100003BF0 var_10          = qword ptr -10h
__text:0000000100003BF0 var_8           = qword ptr -8
__text:0000000100003BF0
__text:0000000100003BF0                 push    rbp
__text:0000000100003BF1                 mov     rbp, rsp
__text:0000000100003BF4                 sub     rsp, 170h
__text:0000000100003BFB                 mov     [rbp+var_F8], rdi
__text:0000000100003C02                 mov     [rbp+var_100], rsi
__text:0000000100003C09                 mov     rsi, [rbp+var_F8]
__text:0000000100003C10                 mov     rdi, rsi
__text:0000000100003C13                 mov     [rbp+var_F0], rdi
__text:0000000100003C1A                 mov     rdi, [rbp+var_F0]
__text:0000000100003C21                 add     rdi, 10h
__text:0000000100003C28                 mov     [rbp+var_E8], rdi
__text:0000000100003C2F                 mov     rdi, [rbp+var_E8]
__text:0000000100003C36                 mov     [rbp+var_E0], rdi
__text:0000000100003C3D                 mov     rdi, [rbp+var_E0]
__text:0000000100003C44                 mov     [rbp+var_108], rdi
__text:0000000100003C4B                 mov     [rbp+var_D8], rsi
__text:0000000100003C52                 mov     rdi, [rbp+var_D8]
__text:0000000100003C59                 mov     rax, [rdi+8]
__text:0000000100003C5D                 mov     rdi, [rdi]
__text:0000000100003C60                 sub     rax, rdi
__text:0000000100003C63                 sar     rax, 2
__text:0000000100003C67                 add     rax, 1
__text:0000000100003C6D                 mov     [rbp+var_B0], rsi
__text:0000000100003C74                 mov     [rbp+var_B8], rax
__text:0000000100003C7B                 mov     rax, [rbp+var_B0]
__text:0000000100003C82                 mov     rdi, rax
__text:0000000100003C85                 mov     [rbp+var_148], rsi
__text:0000000100003C8C                 mov     [rbp+var_150], rax
__text:0000000100003C93                 call    j___ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv ; std::__1::vector<int,std::__1::allocator<int>>::max_size(void)
__text:0000000100003C98                 mov     [rbp+var_C0], rax
__text:0000000100003C9F                 mov     rax, [rbp+var_B8]
__text:0000000100003CA6                 cmp     rax, [rbp+var_C0]
__text:0000000100003CAD                 jbe     loc_100003CC2
__text:0000000100003CB3                 mov     rax, [rbp+var_150]
__text:0000000100003CBA                 mov     rdi, rax
__text:0000000100003CBD                 call    __ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv ; std::__1::__vector_base_common<true>::__throw_length_error(void)
__text:0000000100003CC2
__text:0000000100003CC2 loc_100003CC2:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)+BD↑j
__text:0000000100003CC2                 mov     rax, [rbp+var_150]
__text:0000000100003CC9                 mov     [rbp+var_A0], rax
__text:0000000100003CD0                 mov     rcx, [rbp+var_A0]
__text:0000000100003CD7                 mov     [rbp+var_98], rcx
__text:0000000100003CDE                 mov     rcx, [rbp+var_98]
__text:0000000100003CE5                 mov     [rbp+var_90], rcx
__text:0000000100003CEC                 mov     rdx, [rbp+var_90]
__text:0000000100003CF3                 add     rdx, 10h
__text:0000000100003CFA                 mov     [rbp+var_88], rdx
__text:0000000100003D01                 mov     rdx, [rbp+var_88]
__text:0000000100003D08                 mov     [rbp+var_80], rdx
__text:0000000100003D0C                 mov     rdx, [rbp+var_80]
__text:0000000100003D10                 mov     rdx, [rdx]
__text:0000000100003D13                 mov     rcx, [rcx]
__text:0000000100003D16                 sub     rdx, rcx
__text:0000000100003D19                 sar     rdx, 2
__text:0000000100003D1D                 mov     [rbp+var_C8], rdx
__text:0000000100003D24                 mov     rcx, [rbp+var_C8]
__text:0000000100003D2B                 mov     rdx, [rbp+var_C0]
__text:0000000100003D32                 shr     rdx, 1
__text:0000000100003D36                 cmp     rcx, rdx
__text:0000000100003D39                 jb      loc_100003D52
__text:0000000100003D3F                 mov     rax, [rbp+var_C0]
__text:0000000100003D46                 mov     [rbp+var_A8], rax
__text:0000000100003D4D                 jmp     loc_100003DE2
__text:0000000100003D52 ; ---------------------------------------------------------------------------
__text:0000000100003D52
__text:0000000100003D52 loc_100003D52:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)+149↑j
__text:0000000100003D52                 lea     rax, [rbp+var_60]
__text:0000000100003D56                 lea     rcx, [rbp+var_B8]
__text:0000000100003D5D                 lea     rdx, [rbp+var_D0]
__text:0000000100003D64                 mov     rsi, [rbp+var_C8]
__text:0000000100003D6B                 shl     rsi, 1
__text:0000000100003D6F                 mov     [rbp+var_D0], rsi
__text:0000000100003D76                 mov     [rbp+var_68], rdx
__text:0000000100003D7A                 mov     [rbp+var_70], rcx
__text:0000000100003D7E                 mov     rcx, [rbp+var_68]
__text:0000000100003D82                 mov     rdx, [rbp+var_70]
__text:0000000100003D86                 mov     [rbp+var_50], rcx
__text:0000000100003D8A                 mov     [rbp+var_58], rdx
__text:0000000100003D8E                 mov     rcx, [rbp+var_50]
__text:0000000100003D92                 mov     rdx, [rbp+var_58]
__text:0000000100003D96                 mov     [rbp+var_38], rax
__text:0000000100003D9A                 mov     [rbp+var_40], rcx
__text:0000000100003D9E                 mov     [rbp+var_48], rdx
__text:0000000100003DA2                 mov     rax, [rbp+var_40]
__text:0000000100003DA6                 mov     rax, [rax]
__text:0000000100003DA9                 mov     rcx, [rbp+var_48]
__text:0000000100003DAD                 cmp     rax, [rcx]
__text:0000000100003DB0                 jnb     loc_100003DC6
__text:0000000100003DB6                 mov     rax, [rbp+var_58]
__text:0000000100003DBA                 mov     [rbp+var_158], rax
__text:0000000100003DC1                 jmp     loc_100003DD1
__text:0000000100003DC6 ; ---------------------------------------------------------------------------
__text:0000000100003DC6
__text:0000000100003DC6 loc_100003DC6:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)+1C0↑j
__text:0000000100003DC6                 mov     rax, [rbp+var_50]
__text:0000000100003DCA                 mov     [rbp+var_158], rax
__text:0000000100003DD1
__text:0000000100003DD1 loc_100003DD1:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)+1D1↑j
__text:0000000100003DD1                 mov     rax, [rbp+var_158]
__text:0000000100003DD8                 mov     rax, [rax]
__text:0000000100003DDB                 mov     [rbp+var_A8], rax
__text:0000000100003DE2
__text:0000000100003DE2 loc_100003DE2:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)+15D↑j
__text:0000000100003DE2                 lea     rdi, [rbp+var_130]
__text:0000000100003DE9                 mov     rsi, [rbp+var_A8]
__text:0000000100003DF0                 mov     rax, [rbp+var_148]
__text:0000000100003DF7                 mov     [rbp+var_30], rax
__text:0000000100003DFB                 mov     rcx, [rbp+var_30]
__text:0000000100003DFF                 mov     rdx, [rcx+8]
__text:0000000100003E03                 mov     rcx, [rcx]
__text:0000000100003E06                 sub     rdx, rcx
__text:0000000100003E09                 sar     rdx, 2
__text:0000000100003E0D                 mov     rcx, [rbp+var_108]
__text:0000000100003E14                 call    j___ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC1EmmS3_ ; std::__1::__split_buffer<int,std::__1::allocator<int> &>::__split_buffer(ulong,ulong,std::__1::allocator<int> &)
__text:0000000100003E19                 mov     rax, [rbp+var_108]
__text:0000000100003E20                 mov     rcx, [rbp+var_120]
__text:0000000100003E27                 mov     [rbp+var_28], rcx
__text:0000000100003E2B                 mov     rcx, [rbp+var_28]
__text:0000000100003E2F                 mov     rdx, [rbp+var_100]
__text:0000000100003E36                 mov     [rbp+var_20], rdx
__text:0000000100003E3A                 mov     rdx, [rbp+var_20]
__text:0000000100003E3E                 mov     [rbp+var_8], rax
__text:0000000100003E42                 mov     [rbp+var_10], rcx
__text:0000000100003E46                 mov     [rbp+var_18], rdx
__text:0000000100003E4A                 mov     rax, [rbp+var_10]
__text:0000000100003E4E                 cmp     rax, 0
__text:0000000100003E54                 mov     [rbp+var_160], rax
__text:0000000100003E5B                 jz      loc_100003E7E
__text:0000000100003E61                 mov     rax, [rbp+var_160]
__text:0000000100003E68                 mov     rcx, [rbp+var_18]
__text:0000000100003E6C                 mov     edx, [rcx]
__text:0000000100003E6E                 mov     rcx, [rbp+var_160]
__text:0000000100003E75                 mov     [rcx], edx
__text:0000000100003E77                 mov     [rbp+var_168], rax
__text:0000000100003E7E
__text:0000000100003E7E loc_100003E7E:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)+26B↑j
__text:0000000100003E7E                 mov     rax, [rbp+var_120]
__text:0000000100003E85                 add     rax, 4
__text:0000000100003E89                 mov     [rbp+var_120], rax
__text:0000000100003E90                 lea     rsi, [rbp+var_130]
__text:0000000100003E97                 mov     rdi, [rbp+var_148]
__text:0000000100003E9E                 call    j___ZNSt3__16vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE ; std::__1::vector<int,std::__1::allocator<int>>::__swap_out_circular_buffer(std::__1::__split_buffer<int,std::__1::allocator<int>&> &)
__text:0000000100003EA3                 jmp     $+5
__text:0000000100003EA8 ; ---------------------------------------------------------------------------
__text:0000000100003EA8
__text:0000000100003EA8 loc_100003EA8:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::__push_back_slow_path<int const>(int const &)+2B3↑j
__text:0000000100003EA8                 lea     rdi, [rbp+var_130]
__text:0000000100003EAF                 call    j___ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED1Ev ; std::__1::__split_buffer<int,std::__1::allocator<int> &>::~__split_buffer()
__text:0000000100003EB4                 add     rsp, 170h
__text:0000000100003EBB                 pop     rbp
__text:0000000100003EBC                 retn
__text:0000000100003EBC __ZNSt3__16vectorIiNS_9allocatorIiEEE21__push_back_slow_pathIKiEEvRT_ endp
__text:0000000100003EBC
__text:0000000100003EBD ; ---------------------------------------------------------------------------
__text:0000000100003EBD                 mov     ecx, edx
__text:0000000100003EBF                 mov     [rbp-138h], rax
__text:0000000100003EC6                 mov     [rbp-13Ch], ecx
__text:0000000100003ECC                 lea     rdi, [rbp-130h]
__text:0000000100003ED3                 call    j___ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED1Ev ; std::__1::__split_buffer<int,std::__1::allocator<int> &>::~__split_buffer()
__text:0000000100003ED8                 jmp     $+5
__text:0000000100003EDD ; ---------------------------------------------------------------------------
__text:0000000100003EDD
__text:0000000100003EDD loc_100003EDD:                          ; CODE XREF: __text:0000000100003ED8↑j
__text:0000000100003EDD                 jmp     $+5
__text:0000000100003EE2 ; ---------------------------------------------------------------------------
__text:0000000100003EE2
__text:0000000100003EE2 loc_100003EE2:                          ; CODE XREF: __text:loc_100003EDD↑j
__text:0000000100003EE2                 mov     rdi, [rbp-138h]
__text:0000000100003EE9                 call    __Unwind_Resume
__text:0000000100003EEE ; ---------------------------------------------------------------------------
__text:0000000100003EEE                 mov     ecx, edx
__text:0000000100003EF0                 mov     rdi, rax
__text:0000000100003EF3                 mov     [rbp-16Ch], ecx
__text:0000000100003EF9                 call    ___clang_call_terminate
__text:0000000100003EF9 ; ---------------------------------------------------------------------------
__text:0000000100003EFE                 align 20h
__text:0000000100003F00
__text:0000000100003F00 ; =============== S U B R O U T I N E =======================================
__text:0000000100003F00
__text:0000000100003F00 ; Attributes: bp-based frame
__text:0000000100003F00
__text:0000000100003F00 ; std::__1::__split_buffer<int, std::__1::allocator<int> &>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int> &)
__text:0000000100003F00 __ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC1EmmS3_ proc near
__text:0000000100003F00                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC1EmmS3__ptr↓o
__text:0000000100003F00
__text:0000000100003F00 var_20          = qword ptr -20h
__text:0000000100003F00 var_18          = qword ptr -18h
__text:0000000100003F00 var_10          = qword ptr -10h
__text:0000000100003F00 var_8           = qword ptr -8
__text:0000000100003F00
__text:0000000100003F00                 push    rbp
__text:0000000100003F01                 mov     rbp, rsp
__text:0000000100003F04                 sub     rsp, 20h
__text:0000000100003F08                 mov     [rbp+var_8], rdi
__text:0000000100003F0C                 mov     [rbp+var_10], rsi
__text:0000000100003F10                 mov     [rbp+var_18], rdx
__text:0000000100003F14                 mov     [rbp+var_20], rcx
__text:0000000100003F18                 mov     rdi, [rbp+var_8]
__text:0000000100003F1C                 mov     rsi, [rbp+var_10]
__text:0000000100003F20                 mov     rdx, [rbp+var_18]
__text:0000000100003F24                 mov     rcx, [rbp+var_20]
__text:0000000100003F28                 call    j___ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_ ; std::__1::__split_buffer<int,std::__1::allocator<int> &>::__split_buffer(ulong,ulong,std::__1::allocator<int> &)
__text:0000000100003F2D                 add     rsp, 20h
__text:0000000100003F31                 pop     rbp
__text:0000000100003F32                 retn
__text:0000000100003F32 __ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC1EmmS3_ endp
__text:0000000100003F32
__text:0000000100003F32 ; ---------------------------------------------------------------------------
__text:0000000100003F33                 align 20h
__text:0000000100003F40
__text:0000000100003F40 ; =============== S U B R O U T I N E =======================================
__text:0000000100003F40
__text:0000000100003F40 ; Attributes: bp-based frame
__text:0000000100003F40
__text:0000000100003F40 ; std::__1::vector<int, std::__1::allocator<int>>::__swap_out_circular_buffer(std::__1::__split_buffer<int, std::__1::allocator<int>&> &)
__text:0000000100003F40 __ZNSt3__16vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE proc near
__text:0000000100003F40                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE_ptr↓o
__text:0000000100003F40
__text:0000000100003F40 var_138         = qword ptr -138h
__text:0000000100003F40 var_130         = qword ptr -130h
__text:0000000100003F40 var_128         = qword ptr -128h
__text:0000000100003F40 var_120         = qword ptr -120h
__text:0000000100003F40 var_118         = qword ptr -118h
__text:0000000100003F40 var_110         = qword ptr -110h
__text:0000000100003F40 var_108         = qword ptr -108h
__text:0000000100003F40 var_100         = qword ptr -100h
__text:0000000100003F40 var_F8          = qword ptr -0F8h
__text:0000000100003F40 var_F0          = qword ptr -0F0h
__text:0000000100003F40 var_E8          = qword ptr -0E8h
__text:0000000100003F40 var_E0          = qword ptr -0E0h
__text:0000000100003F40 var_D8          = qword ptr -0D8h
__text:0000000100003F40 var_D0          = qword ptr -0D0h
__text:0000000100003F40 var_C8          = qword ptr -0C8h
__text:0000000100003F40 var_C0          = qword ptr -0C0h
__text:0000000100003F40 var_B8          = qword ptr -0B8h
__text:0000000100003F40 var_B0          = qword ptr -0B0h
__text:0000000100003F40 var_A8          = qword ptr -0A8h
__text:0000000100003F40 var_A0          = qword ptr -0A0h
__text:0000000100003F40 var_98          = qword ptr -98h
__text:0000000100003F40 var_90          = qword ptr -90h
__text:0000000100003F40 var_88          = qword ptr -88h
__text:0000000100003F40 var_80          = qword ptr -80h
__text:0000000100003F40 var_78          = qword ptr -78h
__text:0000000100003F40 var_70          = qword ptr -70h
__text:0000000100003F40 var_68          = qword ptr -68h
__text:0000000100003F40 var_60          = qword ptr -60h
__text:0000000100003F40 var_58          = qword ptr -58h
__text:0000000100003F40 var_50          = qword ptr -50h
__text:0000000100003F40 var_48          = qword ptr -48h
__text:0000000100003F40 var_40          = qword ptr -40h
__text:0000000100003F40 var_38          = qword ptr -38h
__text:0000000100003F40 var_30          = qword ptr -30h
__text:0000000100003F40 var_28          = qword ptr -28h
__text:0000000100003F40 var_20          = qword ptr -20h
__text:0000000100003F40 var_18          = qword ptr -18h
__text:0000000100003F40 var_10          = qword ptr -10h
__text:0000000100003F40 var_8           = qword ptr -8
__text:0000000100003F40
__text:0000000100003F40                 push    rbp
__text:0000000100003F41                 mov     rbp, rsp
__text:0000000100003F44                 sub     rsp, 140h
__text:0000000100003F4B                 lea     rax, [rbp+var_E8]
__text:0000000100003F52                 lea     rcx, [rbp+var_88]
__text:0000000100003F59                 lea     rdx, [rbp+var_58]
__text:0000000100003F5D                 mov     r8, 0
__text:0000000100003F67                 mov     [rbp+var_110], rdi
__text:0000000100003F6E                 mov     [rbp+var_118], rsi
__text:0000000100003F75                 mov     rsi, [rbp+var_110]
__text:0000000100003F7C                 mov     rdi, rsi
__text:0000000100003F7F                 mov     [rbp+var_108], rdi
__text:0000000100003F86                 mov     rdi, [rbp+var_108]
__text:0000000100003F8D                 add     rdi, 10h
__text:0000000100003F94                 mov     [rbp+var_100], rdi
__text:0000000100003F9B                 mov     rdi, [rbp+var_100]
__text:0000000100003FA2                 mov     [rbp+var_F8], rdi
__text:0000000100003FA9                 mov     rdi, [rbp+var_F8]
__text:0000000100003FB0                 mov     r9, [rsi]
__text:0000000100003FB3                 mov     r10, [rsi+8]
__text:0000000100003FB7                 mov     r11, [rbp+var_118]
__text:0000000100003FBE                 add     r11, 8
__text:0000000100003FC5                 mov     [rbp+var_8], rdi
__text:0000000100003FC9                 mov     [rbp+var_10], r9
__text:0000000100003FCD                 mov     [rbp+var_18], r10
__text:0000000100003FD1                 mov     [rbp+var_20], r11
__text:0000000100003FD5                 mov     rdi, [rbp+var_18]
__text:0000000100003FD9                 mov     r9, [rbp+var_10]
__text:0000000100003FDD                 sub     rdi, r9
__text:0000000100003FE0                 sar     rdi, 2
__text:0000000100003FE4                 mov     [rbp+var_28], rdi
__text:0000000100003FE8                 mov     rdi, [rbp+var_28]
__text:0000000100003FEC                 mov     r9, [rbp+var_20]
__text:0000000100003FF0                 mov     r10, [r9]
__text:0000000100003FF3                 sub     r8, rdi
__text:0000000100003FF6                 shl     r8, 2
__text:0000000100003FFA                 add     r10, r8
__text:0000000100003FFD                 mov     [r9], r10
__text:0000000100004000                 mov     rdi, [rbp+var_20]
__text:0000000100004004                 mov     rdi, [rdi]      ; void *
__text:0000000100004007                 mov     r8, [rbp+var_10]
__text:000000010000400B                 mov     r9, [rbp+var_28]
__text:000000010000400F                 shl     r9, 2
__text:0000000100004013                 mov     [rbp+var_120], rsi
__text:000000010000401A                 mov     rsi, r8         ; void *
__text:000000010000401D                 mov     [rbp+var_128], rdx
__text:0000000100004024                 mov     rdx, r9         ; size_t
__text:0000000100004027                 mov     [rbp+var_130], rcx
__text:000000010000402E                 mov     [rbp+var_138], rax
__text:0000000100004035                 call    _memcpy
__text:000000010000403A                 mov     rax, [rbp+var_120]
__text:0000000100004041                 mov     rcx, [rbp+var_118]
__text:0000000100004048                 add     rcx, 8
__text:000000010000404F                 mov     [rbp+var_48], rax
__text:0000000100004053                 mov     [rbp+var_50], rcx
__text:0000000100004057                 mov     rax, [rbp+var_48]
__text:000000010000405B                 mov     [rbp+var_40], rax
__text:000000010000405F                 mov     rax, [rbp+var_40]
__text:0000000100004063                 mov     rax, [rax]
__text:0000000100004066                 mov     [rbp+var_58], rax
__text:000000010000406A                 mov     rax, [rbp+var_50]
__text:000000010000406E                 mov     [rbp+var_30], rax
__text:0000000100004072                 mov     rax, [rbp+var_30]
__text:0000000100004076                 mov     rax, [rax]
__text:0000000100004079                 mov     rcx, [rbp+var_48]
__text:000000010000407D                 mov     [rcx], rax
__text:0000000100004080                 mov     rax, [rbp+var_128]
__text:0000000100004087                 mov     [rbp+var_38], rax
__text:000000010000408B                 mov     rcx, [rbp+var_38]
__text:000000010000408F                 mov     rcx, [rcx]
__text:0000000100004092                 mov     rdx, [rbp+var_50]
__text:0000000100004096                 mov     [rdx], rcx
__text:0000000100004099                 mov     rcx, [rbp+var_120]
__text:00000001000040A0                 add     rcx, 8
__text:00000001000040A7                 mov     rdx, [rbp+var_118]
__text:00000001000040AE                 add     rdx, 10h
__text:00000001000040B5                 mov     [rbp+var_78], rcx
__text:00000001000040B9                 mov     [rbp+var_80], rdx
__text:00000001000040BD                 mov     rcx, [rbp+var_78]
__text:00000001000040C1                 mov     [rbp+var_70], rcx
__text:00000001000040C5                 mov     rcx, [rbp+var_70]
__text:00000001000040C9                 mov     rcx, [rcx]
__text:00000001000040CC                 mov     [rbp+var_88], rcx
__text:00000001000040D3                 mov     rcx, [rbp+var_80]
__text:00000001000040D7                 mov     [rbp+var_60], rcx
__text:00000001000040DB                 mov     rcx, [rbp+var_60]
__text:00000001000040DF                 mov     rcx, [rcx]
__text:00000001000040E2                 mov     rdx, [rbp+var_78]
__text:00000001000040E6                 mov     [rdx], rcx
__text:00000001000040E9                 mov     rcx, [rbp+var_130]
__text:00000001000040F0                 mov     [rbp+var_68], rcx
__text:00000001000040F4                 mov     rdx, [rbp+var_68]
__text:00000001000040F8                 mov     rdx, [rdx]
__text:00000001000040FB                 mov     rsi, [rbp+var_80]
__text:00000001000040FF                 mov     [rsi], rdx
__text:0000000100004102                 mov     rdx, [rbp+var_120]
__text:0000000100004109                 mov     [rbp+var_A0], rdx
__text:0000000100004110                 mov     rdx, [rbp+var_A0]
__text:0000000100004117                 add     rdx, 10h
__text:000000010000411E                 mov     [rbp+var_98], rdx
__text:0000000100004125                 mov     rdx, [rbp+var_98]
__text:000000010000412C                 mov     [rbp+var_90], rdx
__text:0000000100004133                 mov     rdx, [rbp+var_90]
__text:000000010000413A                 mov     rsi, [rbp+var_118]
__text:0000000100004141                 mov     [rbp+var_B8], rsi
__text:0000000100004148                 mov     rsi, [rbp+var_B8]
__text:000000010000414F                 add     rsi, 18h
__text:0000000100004156                 mov     [rbp+var_B0], rsi
__text:000000010000415D                 mov     rsi, [rbp+var_B0]
__text:0000000100004164                 mov     [rbp+var_A8], rsi
__text:000000010000416B                 mov     rsi, [rbp+var_A8]
__text:0000000100004172                 mov     [rbp+var_D8], rdx
__text:0000000100004179                 mov     [rbp+var_E0], rsi
__text:0000000100004180                 mov     rdx, [rbp+var_D8]
__text:0000000100004187                 mov     [rbp+var_D0], rdx
__text:000000010000418E                 mov     rdx, [rbp+var_D0]
__text:0000000100004195                 mov     rdx, [rdx]
__text:0000000100004198                 mov     [rbp+var_E8], rdx
__text:000000010000419F                 mov     rdx, [rbp+var_E0]
__text:00000001000041A6                 mov     [rbp+var_C0], rdx
__text:00000001000041AD                 mov     rdx, [rbp+var_C0]
__text:00000001000041B4                 mov     rdx, [rdx]
__text:00000001000041B7                 mov     rsi, [rbp+var_D8]
__text:00000001000041BE                 mov     [rsi], rdx
__text:00000001000041C1                 mov     rdx, [rbp+var_138]
__text:00000001000041C8                 mov     [rbp+var_C8], rdx
__text:00000001000041CF                 mov     rsi, [rbp+var_C8]
__text:00000001000041D6                 mov     rsi, [rsi]
__text:00000001000041D9                 mov     rdi, [rbp+var_E0]
__text:00000001000041E0                 mov     [rdi], rsi
__text:00000001000041E3                 mov     rsi, [rbp+var_118]
__text:00000001000041EA                 mov     rsi, [rsi+8]
__text:00000001000041EE                 mov     rdi, [rbp+var_118]
__text:00000001000041F5                 mov     [rdi], rsi
__text:00000001000041F8                 mov     rsi, [rbp+var_120]
__text:00000001000041FF                 mov     [rbp+var_F0], rsi
__text:0000000100004206                 add     rsp, 140h
__text:000000010000420D                 pop     rbp
__text:000000010000420E                 retn
__text:000000010000420E __ZNSt3__16vectorIiNS_9allocatorIiEEE26__swap_out_circular_bufferERNS_14__split_bufferIiRS2_EE endp
__text:000000010000420E
__text:000000010000420E ; ---------------------------------------------------------------------------
__text:000000010000420F                 align 10h
__text:0000000100004210
__text:0000000100004210 ; =============== S U B R O U T I N E =======================================
__text:0000000100004210
__text:0000000100004210 ; Attributes: bp-based frame
__text:0000000100004210
__text:0000000100004210 ; std::__1::__split_buffer<int, std::__1::allocator<int> &>::~__split_buffer()
__text:0000000100004210 __ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED1Ev proc near
__text:0000000100004210                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED1Ev_ptr↓o
__text:0000000100004210
__text:0000000100004210 var_8           = qword ptr -8
__text:0000000100004210
__text:0000000100004210                 push    rbp
__text:0000000100004211                 mov     rbp, rsp
__text:0000000100004214                 sub     rsp, 10h
__text:0000000100004218                 mov     [rbp+var_8], rdi
__text:000000010000421C                 mov     rdi, [rbp+var_8]
__text:0000000100004220                 call    j___ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED2Ev ; std::__1::__split_buffer<int,std::__1::allocator<int> &>::~__split_buffer()
__text:0000000100004225                 add     rsp, 10h
__text:0000000100004229                 pop     rbp
__text:000000010000422A                 retn
__text:000000010000422A __ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED1Ev endp
__text:000000010000422A
__text:000000010000422A ; ---------------------------------------------------------------------------
__text:000000010000422B                 align 10h
__text:0000000100004230
__text:0000000100004230 ; =============== S U B R O U T I N E =======================================
__text:0000000100004230
__text:0000000100004230 ; Attributes: bp-based frame
__text:0000000100004230
__text:0000000100004230 ; std::__1::__split_buffer<int, std::__1::allocator<int> &>::~__split_buffer()
__text:0000000100004230 __ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED2Ev proc near
__text:0000000100004230                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED2Ev_ptr↓o
__text:0000000100004230
__text:0000000100004230 var_118         = qword ptr -118h
__text:0000000100004230 var_110         = qword ptr -110h
__text:0000000100004230 var_108         = qword ptr -108h
__text:0000000100004230 var_100         = qword ptr -100h
__text:0000000100004230 var_F0          = qword ptr -0F0h
__text:0000000100004230 var_E8          = qword ptr -0E8h
__text:0000000100004230 var_C8          = qword ptr -0C8h
__text:0000000100004230 var_C0          = qword ptr -0C0h
__text:0000000100004230 var_B8          = qword ptr -0B8h
__text:0000000100004230 var_B0          = qword ptr -0B0h
__text:0000000100004230 var_A8          = qword ptr -0A8h
__text:0000000100004230 var_90          = qword ptr -90h
__text:0000000100004230 var_88          = qword ptr -88h
__text:0000000100004230 var_80          = qword ptr -80h
__text:0000000100004230 var_78          = qword ptr -78h
__text:0000000100004230 var_70          = qword ptr -70h
__text:0000000100004230 var_68          = qword ptr -68h
__text:0000000100004230 var_60          = qword ptr -60h
__text:0000000100004230 var_58          = qword ptr -58h
__text:0000000100004230 var_50          = qword ptr -50h
__text:0000000100004230 var_48          = qword ptr -48h
__text:0000000100004230 var_40          = qword ptr -40h
__text:0000000100004230 var_38          = qword ptr -38h
__text:0000000100004230 var_30          = qword ptr -30h
__text:0000000100004230 var_28          = qword ptr -28h
__text:0000000100004230 var_20          = qword ptr -20h
__text:0000000100004230 var_18          = qword ptr -18h
__text:0000000100004230 var_10          = qword ptr -10h
__text:0000000100004230 var_8           = qword ptr -8
__text:0000000100004230
__text:0000000100004230                 push    rbp
__text:0000000100004231                 mov     rbp, rsp
__text:0000000100004234                 sub     rsp, 120h
__text:000000010000423B                 mov     [rbp+var_108], rdi
__text:0000000100004242                 mov     rdi, [rbp+var_108]
__text:0000000100004249                 mov     [rbp+var_100], rdi
__text:0000000100004250                 mov     rax, [rbp+var_100]
__text:0000000100004257                 mov     rcx, [rax+8]
__text:000000010000425B                 mov     [rbp+var_E8], rax
__text:0000000100004262                 mov     [rbp+var_F0], rcx
__text:0000000100004269                 mov     rax, [rbp+var_E8]
__text:0000000100004270                 mov     rcx, [rbp+var_F0]
__text:0000000100004277                 mov     [rbp+var_C0], rax
__text:000000010000427E                 mov     [rbp+var_C8], rcx
__text:0000000100004285                 mov     rax, [rbp+var_C0]
__text:000000010000428C                 mov     [rbp+var_110], rdi
__text:0000000100004293                 mov     [rbp+var_118], rax
__text:000000010000429A
__text:000000010000429A loc_10000429A:                          ; CODE XREF: std::__1::__split_buffer<int,std::__1::allocator<int> &>::~__split_buffer()+F9↓j
__text:000000010000429A                 mov     rax, [rbp+var_C8]
__text:00000001000042A1                 mov     rcx, [rbp+var_118]
__text:00000001000042A8                 cmp     rax, [rcx+10h]
__text:00000001000042AC                 jz      loc_10000432E
__text:00000001000042B2                 mov     rax, [rbp+var_118]
__text:00000001000042B9                 mov     [rbp+var_B8], rax
__text:00000001000042C0                 mov     rcx, [rbp+var_B8]
__text:00000001000042C7                 add     rcx, 18h
__text:00000001000042CE                 mov     [rbp+var_B0], rcx
__text:00000001000042D5                 mov     rcx, [rbp+var_B0]
__text:00000001000042DC                 mov     [rbp+var_A8], rcx
__text:00000001000042E3                 mov     rcx, [rbp+var_A8]
__text:00000001000042EA                 mov     rcx, [rcx+8]
__text:00000001000042EE                 mov     rdx, [rax+10h]
__text:00000001000042F2                 add     rdx, 0FFFFFFFFFFFFFFFCh
__text:00000001000042F9                 mov     [rax+10h], rdx
__text:00000001000042FD                 mov     [rbp+var_70], rdx
__text:0000000100004301                 mov     rdx, [rbp+var_70]
__text:0000000100004305                 mov     [rbp+var_88], rcx
__text:000000010000430C                 mov     [rbp+var_90], rdx
__text:0000000100004313                 mov     rcx, [rbp+var_88]
__text:000000010000431A                 mov     rdx, [rbp+var_90]
__text:0000000100004321                 mov     [rbp+var_78], rcx
__text:0000000100004325                 mov     [rbp+var_80], rdx
__text:0000000100004329                 jmp     loc_10000429A
__text:000000010000432E ; ---------------------------------------------------------------------------
__text:000000010000432E
__text:000000010000432E loc_10000432E:                          ; CODE XREF: std::__1::__split_buffer<int,std::__1::allocator<int> &>::~__split_buffer()+7C↑j
__text:000000010000432E                 mov     rax, [rbp+var_110]
__text:0000000100004335                 cmp     qword ptr [rax], 0
__text:000000010000433C                 jz      loc_1000043D3
__text:0000000100004342                 mov     rax, [rbp+var_110]
__text:0000000100004349                 mov     [rbp+var_38], rax
__text:000000010000434D                 mov     rcx, [rbp+var_38]
__text:0000000100004351                 add     rcx, 18h
__text:0000000100004358                 mov     [rbp+var_30], rcx
__text:000000010000435C                 mov     rcx, [rbp+var_30]
__text:0000000100004360                 mov     [rbp+var_28], rcx
__text:0000000100004364                 mov     rcx, [rbp+var_28]
__text:0000000100004368                 mov     rcx, [rcx+8]
__text:000000010000436C                 mov     rdx, [rax]
__text:000000010000436F                 mov     [rbp+var_20], rax
__text:0000000100004373                 mov     rsi, [rbp+var_20]
__text:0000000100004377                 mov     [rbp+var_18], rsi
__text:000000010000437B                 mov     rdi, [rbp+var_18]
__text:000000010000437F                 add     rdi, 18h
__text:0000000100004386                 mov     [rbp+var_10], rdi
__text:000000010000438A                 mov     rdi, [rbp+var_10]
__text:000000010000438E                 mov     [rbp+var_8], rdi
__text:0000000100004392                 mov     rdi, [rbp+var_8]
__text:0000000100004396                 mov     rdi, [rdi]
__text:0000000100004399                 mov     rsi, [rsi]
__text:000000010000439C                 sub     rdi, rsi
__text:000000010000439F                 sar     rdi, 2
__text:00000001000043A3                 mov     [rbp+var_58], rcx
__text:00000001000043A7                 mov     [rbp+var_60], rdx
__text:00000001000043AB                 mov     [rbp+var_68], rdi
__text:00000001000043AF                 mov     rcx, [rbp+var_58]
__text:00000001000043B3                 mov     rdx, [rbp+var_60]
__text:00000001000043B7                 mov     rsi, [rbp+var_68]
__text:00000001000043BB                 mov     [rbp+var_40], rcx
__text:00000001000043BF                 mov     [rbp+var_48], rdx
__text:00000001000043C3                 mov     [rbp+var_50], rsi
__text:00000001000043C7                 mov     rcx, [rbp+var_48]
__text:00000001000043CB                 mov     rdi, rcx        ; void *
__text:00000001000043CE                 call    __ZdlPv         ; operator delete(void *)
__text:00000001000043D3
__text:00000001000043D3 loc_1000043D3:                          ; CODE XREF: std::__1::__split_buffer<int,std::__1::allocator<int> &>::~__split_buffer()+10C↑j
__text:00000001000043D3                 add     rsp, 120h
__text:00000001000043DA                 pop     rbp
__text:00000001000043DB                 retn
__text:00000001000043DB __ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED2Ev endp
__text:00000001000043DB
__text:00000001000043DB ; ---------------------------------------------------------------------------
__text:00000001000043DC                 align 20h
__text:00000001000043E0
__text:00000001000043E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000043E0
__text:00000001000043E0 ; Attributes: bp-based frame
__text:00000001000043E0
__text:00000001000043E0 ; std::__1::vector<int, std::__1::allocator<int>>::max_size(void)const
__text:00000001000043E0 __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv proc near
__text:00000001000043E0                                         ; DATA XREF: __la_symbol_ptr:__ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv_ptr↓o
__text:00000001000043E0
__text:00000001000043E0 var_D8          = qword ptr -0D8h
__text:00000001000043E0 var_D0          = qword ptr -0D0h
__text:00000001000043E0 var_B8          = qword ptr -0B8h
__text:00000001000043E0 var_B0          = qword ptr -0B0h
__text:00000001000043E0 var_A8          = qword ptr -0A8h
__text:00000001000043E0 var_A0          = qword ptr -0A0h
__text:00000001000043E0 var_98          = qword ptr -98h
__text:00000001000043E0 var_90          = qword ptr -90h
__text:00000001000043E0 var_80          = qword ptr -80h
__text:00000001000043E0 var_78          = qword ptr -78h
__text:00000001000043E0 var_70          = byte ptr -70h
__text:00000001000043E0 var_68          = qword ptr -68h
__text:00000001000043E0 var_60          = qword ptr -60h
__text:00000001000043E0 var_58          = qword ptr -58h
__text:00000001000043E0 var_50          = qword ptr -50h
__text:00000001000043E0 var_48          = qword ptr -48h
__text:00000001000043E0 var_20          = qword ptr -20h
__text:00000001000043E0 var_18          = qword ptr -18h
__text:00000001000043E0 var_8           = qword ptr -8
__text:00000001000043E0
__text:00000001000043E0                 push    rbp
__text:00000001000043E1                 mov     rbp, rsp
__text:00000001000043E4                 sub     rsp, 58h
__text:00000001000043E8                 lea     rax, [rbp+var_70]
__text:00000001000043EC                 lea     rcx, [rbp+var_B8]
__text:00000001000043F3                 lea     rdx, [rbp+var_B0]
__text:00000001000043FA                 mov     rsi, 0FFFFFFFFFFFFFFFFh
__text:0000000100004404                 mov     r8, 3FFFFFFFFFFFFFFFh
__text:000000010000440E                 mov     [rbp+var_A8], rdi
__text:0000000100004415                 mov     rdi, [rbp+var_A8]
__text:000000010000441C                 mov     [rbp+var_A0], rdi
__text:0000000100004423                 mov     rdi, [rbp+var_A0]
__text:000000010000442A                 add     rdi, 10h
__text:0000000100004431                 mov     [rbp+var_98], rdi
__text:0000000100004438                 mov     rdi, [rbp+var_98]
__text:000000010000443F                 mov     [rbp+var_90], rdi
__text:0000000100004446                 mov     rdi, [rbp+var_90]
__text:000000010000444D                 mov     [rbp+var_20], rdi
__text:0000000100004451                 mov     rdi, [rbp+var_20]
__text:0000000100004455                 mov     [rbp+var_18], rdi
__text:0000000100004459                 mov     rdi, [rbp+var_18]
__text:000000010000445D                 mov     [rbp+var_8], rdi
__text:0000000100004461                 mov     [rbp+var_B0], r8
__text:0000000100004468                 shr     rsi, 1
__text:000000010000446C                 mov     [rbp+var_B8], rsi
__text:0000000100004473                 mov     [rbp+var_78], rdx
__text:0000000100004477                 mov     [rbp+var_80], rcx
__text:000000010000447B                 mov     rcx, [rbp+var_78]
__text:000000010000447F                 mov     rdx, [rbp+var_80]
__text:0000000100004483                 mov     [rbp+var_60], rcx
__text:0000000100004487                 mov     [rbp+var_68], rdx
__text:000000010000448B                 mov     rcx, [rbp+var_68]
__text:000000010000448F                 mov     rdx, [rbp+var_60]
__text:0000000100004493                 mov     [rbp+var_48], rax
__text:0000000100004497                 mov     [rbp+var_50], rcx
__text:000000010000449B                 mov     [rbp+var_58], rdx
__text:000000010000449F                 mov     rax, [rbp+var_50]
__text:00000001000044A3                 mov     rax, [rax]
__text:00000001000044A6                 mov     rcx, [rbp+var_58]
__text:00000001000044AA                 cmp     rax, [rcx]
__text:00000001000044AD                 jnb     loc_1000044C3
__text:00000001000044B3                 mov     rax, [rbp+var_68]
__text:00000001000044B7                 mov     [rbp+var_D0], rax
__text:00000001000044BE                 jmp     loc_1000044CE
__text:00000001000044C3 ; ---------------------------------------------------------------------------
__text:00000001000044C3
__text:00000001000044C3 loc_1000044C3:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::max_size(void)+CD↑j
__text:00000001000044C3                 mov     rax, [rbp+var_60]
__text:00000001000044C7                 mov     [rbp+var_D0], rax
__text:00000001000044CE
__text:00000001000044CE loc_1000044CE:                          ; CODE XREF: std::__1::vector<int,std::__1::allocator<int>>::max_size(void)+DE↑j
__text:00000001000044CE                 mov     rax, [rbp+var_D0]
__text:00000001000044D5                 mov     [rbp+var_D8], rax
__text:00000001000044DC                 mov     rax, [rbp+var_D8]
__text:00000001000044E3                 mov     rax, [rax]
__text:00000001000044E6                 add     rsp, 58h
__text:00000001000044EA                 pop     rbp
__text:00000001000044EB                 retn
__text:00000001000044EB __ZNKSt3__16vectorIiNS_9allocatorIiEEE8max_sizeEv endp
__text:00000001000044EB
__text:00000001000044EB ; ---------------------------------------------------------------------------
__text:00000001000044EC                 align 10h
__text:00000001000044F0
__text:00000001000044F0 ; =============== S U B R O U T I N E =======================================
__text:00000001000044F0
__text:00000001000044F0 ; Attributes: bp-based frame
__text:00000001000044F0
__text:00000001000044F0 ; std::__1::__split_buffer<int, std::__1::allocator<int> &>::__split_buffer(unsigned long, unsigned long, std::__1::allocator<int> &)
__text:00000001000044F0 __ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_ proc near
__text:00000001000044F0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC2EmmS3__ptr↓o
__text:00000001000044F0
__text:00000001000044F0 var_160         = qword ptr -160h
__text:00000001000044F0 var_158         = qword ptr -158h
__text:00000001000044F0 var_150         = qword ptr -150h
__text:00000001000044F0 var_148         = qword ptr -148h
__text:00000001000044F0 var_140         = qword ptr -140h
__text:00000001000044F0 var_138         = qword ptr -138h
__text:00000001000044F0 var_130         = qword ptr -130h
__text:00000001000044F0 var_128         = qword ptr -128h
__text:00000001000044F0 var_120         = qword ptr -120h
__text:00000001000044F0 var_118         = qword ptr -118h
__text:00000001000044F0 var_110         = qword ptr -110h
__text:00000001000044F0 var_108         = qword ptr -108h
__text:00000001000044F0 var_100         = qword ptr -100h
__text:00000001000044F0 var_F8          = qword ptr -0F8h
__text:00000001000044F0 var_F0          = qword ptr -0F0h
__text:00000001000044F0 var_E8          = qword ptr -0E8h
__text:00000001000044F0 var_E0          = qword ptr -0E0h
__text:00000001000044F0 var_D8          = qword ptr -0D8h
__text:00000001000044F0 var_D0          = qword ptr -0D0h
__text:00000001000044F0 var_C8          = qword ptr -0C8h
__text:00000001000044F0 var_C0          = qword ptr -0C0h
__text:00000001000044F0 var_B8          = qword ptr -0B8h
__text:00000001000044F0 var_B0          = qword ptr -0B0h
__text:00000001000044F0 var_A8          = qword ptr -0A8h
__text:00000001000044F0 var_A0          = qword ptr -0A0h
__text:00000001000044F0 var_98          = qword ptr -98h
__text:00000001000044F0 var_90          = qword ptr -90h
__text:00000001000044F0 var_88          = qword ptr -88h
__text:00000001000044F0 var_80          = qword ptr -80h
__text:00000001000044F0 var_78          = qword ptr -78h
__text:00000001000044F0 var_70          = qword ptr -70h
__text:00000001000044F0 var_68          = qword ptr -68h
__text:00000001000044F0 var_60          = qword ptr -60h
__text:00000001000044F0 var_58          = qword ptr -58h
__text:00000001000044F0 var_50          = qword ptr -50h
__text:00000001000044F0 var_48          = qword ptr -48h
__text:00000001000044F0 var_40          = qword ptr -40h
__text:00000001000044F0 var_38          = qword ptr -38h
__text:00000001000044F0 var_30          = qword ptr -30h
__text:00000001000044F0 var_28          = qword ptr -28h
__text:00000001000044F0 var_20          = qword ptr -20h
__text:00000001000044F0 var_18          = qword ptr -18h
__text:00000001000044F0 var_10          = qword ptr -10h
__text:00000001000044F0 var_8           = qword ptr -8
__text:00000001000044F0
__text:00000001000044F0                 push    rbp
__text:00000001000044F1                 mov     rbp, rsp
__text:00000001000044F4                 sub     rsp, 160h
__text:00000001000044FB                 lea     rax, [rbp+var_28]
__text:00000001000044FF                 lea     r8, [rbp+var_48]
__text:0000000100004503                 lea     r9, [rbp+var_148]
__text:000000010000450A                 lea     r10, [rbp+var_120]
__text:0000000100004511                 mov     [rbp+var_128], rdi
__text:0000000100004518                 mov     [rbp+var_130], rsi
__text:000000010000451F                 mov     [rbp+var_138], rdx
__text:0000000100004526                 mov     [rbp+var_140], rcx
__text:000000010000452D                 mov     rcx, [rbp+var_128]
__text:0000000100004534                 mov     rdx, rcx
__text:0000000100004537                 add     rdx, 18h
__text:000000010000453E                 mov     [rbp+var_110], r10
__text:0000000100004545                 mov     [rbp+var_118], 0FFFFFFFFFFFFFFFFh
__text:0000000100004550                 mov     rsi, [rbp+var_110]
__text:0000000100004557                 mov     rdi, [rbp+var_118]
__text:000000010000455E                 mov     [rbp+var_100], rsi
__text:0000000100004565                 mov     [rbp+var_108], rdi
__text:000000010000456C                 mov     rsi, [rbp+var_100]
__text:0000000100004573                 mov     qword ptr [rsi], 0
__text:000000010000457A                 mov     rsi, [rbp+var_120]
__text:0000000100004581                 mov     [rbp+var_148], rsi
__text:0000000100004588                 mov     [rbp+var_88], r9
__text:000000010000458F                 mov     rsi, [rbp+var_140]
__text:0000000100004596                 mov     [rbp+var_58], rdx
__text:000000010000459A                 mov     [rbp+var_60], 0
__text:00000001000045A2                 mov     [rbp+var_68], rsi
__text:00000001000045A6                 mov     rdx, [rbp+var_58]
__text:00000001000045AA                 mov     rsi, [rbp+var_60]
__text:00000001000045AE                 mov     rdi, [rbp+var_68]
__text:00000001000045B2                 mov     [rbp+var_40], rdx
__text:00000001000045B6                 mov     [rbp+var_48], rsi
__text:00000001000045BA                 mov     [rbp+var_50], rdi
__text:00000001000045BE                 mov     rdx, [rbp+var_40]
__text:00000001000045C2                 mov     [rbp+var_38], r8
__text:00000001000045C6                 mov     rsi, [rbp+var_38]
__text:00000001000045CA                 mov     rsi, [rsi]
__text:00000001000045CD                 mov     rdi, [rbp+var_50]
__text:00000001000045D1                 mov     [rbp+var_8], rdi
__text:00000001000045D5                 mov     rdi, [rbp+var_8]
__text:00000001000045D9                 mov     [rbp+var_20], rdx
__text:00000001000045DD                 mov     [rbp+var_28], rsi
__text:00000001000045E1                 mov     [rbp+var_30], rdi
__text:00000001000045E5                 mov     rdx, [rbp+var_20]
__text:00000001000045E9                 mov     [rbp+var_18], rax
__text:00000001000045ED                 mov     rax, [rbp+var_18]
__text:00000001000045F1                 mov     rax, [rax]
__text:00000001000045F4                 mov     [rdx], rax
__text:00000001000045F7                 mov     rax, [rbp+var_30]
__text:00000001000045FB                 mov     [rbp+var_10], rax
__text:00000001000045FF                 mov     rax, [rbp+var_10]
__text:0000000100004603                 mov     [rdx+8], rax
__text:0000000100004607                 cmp     [rbp+var_130], 0
__text:0000000100004612                 mov     [rbp+var_158], rcx
__text:0000000100004619                 jz      loc_1000046A4
__text:000000010000461F                 mov     rax, [rbp+var_158]
__text:0000000100004626                 mov     [rbp+var_80], rax
__text:000000010000462A                 mov     rcx, [rbp+var_80]
__text:000000010000462E                 add     rcx, 18h
__text:0000000100004635                 mov     [rbp+var_78], rcx
__text:0000000100004639                 mov     rcx, [rbp+var_78]
__text:000000010000463D                 mov     [rbp+var_70], rcx
__text:0000000100004641                 mov     rcx, [rbp+var_70]
__text:0000000100004645                 mov     rcx, [rcx+8]
__text:0000000100004649                 mov     rdx, [rbp+var_130]
__text:0000000100004650                 mov     [rbp+var_A8], rcx
__text:0000000100004657                 mov     [rbp+var_B0], rdx
__text:000000010000465E                 mov     rcx, [rbp+var_A8]
__text:0000000100004665                 mov     rdx, [rbp+var_B0]
__text:000000010000466C                 mov     [rbp+var_90], rcx
__text:0000000100004673                 mov     [rbp+var_98], rdx
__text:000000010000467A                 mov     [rbp+var_A0], 0
__text:0000000100004685                 mov     rcx, [rbp+var_98]
__text:000000010000468C                 shl     rcx, 2
__text:0000000100004690                 mov     rdi, rcx        ; unsigned __int64
__text:0000000100004693                 call    __Znwm          ; operator new(ulong)
__text:0000000100004698                 mov     [rbp+var_160], rax
__text:000000010000469F                 jmp     loc_100004714
__text:00000001000046A4 ; ---------------------------------------------------------------------------
__text:00000001000046A4
__text:00000001000046A4 loc_1000046A4:                          ; CODE XREF: std::__1::__split_buffer<int,std::__1::allocator<int> &>::__split_buffer(ulong,ulong,std::__1::allocator<int> &)+129↑j
__text:00000001000046A4                 mov     rax, 0
__text:00000001000046AE                 lea     rcx, [rbp+var_150]
__text:00000001000046B5                 lea     rdx, [rbp+var_D8]
__text:00000001000046BC                 mov     [rbp+var_C8], rdx
__text:00000001000046C3                 mov     [rbp+var_D0], 0FFFFFFFFFFFFFFFFh
__text:00000001000046CE                 mov     rdx, [rbp+var_C8]
__text:00000001000046D5                 mov     rsi, [rbp+var_D0]
__text:00000001000046DC                 mov     [rbp+var_B8], rdx
__text:00000001000046E3                 mov     [rbp+var_C0], rsi
__text:00000001000046EA                 mov     rdx, [rbp+var_B8]
__text:00000001000046F1                 mov     qword ptr [rdx], 0
__text:00000001000046F8                 mov     rdx, [rbp+var_D8]
__text:00000001000046FF                 mov     [rbp+var_150], rdx
__text:0000000100004706                 mov     [rbp+var_E0], rcx
__text:000000010000470D                 mov     [rbp+var_160], rax
__text:0000000100004714
__text:0000000100004714 loc_100004714:                          ; CODE XREF: std::__1::__split_buffer<int,std::__1::allocator<int> &>::__split_buffer(ulong,ulong,std::__1::allocator<int> &)+1AF↑j
__text:0000000100004714                 mov     rax, [rbp+var_160]
__text:000000010000471B                 mov     rcx, [rbp+var_158]
__text:0000000100004722                 mov     [rcx], rax
__text:0000000100004725                 mov     rax, [rcx]
__text:0000000100004728                 mov     rdx, [rbp+var_138]
__text:000000010000472F                 shl     rdx, 2
__text:0000000100004733                 add     rax, rdx
__text:0000000100004736                 mov     [rcx+10h], rax
__text:000000010000473A                 mov     [rcx+8], rax
__text:000000010000473E                 mov     rax, [rcx]
__text:0000000100004741                 mov     rdx, [rbp+var_130]
__text:0000000100004748                 shl     rdx, 2
__text:000000010000474C                 add     rax, rdx
__text:000000010000474F                 mov     [rbp+var_F8], rcx
__text:0000000100004756                 mov     rdx, [rbp+var_F8]
__text:000000010000475D                 add     rdx, 18h
__text:0000000100004764                 mov     [rbp+var_F0], rdx
__text:000000010000476B                 mov     rdx, [rbp+var_F0]
__text:0000000100004772                 mov     [rbp+var_E8], rdx
__text:0000000100004779                 mov     rdx, [rbp+var_E8]
__text:0000000100004780                 mov     [rdx], rax
__text:0000000100004783                 add     rsp, 160h
__text:000000010000478A                 pop     rbp
__text:000000010000478B                 retn
__text:000000010000478B __ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_ endp
__text:000000010000478B
__text:000000010000478B ; ---------------------------------------------------------------------------
__text:000000010000478C                 align 10h
__text:0000000100004790
__text:0000000100004790 ; =============== S U B R O U T I N E =======================================
__text:0000000100004790
__text:0000000100004790 ; Attributes: bp-based frame
__text:0000000100004790
__text:0000000100004790 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::erase(std::__1::__tree_const_iterator<std::__1::pair<int, int>, std::__1::__tree_node<std::__1::pair<int, int>, void *> *, long>)
__text:0000000100004790 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5eraseENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEE proc near
__text:0000000100004790                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5eraseENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEE_ptr↓o
__text:0000000100004790
__text:0000000100004790 var_138         = qword ptr -138h
__text:0000000100004790 var_130         = qword ptr -130h
__text:0000000100004790 var_128         = qword ptr -128h
__text:0000000100004790 var_120         = qword ptr -120h
__text:0000000100004790 var_118         = qword ptr -118h
__text:0000000100004790 var_110         = qword ptr -110h
__text:0000000100004790 var_108         = qword ptr -108h
__text:0000000100004790 var_100         = qword ptr -100h
__text:0000000100004790 var_F8          = qword ptr -0F8h
__text:0000000100004790 var_F0          = qword ptr -0F0h
__text:0000000100004790 var_E8          = qword ptr -0E8h
__text:0000000100004790 var_E0          = qword ptr -0E0h
__text:0000000100004790 var_D8          = qword ptr -0D8h
__text:0000000100004790 var_D0          = qword ptr -0D0h
__text:0000000100004790 var_C8          = qword ptr -0C8h
__text:0000000100004790 var_C0          = qword ptr -0C0h
__text:0000000100004790 var_B8          = qword ptr -0B8h
__text:0000000100004790 var_B0          = qword ptr -0B0h
__text:0000000100004790 var_A8          = qword ptr -0A8h
__text:0000000100004790 var_A0          = qword ptr -0A0h
__text:0000000100004790 var_98          = qword ptr -98h
__text:0000000100004790 var_90          = qword ptr -90h
__text:0000000100004790 var_88          = qword ptr -88h
__text:0000000100004790 var_80          = qword ptr -80h
__text:0000000100004790 var_78          = qword ptr -78h
__text:0000000100004790 var_60          = qword ptr -60h
__text:0000000100004790 var_58          = qword ptr -58h
__text:0000000100004790 var_50          = qword ptr -50h
__text:0000000100004790 var_48          = qword ptr -48h
__text:0000000100004790 var_40          = qword ptr -40h
__text:0000000100004790 var_38          = qword ptr -38h
__text:0000000100004790 var_30          = qword ptr -30h
__text:0000000100004790 var_28          = qword ptr -28h
__text:0000000100004790 var_20          = qword ptr -20h
__text:0000000100004790 var_18          = qword ptr -18h
__text:0000000100004790 var_10          = qword ptr -10h
__text:0000000100004790 var_8           = qword ptr -8
__text:0000000100004790
__text:0000000100004790                 push    rbp
__text:0000000100004791                 mov     rbp, rsp
__text:0000000100004794                 sub     rsp, 140h
__text:000000010000479B                 lea     rax, [rbp+var_108]
__text:00000001000047A2                 mov     [rbp+var_110], rdi
__text:00000001000047A9                 mov     [rbp+var_118], rsi
__text:00000001000047B0                 mov     rsi, [rbp+var_110]
__text:00000001000047B7                 mov     rdi, [rbp+var_118]
__text:00000001000047BE                 mov     [rbp+var_120], rdi
__text:00000001000047C5                 mov     rdi, [rbp+var_120]
__text:00000001000047CC                 mov     [rbp+var_F8], rax
__text:00000001000047D3                 mov     [rbp+var_100], rdi
__text:00000001000047DA                 mov     rdi, [rbp+var_F8]
__text:00000001000047E1                 mov     rcx, [rbp+var_100]
__text:00000001000047E8                 mov     [rbp+var_E8], rdi
__text:00000001000047EF                 mov     [rbp+var_F0], rcx
__text:00000001000047F6                 mov     rcx, [rbp+var_E8]
__text:00000001000047FD                 mov     rdi, [rbp+var_F0]
__text:0000000100004804                 mov     [rcx], rdi
__text:0000000100004807                 mov     [rbp+var_B0], rax
__text:000000010000480E                 mov     rax, [rbp+var_B0]
__text:0000000100004815                 mov     rcx, [rax]
__text:0000000100004818                 mov     rdi, rcx
__text:000000010000481B                 mov     [rbp+var_130], rsi
__text:0000000100004822                 mov     [rbp+var_138], rax
__text:0000000100004829                 call    j___ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_ ; std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:000000010000482E                 mov     rcx, [rbp+var_138]
__text:0000000100004835                 mov     [rcx], rax
__text:0000000100004838                 mov     rax, [rbp+var_130]
__text:000000010000483F                 mov     [rbp+var_A8], rax
__text:0000000100004846                 mov     rsi, [rbp+var_A8]
__text:000000010000484D                 mov     rsi, [rsi]
__text:0000000100004850                 cmp     rsi, [rbp+var_120]
__text:0000000100004857                 jnz     loc_10000487C
__text:000000010000485D                 mov     rax, [rbp+var_108]
__text:0000000100004864                 mov     rcx, [rbp+var_130]
__text:000000010000486B                 mov     [rbp+var_A0], rcx
__text:0000000100004872                 mov     rdx, [rbp+var_A0]
__text:0000000100004879                 mov     [rdx], rax
__text:000000010000487C
__text:000000010000487C loc_10000487C:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::erase(std::__1::__tree_const_iterator<std::__1::pair<int,int>,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,long>)+C7↑j
__text:000000010000487C                 lea     rax, [rbp+var_118]
__text:0000000100004883                 mov     rcx, [rbp+var_130]
__text:000000010000488A                 mov     [rbp+var_18], rcx
__text:000000010000488E                 mov     rdx, [rbp+var_18]
__text:0000000100004892                 add     rdx, 10h
__text:0000000100004899                 mov     [rbp+var_10], rdx
__text:000000010000489D                 mov     rdx, [rbp+var_10]
__text:00000001000048A1                 mov     [rbp+var_8], rdx
__text:00000001000048A5                 mov     rdx, [rbp+var_8]
__text:00000001000048A9                 mov     rsi, [rdx]
__text:00000001000048AC                 add     rsi, 0FFFFFFFFFFFFFFFFh
__text:00000001000048B3                 mov     [rdx], rsi
__text:00000001000048B6                 mov     [rbp+var_30], rcx
__text:00000001000048BA                 mov     rdx, [rbp+var_30]
__text:00000001000048BE                 add     rdx, 8
__text:00000001000048C5                 mov     [rbp+var_28], rdx
__text:00000001000048C9                 mov     rdx, [rbp+var_28]
__text:00000001000048CD                 mov     [rbp+var_20], rdx
__text:00000001000048D1                 mov     rdx, [rbp+var_20]
__text:00000001000048D5                 mov     [rbp+var_128], rdx
__text:00000001000048DC                 mov     rdx, [rbp+var_128]
__text:00000001000048E3                 mov     [rbp+var_38], rax
__text:00000001000048E7                 mov     rax, [rbp+var_38]
__text:00000001000048EB                 mov     rax, [rax]
__text:00000001000048EE                 add     rax, 1Ch
__text:00000001000048F4                 mov     [rbp+var_40], rax
__text:00000001000048F8                 mov     rax, [rbp+var_40]
__text:00000001000048FC                 mov     [rbp+var_58], rdx
__text:0000000100004900                 mov     [rbp+var_60], rax
__text:0000000100004904                 mov     rax, [rbp+var_58]
__text:0000000100004908                 mov     rdx, [rbp+var_60]
__text:000000010000490C                 mov     [rbp+var_48], rax
__text:0000000100004910                 mov     [rbp+var_50], rdx
__text:0000000100004914                 mov     [rbp+var_98], rcx
__text:000000010000491B                 mov     rax, [rbp+var_98]
__text:0000000100004922                 add     rax, 8
__text:0000000100004928                 mov     [rbp+var_90], rax
__text:000000010000492F                 mov     rax, [rbp+var_90]
__text:0000000100004936                 mov     [rbp+var_88], rax
__text:000000010000493D                 mov     rax, [rbp+var_88]
__text:0000000100004944                 mov     [rbp+var_80], rax
__text:0000000100004948                 mov     rax, [rbp+var_80]
__text:000000010000494C                 mov     [rbp+var_78], rax
__text:0000000100004950                 mov     rax, [rbp+var_78]
__text:0000000100004954                 mov     rdi, [rax]
__text:0000000100004957                 mov     rax, [rbp+var_120]
__text:000000010000495E                 mov     rsi, rax
__text:0000000100004961                 call    j___ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)
__text:0000000100004966                 mov     rax, [rbp+var_128]
__text:000000010000496D                 mov     rcx, [rbp+var_120]
__text:0000000100004974                 mov     [rbp+var_D0], rax
__text:000000010000497B                 mov     [rbp+var_D8], rcx
__text:0000000100004982                 mov     [rbp+var_E0], 1
__text:000000010000498D                 mov     rax, [rbp+var_D0]
__text:0000000100004994                 mov     rcx, [rbp+var_D8]
__text:000000010000499B                 mov     rdx, [rbp+var_E0]
__text:00000001000049A2                 mov     [rbp+var_B8], rax
__text:00000001000049A9                 mov     [rbp+var_C0], rcx
__text:00000001000049B0                 mov     [rbp+var_C8], rdx
__text:00000001000049B7                 mov     rax, [rbp+var_C0]
__text:00000001000049BE                 mov     rdi, rax        ; void *
__text:00000001000049C1                 call    __ZdlPv         ; operator delete(void *)
__text:00000001000049C6                 mov     rax, [rbp+var_108]
__text:00000001000049CD                 add     rsp, 140h
__text:00000001000049D4                 pop     rbp
__text:00000001000049D5                 retn
__text:00000001000049D5 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5eraseENS_21__tree_const_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEE endp
__text:00000001000049D5
__text:00000001000049D5 ; ---------------------------------------------------------------------------
__text:00000001000049D6                 align 20h
__text:00000001000049E0
__text:00000001000049E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000049E0
__text:00000001000049E0 ; Attributes: bp-based frame
__text:00000001000049E0
__text:00000001000049E0 ; void std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *, std::__1::__tree_node_base<void *> *)
__text:00000001000049E0 __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ proc near
__text:00000001000049E0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5__ptr↓o
__text:00000001000049E0
__text:00000001000049E0 var_470         = qword ptr -470h
__text:00000001000049E0 var_468         = qword ptr -468h
__text:00000001000049E0 var_460         = qword ptr -460h
__text:00000001000049E0 var_458         = qword ptr -458h
__text:00000001000049E0 var_450         = qword ptr -450h
__text:00000001000049E0 var_448         = qword ptr -448h
__text:00000001000049E0 var_440         = qword ptr -440h
__text:00000001000049E0 var_438         = qword ptr -438h
__text:00000001000049E0 var_430         = qword ptr -430h
__text:00000001000049E0 var_428         = qword ptr -428h
__text:00000001000049E0 var_420         = qword ptr -420h
__text:00000001000049E0 var_418         = qword ptr -418h
__text:00000001000049E0 var_410         = qword ptr -410h
__text:00000001000049E0 var_408         = qword ptr -408h
__text:00000001000049E0 var_400         = qword ptr -400h
__text:00000001000049E0 var_3F8         = qword ptr -3F8h
__text:00000001000049E0 var_3F0         = qword ptr -3F0h
__text:00000001000049E0 var_3E8         = qword ptr -3E8h
__text:00000001000049E0 var_3E0         = qword ptr -3E0h
__text:00000001000049E0 var_3D8         = qword ptr -3D8h
__text:00000001000049E0 var_3D0         = qword ptr -3D0h
__text:00000001000049E0 var_3C8         = qword ptr -3C8h
__text:00000001000049E0 var_3C0         = qword ptr -3C0h
__text:00000001000049E0 var_3B8         = qword ptr -3B8h
__text:00000001000049E0 var_3B0         = qword ptr -3B0h
__text:00000001000049E0 var_3A8         = qword ptr -3A8h
__text:00000001000049E0 var_3A0         = qword ptr -3A0h
__text:00000001000049E0 var_398         = qword ptr -398h
__text:00000001000049E0 var_390         = qword ptr -390h
__text:00000001000049E0 var_388         = qword ptr -388h
__text:00000001000049E0 var_380         = qword ptr -380h
__text:00000001000049E0 var_378         = qword ptr -378h
__text:00000001000049E0 var_370         = qword ptr -370h
__text:00000001000049E0 var_368         = qword ptr -368h
__text:00000001000049E0 var_360         = qword ptr -360h
__text:00000001000049E0 var_358         = qword ptr -358h
__text:00000001000049E0 var_350         = qword ptr -350h
__text:00000001000049E0 var_348         = qword ptr -348h
__text:00000001000049E0 var_340         = qword ptr -340h
__text:00000001000049E0 var_338         = qword ptr -338h
__text:00000001000049E0 var_329         = byte ptr -329h
__text:00000001000049E0 var_328         = qword ptr -328h
__text:00000001000049E0 var_320         = qword ptr -320h
__text:00000001000049E0 var_318         = qword ptr -318h
__text:00000001000049E0 var_310         = qword ptr -310h
__text:00000001000049E0 var_308         = qword ptr -308h
__text:00000001000049E0 var_300         = qword ptr -300h
__text:00000001000049E0 var_2F8         = qword ptr -2F8h
__text:00000001000049E0 var_2E0         = qword ptr -2E0h
__text:00000001000049E0 var_2D8         = qword ptr -2D8h
__text:00000001000049E0 var_2D0         = qword ptr -2D0h
__text:00000001000049E0 var_2C8         = qword ptr -2C8h
__text:00000001000049E0 var_2C0         = qword ptr -2C0h
__text:00000001000049E0 var_2B8         = qword ptr -2B8h
__text:00000001000049E0 var_2B0         = qword ptr -2B0h
__text:00000001000049E0 var_2A8         = qword ptr -2A8h
__text:00000001000049E0 var_2A0         = qword ptr -2A0h
__text:00000001000049E0 var_298         = qword ptr -298h
__text:00000001000049E0 var_290         = qword ptr -290h
__text:00000001000049E0 var_288         = qword ptr -288h
__text:00000001000049E0 var_280         = qword ptr -280h
__text:00000001000049E0 var_278         = qword ptr -278h
__text:00000001000049E0 var_270         = qword ptr -270h
__text:00000001000049E0 var_268         = qword ptr -268h
__text:00000001000049E0 var_260         = qword ptr -260h
__text:00000001000049E0 var_258         = qword ptr -258h
__text:00000001000049E0 var_250         = qword ptr -250h
__text:00000001000049E0 var_248         = qword ptr -248h
__text:00000001000049E0 var_240         = qword ptr -240h
__text:00000001000049E0 var_238         = qword ptr -238h
__text:00000001000049E0 var_230         = qword ptr -230h
__text:00000001000049E0 var_228         = qword ptr -228h
__text:00000001000049E0 var_220         = qword ptr -220h
__text:00000001000049E0 var_218         = qword ptr -218h
__text:00000001000049E0 var_210         = qword ptr -210h
__text:00000001000049E0 var_208         = qword ptr -208h
__text:00000001000049E0 var_200         = qword ptr -200h
__text:00000001000049E0 var_1F8         = qword ptr -1F8h
__text:00000001000049E0 var_1F0         = qword ptr -1F0h
__text:00000001000049E0 var_1E8         = qword ptr -1E8h
__text:00000001000049E0 var_1E0         = qword ptr -1E0h
__text:00000001000049E0 var_1D8         = qword ptr -1D8h
__text:00000001000049E0 var_1D0         = qword ptr -1D0h
__text:00000001000049E0 var_1C8         = qword ptr -1C8h
__text:00000001000049E0 var_1C0         = qword ptr -1C0h
__text:00000001000049E0 var_1B8         = qword ptr -1B8h
__text:00000001000049E0 var_1B0         = qword ptr -1B0h
__text:00000001000049E0 var_1A8         = qword ptr -1A8h
__text:00000001000049E0 var_1A0         = qword ptr -1A0h
__text:00000001000049E0 var_198         = qword ptr -198h
__text:00000001000049E0 var_190         = qword ptr -190h
__text:00000001000049E0 var_188         = qword ptr -188h
__text:00000001000049E0 var_180         = qword ptr -180h
__text:00000001000049E0 var_178         = qword ptr -178h
__text:00000001000049E0 var_170         = qword ptr -170h
__text:00000001000049E0 var_168         = qword ptr -168h
__text:00000001000049E0 var_160         = qword ptr -160h
__text:00000001000049E0 var_158         = qword ptr -158h
__text:00000001000049E0 var_150         = qword ptr -150h
__text:00000001000049E0 var_148         = qword ptr -148h
__text:00000001000049E0 var_140         = qword ptr -140h
__text:00000001000049E0 var_138         = qword ptr -138h
__text:00000001000049E0 var_130         = qword ptr -130h
__text:00000001000049E0 var_128         = qword ptr -128h
__text:00000001000049E0 var_120         = qword ptr -120h
__text:00000001000049E0 var_118         = qword ptr -118h
__text:00000001000049E0 var_110         = qword ptr -110h
__text:00000001000049E0 var_108         = qword ptr -108h
__text:00000001000049E0 var_100         = qword ptr -100h
__text:00000001000049E0 var_F8          = qword ptr -0F8h
__text:00000001000049E0 var_F0          = qword ptr -0F0h
__text:00000001000049E0 var_E8          = qword ptr -0E8h
__text:00000001000049E0 var_E0          = qword ptr -0E0h
__text:00000001000049E0 var_D8          = qword ptr -0D8h
__text:00000001000049E0 var_D0          = qword ptr -0D0h
__text:00000001000049E0 var_C8          = qword ptr -0C8h
__text:00000001000049E0 var_C0          = qword ptr -0C0h
__text:00000001000049E0 var_B8          = qword ptr -0B8h
__text:00000001000049E0 var_B0          = qword ptr -0B0h
__text:00000001000049E0 var_A8          = qword ptr -0A8h
__text:00000001000049E0 var_A0          = qword ptr -0A0h
__text:00000001000049E0 var_98          = qword ptr -98h
__text:00000001000049E0 var_90          = qword ptr -90h
__text:00000001000049E0 var_88          = qword ptr -88h
__text:00000001000049E0 var_80          = qword ptr -80h
__text:00000001000049E0 var_78          = qword ptr -78h
__text:00000001000049E0 var_70          = qword ptr -70h
__text:00000001000049E0 var_68          = qword ptr -68h
__text:00000001000049E0 var_60          = qword ptr -60h
__text:00000001000049E0 var_58          = qword ptr -58h
__text:00000001000049E0 var_50          = qword ptr -50h
__text:00000001000049E0 var_48          = qword ptr -48h
__text:00000001000049E0 var_40          = qword ptr -40h
__text:00000001000049E0 var_38          = qword ptr -38h
__text:00000001000049E0 var_30          = qword ptr -30h
__text:00000001000049E0 var_28          = qword ptr -28h
__text:00000001000049E0 var_20          = qword ptr -20h
__text:00000001000049E0 var_18          = qword ptr -18h
__text:00000001000049E0 var_10          = qword ptr -10h
__text:00000001000049E0 var_8           = qword ptr -8
__text:00000001000049E0
__text:00000001000049E0                 push    rbp
__text:00000001000049E1                 mov     rbp, rsp
__text:00000001000049E4                 sub     rsp, 470h
__text:00000001000049EB                 lea     rax, [rbp+var_2C8]
__text:00000001000049F2                 mov     [rbp+var_2D0], rdi
__text:00000001000049F9                 mov     [rbp+var_2D8], rsi
__text:0000000100004A00                 mov     rsi, [rbp+var_2D8]
__text:0000000100004A07                 mov     rsi, [rsi]
__text:0000000100004A0A                 mov     [rbp+var_2B8], rax
__text:0000000100004A11                 mov     [rbp+var_2C0], 0FFFFFFFFFFFFFFFFh
__text:0000000100004A1C                 mov     rax, [rbp+var_2B8]
__text:0000000100004A23                 mov     rdi, [rbp+var_2C0]
__text:0000000100004A2A                 mov     [rbp+var_2A8], rax
__text:0000000100004A31                 mov     [rbp+var_2B0], rdi
__text:0000000100004A38                 mov     rax, [rbp+var_2A8]
__text:0000000100004A3F                 mov     qword ptr [rax], 0
__text:0000000100004A46                 mov     rax, [rbp+var_2C8]
__text:0000000100004A4D                 mov     [rbp+var_380], rsi
__text:0000000100004A54                 mov     [rbp+var_388], rax
__text:0000000100004A5B                 lea     rax, [rbp+var_2F8]
__text:0000000100004A62                 mov     rcx, [rbp+var_388]
__text:0000000100004A69                 mov     [rbp+var_2F8], rcx
__text:0000000100004A70                 mov     [rbp+var_2A0], rax
__text:0000000100004A77                 mov     rax, [rbp+var_380]
__text:0000000100004A7E                 cmp     rax, 0
__text:0000000100004A84                 jz      loc_100004B1C
__text:0000000100004A8A                 lea     rax, [rbp+var_298]
__text:0000000100004A91                 mov     rcx, [rbp+var_2D8]
__text:0000000100004A98                 mov     rcx, [rcx+8]
__text:0000000100004A9C                 mov     [rbp+var_288], rax
__text:0000000100004AA3                 mov     [rbp+var_290], 0FFFFFFFFFFFFFFFFh
__text:0000000100004AAE                 mov     rax, [rbp+var_288]
__text:0000000100004AB5                 mov     rdx, [rbp+var_290]
__text:0000000100004ABC                 mov     [rbp+var_278], rax
__text:0000000100004AC3                 mov     [rbp+var_280], rdx
__text:0000000100004ACA                 mov     rax, [rbp+var_278]
__text:0000000100004AD1                 mov     qword ptr [rax], 0
__text:0000000100004AD8                 mov     rax, [rbp+var_298]
__text:0000000100004ADF                 mov     [rbp+var_390], rcx
__text:0000000100004AE6                 mov     [rbp+var_398], rax
__text:0000000100004AED                 lea     rax, [rbp+var_300]
__text:0000000100004AF4                 mov     rcx, [rbp+var_398]
__text:0000000100004AFB                 mov     [rbp+var_300], rcx
__text:0000000100004B02                 mov     [rbp+var_1D8], rax
__text:0000000100004B09                 mov     rax, [rbp+var_390]
__text:0000000100004B10                 cmp     rax, 0
__text:0000000100004B16                 jnz     loc_100004B2F
__text:0000000100004B1C
__text:0000000100004B1C loc_100004B1C:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+A4↑j
__text:0000000100004B1C                 mov     rax, [rbp+var_2D8]
__text:0000000100004B23                 mov     [rbp+var_3A0], rax
__text:0000000100004B2A                 jmp     loc_100004B42
__text:0000000100004B2F ; ---------------------------------------------------------------------------
__text:0000000100004B2F
__text:0000000100004B2F loc_100004B2F:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+136↑j
__text:0000000100004B2F                 mov     rdi, [rbp+var_2D8]
__text:0000000100004B36                 call    j___ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_ ; std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100004B3B                 mov     [rbp+var_3A0], rax
__text:0000000100004B42
__text:0000000100004B42 loc_100004B42:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+14A↑j
__text:0000000100004B42                 mov     rax, [rbp+var_3A0]
__text:0000000100004B49                 lea     rcx, [rbp+var_1D0]
__text:0000000100004B50                 mov     [rbp+var_2E0], rax
__text:0000000100004B57                 mov     rax, [rbp+var_2E0]
__text:0000000100004B5E                 mov     rax, [rax]
__text:0000000100004B61                 mov     [rbp+var_1C0], rcx
__text:0000000100004B68                 mov     [rbp+var_1C8], 0FFFFFFFFFFFFFFFFh
__text:0000000100004B73                 mov     rcx, [rbp+var_1C0]
__text:0000000100004B7A                 mov     rdx, [rbp+var_1C8]
__text:0000000100004B81                 mov     [rbp+var_1B0], rcx
__text:0000000100004B88                 mov     [rbp+var_1B8], rdx
__text:0000000100004B8F                 mov     rcx, [rbp+var_1B0]
__text:0000000100004B96                 mov     qword ptr [rcx], 0
__text:0000000100004B9D                 mov     rcx, [rbp+var_1D0]
__text:0000000100004BA4                 mov     [rbp+var_3A8], rax
__text:0000000100004BAB                 mov     [rbp+var_3B0], rcx
__text:0000000100004BB2                 lea     rax, [rbp+var_310]
__text:0000000100004BB9                 mov     rcx, [rbp+var_3B0]
__text:0000000100004BC0                 mov     [rbp+var_310], rcx
__text:0000000100004BC7                 mov     [rbp+var_1A8], rax
__text:0000000100004BCE                 mov     rax, [rbp+var_3A8]
__text:0000000100004BD5                 cmp     rax, 0
__text:0000000100004BDB                 jz      loc_100004BF7
__text:0000000100004BE1                 mov     rax, [rbp+var_2E0]
__text:0000000100004BE8                 mov     rax, [rax]
__text:0000000100004BEB                 mov     [rbp+var_3B8], rax
__text:0000000100004BF2                 jmp     loc_100004C09
__text:0000000100004BF7 ; ---------------------------------------------------------------------------
__text:0000000100004BF7
__text:0000000100004BF7 loc_100004BF7:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+1FB↑j
__text:0000000100004BF7                 mov     rax, [rbp+var_2E0]
__text:0000000100004BFE                 mov     rax, [rax+8]
__text:0000000100004C02                 mov     [rbp+var_3B8], rax
__text:0000000100004C09
__text:0000000100004C09 loc_100004C09:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+212↑j
__text:0000000100004C09                 mov     rax, [rbp+var_3B8]
__text:0000000100004C10                 lea     rcx, [rbp+var_108]
__text:0000000100004C17                 mov     [rbp+var_308], rax
__text:0000000100004C1E                 mov     [rbp+var_F8], rcx
__text:0000000100004C25                 mov     [rbp+var_100], 0FFFFFFFFFFFFFFFFh
__text:0000000100004C30                 mov     rax, [rbp+var_F8]
__text:0000000100004C37                 mov     rcx, [rbp+var_100]
__text:0000000100004C3E                 mov     [rbp+var_E8], rax
__text:0000000100004C45                 mov     [rbp+var_F0], rcx
__text:0000000100004C4C                 mov     rax, [rbp+var_E8]
__text:0000000100004C53                 mov     qword ptr [rax], 0
__text:0000000100004C5A                 mov     rax, [rbp+var_108]
__text:0000000100004C61                 mov     [rbp+var_3C0], rax
__text:0000000100004C68                 lea     rax, [rbp+var_320]
__text:0000000100004C6F                 mov     rcx, [rbp+var_3C0]
__text:0000000100004C76                 mov     [rbp+var_320], rcx
__text:0000000100004C7D                 mov     [rbp+var_8], rax
__text:0000000100004C81                 lea     rax, [rbp+var_30]
__text:0000000100004C85                 mov     [rbp+var_318], 0
__text:0000000100004C90                 mov     rcx, [rbp+var_308]
__text:0000000100004C97                 mov     [rbp+var_20], rax
__text:0000000100004C9B                 mov     [rbp+var_28], 0FFFFFFFFFFFFFFFFh
__text:0000000100004CA3                 mov     rax, [rbp+var_20]
__text:0000000100004CA7                 mov     rdx, [rbp+var_28]
__text:0000000100004CAB                 mov     [rbp+var_10], rax
__text:0000000100004CAF                 mov     [rbp+var_18], rdx
__text:0000000100004CB3                 mov     rax, [rbp+var_10]
__text:0000000100004CB7                 mov     qword ptr [rax], 0
__text:0000000100004CBE                 mov     rax, [rbp+var_30]
__text:0000000100004CC2                 mov     [rbp+var_3C8], rcx
__text:0000000100004CC9                 mov     [rbp+var_3D0], rax
__text:0000000100004CD0                 lea     rax, [rbp+var_328]
__text:0000000100004CD7                 mov     rcx, [rbp+var_3D0]
__text:0000000100004CDE                 mov     [rbp+var_328], rcx
__text:0000000100004CE5                 mov     [rbp+var_38], rax
__text:0000000100004CE9                 mov     rax, [rbp+var_3C8]
__text:0000000100004CF0                 cmp     rax, 0
__text:0000000100004CF6                 jz      loc_100004D12
__text:0000000100004CFC                 mov     rax, [rbp+var_2E0]
__text:0000000100004D03                 mov     rax, [rax+10h]
__text:0000000100004D07                 mov     rcx, [rbp+var_308]
__text:0000000100004D0E                 mov     [rcx+10h], rax
__text:0000000100004D12
__text:0000000100004D12 loc_100004D12:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+316↑j
__text:0000000100004D12                 mov     rax, [rbp+var_2E0]
__text:0000000100004D19                 mov     [rbp+var_40], rax
__text:0000000100004D1D                 mov     rax, [rbp+var_40]
__text:0000000100004D21                 mov     rcx, [rbp+var_40]
__text:0000000100004D25                 mov     rcx, [rcx+10h]
__text:0000000100004D29                 cmp     rax, [rcx]
__text:0000000100004D2C                 jnz     loc_100004D89
__text:0000000100004D32                 mov     rax, [rbp+var_308]
__text:0000000100004D39                 mov     rcx, [rbp+var_2E0]
__text:0000000100004D40                 mov     rcx, [rcx+10h]
__text:0000000100004D44                 mov     [rcx], rax
__text:0000000100004D47                 mov     rax, [rbp+var_2E0]
__text:0000000100004D4E                 cmp     rax, [rbp+var_2D0]
__text:0000000100004D55                 jz      loc_100004D76
__text:0000000100004D5B                 mov     rax, [rbp+var_2E0]
__text:0000000100004D62                 mov     rax, [rax+10h]
__text:0000000100004D66                 mov     rax, [rax+8]
__text:0000000100004D6A                 mov     [rbp+var_318], rax
__text:0000000100004D71                 jmp     loc_100004D84
__text:0000000100004D76 ; ---------------------------------------------------------------------------
__text:0000000100004D76
__text:0000000100004D76 loc_100004D76:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+375↑j
__text:0000000100004D76                 mov     rax, [rbp+var_308]
__text:0000000100004D7D                 mov     [rbp+var_2D0], rax
__text:0000000100004D84
__text:0000000100004D84 loc_100004D84:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+391↑j
__text:0000000100004D84                 jmp     loc_100004DB4
__text:0000000100004D89 ; ---------------------------------------------------------------------------
__text:0000000100004D89
__text:0000000100004D89 loc_100004D89:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+34C↑j
__text:0000000100004D89                 mov     rax, [rbp+var_308]
__text:0000000100004D90                 mov     rcx, [rbp+var_2E0]
__text:0000000100004D97                 mov     rcx, [rcx+10h]
__text:0000000100004D9B                 mov     [rcx+8], rax
__text:0000000100004D9F                 mov     rax, [rbp+var_2E0]
__text:0000000100004DA6                 mov     rax, [rax+10h]
__text:0000000100004DAA                 mov     rax, [rax]
__text:0000000100004DAD                 mov     [rbp+var_318], rax
__text:0000000100004DB4
__text:0000000100004DB4 loc_100004DB4:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100004D84↑j
__text:0000000100004DB4                 mov     rax, [rbp+var_2E0]
__text:0000000100004DBB                 mov     cl, [rax+18h]
__text:0000000100004DBE                 and     cl, 1
__text:0000000100004DC1                 mov     [rbp+var_329], cl
__text:0000000100004DC7                 mov     rax, [rbp+var_2E0]
__text:0000000100004DCE                 cmp     rax, [rbp+var_2D8]
__text:0000000100004DD5                 jz      loc_100004F48
__text:0000000100004DDB                 mov     rax, [rbp+var_2D8]
__text:0000000100004DE2                 mov     rax, [rax+10h]
__text:0000000100004DE6                 mov     rcx, [rbp+var_2E0]
__text:0000000100004DED                 mov     [rcx+10h], rax
__text:0000000100004DF1                 mov     rax, [rbp+var_2D8]
__text:0000000100004DF8                 mov     [rbp+var_48], rax
__text:0000000100004DFC                 mov     rax, [rbp+var_48]
__text:0000000100004E00                 mov     rcx, [rbp+var_48]
__text:0000000100004E04                 mov     rcx, [rcx+10h]
__text:0000000100004E08                 cmp     rax, [rcx]
__text:0000000100004E0B                 jnz     loc_100004E2B
__text:0000000100004E11                 mov     rax, [rbp+var_2E0]
__text:0000000100004E18                 mov     rcx, [rbp+var_2E0]
__text:0000000100004E1F                 mov     rcx, [rcx+10h]
__text:0000000100004E23                 mov     [rcx], rax
__text:0000000100004E26                 jmp     loc_100004E41
__text:0000000100004E2B ; ---------------------------------------------------------------------------
__text:0000000100004E2B
__text:0000000100004E2B loc_100004E2B:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+42B↑j
__text:0000000100004E2B                 mov     rax, [rbp+var_2E0]
__text:0000000100004E32                 mov     rcx, [rbp+var_2E0]
__text:0000000100004E39                 mov     rcx, [rcx+10h]
__text:0000000100004E3D                 mov     [rcx+8], rax
__text:0000000100004E41
__text:0000000100004E41 loc_100004E41:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+446↑j
__text:0000000100004E41                 lea     rax, [rbp+var_70]
__text:0000000100004E45                 mov     rcx, [rbp+var_2D8]
__text:0000000100004E4C                 mov     rcx, [rcx]
__text:0000000100004E4F                 mov     rdx, [rbp+var_2E0]
__text:0000000100004E56                 mov     [rdx], rcx
__text:0000000100004E59                 mov     rcx, [rbp+var_2E0]
__text:0000000100004E60                 mov     rdx, [rbp+var_2E0]
__text:0000000100004E67                 mov     rdx, [rdx]
__text:0000000100004E6A                 mov     [rdx+10h], rcx
__text:0000000100004E6E                 mov     rcx, [rbp+var_2D8]
__text:0000000100004E75                 mov     rcx, [rcx+8]
__text:0000000100004E79                 mov     rdx, [rbp+var_2E0]
__text:0000000100004E80                 mov     [rdx+8], rcx
__text:0000000100004E84                 mov     rcx, [rbp+var_2E0]
__text:0000000100004E8B                 mov     rcx, [rcx+8]
__text:0000000100004E8F                 mov     [rbp+var_60], rax
__text:0000000100004E93                 mov     [rbp+var_68], 0FFFFFFFFFFFFFFFFh
__text:0000000100004E9B                 mov     rax, [rbp+var_60]
__text:0000000100004E9F                 mov     rdx, [rbp+var_68]
__text:0000000100004EA3                 mov     [rbp+var_50], rax
__text:0000000100004EA7                 mov     [rbp+var_58], rdx
__text:0000000100004EAB                 mov     rax, [rbp+var_50]
__text:0000000100004EAF                 mov     qword ptr [rax], 0
__text:0000000100004EB6                 mov     rax, [rbp+var_70]
__text:0000000100004EBA                 mov     [rbp+var_3D8], rcx
__text:0000000100004EC1                 mov     [rbp+var_3E0], rax
__text:0000000100004EC8                 lea     rax, [rbp+var_338]
__text:0000000100004ECF                 mov     rcx, [rbp+var_3E0]
__text:0000000100004ED6                 mov     [rbp+var_338], rcx
__text:0000000100004EDD                 mov     [rbp+var_78], rax
__text:0000000100004EE1                 mov     rax, [rbp+var_3D8]
__text:0000000100004EE8                 cmp     rax, 0
__text:0000000100004EEE                 jz      loc_100004F0A
__text:0000000100004EF4                 mov     rax, [rbp+var_2E0]
__text:0000000100004EFB                 mov     rcx, [rbp+var_2E0]
__text:0000000100004F02                 mov     rcx, [rcx+8]
__text:0000000100004F06                 mov     [rcx+10h], rax
__text:0000000100004F0A
__text:0000000100004F0A loc_100004F0A:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+50E↑j
__text:0000000100004F0A                 mov     rax, [rbp+var_2D8]
__text:0000000100004F11                 mov     cl, [rax+18h]
__text:0000000100004F14                 mov     rax, [rbp+var_2E0]
__text:0000000100004F1B                 and     cl, 1
__text:0000000100004F1E                 mov     [rax+18h], cl
__text:0000000100004F21                 mov     rax, [rbp+var_2D0]
__text:0000000100004F28                 cmp     rax, [rbp+var_2D8]
__text:0000000100004F2F                 jnz     loc_100004F43
__text:0000000100004F35                 mov     rax, [rbp+var_2E0]
__text:0000000100004F3C                 mov     [rbp+var_2D0], rax
__text:0000000100004F43
__text:0000000100004F43 loc_100004F43:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+54F↑j
__text:0000000100004F43                 jmp     $+5
__text:0000000100004F48 ; ---------------------------------------------------------------------------
__text:0000000100004F48
__text:0000000100004F48 loc_100004F48:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+3F5↑j
__text:0000000100004F48                                         ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100004F43↑j
__text:0000000100004F48                 test    [rbp+var_329], 1
__text:0000000100004F4F                 jz      loc_10000581C
__text:0000000100004F55                 lea     rax, [rbp+var_A0]
__text:0000000100004F5C                 mov     rcx, [rbp+var_2D0]
__text:0000000100004F63                 mov     [rbp+var_90], rax
__text:0000000100004F6A                 mov     [rbp+var_98], 0FFFFFFFFFFFFFFFFh
__text:0000000100004F75                 mov     rax, [rbp+var_90]
__text:0000000100004F7C                 mov     rdx, [rbp+var_98]
__text:0000000100004F83                 mov     [rbp+var_80], rax
__text:0000000100004F87                 mov     [rbp+var_88], rdx
__text:0000000100004F8E                 mov     rax, [rbp+var_80]
__text:0000000100004F92                 mov     qword ptr [rax], 0
__text:0000000100004F99                 mov     rax, [rbp+var_A0]
__text:0000000100004FA0                 mov     [rbp+var_3E8], rcx
__text:0000000100004FA7                 mov     [rbp+var_3F0], rax
__text:0000000100004FAE                 lea     rax, [rbp+var_340]
__text:0000000100004FB5                 mov     rcx, [rbp+var_3F0]
__text:0000000100004FBC                 mov     [rbp+var_340], rcx
__text:0000000100004FC3                 mov     [rbp+var_A8], rax
__text:0000000100004FCA                 mov     rax, [rbp+var_3E8]
__text:0000000100004FD1                 cmp     rax, 0
__text:0000000100004FD7                 jz      loc_10000581C
__text:0000000100004FDD                 lea     rax, [rbp+var_D0]
__text:0000000100004FE4                 mov     rcx, [rbp+var_308]
__text:0000000100004FEB                 mov     [rbp+var_C0], rax
__text:0000000100004FF2                 mov     [rbp+var_C8], 0FFFFFFFFFFFFFFFFh
__text:0000000100004FFD                 mov     rax, [rbp+var_C0]
__text:0000000100005004                 mov     rdx, [rbp+var_C8]
__text:000000010000500B                 mov     [rbp+var_B0], rax
__text:0000000100005012                 mov     [rbp+var_B8], rdx
__text:0000000100005019                 mov     rax, [rbp+var_B0]
__text:0000000100005020                 mov     qword ptr [rax], 0
__text:0000000100005027                 mov     rax, [rbp+var_D0]
__text:000000010000502E                 mov     [rbp+var_3F8], rcx
__text:0000000100005035                 mov     [rbp+var_400], rax
__text:000000010000503C                 lea     rax, [rbp+var_348]
__text:0000000100005043                 mov     rcx, [rbp+var_400]
__text:000000010000504A                 mov     [rbp+var_348], rcx
__text:0000000100005051                 mov     [rbp+var_D8], rax
__text:0000000100005058                 mov     rax, [rbp+var_3F8]
__text:000000010000505F                 cmp     rax, 0
__text:0000000100005065                 jz      loc_10000507B
__text:000000010000506B                 mov     rax, [rbp+var_308]
__text:0000000100005072                 mov     byte ptr [rax+18h], 1
__text:0000000100005076                 jmp     loc_100005817
__text:000000010000507B ; ---------------------------------------------------------------------------
__text:000000010000507B
__text:000000010000507B loc_10000507B:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+685↑j
__text:000000010000507B                 jmp     $+5
__text:0000000100005080 ; ---------------------------------------------------------------------------
__text:0000000100005080
__text:0000000100005080 loc_100005080:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_10000507B↑j
__text:0000000100005080                                         ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_10000580D↓j
__text:0000000100005080                 jmp     $+5
__text:0000000100005085 ; ---------------------------------------------------------------------------
__text:0000000100005085
__text:0000000100005085 loc_100005085:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100005080↑j
__text:0000000100005085                 mov     rax, [rbp+var_318]
__text:000000010000508C                 mov     [rbp+var_E0], rax
__text:0000000100005093                 mov     rax, [rbp+var_E0]
__text:000000010000509A                 mov     rcx, [rbp+var_E0]
__text:00000001000050A1                 mov     rcx, [rcx+10h]
__text:00000001000050A5                 cmp     rax, [rcx]
__text:00000001000050A8                 jz      loc_10000545E
__text:00000001000050AE                 mov     rax, [rbp+var_318]
__text:00000001000050B5                 test    byte ptr [rax+18h], 1
__text:00000001000050B9                 jnz     loc_100005123
__text:00000001000050BF                 mov     rax, [rbp+var_318]
__text:00000001000050C6                 mov     byte ptr [rax+18h], 1
__text:00000001000050CA                 mov     rax, [rbp+var_318]
__text:00000001000050D1                 mov     rax, [rax+10h]
__text:00000001000050D5                 mov     byte ptr [rax+18h], 0
__text:00000001000050D9                 mov     rax, [rbp+var_318]
__text:00000001000050E0                 mov     rdi, [rax+10h]
__text:00000001000050E4                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000050E9                 mov     rax, [rbp+var_2D0]
__text:00000001000050F0                 mov     rdi, [rbp+var_318]
__text:00000001000050F7                 cmp     rax, [rdi]
__text:00000001000050FA                 jnz     loc_10000510E
__text:0000000100005100                 mov     rax, [rbp+var_318]
__text:0000000100005107                 mov     [rbp+var_2D0], rax
__text:000000010000510E
__text:000000010000510E loc_10000510E:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+71A↑j
__text:000000010000510E                 mov     rax, [rbp+var_318]
__text:0000000100005115                 mov     rax, [rax]
__text:0000000100005118                 mov     rax, [rax+8]
__text:000000010000511C                 mov     [rbp+var_318], rax
__text:0000000100005123
__text:0000000100005123 loc_100005123:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+6D9↑j
__text:0000000100005123                 lea     rax, [rbp+var_130]
__text:000000010000512A                 mov     rcx, [rbp+var_318]
__text:0000000100005131                 mov     rcx, [rcx]
__text:0000000100005134                 mov     [rbp+var_120], rax
__text:000000010000513B                 mov     [rbp+var_128], 0FFFFFFFFFFFFFFFFh
__text:0000000100005146                 mov     rax, [rbp+var_120]
__text:000000010000514D                 mov     rdx, [rbp+var_128]
__text:0000000100005154                 mov     [rbp+var_110], rax
__text:000000010000515B                 mov     [rbp+var_118], rdx
__text:0000000100005162                 mov     rax, [rbp+var_110]
__text:0000000100005169                 mov     qword ptr [rax], 0
__text:0000000100005170                 mov     rax, [rbp+var_130]
__text:0000000100005177                 mov     [rbp+var_408], rcx
__text:000000010000517E                 mov     [rbp+var_410], rax
__text:0000000100005185                 lea     rax, [rbp+var_350]
__text:000000010000518C                 mov     rcx, [rbp+var_410]
__text:0000000100005193                 mov     [rbp+var_350], rcx
__text:000000010000519A                 mov     [rbp+var_138], rax
__text:00000001000051A1                 mov     rax, [rbp+var_408]
__text:00000001000051A8                 cmp     rax, 0
__text:00000001000051AE                 jz      loc_1000051C8
__text:00000001000051B4                 mov     rax, [rbp+var_318]
__text:00000001000051BB                 mov     rax, [rax]
__text:00000001000051BE                 test    byte ptr [rax+18h], 1
__text:00000001000051C2                 jz      loc_10000532D
__text:00000001000051C8
__text:00000001000051C8 loc_1000051C8:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+7CE↑j
__text:00000001000051C8                 lea     rax, [rbp+var_160]
__text:00000001000051CF                 mov     rcx, [rbp+var_318]
__text:00000001000051D6                 mov     rcx, [rcx+8]
__text:00000001000051DA                 mov     [rbp+var_150], rax
__text:00000001000051E1                 mov     [rbp+var_158], 0FFFFFFFFFFFFFFFFh
__text:00000001000051EC                 mov     rax, [rbp+var_150]
__text:00000001000051F3                 mov     rdx, [rbp+var_158]
__text:00000001000051FA                 mov     [rbp+var_140], rax
__text:0000000100005201                 mov     [rbp+var_148], rdx
__text:0000000100005208                 mov     rax, [rbp+var_140]
__text:000000010000520F                 mov     qword ptr [rax], 0
__text:0000000100005216                 mov     rax, [rbp+var_160]
__text:000000010000521D                 mov     [rbp+var_418], rcx
__text:0000000100005224                 mov     [rbp+var_420], rax
__text:000000010000522B                 lea     rax, [rbp+var_358]
__text:0000000100005232                 mov     rcx, [rbp+var_420]
__text:0000000100005239                 mov     [rbp+var_358], rcx
__text:0000000100005240                 mov     [rbp+var_168], rax
__text:0000000100005247                 mov     rax, [rbp+var_418]
__text:000000010000524E                 cmp     rax, 0
__text:0000000100005254                 jz      loc_10000526F
__text:000000010000525A                 mov     rax, [rbp+var_318]
__text:0000000100005261                 mov     rax, [rax+8]
__text:0000000100005265                 test    byte ptr [rax+18h], 1
__text:0000000100005269                 jz      loc_10000532D
__text:000000010000526F
__text:000000010000526F loc_10000526F:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+874↑j
__text:000000010000526F                 mov     rax, [rbp+var_318]
__text:0000000100005276                 mov     byte ptr [rax+18h], 0
__text:000000010000527A                 mov     rax, [rbp+var_318]
__text:0000000100005281                 mov     rax, [rax+10h]
__text:0000000100005285                 mov     [rbp+var_308], rax
__text:000000010000528C                 mov     rax, [rbp+var_308]
__text:0000000100005293                 cmp     rax, [rbp+var_2D0]
__text:000000010000529A                 jz      loc_1000052B1
__text:00000001000052A0                 mov     rax, [rbp+var_308]
__text:00000001000052A7                 test    byte ptr [rax+18h], 1
__text:00000001000052AB                 jnz     loc_1000052C1
__text:00000001000052B1
__text:00000001000052B1 loc_1000052B1:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+8BA↑j
__text:00000001000052B1                 mov     rax, [rbp+var_308]
__text:00000001000052B8                 mov     byte ptr [rax+18h], 1
__text:00000001000052BC                 jmp     loc_100005812
__text:00000001000052C1 ; ---------------------------------------------------------------------------
__text:00000001000052C1
__text:00000001000052C1 loc_1000052C1:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+8CB↑j
__text:00000001000052C1                 mov     rax, [rbp+var_308]
__text:00000001000052C8                 mov     [rbp+var_170], rax
__text:00000001000052CF                 mov     rax, [rbp+var_170]
__text:00000001000052D6                 mov     rcx, [rbp+var_170]
__text:00000001000052DD                 mov     rcx, [rcx+10h]
__text:00000001000052E1                 cmp     rax, [rcx]
__text:00000001000052E4                 jnz     loc_100005305
__text:00000001000052EA                 mov     rax, [rbp+var_308]
__text:00000001000052F1                 mov     rax, [rax+10h]
__text:00000001000052F5                 mov     rax, [rax+8]
__text:00000001000052F9                 mov     [rbp+var_428], rax
__text:0000000100005300                 jmp     loc_10000531A
__text:0000000100005305 ; ---------------------------------------------------------------------------
__text:0000000100005305
__text:0000000100005305 loc_100005305:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+904↑j
__text:0000000100005305                 mov     rax, [rbp+var_308]
__text:000000010000530C                 mov     rax, [rax+10h]
__text:0000000100005310                 mov     rax, [rax]
__text:0000000100005313                 mov     [rbp+var_428], rax
__text:000000010000531A
__text:000000010000531A loc_10000531A:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+920↑j
__text:000000010000531A                 mov     rax, [rbp+var_428]
__text:0000000100005321                 mov     [rbp+var_318], rax
__text:0000000100005328                 jmp     loc_100005459
__text:000000010000532D ; ---------------------------------------------------------------------------
__text:000000010000532D
__text:000000010000532D loc_10000532D:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+7E2↑j
__text:000000010000532D                                         ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+889↑j
__text:000000010000532D                 lea     rax, [rbp+var_198]
__text:0000000100005334                 mov     rcx, [rbp+var_318]
__text:000000010000533B                 mov     rcx, [rcx+8]
__text:000000010000533F                 mov     [rbp+var_188], rax
__text:0000000100005346                 mov     [rbp+var_190], 0FFFFFFFFFFFFFFFFh
__text:0000000100005351                 mov     rax, [rbp+var_188]
__text:0000000100005358                 mov     rdx, [rbp+var_190]
__text:000000010000535F                 mov     [rbp+var_178], rax
__text:0000000100005366                 mov     [rbp+var_180], rdx
__text:000000010000536D                 mov     rax, [rbp+var_178]
__text:0000000100005374                 mov     qword ptr [rax], 0
__text:000000010000537B                 mov     rax, [rbp+var_198]
__text:0000000100005382                 mov     [rbp+var_430], rcx
__text:0000000100005389                 mov     [rbp+var_438], rax
__text:0000000100005390                 lea     rax, [rbp+var_360]
__text:0000000100005397                 mov     rcx, [rbp+var_438]
__text:000000010000539E                 mov     [rbp+var_360], rcx
__text:00000001000053A5                 mov     [rbp+var_1A0], rax
__text:00000001000053AC                 mov     rax, [rbp+var_430]
__text:00000001000053B3                 cmp     rax, 0
__text:00000001000053B9                 jz      loc_1000053D4
__text:00000001000053BF                 mov     rax, [rbp+var_318]
__text:00000001000053C6                 mov     rax, [rax+8]
__text:00000001000053CA                 test    byte ptr [rax+18h], 1
__text:00000001000053CE                 jz      loc_10000540B
__text:00000001000053D4
__text:00000001000053D4 loc_1000053D4:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+9D9↑j
__text:00000001000053D4                 mov     rax, [rbp+var_318]
__text:00000001000053DB                 mov     rax, [rax]
__text:00000001000053DE                 mov     byte ptr [rax+18h], 1
__text:00000001000053E2                 mov     rax, [rbp+var_318]
__text:00000001000053E9                 mov     byte ptr [rax+18h], 0
__text:00000001000053ED                 mov     rdi, [rbp+var_318]
__text:00000001000053F4                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000053F9                 mov     rax, [rbp+var_318]
__text:0000000100005400                 mov     rax, [rax+10h]
__text:0000000100005404                 mov     [rbp+var_318], rax
__text:000000010000540B
__text:000000010000540B loc_10000540B:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+9EE↑j
__text:000000010000540B                 mov     rax, [rbp+var_318]
__text:0000000100005412                 mov     rax, [rax+10h]
__text:0000000100005416                 mov     cl, [rax+18h]
__text:0000000100005419                 mov     rax, [rbp+var_318]
__text:0000000100005420                 and     cl, 1
__text:0000000100005423                 mov     [rax+18h], cl
__text:0000000100005426                 mov     rax, [rbp+var_318]
__text:000000010000542D                 mov     rax, [rax+10h]
__text:0000000100005431                 mov     byte ptr [rax+18h], 1
__text:0000000100005435                 mov     rax, [rbp+var_318]
__text:000000010000543C                 mov     rax, [rax+8]
__text:0000000100005440                 mov     byte ptr [rax+18h], 1
__text:0000000100005444                 mov     rax, [rbp+var_318]
__text:000000010000544B                 mov     rdi, [rax+10h]
__text:000000010000544F                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100005454                 jmp     loc_100005812
__text:0000000100005459 ; ---------------------------------------------------------------------------
__text:0000000100005459
__text:0000000100005459 loc_100005459:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+948↑j
__text:0000000100005459                 jmp     loc_10000580D
__text:000000010000545E ; ---------------------------------------------------------------------------
__text:000000010000545E
__text:000000010000545E loc_10000545E:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+6C8↑j
__text:000000010000545E                 mov     rax, [rbp+var_318]
__text:0000000100005465                 test    byte ptr [rax+18h], 1
__text:0000000100005469                 jnz     loc_1000054D4
__text:000000010000546F                 mov     rax, [rbp+var_318]
__text:0000000100005476                 mov     byte ptr [rax+18h], 1
__text:000000010000547A                 mov     rax, [rbp+var_318]
__text:0000000100005481                 mov     rax, [rax+10h]
__text:0000000100005485                 mov     byte ptr [rax+18h], 0
__text:0000000100005489                 mov     rax, [rbp+var_318]
__text:0000000100005490                 mov     rdi, [rax+10h]
__text:0000000100005494                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100005499                 mov     rax, [rbp+var_2D0]
__text:00000001000054A0                 mov     rdi, [rbp+var_318]
__text:00000001000054A7                 cmp     rax, [rdi+8]
__text:00000001000054AB                 jnz     loc_1000054BF
__text:00000001000054B1                 mov     rax, [rbp+var_318]
__text:00000001000054B8                 mov     [rbp+var_2D0], rax
__text:00000001000054BF
__text:00000001000054BF loc_1000054BF:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+ACB↑j
__text:00000001000054BF                 mov     rax, [rbp+var_318]
__text:00000001000054C6                 mov     rax, [rax+8]
__text:00000001000054CA                 mov     rax, [rax]
__text:00000001000054CD                 mov     [rbp+var_318], rax
__text:00000001000054D4
__text:00000001000054D4 loc_1000054D4:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+A89↑j
__text:00000001000054D4                 lea     rax, [rbp+var_200]
__text:00000001000054DB                 mov     rcx, [rbp+var_318]
__text:00000001000054E2                 mov     rcx, [rcx]
__text:00000001000054E5                 mov     [rbp+var_1F0], rax
__text:00000001000054EC                 mov     [rbp+var_1F8], 0FFFFFFFFFFFFFFFFh
__text:00000001000054F7                 mov     rax, [rbp+var_1F0]
__text:00000001000054FE                 mov     rdx, [rbp+var_1F8]
__text:0000000100005505                 mov     [rbp+var_1E0], rax
__text:000000010000550C                 mov     [rbp+var_1E8], rdx
__text:0000000100005513                 mov     rax, [rbp+var_1E0]
__text:000000010000551A                 mov     qword ptr [rax], 0
__text:0000000100005521                 mov     rax, [rbp+var_200]
__text:0000000100005528                 mov     [rbp+var_440], rcx
__text:000000010000552F                 mov     [rbp+var_448], rax
__text:0000000100005536                 lea     rax, [rbp+var_368]
__text:000000010000553D                 mov     rcx, [rbp+var_448]
__text:0000000100005544                 mov     [rbp+var_368], rcx
__text:000000010000554B                 mov     [rbp+var_208], rax
__text:0000000100005552                 mov     rax, [rbp+var_440]
__text:0000000100005559                 cmp     rax, 0
__text:000000010000555F                 jz      loc_100005579
__text:0000000100005565                 mov     rax, [rbp+var_318]
__text:000000010000556C                 mov     rax, [rax]
__text:000000010000556F                 test    byte ptr [rax+18h], 1
__text:0000000100005573                 jz      loc_1000056DE
__text:0000000100005579
__text:0000000100005579 loc_100005579:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+B7F↑j
__text:0000000100005579                 lea     rax, [rbp+var_230]
__text:0000000100005580                 mov     rcx, [rbp+var_318]
__text:0000000100005587                 mov     rcx, [rcx+8]
__text:000000010000558B                 mov     [rbp+var_220], rax
__text:0000000100005592                 mov     [rbp+var_228], 0FFFFFFFFFFFFFFFFh
__text:000000010000559D                 mov     rax, [rbp+var_220]
__text:00000001000055A4                 mov     rdx, [rbp+var_228]
__text:00000001000055AB                 mov     [rbp+var_210], rax
__text:00000001000055B2                 mov     [rbp+var_218], rdx
__text:00000001000055B9                 mov     rax, [rbp+var_210]
__text:00000001000055C0                 mov     qword ptr [rax], 0
__text:00000001000055C7                 mov     rax, [rbp+var_230]
__text:00000001000055CE                 mov     [rbp+var_450], rcx
__text:00000001000055D5                 mov     [rbp+var_458], rax
__text:00000001000055DC                 lea     rax, [rbp+var_370]
__text:00000001000055E3                 mov     rcx, [rbp+var_458]
__text:00000001000055EA                 mov     [rbp+var_370], rcx
__text:00000001000055F1                 mov     [rbp+var_238], rax
__text:00000001000055F8                 mov     rax, [rbp+var_450]
__text:00000001000055FF                 cmp     rax, 0
__text:0000000100005605                 jz      loc_100005620
__text:000000010000560B                 mov     rax, [rbp+var_318]
__text:0000000100005612                 mov     rax, [rax+8]
__text:0000000100005616                 test    byte ptr [rax+18h], 1
__text:000000010000561A                 jz      loc_1000056DE
__text:0000000100005620
__text:0000000100005620 loc_100005620:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+C25↑j
__text:0000000100005620                 mov     rax, [rbp+var_318]
__text:0000000100005627                 mov     byte ptr [rax+18h], 0
__text:000000010000562B                 mov     rax, [rbp+var_318]
__text:0000000100005632                 mov     rax, [rax+10h]
__text:0000000100005636                 mov     [rbp+var_308], rax
__text:000000010000563D                 mov     rax, [rbp+var_308]
__text:0000000100005644                 test    byte ptr [rax+18h], 1
__text:0000000100005648                 jz      loc_100005662
__text:000000010000564E                 mov     rax, [rbp+var_308]
__text:0000000100005655                 cmp     rax, [rbp+var_2D0]
__text:000000010000565C                 jnz     loc_100005672
__text:0000000100005662
__text:0000000100005662 loc_100005662:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+C68↑j
__text:0000000100005662                 mov     rax, [rbp+var_308]
__text:0000000100005669                 mov     byte ptr [rax+18h], 1
__text:000000010000566D                 jmp     loc_100005812
__text:0000000100005672 ; ---------------------------------------------------------------------------
__text:0000000100005672
__text:0000000100005672 loc_100005672:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+C7C↑j
__text:0000000100005672                 mov     rax, [rbp+var_308]
__text:0000000100005679                 mov     [rbp+var_240], rax
__text:0000000100005680                 mov     rax, [rbp+var_240]
__text:0000000100005687                 mov     rcx, [rbp+var_240]
__text:000000010000568E                 mov     rcx, [rcx+10h]
__text:0000000100005692                 cmp     rax, [rcx]
__text:0000000100005695                 jnz     loc_1000056B6
__text:000000010000569B                 mov     rax, [rbp+var_308]
__text:00000001000056A2                 mov     rax, [rax+10h]
__text:00000001000056A6                 mov     rax, [rax+8]
__text:00000001000056AA                 mov     [rbp+var_460], rax
__text:00000001000056B1                 jmp     loc_1000056CB
__text:00000001000056B6 ; ---------------------------------------------------------------------------
__text:00000001000056B6
__text:00000001000056B6 loc_1000056B6:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+CB5↑j
__text:00000001000056B6                 mov     rax, [rbp+var_308]
__text:00000001000056BD                 mov     rax, [rax+10h]
__text:00000001000056C1                 mov     rax, [rax]
__text:00000001000056C4                 mov     [rbp+var_460], rax
__text:00000001000056CB
__text:00000001000056CB loc_1000056CB:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+CD1↑j
__text:00000001000056CB                 mov     rax, [rbp+var_460]
__text:00000001000056D2                 mov     [rbp+var_318], rax
__text:00000001000056D9                 jmp     loc_100005808
__text:00000001000056DE ; ---------------------------------------------------------------------------
__text:00000001000056DE
__text:00000001000056DE loc_1000056DE:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+B93↑j
__text:00000001000056DE                                         ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+C3A↑j
__text:00000001000056DE                 lea     rax, [rbp+var_268]
__text:00000001000056E5                 mov     rcx, [rbp+var_318]
__text:00000001000056EC                 mov     rcx, [rcx]
__text:00000001000056EF                 mov     [rbp+var_258], rax
__text:00000001000056F6                 mov     [rbp+var_260], 0FFFFFFFFFFFFFFFFh
__text:0000000100005701                 mov     rax, [rbp+var_258]
__text:0000000100005708                 mov     rdx, [rbp+var_260]
__text:000000010000570F                 mov     [rbp+var_248], rax
__text:0000000100005716                 mov     [rbp+var_250], rdx
__text:000000010000571D                 mov     rax, [rbp+var_248]
__text:0000000100005724                 mov     qword ptr [rax], 0
__text:000000010000572B                 mov     rax, [rbp+var_268]
__text:0000000100005732                 mov     [rbp+var_468], rcx
__text:0000000100005739                 mov     [rbp+var_470], rax
__text:0000000100005740                 lea     rax, [rbp+var_378]
__text:0000000100005747                 mov     rcx, [rbp+var_470]
__text:000000010000574E                 mov     [rbp+var_378], rcx
__text:0000000100005755                 mov     [rbp+var_270], rax
__text:000000010000575C                 mov     rax, [rbp+var_468]
__text:0000000100005763                 cmp     rax, 0
__text:0000000100005769                 jz      loc_100005783
__text:000000010000576F                 mov     rax, [rbp+var_318]
__text:0000000100005776                 mov     rax, [rax]
__text:0000000100005779                 test    byte ptr [rax+18h], 1
__text:000000010000577D                 jz      loc_1000057BB
__text:0000000100005783
__text:0000000100005783 loc_100005783:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+D89↑j
__text:0000000100005783                 mov     rax, [rbp+var_318]
__text:000000010000578A                 mov     rax, [rax+8]
__text:000000010000578E                 mov     byte ptr [rax+18h], 1
__text:0000000100005792                 mov     rax, [rbp+var_318]
__text:0000000100005799                 mov     byte ptr [rax+18h], 0
__text:000000010000579D                 mov     rdi, [rbp+var_318]
__text:00000001000057A4                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000057A9                 mov     rax, [rbp+var_318]
__text:00000001000057B0                 mov     rax, [rax+10h]
__text:00000001000057B4                 mov     [rbp+var_318], rax
__text:00000001000057BB
__text:00000001000057BB loc_1000057BB:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+D9D↑j
__text:00000001000057BB                 mov     rax, [rbp+var_318]
__text:00000001000057C2                 mov     rax, [rax+10h]
__text:00000001000057C6                 mov     cl, [rax+18h]
__text:00000001000057C9                 mov     rax, [rbp+var_318]
__text:00000001000057D0                 and     cl, 1
__text:00000001000057D3                 mov     [rax+18h], cl
__text:00000001000057D6                 mov     rax, [rbp+var_318]
__text:00000001000057DD                 mov     rax, [rax+10h]
__text:00000001000057E1                 mov     byte ptr [rax+18h], 1
__text:00000001000057E5                 mov     rax, [rbp+var_318]
__text:00000001000057EC                 mov     rax, [rax]
__text:00000001000057EF                 mov     byte ptr [rax+18h], 1
__text:00000001000057F3                 mov     rax, [rbp+var_318]
__text:00000001000057FA                 mov     rdi, [rax+10h]
__text:00000001000057FE                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100005803                 jmp     loc_100005812
__text:0000000100005808 ; ---------------------------------------------------------------------------
__text:0000000100005808
__text:0000000100005808 loc_100005808:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+CF9↑j
__text:0000000100005808                 jmp     $+5
__text:000000010000580D ; ---------------------------------------------------------------------------
__text:000000010000580D
__text:000000010000580D loc_10000580D:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100005459↑j
__text:000000010000580D                                         ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100005808↑j
__text:000000010000580D                 jmp     loc_100005080
__text:0000000100005812 ; ---------------------------------------------------------------------------
__text:0000000100005812
__text:0000000100005812 loc_100005812:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+8DC↑j
__text:0000000100005812                                         ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+A74↑j ...
__text:0000000100005812                 jmp     $+5
__text:0000000100005817 ; ---------------------------------------------------------------------------
__text:0000000100005817
__text:0000000100005817 loc_100005817:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+696↑j
__text:0000000100005817                                         ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100005812↑j
__text:0000000100005817                 jmp     $+5
__text:000000010000581C ; ---------------------------------------------------------------------------
__text:000000010000581C
__text:000000010000581C loc_10000581C:                          ; CODE XREF: std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+56F↑j
__text:000000010000581C                                         ; std::__1::__tree_remove<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+5F7↑j ...
__text:000000010000581C                 add     rsp, 470h
__text:0000000100005823                 pop     rbp
__text:0000000100005824                 retn
__text:0000000100005824 __ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ endp
__text:0000000100005824
__text:0000000100005824 ; ---------------------------------------------------------------------------
__text:0000000100005825                 align 10h
__text:0000000100005830
__text:0000000100005830 ; =============== S U B R O U T I N E =======================================
__text:0000000100005830
__text:0000000100005830 ; Attributes: bp-based frame
__text:0000000100005830
__text:0000000100005830 ; std::__1::__tree_node_base<void *> * std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100005830 __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_ proc near
__text:0000000100005830                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5__ptr↓o
__text:0000000100005830
__text:0000000100005830 var_C0          = qword ptr -0C0h
__text:0000000100005830 var_B8          = qword ptr -0B8h
__text:0000000100005830 var_B0          = qword ptr -0B0h
__text:0000000100005830 var_98          = qword ptr -98h
__text:0000000100005830 var_90          = qword ptr -90h
__text:0000000100005830 var_88          = qword ptr -88h
__text:0000000100005830 var_80          = qword ptr -80h
__text:0000000100005830 var_78          = qword ptr -78h
__text:0000000100005830 var_70          = qword ptr -70h
__text:0000000100005830 var_68          = qword ptr -68h
__text:0000000100005830 var_60          = qword ptr -60h
__text:0000000100005830 var_58          = qword ptr -58h
__text:0000000100005830 var_40          = qword ptr -40h
__text:0000000100005830 var_38          = qword ptr -38h
__text:0000000100005830 var_30          = qword ptr -30h
__text:0000000100005830 var_28          = qword ptr -28h
__text:0000000100005830 var_20          = qword ptr -20h
__text:0000000100005830 var_18          = qword ptr -18h
__text:0000000100005830 var_10          = qword ptr -10h
__text:0000000100005830 var_8           = qword ptr -8
__text:0000000100005830
__text:0000000100005830                 push    rbp
__text:0000000100005831                 mov     rbp, rsp
__text:0000000100005834                 sub     rsp, 40h
__text:0000000100005838                 lea     rax, [rbp+var_88]
__text:000000010000583F                 mov     [rbp+var_98], rdi
__text:0000000100005846                 mov     rdi, [rbp+var_98]
__text:000000010000584D                 mov     rdi, [rdi+8]
__text:0000000100005851                 mov     [rbp+var_78], rax
__text:0000000100005855                 mov     [rbp+var_80], 0FFFFFFFFFFFFFFFFh
__text:000000010000585D                 mov     rax, [rbp+var_78]
__text:0000000100005861                 mov     rcx, [rbp+var_80]
__text:0000000100005865                 mov     [rbp+var_68], rax
__text:0000000100005869                 mov     [rbp+var_70], rcx
__text:000000010000586D                 mov     rax, [rbp+var_68]
__text:0000000100005871                 mov     qword ptr [rax], 0
__text:0000000100005878                 mov     rax, [rbp+var_88]
__text:000000010000587F                 mov     [rbp+var_B8], rdi
__text:0000000100005886                 mov     [rbp+var_C0], rax
__text:000000010000588D                 lea     rax, [rbp+var_B0]
__text:0000000100005894                 mov     rcx, [rbp+var_C0]
__text:000000010000589B                 mov     [rbp+var_B0], rcx
__text:00000001000058A2                 mov     [rbp+var_8], rax
__text:00000001000058A6                 mov     rax, [rbp+var_B8]
__text:00000001000058AD                 cmp     rax, 0
__text:00000001000058B3                 jz      loc_100005937
__text:00000001000058B9                 mov     rax, [rbp+var_98]
__text:00000001000058C0                 mov     rax, [rax+8]
__text:00000001000058C4                 mov     [rbp+var_40], rax
__text:00000001000058C8
__text:00000001000058C8 loc_1000058C8:                          ; CODE XREF: std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+F2↓j
__text:00000001000058C8                 lea     rax, [rbp+var_58]
__text:00000001000058CC                 lea     rcx, [rbp+var_38]
__text:00000001000058D0                 mov     rdx, [rbp+var_40]
__text:00000001000058D4                 mov     rdx, [rdx]
__text:00000001000058D7                 mov     [rbp+var_28], rcx
__text:00000001000058DB                 mov     [rbp+var_30], 0FFFFFFFFFFFFFFFFh
__text:00000001000058E3                 mov     rcx, [rbp+var_28]
__text:00000001000058E7                 mov     rsi, [rbp+var_30]
__text:00000001000058EB                 mov     [rbp+var_18], rcx
__text:00000001000058EF                 mov     [rbp+var_20], rsi
__text:00000001000058F3                 mov     rcx, [rbp+var_18]
__text:00000001000058F7                 mov     qword ptr [rcx], 0
__text:00000001000058FE                 mov     rcx, [rbp+var_38]
__text:0000000100005902                 mov     [rbp+var_58], rcx
__text:0000000100005906                 mov     [rbp+var_10], rax
__text:000000010000590A                 cmp     rdx, 0
__text:0000000100005911                 jz      loc_100005927
__text:0000000100005917                 mov     rax, [rbp+var_40]
__text:000000010000591B                 mov     rax, [rax]
__text:000000010000591E                 mov     [rbp+var_40], rax
__text:0000000100005922                 jmp     loc_1000058C8
__text:0000000100005927 ; ---------------------------------------------------------------------------
__text:0000000100005927
__text:0000000100005927 loc_100005927:                          ; CODE XREF: std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+E1↑j
__text:0000000100005927                 mov     rax, [rbp+var_40]
__text:000000010000592B                 mov     [rbp+var_90], rax
__text:0000000100005932                 jmp     loc_100005993
__text:0000000100005937 ; ---------------------------------------------------------------------------
__text:0000000100005937
__text:0000000100005937 loc_100005937:                          ; CODE XREF: std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+83↑j
__text:0000000100005937                 jmp     $+5
__text:000000010000593C ; ---------------------------------------------------------------------------
__text:000000010000593C
__text:000000010000593C loc_10000593C:                          ; CODE XREF: std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *):loc_100005937↑j
__text:000000010000593C                                         ; std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+14C↓j
__text:000000010000593C                 mov     rax, [rbp+var_98]
__text:0000000100005943                 mov     [rbp+var_60], rax
__text:0000000100005947                 mov     rax, [rbp+var_60]
__text:000000010000594B                 mov     rcx, [rbp+var_60]
__text:000000010000594F                 mov     rcx, [rcx+10h]
__text:0000000100005953                 cmp     rax, [rcx]
__text:0000000100005956                 setz    dl
__text:0000000100005959                 xor     dl, 1
__text:000000010000595C                 test    dl, 1
__text:000000010000595F                 jnz     loc_10000596A
__text:0000000100005965                 jmp     loc_100005981
__text:000000010000596A ; ---------------------------------------------------------------------------
__text:000000010000596A
__text:000000010000596A loc_10000596A:                          ; CODE XREF: std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+12F↑j
__text:000000010000596A                 mov     rax, [rbp+var_98]
__text:0000000100005971                 mov     rax, [rax+10h]
__text:0000000100005975                 mov     [rbp+var_98], rax
__text:000000010000597C                 jmp     loc_10000593C
__text:0000000100005981 ; ---------------------------------------------------------------------------
__text:0000000100005981
__text:0000000100005981 loc_100005981:                          ; CODE XREF: std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+135↑j
__text:0000000100005981                 mov     rax, [rbp+var_98]
__text:0000000100005988                 mov     rax, [rax+10h]
__text:000000010000598C                 mov     [rbp+var_90], rax
__text:0000000100005993
__text:0000000100005993 loc_100005993:                          ; CODE XREF: std::__1::__tree_next<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+102↑j
__text:0000000100005993                 mov     rax, [rbp+var_90]
__text:000000010000599A                 add     rsp, 40h
__text:000000010000599E                 pop     rbp
__text:000000010000599F                 retn
__text:000000010000599F __ZNSt3__111__tree_nextIPNS_16__tree_node_baseIPvEEEET_S5_ endp
__text:000000010000599F
__text:00000001000059A0
__text:00000001000059A0 ; =============== S U B R O U T I N E =======================================
__text:00000001000059A0
__text:00000001000059A0 ; Attributes: bp-based frame
__text:00000001000059A0
__text:00000001000059A0 ; void std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000059A0 __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ proc near
__text:00000001000059A0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT__ptr↓o
__text:00000001000059A0
__text:00000001000059A0 var_70          = qword ptr -70h
__text:00000001000059A0 var_68          = qword ptr -68h
__text:00000001000059A0 var_60          = qword ptr -60h
__text:00000001000059A0 var_48          = qword ptr -48h
__text:00000001000059A0 var_40          = qword ptr -40h
__text:00000001000059A0 var_38          = qword ptr -38h
__text:00000001000059A0 var_30          = qword ptr -30h
__text:00000001000059A0 var_28          = qword ptr -28h
__text:00000001000059A0 var_20          = qword ptr -20h
__text:00000001000059A0 var_18          = qword ptr -18h
__text:00000001000059A0 var_10          = qword ptr -10h
__text:00000001000059A0 var_8           = qword ptr -8
__text:00000001000059A0
__text:00000001000059A0                 push    rbp
__text:00000001000059A1                 mov     rbp, rsp
__text:00000001000059A4                 lea     rax, [rbp+var_38]
__text:00000001000059A8                 mov     [rbp+var_40], rdi
__text:00000001000059AC                 mov     rdi, [rbp+var_40]
__text:00000001000059B0                 mov     rdi, [rdi+8]
__text:00000001000059B4                 mov     [rbp+var_48], rdi
__text:00000001000059B8                 mov     rdi, [rbp+var_48]
__text:00000001000059BC                 mov     rdi, [rdi]
__text:00000001000059BF                 mov     rcx, [rbp+var_40]
__text:00000001000059C3                 mov     [rcx+8], rdi
__text:00000001000059C7                 mov     rcx, [rbp+var_40]
__text:00000001000059CB                 mov     rcx, [rcx+8]
__text:00000001000059CF                 mov     [rbp+var_28], rax
__text:00000001000059D3                 mov     [rbp+var_30], 0FFFFFFFFFFFFFFFFh
__text:00000001000059DB                 mov     rax, [rbp+var_28]
__text:00000001000059DF                 mov     rdi, [rbp+var_30]
__text:00000001000059E3                 mov     [rbp+var_18], rax
__text:00000001000059E7                 mov     [rbp+var_20], rdi
__text:00000001000059EB                 mov     rax, [rbp+var_18]
__text:00000001000059EF                 mov     qword ptr [rax], 0
__text:00000001000059F6                 mov     rax, [rbp+var_38]
__text:00000001000059FA                 mov     [rbp+var_68], rcx
__text:00000001000059FE                 mov     [rbp+var_70], rax
__text:0000000100005A02                 lea     rax, [rbp+var_60]
__text:0000000100005A06                 mov     rcx, [rbp+var_70]
__text:0000000100005A0A                 mov     [rbp+var_60], rcx
__text:0000000100005A0E                 mov     [rbp+var_8], rax
__text:0000000100005A12                 mov     rax, [rbp+var_68]
__text:0000000100005A16                 cmp     rax, 0
__text:0000000100005A1C                 jz      loc_100005A32
__text:0000000100005A22                 mov     rax, [rbp+var_40]
__text:0000000100005A26                 mov     rcx, [rbp+var_40]
__text:0000000100005A2A                 mov     rcx, [rcx+8]
__text:0000000100005A2E                 mov     [rcx+10h], rax
__text:0000000100005A32
__text:0000000100005A32 loc_100005A32:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+7C↑j
__text:0000000100005A32                 mov     rax, [rbp+var_40]
__text:0000000100005A36                 mov     rax, [rax+10h]
__text:0000000100005A3A                 mov     rcx, [rbp+var_48]
__text:0000000100005A3E                 mov     [rcx+10h], rax
__text:0000000100005A42                 mov     rax, [rbp+var_40]
__text:0000000100005A46                 mov     [rbp+var_10], rax
__text:0000000100005A4A                 mov     rax, [rbp+var_10]
__text:0000000100005A4E                 mov     rcx, [rbp+var_10]
__text:0000000100005A52                 mov     rcx, [rcx+10h]
__text:0000000100005A56                 cmp     rax, [rcx]
__text:0000000100005A59                 jnz     loc_100005A73
__text:0000000100005A5F                 mov     rax, [rbp+var_48]
__text:0000000100005A63                 mov     rcx, [rbp+var_40]
__text:0000000100005A67                 mov     rcx, [rcx+10h]
__text:0000000100005A6B                 mov     [rcx], rax
__text:0000000100005A6E                 jmp     loc_100005A83
__text:0000000100005A73 ; ---------------------------------------------------------------------------
__text:0000000100005A73
__text:0000000100005A73 loc_100005A73:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+B9↑j
__text:0000000100005A73                 mov     rax, [rbp+var_48]
__text:0000000100005A77                 mov     rcx, [rbp+var_40]
__text:0000000100005A7B                 mov     rcx, [rcx+10h]
__text:0000000100005A7F                 mov     [rcx+8], rax
__text:0000000100005A83
__text:0000000100005A83 loc_100005A83:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+CE↑j
__text:0000000100005A83                 mov     rax, [rbp+var_40]
__text:0000000100005A87                 mov     rcx, [rbp+var_48]
__text:0000000100005A8B                 mov     [rcx], rax
__text:0000000100005A8E                 mov     rax, [rbp+var_48]
__text:0000000100005A92                 mov     rcx, [rbp+var_40]
__text:0000000100005A96                 mov     [rcx+10h], rax
__text:0000000100005A9A                 pop     rbp
__text:0000000100005A9B                 retn
__text:0000000100005A9B __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ endp
__text:0000000100005A9B
__text:0000000100005A9B ; ---------------------------------------------------------------------------
__text:0000000100005A9C                 align 20h
__text:0000000100005AA0
__text:0000000100005AA0 ; =============== S U B R O U T I N E =======================================
__text:0000000100005AA0
__text:0000000100005AA0 ; Attributes: bp-based frame
__text:0000000100005AA0
__text:0000000100005AA0 ; void std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100005AA0 __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ proc near
__text:0000000100005AA0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT__ptr↓o
__text:0000000100005AA0
__text:0000000100005AA0 var_70          = qword ptr -70h
__text:0000000100005AA0 var_68          = qword ptr -68h
__text:0000000100005AA0 var_60          = qword ptr -60h
__text:0000000100005AA0 var_48          = qword ptr -48h
__text:0000000100005AA0 var_40          = qword ptr -40h
__text:0000000100005AA0 var_38          = qword ptr -38h
__text:0000000100005AA0 var_30          = qword ptr -30h
__text:0000000100005AA0 var_28          = qword ptr -28h
__text:0000000100005AA0 var_20          = qword ptr -20h
__text:0000000100005AA0 var_18          = qword ptr -18h
__text:0000000100005AA0 var_10          = qword ptr -10h
__text:0000000100005AA0 var_8           = qword ptr -8
__text:0000000100005AA0
__text:0000000100005AA0                 push    rbp
__text:0000000100005AA1                 mov     rbp, rsp
__text:0000000100005AA4                 lea     rax, [rbp+var_38]
__text:0000000100005AA8                 mov     [rbp+var_40], rdi
__text:0000000100005AAC                 mov     rdi, [rbp+var_40]
__text:0000000100005AB0                 mov     rdi, [rdi]
__text:0000000100005AB3                 mov     [rbp+var_48], rdi
__text:0000000100005AB7                 mov     rdi, [rbp+var_48]
__text:0000000100005ABB                 mov     rdi, [rdi+8]
__text:0000000100005ABF                 mov     rcx, [rbp+var_40]
__text:0000000100005AC3                 mov     [rcx], rdi
__text:0000000100005AC6                 mov     rcx, [rbp+var_40]
__text:0000000100005ACA                 mov     rcx, [rcx]
__text:0000000100005ACD                 mov     [rbp+var_28], rax
__text:0000000100005AD1                 mov     [rbp+var_30], 0FFFFFFFFFFFFFFFFh
__text:0000000100005AD9                 mov     rax, [rbp+var_28]
__text:0000000100005ADD                 mov     rdi, [rbp+var_30]
__text:0000000100005AE1                 mov     [rbp+var_18], rax
__text:0000000100005AE5                 mov     [rbp+var_20], rdi
__text:0000000100005AE9                 mov     rax, [rbp+var_18]
__text:0000000100005AED                 mov     qword ptr [rax], 0
__text:0000000100005AF4                 mov     rax, [rbp+var_38]
__text:0000000100005AF8                 mov     [rbp+var_68], rcx
__text:0000000100005AFC                 mov     [rbp+var_70], rax
__text:0000000100005B00                 lea     rax, [rbp+var_60]
__text:0000000100005B04                 mov     rcx, [rbp+var_70]
__text:0000000100005B08                 mov     [rbp+var_60], rcx
__text:0000000100005B0C                 mov     [rbp+var_8], rax
__text:0000000100005B10                 mov     rax, [rbp+var_68]
__text:0000000100005B14                 cmp     rax, 0
__text:0000000100005B1A                 jz      loc_100005B2F
__text:0000000100005B20                 mov     rax, [rbp+var_40]
__text:0000000100005B24                 mov     rcx, [rbp+var_40]
__text:0000000100005B28                 mov     rcx, [rcx]
__text:0000000100005B2B                 mov     [rcx+10h], rax
__text:0000000100005B2F
__text:0000000100005B2F loc_100005B2F:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+7A↑j
__text:0000000100005B2F                 mov     rax, [rbp+var_40]
__text:0000000100005B33                 mov     rax, [rax+10h]
__text:0000000100005B37                 mov     rcx, [rbp+var_48]
__text:0000000100005B3B                 mov     [rcx+10h], rax
__text:0000000100005B3F                 mov     rax, [rbp+var_40]
__text:0000000100005B43                 mov     [rbp+var_10], rax
__text:0000000100005B47                 mov     rax, [rbp+var_10]
__text:0000000100005B4B                 mov     rcx, [rbp+var_10]
__text:0000000100005B4F                 mov     rcx, [rcx+10h]
__text:0000000100005B53                 cmp     rax, [rcx]
__text:0000000100005B56                 jnz     loc_100005B70
__text:0000000100005B5C                 mov     rax, [rbp+var_48]
__text:0000000100005B60                 mov     rcx, [rbp+var_40]
__text:0000000100005B64                 mov     rcx, [rcx+10h]
__text:0000000100005B68                 mov     [rcx], rax
__text:0000000100005B6B                 jmp     loc_100005B80
__text:0000000100005B70 ; ---------------------------------------------------------------------------
__text:0000000100005B70
__text:0000000100005B70 loc_100005B70:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+B6↑j
__text:0000000100005B70                 mov     rax, [rbp+var_48]
__text:0000000100005B74                 mov     rcx, [rbp+var_40]
__text:0000000100005B78                 mov     rcx, [rcx+10h]
__text:0000000100005B7C                 mov     [rcx+8], rax
__text:0000000100005B80
__text:0000000100005B80 loc_100005B80:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+CB↑j
__text:0000000100005B80                 mov     rax, [rbp+var_40]
__text:0000000100005B84                 mov     rcx, [rbp+var_48]
__text:0000000100005B88                 mov     [rcx+8], rax
__text:0000000100005B8C                 mov     rax, [rbp+var_48]
__text:0000000100005B90                 mov     rcx, [rbp+var_40]
__text:0000000100005B94                 mov     [rcx+10h], rax
__text:0000000100005B98                 pop     rbp
__text:0000000100005B99                 retn
__text:0000000100005B99 __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ endp
__text:0000000100005B99
__text:0000000100005B99 ; ---------------------------------------------------------------------------
__text:0000000100005B9A                 align 20h
__text:0000000100005BA0
__text:0000000100005BA0 ; =============== S U B R O U T I N E =======================================
__text:0000000100005BA0
__text:0000000100005BA0 ; Attributes: bp-based frame
__text:0000000100005BA0
__text:0000000100005BA0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__insert_multi(std::__1::pair<int, int> const&)
__text:0000000100005BA0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__insert_multiERKS2_ proc near
__text:0000000100005BA0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__insert_multiERKS2__ptr↓o
__text:0000000100005BA0
__text:0000000100005BA0 var_5E0         = qword ptr -5E0h
__text:0000000100005BA0 var_5D8         = qword ptr -5D8h
__text:0000000100005BA0 var_5D0         = qword ptr -5D0h
__text:0000000100005BA0 var_5C8         = qword ptr -5C8h
__text:0000000100005BA0 var_5C0         = qword ptr -5C0h
__text:0000000100005BA0 var_5B8         = qword ptr -5B8h
__text:0000000100005BA0 var_5B0         = dword ptr -5B0h
__text:0000000100005BA0 var_5A0         = byte ptr -5A0h
__text:0000000100005BA0 var_588         = qword ptr -588h
__text:0000000100005BA0 var_580         = qword ptr -580h
__text:0000000100005BA0 var_568         = qword ptr -568h
__text:0000000100005BA0 var_560         = qword ptr -560h
__text:0000000100005BA0 var_558         = qword ptr -558h
__text:0000000100005BA0 var_550         = qword ptr -550h
__text:0000000100005BA0 var_548         = qword ptr -548h
__text:0000000100005BA0 var_540         = qword ptr -540h
__text:0000000100005BA0 var_538         = qword ptr -538h
__text:0000000100005BA0 var_530         = qword ptr -530h
__text:0000000100005BA0 var_528         = qword ptr -528h
__text:0000000100005BA0 var_520         = qword ptr -520h
__text:0000000100005BA0 var_518         = qword ptr -518h
__text:0000000100005BA0 var_510         = qword ptr -510h
__text:0000000100005BA0 var_508         = qword ptr -508h
__text:0000000100005BA0 var_500         = qword ptr -500h
__text:0000000100005BA0 var_4F8         = qword ptr -4F8h
__text:0000000100005BA0 var_4F0         = qword ptr -4F0h
__text:0000000100005BA0 var_4E8         = qword ptr -4E8h
__text:0000000100005BA0 var_4E0         = qword ptr -4E0h
__text:0000000100005BA0 var_4D8         = qword ptr -4D8h
__text:0000000100005BA0 var_4D0         = byte ptr -4D0h
__text:0000000100005BA0 var_4C8         = qword ptr -4C8h
__text:0000000100005BA0 var_4C0         = qword ptr -4C0h
__text:0000000100005BA0 var_4B8         = qword ptr -4B8h
__text:0000000100005BA0 var_4B0         = qword ptr -4B0h
__text:0000000100005BA0 var_4A8         = qword ptr -4A8h
__text:0000000100005BA0 var_4A0         = byte ptr -4A0h
__text:0000000100005BA0 var_498         = qword ptr -498h
__text:0000000100005BA0 var_490         = qword ptr -490h
__text:0000000100005BA0 var_488         = qword ptr -488h
__text:0000000100005BA0 var_480         = qword ptr -480h
__text:0000000100005BA0 var_478         = byte ptr -478h
__text:0000000100005BA0 var_470         = qword ptr -470h
__text:0000000100005BA0 var_468         = qword ptr -468h
__text:0000000100005BA0 var_460         = qword ptr -460h
__text:0000000100005BA0 var_458         = qword ptr -458h
__text:0000000100005BA0 var_450         = qword ptr -450h
__text:0000000100005BA0 var_448         = qword ptr -448h
__text:0000000100005BA0 var_440         = qword ptr -440h
__text:0000000100005BA0 var_438         = qword ptr -438h
__text:0000000100005BA0 var_430         = qword ptr -430h
__text:0000000100005BA0 var_428         = qword ptr -428h
__text:0000000100005BA0 var_420         = qword ptr -420h
__text:0000000100005BA0 var_418         = qword ptr -418h
__text:0000000100005BA0 var_410         = qword ptr -410h
__text:0000000100005BA0 var_408         = qword ptr -408h
__text:0000000100005BA0 var_400         = qword ptr -400h
__text:0000000100005BA0 var_3F8         = qword ptr -3F8h
__text:0000000100005BA0 var_310         = qword ptr -310h
__text:0000000100005BA0 var_308         = qword ptr -308h
__text:0000000100005BA0 var_300         = qword ptr -300h
__text:0000000100005BA0 var_2F8         = qword ptr -2F8h
__text:0000000100005BA0 var_2F0         = qword ptr -2F0h
__text:0000000100005BA0 var_2E8         = qword ptr -2E8h
__text:0000000100005BA0 var_2E0         = qword ptr -2E0h
__text:0000000100005BA0 var_2C8         = qword ptr -2C8h
__text:0000000100005BA0 var_2C0         = qword ptr -2C0h
__text:0000000100005BA0 var_2B8         = qword ptr -2B8h
__text:0000000100005BA0 var_2B0         = qword ptr -2B0h
__text:0000000100005BA0 var_2A8         = qword ptr -2A8h
__text:0000000100005BA0 var_2A0         = qword ptr -2A0h
__text:0000000100005BA0 var_298         = qword ptr -298h
__text:0000000100005BA0 var_290         = qword ptr -290h
__text:0000000100005BA0 var_288         = qword ptr -288h
__text:0000000100005BA0 var_270         = qword ptr -270h
__text:0000000100005BA0 var_268         = qword ptr -268h
__text:0000000100005BA0 var_260         = qword ptr -260h
__text:0000000100005BA0 var_258         = qword ptr -258h
__text:0000000100005BA0 var_250         = qword ptr -250h
__text:0000000100005BA0 var_248         = qword ptr -248h
__text:0000000100005BA0 var_240         = qword ptr -240h
__text:0000000100005BA0 var_238         = qword ptr -238h
__text:0000000100005BA0 var_230         = qword ptr -230h
__text:0000000100005BA0 var_228         = qword ptr -228h
__text:0000000100005BA0 var_220         = qword ptr -220h
__text:0000000100005BA0 var_138         = qword ptr -138h
__text:0000000100005BA0 var_130         = qword ptr -130h
__text:0000000100005BA0 var_128         = qword ptr -128h
__text:0000000100005BA0 var_120         = qword ptr -120h
__text:0000000100005BA0 var_118         = qword ptr -118h
__text:0000000100005BA0 var_110         = qword ptr -110h
__text:0000000100005BA0 var_108         = qword ptr -108h
__text:0000000100005BA0 var_100         = qword ptr -100h
__text:0000000100005BA0 var_F8          = qword ptr -0F8h
__text:0000000100005BA0 var_F0          = qword ptr -0F0h
__text:0000000100005BA0 var_E8          = qword ptr -0E8h
__text:0000000100005BA0 var_E0          = qword ptr -0E0h
__text:0000000100005BA0 var_D8          = qword ptr -0D8h
__text:0000000100005BA0 var_C0          = qword ptr -0C0h
__text:0000000100005BA0 var_B8          = qword ptr -0B8h
__text:0000000100005BA0 var_B0          = qword ptr -0B0h
__text:0000000100005BA0 var_A8          = qword ptr -0A8h
__text:0000000100005BA0 var_A0          = qword ptr -0A0h
__text:0000000100005BA0 var_98          = qword ptr -98h
__text:0000000100005BA0 var_90          = qword ptr -90h
__text:0000000100005BA0 var_88          = qword ptr -88h
__text:0000000100005BA0 var_80          = qword ptr -80h
__text:0000000100005BA0 var_68          = qword ptr -68h
__text:0000000100005BA0 var_60          = qword ptr -60h
__text:0000000100005BA0 var_58          = qword ptr -58h
__text:0000000100005BA0 var_50          = qword ptr -50h
__text:0000000100005BA0 var_48          = qword ptr -48h
__text:0000000100005BA0 var_40          = qword ptr -40h
__text:0000000100005BA0 var_38          = qword ptr -38h
__text:0000000100005BA0 var_30          = qword ptr -30h
__text:0000000100005BA0 var_28          = qword ptr -28h
__text:0000000100005BA0 var_20          = qword ptr -20h
__text:0000000100005BA0 var_18          = qword ptr -18h
__text:0000000100005BA0 var_10          = qword ptr -10h
__text:0000000100005BA0
__text:0000000100005BA0                 push    rbp
__text:0000000100005BA1                 mov     rbp, rsp
__text:0000000100005BA4                 push    rbx
__text:0000000100005BA5                 sub     rsp, 5E8h
__text:0000000100005BAC                 lea     rax, [rbp+var_560]
__text:0000000100005BB3                 mov     [rbp+var_550], rdi
__text:0000000100005BBA                 mov     [rbp+var_558], rsi
__text:0000000100005BC1                 mov     rsi, [rbp+var_550]
__text:0000000100005BC8                 mov     rdx, [rbp+var_558]
__text:0000000100005BCF                 mov     rdi, rsi
__text:0000000100005BD2                 mov     [rbp+var_5B8], rsi
__text:0000000100005BD9                 mov     rsi, rax
__text:0000000100005BDC                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__find_leaf_highERPNS_16__tree_node_baseIPvEERKS2_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)
__text:0000000100005BE1                 lea     rdi, [rbp+var_5A0]
__text:0000000100005BE8                 mov     [rbp+var_568], rax
__text:0000000100005BEF                 mov     rdx, [rbp+var_558]
__text:0000000100005BF6                 mov     rsi, [rbp+var_5B8]
__text:0000000100005BFD                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)
__text:0000000100005C02                 lea     rax, [rbp+var_538]
__text:0000000100005C09                 lea     rdx, [rbp+var_5A0]
__text:0000000100005C10                 mov     [rbp+var_540], rdx
__text:0000000100005C17                 mov     rdx, [rbp+var_540]
__text:0000000100005C1E                 mov     [rbp+var_528], rax
__text:0000000100005C25                 mov     [rbp+var_530], rdx
__text:0000000100005C2C                 mov     rax, [rbp+var_528]
__text:0000000100005C33                 mov     rdx, [rbp+var_530]
__text:0000000100005C3A                 mov     [rbp+var_518], rax
__text:0000000100005C41                 mov     [rbp+var_520], rdx
__text:0000000100005C48                 mov     rax, [rbp+var_518]
__text:0000000100005C4F                 mov     rdx, [rbp+var_520]
__text:0000000100005C56                 mov     [rax], rdx
__text:0000000100005C59                 mov     rax, [rbp+var_538]
__text:0000000100005C60                 mov     [rbp+var_5C0], rax
__text:0000000100005C67                 lea     rax, [rbp+var_480]
__text:0000000100005C6E                 lea     rcx, [rbp+var_470]
__text:0000000100005C75                 lea     rdx, [rbp+var_4A8]
__text:0000000100005C7C                 lea     rsi, [rbp+var_498]
__text:0000000100005C83                 lea     rdi, [rbp+var_4F0]
__text:0000000100005C8A                 lea     r8, [rbp+var_580]
__text:0000000100005C91                 mov     r9, [rbp+var_5C0]
__text:0000000100005C98                 mov     [rbp+var_588], r9
__text:0000000100005C9F                 mov     r10, [rbp+var_588]
__text:0000000100005CA6                 mov     [rbp+var_508], r8
__text:0000000100005CAD                 mov     [rbp+var_510], r10
__text:0000000100005CB4                 mov     r8, [rbp+var_508]
__text:0000000100005CBB                 mov     r10, [rbp+var_510]
__text:0000000100005CC2                 mov     [rbp+var_4E8], r8
__text:0000000100005CC9                 mov     [rbp+var_4F0], r10
__text:0000000100005CD0                 mov     r8, [rbp+var_4E8]
__text:0000000100005CD7                 mov     [rbp+var_4E0], rdi
__text:0000000100005CDE                 mov     r10, [rbp+var_4E0]
__text:0000000100005CE5                 mov     r10, [r10]
__text:0000000100005CE8                 mov     [rbp+var_418], r10
__text:0000000100005CEF                 mov     r10, [rbp+var_418]
__text:0000000100005CF6                 mov     [rbp+var_410], r10
__text:0000000100005CFD                 mov     r11, [rbp+var_410]
__text:0000000100005D04                 mov     [rbp+var_408], r11
__text:0000000100005D0B                 mov     r11, [rbp+var_408]
__text:0000000100005D12                 mov     r11, [r11]
__text:0000000100005D15                 mov     [rbp+var_420], r11
__text:0000000100005D1C                 mov     [rbp+var_400], r10
__text:0000000100005D23                 mov     r10, [rbp+var_400]
__text:0000000100005D2A                 mov     [rbp+var_3F8], r10
__text:0000000100005D31                 mov     r10, [rbp+var_3F8]
__text:0000000100005D38                 mov     qword ptr [r10], 0
__text:0000000100005D3F                 mov     r10, [rbp+var_420]
__text:0000000100005D46                 mov     [rbp+var_428], rdi
__text:0000000100005D4D                 mov     rdi, [rbp+var_428]
__text:0000000100005D54                 mov     rdi, [rdi]
__text:0000000100005D57                 mov     [rbp+var_440], rdi
__text:0000000100005D5E                 mov     rdi, [rbp+var_440]
__text:0000000100005D65                 mov     [rbp+var_438], rdi
__text:0000000100005D6C                 mov     rdi, [rbp+var_438]
__text:0000000100005D73                 mov     [rbp+var_430], rdi
__text:0000000100005D7A                 mov     rdi, [rbp+var_430]
__text:0000000100005D81                 add     rdi, 8
__text:0000000100005D88                 mov     [rbp+var_448], rdi
__text:0000000100005D8F                 mov     rdi, [rbp+var_448]
__text:0000000100005D96                 mov     r11, [rdi]
__text:0000000100005D99                 mov     [rbp+var_500], r11
__text:0000000100005DA0                 mov     rdi, [rdi+8]
__text:0000000100005DA4                 mov     [rbp+var_4F8], rdi
__text:0000000100005DAB                 mov     rdi, [rbp+var_500]
__text:0000000100005DB2                 mov     bl, byte ptr [rbp+var_4F8]
__text:0000000100005DB8                 mov     [rbp+var_4C0], r8
__text:0000000100005DBF                 mov     [rbp+var_4C8], r10
__text:0000000100005DC6                 mov     [rbp+var_4D8], rdi
__text:0000000100005DCD                 mov     [rbp+var_4D0], bl
__text:0000000100005DD3                 mov     rdi, [rbp+var_4C0]
__text:0000000100005DDA                 mov     r8, [rbp+var_4C8]
__text:0000000100005DE1                 mov     r10, [rbp+var_4D8]
__text:0000000100005DE8                 mov     bl, [rbp+var_4D0]
__text:0000000100005DEE                 mov     [rbp+var_490], rdi
__text:0000000100005DF5                 mov     [rbp+var_498], r8
__text:0000000100005DFC                 mov     [rbp+var_4A8], r10
__text:0000000100005E03                 mov     [rbp+var_4A0], bl
__text:0000000100005E09                 mov     rdi, [rbp+var_490]
__text:0000000100005E10                 mov     [rbp+var_488], rsi
__text:0000000100005E17                 mov     rsi, [rbp+var_488]
__text:0000000100005E1E                 mov     rsi, [rsi]
__text:0000000100005E21                 mov     [rbp+var_450], rdx
__text:0000000100005E28                 mov     rdx, [rbp+var_450]
__text:0000000100005E2F                 mov     r8, [rdx]
__text:0000000100005E32                 mov     [rbp+var_4B8], r8
__text:0000000100005E39                 mov     rdx, [rdx+8]
__text:0000000100005E3D                 mov     [rbp+var_4B0], rdx
__text:0000000100005E44                 mov     rdx, [rbp+var_4B8]
__text:0000000100005E4B                 mov     bl, byte ptr [rbp+var_4B0]
__text:0000000100005E51                 mov     [rbp+var_468], rdi
__text:0000000100005E58                 mov     [rbp+var_470], rsi
__text:0000000100005E5F                 mov     [rbp+var_480], rdx
__text:0000000100005E66                 mov     [rbp+var_478], bl
__text:0000000100005E6C                 mov     rdx, [rbp+var_468]
__text:0000000100005E73                 mov     [rbp+var_460], rcx
__text:0000000100005E7A                 mov     rcx, [rbp+var_460]
__text:0000000100005E81                 mov     rcx, [rcx]
__text:0000000100005E84                 mov     [rdx], rcx
__text:0000000100005E87                 mov     [rbp+var_458], rax
__text:0000000100005E8E                 mov     rax, [rbp+var_458]
__text:0000000100005E95                 mov     rcx, [rax]
__text:0000000100005E98                 mov     [rdx+8], rcx
__text:0000000100005E9C                 mov     rax, [rax+8]
__text:0000000100005EA0                 mov     [rdx+10h], rax
__text:0000000100005EA4                 lea     rax, [rbp+var_5A0]
__text:0000000100005EAB                 mov     [rbp+var_310], rax
__text:0000000100005EB2                 mov     rax, [rbp+var_310]
__text:0000000100005EB9                 mov     [rbp+var_308], rax
__text:0000000100005EC0                 mov     rax, [rbp+var_308]
__text:0000000100005EC7                 mov     [rbp+var_2F0], rax
__text:0000000100005ECE                 mov     [rbp+var_2F8], 0
__text:0000000100005ED9                 mov     rax, [rbp+var_2F0]
__text:0000000100005EE0                 mov     [rbp+var_2E8], rax
__text:0000000100005EE7                 mov     rcx, [rbp+var_2E8]
__text:0000000100005EEE                 mov     [rbp+var_2E0], rcx
__text:0000000100005EF5                 mov     rcx, [rbp+var_2E0]
__text:0000000100005EFC                 mov     rcx, [rcx]
__text:0000000100005EFF                 mov     [rbp+var_300], rcx
__text:0000000100005F06                 mov     rcx, [rbp+var_2F8]
__text:0000000100005F0D                 mov     [rbp+var_250], rax
__text:0000000100005F14                 mov     rdx, [rbp+var_250]
__text:0000000100005F1B                 mov     [rbp+var_248], rdx
__text:0000000100005F22                 mov     rdx, [rbp+var_248]
__text:0000000100005F29                 mov     [rdx], rcx
__text:0000000100005F2C                 cmp     [rbp+var_300], 0
__text:0000000100005F37                 mov     [rbp+var_5C8], rax
__text:0000000100005F3E                 jz      loc_100006064
__text:0000000100005F44                 mov     rax, [rbp+var_5C8]
__text:0000000100005F4B                 mov     [rbp+var_240], rax
__text:0000000100005F52                 mov     rcx, [rbp+var_240]
__text:0000000100005F59                 mov     [rbp+var_238], rcx
__text:0000000100005F60                 mov     rcx, [rbp+var_238]
__text:0000000100005F67                 add     rcx, 8
__text:0000000100005F6E                 mov     rdx, [rbp+var_300]
__text:0000000100005F75                 mov     [rbp+var_2C0], rcx
__text:0000000100005F7C                 mov     [rbp+var_2C8], rdx
__text:0000000100005F83                 mov     rcx, [rbp+var_2C0]
__text:0000000100005F8A                 test    byte ptr [rcx+8], 1
__text:0000000100005F8E                 mov     [rbp+var_5D0], rcx
__text:0000000100005F95                 jz      loc_100005FEB
__text:0000000100005F9B                 mov     rax, [rbp+var_5D0]
__text:0000000100005FA2                 mov     rcx, [rax]
__text:0000000100005FA5                 mov     rdx, [rbp+var_2C8]
__text:0000000100005FAC                 add     rdx, 1Ch
__text:0000000100005FB3                 mov     [rbp+var_2B8], rdx
__text:0000000100005FBA                 mov     rdx, [rbp+var_2B8]
__text:0000000100005FC1                 mov     [rbp+var_268], rcx
__text:0000000100005FC8                 mov     [rbp+var_270], rdx
__text:0000000100005FCF                 mov     rcx, [rbp+var_268]
__text:0000000100005FD6                 mov     rdx, [rbp+var_270]
__text:0000000100005FDD                 mov     [rbp+var_258], rcx
__text:0000000100005FE4                 mov     [rbp+var_260], rdx
__text:0000000100005FEB
__text:0000000100005FEB loc_100005FEB:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)+3F5↑j
__text:0000000100005FEB                 cmp     [rbp+var_2C8], 0
__text:0000000100005FF6                 jz      loc_10000605F
__text:0000000100005FFC                 mov     rax, [rbp+var_5D0]
__text:0000000100006003                 mov     rcx, [rax]
__text:0000000100006006                 mov     rdx, [rbp+var_2C8]
__text:000000010000600D                 mov     [rbp+var_2A0], rcx
__text:0000000100006014                 mov     [rbp+var_2A8], rdx
__text:000000010000601B                 mov     [rbp+var_2B0], 1
__text:0000000100006026                 mov     rcx, [rbp+var_2A0]
__text:000000010000602D                 mov     rdx, [rbp+var_2A8]
__text:0000000100006034                 mov     rsi, [rbp+var_2B0]
__text:000000010000603B                 mov     [rbp+var_288], rcx
__text:0000000100006042                 mov     [rbp+var_290], rdx
__text:0000000100006049                 mov     [rbp+var_298], rsi
__text:0000000100006050                 mov     rcx, [rbp+var_290]
__text:0000000100006057                 mov     rdi, rcx        ; void *
__text:000000010000605A                 call    __ZdlPv         ; operator delete(void *)
__text:000000010000605F
__text:000000010000605F loc_10000605F:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)+456↑j
__text:000000010000605F                 jmp     $+5
__text:0000000100006064 ; ---------------------------------------------------------------------------
__text:0000000100006064
__text:0000000100006064 loc_100006064:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)+39E↑j
__text:0000000100006064                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&):loc_10000605F↑j
__text:0000000100006064                 mov     rsi, [rbp+var_560]
__text:000000010000606B                 mov     rdx, [rbp+var_568]
__text:0000000100006072                 lea     rax, [rbp+var_580]
__text:0000000100006079                 mov     [rbp+var_230], rax
__text:0000000100006080                 mov     [rbp+var_228], rax
__text:0000000100006087                 mov     [rbp+var_220], rax
__text:000000010000608E                 mov     rcx, [rbp+var_580]
__text:0000000100006095                 mov     rdi, [rbp+var_5B8]
__text:000000010000609C                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *&,std::__1::__tree_node_base<void *> *)
__text:00000001000060A1                 jmp     $+5
__text:00000001000060A6 ; ---------------------------------------------------------------------------
__text:00000001000060A6
__text:00000001000060A6 loc_1000060A6:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)+501↑j
__text:00000001000060A6                 lea     rax, [rbp+var_580]
__text:00000001000060AD                 lea     rcx, [rbp+var_548]
__text:00000001000060B4                 mov     [rbp+var_130], rax
__text:00000001000060BB                 mov     rdx, [rbp+var_130]
__text:00000001000060C2                 mov     [rbp+var_128], rdx
__text:00000001000060C9                 mov     rsi, [rbp+var_128]
__text:00000001000060D0                 mov     [rbp+var_120], rsi
__text:00000001000060D7                 mov     rsi, [rbp+var_120]
__text:00000001000060DE                 mov     rsi, [rsi]
__text:00000001000060E1                 mov     [rbp+var_138], rsi
__text:00000001000060E8                 mov     [rbp+var_118], rdx
__text:00000001000060EF                 mov     rdx, [rbp+var_118]
__text:00000001000060F6                 mov     [rbp+var_110], rdx
__text:00000001000060FD                 mov     rdx, [rbp+var_110]
__text:0000000100006104                 mov     qword ptr [rdx], 0
__text:000000010000610B                 mov     rdx, [rbp+var_138]
__text:0000000100006112                 mov     [rbp+var_20], rcx
__text:0000000100006116                 mov     [rbp+var_28], rdx
__text:000000010000611A                 mov     rcx, [rbp+var_20]
__text:000000010000611E                 mov     rdx, [rbp+var_28]
__text:0000000100006122                 mov     [rbp+var_10], rcx
__text:0000000100006126                 mov     [rbp+var_18], rdx
__text:000000010000612A                 mov     rcx, [rbp+var_10]
__text:000000010000612E                 mov     rdx, [rbp+var_18]
__text:0000000100006132                 mov     [rcx], rdx
__text:0000000100006135                 mov     [rbp+var_5B0], 1
__text:000000010000613F                 mov     [rbp+var_108], rax
__text:0000000100006146                 mov     rax, [rbp+var_108]
__text:000000010000614D                 mov     [rbp+var_100], rax
__text:0000000100006154                 mov     rax, [rbp+var_100]
__text:000000010000615B                 mov     [rbp+var_E8], rax
__text:0000000100006162                 mov     [rbp+var_F0], 0
__text:000000010000616D                 mov     rax, [rbp+var_E8]
__text:0000000100006174                 mov     [rbp+var_E0], rax
__text:000000010000617B                 mov     rcx, [rbp+var_E0]
__text:0000000100006182                 mov     [rbp+var_D8], rcx
__text:0000000100006189                 mov     rcx, [rbp+var_D8]
__text:0000000100006190                 mov     rcx, [rcx]
__text:0000000100006193                 mov     [rbp+var_F8], rcx
__text:000000010000619A                 mov     rcx, [rbp+var_F0]
__text:00000001000061A1                 mov     [rbp+var_48], rax
__text:00000001000061A5                 mov     rdx, [rbp+var_48]
__text:00000001000061A9                 mov     [rbp+var_40], rdx
__text:00000001000061AD                 mov     rdx, [rbp+var_40]
__text:00000001000061B1                 mov     [rdx], rcx
__text:00000001000061B4                 cmp     [rbp+var_F8], 0
__text:00000001000061BF                 mov     [rbp+var_5D8], rax
__text:00000001000061C6                 jz      loc_1000062CB
__text:00000001000061CC                 mov     rax, [rbp+var_5D8]
__text:00000001000061D3                 mov     [rbp+var_38], rax
__text:00000001000061D7                 mov     rcx, [rbp+var_38]
__text:00000001000061DB                 mov     [rbp+var_30], rcx
__text:00000001000061DF                 mov     rcx, [rbp+var_30]
__text:00000001000061E3                 add     rcx, 8
__text:00000001000061EA                 mov     rdx, [rbp+var_F8]
__text:00000001000061F1                 mov     [rbp+var_B8], rcx
__text:00000001000061F8                 mov     [rbp+var_C0], rdx
__text:00000001000061FF                 mov     rcx, [rbp+var_B8]
__text:0000000100006206                 test    byte ptr [rcx+8], 1
__text:000000010000620A                 mov     [rbp+var_5E0], rcx
__text:0000000100006211                 jz      loc_100006255
__text:0000000100006217                 mov     rax, [rbp+var_5E0]
__text:000000010000621E                 mov     rcx, [rax]
__text:0000000100006221                 mov     rdx, [rbp+var_C0]
__text:0000000100006228                 add     rdx, 1Ch
__text:000000010000622F                 mov     [rbp+var_B0], rdx
__text:0000000100006236                 mov     rdx, [rbp+var_B0]
__text:000000010000623D                 mov     [rbp+var_60], rcx
__text:0000000100006241                 mov     [rbp+var_68], rdx
__text:0000000100006245                 mov     rcx, [rbp+var_60]
__text:0000000100006249                 mov     rdx, [rbp+var_68]
__text:000000010000624D                 mov     [rbp+var_50], rcx
__text:0000000100006251                 mov     [rbp+var_58], rdx
__text:0000000100006255
__text:0000000100006255 loc_100006255:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)+671↑j
__text:0000000100006255                 cmp     [rbp+var_C0], 0
__text:0000000100006260                 jz      loc_1000062C6
__text:0000000100006266                 mov     rax, [rbp+var_5E0]
__text:000000010000626D                 mov     rcx, [rax]
__text:0000000100006270                 mov     rdx, [rbp+var_C0]
__text:0000000100006277                 mov     [rbp+var_98], rcx
__text:000000010000627E                 mov     [rbp+var_A0], rdx
__text:0000000100006285                 mov     [rbp+var_A8], 1
__text:0000000100006290                 mov     rcx, [rbp+var_98]
__text:0000000100006297                 mov     rdx, [rbp+var_A0]
__text:000000010000629E                 mov     rsi, [rbp+var_A8]
__text:00000001000062A5                 mov     [rbp+var_80], rcx
__text:00000001000062A9                 mov     [rbp+var_88], rdx
__text:00000001000062B0                 mov     [rbp+var_90], rsi
__text:00000001000062B7                 mov     rcx, [rbp+var_88]
__text:00000001000062BE                 mov     rdi, rcx        ; void *
__text:00000001000062C1                 call    __ZdlPv         ; operator delete(void *)
__text:00000001000062C6
__text:00000001000062C6 loc_1000062C6:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)+6C0↑j
__text:00000001000062C6                 jmp     $+5
__text:00000001000062CB ; ---------------------------------------------------------------------------
__text:00000001000062CB
__text:00000001000062CB loc_1000062CB:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&)+626↑j
__text:00000001000062CB                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_multi(std::__1::pair<int,int> const&):loc_1000062C6↑j
__text:00000001000062CB                 mov     rax, [rbp+var_548]
__text:00000001000062D2                 add     rsp, 5E8h
__text:00000001000062D9                 pop     rbx
__text:00000001000062DA                 pop     rbp
__text:00000001000062DB                 retn
__text:00000001000062DB __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__insert_multiERKS2_ endp
__text:00000001000062DB
__text:00000001000062DC ; ---------------------------------------------------------------------------
__text:00000001000062DC                 lea     rcx, [rbp-580h]
__text:00000001000062E3                 mov     esi, edx
__text:00000001000062E5                 mov     [rbp-5A8h], rax
__text:00000001000062EC                 mov     [rbp-5ACh], esi
__text:00000001000062F2                 mov     [rbp-3F0h], rcx
__text:00000001000062F9                 mov     rax, [rbp-3F0h]
__text:0000000100006300                 mov     [rbp-3E8h], rax
__text:0000000100006307                 mov     rax, [rbp-3E8h]
__text:000000010000630E                 mov     [rbp-3D0h], rax
__text:0000000100006315                 mov     qword ptr [rbp-3D8h], 0
__text:0000000100006320                 mov     rax, [rbp-3D0h]
__text:0000000100006327                 mov     [rbp-3C8h], rax
__text:000000010000632E                 mov     rcx, [rbp-3C8h]
__text:0000000100006335                 mov     [rbp-3C0h], rcx
__text:000000010000633C                 mov     rcx, [rbp-3C0h]
__text:0000000100006343                 mov     rcx, [rcx]
__text:0000000100006346                 mov     [rbp-3E0h], rcx
__text:000000010000634D                 mov     rcx, [rbp-3D8h]
__text:0000000100006354                 mov     [rbp-330h], rax
__text:000000010000635B                 mov     rdx, [rbp-330h]
__text:0000000100006362                 mov     [rbp-328h], rdx
__text:0000000100006369                 mov     rdx, [rbp-328h]
__text:0000000100006370                 mov     [rdx], rcx
__text:0000000100006373                 cmp     qword ptr [rbp-3E0h], 0
__text:000000010000637E                 mov     [rbp-5E8h], rax
__text:0000000100006385                 jz      loc_1000064AB
__text:000000010000638B                 mov     rax, [rbp-5E8h]
__text:0000000100006392                 mov     [rbp-320h], rax
__text:0000000100006399                 mov     rcx, [rbp-320h]
__text:00000001000063A0                 mov     [rbp-318h], rcx
__text:00000001000063A7                 mov     rcx, [rbp-318h]
__text:00000001000063AE                 add     rcx, 8
__text:00000001000063B5                 mov     rdx, [rbp-3E0h]
__text:00000001000063BC                 mov     [rbp-3A0h], rcx
__text:00000001000063C3                 mov     [rbp-3A8h], rdx
__text:00000001000063CA                 mov     rcx, [rbp-3A0h]
__text:00000001000063D1                 test    byte ptr [rcx+8], 1
__text:00000001000063D5                 mov     [rbp-5F0h], rcx
__text:00000001000063DC                 jz      loc_100006432
__text:00000001000063E2                 mov     rax, [rbp-5F0h]
__text:00000001000063E9                 mov     rcx, [rax]
__text:00000001000063EC                 mov     rdx, [rbp-3A8h]
__text:00000001000063F3                 add     rdx, 1Ch
__text:00000001000063FA                 mov     [rbp-398h], rdx
__text:0000000100006401                 mov     rdx, [rbp-398h]
__text:0000000100006408                 mov     [rbp-348h], rcx
__text:000000010000640F                 mov     [rbp-350h], rdx
__text:0000000100006416                 mov     rcx, [rbp-348h]
__text:000000010000641D                 mov     rdx, [rbp-350h]
__text:0000000100006424                 mov     [rbp-338h], rcx
__text:000000010000642B                 mov     [rbp-340h], rdx
__text:0000000100006432
__text:0000000100006432 loc_100006432:                          ; CODE XREF: __text:00000001000063DC↑j
__text:0000000100006432                 cmp     qword ptr [rbp-3A8h], 0
__text:000000010000643D                 jz      loc_1000064A6
__text:0000000100006443                 mov     rax, [rbp-5F0h]
__text:000000010000644A                 mov     rcx, [rax]
__text:000000010000644D                 mov     rdx, [rbp-3A8h]
__text:0000000100006454                 mov     [rbp-380h], rcx
__text:000000010000645B                 mov     [rbp-388h], rdx
__text:0000000100006462                 mov     qword ptr [rbp-390h], 1
__text:000000010000646D                 mov     rcx, [rbp-380h]
__text:0000000100006474                 mov     rdx, [rbp-388h]
__text:000000010000647B                 mov     rsi, [rbp-390h]
__text:0000000100006482                 mov     [rbp-368h], rcx
__text:0000000100006489                 mov     [rbp-370h], rdx
__text:0000000100006490                 mov     [rbp-378h], rsi
__text:0000000100006497                 mov     rcx, [rbp-370h]
__text:000000010000649E                 mov     rdi, rcx
__text:00000001000064A1                 call    __ZdlPv         ; operator delete(void *)
__text:00000001000064A6
__text:00000001000064A6 loc_1000064A6:                          ; CODE XREF: __text:000000010000643D↑j
__text:00000001000064A6                 jmp     $+5
__text:00000001000064AB ; ---------------------------------------------------------------------------
__text:00000001000064AB
__text:00000001000064AB loc_1000064AB:                          ; CODE XREF: __text:0000000100006385↑j
__text:00000001000064AB                                         ; __text:loc_1000064A6↑j
__text:00000001000064AB                 jmp     $+5
__text:00000001000064B0 ; ---------------------------------------------------------------------------
__text:00000001000064B0
__text:00000001000064B0 loc_1000064B0:                          ; CODE XREF: __text:loc_1000064AB↑j
__text:00000001000064B0                 jmp     $+5
__text:00000001000064B5 ; ---------------------------------------------------------------------------
__text:00000001000064B5
__text:00000001000064B5 loc_1000064B5:                          ; CODE XREF: __text:loc_1000064B0↑j
__text:00000001000064B5                 mov     rdi, [rbp-5A8h]
__text:00000001000064BC                 call    __Unwind_Resume
__text:00000001000064BC ; ---------------------------------------------------------------------------
__text:00000001000064C1                 align 10h
__text:00000001000064D0
__text:00000001000064D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000064D0
__text:00000001000064D0 ; Attributes: bp-based frame
__text:00000001000064D0
__text:00000001000064D0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&, std::__1::pair<int, int> const&)
__text:00000001000064D0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__find_leaf_highERPNS_16__tree_node_baseIPvEERKS2_ proc near
__text:00000001000064D0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__find_leaf_highERPNS_16__tree_node_baseIPvEERKS2__ptr↓o
__text:00000001000064D0
__text:00000001000064D0 var_172         = byte ptr -172h
__text:00000001000064D0 var_171         = byte ptr -171h
__text:00000001000064D0 var_170         = qword ptr -170h
__text:00000001000064D0 var_168         = qword ptr -168h
__text:00000001000064D0 var_160         = qword ptr -160h
__text:00000001000064D0 var_158         = qword ptr -158h
__text:00000001000064D0 var_150         = qword ptr -150h
__text:00000001000064D0 var_148         = qword ptr -148h
__text:00000001000064D0 var_140         = qword ptr -140h
__text:00000001000064D0 var_138         = qword ptr -138h
__text:00000001000064D0 var_130         = qword ptr -130h
__text:00000001000064D0 var_128         = qword ptr -128h
__text:00000001000064D0 var_120         = qword ptr -120h
__text:00000001000064D0 var_118         = qword ptr -118h
__text:00000001000064D0 var_110         = qword ptr -110h
__text:00000001000064D0 var_108         = qword ptr -108h
__text:00000001000064D0 var_100         = qword ptr -100h
__text:00000001000064D0 var_F8          = qword ptr -0F8h
__text:00000001000064D0 var_F0          = qword ptr -0F0h
__text:00000001000064D0 var_E8          = qword ptr -0E8h
__text:00000001000064D0 var_E0          = qword ptr -0E0h
__text:00000001000064D0 var_D8          = qword ptr -0D8h
__text:00000001000064D0 var_D0          = qword ptr -0D0h
__text:00000001000064D0 var_C8          = qword ptr -0C8h
__text:00000001000064D0 var_C0          = qword ptr -0C0h
__text:00000001000064D0 var_B8          = qword ptr -0B8h
__text:00000001000064D0 var_B0          = qword ptr -0B0h
__text:00000001000064D0 var_A8          = qword ptr -0A8h
__text:00000001000064D0 var_A0          = qword ptr -0A0h
__text:00000001000064D0 var_98          = qword ptr -98h
__text:00000001000064D0 var_90          = qword ptr -90h
__text:00000001000064D0 var_88          = qword ptr -88h
__text:00000001000064D0 var_80          = qword ptr -80h
__text:00000001000064D0 var_78          = qword ptr -78h
__text:00000001000064D0 var_70          = qword ptr -70h
__text:00000001000064D0 var_68          = qword ptr -68h
__text:00000001000064D0 var_60          = qword ptr -60h
__text:00000001000064D0 var_58          = qword ptr -58h
__text:00000001000064D0 var_50          = qword ptr -50h
__text:00000001000064D0 var_48          = qword ptr -48h
__text:00000001000064D0 var_40          = qword ptr -40h
__text:00000001000064D0 var_38          = qword ptr -38h
__text:00000001000064D0 var_30          = qword ptr -30h
__text:00000001000064D0 var_28          = qword ptr -28h
__text:00000001000064D0 var_20          = qword ptr -20h
__text:00000001000064D0 var_18          = qword ptr -18h
__text:00000001000064D0 var_10          = qword ptr -10h
__text:00000001000064D0 var_8           = qword ptr -8
__text:00000001000064D0
__text:00000001000064D0                 push    rbp
__text:00000001000064D1                 mov     rbp, rsp
__text:00000001000064D4                 sub     rsp, 0F8h
__text:00000001000064DB                 lea     rax, [rbp+var_158]
__text:00000001000064E2                 lea     rcx, [rbp+var_28]
__text:00000001000064E6                 mov     [rbp+var_138], rdi
__text:00000001000064ED                 mov     [rbp+var_140], rsi
__text:00000001000064F4                 mov     [rbp+var_148], rdx
__text:00000001000064FB                 mov     rdx, [rbp+var_138]
__text:0000000100006502                 mov     [rbp+var_128], rdx
__text:0000000100006509                 mov     rsi, [rbp+var_128]
__text:0000000100006510                 mov     [rbp+var_120], rsi
__text:0000000100006517                 mov     rsi, [rbp+var_120]
__text:000000010000651E                 add     rsi, 8
__text:0000000100006525                 mov     [rbp+var_118], rsi
__text:000000010000652C                 mov     rsi, [rbp+var_118]
__text:0000000100006533                 mov     [rbp+var_110], rsi
__text:000000010000653A                 mov     rsi, [rbp+var_110]
__text:0000000100006541                 mov     [rbp+var_108], rsi
__text:0000000100006548                 mov     rsi, [rbp+var_108]
__text:000000010000654F                 mov     [rbp+var_100], rsi
__text:0000000100006556                 mov     rsi, [rbp+var_100]
__text:000000010000655D                 mov     rsi, [rsi]
__text:0000000100006560                 mov     [rbp+var_150], rsi
__text:0000000100006567                 mov     rsi, [rbp+var_150]
__text:000000010000656E                 mov     [rbp+var_18], rcx
__text:0000000100006572                 mov     [rbp+var_20], 0FFFFFFFFFFFFFFFFh
__text:000000010000657A                 mov     rcx, [rbp+var_18]
__text:000000010000657E                 mov     rdi, [rbp+var_20]
__text:0000000100006582                 mov     [rbp+var_8], rcx
__text:0000000100006586                 mov     [rbp+var_10], rdi
__text:000000010000658A                 mov     rcx, [rbp+var_8]
__text:000000010000658E                 mov     qword ptr [rcx], 0
__text:0000000100006595                 mov     rcx, [rbp+var_28]
__text:0000000100006599                 mov     [rbp+var_158], rcx
__text:00000001000065A0                 mov     [rbp+var_30], rax
__text:00000001000065A4                 cmp     rsi, 0
__text:00000001000065AB                 mov     [rbp+var_170], rdx
__text:00000001000065B2                 jz      loc_1000067F4
__text:00000001000065B8                 jmp     $+5
__text:00000001000065BD ; ---------------------------------------------------------------------------
__text:00000001000065BD
__text:00000001000065BD loc_1000065BD:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+E8↑j
__text:00000001000065BD                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&):loc_1000067EF↓j
__text:00000001000065BD                 mov     al, 1
__text:00000001000065BF                 mov     rcx, [rbp+var_170]
__text:00000001000065C6                 mov     [rbp+var_48], rcx
__text:00000001000065CA                 mov     rdx, [rbp+var_48]
__text:00000001000065CE                 add     rdx, 10h
__text:00000001000065D5                 mov     [rbp+var_40], rdx
__text:00000001000065D9                 mov     rdx, [rbp+var_40]
__text:00000001000065DD                 mov     [rbp+var_38], rdx
__text:00000001000065E1                 mov     rdx, [rbp+var_38]
__text:00000001000065E5                 mov     rsi, [rbp+var_148]
__text:00000001000065EC                 mov     rdi, [rbp+var_150]
__text:00000001000065F3                 add     rdi, 1Ch
__text:00000001000065FA                 mov     [rbp+var_60], rdx
__text:00000001000065FE                 mov     [rbp+var_68], rsi
__text:0000000100006602                 mov     [rbp+var_70], rdi
__text:0000000100006606                 mov     rdx, [rbp+var_68]
__text:000000010000660A                 mov     rsi, [rbp+var_70]
__text:000000010000660E                 mov     [rbp+var_50], rdx
__text:0000000100006612                 mov     [rbp+var_58], rsi
__text:0000000100006616                 mov     rdx, [rbp+var_50]
__text:000000010000661A                 mov     r8d, [rdx]
__text:000000010000661D                 mov     rdx, [rbp+var_58]
__text:0000000100006621                 cmp     r8d, [rdx]
__text:0000000100006624                 mov     [rbp+var_171], al
__text:000000010000662A                 jl      loc_10000666D
__text:0000000100006630                 mov     al, 0
__text:0000000100006632                 mov     rcx, [rbp+var_58]
__text:0000000100006636                 mov     edx, [rcx]
__text:0000000100006638                 mov     rcx, [rbp+var_50]
__text:000000010000663C                 cmp     edx, [rcx]
__text:000000010000663E                 mov     [rbp+var_172], al
__text:0000000100006644                 jl      loc_100006661
__text:000000010000664A                 mov     rax, [rbp+var_50]
__text:000000010000664E                 mov     ecx, [rax+4]
__text:0000000100006651                 mov     rax, [rbp+var_58]
__text:0000000100006655                 cmp     ecx, [rax+4]
__text:0000000100006658                 setl    dl
__text:000000010000665B                 mov     [rbp+var_172], dl
__text:0000000100006661
__text:0000000100006661 loc_100006661:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+174↑j
__text:0000000100006661                 mov     al, [rbp+var_172]
__text:0000000100006667                 mov     [rbp+var_171], al
__text:000000010000666D
__text:000000010000666D loc_10000666D:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+15A↑j
__text:000000010000666D                 mov     al, [rbp+var_171]
__text:0000000100006673                 test    al, 1
__text:0000000100006675                 jnz     loc_100006680
__text:000000010000667B                 jmp     loc_10000672F
__text:0000000100006680 ; ---------------------------------------------------------------------------
__text:0000000100006680
__text:0000000100006680 loc_100006680:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+1A5↑j
__text:0000000100006680                 lea     rax, [rbp+var_160]
__text:0000000100006687                 lea     rcx, [rbp+var_98]
__text:000000010000668E                 mov     rdx, [rbp+var_150]
__text:0000000100006695                 mov     rdx, [rdx]
__text:0000000100006698                 mov     [rbp+var_88], rcx
__text:000000010000669F                 mov     [rbp+var_90], 0FFFFFFFFFFFFFFFFh
__text:00000001000066AA                 mov     rcx, [rbp+var_88]
__text:00000001000066B1                 mov     rsi, [rbp+var_90]
__text:00000001000066B8                 mov     [rbp+var_78], rcx
__text:00000001000066BC                 mov     [rbp+var_80], rsi
__text:00000001000066C0                 mov     rcx, [rbp+var_78]
__text:00000001000066C4                 mov     qword ptr [rcx], 0
__text:00000001000066CB                 mov     rcx, [rbp+var_98]
__text:00000001000066D2                 mov     [rbp+var_160], rcx
__text:00000001000066D9                 mov     [rbp+var_A0], rax
__text:00000001000066E0                 cmp     rdx, 0
__text:00000001000066E7                 jz      loc_100006703
__text:00000001000066ED                 mov     rax, [rbp+var_150]
__text:00000001000066F4                 mov     rax, [rax]
__text:00000001000066F7                 mov     [rbp+var_150], rax
__text:00000001000066FE                 jmp     loc_10000672A
__text:0000000100006703 ; ---------------------------------------------------------------------------
__text:0000000100006703
__text:0000000100006703 loc_100006703:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+217↑j
__text:0000000100006703                 mov     rax, [rbp+var_150]
__text:000000010000670A                 mov     rcx, [rbp+var_140]
__text:0000000100006711                 mov     [rcx], rax
__text:0000000100006714                 mov     rax, [rbp+var_140]
__text:000000010000671B                 mov     rax, [rax]
__text:000000010000671E                 mov     [rbp+var_130], rax
__text:0000000100006725                 jmp     loc_100006863
__text:000000010000672A ; ---------------------------------------------------------------------------
__text:000000010000672A
__text:000000010000672A loc_10000672A:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+22E↑j
__text:000000010000672A                 jmp     loc_1000067EF
__text:000000010000672F ; ---------------------------------------------------------------------------
__text:000000010000672F
__text:000000010000672F loc_10000672F:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+1AB↑j
__text:000000010000672F                 lea     rax, [rbp+var_168]
__text:0000000100006736                 lea     rcx, [rbp+var_C8]
__text:000000010000673D                 mov     rdx, [rbp+var_150]
__text:0000000100006744                 mov     rdx, [rdx+8]
__text:0000000100006748                 mov     [rbp+var_B8], rcx
__text:000000010000674F                 mov     [rbp+var_C0], 0FFFFFFFFFFFFFFFFh
__text:000000010000675A                 mov     rcx, [rbp+var_B8]
__text:0000000100006761                 mov     rsi, [rbp+var_C0]
__text:0000000100006768                 mov     [rbp+var_A8], rcx
__text:000000010000676F                 mov     [rbp+var_B0], rsi
__text:0000000100006776                 mov     rcx, [rbp+var_A8]
__text:000000010000677D                 mov     qword ptr [rcx], 0
__text:0000000100006784                 mov     rcx, [rbp+var_C8]
__text:000000010000678B                 mov     [rbp+var_168], rcx
__text:0000000100006792                 mov     [rbp+var_D0], rax
__text:0000000100006799                 cmp     rdx, 0
__text:00000001000067A0                 jz      loc_1000067BD
__text:00000001000067A6                 mov     rax, [rbp+var_150]
__text:00000001000067AD                 mov     rax, [rax+8]
__text:00000001000067B1                 mov     [rbp+var_150], rax
__text:00000001000067B8                 jmp     loc_1000067EA
__text:00000001000067BD ; ---------------------------------------------------------------------------
__text:00000001000067BD
__text:00000001000067BD loc_1000067BD:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+2D0↑j
__text:00000001000067BD                 mov     rax, [rbp+var_150]
__text:00000001000067C4                 mov     rcx, [rbp+var_140]
__text:00000001000067CB                 mov     [rcx], rax
__text:00000001000067CE                 mov     rax, [rbp+var_140]
__text:00000001000067D5                 mov     rax, [rax]
__text:00000001000067D8                 add     rax, 8
__text:00000001000067DE                 mov     [rbp+var_130], rax
__text:00000001000067E5                 jmp     loc_100006863
__text:00000001000067EA ; ---------------------------------------------------------------------------
__text:00000001000067EA
__text:00000001000067EA loc_1000067EA:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+2E8↑j
__text:00000001000067EA                 jmp     $+5
__text:00000001000067EF ; ---------------------------------------------------------------------------
__text:00000001000067EF
__text:00000001000067EF loc_1000067EF:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&):loc_10000672A↑j
__text:00000001000067EF                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&):loc_1000067EA↑j
__text:00000001000067EF                 jmp     loc_1000065BD
__text:00000001000067F4 ; ---------------------------------------------------------------------------
__text:00000001000067F4
__text:00000001000067F4 loc_1000067F4:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+E2↑j
__text:00000001000067F4                 mov     rax, [rbp+var_170]
__text:00000001000067FB                 mov     [rbp+var_F8], rax
__text:0000000100006802                 mov     rcx, [rbp+var_F8]
__text:0000000100006809                 add     rcx, 8
__text:0000000100006810                 mov     [rbp+var_F0], rcx
__text:0000000100006817                 mov     rcx, [rbp+var_F0]
__text:000000010000681E                 mov     [rbp+var_E8], rcx
__text:0000000100006825                 mov     rcx, [rbp+var_E8]
__text:000000010000682C                 mov     [rbp+var_E0], rcx
__text:0000000100006833                 mov     rcx, [rbp+var_E0]
__text:000000010000683A                 mov     [rbp+var_D8], rcx
__text:0000000100006841                 mov     rcx, [rbp+var_D8]
__text:0000000100006848                 mov     rdx, [rbp+var_140]
__text:000000010000684F                 mov     [rdx], rcx
__text:0000000100006852                 mov     rcx, [rbp+var_140]
__text:0000000100006859                 mov     rcx, [rcx]
__text:000000010000685C                 mov     [rbp+var_130], rcx
__text:0000000100006863
__text:0000000100006863 loc_100006863:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+255↑j
__text:0000000100006863                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_leaf_high(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+315↑j
__text:0000000100006863                 mov     rax, [rbp+var_130]
__text:000000010000686A                 add     rsp, 0F8h
__text:0000000100006871                 pop     rbp
__text:0000000100006872                 retn
__text:0000000100006872 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__find_leaf_highERPNS_16__tree_node_baseIPvEERKS2_ endp
__text:0000000100006872
__text:0000000100006872 ; ---------------------------------------------------------------------------
__text:0000000100006873                 align 20h
__text:0000000100006880
__text:0000000100006880 ; =============== S U B R O U T I N E =======================================
__text:0000000100006880
__text:0000000100006880 ; Attributes: bp-based frame
__text:0000000100006880
__text:0000000100006880 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__construct_node(std::__1::pair<int, int> const&)
__text:0000000100006880 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_ proc near
__text:0000000100006880                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2__ptr↓o
__text:0000000100006880
__text:0000000100006880 var_C38         = qword ptr -0C38h
__text:0000000100006880 var_C30         = qword ptr -0C30h
__text:0000000100006880 var_C28         = qword ptr -0C28h
__text:0000000100006880 var_C20         = qword ptr -0C20h
__text:0000000100006880 var_C18         = qword ptr -0C18h
__text:0000000100006880 var_C10         = qword ptr -0C10h
__text:0000000100006880 var_C08         = qword ptr -0C08h
__text:0000000100006880 var_C00         = qword ptr -0C00h
__text:0000000100006880 var_BF8         = qword ptr -0BF8h
__text:0000000100006880 var_BF0         = qword ptr -0BF0h
__text:0000000100006880 var_BE8         = qword ptr -0BE8h
__text:0000000100006880 var_BE0         = qword ptr -0BE0h
__text:0000000100006880 var_BD8         = qword ptr -0BD8h
__text:0000000100006880 var_BD0         = qword ptr -0BD0h
__text:0000000100006880 var_BC8         = qword ptr -0BC8h
__text:0000000100006880 var_BBC         = dword ptr -0BBCh
__text:0000000100006880 var_BB8         = byte ptr -0BB8h
__text:0000000100006880 var_BA0         = qword ptr -0BA0h
__text:0000000100006880 var_B88         = qword ptr -0B88h
__text:0000000100006880 var_B80         = byte ptr -0B80h
__text:0000000100006880 var_B78         = byte ptr -0B78h
__text:0000000100006880 var_B60         = qword ptr -0B60h
__text:0000000100006880 var_B58         = qword ptr -0B58h
__text:0000000100006880 var_B50         = qword ptr -0B50h
__text:0000000100006880 var_B48         = qword ptr -0B48h
__text:0000000100006880 var_B40         = qword ptr -0B40h
__text:0000000100006880 var_B38         = qword ptr -0B38h
__text:0000000100006880 var_B30         = qword ptr -0B30h
__text:0000000100006880 var_B28         = qword ptr -0B28h
__text:0000000100006880 var_B20         = qword ptr -0B20h
__text:0000000100006880 var_B18         = qword ptr -0B18h
__text:0000000100006880 var_B10         = qword ptr -0B10h
__text:0000000100006880 var_B08         = qword ptr -0B08h
__text:0000000100006880 var_B00         = qword ptr -0B00h
__text:0000000100006880 var_AF8         = qword ptr -0AF8h
__text:0000000100006880 var_AF0         = qword ptr -0AF0h
__text:0000000100006880 var_A08         = qword ptr -0A08h
__text:0000000100006880 var_A00         = byte ptr -0A00h
__text:0000000100006880 var_9F8         = qword ptr -9F8h
__text:0000000100006880 var_9F0         = qword ptr -9F0h
__text:0000000100006880 var_9E8         = qword ptr -9E8h
__text:0000000100006880 var_9E0         = qword ptr -9E0h
__text:0000000100006880 var_9D8         = qword ptr -9D8h
__text:0000000100006880 var_9D0         = byte ptr -9D0h
__text:0000000100006880 var_9C8         = qword ptr -9C8h
__text:0000000100006880 var_9C0         = qword ptr -9C0h
__text:0000000100006880 var_9B8         = qword ptr -9B8h
__text:0000000100006880 var_9B0         = qword ptr -9B0h
__text:0000000100006880 var_9A8         = byte ptr -9A8h
__text:0000000100006880 var_9A0         = qword ptr -9A0h
__text:0000000100006880 var_998         = qword ptr -998h
__text:0000000100006880 var_990         = qword ptr -990h
__text:0000000100006880 var_988         = qword ptr -988h
__text:0000000100006880 var_980         = qword ptr -980h
__text:0000000100006880 var_978         = byte ptr -978h
__text:0000000100006880 var_970         = qword ptr -970h
__text:0000000100006880 var_968         = qword ptr -968h
__text:0000000100006880 var_960         = qword ptr -960h
__text:0000000100006880 var_958         = qword ptr -958h
__text:0000000100006880 var_950         = byte ptr -950h
__text:0000000100006880 var_948         = qword ptr -948h
__text:0000000100006880 var_940         = qword ptr -940h
__text:0000000100006880 var_938         = qword ptr -938h
__text:0000000100006880 var_930         = qword ptr -930h
__text:0000000100006880 var_928         = qword ptr -928h
__text:0000000100006880 var_920         = qword ptr -920h
__text:0000000100006880 var_838         = qword ptr -838h
__text:0000000100006880 var_830         = qword ptr -830h
__text:0000000100006880 var_828         = qword ptr -828h
__text:0000000100006880 var_820         = qword ptr -820h
__text:0000000100006880 var_818         = qword ptr -818h
__text:0000000100006880 var_810         = qword ptr -810h
__text:0000000100006880 var_808         = qword ptr -808h
__text:0000000100006880 var_800         = qword ptr -800h
__text:0000000100006880 var_7F8         = qword ptr -7F8h
__text:0000000100006880 var_7F0         = qword ptr -7F0h
__text:0000000100006880 var_7D8         = qword ptr -7D8h
__text:0000000100006880 var_7D0         = qword ptr -7D0h
__text:0000000100006880 var_7C8         = qword ptr -7C8h
__text:0000000100006880 var_7C0         = qword ptr -7C0h
__text:0000000100006880 var_7B8         = qword ptr -7B8h
__text:0000000100006880 var_7B0         = qword ptr -7B0h
__text:0000000100006880 var_7A8         = qword ptr -7A8h
__text:0000000100006880 var_7A0         = qword ptr -7A0h
__text:0000000100006880 var_798         = qword ptr -798h
__text:0000000100006880 var_780         = qword ptr -780h
__text:0000000100006880 var_778         = qword ptr -778h
__text:0000000100006880 var_770         = qword ptr -770h
__text:0000000100006880 var_768         = qword ptr -768h
__text:0000000100006880 var_760         = qword ptr -760h
__text:0000000100006880 var_758         = qword ptr -758h
__text:0000000100006880 var_750         = qword ptr -750h
__text:0000000100006880 var_748         = qword ptr -748h
__text:0000000100006880 var_740         = qword ptr -740h
__text:0000000100006880 var_738         = qword ptr -738h
__text:0000000100006880 var_730         = qword ptr -730h
__text:0000000100006880 var_728         = qword ptr -728h
__text:0000000100006880 var_720         = qword ptr -720h
__text:0000000100006880 var_718         = qword ptr -718h
__text:0000000100006880 var_710         = qword ptr -710h
__text:0000000100006880 var_708         = qword ptr -708h
__text:0000000100006880 var_6F0         = qword ptr -6F0h
__text:0000000100006880 var_6E8         = qword ptr -6E8h
__text:0000000100006880 var_6E0         = qword ptr -6E0h
__text:0000000100006880 var_6D8         = qword ptr -6D8h
__text:0000000100006880 var_6D0         = qword ptr -6D0h
__text:0000000100006880 var_6C8         = qword ptr -6C8h
__text:0000000100006880 var_6C0         = qword ptr -6C0h
__text:0000000100006880 var_6B8         = qword ptr -6B8h
__text:0000000100006880 var_6B0         = qword ptr -6B0h
__text:0000000100006880 var_698         = qword ptr -698h
__text:0000000100006880 var_690         = qword ptr -690h
__text:0000000100006880 var_688         = qword ptr -688h
__text:0000000100006880 var_680         = qword ptr -680h
__text:0000000100006880 var_678         = qword ptr -678h
__text:0000000100006880 var_670         = qword ptr -670h
__text:0000000100006880 var_668         = qword ptr -668h
__text:0000000100006880 var_660         = qword ptr -660h
__text:0000000100006880 var_658         = qword ptr -658h
__text:0000000100006880 var_650         = qword ptr -650h
__text:0000000100006880 var_648         = qword ptr -648h
__text:0000000100006880 var_640         = qword ptr -640h
__text:0000000100006880 var_638         = qword ptr -638h
__text:0000000100006880 var_630         = qword ptr -630h
__text:0000000100006880 var_628         = qword ptr -628h
__text:0000000100006880 var_620         = qword ptr -620h
__text:0000000100006880 var_618         = qword ptr -618h
__text:0000000100006880 var_610         = qword ptr -610h
__text:0000000100006880 var_608         = qword ptr -608h
__text:0000000100006880 var_600         = qword ptr -600h
__text:0000000100006880 var_5F8         = qword ptr -5F8h
__text:0000000100006880 var_5F0         = qword ptr -5F0h
__text:0000000100006880 var_5E8         = qword ptr -5E8h
__text:0000000100006880 var_5E0         = byte ptr -5E0h
__text:0000000100006880 var_5D8         = qword ptr -5D8h
__text:0000000100006880 var_5D0         = qword ptr -5D0h
__text:0000000100006880 var_5C8         = qword ptr -5C8h
__text:0000000100006880 var_5C0         = qword ptr -5C0h
__text:0000000100006880 var_5B8         = qword ptr -5B8h
__text:0000000100006880 var_5B0         = byte ptr -5B0h
__text:0000000100006880 var_5A8         = qword ptr -5A8h
__text:0000000100006880 var_5A0         = qword ptr -5A0h
__text:0000000100006880 var_598         = qword ptr -598h
__text:0000000100006880 var_590         = qword ptr -590h
__text:0000000100006880 var_588         = byte ptr -588h
__text:0000000100006880 var_580         = qword ptr -580h
__text:0000000100006880 var_578         = qword ptr -578h
__text:0000000100006880 var_570         = qword ptr -570h
__text:0000000100006880 var_568         = qword ptr -568h
__text:0000000100006880 var_560         = qword ptr -560h
__text:0000000100006880 var_558         = qword ptr -558h
__text:0000000100006880 var_550         = qword ptr -550h
__text:0000000100006880 var_548         = qword ptr -548h
__text:0000000100006880 var_540         = qword ptr -540h
__text:0000000100006880 var_538         = qword ptr -538h
__text:0000000100006880 var_530         = qword ptr -530h
__text:0000000100006880 var_528         = qword ptr -528h
__text:0000000100006880 var_520         = qword ptr -520h
__text:0000000100006880 var_518         = qword ptr -518h
__text:0000000100006880 var_510         = qword ptr -510h
__text:0000000100006880 var_508         = qword ptr -508h
__text:0000000100006880 var_500         = qword ptr -500h
__text:0000000100006880 var_4F8         = qword ptr -4F8h
__text:0000000100006880 var_4F0         = qword ptr -4F0h
__text:0000000100006880 var_4E8         = qword ptr -4E8h
__text:0000000100006880 var_4E0         = qword ptr -4E0h
__text:0000000100006880 var_4D8         = qword ptr -4D8h
__text:0000000100006880 var_4C0         = qword ptr -4C0h
__text:0000000100006880 var_4B8         = byte ptr -4B8h
__text:0000000100006880 var_4A0         = qword ptr -4A0h
__text:0000000100006880 var_498         = qword ptr -498h
__text:0000000100006880 var_490         = qword ptr -490h
__text:0000000100006880 var_488         = qword ptr -488h
__text:0000000100006880 var_480         = qword ptr -480h
__text:0000000100006880 var_478         = qword ptr -478h
__text:0000000100006880 var_470         = qword ptr -470h
__text:0000000100006880 var_468         = qword ptr -468h
__text:0000000100006880 var_460         = qword ptr -460h
__text:0000000100006880 var_458         = qword ptr -458h
__text:0000000100006880 var_450         = qword ptr -450h
__text:0000000100006880 var_448         = qword ptr -448h
__text:0000000100006880 var_440         = qword ptr -440h
__text:0000000100006880 var_438         = qword ptr -438h
__text:0000000100006880 var_430         = byte ptr -430h
__text:0000000100006880 var_428         = qword ptr -428h
__text:0000000100006880 var_420         = qword ptr -420h
__text:0000000100006880 var_418         = qword ptr -418h
__text:0000000100006880 var_410         = qword ptr -410h
__text:0000000100006880 var_408         = qword ptr -408h
__text:0000000100006880 var_400         = byte ptr -400h
__text:0000000100006880 var_3F8         = qword ptr -3F8h
__text:0000000100006880 var_3F0         = qword ptr -3F0h
__text:0000000100006880 var_3E8         = qword ptr -3E8h
__text:0000000100006880 var_3E0         = qword ptr -3E0h
__text:0000000100006880 var_3D8         = byte ptr -3D8h
__text:0000000100006880 var_3D0         = qword ptr -3D0h
__text:0000000100006880 var_3C8         = qword ptr -3C8h
__text:0000000100006880 var_3C0         = qword ptr -3C0h
__text:0000000100006880 var_3B8         = qword ptr -3B8h
__text:0000000100006880 var_3B0         = qword ptr -3B0h
__text:0000000100006880 var_3A8         = qword ptr -3A8h
__text:0000000100006880 var_3A0         = qword ptr -3A0h
__text:0000000100006880 var_398         = qword ptr -398h
__text:0000000100006880 var_390         = qword ptr -390h
__text:0000000100006880 var_388         = qword ptr -388h
__text:0000000100006880 var_380         = qword ptr -380h
__text:0000000100006880 var_378         = qword ptr -378h
__text:0000000100006880 var_370         = qword ptr -370h
__text:0000000100006880 var_368         = qword ptr -368h
__text:0000000100006880 var_360         = qword ptr -360h
__text:0000000100006880 var_358         = qword ptr -358h
__text:0000000100006880 var_270         = qword ptr -270h
__text:0000000100006880 var_268         = qword ptr -268h
__text:0000000100006880 var_260         = qword ptr -260h
__text:0000000100006880 var_258         = qword ptr -258h
__text:0000000100006880 var_250         = qword ptr -250h
__text:0000000100006880 var_248         = qword ptr -248h
__text:0000000100006880 var_240         = qword ptr -240h
__text:0000000100006880 var_238         = qword ptr -238h
__text:0000000100006880 var_230         = qword ptr -230h
__text:0000000100006880 var_228         = qword ptr -228h
__text:0000000100006880 var_220         = qword ptr -220h
__text:0000000100006880 var_218         = qword ptr -218h
__text:0000000100006880 var_210         = qword ptr -210h
__text:0000000100006880 var_1F8         = qword ptr -1F8h
__text:0000000100006880 var_1F0         = qword ptr -1F0h
__text:0000000100006880 var_1E8         = qword ptr -1E8h
__text:0000000100006880 var_1E0         = qword ptr -1E0h
__text:0000000100006880 var_1D8         = qword ptr -1D8h
__text:0000000100006880 var_1D0         = qword ptr -1D0h
__text:0000000100006880 var_1C8         = qword ptr -1C8h
__text:0000000100006880 var_1C0         = qword ptr -1C0h
__text:0000000100006880 var_1B8         = qword ptr -1B8h
__text:0000000100006880 var_1A0         = qword ptr -1A0h
__text:0000000100006880 var_198         = qword ptr -198h
__text:0000000100006880 var_190         = qword ptr -190h
__text:0000000100006880 var_188         = qword ptr -188h
__text:0000000100006880 var_180         = qword ptr -180h
__text:0000000100006880 var_178         = qword ptr -178h
__text:0000000100006880 var_170         = qword ptr -170h
__text:0000000100006880 var_168         = qword ptr -168h
__text:0000000100006880 var_160         = qword ptr -160h
__text:0000000100006880 var_158         = qword ptr -158h
__text:0000000100006880 var_150         = qword ptr -150h
__text:0000000100006880 var_148         = qword ptr -148h
__text:0000000100006880 var_140         = qword ptr -140h
__text:0000000100006880 var_138         = qword ptr -138h
__text:0000000100006880 var_130         = qword ptr -130h
__text:0000000100006880 var_128         = qword ptr -128h
__text:0000000100006880 var_120         = byte ptr -120h
__text:0000000100006880 var_118         = qword ptr -118h
__text:0000000100006880 var_110         = qword ptr -110h
__text:0000000100006880 var_108         = qword ptr -108h
__text:0000000100006880 var_100         = qword ptr -100h
__text:0000000100006880 var_F8          = qword ptr -0F8h
__text:0000000100006880 var_F0          = byte ptr -0F0h
__text:0000000100006880 var_E8          = qword ptr -0E8h
__text:0000000100006880 var_E0          = qword ptr -0E0h
__text:0000000100006880 var_D8          = qword ptr -0D8h
__text:0000000100006880 var_D0          = qword ptr -0D0h
__text:0000000100006880 var_C8          = byte ptr -0C8h
__text:0000000100006880 var_C0          = qword ptr -0C0h
__text:0000000100006880 var_B8          = qword ptr -0B8h
__text:0000000100006880 var_B0          = qword ptr -0B0h
__text:0000000100006880 var_A8          = qword ptr -0A8h
__text:0000000100006880 var_A0          = qword ptr -0A0h
__text:0000000100006880 var_98          = qword ptr -98h
__text:0000000100006880 var_90          = qword ptr -90h
__text:0000000100006880 var_88          = qword ptr -88h
__text:0000000100006880 var_80          = qword ptr -80h
__text:0000000100006880 var_78          = qword ptr -78h
__text:0000000100006880 var_70          = qword ptr -70h
__text:0000000100006880 var_68          = qword ptr -68h
__text:0000000100006880 var_60          = qword ptr -60h
__text:0000000100006880 var_58          = qword ptr -58h
__text:0000000100006880 var_50          = qword ptr -50h
__text:0000000100006880 var_48          = qword ptr -48h
__text:0000000100006880 var_40          = qword ptr -40h
__text:0000000100006880 var_38          = qword ptr -38h
__text:0000000100006880 var_30          = qword ptr -30h
__text:0000000100006880
__text:0000000100006880                 push    rbp
__text:0000000100006881                 mov     rbp, rsp
__text:0000000100006884                 push    r15
__text:0000000100006886                 push    r14
__text:0000000100006888                 push    r13
__text:000000010000688A                 push    r12
__text:000000010000688C                 push    rbx
__text:000000010000688D                 sub     rsp, 0C18h
__text:0000000100006894                 mov     rax, rdi
__text:0000000100006897                 mov     [rbp+var_B50], rsi
__text:000000010000689E                 mov     [rbp+var_B58], rdx
__text:00000001000068A5                 mov     rdx, [rbp+var_B50]
__text:00000001000068AC                 mov     [rbp+var_B48], rdx
__text:00000001000068B3                 mov     rdx, [rbp+var_B48]
__text:00000001000068BA                 add     rdx, 8
__text:00000001000068C1                 mov     [rbp+var_B40], rdx
__text:00000001000068C8                 mov     rdx, [rbp+var_B40]
__text:00000001000068CF                 mov     [rbp+var_B38], rdx
__text:00000001000068D6                 mov     rdx, [rbp+var_B38]
__text:00000001000068DD                 mov     [rbp+var_B60], rdx
__text:00000001000068E4                 mov     rdx, [rbp+var_B60]
__text:00000001000068EB                 mov     [rbp+var_B28], rdx
__text:00000001000068F2                 mov     [rbp+var_B30], 1
__text:00000001000068FD                 mov     rdx, [rbp+var_B28]
__text:0000000100006904                 mov     rsi, [rbp+var_B30]
__text:000000010000690B                 mov     [rbp+var_B10], rdx
__text:0000000100006912                 mov     [rbp+var_B18], rsi
__text:0000000100006919                 mov     [rbp+var_B20], 0
__text:0000000100006924                 imul    rdx, [rbp+var_B18], 28h
__text:000000010000692F                 mov     [rbp+var_BC8], rdi
__text:0000000100006936                 mov     rdi, rdx        ; unsigned __int64
__text:0000000100006939                 mov     [rbp+var_BD0], rax
__text:0000000100006940                 call    __Znwm          ; operator new(ulong)
__text:0000000100006945                 lea     rdx, [rbp+var_B78]
__text:000000010000694C                 lea     rsi, [rbp+var_958]
__text:0000000100006953                 lea     rdi, [rbp+var_948]
__text:000000010000695A                 lea     rcx, [rbp+var_980]
__text:0000000100006961                 lea     r8, [rbp+var_970]
__text:0000000100006968                 lea     r9, [rbp+var_9D8]
__text:000000010000696F                 lea     r10, [rbp+var_9C8]
__text:0000000100006976                 lea     r11, [rbp+var_B88]
__text:000000010000697D                 mov     rbx, [rbp+var_B60]
__text:0000000100006984                 mov     [rbp+var_B00], r11
__text:000000010000698B                 mov     [rbp+var_B08], rbx
__text:0000000100006992                 mov     r11, [rbp+var_B00]
__text:0000000100006999                 mov     rbx, [rbp+var_B08]
__text:00000001000069A0                 mov     [rbp+var_AF0], r11
__text:00000001000069A7                 mov     [rbp+var_AF8], rbx
__text:00000001000069AE                 mov     r11, [rbp+var_AF0]
__text:00000001000069B5                 mov     rbx, [rbp+var_AF8]
__text:00000001000069BC                 mov     [r11], rbx
__text:00000001000069BF                 mov     byte ptr [r11+8], 0
__text:00000001000069C4                 mov     r11, [rbp+var_B88]
__text:00000001000069CB                 mov     r14b, [rbp+var_B80]
__text:00000001000069D2                 mov     [rbp+var_9F0], rdx
__text:00000001000069D9                 mov     [rbp+var_9F8], rax
__text:00000001000069E0                 mov     [rbp+var_A08], r11
__text:00000001000069E7                 mov     [rbp+var_A00], r14b
__text:00000001000069EE                 mov     rax, [rbp+var_9F0]
__text:00000001000069F5                 mov     r11, [rbp+var_9F8]
__text:00000001000069FC                 mov     rbx, [rbp+var_A08]
__text:0000000100006A03                 mov     r14b, [rbp+var_A00]
__text:0000000100006A0A                 mov     [rbp+var_9C0], rax
__text:0000000100006A11                 mov     [rbp+var_9C8], r11
__text:0000000100006A18                 mov     [rbp+var_9D8], rbx
__text:0000000100006A1F                 mov     [rbp+var_9D0], r14b
__text:0000000100006A26                 mov     rax, [rbp+var_9C0]
__text:0000000100006A2D                 mov     [rbp+var_9B8], r10
__text:0000000100006A34                 mov     r10, [rbp+var_9B8]
__text:0000000100006A3B                 mov     r10, [r10]
__text:0000000100006A3E                 mov     [rbp+var_920], r9
__text:0000000100006A45                 mov     r9, [rbp+var_920]
__text:0000000100006A4C                 mov     r11, [r9]
__text:0000000100006A4F                 mov     [rbp+var_9E8], r11
__text:0000000100006A56                 mov     r9, [r9+8]
__text:0000000100006A5A                 mov     [rbp+var_9E0], r9
__text:0000000100006A61                 mov     r9, [rbp+var_9E8]
__text:0000000100006A68                 mov     r14b, byte ptr [rbp+var_9E0]
__text:0000000100006A6F                 mov     [rbp+var_998], rax
__text:0000000100006A76                 mov     [rbp+var_9A0], r10
__text:0000000100006A7D                 mov     [rbp+var_9B0], r9
__text:0000000100006A84                 mov     [rbp+var_9A8], r14b
__text:0000000100006A8B                 mov     rax, [rbp+var_998]
__text:0000000100006A92                 mov     r9, [rbp+var_9A0]
__text:0000000100006A99                 mov     r10, [rbp+var_9B0]
__text:0000000100006AA0                 mov     r14b, [rbp+var_9A8]
__text:0000000100006AA7                 mov     [rbp+var_968], rax
__text:0000000100006AAE                 mov     [rbp+var_970], r9
__text:0000000100006AB5                 mov     [rbp+var_980], r10
__text:0000000100006ABC                 mov     [rbp+var_978], r14b
__text:0000000100006AC3                 mov     rax, [rbp+var_968]
__text:0000000100006ACA                 mov     [rbp+var_960], r8
__text:0000000100006AD1                 mov     r8, [rbp+var_960]
__text:0000000100006AD8                 mov     r8, [r8]
__text:0000000100006ADB                 mov     [rbp+var_928], rcx
__text:0000000100006AE2                 mov     rcx, [rbp+var_928]
__text:0000000100006AE9                 mov     r9, [rcx]
__text:0000000100006AEC                 mov     [rbp+var_990], r9
__text:0000000100006AF3                 mov     rcx, [rcx+8]
__text:0000000100006AF7                 mov     [rbp+var_988], rcx
__text:0000000100006AFE                 mov     rcx, [rbp+var_990]
__text:0000000100006B05                 mov     r14b, byte ptr [rbp+var_988]
__text:0000000100006B0C                 mov     [rbp+var_940], rax
__text:0000000100006B13                 mov     [rbp+var_948], r8
__text:0000000100006B1A                 mov     [rbp+var_958], rcx
__text:0000000100006B21                 mov     [rbp+var_950], r14b
__text:0000000100006B28                 mov     rax, [rbp+var_940]
__text:0000000100006B2F                 mov     [rbp+var_938], rdi
__text:0000000100006B36                 mov     rcx, [rbp+var_938]
__text:0000000100006B3D                 mov     rcx, [rcx]
__text:0000000100006B40                 mov     [rax], rcx
__text:0000000100006B43                 mov     [rbp+var_930], rsi
__text:0000000100006B4A                 mov     rcx, [rbp+var_930]
__text:0000000100006B51                 mov     rsi, [rcx]
__text:0000000100006B54                 mov     [rax+8], rsi
__text:0000000100006B58                 mov     rcx, [rcx+8]
__text:0000000100006B5C                 mov     [rax+10h], rcx
__text:0000000100006B60                 mov     rax, [rbp+var_B60]
__text:0000000100006B67                 mov     [rbp+var_838], rdx
__text:0000000100006B6E                 mov     rcx, [rbp+var_838]
__text:0000000100006B75                 mov     [rbp+var_830], rcx
__text:0000000100006B7C                 mov     rcx, [rbp+var_830]
__text:0000000100006B83                 mov     [rbp+var_828], rcx
__text:0000000100006B8A                 mov     rcx, [rbp+var_828]
__text:0000000100006B91                 mov     rcx, [rcx]
__text:0000000100006B94                 add     rcx, 1Ch
__text:0000000100006B9B                 mov     [rbp+var_740], rcx
__text:0000000100006BA2                 mov     rcx, [rbp+var_740]
__text:0000000100006BA9                 mov     rdx, [rbp+var_B58]
__text:0000000100006BB0                 mov     [rbp+var_648], rax
__text:0000000100006BB7                 mov     [rbp+var_650], rcx
__text:0000000100006BBE                 mov     [rbp+var_658], rdx
__text:0000000100006BC5                 mov     rax, [rbp+var_650]
__text:0000000100006BCC                 cmp     rax, 0
__text:0000000100006BD2                 mov     [rbp+var_BD8], rax
__text:0000000100006BD9                 jz      loc_100006C36
__text:0000000100006BDF                 mov     rax, [rbp+var_BD8]
__text:0000000100006BE6                 mov     rcx, [rbp+var_658]
__text:0000000100006BED                 mov     [rbp+var_638], rax
__text:0000000100006BF4                 mov     [rbp+var_640], rcx
__text:0000000100006BFB                 mov     rax, [rbp+var_638]
__text:0000000100006C02                 mov     rcx, [rbp+var_640]
__text:0000000100006C09                 mov     [rbp+var_628], rax
__text:0000000100006C10                 mov     [rbp+var_630], rcx
__text:0000000100006C17                 mov     rax, [rbp+var_628]
__text:0000000100006C1E                 mov     rcx, [rbp+var_630]
__text:0000000100006C25                 mov     edx, [rcx]
__text:0000000100006C27                 mov     [rax], edx
__text:0000000100006C29                 mov     rcx, [rbp+var_630]
__text:0000000100006C30                 mov     edx, [rcx+4]
__text:0000000100006C33                 mov     [rax+4], edx
__text:0000000100006C36
__text:0000000100006C36 loc_100006C36:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+359↑j
__text:0000000100006C36                 lea     rax, [rbp+var_4B8]
__text:0000000100006C3D                 lea     rcx, [rbp+var_D0]
__text:0000000100006C44                 lea     rdx, [rbp+var_C0]
__text:0000000100006C4B                 lea     rsi, [rbp+var_F8]
__text:0000000100006C52                 lea     rdi, [rbp+var_E8]
__text:0000000100006C59                 lea     r8, [rbp+var_140]
__text:0000000100006C60                 lea     r9, [rbp+var_BB8]
__text:0000000100006C67                 lea     r10, [rbp+var_268]
__text:0000000100006C6E                 lea     r11, [rbp+var_3E0]
__text:0000000100006C75                 lea     rbx, [rbp+var_3D0]
__text:0000000100006C7C                 lea     r14, [rbp+var_408]
__text:0000000100006C83                 lea     r15, [rbp+var_3F8]
__text:0000000100006C8A                 lea     r12, [rbp+var_450]
__text:0000000100006C91                 lea     r13, [rbp+var_4C0]
__text:0000000100006C98                 mov     [rbp+var_BE0], rax
__text:0000000100006C9F                 lea     rax, [rbp+var_B78]
__text:0000000100006CA6                 mov     [rbp+var_40], rax
__text:0000000100006CAA                 mov     [rbp+var_BE8], rax
__text:0000000100006CB1                 mov     rax, [rbp+var_40]
__text:0000000100006CB5                 mov     [rbp+var_38], rax
__text:0000000100006CB9                 mov     rax, [rbp+var_38]
__text:0000000100006CBD                 mov     [rbp+var_30], rax
__text:0000000100006CC1                 mov     rax, [rbp+var_30]
__text:0000000100006CC5                 mov     byte ptr [rax+10h], 1
__text:0000000100006CC9                 mov     rax, [rbp+var_BE8]
__text:0000000100006CD0                 mov     [rbp+var_498], rax
__text:0000000100006CD7                 mov     rax, [rbp+var_498]
__text:0000000100006CDE                 mov     [rbp+var_488], r13
__text:0000000100006CE5                 mov     [rbp+var_490], rax
__text:0000000100006CEC                 mov     rax, [rbp+var_488]
__text:0000000100006CF3                 mov     r13, [rbp+var_490]
__text:0000000100006CFA                 mov     [rbp+var_478], rax
__text:0000000100006D01                 mov     [rbp+var_480], r13
__text:0000000100006D08                 mov     rax, [rbp+var_478]
__text:0000000100006D0F                 mov     r13, [rbp+var_480]
__text:0000000100006D16                 mov     [rax], r13
__text:0000000100006D19                 mov     rax, [rbp+var_4C0]
__text:0000000100006D20                 mov     r13, [rbp+var_BE0]
__text:0000000100006D27                 mov     [rbp+var_468], r13
__text:0000000100006D2E                 mov     [rbp+var_470], rax
__text:0000000100006D35                 mov     rax, [rbp+var_468]
__text:0000000100006D3C                 mov     r13, [rbp+var_470]
__text:0000000100006D43                 mov     [rbp+var_448], rax
__text:0000000100006D4A                 mov     [rbp+var_450], r13
__text:0000000100006D51                 mov     rax, [rbp+var_448]
__text:0000000100006D58                 mov     [rbp+var_440], r12
__text:0000000100006D5F                 mov     r13, [rbp+var_440]
__text:0000000100006D66                 mov     r13, [r13+0]
__text:0000000100006D6A                 mov     [rbp+var_378], r13
__text:0000000100006D71                 mov     r13, [rbp+var_378]
__text:0000000100006D78                 mov     [rbp+var_370], r13
__text:0000000100006D7F                 mov     [rbp+var_BF0], rax
__text:0000000100006D86                 mov     rax, [rbp+var_370]
__text:0000000100006D8D                 mov     [rbp+var_368], rax
__text:0000000100006D94                 mov     rax, [rbp+var_368]
__text:0000000100006D9B                 mov     rax, [rax]
__text:0000000100006D9E                 mov     [rbp+var_380], rax
__text:0000000100006DA5                 mov     [rbp+var_360], r13
__text:0000000100006DAC                 mov     rax, [rbp+var_360]
__text:0000000100006DB3                 mov     [rbp+var_358], rax
__text:0000000100006DBA                 mov     rax, [rbp+var_358]
__text:0000000100006DC1                 mov     qword ptr [rax], 0
__text:0000000100006DC8                 mov     rax, [rbp+var_380]
__text:0000000100006DCF                 mov     [rbp+var_388], r12
__text:0000000100006DD6                 mov     r12, [rbp+var_388]
__text:0000000100006DDD                 mov     r12, [r12]
__text:0000000100006DE1                 mov     [rbp+var_3A0], r12
__text:0000000100006DE8                 mov     r12, [rbp+var_3A0]
__text:0000000100006DEF                 mov     [rbp+var_398], r12
__text:0000000100006DF6                 mov     r12, [rbp+var_398]
__text:0000000100006DFD                 mov     [rbp+var_390], r12
__text:0000000100006E04                 mov     r12, [rbp+var_390]
__text:0000000100006E0B                 add     r12, 8
__text:0000000100006E12                 mov     [rbp+var_3A8], r12
__text:0000000100006E19                 mov     r12, [rbp+var_3A8]
__text:0000000100006E20                 mov     r13, [r12]
__text:0000000100006E24                 mov     [rbp+var_460], r13
__text:0000000100006E2B                 mov     r12, [r12+8]
__text:0000000100006E30                 mov     [rbp+var_458], r12
__text:0000000100006E37                 mov     r12, [rbp+var_460]
__text:0000000100006E3E                 mov     r13b, byte ptr [rbp+var_458]
__text:0000000100006E45                 mov     [rbp+var_BF8], rax
__text:0000000100006E4C                 mov     rax, [rbp+var_BF0]
__text:0000000100006E53                 mov     [rbp+var_420], rax
__text:0000000100006E5A                 mov     rax, [rbp+var_BF8]
__text:0000000100006E61                 mov     [rbp+var_428], rax
__text:0000000100006E68                 mov     [rbp+var_438], r12
__text:0000000100006E6F                 mov     [rbp+var_430], r13b
__text:0000000100006E76                 mov     r12, [rbp+var_420]
__text:0000000100006E7D                 mov     rax, [rbp+var_428]
__text:0000000100006E84                 mov     r13, [rbp+var_438]
__text:0000000100006E8B                 mov     [rbp+var_C00], rax
__text:0000000100006E92                 mov     al, [rbp+var_430]
__text:0000000100006E98                 mov     [rbp+var_3F0], r12
__text:0000000100006E9F                 mov     r12, [rbp+var_C00]
__text:0000000100006EA6                 mov     [rbp+var_3F8], r12
__text:0000000100006EAD                 mov     [rbp+var_408], r13
__text:0000000100006EB4                 mov     [rbp+var_400], al
__text:0000000100006EBA                 mov     r13, [rbp+var_3F0]
__text:0000000100006EC1                 mov     [rbp+var_3E8], r15
__text:0000000100006EC8                 mov     r15, [rbp+var_3E8]
__text:0000000100006ECF                 mov     r15, [r15]
__text:0000000100006ED2                 mov     [rbp+var_3B0], r14
__text:0000000100006ED9                 mov     r14, [rbp+var_3B0]
__text:0000000100006EE0                 mov     rax, [r14]
__text:0000000100006EE3                 mov     [rbp+var_418], rax
__text:0000000100006EEA                 mov     rax, [r14+8]
__text:0000000100006EEE                 mov     [rbp+var_410], rax
__text:0000000100006EF5                 mov     rax, [rbp+var_418]
__text:0000000100006EFC                 mov     r14b, byte ptr [rbp+var_410]
__text:0000000100006F03                 mov     [rbp+var_3C8], r13
__text:0000000100006F0A                 mov     [rbp+var_3D0], r15
__text:0000000100006F11                 mov     [rbp+var_3E0], rax
__text:0000000100006F18                 mov     [rbp+var_3D8], r14b
__text:0000000100006F1F                 mov     rax, [rbp+var_3C8]
__text:0000000100006F26                 mov     [rbp+var_3C0], rbx
__text:0000000100006F2D                 mov     rbx, [rbp+var_3C0]
__text:0000000100006F34                 mov     rbx, [rbx]
__text:0000000100006F37                 mov     [rax], rbx
__text:0000000100006F3A                 mov     [rbp+var_3B8], r11
__text:0000000100006F41                 mov     r11, [rbp+var_3B8]
__text:0000000100006F48                 mov     rbx, [r11]
__text:0000000100006F4B                 mov     [rax+8], rbx
__text:0000000100006F4F                 mov     r11, [r11+8]
__text:0000000100006F53                 mov     [rax+10h], r11
__text:0000000100006F57                 mov     rax, [rbp+var_BE0]
__text:0000000100006F5E                 mov     [rbp+var_270], rax
__text:0000000100006F65                 mov     r11, [rbp+var_270]
__text:0000000100006F6C                 mov     [rbp+var_258], r10
__text:0000000100006F73                 mov     [rbp+var_260], r11
__text:0000000100006F7A                 mov     r10, [rbp+var_258]
__text:0000000100006F81                 mov     r11, [rbp+var_260]
__text:0000000100006F88                 mov     [rbp+var_248], r10
__text:0000000100006F8F                 mov     [rbp+var_250], r11
__text:0000000100006F96                 mov     r10, [rbp+var_248]
__text:0000000100006F9D                 mov     r11, [rbp+var_250]
__text:0000000100006FA4                 mov     [r10], r11
__text:0000000100006FA7                 mov     r10, [rbp+var_268]
__text:0000000100006FAE                 mov     [rbp+var_4A0], r10
__text:0000000100006FB5                 mov     r10, [rbp+var_4A0]
__text:0000000100006FBC                 mov     [rbp+var_158], r9
__text:0000000100006FC3                 mov     [rbp+var_160], r10
__text:0000000100006FCA                 mov     r9, [rbp+var_158]
__text:0000000100006FD1                 mov     r10, [rbp+var_160]
__text:0000000100006FD8                 mov     [rbp+var_138], r9
__text:0000000100006FDF                 mov     [rbp+var_140], r10
__text:0000000100006FE6                 mov     r9, [rbp+var_138]
__text:0000000100006FED                 mov     [rbp+var_130], r8
__text:0000000100006FF4                 mov     r10, [rbp+var_130]
__text:0000000100006FFB                 mov     r10, [r10]
__text:0000000100006FFE                 mov     [rbp+var_68], r10
__text:0000000100007002                 mov     r10, [rbp+var_68]
__text:0000000100007006                 mov     [rbp+var_60], r10
__text:000000010000700A                 mov     r11, [rbp+var_60]
__text:000000010000700E                 mov     [rbp+var_58], r11
__text:0000000100007012                 mov     r11, [rbp+var_58]
__text:0000000100007016                 mov     r11, [r11]
__text:0000000100007019                 mov     [rbp+var_70], r11
__text:000000010000701D                 mov     [rbp+var_50], r10
__text:0000000100007021                 mov     r10, [rbp+var_50]
__text:0000000100007025                 mov     [rbp+var_48], r10
__text:0000000100007029                 mov     r10, [rbp+var_48]
__text:000000010000702D                 mov     qword ptr [r10], 0
__text:0000000100007034                 mov     r10, [rbp+var_70]
__text:0000000100007038                 mov     [rbp+var_78], r8
__text:000000010000703C                 mov     r8, [rbp+var_78]
__text:0000000100007040                 mov     r8, [r8]
__text:0000000100007043                 mov     [rbp+var_90], r8
__text:000000010000704A                 mov     r8, [rbp+var_90]
__text:0000000100007051                 mov     [rbp+var_88], r8
__text:0000000100007058                 mov     r8, [rbp+var_88]
__text:000000010000705F                 mov     [rbp+var_80], r8
__text:0000000100007063                 mov     r8, [rbp+var_80]
__text:0000000100007067                 add     r8, 8
__text:000000010000706E                 mov     [rbp+var_98], r8
__text:0000000100007075                 mov     r8, [rbp+var_98]
__text:000000010000707C                 mov     r11, [r8]
__text:000000010000707F                 mov     [rbp+var_150], r11
__text:0000000100007086                 mov     r8, [r8+8]
__text:000000010000708A                 mov     [rbp+var_148], r8
__text:0000000100007091                 mov     r8, [rbp+var_150]
__text:0000000100007098                 mov     r14b, byte ptr [rbp+var_148]
__text:000000010000709F                 mov     [rbp+var_110], r9
__text:00000001000070A6                 mov     [rbp+var_118], r10
__text:00000001000070AD                 mov     [rbp+var_128], r8
__text:00000001000070B4                 mov     [rbp+var_120], r14b
__text:00000001000070BB                 mov     r8, [rbp+var_110]
__text:00000001000070C2                 mov     r9, [rbp+var_118]
__text:00000001000070C9                 mov     r10, [rbp+var_128]
__text:00000001000070D0                 mov     r14b, [rbp+var_120]
__text:00000001000070D7                 mov     [rbp+var_E0], r8
__text:00000001000070DE                 mov     [rbp+var_E8], r9
__text:00000001000070E5                 mov     [rbp+var_F8], r10
__text:00000001000070EC                 mov     [rbp+var_F0], r14b
__text:00000001000070F3                 mov     r8, [rbp+var_E0]
__text:00000001000070FA                 mov     [rbp+var_D8], rdi
__text:0000000100007101                 mov     rdi, [rbp+var_D8]
__text:0000000100007108                 mov     rdi, [rdi]
__text:000000010000710B                 mov     [rbp+var_A0], rsi
__text:0000000100007112                 mov     rsi, [rbp+var_A0]
__text:0000000100007119                 mov     r9, [rsi]
__text:000000010000711C                 mov     [rbp+var_108], r9
__text:0000000100007123                 mov     rsi, [rsi+8]
__text:0000000100007127                 mov     [rbp+var_100], rsi
__text:000000010000712E                 mov     rsi, [rbp+var_108]
__text:0000000100007135                 mov     r14b, byte ptr [rbp+var_100]
__text:000000010000713C                 mov     [rbp+var_B8], r8
__text:0000000100007143                 mov     [rbp+var_C0], rdi
__text:000000010000714A                 mov     [rbp+var_D0], rsi
__text:0000000100007151                 mov     [rbp+var_C8], r14b
__text:0000000100007158                 mov     rsi, [rbp+var_B8]
__text:000000010000715F                 mov     [rbp+var_B0], rdx
__text:0000000100007166                 mov     rdx, [rbp+var_B0]
__text:000000010000716D                 mov     rdx, [rdx]
__text:0000000100007170                 mov     [rsi], rdx
__text:0000000100007173                 mov     [rbp+var_A8], rcx
__text:000000010000717A                 mov     rcx, [rbp+var_A8]
__text:0000000100007181                 mov     rdx, [rcx]
__text:0000000100007184                 mov     [rsi+8], rdx
__text:0000000100007188                 mov     rcx, [rcx+8]
__text:000000010000718C                 mov     [rsi+10h], rcx
__text:0000000100007190                 mov     [rbp+var_240], rax
__text:0000000100007197                 mov     rcx, [rbp+var_240]
__text:000000010000719E                 mov     [rbp+var_238], rcx
__text:00000001000071A5                 mov     rcx, [rbp+var_238]
__text:00000001000071AC                 mov     [rbp+var_220], rcx
__text:00000001000071B3                 mov     [rbp+var_228], 0
__text:00000001000071BE                 mov     rcx, [rbp+var_220]
__text:00000001000071C5                 mov     [rbp+var_218], rcx
__text:00000001000071CC                 mov     rdx, [rbp+var_218]
__text:00000001000071D3                 mov     [rbp+var_210], rdx
__text:00000001000071DA                 mov     rdx, [rbp+var_210]
__text:00000001000071E1                 mov     rdx, [rdx]
__text:00000001000071E4                 mov     [rbp+var_230], rdx
__text:00000001000071EB                 mov     rdx, [rbp+var_228]
__text:00000001000071F2                 mov     [rbp+var_180], rcx
__text:00000001000071F9                 mov     rsi, [rbp+var_180]
__text:0000000100007200                 mov     [rbp+var_178], rsi
__text:0000000100007207                 mov     rsi, [rbp+var_178]
__text:000000010000720E                 mov     [rsi], rdx
__text:0000000100007211                 cmp     [rbp+var_230], 0
__text:000000010000721C                 mov     [rbp+var_C08], rcx
__text:0000000100007223                 jz      loc_100007349
__text:0000000100007229                 mov     rax, [rbp+var_C08]
__text:0000000100007230                 mov     [rbp+var_170], rax
__text:0000000100007237                 mov     rcx, [rbp+var_170]
__text:000000010000723E                 mov     [rbp+var_168], rcx
__text:0000000100007245                 mov     rcx, [rbp+var_168]
__text:000000010000724C                 add     rcx, 8
__text:0000000100007253                 mov     rdx, [rbp+var_230]
__text:000000010000725A                 mov     [rbp+var_1F0], rcx
__text:0000000100007261                 mov     [rbp+var_1F8], rdx
__text:0000000100007268                 mov     rcx, [rbp+var_1F0]
__text:000000010000726F                 test    byte ptr [rcx+8], 1
__text:0000000100007273                 mov     [rbp+var_C10], rcx
__text:000000010000727A                 jz      loc_1000072D0
__text:0000000100007280                 mov     rax, [rbp+var_C10]
__text:0000000100007287                 mov     rcx, [rax]
__text:000000010000728A                 mov     rdx, [rbp+var_1F8]
__text:0000000100007291                 add     rdx, 1Ch
__text:0000000100007298                 mov     [rbp+var_1E8], rdx
__text:000000010000729F                 mov     rdx, [rbp+var_1E8]
__text:00000001000072A6                 mov     [rbp+var_198], rcx
__text:00000001000072AD                 mov     [rbp+var_1A0], rdx
__text:00000001000072B4                 mov     rcx, [rbp+var_198]
__text:00000001000072BB                 mov     rdx, [rbp+var_1A0]
__text:00000001000072C2                 mov     [rbp+var_188], rcx
__text:00000001000072C9                 mov     [rbp+var_190], rdx
__text:00000001000072D0
__text:00000001000072D0 loc_1000072D0:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+9FA↑j
__text:00000001000072D0                 cmp     [rbp+var_1F8], 0
__text:00000001000072DB                 jz      loc_100007344
__text:00000001000072E1                 mov     rax, [rbp+var_C10]
__text:00000001000072E8                 mov     rcx, [rax]
__text:00000001000072EB                 mov     rdx, [rbp+var_1F8]
__text:00000001000072F2                 mov     [rbp+var_1D0], rcx
__text:00000001000072F9                 mov     [rbp+var_1D8], rdx
__text:0000000100007300                 mov     [rbp+var_1E0], 1
__text:000000010000730B                 mov     rcx, [rbp+var_1D0]
__text:0000000100007312                 mov     rdx, [rbp+var_1D8]
__text:0000000100007319                 mov     rsi, [rbp+var_1E0]
__text:0000000100007320                 mov     [rbp+var_1B8], rcx
__text:0000000100007327                 mov     [rbp+var_1C0], rdx
__text:000000010000732E                 mov     [rbp+var_1C8], rsi
__text:0000000100007335                 mov     rcx, [rbp+var_1C0]
__text:000000010000733C                 mov     rdi, rcx        ; void *
__text:000000010000733F                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100007344
__text:0000000100007344 loc_100007344:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+A5B↑j
__text:0000000100007344                 jmp     $+5
__text:0000000100007349 ; ---------------------------------------------------------------------------
__text:0000000100007349
__text:0000000100007349 loc_100007349:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+9A3↑j
__text:0000000100007349                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_100007344↑j
__text:0000000100007349                 jmp     $+5
__text:000000010000734E ; ---------------------------------------------------------------------------
__text:000000010000734E
__text:000000010000734E loc_10000734E:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_100007349↑j
__text:000000010000734E                 lea     rax, [rbp+var_4F8]
__text:0000000100007355                 lea     rcx, [rbp+var_BB8]
__text:000000010000735C                 mov     [rbp+var_500], rcx
__text:0000000100007363                 mov     rcx, [rbp+var_500]
__text:000000010000736A                 mov     [rbp+var_4E8], rax
__text:0000000100007371                 mov     [rbp+var_4F0], rcx
__text:0000000100007378                 mov     rax, [rbp+var_4E8]
__text:000000010000737F                 mov     rcx, [rbp+var_4F0]
__text:0000000100007386                 mov     [rbp+var_4D8], rax
__text:000000010000738D                 mov     [rbp+var_4E0], rcx
__text:0000000100007394                 mov     rax, [rbp+var_4D8]
__text:000000010000739B                 mov     rcx, [rbp+var_4E0]
__text:00000001000073A2                 mov     [rax], rcx
__text:00000001000073A5                 mov     rax, [rbp+var_4F8]
__text:00000001000073AC                 mov     [rbp+var_C18], rax
__text:00000001000073B3                 lea     rax, [rbp+var_590]
__text:00000001000073BA                 lea     rcx, [rbp+var_580]
__text:00000001000073C1                 lea     rdx, [rbp+var_5B8]
__text:00000001000073C8                 lea     rsi, [rbp+var_5A8]
__text:00000001000073CF                 lea     rdi, [rbp+var_600]
__text:00000001000073D6                 mov     r8, [rbp+var_C18]
__text:00000001000073DD                 mov     [rbp+var_BA0], r8
__text:00000001000073E4                 mov     r9, [rbp+var_BA0]
__text:00000001000073EB                 mov     r10, [rbp+var_BC8]
__text:00000001000073F2                 mov     [rbp+var_618], r10
__text:00000001000073F9                 mov     [rbp+var_620], r9
__text:0000000100007400                 mov     r9, [rbp+var_618]
__text:0000000100007407                 mov     r11, [rbp+var_620]
__text:000000010000740E                 mov     [rbp+var_5F8], r9
__text:0000000100007415                 mov     [rbp+var_600], r11
__text:000000010000741C                 mov     r9, [rbp+var_5F8]
__text:0000000100007423                 mov     [rbp+var_5F0], rdi
__text:000000010000742A                 mov     r11, [rbp+var_5F0]
__text:0000000100007431                 mov     r11, [r11]
__text:0000000100007434                 mov     [rbp+var_528], r11
__text:000000010000743B                 mov     r11, [rbp+var_528]
__text:0000000100007442                 mov     [rbp+var_520], r11
__text:0000000100007449                 mov     rbx, [rbp+var_520]
__text:0000000100007450                 mov     [rbp+var_518], rbx
__text:0000000100007457                 mov     rbx, [rbp+var_518]
__text:000000010000745E                 mov     rbx, [rbx]
__text:0000000100007461                 mov     [rbp+var_530], rbx
__text:0000000100007468                 mov     [rbp+var_510], r11
__text:000000010000746F                 mov     r11, [rbp+var_510]
__text:0000000100007476                 mov     [rbp+var_508], r11
__text:000000010000747D                 mov     r11, [rbp+var_508]
__text:0000000100007484                 mov     qword ptr [r11], 0
__text:000000010000748B                 mov     r11, [rbp+var_530]
__text:0000000100007492                 mov     [rbp+var_538], rdi
__text:0000000100007499                 mov     rdi, [rbp+var_538]
__text:00000001000074A0                 mov     rdi, [rdi]
__text:00000001000074A3                 mov     [rbp+var_550], rdi
__text:00000001000074AA                 mov     rdi, [rbp+var_550]
__text:00000001000074B1                 mov     [rbp+var_548], rdi
__text:00000001000074B8                 mov     rdi, [rbp+var_548]
__text:00000001000074BF                 mov     [rbp+var_540], rdi
__text:00000001000074C6                 mov     rdi, [rbp+var_540]
__text:00000001000074CD                 add     rdi, 8
__text:00000001000074D4                 mov     [rbp+var_558], rdi
__text:00000001000074DB                 mov     rdi, [rbp+var_558]
__text:00000001000074E2                 mov     rbx, [rdi]
__text:00000001000074E5                 mov     [rbp+var_610], rbx
__text:00000001000074EC                 mov     rdi, [rdi+8]
__text:00000001000074F0                 mov     [rbp+var_608], rdi
__text:00000001000074F7                 mov     rdi, [rbp+var_610]
__text:00000001000074FE                 mov     r14b, byte ptr [rbp+var_608]
__text:0000000100007505                 mov     [rbp+var_5D0], r9
__text:000000010000750C                 mov     [rbp+var_5D8], r11
__text:0000000100007513                 mov     [rbp+var_5E8], rdi
__text:000000010000751A                 mov     [rbp+var_5E0], r14b
__text:0000000100007521                 mov     rdi, [rbp+var_5D0]
__text:0000000100007528                 mov     r9, [rbp+var_5D8]
__text:000000010000752F                 mov     r11, [rbp+var_5E8]
__text:0000000100007536                 mov     r14b, [rbp+var_5E0]
__text:000000010000753D                 mov     [rbp+var_5A0], rdi
__text:0000000100007544                 mov     [rbp+var_5A8], r9
__text:000000010000754B                 mov     [rbp+var_5B8], r11
__text:0000000100007552                 mov     [rbp+var_5B0], r14b
__text:0000000100007559                 mov     rdi, [rbp+var_5A0]
__text:0000000100007560                 mov     [rbp+var_598], rsi
__text:0000000100007567                 mov     rsi, [rbp+var_598]
__text:000000010000756E                 mov     rsi, [rsi]
__text:0000000100007571                 mov     [rbp+var_560], rdx
__text:0000000100007578                 mov     rdx, [rbp+var_560]
__text:000000010000757F                 mov     r9, [rdx]
__text:0000000100007582                 mov     [rbp+var_5C8], r9
__text:0000000100007589                 mov     rdx, [rdx+8]
__text:000000010000758D                 mov     [rbp+var_5C0], rdx
__text:0000000100007594                 mov     rdx, [rbp+var_5C8]
__text:000000010000759B                 mov     r14b, byte ptr [rbp+var_5C0]
__text:00000001000075A2                 mov     [rbp+var_578], rdi
__text:00000001000075A9                 mov     [rbp+var_580], rsi
__text:00000001000075B0                 mov     [rbp+var_590], rdx
__text:00000001000075B7                 mov     [rbp+var_588], r14b
__text:00000001000075BE                 mov     rdx, [rbp+var_578]
__text:00000001000075C5                 mov     [rbp+var_570], rcx
__text:00000001000075CC                 mov     rcx, [rbp+var_570]
__text:00000001000075D3                 mov     rcx, [rcx]
__text:00000001000075D6                 mov     [rdx], rcx
__text:00000001000075D9                 mov     [rbp+var_568], rax
__text:00000001000075E0                 mov     rax, [rbp+var_568]
__text:00000001000075E7                 mov     rcx, [rax]
__text:00000001000075EA                 mov     [rdx+8], rcx
__text:00000001000075EE                 mov     rax, [rax+8]
__text:00000001000075F2                 mov     [rdx+10h], rax
__text:00000001000075F6                 lea     rax, [rbp+var_BB8]
__text:00000001000075FD                 mov     [rbp+var_738], rax
__text:0000000100007604                 mov     rax, [rbp+var_738]
__text:000000010000760B                 mov     [rbp+var_730], rax
__text:0000000100007612                 mov     rax, [rbp+var_730]
__text:0000000100007619                 mov     [rbp+var_718], rax
__text:0000000100007620                 mov     [rbp+var_720], 0
__text:000000010000762B                 mov     rax, [rbp+var_718]
__text:0000000100007632                 mov     [rbp+var_710], rax
__text:0000000100007639                 mov     rcx, [rbp+var_710]
__text:0000000100007640                 mov     [rbp+var_708], rcx
__text:0000000100007647                 mov     rcx, [rbp+var_708]
__text:000000010000764E                 mov     rcx, [rcx]
__text:0000000100007651                 mov     [rbp+var_728], rcx
__text:0000000100007658                 mov     rcx, [rbp+var_720]
__text:000000010000765F                 mov     [rbp+var_678], rax
__text:0000000100007666                 mov     rdx, [rbp+var_678]
__text:000000010000766D                 mov     [rbp+var_670], rdx
__text:0000000100007674                 mov     rdx, [rbp+var_670]
__text:000000010000767B                 mov     [rdx], rcx
__text:000000010000767E                 cmp     [rbp+var_728], 0
__text:0000000100007689                 mov     [rbp+var_C20], rax
__text:0000000100007690                 jz      loc_1000077B6
__text:0000000100007696                 mov     rax, [rbp+var_C20]
__text:000000010000769D                 mov     [rbp+var_668], rax
__text:00000001000076A4                 mov     rcx, [rbp+var_668]
__text:00000001000076AB                 mov     [rbp+var_660], rcx
__text:00000001000076B2                 mov     rcx, [rbp+var_660]
__text:00000001000076B9                 add     rcx, 8
__text:00000001000076C0                 mov     rdx, [rbp+var_728]
__text:00000001000076C7                 mov     [rbp+var_6E8], rcx
__text:00000001000076CE                 mov     [rbp+var_6F0], rdx
__text:00000001000076D5                 mov     rcx, [rbp+var_6E8]
__text:00000001000076DC                 test    byte ptr [rcx+8], 1
__text:00000001000076E0                 mov     [rbp+var_C28], rcx
__text:00000001000076E7                 jz      loc_10000773D
__text:00000001000076ED                 mov     rax, [rbp+var_C28]
__text:00000001000076F4                 mov     rcx, [rax]
__text:00000001000076F7                 mov     rdx, [rbp+var_6F0]
__text:00000001000076FE                 add     rdx, 1Ch
__text:0000000100007705                 mov     [rbp+var_6E0], rdx
__text:000000010000770C                 mov     rdx, [rbp+var_6E0]
__text:0000000100007713                 mov     [rbp+var_690], rcx
__text:000000010000771A                 mov     [rbp+var_698], rdx
__text:0000000100007721                 mov     rcx, [rbp+var_690]
__text:0000000100007728                 mov     rdx, [rbp+var_698]
__text:000000010000772F                 mov     [rbp+var_680], rcx
__text:0000000100007736                 mov     [rbp+var_688], rdx
__text:000000010000773D
__text:000000010000773D loc_10000773D:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+E67↑j
__text:000000010000773D                 cmp     [rbp+var_6F0], 0
__text:0000000100007748                 jz      loc_1000077B1
__text:000000010000774E                 mov     rax, [rbp+var_C28]
__text:0000000100007755                 mov     rcx, [rax]
__text:0000000100007758                 mov     rdx, [rbp+var_6F0]
__text:000000010000775F                 mov     [rbp+var_6C8], rcx
__text:0000000100007766                 mov     [rbp+var_6D0], rdx
__text:000000010000776D                 mov     [rbp+var_6D8], 1
__text:0000000100007778                 mov     rcx, [rbp+var_6C8]
__text:000000010000777F                 mov     rdx, [rbp+var_6D0]
__text:0000000100007786                 mov     rsi, [rbp+var_6D8]
__text:000000010000778D                 mov     [rbp+var_6B0], rcx
__text:0000000100007794                 mov     [rbp+var_6B8], rdx
__text:000000010000779B                 mov     [rbp+var_6C0], rsi
__text:00000001000077A2                 mov     rcx, [rbp+var_6B8]
__text:00000001000077A9                 mov     rdi, rcx        ; void *
__text:00000001000077AC                 call    __ZdlPv         ; operator delete(void *)
__text:00000001000077B1
__text:00000001000077B1 loc_1000077B1:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+EC8↑j
__text:00000001000077B1                 jmp     $+5
__text:00000001000077B6 ; ---------------------------------------------------------------------------
__text:00000001000077B6
__text:00000001000077B6 loc_1000077B6:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+E10↑j
__text:00000001000077B6                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_1000077B1↑j
__text:00000001000077B6                 jmp     $+5
__text:00000001000077BB ; ---------------------------------------------------------------------------
__text:00000001000077BB
__text:00000001000077BB loc_1000077BB:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_1000077B6↑j
__text:00000001000077BB                 lea     rax, [rbp+var_B78]
__text:00000001000077C2                 mov     [rbp+var_BBC], 1
__text:00000001000077CC                 mov     [rbp+var_820], rax
__text:00000001000077D3                 mov     rax, [rbp+var_820]
__text:00000001000077DA                 mov     [rbp+var_818], rax
__text:00000001000077E1                 mov     rax, [rbp+var_818]
__text:00000001000077E8                 mov     [rbp+var_800], rax
__text:00000001000077EF                 mov     [rbp+var_808], 0
__text:00000001000077FA                 mov     rax, [rbp+var_800]
__text:0000000100007801                 mov     [rbp+var_7F8], rax
__text:0000000100007808                 mov     rcx, [rbp+var_7F8]
__text:000000010000780F                 mov     [rbp+var_7F0], rcx
__text:0000000100007816                 mov     rcx, [rbp+var_7F0]
__text:000000010000781D                 mov     rcx, [rcx]
__text:0000000100007820                 mov     [rbp+var_810], rcx
__text:0000000100007827                 mov     rcx, [rbp+var_808]
__text:000000010000782E                 mov     [rbp+var_760], rax
__text:0000000100007835                 mov     rdx, [rbp+var_760]
__text:000000010000783C                 mov     [rbp+var_758], rdx
__text:0000000100007843                 mov     rdx, [rbp+var_758]
__text:000000010000784A                 mov     [rdx], rcx
__text:000000010000784D                 cmp     [rbp+var_810], 0
__text:0000000100007858                 mov     [rbp+var_C30], rax
__text:000000010000785F                 jz      loc_100007985
__text:0000000100007865                 mov     rax, [rbp+var_C30]
__text:000000010000786C                 mov     [rbp+var_750], rax
__text:0000000100007873                 mov     rcx, [rbp+var_750]
__text:000000010000787A                 mov     [rbp+var_748], rcx
__text:0000000100007881                 mov     rcx, [rbp+var_748]
__text:0000000100007888                 add     rcx, 8
__text:000000010000788F                 mov     rdx, [rbp+var_810]
__text:0000000100007896                 mov     [rbp+var_7D0], rcx
__text:000000010000789D                 mov     [rbp+var_7D8], rdx
__text:00000001000078A4                 mov     rcx, [rbp+var_7D0]
__text:00000001000078AB                 test    byte ptr [rcx+8], 1
__text:00000001000078AF                 mov     [rbp+var_C38], rcx
__text:00000001000078B6                 jz      loc_10000790C
__text:00000001000078BC                 mov     rax, [rbp+var_C38]
__text:00000001000078C3                 mov     rcx, [rax]
__text:00000001000078C6                 mov     rdx, [rbp+var_7D8]
__text:00000001000078CD                 add     rdx, 1Ch
__text:00000001000078D4                 mov     [rbp+var_7C8], rdx
__text:00000001000078DB                 mov     rdx, [rbp+var_7C8]
__text:00000001000078E2                 mov     [rbp+var_778], rcx
__text:00000001000078E9                 mov     [rbp+var_780], rdx
__text:00000001000078F0                 mov     rcx, [rbp+var_778]
__text:00000001000078F7                 mov     rdx, [rbp+var_780]
__text:00000001000078FE                 mov     [rbp+var_768], rcx
__text:0000000100007905                 mov     [rbp+var_770], rdx
__text:000000010000790C
__text:000000010000790C loc_10000790C:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+1036↑j
__text:000000010000790C                 cmp     [rbp+var_7D8], 0
__text:0000000100007917                 jz      loc_100007980
__text:000000010000791D                 mov     rax, [rbp+var_C38]
__text:0000000100007924                 mov     rcx, [rax]
__text:0000000100007927                 mov     rdx, [rbp+var_7D8]
__text:000000010000792E                 mov     [rbp+var_7B0], rcx
__text:0000000100007935                 mov     [rbp+var_7B8], rdx
__text:000000010000793C                 mov     [rbp+var_7C0], 1
__text:0000000100007947                 mov     rcx, [rbp+var_7B0]
__text:000000010000794E                 mov     rdx, [rbp+var_7B8]
__text:0000000100007955                 mov     rsi, [rbp+var_7C0]
__text:000000010000795C                 mov     [rbp+var_798], rcx
__text:0000000100007963                 mov     [rbp+var_7A0], rdx
__text:000000010000796A                 mov     [rbp+var_7A8], rsi
__text:0000000100007971                 mov     rcx, [rbp+var_7A0]
__text:0000000100007978                 mov     rdi, rcx        ; void *
__text:000000010000797B                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100007980
__text:0000000100007980 loc_100007980:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+1097↑j
__text:0000000100007980                 jmp     $+5
__text:0000000100007985 ; ---------------------------------------------------------------------------
__text:0000000100007985
__text:0000000100007985 loc_100007985:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+FDF↑j
__text:0000000100007985                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_100007980↑j
__text:0000000100007985                 mov     rax, [rbp+var_BD0]
__text:000000010000798C                 add     rsp, 0C18h
__text:0000000100007993                 pop     rbx
__text:0000000100007994                 pop     r12
__text:0000000100007996                 pop     r13
__text:0000000100007998                 pop     r14
__text:000000010000799A                 pop     r15
__text:000000010000799C                 pop     rbp
__text:000000010000799D                 retn
__text:000000010000799D __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_ endp
__text:000000010000799D
__text:000000010000799D ; ---------------------------------------------------------------------------
__text:000000010000799E                 align 20h
__text:00000001000079A0
__text:00000001000079A0 ; =============== S U B R O U T I N E =======================================
__text:00000001000079A0
__text:00000001000079A0 ; Attributes: bp-based frame
__text:00000001000079A0
__text:00000001000079A0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *, std::__1::__tree_node_base<void *> *&, std::__1::__tree_node_base<void *> *)
__text:00000001000079A0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_ proc near
__text:00000001000079A0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB__ptr↓o
__text:00000001000079A0
__text:00000001000079A0 var_130         = qword ptr -130h
__text:00000001000079A0 var_128         = qword ptr -128h
__text:00000001000079A0 var_120         = qword ptr -120h
__text:00000001000079A0 var_118         = qword ptr -118h
__text:00000001000079A0 var_110         = qword ptr -110h
__text:00000001000079A0 var_108         = qword ptr -108h
__text:00000001000079A0 var_100         = qword ptr -100h
__text:00000001000079A0 var_F8          = qword ptr -0F8h
__text:00000001000079A0 var_F0          = qword ptr -0F0h
__text:00000001000079A0 var_E8          = qword ptr -0E8h
__text:00000001000079A0 var_E0          = qword ptr -0E0h
__text:00000001000079A0 var_D8          = qword ptr -0D8h
__text:00000001000079A0 var_D0          = qword ptr -0D0h
__text:00000001000079A0 var_C8          = qword ptr -0C8h
__text:00000001000079A0 var_C0          = qword ptr -0C0h
__text:00000001000079A0 var_B8          = qword ptr -0B8h
__text:00000001000079A0 var_B0          = qword ptr -0B0h
__text:00000001000079A0 var_A8          = qword ptr -0A8h
__text:00000001000079A0 var_A0          = qword ptr -0A0h
__text:00000001000079A0 var_98          = qword ptr -98h
__text:00000001000079A0 var_90          = qword ptr -90h
__text:00000001000079A0 var_88          = qword ptr -88h
__text:00000001000079A0 var_80          = qword ptr -80h
__text:00000001000079A0 var_78          = qword ptr -78h
__text:00000001000079A0 var_70          = qword ptr -70h
__text:00000001000079A0 var_68          = qword ptr -68h
__text:00000001000079A0 var_60          = qword ptr -60h
__text:00000001000079A0 var_58          = qword ptr -58h
__text:00000001000079A0 var_50          = qword ptr -50h
__text:00000001000079A0 var_48          = qword ptr -48h
__text:00000001000079A0 var_40          = qword ptr -40h
__text:00000001000079A0 var_38          = qword ptr -38h
__text:00000001000079A0 var_30          = qword ptr -30h
__text:00000001000079A0 var_28          = qword ptr -28h
__text:00000001000079A0 var_20          = qword ptr -20h
__text:00000001000079A0 var_18          = qword ptr -18h
__text:00000001000079A0 var_10          = qword ptr -10h
__text:00000001000079A0
__text:00000001000079A0                 push    rbp
__text:00000001000079A1                 mov     rbp, rsp
__text:00000001000079A4                 push    rbx
__text:00000001000079A5                 sub     rsp, 128h
__text:00000001000079AC                 lea     rax, [rbp+var_128]
__text:00000001000079B3                 lea     r8, [rbp+var_68]
__text:00000001000079B7                 lea     r9, [rbp+var_120]
__text:00000001000079BE                 lea     r10, [rbp+var_30]
__text:00000001000079C2                 lea     r11, [rbp+var_118]
__text:00000001000079C9                 lea     rbx, [rbp+var_F0]
__text:00000001000079D0                 mov     [rbp+var_F8], rdi
__text:00000001000079D7                 mov     [rbp+var_100], rsi
__text:00000001000079DE                 mov     [rbp+var_108], rdx
__text:00000001000079E5                 mov     [rbp+var_110], rcx
__text:00000001000079EC                 mov     rcx, [rbp+var_F8]
__text:00000001000079F3                 mov     [rbp+var_E0], rbx
__text:00000001000079FA                 mov     [rbp+var_E8], 0FFFFFFFFFFFFFFFFh
__text:0000000100007A05                 mov     rdx, [rbp+var_E0]
__text:0000000100007A0C                 mov     rsi, [rbp+var_E8]
__text:0000000100007A13                 mov     [rbp+var_D0], rdx
__text:0000000100007A1A                 mov     [rbp+var_D8], rsi
__text:0000000100007A21                 mov     rdx, [rbp+var_D0]
__text:0000000100007A28                 mov     qword ptr [rdx], 0
__text:0000000100007A2F                 mov     rdx, [rbp+var_F0]
__text:0000000100007A36                 mov     [rbp+var_118], rdx
__text:0000000100007A3D                 mov     [rbp+var_B0], r11
__text:0000000100007A44                 mov     rdx, [rbp+var_110]
__text:0000000100007A4B                 mov     qword ptr [rdx], 0
__text:0000000100007A52                 mov     [rbp+var_20], r10
__text:0000000100007A56                 mov     [rbp+var_28], 0FFFFFFFFFFFFFFFFh
__text:0000000100007A5E                 mov     rdx, [rbp+var_20]
__text:0000000100007A62                 mov     rsi, [rbp+var_28]
__text:0000000100007A66                 mov     [rbp+var_10], rdx
__text:0000000100007A6A                 mov     [rbp+var_18], rsi
__text:0000000100007A6E                 mov     rdx, [rbp+var_10]
__text:0000000100007A72                 mov     qword ptr [rdx], 0
__text:0000000100007A79                 mov     rdx, [rbp+var_30]
__text:0000000100007A7D                 mov     [rbp+var_120], rdx
__text:0000000100007A84                 mov     [rbp+var_38], r9
__text:0000000100007A88                 mov     rdx, [rbp+var_110]
__text:0000000100007A8F                 mov     qword ptr [rdx+8], 0
__text:0000000100007A97                 mov     rdx, [rbp+var_100]
__text:0000000100007A9E                 mov     rsi, [rbp+var_110]
__text:0000000100007AA5                 mov     [rsi+10h], rdx
__text:0000000100007AA9                 mov     rdx, [rbp+var_110]
__text:0000000100007AB0                 mov     rsi, [rbp+var_108]
__text:0000000100007AB7                 mov     [rsi], rdx
__text:0000000100007ABA                 mov     [rbp+var_40], rcx
__text:0000000100007ABE                 mov     rdx, [rbp+var_40]
__text:0000000100007AC2                 mov     rdx, [rdx]
__text:0000000100007AC5                 mov     rdx, [rdx]
__text:0000000100007AC8                 mov     [rbp+var_58], r8
__text:0000000100007ACC                 mov     [rbp+var_60], 0FFFFFFFFFFFFFFFFh
__text:0000000100007AD4                 mov     rsi, [rbp+var_58]
__text:0000000100007AD8                 mov     rdi, [rbp+var_60]
__text:0000000100007ADC                 mov     [rbp+var_48], rsi
__text:0000000100007AE0                 mov     [rbp+var_50], rdi
__text:0000000100007AE4                 mov     rsi, [rbp+var_48]
__text:0000000100007AE8                 mov     qword ptr [rsi], 0
__text:0000000100007AEF                 mov     rsi, [rbp+var_68]
__text:0000000100007AF3                 mov     [rbp+var_128], rsi
__text:0000000100007AFA                 mov     [rbp+var_70], rax
__text:0000000100007AFE                 cmp     rdx, 0
__text:0000000100007B05                 mov     [rbp+var_130], rcx
__text:0000000100007B0C                 jz      loc_100007B32
__text:0000000100007B12                 mov     rax, [rbp+var_130]
__text:0000000100007B19                 mov     [rbp+var_78], rax
__text:0000000100007B1D                 mov     rcx, [rbp+var_78]
__text:0000000100007B21                 mov     rcx, [rcx]
__text:0000000100007B24                 mov     rcx, [rcx]
__text:0000000100007B27                 mov     [rbp+var_80], rax
__text:0000000100007B2B                 mov     rdx, [rbp+var_80]
__text:0000000100007B2F                 mov     [rdx], rcx
__text:0000000100007B32
__text:0000000100007B32 loc_100007B32:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *&,std::__1::__tree_node_base<void *> *)+16C↑j
__text:0000000100007B32                 mov     rax, [rbp+var_130]
__text:0000000100007B39                 mov     [rbp+var_A8], rax
__text:0000000100007B40                 mov     rcx, [rbp+var_A8]
__text:0000000100007B47                 add     rcx, 8
__text:0000000100007B4E                 mov     [rbp+var_A0], rcx
__text:0000000100007B55                 mov     rcx, [rbp+var_A0]
__text:0000000100007B5C                 mov     [rbp+var_98], rcx
__text:0000000100007B63                 mov     rcx, [rbp+var_98]
__text:0000000100007B6A                 mov     [rbp+var_90], rcx
__text:0000000100007B71                 mov     rcx, [rbp+var_90]
__text:0000000100007B78                 mov     [rbp+var_88], rcx
__text:0000000100007B7F                 mov     rcx, [rbp+var_88]
__text:0000000100007B86                 mov     rdi, [rcx]
__text:0000000100007B89                 mov     rcx, [rbp+var_108]
__text:0000000100007B90                 mov     rsi, [rcx]
__text:0000000100007B93                 call    j___ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)
__text:0000000100007B98                 mov     rax, [rbp+var_130]
__text:0000000100007B9F                 mov     [rbp+var_C8], rax
__text:0000000100007BA6                 mov     rcx, [rbp+var_C8]
__text:0000000100007BAD                 add     rcx, 10h
__text:0000000100007BB4                 mov     [rbp+var_C0], rcx
__text:0000000100007BBB                 mov     rcx, [rbp+var_C0]
__text:0000000100007BC2                 mov     [rbp+var_B8], rcx
__text:0000000100007BC9                 mov     rcx, [rbp+var_B8]
__text:0000000100007BD0                 mov     rsi, [rcx]
__text:0000000100007BD3                 add     rsi, 1
__text:0000000100007BDA                 mov     [rcx], rsi
__text:0000000100007BDD                 add     rsp, 128h
__text:0000000100007BE4                 pop     rbx
__text:0000000100007BE5                 pop     rbp
__text:0000000100007BE6                 retn
__text:0000000100007BE6 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_ endp
__text:0000000100007BE6
__text:0000000100007BE6 ; ---------------------------------------------------------------------------
__text:0000000100007BE7                 align 10h
__text:0000000100007BF0
__text:0000000100007BF0 ; =============== S U B R O U T I N E =======================================
__text:0000000100007BF0
__text:0000000100007BF0 ; Attributes: bp-based frame
__text:0000000100007BF0
__text:0000000100007BF0 ; void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *, std::__1::__tree_node_base<void *> *)
__text:0000000100007BF0 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ proc near
__text:0000000100007BF0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5__ptr↓o
__text:0000000100007BF0
__text:0000000100007BF0 var_E0          = qword ptr -0E0h
__text:0000000100007BF0 var_D8          = qword ptr -0D8h
__text:0000000100007BF0 var_D0          = qword ptr -0D0h
__text:0000000100007BF0 var_C8          = qword ptr -0C8h
__text:0000000100007BF0 var_B9          = byte ptr -0B9h
__text:0000000100007BF0 var_B8          = qword ptr -0B8h
__text:0000000100007BF0 var_B0          = qword ptr -0B0h
__text:0000000100007BF0 var_A8          = qword ptr -0A8h
__text:0000000100007BF0 var_90          = qword ptr -90h
__text:0000000100007BF0 var_88          = qword ptr -88h
__text:0000000100007BF0 var_80          = qword ptr -80h
__text:0000000100007BF0 var_78          = qword ptr -78h
__text:0000000100007BF0 var_70          = qword ptr -70h
__text:0000000100007BF0 var_68          = qword ptr -68h
__text:0000000100007BF0 var_60          = qword ptr -60h
__text:0000000100007BF0 var_58          = qword ptr -58h
__text:0000000100007BF0 var_50          = qword ptr -50h
__text:0000000100007BF0 var_48          = qword ptr -48h
__text:0000000100007BF0 var_40          = qword ptr -40h
__text:0000000100007BF0 var_38          = qword ptr -38h
__text:0000000100007BF0 var_30          = qword ptr -30h
__text:0000000100007BF0 var_28          = qword ptr -28h
__text:0000000100007BF0 var_20          = qword ptr -20h
__text:0000000100007BF0 var_18          = qword ptr -18h
__text:0000000100007BF0 var_10          = qword ptr -10h
__text:0000000100007BF0 var_8           = qword ptr -8
__text:0000000100007BF0
__text:0000000100007BF0                 push    rbp
__text:0000000100007BF1                 mov     rbp, rsp
__text:0000000100007BF4                 sub     rsp, 0E0h
__text:0000000100007BFB                 mov     [rbp+var_80], rdi
__text:0000000100007BFF                 mov     [rbp+var_88], rsi
__text:0000000100007C06                 mov     rsi, [rbp+var_88]
__text:0000000100007C0D                 cmp     rsi, [rbp+var_80]
__text:0000000100007C11                 setz    al
__text:0000000100007C14                 mov     rsi, [rbp+var_88]
__text:0000000100007C1B                 and     al, 1
__text:0000000100007C1D                 mov     [rsi+18h], al
__text:0000000100007C20
__text:0000000100007C20 loc_100007C20:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100007F8C↓j
__text:0000000100007C20                 mov     al, 0
__text:0000000100007C22                 mov     rcx, [rbp+var_88]
__text:0000000100007C29                 cmp     rcx, [rbp+var_80]
__text:0000000100007C2D                 mov     [rbp+var_B9], al
__text:0000000100007C33                 jz      loc_100007C50
__text:0000000100007C39                 mov     rax, [rbp+var_88]
__text:0000000100007C40                 mov     rax, [rax+10h]
__text:0000000100007C44                 mov     cl, [rax+18h]
__text:0000000100007C47                 xor     cl, 1
__text:0000000100007C4A                 mov     [rbp+var_B9], cl
__text:0000000100007C50
__text:0000000100007C50 loc_100007C50:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+43↑j
__text:0000000100007C50                 mov     al, [rbp+var_B9]
__text:0000000100007C56                 test    al, 1
__text:0000000100007C58                 jnz     loc_100007C63
__text:0000000100007C5E                 jmp     loc_100007F91
__text:0000000100007C63 ; ---------------------------------------------------------------------------
__text:0000000100007C63
__text:0000000100007C63 loc_100007C63:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+68↑j
__text:0000000100007C63                 mov     rax, [rbp+var_88]
__text:0000000100007C6A                 mov     rax, [rax+10h]
__text:0000000100007C6E                 mov     [rbp+var_78], rax
__text:0000000100007C72                 mov     rax, [rbp+var_78]
__text:0000000100007C76                 mov     rcx, [rbp+var_78]
__text:0000000100007C7A                 mov     rcx, [rcx+10h]
__text:0000000100007C7E                 cmp     rax, [rcx]
__text:0000000100007C81                 jnz     loc_100007E0A
__text:0000000100007C87                 lea     rax, [rbp+var_70]
__text:0000000100007C8B                 mov     rcx, [rbp+var_88]
__text:0000000100007C92                 mov     rcx, [rcx+10h]
__text:0000000100007C96                 mov     rcx, [rcx+10h]
__text:0000000100007C9A                 mov     rcx, [rcx+8]
__text:0000000100007C9E                 mov     [rbp+var_90], rcx
__text:0000000100007CA5                 mov     rcx, [rbp+var_90]
__text:0000000100007CAC                 mov     [rbp+var_60], rax
__text:0000000100007CB0                 mov     [rbp+var_68], 0FFFFFFFFFFFFFFFFh
__text:0000000100007CB8                 mov     rax, [rbp+var_60]
__text:0000000100007CBC                 mov     rdx, [rbp+var_68]
__text:0000000100007CC0                 mov     [rbp+var_50], rax
__text:0000000100007CC4                 mov     [rbp+var_58], rdx
__text:0000000100007CC8                 mov     rax, [rbp+var_50]
__text:0000000100007CCC                 mov     qword ptr [rax], 0
__text:0000000100007CD3                 mov     rax, [rbp+var_70]
__text:0000000100007CD7                 mov     [rbp+var_C8], rcx
__text:0000000100007CDE                 mov     [rbp+var_D0], rax
__text:0000000100007CE5                 lea     rax, [rbp+var_A8]
__text:0000000100007CEC                 mov     rcx, [rbp+var_D0]
__text:0000000100007CF3                 mov     [rbp+var_A8], rcx
__text:0000000100007CFA                 mov     [rbp+var_48], rax
__text:0000000100007CFE                 mov     rax, [rbp+var_C8]
__text:0000000100007D05                 cmp     rax, 0
__text:0000000100007D0B                 jz      loc_100007D7C
__text:0000000100007D11                 mov     rax, [rbp+var_90]
__text:0000000100007D18                 test    byte ptr [rax+18h], 1
__text:0000000100007D1C                 jnz     loc_100007D7C
__text:0000000100007D22                 mov     rax, [rbp+var_88]
__text:0000000100007D29                 mov     rax, [rax+10h]
__text:0000000100007D2D                 mov     [rbp+var_88], rax
__text:0000000100007D34                 mov     rax, [rbp+var_88]
__text:0000000100007D3B                 mov     byte ptr [rax+18h], 1
__text:0000000100007D3F                 mov     rax, [rbp+var_88]
__text:0000000100007D46                 mov     rax, [rax+10h]
__text:0000000100007D4A                 mov     [rbp+var_88], rax
__text:0000000100007D51                 mov     rax, [rbp+var_88]
__text:0000000100007D58                 cmp     rax, [rbp+var_80]
__text:0000000100007D5C                 setz    cl
__text:0000000100007D5F                 mov     rax, [rbp+var_88]
__text:0000000100007D66                 and     cl, 1
__text:0000000100007D69                 mov     [rax+18h], cl
__text:0000000100007D6C                 mov     rax, [rbp+var_90]
__text:0000000100007D73                 mov     byte ptr [rax+18h], 1
__text:0000000100007D77                 jmp     loc_100007E05
__text:0000000100007D7C ; ---------------------------------------------------------------------------
__text:0000000100007D7C
__text:0000000100007D7C loc_100007D7C:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+11B↑j
__text:0000000100007D7C                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+12C↑j
__text:0000000100007D7C                 mov     rax, [rbp+var_88]
__text:0000000100007D83                 mov     [rbp+var_8], rax
__text:0000000100007D87                 mov     rax, [rbp+var_8]
__text:0000000100007D8B                 mov     rcx, [rbp+var_8]
__text:0000000100007D8F                 mov     rcx, [rcx+10h]
__text:0000000100007D93                 cmp     rax, [rcx]
__text:0000000100007D96                 jz      loc_100007DBA
__text:0000000100007D9C                 mov     rax, [rbp+var_88]
__text:0000000100007DA3                 mov     rax, [rax+10h]
__text:0000000100007DA7                 mov     [rbp+var_88], rax
__text:0000000100007DAE                 mov     rdi, [rbp+var_88]
__text:0000000100007DB5                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100007DBA
__text:0000000100007DBA loc_100007DBA:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+1A6↑j
__text:0000000100007DBA                 mov     rax, [rbp+var_88]
__text:0000000100007DC1                 mov     rax, [rax+10h]
__text:0000000100007DC5                 mov     [rbp+var_88], rax
__text:0000000100007DCC                 mov     rax, [rbp+var_88]
__text:0000000100007DD3                 mov     byte ptr [rax+18h], 1
__text:0000000100007DD7                 mov     rax, [rbp+var_88]
__text:0000000100007DDE                 mov     rax, [rax+10h]
__text:0000000100007DE2                 mov     [rbp+var_88], rax
__text:0000000100007DE9                 mov     rax, [rbp+var_88]
__text:0000000100007DF0                 mov     byte ptr [rax+18h], 0
__text:0000000100007DF4                 mov     rdi, [rbp+var_88]
__text:0000000100007DFB                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100007E00                 jmp     loc_100007F91
__text:0000000100007E05 ; ---------------------------------------------------------------------------
__text:0000000100007E05
__text:0000000100007E05 loc_100007E05:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+187↑j
__text:0000000100007E05                 jmp     loc_100007F8C
__text:0000000100007E0A ; ---------------------------------------------------------------------------
__text:0000000100007E0A
__text:0000000100007E0A loc_100007E0A:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+91↑j
__text:0000000100007E0A                 lea     rax, [rbp+var_30]
__text:0000000100007E0E                 mov     rcx, [rbp+var_88]
__text:0000000100007E15                 mov     rcx, [rcx+10h]
__text:0000000100007E19                 mov     rcx, [rcx+10h]
__text:0000000100007E1D                 mov     rcx, [rcx]
__text:0000000100007E20                 mov     [rbp+var_B0], rcx
__text:0000000100007E27                 mov     rcx, [rbp+var_B0]
__text:0000000100007E2E                 mov     [rbp+var_20], rax
__text:0000000100007E32                 mov     [rbp+var_28], 0FFFFFFFFFFFFFFFFh
__text:0000000100007E3A                 mov     rax, [rbp+var_20]
__text:0000000100007E3E                 mov     rdx, [rbp+var_28]
__text:0000000100007E42                 mov     [rbp+var_10], rax
__text:0000000100007E46                 mov     [rbp+var_18], rdx
__text:0000000100007E4A                 mov     rax, [rbp+var_10]
__text:0000000100007E4E                 mov     qword ptr [rax], 0
__text:0000000100007E55                 mov     rax, [rbp+var_30]
__text:0000000100007E59                 mov     [rbp+var_D8], rcx
__text:0000000100007E60                 mov     [rbp+var_E0], rax
__text:0000000100007E67                 lea     rax, [rbp+var_B8]
__text:0000000100007E6E                 mov     rcx, [rbp+var_E0]
__text:0000000100007E75                 mov     [rbp+var_B8], rcx
__text:0000000100007E7C                 mov     [rbp+var_38], rax
__text:0000000100007E80                 mov     rax, [rbp+var_D8]
__text:0000000100007E87                 cmp     rax, 0
__text:0000000100007E8D                 jz      loc_100007EFE
__text:0000000100007E93                 mov     rax, [rbp+var_B0]
__text:0000000100007E9A                 test    byte ptr [rax+18h], 1
__text:0000000100007E9E                 jnz     loc_100007EFE
__text:0000000100007EA4                 mov     rax, [rbp+var_88]
__text:0000000100007EAB                 mov     rax, [rax+10h]
__text:0000000100007EAF                 mov     [rbp+var_88], rax
__text:0000000100007EB6                 mov     rax, [rbp+var_88]
__text:0000000100007EBD                 mov     byte ptr [rax+18h], 1
__text:0000000100007EC1                 mov     rax, [rbp+var_88]
__text:0000000100007EC8                 mov     rax, [rax+10h]
__text:0000000100007ECC                 mov     [rbp+var_88], rax
__text:0000000100007ED3                 mov     rax, [rbp+var_88]
__text:0000000100007EDA                 cmp     rax, [rbp+var_80]
__text:0000000100007EDE                 setz    cl
__text:0000000100007EE1                 mov     rax, [rbp+var_88]
__text:0000000100007EE8                 and     cl, 1
__text:0000000100007EEB                 mov     [rax+18h], cl
__text:0000000100007EEE                 mov     rax, [rbp+var_B0]
__text:0000000100007EF5                 mov     byte ptr [rax+18h], 1
__text:0000000100007EF9                 jmp     loc_100007F87
__text:0000000100007EFE ; ---------------------------------------------------------------------------
__text:0000000100007EFE
__text:0000000100007EFE loc_100007EFE:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+29D↑j
__text:0000000100007EFE                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+2AE↑j
__text:0000000100007EFE                 mov     rax, [rbp+var_88]
__text:0000000100007F05                 mov     [rbp+var_40], rax
__text:0000000100007F09                 mov     rax, [rbp+var_40]
__text:0000000100007F0D                 mov     rcx, [rbp+var_40]
__text:0000000100007F11                 mov     rcx, [rcx+10h]
__text:0000000100007F15                 cmp     rax, [rcx]
__text:0000000100007F18                 jnz     loc_100007F3C
__text:0000000100007F1E                 mov     rax, [rbp+var_88]
__text:0000000100007F25                 mov     rax, [rax+10h]
__text:0000000100007F29                 mov     [rbp+var_88], rax
__text:0000000100007F30                 mov     rdi, [rbp+var_88]
__text:0000000100007F37                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100007F3C
__text:0000000100007F3C loc_100007F3C:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+328↑j
__text:0000000100007F3C                 mov     rax, [rbp+var_88]
__text:0000000100007F43                 mov     rax, [rax+10h]
__text:0000000100007F47                 mov     [rbp+var_88], rax
__text:0000000100007F4E                 mov     rax, [rbp+var_88]
__text:0000000100007F55                 mov     byte ptr [rax+18h], 1
__text:0000000100007F59                 mov     rax, [rbp+var_88]
__text:0000000100007F60                 mov     rax, [rax+10h]
__text:0000000100007F64                 mov     [rbp+var_88], rax
__text:0000000100007F6B                 mov     rax, [rbp+var_88]
__text:0000000100007F72                 mov     byte ptr [rax+18h], 0
__text:0000000100007F76                 mov     rdi, [rbp+var_88]
__text:0000000100007F7D                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100007F82                 jmp     loc_100007F91
__text:0000000100007F87 ; ---------------------------------------------------------------------------
__text:0000000100007F87
__text:0000000100007F87 loc_100007F87:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+309↑j
__text:0000000100007F87                 jmp     $+5
__text:0000000100007F8C ; ---------------------------------------------------------------------------
__text:0000000100007F8C
__text:0000000100007F8C loc_100007F8C:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100007E05↑j
__text:0000000100007F8C                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100007F87↑j
__text:0000000100007F8C                 jmp     loc_100007C20
__text:0000000100007F91 ; ---------------------------------------------------------------------------
__text:0000000100007F91
__text:0000000100007F91 loc_100007F91:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+6E↑j
__text:0000000100007F91                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+210↑j ...
__text:0000000100007F91                 add     rsp, 0E0h
__text:0000000100007F98                 pop     rbp
__text:0000000100007F99                 retn
__text:0000000100007F99 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ endp
__text:0000000100007F99
__text:0000000100007F99 ; ---------------------------------------------------------------------------
__text:0000000100007F9A                 align 20h
__text:0000000100007FA0
__text:0000000100007FA0 ; =============== S U B R O U T I N E =======================================
__text:0000000100007FA0
__text:0000000100007FA0 ; Attributes: bp-based frame
__text:0000000100007FA0
__text:0000000100007FA0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__tree(std::__1::less<std::__1::pair<int, int>> const&)
__text:0000000100007FA0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_ proc near
__text:0000000100007FA0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4__ptr↓o
__text:0000000100007FA0
__text:0000000100007FA0 var_10          = qword ptr -10h
__text:0000000100007FA0 var_8           = qword ptr -8
__text:0000000100007FA0
__text:0000000100007FA0                 push    rbp
__text:0000000100007FA1                 mov     rbp, rsp
__text:0000000100007FA4                 sub     rsp, 10h
__text:0000000100007FA8                 mov     [rbp+var_8], rdi
__text:0000000100007FAC                 mov     [rbp+var_10], rsi
__text:0000000100007FB0                 mov     rdi, [rbp+var_8]
__text:0000000100007FB4                 mov     rsi, [rbp+var_10]
__text:0000000100007FB8                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__tree(std::__1::less<std::__1::pair<int,int>> const&)
__text:0000000100007FBD                 add     rsp, 10h
__text:0000000100007FC1                 pop     rbp
__text:0000000100007FC2                 retn
__text:0000000100007FC2 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_ endp
__text:0000000100007FC2
__text:0000000100007FC2 ; ---------------------------------------------------------------------------
__text:0000000100007FC3                 align 10h
__text:0000000100007FD0
__text:0000000100007FD0 ; =============== S U B R O U T I N E =======================================
__text:0000000100007FD0
__text:0000000100007FD0 ; Attributes: bp-based frame
__text:0000000100007FD0
__text:0000000100007FD0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__tree(std::__1::less<std::__1::pair<int, int>> const&)
__text:0000000100007FD0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_ proc near
__text:0000000100007FD0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4__ptr↓o
__text:0000000100007FD0
__text:0000000100007FD0 var_E0          = qword ptr -0E0h
__text:0000000100007FD0 var_D8          = qword ptr -0D8h
__text:0000000100007FD0 var_D0          = qword ptr -0D0h
__text:0000000100007FD0 var_C8          = qword ptr -0C8h
__text:0000000100007FD0 var_C0          = qword ptr -0C0h
__text:0000000100007FD0 var_B8          = qword ptr -0B8h
__text:0000000100007FD0 var_B0          = qword ptr -0B0h
__text:0000000100007FD0 var_A8          = qword ptr -0A8h
__text:0000000100007FD0 var_A0          = qword ptr -0A0h
__text:0000000100007FD0 var_98          = qword ptr -98h
__text:0000000100007FD0 var_90          = qword ptr -90h
__text:0000000100007FD0 var_88          = qword ptr -88h
__text:0000000100007FD0 var_80          = qword ptr -80h
__text:0000000100007FD0 var_78          = qword ptr -78h
__text:0000000100007FD0 var_68          = qword ptr -68h
__text:0000000100007FD0 var_60          = qword ptr -60h
__text:0000000100007FD0 var_50          = byte ptr -50h
__text:0000000100007FD0 var_48          = qword ptr -48h
__text:0000000100007FD0 var_40          = qword ptr -40h
__text:0000000100007FD0 var_38          = qword ptr -38h
__text:0000000100007FD0 var_30          = byte ptr -30h
__text:0000000100007FD0 var_28          = qword ptr -28h
__text:0000000100007FD0 var_20          = qword ptr -20h
__text:0000000100007FD0 var_18          = qword ptr -18h
__text:0000000100007FD0 var_10          = qword ptr -10h
__text:0000000100007FD0 var_8           = qword ptr -8
__text:0000000100007FD0
__text:0000000100007FD0                 push    rbp
__text:0000000100007FD1                 mov     rbp, rsp
__text:0000000100007FD4                 sub     rsp, 68h
__text:0000000100007FD8                 lea     rax, [rbp+var_28]
__text:0000000100007FDC                 lea     rcx, [rbp+var_30]
__text:0000000100007FE0                 lea     rdx, [rbp+var_50]
__text:0000000100007FE4                 lea     r8, [rbp+var_48]
__text:0000000100007FE8                 mov     [rbp+var_D8], rdi
__text:0000000100007FEF                 mov     [rbp+var_E0], rsi
__text:0000000100007FF6                 mov     rsi, [rbp+var_D8]
__text:0000000100007FFD                 mov     rdi, rsi
__text:0000000100008000                 add     rdi, 8
__text:0000000100008007                 mov     [rbp+var_D0], rdi
__text:000000010000800E                 mov     rdi, [rbp+var_D0]
__text:0000000100008015                 mov     [rbp+var_C8], rdi
__text:000000010000801C                 mov     rdi, [rbp+var_C8]
__text:0000000100008023                 mov     [rbp+var_C0], rdi
__text:000000010000802A                 mov     rdi, [rbp+var_C0]
__text:0000000100008031                 mov     r9, rdi
__text:0000000100008034                 mov     [rbp+var_B8], r9
__text:000000010000803B                 mov     [rbp+var_B0], rdi
__text:0000000100008042                 mov     rdi, [rbp+var_B0]
__text:0000000100008049                 mov     [rbp+var_A8], rdi
__text:0000000100008050                 mov     rdi, [rbp+var_A8]
__text:0000000100008057                 mov     qword ptr [rdi], 0
__text:000000010000805E                 mov     rdi, rsi
__text:0000000100008061                 add     rdi, 10h
__text:0000000100008068                 mov     [rbp+var_60], rdi
__text:000000010000806C                 mov     [rbp+var_68], 0
__text:0000000100008074                 mov     rdi, [rbp+var_60]
__text:0000000100008078                 mov     r9, [rbp+var_68]
__text:000000010000807C                 mov     [rbp+var_40], rdi
__text:0000000100008080                 mov     [rbp+var_48], r9
__text:0000000100008084                 mov     rdi, [rbp+var_40]
__text:0000000100008088                 mov     [rbp+var_38], r8
__text:000000010000808C                 mov     r8, [rbp+var_38]
__text:0000000100008090                 mov     r8, [r8]
__text:0000000100008093                 mov     [rbp+var_8], rdx
__text:0000000100008097                 mov     [rbp+var_20], rdi
__text:000000010000809B                 mov     [rbp+var_28], r8
__text:000000010000809F                 mov     rdx, [rbp+var_20]
__text:00000001000080A3                 mov     [rbp+var_18], rcx
__text:00000001000080A7                 mov     [rbp+var_10], rax
__text:00000001000080AB                 mov     rax, [rbp+var_10]
__text:00000001000080AF                 mov     rax, [rax]
__text:00000001000080B2                 mov     [rdx], rax
__text:00000001000080B5                 mov     [rbp+var_98], rsi
__text:00000001000080BC                 mov     rax, [rbp+var_98]
__text:00000001000080C3                 add     rax, 8
__text:00000001000080C9                 mov     [rbp+var_90], rax
__text:00000001000080D0                 mov     rax, [rbp+var_90]
__text:00000001000080D7                 mov     [rbp+var_88], rax
__text:00000001000080DE                 mov     rax, [rbp+var_88]
__text:00000001000080E5                 mov     [rbp+var_80], rax
__text:00000001000080E9                 mov     rax, [rbp+var_80]
__text:00000001000080ED                 mov     [rbp+var_78], rax
__text:00000001000080F1                 mov     rax, [rbp+var_78]
__text:00000001000080F5                 mov     [rbp+var_A0], rsi
__text:00000001000080FC                 mov     rcx, [rbp+var_A0]
__text:0000000100008103                 mov     [rcx], rax
__text:0000000100008106                 add     rsp, 68h
__text:000000010000810A                 pop     rbp
__text:000000010000810B                 retn
__text:000000010000810B __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_ endp
__text:000000010000810B
__text:000000010000810B ; ---------------------------------------------------------------------------
__text:000000010000810C                 align 10h
__text:0000000100008110
__text:0000000100008110 ; =============== S U B R O U T I N E =======================================
__text:0000000100008110
__text:0000000100008110 ; Attributes: bp-based frame
__text:0000000100008110
__text:0000000100008110 ; std::__1::__tree_iterator<std::__1::pair<int, int>, std::__1::__tree_node<std::__1::pair<int, int>, void *> *, long> std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::find<std::__1::pair<int, int>>(std::__1::pair<int, int> const&)
__text:0000000100008110 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_ proc near
__text:0000000100008110                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT__ptr↓o
__text:0000000100008110
__text:0000000100008110 var_1AA         = byte ptr -1AAh
__text:0000000100008110 var_1A9         = byte ptr -1A9h
__text:0000000100008110 var_1A8         = qword ptr -1A8h
__text:0000000100008110 var_1A0         = qword ptr -1A0h
__text:0000000100008110 var_198         = qword ptr -198h
__text:0000000100008110 var_190         = qword ptr -190h
__text:0000000100008110 var_188         = qword ptr -188h
__text:0000000100008110 var_180         = qword ptr -180h
__text:0000000100008110 var_178         = qword ptr -178h
__text:0000000100008110 var_170         = qword ptr -170h
__text:0000000100008110 var_168         = qword ptr -168h
__text:0000000100008110 var_160         = qword ptr -160h
__text:0000000100008110 var_158         = qword ptr -158h
__text:0000000100008110 var_150         = qword ptr -150h
__text:0000000100008110 var_148         = qword ptr -148h
__text:0000000100008110 var_140         = qword ptr -140h
__text:0000000100008110 var_138         = qword ptr -138h
__text:0000000100008110 var_130         = qword ptr -130h
__text:0000000100008110 var_128         = qword ptr -128h
__text:0000000100008110 var_120         = qword ptr -120h
__text:0000000100008110 var_118         = qword ptr -118h
__text:0000000100008110 var_110         = qword ptr -110h
__text:0000000100008110 var_108         = qword ptr -108h
__text:0000000100008110 var_100         = qword ptr -100h
__text:0000000100008110 var_F8          = qword ptr -0F8h
__text:0000000100008110 var_F0          = qword ptr -0F0h
__text:0000000100008110 var_E8          = qword ptr -0E8h
__text:0000000100008110 var_E0          = qword ptr -0E0h
__text:0000000100008110 var_D8          = qword ptr -0D8h
__text:0000000100008110 var_D0          = qword ptr -0D0h
__text:0000000100008110 var_C8          = qword ptr -0C8h
__text:0000000100008110 var_C0          = qword ptr -0C0h
__text:0000000100008110 var_B8          = qword ptr -0B8h
__text:0000000100008110 var_B0          = qword ptr -0B0h
__text:0000000100008110 var_A8          = qword ptr -0A8h
__text:0000000100008110 var_A0          = qword ptr -0A0h
__text:0000000100008110 var_98          = qword ptr -98h
__text:0000000100008110 var_90          = qword ptr -90h
__text:0000000100008110 var_88          = qword ptr -88h
__text:0000000100008110 var_80          = qword ptr -80h
__text:0000000100008110 var_78          = qword ptr -78h
__text:0000000100008110 var_70          = qword ptr -70h
__text:0000000100008110 var_68          = qword ptr -68h
__text:0000000100008110 var_60          = qword ptr -60h
__text:0000000100008110 var_58          = qword ptr -58h
__text:0000000100008110 var_50          = qword ptr -50h
__text:0000000100008110 var_48          = qword ptr -48h
__text:0000000100008110 var_40          = qword ptr -40h
__text:0000000100008110 var_38          = qword ptr -38h
__text:0000000100008110 var_30          = qword ptr -30h
__text:0000000100008110 var_28          = qword ptr -28h
__text:0000000100008110 var_20          = qword ptr -20h
__text:0000000100008110 var_18          = qword ptr -18h
__text:0000000100008110 var_10          = qword ptr -10h
__text:0000000100008110 var_8           = qword ptr -8
__text:0000000100008110
__text:0000000100008110                 push    rbp
__text:0000000100008111                 mov     rbp, rsp
__text:0000000100008114                 sub     rsp, 1B0h
__text:000000010000811B                 mov     [rbp+var_180], rdi
__text:0000000100008122                 mov     [rbp+var_188], rsi
__text:0000000100008129                 mov     rsi, [rbp+var_180]
__text:0000000100008130                 mov     rdi, [rbp+var_188]
__text:0000000100008137                 mov     [rbp+var_170], rsi
__text:000000010000813E                 mov     rax, [rbp+var_170]
__text:0000000100008145                 mov     [rbp+var_168], rax
__text:000000010000814C                 mov     rax, [rbp+var_168]
__text:0000000100008153                 add     rax, 8
__text:0000000100008159                 mov     [rbp+var_160], rax
__text:0000000100008160                 mov     rax, [rbp+var_160]
__text:0000000100008167                 mov     [rbp+var_158], rax
__text:000000010000816E                 mov     rax, [rbp+var_158]
__text:0000000100008175                 mov     [rbp+var_150], rax
__text:000000010000817C                 mov     rax, [rbp+var_150]
__text:0000000100008183                 mov     [rbp+var_148], rax
__text:000000010000818A                 mov     rax, [rbp+var_148]
__text:0000000100008191                 mov     rax, [rax]
__text:0000000100008194                 mov     [rbp+var_28], rsi
__text:0000000100008198                 mov     rcx, [rbp+var_28]
__text:000000010000819C                 add     rcx, 8
__text:00000001000081A3                 mov     [rbp+var_20], rcx
__text:00000001000081A7                 mov     rcx, [rbp+var_20]
__text:00000001000081AB                 mov     [rbp+var_18], rcx
__text:00000001000081AF                 mov     rcx, [rbp+var_18]
__text:00000001000081B3                 mov     [rbp+var_10], rcx
__text:00000001000081B7                 mov     rcx, [rbp+var_10]
__text:00000001000081BB                 mov     [rbp+var_8], rcx
__text:00000001000081BF                 mov     rcx, [rbp+var_8]
__text:00000001000081C3                 mov     [rbp+var_1A0], rdi
__text:00000001000081CA                 mov     rdi, rsi
__text:00000001000081CD                 mov     rdx, [rbp+var_1A0]
__text:00000001000081D4                 mov     [rbp+var_1A8], rsi
__text:00000001000081DB                 mov     rsi, rdx
__text:00000001000081DE                 mov     rdx, rax
__text:00000001000081E1                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE13__lower_boundIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SD_SD_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__lower_bound<std::__1::pair<int,int>>(std::__1::pair<int,int> const&,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,std::__1::__tree_node<std::__1::pair<int,int>,void *> *)
__text:00000001000081E6                 lea     rcx, [rbp+var_198]
__text:00000001000081ED                 lea     rdx, [rbp+var_190]
__text:00000001000081F4                 lea     rsi, [rbp+var_78]
__text:00000001000081F8                 mov     [rbp+var_190], rax
__text:00000001000081FF                 mov     rax, [rbp+var_1A8]
__text:0000000100008206                 mov     [rbp+var_80], rax
__text:000000010000820A                 mov     rdi, [rbp+var_80]
__text:000000010000820E                 mov     [rbp+var_70], rdi
__text:0000000100008212                 mov     rdi, [rbp+var_70]
__text:0000000100008216                 add     rdi, 8
__text:000000010000821D                 mov     [rbp+var_68], rdi
__text:0000000100008221                 mov     rdi, [rbp+var_68]
__text:0000000100008225                 mov     [rbp+var_60], rdi
__text:0000000100008229                 mov     rdi, [rbp+var_60]
__text:000000010000822D                 mov     [rbp+var_58], rdi
__text:0000000100008231                 mov     rdi, [rbp+var_58]
__text:0000000100008235                 mov     [rbp+var_50], rdi
__text:0000000100008239                 mov     rdi, [rbp+var_50]
__text:000000010000823D                 mov     [rbp+var_40], rsi
__text:0000000100008241                 mov     [rbp+var_48], rdi
__text:0000000100008245                 mov     rsi, [rbp+var_40]
__text:0000000100008249                 mov     rdi, [rbp+var_48]
__text:000000010000824D                 mov     [rbp+var_30], rsi
__text:0000000100008251                 mov     [rbp+var_38], rdi
__text:0000000100008255                 mov     rsi, [rbp+var_30]
__text:0000000100008259                 mov     rdi, [rbp+var_38]
__text:000000010000825D                 mov     [rsi], rdi
__text:0000000100008260                 mov     rsi, [rbp+var_78]
__text:0000000100008264                 mov     [rbp+var_198], rsi
__text:000000010000826B                 mov     [rbp+var_98], rdx
__text:0000000100008272                 mov     [rbp+var_A0], rcx
__text:0000000100008279                 mov     rcx, [rbp+var_98]
__text:0000000100008280                 mov     rdx, [rbp+var_A0]
__text:0000000100008287                 mov     [rbp+var_88], rcx
__text:000000010000828E                 mov     [rbp+var_90], rdx
__text:0000000100008295                 mov     rcx, [rbp+var_88]
__text:000000010000829C                 mov     rcx, [rcx]
__text:000000010000829F                 mov     rdx, [rbp+var_90]
__text:00000001000082A6                 cmp     rcx, [rdx]
__text:00000001000082A9                 setz    r8b
__text:00000001000082AD                 xor     r8b, 1
__text:00000001000082B1                 test    r8b, 1
__text:00000001000082B5                 jnz     loc_1000082C0
__text:00000001000082BB                 jmp     loc_1000083DB
__text:00000001000082C0 ; ---------------------------------------------------------------------------
__text:00000001000082C0
__text:00000001000082C0 loc_1000082C0:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::find<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+1A5↑j
__text:00000001000082C0                 mov     al, 1
__text:00000001000082C2                 lea     rcx, [rbp+var_190]
__text:00000001000082C9                 mov     rdx, [rbp+var_1A8]
__text:00000001000082D0                 mov     [rbp+var_B8], rdx
__text:00000001000082D7                 mov     rsi, [rbp+var_B8]
__text:00000001000082DE                 add     rsi, 10h
__text:00000001000082E5                 mov     [rbp+var_B0], rsi
__text:00000001000082EC                 mov     rsi, [rbp+var_B0]
__text:00000001000082F3                 mov     [rbp+var_A8], rsi
__text:00000001000082FA                 mov     rsi, [rbp+var_A8]
__text:0000000100008301                 mov     rdi, [rbp+var_188]
__text:0000000100008308                 mov     [rbp+var_C0], rcx
__text:000000010000830F                 mov     rcx, [rbp+var_C0]
__text:0000000100008316                 mov     rcx, [rcx]
__text:0000000100008319                 add     rcx, 1Ch
__text:0000000100008320                 mov     [rbp+var_D8], rsi
__text:0000000100008327                 mov     [rbp+var_E0], rdi
__text:000000010000832E                 mov     [rbp+var_E8], rcx
__text:0000000100008335                 mov     rcx, [rbp+var_E0]
__text:000000010000833C                 mov     rsi, [rbp+var_E8]
__text:0000000100008343                 mov     [rbp+var_C8], rcx
__text:000000010000834A                 mov     [rbp+var_D0], rsi
__text:0000000100008351                 mov     rcx, [rbp+var_C8]
__text:0000000100008358                 mov     r8d, [rcx]
__text:000000010000835B                 mov     rcx, [rbp+var_D0]
__text:0000000100008362                 cmp     r8d, [rcx]
__text:0000000100008365                 mov     [rbp+var_1A9], al
__text:000000010000836B                 jl      loc_1000083BA
__text:0000000100008371                 mov     al, 0
__text:0000000100008373                 mov     rcx, [rbp+var_D0]
__text:000000010000837A                 mov     edx, [rcx]
__text:000000010000837C                 mov     rcx, [rbp+var_C8]
__text:0000000100008383                 cmp     edx, [rcx]
__text:0000000100008385                 mov     [rbp+var_1AA], al
__text:000000010000838B                 jl      loc_1000083AE
__text:0000000100008391                 mov     rax, [rbp+var_C8]
__text:0000000100008398                 mov     ecx, [rax+4]
__text:000000010000839B                 mov     rax, [rbp+var_D0]
__text:00000001000083A2                 cmp     ecx, [rax+4]
__text:00000001000083A5                 setl    dl
__text:00000001000083A8                 mov     [rbp+var_1AA], dl
__text:00000001000083AE
__text:00000001000083AE loc_1000083AE:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::find<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+27B↑j
__text:00000001000083AE                 mov     al, [rbp+var_1AA]
__text:00000001000083B4                 mov     [rbp+var_1A9], al
__text:00000001000083BA
__text:00000001000083BA loc_1000083BA:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::find<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+25B↑j
__text:00000001000083BA                 mov     al, [rbp+var_1A9]
__text:00000001000083C0                 test    al, 1
__text:00000001000083C2                 jnz     loc_1000083DB
__text:00000001000083C8                 mov     rax, [rbp+var_190]
__text:00000001000083CF                 mov     [rbp+var_178], rax
__text:00000001000083D6                 jmp     loc_10000848D
__text:00000001000083DB ; ---------------------------------------------------------------------------
__text:00000001000083DB
__text:00000001000083DB loc_1000083DB:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::find<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+1AB↑j
__text:00000001000083DB                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::find<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+2B2↑j
__text:00000001000083DB                 lea     rax, [rbp+var_138]
__text:00000001000083E2                 mov     rcx, [rbp+var_1A8]
__text:00000001000083E9                 mov     [rbp+var_140], rcx
__text:00000001000083F0                 mov     rdx, [rbp+var_140]
__text:00000001000083F7                 mov     [rbp+var_130], rdx
__text:00000001000083FE                 mov     rdx, [rbp+var_130]
__text:0000000100008405                 add     rdx, 8
__text:000000010000840C                 mov     [rbp+var_128], rdx
__text:0000000100008413                 mov     rdx, [rbp+var_128]
__text:000000010000841A                 mov     [rbp+var_120], rdx
__text:0000000100008421                 mov     rdx, [rbp+var_120]
__text:0000000100008428                 mov     [rbp+var_118], rdx
__text:000000010000842F                 mov     rdx, [rbp+var_118]
__text:0000000100008436                 mov     [rbp+var_110], rdx
__text:000000010000843D                 mov     rdx, [rbp+var_110]
__text:0000000100008444                 mov     [rbp+var_100], rax
__text:000000010000844B                 mov     [rbp+var_108], rdx
__text:0000000100008452                 mov     rax, [rbp+var_100]
__text:0000000100008459                 mov     rdx, [rbp+var_108]
__text:0000000100008460                 mov     [rbp+var_F0], rax
__text:0000000100008467                 mov     [rbp+var_F8], rdx
__text:000000010000846E                 mov     rax, [rbp+var_F0]
__text:0000000100008475                 mov     rdx, [rbp+var_F8]
__text:000000010000847C                 mov     [rax], rdx
__text:000000010000847F                 mov     rax, [rbp+var_138]
__text:0000000100008486                 mov     [rbp+var_178], rax
__text:000000010000848D
__text:000000010000848D loc_10000848D:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::find<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+2C6↑j
__text:000000010000848D                 mov     rax, [rbp+var_178]
__text:0000000100008494                 add     rsp, 1B0h
__text:000000010000849B                 pop     rbp
__text:000000010000849C                 retn
__text:000000010000849C __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE4findIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_ endp
__text:000000010000849C
__text:000000010000849C ; ---------------------------------------------------------------------------
__text:000000010000849D                 align 20h
__text:00000001000084A0
__text:00000001000084A0 ; =============== S U B R O U T I N E =======================================
__text:00000001000084A0
__text:00000001000084A0 ; Attributes: bp-based frame
__text:00000001000084A0
__text:00000001000084A0 ; std::__1::__tree_iterator<std::__1::pair<int, int>, std::__1::__tree_node<std::__1::pair<int, int>, void *> *, long> std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__lower_bound<std::__1::pair<int, int>>(std::__1::pair<int, int> const&, std::__1::__tree_node<std::__1::pair<int, int>, void *> *, std::__1::__tree_node<std::__1::pair<int, int>, void *> *)
__text:00000001000084A0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE13__lower_boundIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SD_SD_ proc near
__text:00000001000084A0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE13__lower_boundIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SD_SD__ptr↓o
__text:00000001000084A0
__text:00000001000084A0 var_CA          = byte ptr -0CAh
__text:00000001000084A0 var_C9          = byte ptr -0C9h
__text:00000001000084A0 var_C8          = qword ptr -0C8h
__text:00000001000084A0 var_C0          = qword ptr -0C0h
__text:00000001000084A0 var_B8          = qword ptr -0B8h
__text:00000001000084A0 var_B0          = qword ptr -0B0h
__text:00000001000084A0 var_A8          = qword ptr -0A8h
__text:00000001000084A0 var_A0          = qword ptr -0A0h
__text:00000001000084A0 var_98          = qword ptr -98h
__text:00000001000084A0 var_90          = qword ptr -90h
__text:00000001000084A0 var_88          = qword ptr -88h
__text:00000001000084A0 var_80          = qword ptr -80h
__text:00000001000084A0 var_78          = qword ptr -78h
__text:00000001000084A0 var_70          = qword ptr -70h
__text:00000001000084A0 var_68          = qword ptr -68h
__text:00000001000084A0 var_60          = qword ptr -60h
__text:00000001000084A0 var_58          = qword ptr -58h
__text:00000001000084A0 var_50          = qword ptr -50h
__text:00000001000084A0 var_48          = qword ptr -48h
__text:00000001000084A0 var_40          = qword ptr -40h
__text:00000001000084A0 var_38          = qword ptr -38h
__text:00000001000084A0 var_30          = qword ptr -30h
__text:00000001000084A0 var_28          = qword ptr -28h
__text:00000001000084A0 var_20          = qword ptr -20h
__text:00000001000084A0 var_18          = qword ptr -18h
__text:00000001000084A0 var_10          = qword ptr -10h
__text:00000001000084A0 var_8           = qword ptr -8
__text:00000001000084A0
__text:00000001000084A0                 push    rbp
__text:00000001000084A1                 mov     rbp, rsp
__text:00000001000084A4                 sub     rsp, 50h
__text:00000001000084A8                 mov     [rbp+var_A0], rdi
__text:00000001000084AF                 mov     [rbp+var_A8], rsi
__text:00000001000084B6                 mov     [rbp+var_B0], rdx
__text:00000001000084BD                 mov     [rbp+var_B8], rcx
__text:00000001000084C4                 mov     rcx, [rbp+var_A0]
__text:00000001000084CB                 mov     [rbp+var_C8], rcx
__text:00000001000084D2
__text:00000001000084D2 loc_1000084D2:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__lower_bound<std::__1::pair<int,int>>(std::__1::pair<int,int> const&,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,std::__1::__tree_node<std::__1::pair<int,int>,void *> *):loc_100008627↓j
__text:00000001000084D2                 lea     rax, [rbp+var_C0]
__text:00000001000084D9                 lea     rcx, [rbp+var_90]
__text:00000001000084E0                 mov     rdx, [rbp+var_B0]
__text:00000001000084E7                 mov     [rbp+var_80], rcx
__text:00000001000084EB                 mov     [rbp+var_88], 0FFFFFFFFFFFFFFFFh
__text:00000001000084F6                 mov     rcx, [rbp+var_80]
__text:00000001000084FA                 mov     rsi, [rbp+var_88]
__text:0000000100008501                 mov     [rbp+var_70], rcx
__text:0000000100008505                 mov     [rbp+var_78], rsi
__text:0000000100008509                 mov     rcx, [rbp+var_70]
__text:000000010000850D                 mov     qword ptr [rcx], 0
__text:0000000100008514                 mov     rcx, [rbp+var_90]
__text:000000010000851B                 mov     [rbp+var_C0], rcx
__text:0000000100008522                 mov     [rbp+var_8], rax
__text:0000000100008526                 cmp     rdx, 0
__text:000000010000852D                 jz      loc_10000862C
__text:0000000100008533                 mov     al, 1
__text:0000000100008535                 mov     rcx, [rbp+var_C8]
__text:000000010000853C                 mov     [rbp+var_20], rcx
__text:0000000100008540                 mov     rdx, [rbp+var_20]
__text:0000000100008544                 add     rdx, 10h
__text:000000010000854B                 mov     [rbp+var_18], rdx
__text:000000010000854F                 mov     rdx, [rbp+var_18]
__text:0000000100008553                 mov     [rbp+var_10], rdx
__text:0000000100008557                 mov     rdx, [rbp+var_10]
__text:000000010000855B                 mov     rsi, [rbp+var_B0]
__text:0000000100008562                 add     rsi, 1Ch
__text:0000000100008569                 mov     rdi, [rbp+var_A8]
__text:0000000100008570                 mov     [rbp+var_38], rdx
__text:0000000100008574                 mov     [rbp+var_40], rsi
__text:0000000100008578                 mov     [rbp+var_48], rdi
__text:000000010000857C                 mov     rdx, [rbp+var_40]
__text:0000000100008580                 mov     rsi, [rbp+var_48]
__text:0000000100008584                 mov     [rbp+var_28], rdx
__text:0000000100008588                 mov     [rbp+var_30], rsi
__text:000000010000858C                 mov     rdx, [rbp+var_28]
__text:0000000100008590                 mov     r8d, [rdx]
__text:0000000100008593                 mov     rdx, [rbp+var_30]
__text:0000000100008597                 cmp     r8d, [rdx]
__text:000000010000859A                 mov     [rbp+var_C9], al
__text:00000001000085A0                 jl      loc_1000085E3
__text:00000001000085A6                 mov     al, 0
__text:00000001000085A8                 mov     rcx, [rbp+var_30]
__text:00000001000085AC                 mov     edx, [rcx]
__text:00000001000085AE                 mov     rcx, [rbp+var_28]
__text:00000001000085B2                 cmp     edx, [rcx]
__text:00000001000085B4                 mov     [rbp+var_CA], al
__text:00000001000085BA                 jl      loc_1000085D7
__text:00000001000085C0                 mov     rax, [rbp+var_28]
__text:00000001000085C4                 mov     ecx, [rax+4]
__text:00000001000085C7                 mov     rax, [rbp+var_30]
__text:00000001000085CB                 cmp     ecx, [rax+4]
__text:00000001000085CE                 setl    dl
__text:00000001000085D1                 mov     [rbp+var_CA], dl
__text:00000001000085D7
__text:00000001000085D7 loc_1000085D7:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__lower_bound<std::__1::pair<int,int>>(std::__1::pair<int,int> const&,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+11A↑j
__text:00000001000085D7                 mov     al, [rbp+var_CA]
__text:00000001000085DD                 mov     [rbp+var_C9], al
__text:00000001000085E3
__text:00000001000085E3 loc_1000085E3:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__lower_bound<std::__1::pair<int,int>>(std::__1::pair<int,int> const&,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+100↑j
__text:00000001000085E3                 mov     al, [rbp+var_C9]
__text:00000001000085E9                 test    al, 1
__text:00000001000085EB                 jnz     loc_100008615
__text:00000001000085F1                 mov     rax, [rbp+var_B0]
__text:00000001000085F8                 mov     [rbp+var_B8], rax
__text:00000001000085FF                 mov     rax, [rbp+var_B0]
__text:0000000100008606                 mov     rax, [rax]
__text:0000000100008609                 mov     [rbp+var_B0], rax
__text:0000000100008610                 jmp     loc_100008627
__text:0000000100008615 ; ---------------------------------------------------------------------------
__text:0000000100008615
__text:0000000100008615 loc_100008615:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__lower_bound<std::__1::pair<int,int>>(std::__1::pair<int,int> const&,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+14B↑j
__text:0000000100008615                 mov     rax, [rbp+var_B0]
__text:000000010000861C                 mov     rax, [rax+8]
__text:0000000100008620                 mov     [rbp+var_B0], rax
__text:0000000100008627
__text:0000000100008627 loc_100008627:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__lower_bound<std::__1::pair<int,int>>(std::__1::pair<int,int> const&,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+170↑j
__text:0000000100008627                 jmp     loc_1000084D2
__text:000000010000862C ; ---------------------------------------------------------------------------
__text:000000010000862C
__text:000000010000862C loc_10000862C:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__lower_bound<std::__1::pair<int,int>>(std::__1::pair<int,int> const&,std::__1::__tree_node<std::__1::pair<int,int>,void *> *,std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+8D↑j
__text:000000010000862C                 lea     rax, [rbp+var_98]
__text:0000000100008633                 mov     rcx, [rbp+var_B8]
__text:000000010000863A                 mov     [rbp+var_60], rax
__text:000000010000863E                 mov     [rbp+var_68], rcx
__text:0000000100008642                 mov     rax, [rbp+var_60]
__text:0000000100008646                 mov     rcx, [rbp+var_68]
__text:000000010000864A                 mov     [rbp+var_50], rax
__text:000000010000864E                 mov     [rbp+var_58], rcx
__text:0000000100008652                 mov     rax, [rbp+var_50]
__text:0000000100008656                 mov     rcx, [rbp+var_58]
__text:000000010000865A                 mov     [rax], rcx
__text:000000010000865D                 mov     rax, [rbp+var_98]
__text:0000000100008664                 add     rsp, 50h
__text:0000000100008668                 pop     rbp
__text:0000000100008669                 retn
__text:0000000100008669 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE13__lower_boundIS2_EENS_15__tree_iteratorIS2_PNS_11__tree_nodeIS2_PvEElEERKT_SD_SD_ endp
__text:0000000100008669
__text:0000000100008669 ; ---------------------------------------------------------------------------
__text:000000010000866A                 align 10h
__text:0000000100008670
__text:0000000100008670 ; =============== S U B R O U T I N E =======================================
__text:0000000100008670
__text:0000000100008670 ; Attributes: bp-based frame
__text:0000000100008670
__text:0000000100008670 ; std::__1::vector<int, std::__1::allocator<int>>::~vector()
__text:0000000100008670 __ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev proc near
__text:0000000100008670                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev_ptr↓o
__text:0000000100008670
__text:0000000100008670 var_8           = qword ptr -8
__text:0000000100008670
__text:0000000100008670                 push    rbp
__text:0000000100008671                 mov     rbp, rsp
__text:0000000100008674                 sub     rsp, 10h
__text:0000000100008678                 mov     [rbp+var_8], rdi
__text:000000010000867C                 mov     rdi, [rbp+var_8]
__text:0000000100008680                 call    j___ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev ; std::__1::__vector_base<int,std::__1::allocator<int>>::~__vector_base()
__text:0000000100008685                 add     rsp, 10h
__text:0000000100008689                 pop     rbp
__text:000000010000868A                 retn
__text:000000010000868A __ZNSt3__16vectorIiNS_9allocatorIiEEED2Ev endp
__text:000000010000868A
__text:000000010000868A ; ---------------------------------------------------------------------------
__text:000000010000868B                 align 10h
__text:0000000100008690
__text:0000000100008690 ; =============== S U B R O U T I N E =======================================
__text:0000000100008690
__text:0000000100008690 ; Attributes: bp-based frame
__text:0000000100008690
__text:0000000100008690 ; std::__1::__vector_base<int, std::__1::allocator<int>>::~__vector_base()
__text:0000000100008690 __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev proc near
__text:0000000100008690                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev_ptr↓o
__text:0000000100008690
__text:0000000100008690 var_130         = qword ptr -130h
__text:0000000100008690 var_128         = qword ptr -128h
__text:0000000100008690 var_120         = qword ptr -120h
__text:0000000100008690 var_118         = qword ptr -118h
__text:0000000100008690 var_110         = qword ptr -110h
__text:0000000100008690 var_108         = qword ptr -108h
__text:0000000100008690 var_100         = qword ptr -100h
__text:0000000100008690 var_F8          = qword ptr -0F8h
__text:0000000100008690 var_F0          = qword ptr -0F0h
__text:0000000100008690 var_E8          = qword ptr -0E8h
__text:0000000100008690 var_E0          = qword ptr -0E0h
__text:0000000100008690 var_D8          = qword ptr -0D8h
__text:0000000100008690 var_D0          = qword ptr -0D0h
__text:0000000100008690 var_C8          = qword ptr -0C8h
__text:0000000100008690 var_C0          = qword ptr -0C0h
__text:0000000100008690 var_B8          = qword ptr -0B8h
__text:0000000100008690 var_B0          = qword ptr -0B0h
__text:0000000100008690 var_A8          = qword ptr -0A8h
__text:0000000100008690 var_A0          = qword ptr -0A0h
__text:0000000100008690 var_98          = qword ptr -98h
__text:0000000100008690 var_90          = qword ptr -90h
__text:0000000100008690 var_88          = qword ptr -88h
__text:0000000100008690 var_80          = qword ptr -80h
__text:0000000100008690 var_78          = qword ptr -78h
__text:0000000100008690 var_60          = qword ptr -60h
__text:0000000100008690 var_58          = qword ptr -58h
__text:0000000100008690 var_50          = qword ptr -50h
__text:0000000100008690 var_48          = qword ptr -48h
__text:0000000100008690 var_40          = qword ptr -40h
__text:0000000100008690 var_28          = qword ptr -28h
__text:0000000100008690 var_20          = qword ptr -20h
__text:0000000100008690 var_18          = qword ptr -18h
__text:0000000100008690 var_10          = qword ptr -10h
__text:0000000100008690 var_8           = qword ptr -8
__text:0000000100008690
__text:0000000100008690                 push    rbp
__text:0000000100008691                 mov     rbp, rsp
__text:0000000100008694                 sub     rsp, 130h
__text:000000010000869B                 lea     rax, [rbp+var_120]
__text:00000001000086A2                 lea     rcx, [rbp+var_110]
__text:00000001000086A9                 mov     [rbp+var_118], rdi
__text:00000001000086B0                 mov     rdi, [rbp+var_118]
__text:00000001000086B7                 mov     rdx, [rdi]
__text:00000001000086BA                 mov     [rbp+var_100], rcx
__text:00000001000086C1                 mov     [rbp+var_108], 0FFFFFFFFFFFFFFFFh
__text:00000001000086CC                 mov     rcx, [rbp+var_100]
__text:00000001000086D3                 mov     rsi, [rbp+var_108]
__text:00000001000086DA                 mov     [rbp+var_F0], rcx
__text:00000001000086E1                 mov     [rbp+var_F8], rsi
__text:00000001000086E8                 mov     rcx, [rbp+var_F0]
__text:00000001000086EF                 mov     qword ptr [rcx], 0
__text:00000001000086F6                 mov     rcx, [rbp+var_110]
__text:00000001000086FD                 mov     [rbp+var_120], rcx
__text:0000000100008704                 mov     [rbp+var_B8], rax
__text:000000010000870B                 cmp     rdx, 0
__text:0000000100008712                 mov     [rbp+var_128], rdi
__text:0000000100008719                 jz      loc_100008882
__text:000000010000871F                 mov     rax, [rbp+var_128]
__text:0000000100008726                 mov     [rbp+var_78], rax
__text:000000010000872A                 mov     rcx, [rbp+var_78]
__text:000000010000872E                 mov     rdx, [rcx]
__text:0000000100008731                 mov     [rbp+var_58], rcx
__text:0000000100008735                 mov     [rbp+var_60], rdx
__text:0000000100008739                 mov     rcx, [rbp+var_58]
__text:000000010000873D                 mov     [rbp+var_130], rcx
__text:0000000100008744
__text:0000000100008744 loc_100008744:                          ; CODE XREF: std::__1::__vector_base<int,std::__1::allocator<int>>::~__vector_base()+11E↓j
__text:0000000100008744                 mov     rax, [rbp+var_60]
__text:0000000100008748                 mov     rcx, [rbp+var_130]
__text:000000010000874F                 cmp     rax, [rcx+8]
__text:0000000100008753                 jz      loc_1000087B3
__text:0000000100008759                 mov     rax, [rbp+var_130]
__text:0000000100008760                 mov     [rbp+var_50], rax
__text:0000000100008764                 mov     rcx, [rbp+var_50]
__text:0000000100008768                 add     rcx, 10h
__text:000000010000876F                 mov     [rbp+var_48], rcx
__text:0000000100008773                 mov     rcx, [rbp+var_48]
__text:0000000100008777                 mov     [rbp+var_40], rcx
__text:000000010000877B                 mov     rcx, [rbp+var_40]
__text:000000010000877F                 mov     rdx, [rax+8]
__text:0000000100008783                 add     rdx, 0FFFFFFFFFFFFFFFCh
__text:000000010000878A                 mov     [rax+8], rdx
__text:000000010000878E                 mov     [rbp+var_8], rdx
__text:0000000100008792                 mov     rdx, [rbp+var_8]
__text:0000000100008796                 mov     [rbp+var_20], rcx
__text:000000010000879A                 mov     [rbp+var_28], rdx
__text:000000010000879E                 mov     rcx, [rbp+var_20]
__text:00000001000087A2                 mov     rdx, [rbp+var_28]
__text:00000001000087A6                 mov     [rbp+var_10], rcx
__text:00000001000087AA                 mov     [rbp+var_18], rdx
__text:00000001000087AE                 jmp     loc_100008744
__text:00000001000087B3 ; ---------------------------------------------------------------------------
__text:00000001000087B3
__text:00000001000087B3 loc_1000087B3:                          ; CODE XREF: std::__1::__vector_base<int,std::__1::allocator<int>>::~__vector_base()+C3↑j
__text:00000001000087B3                 mov     rax, [rbp+var_128]
__text:00000001000087BA                 mov     [rbp+var_90], rax
__text:00000001000087C1                 mov     rcx, [rbp+var_90]
__text:00000001000087C8                 add     rcx, 10h
__text:00000001000087CF                 mov     [rbp+var_88], rcx
__text:00000001000087D6                 mov     rcx, [rbp+var_88]
__text:00000001000087DD                 mov     [rbp+var_80], rcx
__text:00000001000087E1                 mov     rcx, [rbp+var_80]
__text:00000001000087E5                 mov     rdx, [rax]
__text:00000001000087E8                 mov     [rbp+var_B0], rax
__text:00000001000087EF                 mov     rsi, [rbp+var_B0]
__text:00000001000087F6                 mov     [rbp+var_A8], rsi
__text:00000001000087FD                 mov     rdi, [rbp+var_A8]
__text:0000000100008804                 add     rdi, 10h
__text:000000010000880B                 mov     [rbp+var_A0], rdi
__text:0000000100008812                 mov     rdi, [rbp+var_A0]
__text:0000000100008819                 mov     [rbp+var_98], rdi
__text:0000000100008820                 mov     rdi, [rbp+var_98]
__text:0000000100008827                 mov     rdi, [rdi]
__text:000000010000882A                 mov     rsi, [rsi]
__text:000000010000882D                 sub     rdi, rsi
__text:0000000100008830                 sar     rdi, 2
__text:0000000100008834                 mov     [rbp+var_D8], rcx
__text:000000010000883B                 mov     [rbp+var_E0], rdx
__text:0000000100008842                 mov     [rbp+var_E8], rdi
__text:0000000100008849                 mov     rcx, [rbp+var_D8]
__text:0000000100008850                 mov     rdx, [rbp+var_E0]
__text:0000000100008857                 mov     rsi, [rbp+var_E8]
__text:000000010000885E                 mov     [rbp+var_C0], rcx
__text:0000000100008865                 mov     [rbp+var_C8], rdx
__text:000000010000886C                 mov     [rbp+var_D0], rsi
__text:0000000100008873                 mov     rcx, [rbp+var_C8]
__text:000000010000887A                 mov     rdi, rcx        ; void *
__text:000000010000887D                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100008882
__text:0000000100008882 loc_100008882:                          ; CODE XREF: std::__1::__vector_base<int,std::__1::allocator<int>>::~__vector_base()+89↑j
__text:0000000100008882                 add     rsp, 130h
__text:0000000100008889                 pop     rbp
__text:000000010000888A                 retn
__text:000000010000888A __ZNSt3__113__vector_baseIiNS_9allocatorIiEEED2Ev endp
__text:000000010000888A
__text:000000010000888A ; ---------------------------------------------------------------------------
__text:000000010000888B                 align 10h
__text:0000000100008890
__text:0000000100008890 ; =============== S U B R O U T I N E =======================================
__text:0000000100008890
__text:0000000100008890 ; Attributes: bp-based frame
__text:0000000100008890
__text:0000000100008890 ; std::__1::multiset<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::~multiset()
__text:0000000100008890 __ZNSt3__18multisetINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev proc near
__text:0000000100008890                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__18multisetINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev_ptr↓o
__text:0000000100008890
__text:0000000100008890 var_8           = qword ptr -8
__text:0000000100008890
__text:0000000100008890                 push    rbp
__text:0000000100008891                 mov     rbp, rsp
__text:0000000100008894                 sub     rsp, 10h
__text:0000000100008898                 mov     [rbp+var_8], rdi
__text:000000010000889C                 mov     rdi, [rbp+var_8]
__text:00000001000088A0                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::~__tree()
__text:00000001000088A5                 add     rsp, 10h
__text:00000001000088A9                 pop     rbp
__text:00000001000088AA                 retn
__text:00000001000088AA __ZNSt3__18multisetINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev endp
__text:00000001000088AA
__text:00000001000088AA ; ---------------------------------------------------------------------------
__text:00000001000088AB                 align 10h
__text:00000001000088B0
__text:00000001000088B0 ; =============== S U B R O U T I N E =======================================
__text:00000001000088B0
__text:00000001000088B0 ; Attributes: bp-based frame
__text:00000001000088B0
__text:00000001000088B0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::~__tree()
__text:00000001000088B0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev proc near
__text:00000001000088B0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev_ptr↓o
__text:00000001000088B0
__text:00000001000088B0 var_8           = qword ptr -8
__text:00000001000088B0
__text:00000001000088B0                 push    rbp
__text:00000001000088B1                 mov     rbp, rsp
__text:00000001000088B4                 sub     rsp, 10h
__text:00000001000088B8                 mov     [rbp+var_8], rdi
__text:00000001000088BC                 mov     rdi, [rbp+var_8]
__text:00000001000088C0                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::~__tree()
__text:00000001000088C5                 add     rsp, 10h
__text:00000001000088C9                 pop     rbp
__text:00000001000088CA                 retn
__text:00000001000088CA __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev endp
__text:00000001000088CA
__text:00000001000088CA ; ---------------------------------------------------------------------------
__text:00000001000088CB                 align 10h
__text:00000001000088D0
__text:00000001000088D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000088D0
__text:00000001000088D0 ; Attributes: bp-based frame
__text:00000001000088D0
__text:00000001000088D0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::~__tree()
__text:00000001000088D0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev proc near
__text:00000001000088D0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev_ptr↓o
__text:00000001000088D0
__text:00000001000088D0 var_38          = qword ptr -38h
__text:00000001000088D0 var_30          = qword ptr -30h
__text:00000001000088D0 var_28          = qword ptr -28h
__text:00000001000088D0 var_20          = qword ptr -20h
__text:00000001000088D0 var_18          = qword ptr -18h
__text:00000001000088D0 var_10          = qword ptr -10h
__text:00000001000088D0 var_8           = qword ptr -8
__text:00000001000088D0
__text:00000001000088D0                 push    rbp
__text:00000001000088D1                 mov     rbp, rsp
__text:00000001000088D4                 sub     rsp, 40h
__text:00000001000088D8                 mov     [rbp+var_38], rdi
__text:00000001000088DC                 mov     rdi, [rbp+var_38]
__text:00000001000088E0                 mov     [rbp+var_30], rdi
__text:00000001000088E4                 mov     rax, [rbp+var_30]
__text:00000001000088E8                 mov     [rbp+var_28], rax
__text:00000001000088EC                 mov     rax, [rbp+var_28]
__text:00000001000088F0                 add     rax, 8
__text:00000001000088F6                 mov     [rbp+var_20], rax
__text:00000001000088FA                 mov     rax, [rbp+var_20]
__text:00000001000088FE                 mov     [rbp+var_18], rax
__text:0000000100008902                 mov     rax, [rbp+var_18]
__text:0000000100008906                 mov     [rbp+var_10], rax
__text:000000010000890A                 mov     rax, [rbp+var_10]
__text:000000010000890E                 mov     [rbp+var_8], rax
__text:0000000100008912                 mov     rax, [rbp+var_8]
__text:0000000100008916                 mov     rax, [rax]
__text:0000000100008919                 mov     rsi, rax
__text:000000010000891C                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)
__text:0000000100008921                 add     rsp, 40h
__text:0000000100008925                 pop     rbp
__text:0000000100008926                 retn
__text:0000000100008926 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev endp
__text:0000000100008926
__text:0000000100008926 ; ---------------------------------------------------------------------------
__text:0000000100008927                 align 10h
__text:0000000100008930
__text:0000000100008930 ; =============== S U B R O U T I N E =======================================
__text:0000000100008930
__text:0000000100008930 ; Attributes: bp-based frame
__text:0000000100008930
__text:0000000100008930 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::destroy(std::__1::__tree_node<std::__1::pair<int, int>, void *> *)
__text:0000000100008930 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE proc near
__text:0000000100008930                                         ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+C9↓p
__text:0000000100008930                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+E3↓p
__text:0000000100008930                                         ; DATA XREF: ...
__text:0000000100008930
__text:0000000100008930 var_F8          = qword ptr -0F8h
__text:0000000100008930 var_F0          = qword ptr -0F0h
__text:0000000100008930 var_E8          = qword ptr -0E8h
__text:0000000100008930 var_E0          = qword ptr -0E0h
__text:0000000100008930 var_D8          = qword ptr -0D8h
__text:0000000100008930 var_C0          = qword ptr -0C0h
__text:0000000100008930 var_B8          = qword ptr -0B8h
__text:0000000100008930 var_B0          = qword ptr -0B0h
__text:0000000100008930 var_A8          = qword ptr -0A8h
__text:0000000100008930 var_A0          = qword ptr -0A0h
__text:0000000100008930 var_98          = qword ptr -98h
__text:0000000100008930 var_90          = qword ptr -90h
__text:0000000100008930 var_88          = qword ptr -88h
__text:0000000100008930 var_80          = qword ptr -80h
__text:0000000100008930 var_78          = qword ptr -78h
__text:0000000100008930 var_70          = qword ptr -70h
__text:0000000100008930 var_68          = qword ptr -68h
__text:0000000100008930 var_60          = qword ptr -60h
__text:0000000100008930 var_58          = qword ptr -58h
__text:0000000100008930 var_40          = qword ptr -40h
__text:0000000100008930 var_38          = qword ptr -38h
__text:0000000100008930 var_30          = qword ptr -30h
__text:0000000100008930 var_28          = qword ptr -28h
__text:0000000100008930 var_20          = qword ptr -20h
__text:0000000100008930 var_18          = qword ptr -18h
__text:0000000100008930 var_10          = qword ptr -10h
__text:0000000100008930 var_8           = qword ptr -8
__text:0000000100008930
__text:0000000100008930                 push    rbp
__text:0000000100008931                 mov     rbp, rsp
__text:0000000100008934                 sub     rsp, 100h
__text:000000010000893B                 lea     rax, [rbp+var_B0]
__text:0000000100008942                 mov     [rbp+var_B8], rdi
__text:0000000100008949                 mov     [rbp+var_C0], rsi
__text:0000000100008950                 mov     rsi, [rbp+var_B8]
__text:0000000100008957                 mov     rdi, [rbp+var_C0]
__text:000000010000895E                 mov     [rbp+var_A0], rax
__text:0000000100008965                 mov     [rbp+var_A8], 0FFFFFFFFFFFFFFFFh
__text:0000000100008970                 mov     rax, [rbp+var_A0]
__text:0000000100008977                 mov     rcx, [rbp+var_A8]
__text:000000010000897E                 mov     [rbp+var_90], rax
__text:0000000100008985                 mov     [rbp+var_98], rcx
__text:000000010000898C                 mov     rax, [rbp+var_90]
__text:0000000100008993                 mov     qword ptr [rax], 0
__text:000000010000899A                 mov     rax, [rbp+var_B0]
__text:00000001000089A1                 mov     [rbp+var_E8], rdi
__text:00000001000089A8                 mov     [rbp+var_F0], rsi
__text:00000001000089AF                 mov     [rbp+var_F8], rax
__text:00000001000089B6                 lea     rax, [rbp+var_D8]
__text:00000001000089BD                 mov     rcx, [rbp+var_F8]
__text:00000001000089C4                 mov     [rbp+var_D8], rcx
__text:00000001000089CB                 mov     [rbp+var_88], rax
__text:00000001000089D2                 mov     rax, [rbp+var_E8]
__text:00000001000089D9                 cmp     rax, 0
__text:00000001000089DF                 jz      loc_100008ABC
__text:00000001000089E5                 mov     rax, [rbp+var_C0]
__text:00000001000089EC                 mov     rax, [rax]
__text:00000001000089EF                 mov     rdi, [rbp+var_F0]
__text:00000001000089F6                 mov     rsi, rax
__text:00000001000089F9                 call    __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)
__text:00000001000089FE                 mov     rax, [rbp+var_C0]
__text:0000000100008A05                 mov     rax, [rax+8]
__text:0000000100008A09                 mov     rdi, [rbp+var_F0]
__text:0000000100008A10                 mov     rsi, rax
__text:0000000100008A13                 call    __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)
__text:0000000100008A18                 mov     rax, [rbp+var_F0]
__text:0000000100008A1F                 mov     [rbp+var_18], rax
__text:0000000100008A23                 mov     rsi, [rbp+var_18]
__text:0000000100008A27                 add     rsi, 8
__text:0000000100008A2E                 mov     [rbp+var_10], rsi
__text:0000000100008A32                 mov     rsi, [rbp+var_10]
__text:0000000100008A36                 mov     [rbp+var_8], rsi
__text:0000000100008A3A                 mov     rsi, [rbp+var_8]
__text:0000000100008A3E                 mov     [rbp+var_E0], rsi
__text:0000000100008A45                 mov     rsi, [rbp+var_E0]
__text:0000000100008A4C                 mov     rdi, [rbp+var_C0]
__text:0000000100008A53                 add     rdi, 1Ch
__text:0000000100008A5A                 mov     [rbp+var_20], rdi
__text:0000000100008A5E                 mov     rdi, [rbp+var_20]
__text:0000000100008A62                 mov     [rbp+var_38], rsi
__text:0000000100008A66                 mov     [rbp+var_40], rdi
__text:0000000100008A6A                 mov     rsi, [rbp+var_38]
__text:0000000100008A6E                 mov     rdi, [rbp+var_40]
__text:0000000100008A72                 mov     [rbp+var_28], rsi
__text:0000000100008A76                 mov     [rbp+var_30], rdi
__text:0000000100008A7A                 mov     rax, [rbp+var_E0]
__text:0000000100008A81                 mov     rcx, [rbp+var_C0]
__text:0000000100008A88                 mov     [rbp+var_70], rax
__text:0000000100008A8C                 mov     [rbp+var_78], rcx
__text:0000000100008A90                 mov     [rbp+var_80], 1
__text:0000000100008A98                 mov     rax, [rbp+var_70]
__text:0000000100008A9C                 mov     rcx, [rbp+var_78]
__text:0000000100008AA0                 mov     rdx, [rbp+var_80]
__text:0000000100008AA4                 mov     [rbp+var_58], rax
__text:0000000100008AA8                 mov     [rbp+var_60], rcx
__text:0000000100008AAC                 mov     [rbp+var_68], rdx
__text:0000000100008AB0                 mov     rax, [rbp+var_60]
__text:0000000100008AB4                 mov     rdi, rax        ; void *
__text:0000000100008AB7                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100008ABC
__text:0000000100008ABC loc_100008ABC:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+AF↑j
__text:0000000100008ABC                 add     rsp, 100h
__text:0000000100008AC3                 pop     rbp
__text:0000000100008AC4                 retn
__text:0000000100008AC4 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE endp
__text:0000000100008AC4
__text:0000000100008AC4 __text          ends
__text:0000000100008AC4