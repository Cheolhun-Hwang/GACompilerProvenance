__text:00000001000009A0 ; =============== S U B R O U T I N E =======================================
__text:00000001000009A0
__text:00000001000009A0 ; Attributes: bp-based frame
__text:00000001000009A0
__text:00000001000009A0 ; int __cdecl main(int argc, const char **argv, const char **envp)
__text:00000001000009A0                 public _main
__text:00000001000009A0 _main           proc near
__text:00000001000009A0
__text:00000001000009A0 var_238         = qword ptr -238h
__text:00000001000009A0 var_22C         = dword ptr -22Ch
__text:00000001000009A0 var_228         = qword ptr -228h
__text:00000001000009A0 var_220         = qword ptr -220h
__text:00000001000009A0 var_218         = qword ptr -218h
__text:00000001000009A0 var_210         = qword ptr -210h
__text:00000001000009A0 var_208         = dword ptr -208h
__text:00000001000009A0 var_204         = dword ptr -204h
__text:00000001000009A0 var_200         = qword ptr -200h
__text:00000001000009A0 var_1F4         = dword ptr -1F4h
__text:00000001000009A0 var_1F0         = dword ptr -1F0h
__text:00000001000009A0 var_1EC         = dword ptr -1ECh
__text:00000001000009A0 var_1E8         = dword ptr -1E8h
__text:00000001000009A0 var_1E4         = dword ptr -1E4h
__text:00000001000009A0 var_1E0         = dword ptr -1E0h
__text:00000001000009A0 var_1DC         = dword ptr -1DCh
__text:00000001000009A0 var_1D8         = dword ptr -1D8h
__text:00000001000009A0 var_1D4         = dword ptr -1D4h
__text:00000001000009A0 var_1D0         = dword ptr -1D0h
__text:00000001000009A0 var_1CC         = dword ptr -1CCh
__text:00000001000009A0 var_1C8         = dword ptr -1C8h
__text:00000001000009A0 var_1C4         = dword ptr -1C4h
__text:00000001000009A0 var_1C0         = dword ptr -1C0h
__text:00000001000009A0 var_1BC         = dword ptr -1BCh
__text:00000001000009A0 var_1B8         = dword ptr -1B8h
__text:00000001000009A0 var_1B4         = dword ptr -1B4h
__text:00000001000009A0 var_1A8         = qword ptr -1A8h
__text:00000001000009A0 var_1A0         = qword ptr -1A0h
__text:00000001000009A0 var_198         = byte ptr -198h
__text:00000001000009A0 var_190         = qword ptr -190h
__text:00000001000009A0 var_188         = qword ptr -188h
__text:00000001000009A0 var_178         = qword ptr -178h
__text:00000001000009A0 var_170         = qword ptr -170h
__text:00000001000009A0 var_160         = qword ptr -160h
__text:00000001000009A0 var_158         = qword ptr -158h
__text:00000001000009A0 var_150         = qword ptr -150h
__text:00000001000009A0 var_148         = qword ptr -148h
__text:00000001000009A0 var_140         = qword ptr -140h
__text:00000001000009A0 var_138         = qword ptr -138h
__text:00000001000009A0 var_130         = qword ptr -130h
__text:00000001000009A0 var_128         = qword ptr -128h
__text:00000001000009A0 var_11C         = dword ptr -11Ch
__text:00000001000009A0 var_118         = qword ptr -118h
__text:00000001000009A0 var_110         = qword ptr -110h
__text:00000001000009A0 var_108         = qword ptr -108h
__text:00000001000009A0 var_100         = qword ptr -100h
__text:00000001000009A0 var_F8          = qword ptr -0F8h
__text:00000001000009A0 var_F0          = qword ptr -0F0h
__text:00000001000009A0 var_E8          = qword ptr -0E8h
__text:00000001000009A0 var_DC          = dword ptr -0DCh
__text:00000001000009A0 var_D8          = qword ptr -0D8h
__text:00000001000009A0 var_D0          = qword ptr -0D0h
__text:00000001000009A0 var_C8          = qword ptr -0C8h
__text:00000001000009A0 var_C0          = qword ptr -0C0h
__text:00000001000009A0 var_B8          = qword ptr -0B8h
__text:00000001000009A0 var_B0          = qword ptr -0B0h
__text:00000001000009A0 var_A8          = qword ptr -0A8h
__text:00000001000009A0 var_98          = qword ptr -98h
__text:00000001000009A0 var_90          = qword ptr -90h
__text:00000001000009A0 var_88          = byte ptr -88h
__text:00000001000009A0 var_80          = qword ptr -80h
__text:00000001000009A0 var_78          = qword ptr -78h
__text:00000001000009A0 var_70          = qword ptr -70h
__text:00000001000009A0 var_68          = qword ptr -68h
__text:00000001000009A0 var_60          = qword ptr -60h
__text:00000001000009A0 var_50          = qword ptr -50h
__text:00000001000009A0 var_48          = qword ptr -48h
__text:00000001000009A0 var_40          = byte ptr -40h
__text:00000001000009A0 var_38          = qword ptr -38h
__text:00000001000009A0 var_30          = qword ptr -30h
__text:00000001000009A0 var_28          = qword ptr -28h
__text:00000001000009A0 var_20          = qword ptr -20h
__text:00000001000009A0 var_18          = qword ptr -18h
__text:00000001000009A0 var_10          = qword ptr -10h
__text:00000001000009A0 var_8           = qword ptr -8
__text:00000001000009A0
__text:00000001000009A0                 push    rbp
__text:00000001000009A1                 mov     rbp, rsp
__text:00000001000009A4                 sub     rsp, 240h
__text:00000001000009AB                 mov     rdi, cs:__ZNSt3__13cinE_ptr
__text:00000001000009B2                 lea     rsi, [rbp+var_1B8]
__text:00000001000009B9                 mov     [rbp+var_1B4], 0
__text:00000001000009C3                 call    __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi ; std::__1::basic_istream<char,std::__1::char_traits<char>>::operator>>(int &)
__text:00000001000009C8                 mov     [rbp+var_1BC], 1
__text:00000001000009D2                 mov     [rbp+var_200], rax
__text:00000001000009D9
__text:00000001000009D9 loc_1000009D9:                          ; CODE XREF: _main+7B4↓j
__text:00000001000009D9                 mov     eax, [rbp+var_1BC]
__text:00000001000009DF                 cmp     eax, [rbp+var_1B8]
__text:00000001000009E5                 jg      loc_100001159
__text:00000001000009EB                 lea     rdi, aDDD       ; "%d%d%d"
__text:00000001000009F2                 lea     rsi, _n
__text:00000001000009F9                 lea     rdx, _w
__text:0000000100000A00                 lea     rcx, _h
__text:0000000100000A07                 mov     al, 0
__text:0000000100000A09                 call    _scanf
__text:0000000100000A0E                 mov     [rbp+var_1C0], 0
__text:0000000100000A18                 mov     [rbp+var_204], eax
__text:0000000100000A1E
__text:0000000100000A1E loc_100000A1E:                          ; CODE XREF: _main+E5↓j
__text:0000000100000A1E                 mov     eax, [rbp+var_1C0]
__text:0000000100000A24                 cmp     eax, cs:_n
__text:0000000100000A2A                 jge     loc_100000A8A
__text:0000000100000A30                 lea     rdi, aD         ; "%d"
__text:0000000100000A37                 lea     rax, _v
__text:0000000100000A3E                 movsxd  rcx, [rbp+var_1C0]
__text:0000000100000A45                 shl     rcx, 3
__text:0000000100000A49                 add     rax, rcx
__text:0000000100000A4C                 mov     rsi, rax
__text:0000000100000A4F                 mov     al, 0
__text:0000000100000A51                 call    _scanf
__text:0000000100000A56                 lea     rcx, _v
__text:0000000100000A5D                 mov     edx, [rbp+var_1C0]
__text:0000000100000A63                 movsxd  rsi, [rbp+var_1C0]
__text:0000000100000A6A                 mov     [rcx+rsi*8+4], edx
__text:0000000100000A6E                 mov     [rbp+var_208], eax
__text:0000000100000A74                 mov     eax, [rbp+var_1C0]
__text:0000000100000A7A                 add     eax, 1
__text:0000000100000A7F                 mov     [rbp+var_1C0], eax
__text:0000000100000A85                 jmp     loc_100000A1E
__text:0000000100000A8A ; ---------------------------------------------------------------------------
__text:0000000100000A8A
__text:0000000100000A8A loc_100000A8A:                          ; CODE XREF: _main+8A↑j
__text:0000000100000A8A                 lea     rdx, [rbp+var_198]
__text:0000000100000A91                 lea     rax, _v
__text:0000000100000A98                 movsxd  rcx, cs:_n
__text:0000000100000A9F                 shl     rcx, 3
__text:0000000100000AA3                 mov     rsi, rax
__text:0000000100000AA6                 add     rsi, rcx
__text:0000000100000AA9                 mov     [rbp+var_1A0], rax
__text:0000000100000AB0                 mov     [rbp+var_1A8], rsi
__text:0000000100000AB7                 mov     rax, [rbp+var_1A0]
__text:0000000100000ABE                 mov     rcx, [rbp+var_1A8]
__text:0000000100000AC5                 mov     [rbp+var_188], rax
__text:0000000100000ACC                 mov     [rbp+var_190], rcx
__text:0000000100000AD3                 mov     rdi, [rbp+var_188]
__text:0000000100000ADA                 mov     rsi, [rbp+var_190]
__text:0000000100000AE1                 call    j___ZNSt3__16__sortIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T_ ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:0000000100000AE6                 lea     rax, _v
__text:0000000100000AED                 movsxd  rcx, cs:_n
__text:0000000100000AF4                 shl     rcx, 3
__text:0000000100000AF8                 mov     rdx, rax
__text:0000000100000AFB                 add     rdx, rcx
__text:0000000100000AFE                 mov     [rbp+var_170], rax
__text:0000000100000B05                 mov     [rbp+var_178], rdx
__text:0000000100000B0C                 mov     rax, [rbp+var_170]
__text:0000000100000B13                 mov     rcx, [rbp+var_178]
__text:0000000100000B1A                 mov     [rbp+var_158], rax
__text:0000000100000B21                 mov     [rbp+var_160], rcx
__text:0000000100000B28                 mov     rax, [rbp+var_158]
__text:0000000100000B2F                 cmp     rax, [rbp+var_160]
__text:0000000100000B36                 jz      loc_100000CF9
__text:0000000100000B3C                 jmp     $+5
__text:0000000100000B41 ; ---------------------------------------------------------------------------
__text:0000000100000B41
__text:0000000100000B41 loc_100000B41:                          ; CODE XREF: _main+19C↑j
__text:0000000100000B41                                         ; _main+34F↓j
__text:0000000100000B41                 mov     rax, [rbp+var_158]
__text:0000000100000B48                 mov     rcx, [rbp+var_160]
__text:0000000100000B4F                 add     rcx, 0FFFFFFFFFFFFFFF8h
__text:0000000100000B56                 mov     [rbp+var_160], rcx
__text:0000000100000B5D                 cmp     rax, rcx
__text:0000000100000B60                 jnb     loc_100000CF4
__text:0000000100000B66                 lea     rax, [rbp+var_DC]
__text:0000000100000B6D                 lea     rcx, [rbp+var_11C]
__text:0000000100000B74                 mov     rdx, [rbp+var_158]
__text:0000000100000B7B                 mov     rsi, [rbp+var_160]
__text:0000000100000B82                 mov     [rbp+var_148], rdx
__text:0000000100000B89                 mov     [rbp+var_150], rsi
__text:0000000100000B90                 mov     rdx, [rbp+var_148]
__text:0000000100000B97                 mov     rsi, [rbp+var_150]
__text:0000000100000B9E                 mov     [rbp+var_138], rdx
__text:0000000100000BA5                 mov     [rbp+var_140], rsi
__text:0000000100000BAC                 mov     rdx, [rbp+var_138]
__text:0000000100000BB3                 mov     rsi, [rbp+var_140]
__text:0000000100000BBA                 mov     [rbp+var_128], rdx
__text:0000000100000BC1                 mov     [rbp+var_130], rsi
__text:0000000100000BC8                 mov     rsi, [rbp+var_128]
__text:0000000100000BCF                 mov     rdi, [rbp+var_130]
__text:0000000100000BD6                 mov     [rbp+var_110], rsi
__text:0000000100000BDD                 mov     [rbp+var_118], rdi
__text:0000000100000BE4                 mov     rsi, [rbp+var_110]
__text:0000000100000BEB                 mov     [rbp+var_108], rsi
__text:0000000100000BF2                 mov     rsi, [rbp+var_108]
__text:0000000100000BF9                 mov     r8d, [rsi]
__text:0000000100000BFC                 mov     [rbp+var_11C], r8d
__text:0000000100000C03                 mov     rsi, [rbp+var_118]
__text:0000000100000C0A                 mov     [rbp+var_F8], rsi
__text:0000000100000C11                 mov     rsi, [rbp+var_F8]
__text:0000000100000C18                 mov     r8d, [rsi]
__text:0000000100000C1B                 mov     rsi, [rbp+var_110]
__text:0000000100000C22                 mov     [rsi], r8d
__text:0000000100000C25                 mov     [rbp+var_100], rcx
__text:0000000100000C2C                 mov     rcx, [rbp+var_100]
__text:0000000100000C33                 mov     r8d, [rcx]
__text:0000000100000C36                 mov     rcx, [rbp+var_118]
__text:0000000100000C3D                 mov     [rcx], r8d
__text:0000000100000C40                 add     rdx, 4
__text:0000000100000C47                 mov     rcx, [rbp+var_140]
__text:0000000100000C4E                 add     rcx, 4
__text:0000000100000C55                 mov     [rbp+var_E8], rdx
__text:0000000100000C5C                 mov     [rbp+var_F0], rcx
__text:0000000100000C63                 mov     rcx, [rbp+var_E8]
__text:0000000100000C6A                 mov     rdx, [rbp+var_F0]
__text:0000000100000C71                 mov     [rbp+var_D0], rcx
__text:0000000100000C78                 mov     [rbp+var_D8], rdx
__text:0000000100000C7F                 mov     rcx, [rbp+var_D0]
__text:0000000100000C86                 mov     [rbp+var_C8], rcx
__text:0000000100000C8D                 mov     rcx, [rbp+var_C8]
__text:0000000100000C94                 mov     r8d, [rcx]
__text:0000000100000C97                 mov     [rbp+var_DC], r8d
__text:0000000100000C9E                 mov     rcx, [rbp+var_D8]
__text:0000000100000CA5                 mov     [rbp+var_B8], rcx
__text:0000000100000CAC                 mov     rcx, [rbp+var_B8]
__text:0000000100000CB3                 mov     r8d, [rcx]
__text:0000000100000CB6                 mov     rcx, [rbp+var_D0]
__text:0000000100000CBD                 mov     [rcx], r8d
__text:0000000100000CC0                 mov     [rbp+var_C0], rax
__text:0000000100000CC7                 mov     rax, [rbp+var_C0]
__text:0000000100000CCE                 mov     r8d, [rax]
__text:0000000100000CD1                 mov     rax, [rbp+var_D8]
__text:0000000100000CD8                 mov     [rax], r8d
__text:0000000100000CDB                 mov     rax, [rbp+var_158]
__text:0000000100000CE2                 add     rax, 8
__text:0000000100000CE8                 mov     [rbp+var_158], rax
__text:0000000100000CEF                 jmp     loc_100000B41
__text:0000000100000CF4 ; ---------------------------------------------------------------------------
__text:0000000100000CF4
__text:0000000100000CF4 loc_100000CF4:                          ; CODE XREF: _main+1C0↑j
__text:0000000100000CF4                 jmp     $+5
__text:0000000100000CF9 ; ---------------------------------------------------------------------------
__text:0000000100000CF9
__text:0000000100000CF9 loc_100000CF9:                          ; CODE XREF: _main+196↑j
__text:0000000100000CF9                                         ; _main:loc_100000CF4↑j
__text:0000000100000CF9                 mov     [rbp+var_1C4], 1
__text:0000000100000D03                 mov     cs:_x, 88CA6C00h
__text:0000000100000D0D                 mov     cs:_y8687969, 88CA6C00h
__text:0000000100000D17                 mov     cs:_y2, 77359400h
__text:0000000100000D21                 mov     [rbp+var_1C8], 0
__text:0000000100000D2B
__text:0000000100000D2B loc_100000D2B:                          ; CODE XREF: _main+6CF↓j
__text:0000000100000D2B                 mov     eax, [rbp+var_1C8]
__text:0000000100000D31                 cmp     eax, cs:_n
__text:0000000100000D37                 jge     loc_100001074
__text:0000000100000D3D                 lea     rax, _v
__text:0000000100000D44                 movsxd  rcx, [rbp+var_1C8]
__text:0000000100000D4B                 mov     edx, [rax+rcx*8]
__text:0000000100000D4E                 mov     [rbp+var_1CC], edx
__text:0000000100000D54                 movsxd  rcx, [rbp+var_1C8]
__text:0000000100000D5B                 mov     edx, [rax+rcx*8+4]
__text:0000000100000D5F                 mov     [rbp+var_1D0], edx
__text:0000000100000D65                 mov     [rbp+var_1D4], 0
__text:0000000100000D6F                 mov     [rbp+var_1D8], 0
__text:0000000100000D79
__text:0000000100000D79 loc_100000D79:                          ; CODE XREF: _main+674↓j
__text:0000000100000D79                 mov     eax, [rbp+var_1D8]
__text:0000000100000D7F                 cmp     eax, [rbp+var_1C4]
__text:0000000100000D85                 jge     loc_100001019
__text:0000000100000D8B                 lea     rax, [rbp+var_88]
__text:0000000100000D92                 lea     rcx, [rbp+var_1E4]
__text:0000000100000D99                 lea     rdx, [rbp+var_1E0]
__text:0000000100000DA0                 lea     rsi, _x
__text:0000000100000DA7                 mov     [rbp+var_1E0], 0
__text:0000000100000DB1                 movsxd  rdi, [rbp+var_1D8]
__text:0000000100000DB8                 mov     r8d, [rsi+rdi*4]
__text:0000000100000DBC                 add     r8d, [rbp+var_1CC]
__text:0000000100000DC3                 mov     [rbp+var_1E4], r8d
__text:0000000100000DCA                 mov     [rbp+var_90], rdx
__text:0000000100000DD1                 mov     [rbp+var_98], rcx
__text:0000000100000DD8                 mov     rcx, [rbp+var_90]
__text:0000000100000DDF                 mov     rdx, [rbp+var_98]
__text:0000000100000DE6                 mov     [rbp+var_78], rcx
__text:0000000100000DEA                 mov     [rbp+var_80], rdx
__text:0000000100000DEE                 mov     rcx, [rbp+var_78]
__text:0000000100000DF2                 mov     rdx, [rbp+var_80]
__text:0000000100000DF6                 mov     [rbp+var_60], rax
__text:0000000100000DFA                 mov     [rbp+var_68], rcx
__text:0000000100000DFE                 mov     [rbp+var_70], rdx
__text:0000000100000E02                 mov     rax, [rbp+var_68]
__text:0000000100000E06                 mov     r8d, [rax]
__text:0000000100000E09                 mov     rax, [rbp+var_70]
__text:0000000100000E0D                 cmp     r8d, [rax]
__text:0000000100000E10                 jge     loc_100000E26
__text:0000000100000E16                 mov     rax, [rbp+var_80]
__text:0000000100000E1A                 mov     [rbp+var_210], rax
__text:0000000100000E21                 jmp     loc_100000E31
__text:0000000100000E26 ; ---------------------------------------------------------------------------
__text:0000000100000E26
__text:0000000100000E26 loc_100000E26:                          ; CODE XREF: _main+470↑j
__text:0000000100000E26                 mov     rax, [rbp+var_78]
__text:0000000100000E2A                 mov     [rbp+var_210], rax
__text:0000000100000E31
__text:0000000100000E31 loc_100000E31:                          ; CODE XREF: _main+481↑j
__text:0000000100000E31                 mov     rax, [rbp+var_210]
__text:0000000100000E38                 lea     rcx, [rbp+var_40]
__text:0000000100000E3C                 lea     rdx, [rbp+var_1F0]
__text:0000000100000E43                 lea     rsi, [rbp+var_1EC]
__text:0000000100000E4A                 lea     rdi, _y8687969
__text:0000000100000E51                 mov     r8d, [rax]
__text:0000000100000E54                 mov     [rbp+var_1DC], r8d
__text:0000000100000E5B                 mov     [rbp+var_1EC], 0
__text:0000000100000E65                 movsxd  rax, [rbp+var_1D8]
__text:0000000100000E6C                 mov     r8d, [rdi+rax*4]
__text:0000000100000E70                 add     r8d, [rbp+var_1CC]
__text:0000000100000E77                 mov     [rbp+var_1F0], r8d
__text:0000000100000E7E                 mov     [rbp+var_48], rsi
__text:0000000100000E82                 mov     [rbp+var_50], rdx
__text:0000000100000E86                 mov     rax, [rbp+var_48]
__text:0000000100000E8A                 mov     rdx, [rbp+var_50]
__text:0000000100000E8E                 mov     [rbp+var_30], rax
__text:0000000100000E92                 mov     [rbp+var_38], rdx
__text:0000000100000E96                 mov     rax, [rbp+var_30]
__text:0000000100000E9A                 mov     rdx, [rbp+var_38]
__text:0000000100000E9E                 mov     [rbp+var_18], rcx
__text:0000000100000EA2                 mov     [rbp+var_20], rax
__text:0000000100000EA6                 mov     [rbp+var_28], rdx
__text:0000000100000EAA                 mov     rax, [rbp+var_20]
__text:0000000100000EAE                 mov     r8d, [rax]
__text:0000000100000EB1                 mov     rax, [rbp+var_28]
__text:0000000100000EB5                 cmp     r8d, [rax]
__text:0000000100000EB8                 jge     loc_100000ECE
__text:0000000100000EBE                 mov     rax, [rbp+var_38]
__text:0000000100000EC2                 mov     [rbp+var_218], rax
__text:0000000100000EC9                 jmp     loc_100000ED9
__text:0000000100000ECE ; ---------------------------------------------------------------------------
__text:0000000100000ECE
__text:0000000100000ECE loc_100000ECE:                          ; CODE XREF: _main+518↑j
__text:0000000100000ECE                 mov     rax, [rbp+var_30]
__text:0000000100000ED2                 mov     [rbp+var_218], rax
__text:0000000100000ED9
__text:0000000100000ED9 loc_100000ED9:                          ; CODE XREF: _main+529↑j
__text:0000000100000ED9                 mov     rax, [rbp+var_218]
__text:0000000100000EE0                 mov     ecx, [rax]
__text:0000000100000EE2                 mov     [rbp+var_1E8], ecx
__text:0000000100000EE8                 mov     ecx, [rbp+var_1DC]
__text:0000000100000EEE                 cmp     ecx, cs:_w
__text:0000000100000EF4                 jg      loc_100000FFE
__text:0000000100000EFA                 mov     eax, [rbp+var_1E8]
__text:0000000100000F00                 cmp     eax, cs:_h
__text:0000000100000F06                 jg      loc_100000FFE
__text:0000000100000F0C                 lea     rax, _y2
__text:0000000100000F13                 mov     ecx, [rbp+var_1E8]
__text:0000000100000F19                 add     ecx, [rbp+var_1CC]
__text:0000000100000F1F                 movsxd  rdx, [rbp+var_1D8]
__text:0000000100000F26                 cmp     ecx, [rax+rdx*4]
__text:0000000100000F29                 jg      loc_100000FFE
__text:0000000100000F2F                 lea     rax, _y2
__text:0000000100000F36                 lea     rcx, _y8687969
__text:0000000100000F3D                 lea     rdx, _x
__text:0000000100000F44                 lea     rsi, _ry
__text:0000000100000F4B                 lea     rdi, _rx
__text:0000000100000F52                 mov     r8d, [rbp+var_1DC]
__text:0000000100000F59                 movsxd  r9, [rbp+var_1D0]
__text:0000000100000F60                 mov     [rdi+r9*4], r8d
__text:0000000100000F64                 mov     r8d, [rbp+var_1E8]
__text:0000000100000F6B                 movsxd  rdi, [rbp+var_1D0]
__text:0000000100000F72                 mov     [rsi+rdi*4], r8d
__text:0000000100000F76                 mov     r8d, [rbp+var_1E8]
__text:0000000100000F7D                 add     r8d, [rbp+var_1CC]
__text:0000000100000F84                 movsxd  rsi, [rbp+var_1D8]
__text:0000000100000F8B                 mov     [rcx+rsi*4], r8d
__text:0000000100000F8F                 mov     r8d, [rbp+var_1DC]
__text:0000000100000F96                 add     r8d, [rbp+var_1CC]
__text:0000000100000F9D                 movsxd  rsi, [rbp+var_1C4]
__text:0000000100000FA4                 mov     [rdx+rsi*4], r8d
__text:0000000100000FA8                 mov     r8d, [rbp+var_1E8]
__text:0000000100000FAF                 sub     r8d, [rbp+var_1CC]
__text:0000000100000FB6                 movsxd  rdx, [rbp+var_1C4]
__text:0000000100000FBD                 mov     [rcx+rdx*4], r8d
__text:0000000100000FC1                 mov     r8d, [rbp+var_1E8]
__text:0000000100000FC8                 add     r8d, [rbp+var_1CC]
__text:0000000100000FCF                 movsxd  rcx, [rbp+var_1C4]
__text:0000000100000FD6                 mov     [rax+rcx*4], r8d
__text:0000000100000FDA                 mov     r8d, [rbp+var_1C4]
__text:0000000100000FE1                 add     r8d, 1
__text:0000000100000FE8                 mov     [rbp+var_1C4], r8d
__text:0000000100000FEF                 mov     [rbp+var_1D4], 1
__text:0000000100000FF9                 jmp     loc_100001019
__text:0000000100000FFE ; ---------------------------------------------------------------------------
__text:0000000100000FFE
__text:0000000100000FFE loc_100000FFE:                          ; CODE XREF: _main+554↑j
__text:0000000100000FFE                                         ; _main+566↑j ...
__text:0000000100000FFE                 jmp     $+5
__text:0000000100001003 ; ---------------------------------------------------------------------------
__text:0000000100001003
__text:0000000100001003 loc_100001003:                          ; CODE XREF: _main:loc_100000FFE↑j
__text:0000000100001003                 mov     eax, [rbp+var_1D8]
__text:0000000100001009                 add     eax, 1
__text:000000010000100E                 mov     [rbp+var_1D8], eax
__text:0000000100001014                 jmp     loc_100000D79
__text:0000000100001019 ; ---------------------------------------------------------------------------
__text:0000000100001019
__text:0000000100001019 loc_100001019:                          ; CODE XREF: _main+3E5↑j
__text:0000000100001019                                         ; _main+659↑j
__text:0000000100001019                 cmp     [rbp+var_1D4], 0
__text:0000000100001023                 jnz     loc_100001059
__text:0000000100001029                 mov     rdi, cs:__ZNSt3__14cerrE_ptr
__text:0000000100001030                 lea     rsi, aBad       ; "BAD"
__text:0000000100001037                 call    j___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)
__text:000000010000103C                 lea     rsi, __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ ; std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)
__text:0000000100001043                 mov     [rbp+var_8], rax
__text:0000000100001047                 mov     [rbp+var_10], rsi
__text:000000010000104B                 mov     rdi, [rbp+var_8]
__text:000000010000104F                 call    [rbp+var_10]
__text:0000000100001052                 mov     [rbp+var_220], rax
__text:0000000100001059
__text:0000000100001059 loc_100001059:                          ; CODE XREF: _main+683↑j
__text:0000000100001059                 jmp     $+5
__text:000000010000105E ; ---------------------------------------------------------------------------
__text:000000010000105E
__text:000000010000105E loc_10000105E:                          ; CODE XREF: _main:loc_100001059↑j
__text:000000010000105E                 mov     eax, [rbp+var_1C8]
__text:0000000100001064                 add     eax, 1
__text:0000000100001069                 mov     [rbp+var_1C8], eax
__text:000000010000106F                 jmp     loc_100000D2B
__text:0000000100001074 ; ---------------------------------------------------------------------------
__text:0000000100001074
__text:0000000100001074 loc_100001074:                          ; CODE XREF: _main+397↑j
__text:0000000100001074                 mov     rdi, cs:__ZNSt3__14coutE_ptr
__text:000000010000107B                 lea     rsi, aCase      ; "Case #"
__text:0000000100001082                 call    j___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)
__text:0000000100001087                 mov     esi, [rbp+var_1BC]
__text:000000010000108D                 mov     rdi, rax
__text:0000000100001090                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
__text:0000000100001095                 lea     rsi, asc_100005F35 ; ": "
__text:000000010000109C                 mov     rdi, rax
__text:000000010000109F                 call    j___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)
__text:00000001000010A4                 mov     [rbp+var_1F4], 0
__text:00000001000010AE                 mov     [rbp+var_228], rax
__text:00000001000010B5
__text:00000001000010B5 loc_1000010B5:                          ; CODE XREF: _main+76E↓j
__text:00000001000010B5                 mov     eax, [rbp+var_1F4]
__text:00000001000010BB                 cmp     eax, cs:_n
__text:00000001000010C1                 jge     loc_100001113
__text:00000001000010C7                 lea     rdi, aDD        ; "%d %d "
__text:00000001000010CE                 lea     rax, _ry
__text:00000001000010D5                 lea     rcx, _rx
__text:00000001000010DC                 movsxd  rdx, [rbp+var_1F4]
__text:00000001000010E3                 mov     esi, [rcx+rdx*4]
__text:00000001000010E6                 movsxd  rcx, [rbp+var_1F4]
__text:00000001000010ED                 mov     edx, [rax+rcx*4]
__text:00000001000010F0                 mov     al, 0
__text:00000001000010F2                 call    _printf
__text:00000001000010F7                 mov     [rbp+var_22C], eax
__text:00000001000010FD                 mov     eax, [rbp+var_1F4]
__text:0000000100001103                 add     eax, 1
__text:0000000100001108                 mov     [rbp+var_1F4], eax
__text:000000010000110E                 jmp     loc_1000010B5
__text:0000000100001113 ; ---------------------------------------------------------------------------
__text:0000000100001113
__text:0000000100001113 loc_100001113:                          ; CODE XREF: _main+721↑j
__text:0000000100001113                 lea     rax, __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ ; std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)
__text:000000010000111A                 mov     rcx, cs:__ZNSt3__14coutE_ptr
__text:0000000100001121                 mov     [rbp+var_A8], rcx
__text:0000000100001128                 mov     [rbp+var_B0], rax
__text:000000010000112F                 mov     rdi, [rbp+var_A8]
__text:0000000100001136                 call    [rbp+var_B0]
__text:000000010000113C                 mov     [rbp+var_238], rax
__text:0000000100001143                 mov     eax, [rbp+var_1BC]
__text:0000000100001149                 add     eax, 1
__text:000000010000114E                 mov     [rbp+var_1BC], eax
__text:0000000100001154                 jmp     loc_1000009D9
__text:0000000100001159 ; ---------------------------------------------------------------------------
__text:0000000100001159
__text:0000000100001159 loc_100001159:                          ; CODE XREF: _main+45↑j
__text:0000000100001159                 mov     eax, 0
__text:000000010000115E                 add     rsp, 240h
__text:0000000100001165                 pop     rbp
__text:0000000100001166                 retn
__text:0000000100001166 _main           endp
__text:0000000100001166
__text:0000000100001166 ; ---------------------------------------------------------------------------
__text:0000000100001167                 align 10h
__text:0000000100001170
__text:0000000100001170 ; =============== S U B R O U T I N E =======================================
__text:0000000100001170
__text:0000000100001170 ; Attributes: bp-based frame
__text:0000000100001170
__text:0000000100001170 ___cxx_global_var_init proc near        ; CODE XREF: `global constructor keyed to'_a+4↓p
__text:0000000100001170
__text:0000000100001170 var_18          = qword ptr -18h
__text:0000000100001170 var_10          = qword ptr -10h
__text:0000000100001170 var_8           = qword ptr -8
__text:0000000100001170
__text:0000000100001170                 push    rbp
__text:0000000100001171                 mov     rbp, rsp
__text:0000000100001174                 lea     rax, _v
__text:000000010000117B                 mov     [rbp+var_18], rax
__text:000000010000117F
__text:000000010000117F loc_10000117F:                          ; CODE XREF: ___cxx_global_var_init+4B↓j
__text:000000010000117F                 mov     rax, [rbp+var_18]
__text:0000000100001183                 lea     rcx, _v
__text:000000010000118A                 add     rcx, 1F40h
__text:0000000100001191                 mov     [rbp+var_10], rax
__text:0000000100001195                 mov     rdx, [rbp+var_10]
__text:0000000100001199                 mov     [rbp+var_8], rdx
__text:000000010000119D                 mov     rdx, [rbp+var_8]
__text:00000001000011A1                 mov     dword ptr [rdx], 0
__text:00000001000011A7                 mov     dword ptr [rdx+4], 0
__text:00000001000011AE                 add     rax, 8
__text:00000001000011B4                 cmp     rax, rcx
__text:00000001000011B7                 mov     [rbp+var_18], rax
__text:00000001000011BB                 jnz     loc_10000117F
__text:00000001000011C1                 pop     rbp
__text:00000001000011C2                 retn
__text:00000001000011C2 ___cxx_global_var_init endp
__text:00000001000011C2
__text:00000001000011C2 ; ---------------------------------------------------------------------------
__text:00000001000011C3                 align 10h
__text:00000001000011D0
__text:00000001000011D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000011D0
__text:00000001000011D0 ; Attributes: bp-based frame
__text:00000001000011D0
__text:00000001000011D0 ; `global constructor keyed to'_a
__text:00000001000011D0                 public __GLOBAL__I_a
__text:00000001000011D0 __GLOBAL__I_a   proc near               ; DATA XREF: __mod_init_func:0000000100006110↓o
__text:00000001000011D0                 push    rbp
__text:00000001000011D1                 mov     rbp, rsp
__text:00000001000011D4                 call    ___cxx_global_var_init
__text:00000001000011D9                 pop     rbp
__text:00000001000011DA                 retn
__text:00000001000011DA __GLOBAL__I_a   endp
__text:00000001000011DA
__text:00000001000011DA ; ---------------------------------------------------------------------------
__text:00000001000011DB                 align 20h
__text:00000001000011E0
__text:00000001000011E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000011E0
__text:00000001000011E0 ; Attributes: bp-based frame
__text:00000001000011E0
__text:00000001000011E0 ; std::__1::basic_ostream<char, std::__1::char_traits<char>> & std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, char const*)
__text:00000001000011E0 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc proc near
__text:00000001000011E0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc_ptr↓o
__text:00000001000011E0
__text:00000001000011E0 var_1A8         = qword ptr -1A8h
__text:00000001000011E0 var_1A0         = qword ptr -1A0h
__text:00000001000011E0 var_191         = byte ptr -191h
__text:00000001000011E0 var_190         = dword ptr -190h
__text:00000001000011E0 var_18C         = dword ptr -18Ch
__text:00000001000011E0 var_188         = qword ptr -188h
__text:00000001000011E0 var_179         = byte ptr -179h
__text:00000001000011E0 var_178         = qword ptr -178h
__text:00000001000011E0 var_16C         = dword ptr -16Ch
__text:00000001000011E0 var_168         = qword ptr -168h
__text:00000001000011E0 var_160         = qword ptr -160h
__text:00000001000011E0 var_158         = qword ptr -158h
__text:00000001000011E0 var_150         = qword ptr -150h
__text:00000001000011E0 var_148         = qword ptr -148h
__text:00000001000011E0 var_140         = qword ptr -140h
__text:00000001000011E0 var_134         = dword ptr -134h
__text:00000001000011E0 var_130         = qword ptr -130h
__text:00000001000011E0 var_128         = qword ptr -128h
__text:00000001000011E0 var_119         = byte ptr -119h
__text:00000001000011E0 var_118         = qword ptr -118h
__text:00000001000011E0 var_110         = qword ptr -110h
__text:00000001000011E0 var_108         = qword ptr -108h
__text:00000001000011E0 var_FC          = dword ptr -0FCh
__text:00000001000011E0 var_F8          = qword ptr -0F8h
__text:00000001000011E0 var_F0          = byte ptr -0F0h
__text:00000001000011E0 var_E0          = qword ptr -0E0h
__text:00000001000011E0 var_D8          = qword ptr -0D8h
__text:00000001000011E0 var_D0          = qword ptr -0D0h
__text:00000001000011E0 var_C8          = qword ptr -0C8h
__text:00000001000011E0 var_C0          = qword ptr -0C0h
__text:00000001000011E0 var_B8          = qword ptr -0B8h
__text:00000001000011E0 var_A0          = qword ptr -0A0h
__text:00000001000011E0 var_98          = qword ptr -98h
__text:00000001000011E0 var_90          = qword ptr -90h
__text:00000001000011E0 var_88          = qword ptr -88h
__text:00000001000011E0 var_7C          = dword ptr -7Ch
__text:00000001000011E0 var_78          = qword ptr -78h
__text:00000001000011E0 var_6C          = dword ptr -6Ch
__text:00000001000011E0 var_68          = qword ptr -68h
__text:00000001000011E0 var_60          = qword ptr -60h
__text:00000001000011E0 var_58          = qword ptr -58h
__text:00000001000011E0 var_50          = qword ptr -50h
__text:00000001000011E0 var_44          = dword ptr -44h
__text:00000001000011E0 var_40          = qword ptr -40h
__text:00000001000011E0 var_38          = byte ptr -38h
__text:00000001000011E0 var_29          = byte ptr -29h
__text:00000001000011E0 var_28          = qword ptr -28h
__text:00000001000011E0 var_20          = qword ptr -20h
__text:00000001000011E0 var_11          = byte ptr -11h
__text:00000001000011E0 var_10          = qword ptr -10h
__text:00000001000011E0 var_8           = dword ptr -8
__text:00000001000011E0 var_4           = dword ptr -4
__text:00000001000011E0
__text:00000001000011E0                 push    rbp
__text:00000001000011E1                 mov     rbp, rsp
__text:00000001000011E4                 sub     rsp, 1B0h
__text:00000001000011EB                 mov     [rbp+var_D8], rdi
__text:00000001000011F2                 mov     [rbp+var_E0], rsi
__text:00000001000011F9                 mov     rsi, [rbp+var_D8]
__text:0000000100001200                 lea     rdi, [rbp+var_F0]
__text:0000000100001207                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_ ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char,std::__1::char_traits<char>>&)
__text:000000010000120C                 jmp     $+5
__text:0000000100001211 ; ---------------------------------------------------------------------------
__text:0000000100001211
__text:0000000100001211 loc_100001211:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2C↑j
__text:0000000100001211                 lea     rax, [rbp+var_F0]
__text:0000000100001218                 mov     [rbp+var_D0], rax
__text:000000010000121F                 mov     rax, [rbp+var_D0]
__text:0000000100001226                 mov     cl, [rax]
__text:0000000100001228                 mov     [rbp+var_119], cl
__text:000000010000122E                 mov     al, [rbp+var_119]
__text:0000000100001234                 test    al, 1
__text:0000000100001236                 jnz     loc_100001241
__text:000000010000123C                 jmp     loc_1000015E6
__text:0000000100001241 ; ---------------------------------------------------------------------------
__text:0000000100001241
__text:0000000100001241 loc_100001241:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+56↑j
__text:0000000100001241                 mov     rax, [rbp+var_E0]
__text:0000000100001248                 mov     [rbp+var_C8], rax
__text:000000010000124F                 mov     rdi, rax        ; char *
__text:0000000100001252                 call    _strlen
__text:0000000100001257                 mov     [rbp+var_128], rax
__text:000000010000125E                 jmp     $+5
__text:0000000100001263 ; ---------------------------------------------------------------------------
__text:0000000100001263
__text:0000000100001263 loc_100001263:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+7E↑j
__text:0000000100001263                 jmp     $+5
__text:0000000100001268 ; ---------------------------------------------------------------------------
__text:0000000100001268
__text:0000000100001268 loc_100001268:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100001263↑j
__text:0000000100001268                 lea     rax, [rbp+var_110]
__text:000000010000126F                 mov     rcx, [rbp+var_128]
__text:0000000100001276                 mov     [rbp+var_108], rcx
__text:000000010000127D                 mov     rdx, [rbp+var_D8]
__text:0000000100001284                 mov     [rbp+var_B8], rax
__text:000000010000128B                 mov     [rbp+var_C0], rdx
__text:0000000100001292                 mov     rax, [rbp+var_B8]
__text:0000000100001299                 mov     rdx, [rbp+var_C0]
__text:00000001000012A0                 mov     [rbp+var_98], rax
__text:00000001000012A7                 mov     [rbp+var_A0], rdx
__text:00000001000012AE                 mov     rax, [rbp+var_98]
__text:00000001000012B5                 mov     rdx, [rbp+var_A0]
__text:00000001000012BC                 mov     rsi, [rdx]
__text:00000001000012BF                 mov     rsi, [rsi-18h]
__text:00000001000012C3                 add     rdx, rsi
__text:00000001000012C6                 mov     [rbp+var_90], rdx
__text:00000001000012CD                 mov     rdx, [rbp+var_90]
__text:00000001000012D4                 mov     [rbp+var_88], rdx
__text:00000001000012DB                 mov     rdx, [rbp+var_88]
__text:00000001000012E2                 mov     rdx, [rdx+28h]
__text:00000001000012E6                 mov     [rax], rdx
__text:00000001000012E9                 mov     rsi, [rbp+var_E0]
__text:00000001000012F0                 mov     rax, [rbp+var_D8]
__text:00000001000012F7                 mov     rdx, [rax]
__text:00000001000012FA                 mov     rdx, [rdx-18h]
__text:00000001000012FE                 add     rax, rdx
__text:0000000100001301                 mov     [rbp+var_60], rax
__text:0000000100001305                 mov     rax, [rbp+var_60]
__text:0000000100001309                 mov     edi, [rax+8]
__text:000000010000130C                 mov     [rbp+var_130], rsi
__text:0000000100001313                 mov     [rbp+var_134], edi
__text:0000000100001319                 mov     eax, [rbp+var_134]
__text:000000010000131F                 and     eax, 0B0h
__text:0000000100001324                 cmp     eax, 20h ; ' '
__text:0000000100001329                 jnz     loc_100001349
__text:000000010000132F                 mov     rax, [rbp+var_E0]
__text:0000000100001336                 add     rax, [rbp+var_108]
__text:000000010000133D                 mov     [rbp+var_140], rax
__text:0000000100001344                 jmp     loc_100001357
__text:0000000100001349 ; ---------------------------------------------------------------------------
__text:0000000100001349
__text:0000000100001349 loc_100001349:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+149↑j
__text:0000000100001349                 mov     rax, [rbp+var_E0]
__text:0000000100001350                 mov     [rbp+var_140], rax
__text:0000000100001357
__text:0000000100001357 loc_100001357:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+164↑j
__text:0000000100001357                 mov     rax, [rbp+var_140]
__text:000000010000135E                 mov     rcx, [rbp+var_E0]
__text:0000000100001365                 add     rcx, [rbp+var_108]
__text:000000010000136C                 mov     rdx, [rbp+var_D8]
__text:0000000100001373                 mov     rsi, [rdx]
__text:0000000100001376                 mov     rsi, [rsi-18h]
__text:000000010000137A                 add     rdx, rsi
__text:000000010000137D                 mov     rsi, [rbp+var_D8]
__text:0000000100001384                 mov     rdi, [rsi]
__text:0000000100001387                 mov     rdi, [rdi-18h]
__text:000000010000138B                 add     rsi, rdi
__text:000000010000138E                 mov     [rbp+var_50], rsi
__text:0000000100001392                 mov     rsi, [rbp+var_50]
__text:0000000100001396                 mov     r8d, [rsi+90h]
__text:000000010000139D                 mov     [rbp+var_4], 0FFFFFFFFh
__text:00000001000013A4                 mov     [rbp+var_8], r8d
__text:00000001000013A8                 mov     r8d, [rbp+var_4]
__text:00000001000013AC                 cmp     r8d, [rbp+var_8]
__text:00000001000013B0                 mov     [rbp+var_148], rax
__text:00000001000013B7                 mov     [rbp+var_150], rcx
__text:00000001000013BE                 mov     [rbp+var_158], rdx
__text:00000001000013C5                 mov     [rbp+var_160], rsi
__text:00000001000013CC                 jnz     loc_1000014C8
__text:00000001000013D2                 mov     rax, [rbp+var_160]
__text:00000001000013D9                 mov     [rbp+var_28], rax
__text:00000001000013DD                 mov     [rbp+var_29], 20h ; ' '
__text:00000001000013E1                 mov     rsi, [rbp+var_28]
__text:00000001000013E5                 lea     rdi, [rbp+var_38] ; this
__text:00000001000013E9                 call    __ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
__text:00000001000013EE                 jmp     $+5
__text:00000001000013F3 ; ---------------------------------------------------------------------------
__text:00000001000013F3
__text:00000001000013F3 loc_1000013F3:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+20E↑j
__text:00000001000013F3                 lea     rax, [rbp+var_38]
__text:00000001000013F7                 mov     [rbp+var_20], rax
__text:00000001000013FB                 mov     rsi, cs:__ZNSt3__15ctypeIcE2idE_ptr
__text:0000000100001402                 mov     rdi, rax
__text:0000000100001405                 call    __ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
__text:000000010000140A                 mov     [rbp+var_168], rax
__text:0000000100001411                 jmp     $+5
__text:0000000100001416 ; ---------------------------------------------------------------------------
__text:0000000100001416
__text:0000000100001416 loc_100001416:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+231↑j
__text:0000000100001416                 mov     al, [rbp+var_29]
__text:0000000100001419                 mov     rcx, [rbp+var_168]
__text:0000000100001420                 mov     [rbp+var_10], rcx
__text:0000000100001424                 mov     [rbp+var_11], al
__text:0000000100001427                 mov     rdx, [rbp+var_10]
__text:000000010000142B                 mov     rsi, [rdx]
__text:000000010000142E                 mov     rsi, [rsi+38h]
__text:0000000100001432                 movsx   edi, [rbp+var_11]
__text:0000000100001436                 mov     [rbp+var_16C], edi
__text:000000010000143C                 mov     rdi, rdx
__text:000000010000143F                 mov     r8d, [rbp+var_16C]
__text:0000000100001446                 mov     [rbp+var_178], rsi
__text:000000010000144D                 mov     esi, r8d
__text:0000000100001450                 mov     rdx, [rbp+var_178]
__text:0000000100001457                 call    rdx
__text:0000000100001459                 mov     [rbp+var_179], al
__text:000000010000145F                 jmp     loc_1000014A4
__text:0000000100001464 ; ---------------------------------------------------------------------------
__text:0000000100001464                 mov     ecx, edx
__text:0000000100001466                 mov     [rbp+var_40], rax
__text:000000010000146A                 mov     [rbp+var_44], ecx
__text:000000010000146D                 lea     rdi, [rbp+var_38] ; this
__text:0000000100001471                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:0000000100001476                 jmp     $+5
__text:000000010000147B ; ---------------------------------------------------------------------------
__text:000000010000147B
__text:000000010000147B loc_10000147B:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+296↑j
__text:000000010000147B                 mov     rax, [rbp+var_40]
__text:000000010000147F                 mov     ecx, [rbp+var_44]
__text:0000000100001482                 mov     [rbp+var_188], rax
__text:0000000100001489                 mov     [rbp+var_18C], ecx
__text:000000010000148F                 jmp     loc_1000015B6
__text:0000000100001494 ; ---------------------------------------------------------------------------
__text:0000000100001494                 mov     ecx, edx
__text:0000000100001496                 mov     rdi, rax
__text:0000000100001499                 mov     [rbp+var_190], ecx
__text:000000010000149F                 call    ___clang_call_terminate
__text:00000001000014A4 ; ---------------------------------------------------------------------------
__text:00000001000014A4
__text:00000001000014A4 loc_1000014A4:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+27F↑j
__text:00000001000014A4                 lea     rdi, [rbp+var_38] ; this
__text:00000001000014A8                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:00000001000014AD                 jmp     $+5
__text:00000001000014B2 ; ---------------------------------------------------------------------------
__text:00000001000014B2
__text:00000001000014B2 loc_1000014B2:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2CD↑j
__text:00000001000014B2                 mov     al, [rbp+var_179]
__text:00000001000014B8                 movsx   ecx, al
__text:00000001000014BB                 mov     rdx, [rbp+var_160]
__text:00000001000014C2                 mov     [rdx+90h], ecx
__text:00000001000014C8
__text:00000001000014C8 loc_1000014C8:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+1EC↑j
__text:00000001000014C8                 mov     rax, [rbp+var_160]
__text:00000001000014CF                 mov     ecx, [rax+90h]
__text:00000001000014D5                 mov     dl, cl
__text:00000001000014D7                 mov     [rbp+var_191], dl
__text:00000001000014DD                 mov     rdi, [rbp+var_110]
__text:00000001000014E4                 mov     al, [rbp+var_191]
__text:00000001000014EA                 movsx   r9d, al
__text:00000001000014EE                 mov     rsi, [rbp+var_130]
__text:00000001000014F5                 mov     rdx, [rbp+var_148]
__text:00000001000014FC                 mov     rcx, [rbp+var_150]
__text:0000000100001503                 mov     r8, [rbp+var_158]
__text:000000010000150A                 call    __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)
__text:000000010000150F                 mov     [rbp+var_1A0], rax
__text:0000000100001516                 jmp     $+5
__text:000000010000151B ; ---------------------------------------------------------------------------
__text:000000010000151B
__text:000000010000151B loc_10000151B:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+336↑j
__text:000000010000151B                 lea     rax, [rbp+var_118]
__text:0000000100001522                 mov     rcx, [rbp+var_1A0]
__text:0000000100001529                 mov     [rbp+var_118], rcx
__text:0000000100001530                 mov     [rbp+var_58], rax
__text:0000000100001534                 mov     rax, [rbp+var_58]
__text:0000000100001538                 cmp     qword ptr [rax], 0
__text:000000010000153F                 jnz     loc_1000015E1
__text:0000000100001545                 mov     rax, [rbp+var_D8]
__text:000000010000154C                 mov     rcx, [rax]
__text:000000010000154F                 mov     rcx, [rcx-18h]
__text:0000000100001553                 add     rax, rcx
__text:0000000100001556                 mov     [rbp+var_78], rax
__text:000000010000155A                 mov     [rbp+var_7C], 5
__text:0000000100001561                 mov     rax, [rbp+var_78]
__text:0000000100001565                 mov     [rbp+var_68], rax
__text:0000000100001569                 mov     [rbp+var_6C], 5
__text:0000000100001570                 mov     rax, [rbp+var_68]
__text:0000000100001574                 mov     edx, [rax+20h]
__text:0000000100001577                 or      edx, 5
__text:000000010000157A                 mov     rdi, rax        ; this
__text:000000010000157D                 mov     esi, edx        ; unsigned int
__text:000000010000157F                 call    __ZNSt3__18ios_base5clearEj ; std::__1::ios_base::clear(uint)
__text:0000000100001584                 jmp     $+5
__text:0000000100001589 ; ---------------------------------------------------------------------------
__text:0000000100001589
__text:0000000100001589 loc_100001589:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3A4↑j
__text:0000000100001589                 jmp     $+5
__text:000000010000158E ; ---------------------------------------------------------------------------
__text:000000010000158E
__text:000000010000158E loc_10000158E:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100001589↑j
__text:000000010000158E                 jmp     loc_1000015E1
__text:0000000100001593 ; ---------------------------------------------------------------------------
__text:0000000100001593                 mov     ecx, edx
__text:0000000100001595                 mov     [rbp+var_F8], rax
__text:000000010000159C                 mov     [rbp+var_FC], ecx
__text:00000001000015A2                 jmp     loc_100001601
__text:00000001000015A7 ; ---------------------------------------------------------------------------
__text:00000001000015A7                 mov     ecx, edx
__text:00000001000015A9                 mov     [rbp+var_188], rax
__text:00000001000015B0                 mov     [rbp+var_18C], ecx
__text:00000001000015B6
__text:00000001000015B6 loc_1000015B6:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2AF↑j
__text:00000001000015B6                 mov     eax, [rbp+var_18C]
__text:00000001000015BC                 mov     rcx, [rbp+var_188]
__text:00000001000015C3                 mov     [rbp+var_F8], rcx
__text:00000001000015CA                 mov     [rbp+var_FC], eax
__text:00000001000015D0                 lea     rdi, [rbp+var_F0]
__text:00000001000015D7                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
__text:00000001000015DC                 jmp     loc_1000015FC
__text:00000001000015E1 ; ---------------------------------------------------------------------------
__text:00000001000015E1
__text:00000001000015E1 loc_1000015E1:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+35F↑j
__text:00000001000015E1                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_10000158E↑j
__text:00000001000015E1                 jmp     $+5
__text:00000001000015E6 ; ---------------------------------------------------------------------------
__text:00000001000015E6
__text:00000001000015E6 loc_1000015E6:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+5C↑j
__text:00000001000015E6                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_1000015E1↑j
__text:00000001000015E6                 lea     rdi, [rbp+var_F0]
__text:00000001000015ED                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
__text:00000001000015F2                 jmp     $+5
__text:00000001000015F7 ; ---------------------------------------------------------------------------
__text:00000001000015F7
__text:00000001000015F7 loc_1000015F7:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+412↑j
__text:00000001000015F7                 jmp     loc_100001634
__text:00000001000015FC ; ---------------------------------------------------------------------------
__text:00000001000015FC
__text:00000001000015FC loc_1000015FC:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3FC↑j
__text:00000001000015FC                 jmp     $+5
__text:0000000100001601 ; ---------------------------------------------------------------------------
__text:0000000100001601
__text:0000000100001601 loc_100001601:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3C2↑j
__text:0000000100001601                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_1000015FC↑j
__text:0000000100001601                 mov     rdi, [rbp+var_F8] ; void *
__text:0000000100001608                 call    ___cxa_begin_catch
__text:000000010000160D                 mov     rdi, [rbp+var_D8]
__text:0000000100001614                 mov     rcx, [rdi]
__text:0000000100001617                 mov     rcx, [rcx-18h]
__text:000000010000161B                 add     rdi, rcx        ; this
__text:000000010000161E                 mov     [rbp+var_1A8], rax
__text:0000000100001625                 call    __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv ; std::__1::ios_base::__set_badbit_and_consider_rethrow(void)
__text:000000010000162A                 jmp     $+5
__text:000000010000162F ; ---------------------------------------------------------------------------
__text:000000010000162F
__text:000000010000162F loc_10000162F:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+44A↑j
__text:000000010000162F                 call    ___cxa_end_catch
__text:0000000100001634
__text:0000000100001634 loc_100001634:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_1000015F7↑j
__text:0000000100001634                 mov     rax, [rbp+var_D8]
__text:000000010000163B                 add     rsp, 1B0h
__text:0000000100001642                 pop     rbp
__text:0000000100001643                 retn
__text:0000000100001643 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc endp
__text:0000000100001643
__text:0000000100001644 ; ---------------------------------------------------------------------------
__text:0000000100001644                 mov     ecx, edx
__text:0000000100001646                 mov     [rbp-0F8h], rax
__text:000000010000164D                 mov     [rbp-0FCh], ecx
__text:0000000100001653                 call    ___cxa_end_catch
__text:0000000100001658                 jmp     $+5
__text:000000010000165D ; ---------------------------------------------------------------------------
__text:000000010000165D
__text:000000010000165D loc_10000165D:                          ; CODE XREF: __text:0000000100001658↑j
__text:000000010000165D                 jmp     $+5
__text:0000000100001662 ; ---------------------------------------------------------------------------
__text:0000000100001662
__text:0000000100001662 loc_100001662:                          ; CODE XREF: __text:loc_10000165D↑j
__text:0000000100001662                 mov     rdi, [rbp-0F8h]
__text:0000000100001669                 call    __Unwind_Resume
__text:000000010000166E ; ---------------------------------------------------------------------------
__text:000000010000166E                 mov     ecx, edx
__text:0000000100001670                 mov     rdi, rax
__text:0000000100001673                 mov     [rbp-1ACh], ecx
__text:0000000100001679                 call    ___clang_call_terminate
__text:0000000100001679 ; ---------------------------------------------------------------------------
__text:000000010000167E                 align 20h
__text:0000000100001680
__text:0000000100001680 ; =============== S U B R O U T I N E =======================================
__text:0000000100001680
__text:0000000100001680 ; Attributes: bp-based frame
__text:0000000100001680
__text:0000000100001680 ; std::__1::basic_ostream<char, std::__1::char_traits<char>> & std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)
__text:0000000100001680 __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ proc near
__text:0000000100001680                                         ; DATA XREF: _main+69C↑o
__text:0000000100001680                                         ; _main:loc_100001113↑o
__text:0000000100001680
__text:0000000100001680 var_88          = qword ptr -88h
__text:0000000100001680 var_80          = qword ptr -80h
__text:0000000100001680 var_78          = dword ptr -78h
__text:0000000100001680 var_71          = byte ptr -71h
__text:0000000100001680 var_70          = qword ptr -70h
__text:0000000100001680 var_64          = dword ptr -64h
__text:0000000100001680 var_60          = qword ptr -60h
__text:0000000100001680 var_58          = qword ptr -58h
__text:0000000100001680 var_50          = qword ptr -50h
__text:0000000100001680 var_48          = qword ptr -48h
__text:0000000100001680 var_3C          = dword ptr -3Ch
__text:0000000100001680 var_38          = qword ptr -38h
__text:0000000100001680 var_30          = byte ptr -30h
__text:0000000100001680 var_21          = byte ptr -21h
__text:0000000100001680 var_20          = qword ptr -20h
__text:0000000100001680 var_18          = qword ptr -18h
__text:0000000100001680 var_9           = byte ptr -9
__text:0000000100001680 var_8           = qword ptr -8
__text:0000000100001680
__text:0000000100001680                 push    rbp
__text:0000000100001681                 mov     rbp, rsp
__text:0000000100001684                 sub     rsp, 90h
__text:000000010000168B                 mov     [rbp+var_48], rdi
__text:000000010000168F                 mov     rax, rdi
__text:0000000100001692                 mov     rcx, [rdi]
__text:0000000100001695                 mov     rcx, [rcx-18h]
__text:0000000100001699                 add     rdi, rcx
__text:000000010000169C                 mov     [rbp+var_20], rdi
__text:00000001000016A0                 mov     [rbp+var_21], 0Ah
__text:00000001000016A4                 mov     rsi, [rbp+var_20]
__text:00000001000016A8                 lea     rcx, [rbp+var_30]
__text:00000001000016AC                 mov     rdi, rcx        ; this
__text:00000001000016AF                 mov     [rbp+var_50], rax
__text:00000001000016B3                 mov     [rbp+var_58], rcx
__text:00000001000016B7                 call    __ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
__text:00000001000016BC                 mov     rax, [rbp+var_58]
__text:00000001000016C0                 mov     [rbp+var_18], rax
__text:00000001000016C4                 mov     rsi, cs:__ZNSt3__15ctypeIcE2idE_ptr
__text:00000001000016CB                 mov     rdi, rax
__text:00000001000016CE                 call    __ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
__text:00000001000016D3                 mov     [rbp+var_60], rax
__text:00000001000016D7                 jmp     $+5
__text:00000001000016DC ; ---------------------------------------------------------------------------
__text:00000001000016DC
__text:00000001000016DC loc_1000016DC:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+57↑j
__text:00000001000016DC                 mov     al, [rbp+var_21]
__text:00000001000016DF                 mov     rcx, [rbp+var_60]
__text:00000001000016E3                 mov     [rbp+var_8], rcx
__text:00000001000016E7                 mov     [rbp+var_9], al
__text:00000001000016EA                 mov     rdx, [rbp+var_8]
__text:00000001000016EE                 mov     rsi, [rdx]
__text:00000001000016F1                 mov     rsi, [rsi+38h]
__text:00000001000016F5                 movsx   edi, [rbp+var_9]
__text:00000001000016F9                 mov     [rbp+var_64], edi
__text:00000001000016FC                 mov     rdi, rdx
__text:00000001000016FF                 mov     r8d, [rbp+var_64]
__text:0000000100001703                 mov     [rbp+var_70], rsi
__text:0000000100001707                 mov     esi, r8d
__text:000000010000170A                 mov     rdx, [rbp+var_70]
__text:000000010000170E                 call    rdx
__text:0000000100001710                 mov     [rbp+var_71], al
__text:0000000100001713                 jmp     loc_100001745
__text:0000000100001718 ; ---------------------------------------------------------------------------
__text:0000000100001718                 mov     ecx, edx
__text:000000010000171A                 mov     [rbp+var_38], rax
__text:000000010000171E                 mov     [rbp+var_3C], ecx
__text:0000000100001721                 lea     rdi, [rbp+var_30] ; this
__text:0000000100001725                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:000000010000172A                 jmp     $+5
__text:000000010000172F ; ---------------------------------------------------------------------------
__text:000000010000172F
__text:000000010000172F loc_10000172F:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+AA↑j
__text:000000010000172F                 mov     rdi, [rbp+var_38]
__text:0000000100001733                 call    __Unwind_Resume
__text:0000000100001738 ; ---------------------------------------------------------------------------
__text:0000000100001738                 mov     ecx, edx
__text:000000010000173A                 mov     rdi, rax
__text:000000010000173D                 mov     [rbp+var_78], ecx
__text:0000000100001740                 call    ___clang_call_terminate
__text:0000000100001745 ; ---------------------------------------------------------------------------
__text:0000000100001745
__text:0000000100001745 loc_100001745:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+93↑j
__text:0000000100001745                 lea     rdi, [rbp+var_30] ; this
__text:0000000100001749                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:000000010000174E                 mov     rdi, [rbp+var_50]
__text:0000000100001752                 mov     al, [rbp+var_71]
__text:0000000100001755                 movsx   esi, al
__text:0000000100001758                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::put(char)
__text:000000010000175D                 mov     rdi, [rbp+var_48]
__text:0000000100001761                 mov     [rbp+var_80], rax
__text:0000000100001765                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::flush(void)
__text:000000010000176A                 mov     rdi, [rbp+var_48]
__text:000000010000176E                 mov     [rbp+var_88], rax
__text:0000000100001775                 mov     rax, rdi
__text:0000000100001778                 add     rsp, 90h
__text:000000010000177F                 pop     rbp
__text:0000000100001780                 retn
__text:0000000100001780 __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ endp
__text:0000000100001780
__text:0000000100001780 ; ---------------------------------------------------------------------------
__text:0000000100001781                 align 10h
__text:0000000100001790
__text:0000000100001790 ; =============== S U B R O U T I N E =======================================
__text:0000000100001790
__text:0000000100001790 ; Attributes: noreturn bp-based frame
__text:0000000100001790
__text:0000000100001790 ___clang_call_terminate proc near       ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2BF↑p
__text:0000000100001790                                         ; __text:0000000100001679↑p ...
__text:0000000100001790
__text:0000000100001790 var_8           = qword ptr -8
__text:0000000100001790
__text:0000000100001790                 push    rbp
__text:0000000100001791                 mov     rbp, rsp
__text:0000000100001794                 sub     rsp, 10h
__text:0000000100001798                 call    ___cxa_begin_catch
__text:000000010000179D                 mov     [rbp+var_8], rax
__text:00000001000017A1                 call    __ZSt9terminatev ; std::terminate(void)
__text:00000001000017A1 ___clang_call_terminate endp
__text:00000001000017A1
__text:00000001000017A1 ; ---------------------------------------------------------------------------
__text:00000001000017A6                 align 10h
__text:00000001000017B0
__text:00000001000017B0 ; =============== S U B R O U T I N E =======================================
__text:00000001000017B0
__text:00000001000017B0 ; Attributes: bp-based frame
__text:00000001000017B0
__text:00000001000017B0 ; std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> std::__1::__pad_and_output<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, char const*, char const*, char const*, std::__1::ios_base &, char)
__text:00000001000017B0 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ proc near
__text:00000001000017B0                                         ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+32A↑p
__text:00000001000017B0
__text:00000001000017B0 var_2CC         = dword ptr -2CCh
__text:00000001000017B0 var_2C8         = dword ptr -2C8h
__text:00000001000017B0 var_2C4         = dword ptr -2C4h
__text:00000001000017B0 var_2C0         = qword ptr -2C0h
__text:00000001000017B0 var_2B8         = qword ptr -2B8h
__text:00000001000017B0 var_2B0         = qword ptr -2B0h
__text:00000001000017B0 var_2A8         = qword ptr -2A8h
__text:00000001000017B0 var_2A0         = qword ptr -2A0h
__text:00000001000017B0 var_298         = qword ptr -298h
__text:00000001000017B0 var_290         = qword ptr -290h
__text:00000001000017B0 var_288         = qword ptr -288h
__text:00000001000017B0 var_27C         = dword ptr -27Ch
__text:00000001000017B0 var_278         = qword ptr -278h
__text:00000001000017B0 var_26C         = dword ptr -26Ch
__text:00000001000017B0 var_268         = qword ptr -268h
__text:00000001000017B0 var_260         = byte ptr -260h
__text:00000001000017B0 var_248         = qword ptr -248h
__text:00000001000017B0 var_240         = qword ptr -240h
__text:00000001000017B0 var_238         = qword ptr -238h
__text:00000001000017B0 var_230         = qword ptr -230h
__text:00000001000017B0 var_228         = qword ptr -228h
__text:00000001000017B0 var_219         = byte ptr -219h
__text:00000001000017B0 var_218         = qword ptr -218h
__text:00000001000017B0 var_210         = qword ptr -210h
__text:00000001000017B0 var_208         = qword ptr -208h
__text:00000001000017B0 var_200         = qword ptr -200h
__text:00000001000017B0 var_1F8         = qword ptr -1F8h
__text:00000001000017B0 var_1F0         = qword ptr -1F0h
__text:00000001000017B0 var_1E8         = qword ptr -1E8h
__text:00000001000017B0 var_1E0         = qword ptr -1E0h
__text:00000001000017B0 var_1D8         = qword ptr -1D8h
__text:00000001000017B0 var_1D0         = qword ptr -1D0h
__text:00000001000017B0 var_1C8         = qword ptr -1C8h
__text:00000001000017B0 var_1C0         = qword ptr -1C0h
__text:00000001000017B0 var_1B8         = qword ptr -1B8h
__text:00000001000017B0 var_1B0         = qword ptr -1B0h
__text:00000001000017B0 var_1A8         = qword ptr -1A8h
__text:00000001000017B0 var_1A0         = qword ptr -1A0h
__text:00000001000017B0 var_198         = qword ptr -198h
__text:00000001000017B0 var_190         = qword ptr -190h
__text:00000001000017B0 var_188         = qword ptr -188h
__text:00000001000017B0 var_180         = qword ptr -180h
__text:00000001000017B0 var_178         = qword ptr -178h
__text:00000001000017B0 var_170         = qword ptr -170h
__text:00000001000017B0 var_168         = qword ptr -168h
__text:00000001000017B0 var_160         = qword ptr -160h
__text:00000001000017B0 var_158         = qword ptr -158h
__text:00000001000017B0 var_150         = qword ptr -150h
__text:00000001000017B0 var_148         = qword ptr -148h
__text:00000001000017B0 var_140         = qword ptr -140h
__text:00000001000017B0 var_138         = qword ptr -138h
__text:00000001000017B0 var_130         = qword ptr -130h
__text:00000001000017B0 var_128         = qword ptr -128h
__text:00000001000017B0 var_120         = qword ptr -120h
__text:00000001000017B0 var_118         = qword ptr -118h
__text:00000001000017B0 var_110         = qword ptr -110h
__text:00000001000017B0 var_108         = qword ptr -108h
__text:00000001000017B0 var_100         = qword ptr -100h
__text:00000001000017B0 var_F8          = qword ptr -0F8h
__text:00000001000017B0 var_F0          = qword ptr -0F0h
__text:00000001000017B0 var_E8          = qword ptr -0E8h
__text:00000001000017B0 var_E0          = qword ptr -0E0h
__text:00000001000017B0 var_D8          = qword ptr -0D8h
__text:00000001000017B0 var_D0          = qword ptr -0D0h
__text:00000001000017B0 var_C8          = qword ptr -0C8h
__text:00000001000017B0 var_C0          = qword ptr -0C0h
__text:00000001000017B0 var_B8          = qword ptr -0B8h
__text:00000001000017B0 var_B0          = qword ptr -0B0h
__text:00000001000017B0 var_A8          = qword ptr -0A8h
__text:00000001000017B0 var_A0          = qword ptr -0A0h
__text:00000001000017B0 var_98          = qword ptr -98h
__text:00000001000017B0 var_90          = qword ptr -90h
__text:00000001000017B0 var_88          = qword ptr -88h
__text:00000001000017B0 var_80          = qword ptr -80h
__text:00000001000017B0 var_78          = qword ptr -78h
__text:00000001000017B0 var_70          = qword ptr -70h
__text:00000001000017B0 var_68          = qword ptr -68h
__text:00000001000017B0 var_60          = qword ptr -60h
__text:00000001000017B0 var_51          = byte ptr -51h
__text:00000001000017B0 var_50          = qword ptr -50h
__text:00000001000017B0 var_48          = qword ptr -48h
__text:00000001000017B0 var_39          = byte ptr -39h
__text:00000001000017B0 var_38          = qword ptr -38h
__text:00000001000017B0 var_30          = qword ptr -30h
__text:00000001000017B0 var_28          = qword ptr -28h
__text:00000001000017B0 var_20          = qword ptr -20h
__text:00000001000017B0 var_18          = qword ptr -18h
__text:00000001000017B0 var_10          = qword ptr -10h
__text:00000001000017B0 var_8           = qword ptr -8
__text:00000001000017B0
__text:00000001000017B0                 push    rbp
__text:00000001000017B1                 mov     rbp, rsp
__text:00000001000017B4                 sub     rsp, 2D0h
__text:00000001000017BB                 mov     al, r9b
__text:00000001000017BE                 lea     r10, [rbp+var_228]
__text:00000001000017C5                 lea     r11, [rbp+var_1E8]
__text:00000001000017CC                 mov     [rbp+var_1F8], rdi
__text:00000001000017D3                 mov     [rbp+var_200], rsi
__text:00000001000017DA                 mov     [rbp+var_208], rdx
__text:00000001000017E1                 mov     [rbp+var_210], rcx
__text:00000001000017E8                 mov     [rbp+var_218], r8
__text:00000001000017EF                 mov     [rbp+var_219], al
__text:00000001000017F5                 mov     rcx, [rbp+var_1F8]
__text:00000001000017FC                 mov     [rbp+var_1D8], r11
__text:0000000100001803                 mov     [rbp+var_1E0], 0FFFFFFFFFFFFFFFFh
__text:000000010000180E                 mov     rdx, [rbp+var_1D8]
__text:0000000100001815                 mov     rsi, [rbp+var_1E0]
__text:000000010000181C                 mov     [rbp+var_1C8], rdx
__text:0000000100001823                 mov     [rbp+var_1D0], rsi
__text:000000010000182A                 mov     rdx, [rbp+var_1C8]
__text:0000000100001831                 mov     qword ptr [rdx], 0
__text:0000000100001838                 mov     rdx, [rbp+var_1E8]
__text:000000010000183F                 mov     [rbp+var_228], rdx
__text:0000000100001846                 mov     [rbp+var_1C0], r10
__text:000000010000184D                 cmp     rcx, 0
__text:0000000100001854                 jnz     loc_10000186D
__text:000000010000185A                 mov     rax, [rbp+var_1F8]
__text:0000000100001861                 mov     [rbp+var_1F0], rax
__text:0000000100001868                 jmp     loc_100001E32
__text:000000010000186D ; ---------------------------------------------------------------------------
__text:000000010000186D
__text:000000010000186D loc_10000186D:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+A4↑j
__text:000000010000186D                 mov     rax, [rbp+var_210]
__text:0000000100001874                 mov     rcx, [rbp+var_200]
__text:000000010000187B                 sub     rax, rcx
__text:000000010000187E                 mov     [rbp+var_230], rax
__text:0000000100001885                 mov     rax, [rbp+var_218]
__text:000000010000188C                 mov     [rbp+var_158], rax
__text:0000000100001893                 mov     rax, [rbp+var_158]
__text:000000010000189A                 mov     rax, [rax+18h]
__text:000000010000189E                 mov     [rbp+var_238], rax
__text:00000001000018A5                 mov     rax, [rbp+var_238]
__text:00000001000018AC                 cmp     rax, [rbp+var_230]
__text:00000001000018B3                 jle     loc_1000018D6
__text:00000001000018B9                 mov     rax, [rbp+var_230]
__text:00000001000018C0                 mov     rcx, [rbp+var_238]
__text:00000001000018C7                 sub     rcx, rax
__text:00000001000018CA                 mov     [rbp+var_238], rcx
__text:00000001000018D1                 jmp     loc_1000018E1
__text:00000001000018D6 ; ---------------------------------------------------------------------------
__text:00000001000018D6
__text:00000001000018D6 loc_1000018D6:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+103↑j
__text:00000001000018D6                 mov     [rbp+var_238], 0
__text:00000001000018E1
__text:00000001000018E1 loc_1000018E1:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+121↑j
__text:00000001000018E1                 mov     rax, [rbp+var_208]
__text:00000001000018E8                 mov     rcx, [rbp+var_200]
__text:00000001000018EF                 sub     rax, rcx
__text:00000001000018F2                 mov     [rbp+var_240], rax
__text:00000001000018F9                 cmp     [rbp+var_240], 0
__text:0000000100001904                 jle     loc_1000019E1
__text:000000010000190A                 mov     rax, [rbp+var_1F8]
__text:0000000100001911                 mov     rcx, [rbp+var_200]
__text:0000000100001918                 mov     rdx, [rbp+var_240]
__text:000000010000191F                 mov     [rbp+var_F8], rax
__text:0000000100001926                 mov     [rbp+var_100], rcx
__text:000000010000192D                 mov     [rbp+var_108], rdx
__text:0000000100001934                 mov     rax, [rbp+var_F8]
__text:000000010000193B                 mov     rcx, [rax]
__text:000000010000193E                 mov     rcx, [rcx+60h]
__text:0000000100001942                 mov     rsi, [rbp+var_100]
__text:0000000100001949                 mov     rdx, [rbp+var_108]
__text:0000000100001950                 mov     rdi, rax
__text:0000000100001953                 call    rcx
__text:0000000100001955                 cmp     rax, [rbp+var_240]
__text:000000010000195C                 jz      loc_1000019DC
__text:0000000100001962                 lea     rax, [rbp+var_248]
__text:0000000100001969                 lea     rcx, [rbp+var_F0]
__text:0000000100001970                 mov     [rbp+var_E0], rcx
__text:0000000100001977                 mov     [rbp+var_E8], 0FFFFFFFFFFFFFFFFh
__text:0000000100001982                 mov     rcx, [rbp+var_E0]
__text:0000000100001989                 mov     rdx, [rbp+var_E8]
__text:0000000100001990                 mov     [rbp+var_D0], rcx
__text:0000000100001997                 mov     [rbp+var_D8], rdx
__text:000000010000199E                 mov     rcx, [rbp+var_D0]
__text:00000001000019A5                 mov     qword ptr [rcx], 0
__text:00000001000019AC                 mov     rcx, [rbp+var_F0]
__text:00000001000019B3                 mov     [rbp+var_248], rcx
__text:00000001000019BA                 mov     [rbp+var_8], rax
__text:00000001000019BE                 mov     [rbp+var_1F8], 0
__text:00000001000019C9                 mov     rax, [rbp+var_1F8]
__text:00000001000019D0                 mov     [rbp+var_1F0], rax
__text:00000001000019D7                 jmp     loc_100001E32
__text:00000001000019DC ; ---------------------------------------------------------------------------
__text:00000001000019DC
__text:00000001000019DC loc_1000019DC:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+1AC↑j
__text:00000001000019DC                 jmp     $+5
__text:00000001000019E1 ; ---------------------------------------------------------------------------
__text:00000001000019E1
__text:00000001000019E1 loc_1000019E1:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+154↑j
__text:00000001000019E1                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_1000019DC↑j
__text:00000001000019E1                 cmp     [rbp+var_238], 0
__text:00000001000019EC                 jle     loc_100001CEB
__text:00000001000019F2                 lea     rax, [rbp+var_260]
__text:00000001000019F9                 mov     rcx, [rbp+var_238]
__text:0000000100001A00                 mov     dl, [rbp+var_219]
__text:0000000100001A06                 mov     [rbp+var_48], rax
__text:0000000100001A0A                 mov     [rbp+var_50], rcx
__text:0000000100001A0E                 mov     [rbp+var_51], dl
__text:0000000100001A11                 mov     rax, [rbp+var_48]
__text:0000000100001A15                 mov     rcx, [rbp+var_50]
__text:0000000100001A19                 mov     dl, [rbp+var_51]
__text:0000000100001A1C                 mov     [rbp+var_30], rax
__text:0000000100001A20                 mov     [rbp+var_38], rcx
__text:0000000100001A24                 mov     [rbp+var_39], dl
__text:0000000100001A27                 mov     rax, [rbp+var_30]
__text:0000000100001A2B                 mov     [rbp+var_28], rax
__text:0000000100001A2F                 mov     rcx, [rbp+var_28]
__text:0000000100001A33                 mov     [rbp+var_20], rcx
__text:0000000100001A37                 mov     rcx, [rbp+var_20]
__text:0000000100001A3B                 mov     [rbp+var_18], rcx
__text:0000000100001A3F                 mov     rcx, [rbp+var_18]
__text:0000000100001A43                 mov     [rbp+var_10], rcx
__text:0000000100001A47                 mov     rsi, [rbp+var_38]
__text:0000000100001A4B                 mov     rdi, rax
__text:0000000100001A4E                 movsx   edx, [rbp+var_39]
__text:0000000100001A52                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(ulong,char)
__text:0000000100001A57                 lea     rax, [rbp+var_260]
__text:0000000100001A5E                 mov     rcx, [rbp+var_1F8]
__text:0000000100001A65                 mov     [rbp+var_C8], rax
__text:0000000100001A6C                 mov     rax, [rbp+var_C8]
__text:0000000100001A73                 mov     [rbp+var_C0], rax
__text:0000000100001A7A                 mov     rax, [rbp+var_C0]
__text:0000000100001A81                 mov     [rbp+var_B8], rax
__text:0000000100001A88                 mov     rsi, [rbp+var_B8]
__text:0000000100001A8F                 mov     [rbp+var_B0], rsi
__text:0000000100001A96                 mov     rsi, [rbp+var_B0]
__text:0000000100001A9D                 mov     [rbp+var_A8], rsi
__text:0000000100001AA4                 mov     rsi, [rbp+var_A8]
__text:0000000100001AAB                 movzx   edx, byte ptr [rsi]
__text:0000000100001AAE                 and     edx, 1
__text:0000000100001AB4                 cmp     edx, 0
__text:0000000100001ABA                 mov     [rbp+var_290], rcx
__text:0000000100001AC1                 mov     [rbp+var_298], rax
__text:0000000100001AC8                 jz      loc_100001AFD
__text:0000000100001ACE                 mov     rax, [rbp+var_298]
__text:0000000100001AD5                 mov     [rbp+var_78], rax
__text:0000000100001AD9                 mov     rcx, [rbp+var_78]
__text:0000000100001ADD                 mov     [rbp+var_70], rcx
__text:0000000100001AE1                 mov     rcx, [rbp+var_70]
__text:0000000100001AE5                 mov     [rbp+var_68], rcx
__text:0000000100001AE9                 mov     rcx, [rbp+var_68]
__text:0000000100001AED                 mov     rcx, [rcx+10h]
__text:0000000100001AF1                 mov     [rbp+var_2A0], rcx
__text:0000000100001AF8                 jmp     loc_100001B52
__text:0000000100001AFD ; ---------------------------------------------------------------------------
__text:0000000100001AFD
__text:0000000100001AFD loc_100001AFD:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+318↑j
__text:0000000100001AFD                 mov     rax, [rbp+var_298]
__text:0000000100001B04                 mov     [rbp+var_A0], rax
__text:0000000100001B0B                 mov     rcx, [rbp+var_A0]
__text:0000000100001B12                 mov     [rbp+var_98], rcx
__text:0000000100001B19                 mov     rcx, [rbp+var_98]
__text:0000000100001B20                 mov     [rbp+var_90], rcx
__text:0000000100001B27                 mov     rcx, [rbp+var_90]
__text:0000000100001B2E                 add     rcx, 1
__text:0000000100001B35                 mov     [rbp+var_88], rcx
__text:0000000100001B3C                 mov     rcx, [rbp+var_88]
__text:0000000100001B43                 mov     [rbp+var_80], rcx
__text:0000000100001B47                 mov     rcx, [rbp+var_80]
__text:0000000100001B4B                 mov     [rbp+var_2A0], rcx
__text:0000000100001B52
__text:0000000100001B52 loc_100001B52:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+348↑j
__text:0000000100001B52                 mov     rax, [rbp+var_2A0]
__text:0000000100001B59                 mov     [rbp+var_60], rax
__text:0000000100001B5D                 mov     rcx, [rbp+var_238]
__text:0000000100001B64                 mov     rdx, [rbp+var_290]
__text:0000000100001B6B                 mov     [rbp+var_110], rdx
__text:0000000100001B72                 mov     [rbp+var_118], rax
__text:0000000100001B79                 mov     [rbp+var_120], rcx
__text:0000000100001B80                 mov     rax, [rbp+var_110]
__text:0000000100001B87                 mov     rsi, [rax]
__text:0000000100001B8A                 mov     rsi, [rsi+60h]
__text:0000000100001B8E                 mov     rdi, [rbp+var_118]
__text:0000000100001B95                 mov     [rbp+var_2A8], rdi
__text:0000000100001B9C                 mov     rdi, rax
__text:0000000100001B9F                 mov     rax, [rbp+var_2A8]
__text:0000000100001BA6                 mov     [rbp+var_2B0], rsi
__text:0000000100001BAD                 mov     rsi, rax
__text:0000000100001BB0                 mov     rdx, rcx
__text:0000000100001BB3                 mov     rcx, [rbp+var_2B0]
__text:0000000100001BBA                 call    rcx
__text:0000000100001BBC                 mov     [rbp+var_2B8], rax
__text:0000000100001BC3                 jmp     $+5
__text:0000000100001BC8 ; ---------------------------------------------------------------------------
__text:0000000100001BC8
__text:0000000100001BC8 loc_100001BC8:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+413↑j
__text:0000000100001BC8                 jmp     $+5
__text:0000000100001BCD ; ---------------------------------------------------------------------------
__text:0000000100001BCD
__text:0000000100001BCD loc_100001BCD:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100001BC8↑j
__text:0000000100001BCD                 mov     rax, [rbp+var_2B8]
__text:0000000100001BD4                 cmp     rax, [rbp+var_238]
__text:0000000100001BDB                 jz      loc_100001C96
__text:0000000100001BE1                 lea     rax, [rbp+var_148]
__text:0000000100001BE8                 mov     [rbp+var_138], rax
__text:0000000100001BEF                 mov     [rbp+var_140], 0FFFFFFFFFFFFFFFFh
__text:0000000100001BFA                 mov     rax, [rbp+var_138]
__text:0000000100001C01                 mov     rcx, [rbp+var_140]
__text:0000000100001C08                 mov     [rbp+var_128], rax
__text:0000000100001C0F                 mov     [rbp+var_130], rcx
__text:0000000100001C16                 mov     rax, [rbp+var_128]
__text:0000000100001C1D                 mov     qword ptr [rax], 0
__text:0000000100001C24                 mov     rax, [rbp+var_148]
__text:0000000100001C2B                 mov     [rbp+var_2C0], rax
__text:0000000100001C32                 lea     rax, [rbp+var_278]
__text:0000000100001C39                 mov     rcx, [rbp+var_2C0]
__text:0000000100001C40                 mov     [rbp+var_278], rcx
__text:0000000100001C47                 mov     [rbp+var_150], rax
__text:0000000100001C4E                 mov     [rbp+var_1F8], 0
__text:0000000100001C59                 mov     rax, [rbp+var_1F8]
__text:0000000100001C60                 mov     [rbp+var_1F0], rax
__text:0000000100001C67                 mov     [rbp+var_27C], 1
__text:0000000100001C71                 jmp     loc_100001CA0
__text:0000000100001C76 ; ---------------------------------------------------------------------------
__text:0000000100001C76                 mov     ecx, edx
__text:0000000100001C78                 mov     [rbp+var_268], rax
__text:0000000100001C7F                 mov     [rbp+var_26C], ecx
__text:0000000100001C85                 lea     rdi, [rbp+var_260]
__text:0000000100001C8C                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001C91                 jmp     loc_100001CE6
__text:0000000100001C96 ; ---------------------------------------------------------------------------
__text:0000000100001C96
__text:0000000100001C96 loc_100001C96:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+42B↑j
__text:0000000100001C96                 mov     [rbp+var_27C], 0
__text:0000000100001CA0
__text:0000000100001CA0 loc_100001CA0:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+4C1↑j
__text:0000000100001CA0                 lea     rdi, [rbp+var_260]
__text:0000000100001CA7                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001CAC                 mov     eax, [rbp+var_27C]
__text:0000000100001CB2                 mov     ecx, eax
__text:0000000100001CB4                 sub     ecx, 1
__text:0000000100001CB7                 mov     [rbp+var_2C4], eax
__text:0000000100001CBD                 mov     [rbp+var_2C8], ecx
__text:0000000100001CC3                 jz      loc_100001E32
__text:0000000100001CC9                 jmp     $+5
__text:0000000100001CCE ; ---------------------------------------------------------------------------
__text:0000000100001CCE
__text:0000000100001CCE loc_100001CCE:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+519↑j
__text:0000000100001CCE                 mov     eax, [rbp+var_2C4]
__text:0000000100001CD4                 test    eax, eax
__text:0000000100001CD6                 jnz     loc_100001E5E
__text:0000000100001CDC                 jmp     $+5
__text:0000000100001CE1 ; ---------------------------------------------------------------------------
__text:0000000100001CE1
__text:0000000100001CE1 loc_100001CE1:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+52C↑j
__text:0000000100001CE1                 jmp     loc_100001CEB
__text:0000000100001CE6 ; ---------------------------------------------------------------------------
__text:0000000100001CE6
__text:0000000100001CE6 loc_100001CE6:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+4E1↑j
__text:0000000100001CE6                 jmp     loc_100001E42
__text:0000000100001CEB ; ---------------------------------------------------------------------------
__text:0000000100001CEB
__text:0000000100001CEB loc_100001CEB:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+23C↑j
__text:0000000100001CEB                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100001CE1↑j
__text:0000000100001CEB                 mov     rax, [rbp+var_210]
__text:0000000100001CF2                 mov     rcx, [rbp+var_208]
__text:0000000100001CF9                 sub     rax, rcx
__text:0000000100001CFC                 mov     [rbp+var_240], rax
__text:0000000100001D03                 cmp     [rbp+var_240], 0
__text:0000000100001D0E                 jle     loc_100001DEE
__text:0000000100001D14                 mov     rax, [rbp+var_1F8]
__text:0000000100001D1B                 mov     rcx, [rbp+var_208]
__text:0000000100001D22                 mov     rdx, [rbp+var_240]
__text:0000000100001D29                 mov     [rbp+var_160], rax
__text:0000000100001D30                 mov     [rbp+var_168], rcx
__text:0000000100001D37                 mov     [rbp+var_170], rdx
__text:0000000100001D3E                 mov     rax, [rbp+var_160]
__text:0000000100001D45                 mov     rcx, [rax]
__text:0000000100001D48                 mov     rcx, [rcx+60h]
__text:0000000100001D4C                 mov     rsi, [rbp+var_168]
__text:0000000100001D53                 mov     rdx, [rbp+var_170]
__text:0000000100001D5A                 mov     rdi, rax
__text:0000000100001D5D                 call    rcx
__text:0000000100001D5F                 cmp     rax, [rbp+var_240]
__text:0000000100001D66                 jz      loc_100001DE9
__text:0000000100001D6C                 lea     rax, [rbp+var_288]
__text:0000000100001D73                 lea     rcx, [rbp+var_198]
__text:0000000100001D7A                 mov     [rbp+var_188], rcx
__text:0000000100001D81                 mov     [rbp+var_190], 0FFFFFFFFFFFFFFFFh
__text:0000000100001D8C                 mov     rcx, [rbp+var_188]
__text:0000000100001D93                 mov     rdx, [rbp+var_190]
__text:0000000100001D9A                 mov     [rbp+var_178], rcx
__text:0000000100001DA1                 mov     [rbp+var_180], rdx
__text:0000000100001DA8                 mov     rcx, [rbp+var_178]
__text:0000000100001DAF                 mov     qword ptr [rcx], 0
__text:0000000100001DB6                 mov     rcx, [rbp+var_198]
__text:0000000100001DBD                 mov     [rbp+var_288], rcx
__text:0000000100001DC4                 mov     [rbp+var_1A0], rax
__text:0000000100001DCB                 mov     [rbp+var_1F8], 0
__text:0000000100001DD6                 mov     rax, [rbp+var_1F8]
__text:0000000100001DDD                 mov     [rbp+var_1F0], rax
__text:0000000100001DE4                 jmp     loc_100001E32
__text:0000000100001DE9 ; ---------------------------------------------------------------------------
__text:0000000100001DE9
__text:0000000100001DE9 loc_100001DE9:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+5B6↑j
__text:0000000100001DE9                 jmp     $+5
__text:0000000100001DEE ; ---------------------------------------------------------------------------
__text:0000000100001DEE
__text:0000000100001DEE loc_100001DEE:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+55E↑j
__text:0000000100001DEE                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100001DE9↑j
__text:0000000100001DEE                 mov     rax, [rbp+var_218]
__text:0000000100001DF5                 mov     [rbp+var_1A8], rax
__text:0000000100001DFC                 mov     [rbp+var_1B0], 0
__text:0000000100001E07                 mov     rax, [rbp+var_1A8]
__text:0000000100001E0E                 mov     rcx, [rax+18h]
__text:0000000100001E12                 mov     [rbp+var_1B8], rcx
__text:0000000100001E19                 mov     rcx, [rbp+var_1B0]
__text:0000000100001E20                 mov     [rax+18h], rcx
__text:0000000100001E24                 mov     rax, [rbp+var_1F8]
__text:0000000100001E2B                 mov     [rbp+var_1F0], rax
__text:0000000100001E32
__text:0000000100001E32 loc_100001E32:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+B8↑j
__text:0000000100001E32                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+227↑j ...
__text:0000000100001E32                 mov     rax, [rbp+var_1F0]
__text:0000000100001E39                 add     rsp, 2D0h
__text:0000000100001E40                 pop     rbp
__text:0000000100001E41                 retn
__text:0000000100001E42 ; ---------------------------------------------------------------------------
__text:0000000100001E42
__text:0000000100001E42 loc_100001E42:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100001CE6↑j
__text:0000000100001E42                 mov     rdi, [rbp+var_268]
__text:0000000100001E49                 call    __Unwind_Resume
__text:0000000100001E4E ; ---------------------------------------------------------------------------
__text:0000000100001E4E                 mov     ecx, edx
__text:0000000100001E50                 mov     rdi, rax
__text:0000000100001E53                 mov     [rbp+var_2CC], ecx
__text:0000000100001E59                 call    ___clang_call_terminate
__text:0000000100001E5E ; ---------------------------------------------------------------------------
__text:0000000100001E5E
__text:0000000100001E5E loc_100001E5E:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+526↑j
__text:0000000100001E5E                 xchg    ax, ax
__text:0000000100001E5E __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ endp ; sp-analysis failed
__text:0000000100001E5E
__text:0000000100001E60
__text:0000000100001E60 ; =============== S U B R O U T I N E =======================================
__text:0000000100001E60
__text:0000000100001E60 ; Attributes: bp-based frame
__text:0000000100001E60
__text:0000000100001E60 ; void std::__1::__sort<std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &, std::__1::pair<int, int>*>(std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &)
__text:0000000100001E60 __ZNSt3__16__sortIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T_ proc near
__text:0000000100001E60                                         ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1712↓p
__text:0000000100001E60                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1756↓p
__text:0000000100001E60                                         ; DATA XREF: ...
__text:0000000100001E60
__text:0000000100001E60 var_638         = qword ptr -638h
__text:0000000100001E60 var_62A         = byte ptr -62Ah
__text:0000000100001E60 var_629         = byte ptr -629h
__text:0000000100001E60 var_628         = byte ptr -628h
__text:0000000100001E60 var_627         = byte ptr -627h
__text:0000000100001E60 var_626         = byte ptr -626h
__text:0000000100001E60 var_625         = byte ptr -625h
__text:0000000100001E60 var_624         = byte ptr -624h
__text:0000000100001E60 var_623         = byte ptr -623h
__text:0000000100001E60 var_622         = byte ptr -622h
__text:0000000100001E60 var_621         = byte ptr -621h
__text:0000000100001E60 var_620         = byte ptr -620h
__text:0000000100001E60 var_61F         = byte ptr -61Fh
__text:0000000100001E60 var_61E         = byte ptr -61Eh
__text:0000000100001E60 var_61D         = byte ptr -61Dh
__text:0000000100001E60 var_61C         = byte ptr -61Ch
__text:0000000100001E60 var_61B         = byte ptr -61Bh
__text:0000000100001E60 var_61A         = byte ptr -61Ah
__text:0000000100001E60 var_619         = byte ptr -619h
__text:0000000100001E60 var_618         = qword ptr -618h
__text:0000000100001E60 var_610         = qword ptr -610h
__text:0000000100001E60 var_608         = qword ptr -608h
__text:0000000100001E60 var_5FC         = dword ptr -5FCh
__text:0000000100001E60 var_5F8         = qword ptr -5F8h
__text:0000000100001E60 var_5F0         = qword ptr -5F0h
__text:0000000100001E60 var_5E4         = dword ptr -5E4h
__text:0000000100001E60 var_5E0         = qword ptr -5E0h
__text:0000000100001E60 var_5D4         = dword ptr -5D4h
__text:0000000100001E60 var_5D0         = qword ptr -5D0h
__text:0000000100001E60 var_5C2         = byte ptr -5C2h
__text:0000000100001E60 var_5C1         = byte ptr -5C1h
__text:0000000100001E60 var_5C0         = qword ptr -5C0h
__text:0000000100001E60 var_5B8         = qword ptr -5B8h
__text:0000000100001E60 var_5A9         = byte ptr -5A9h
__text:0000000100001E60 var_5A8         = qword ptr -5A8h
__text:0000000100001E60 var_5A0         = qword ptr -5A0h
__text:0000000100001E60 var_598         = qword ptr -598h
__text:0000000100001E60 var_58C         = dword ptr -58Ch
__text:0000000100001E60 var_588         = qword ptr -588h
__text:0000000100001E60 var_580         = qword ptr -580h
__text:0000000100001E60 var_578         = qword ptr -578h
__text:0000000100001E60 var_570         = qword ptr -570h
__text:0000000100001E60 var_568         = qword ptr -568h
__text:0000000100001E60 var_560         = qword ptr -560h
__text:0000000100001E60 var_558         = qword ptr -558h
__text:0000000100001E60 var_550         = qword ptr -550h
__text:0000000100001E60 var_548         = qword ptr -548h
__text:0000000100001E60 var_540         = qword ptr -540h
__text:0000000100001E60 var_538         = qword ptr -538h
__text:0000000100001E60 var_530         = qword ptr -530h
__text:0000000100001E60 var_528         = qword ptr -528h
__text:0000000100001E60 var_520         = qword ptr -520h
__text:0000000100001E60 var_518         = qword ptr -518h
__text:0000000100001E60 var_510         = qword ptr -510h
__text:0000000100001E60 var_508         = qword ptr -508h
__text:0000000100001E60 var_500         = qword ptr -500h
__text:0000000100001E60 var_4F4         = dword ptr -4F4h
__text:0000000100001E60 var_4F0         = qword ptr -4F0h
__text:0000000100001E60 var_4E8         = qword ptr -4E8h
__text:0000000100001E60 var_4E0         = qword ptr -4E0h
__text:0000000100001E60 var_4D8         = qword ptr -4D8h
__text:0000000100001E60 var_4D0         = qword ptr -4D0h
__text:0000000100001E60 var_4C8         = qword ptr -4C8h
__text:0000000100001E60 var_4C0         = qword ptr -4C0h
__text:0000000100001E60 var_4B4         = dword ptr -4B4h
__text:0000000100001E60 var_4B0         = qword ptr -4B0h
__text:0000000100001E60 var_4A8         = qword ptr -4A8h
__text:0000000100001E60 var_4A0         = qword ptr -4A0h
__text:0000000100001E60 var_498         = qword ptr -498h
__text:0000000100001E60 var_490         = qword ptr -490h
__text:0000000100001E60 var_488         = qword ptr -488h
__text:0000000100001E60 var_480         = qword ptr -480h
__text:0000000100001E60 var_478         = qword ptr -478h
__text:0000000100001E60 var_470         = qword ptr -470h
__text:0000000100001E60 var_468         = qword ptr -468h
__text:0000000100001E60 var_460         = qword ptr -460h
__text:0000000100001E60 var_458         = qword ptr -458h
__text:0000000100001E60 var_450         = qword ptr -450h
__text:0000000100001E60 var_448         = qword ptr -448h
__text:0000000100001E60 var_440         = qword ptr -440h
__text:0000000100001E60 var_438         = qword ptr -438h
__text:0000000100001E60 var_430         = qword ptr -430h
__text:0000000100001E60 var_428         = qword ptr -428h
__text:0000000100001E60 var_420         = qword ptr -420h
__text:0000000100001E60 var_418         = qword ptr -418h
__text:0000000100001E60 var_410         = qword ptr -410h
__text:0000000100001E60 var_408         = qword ptr -408h
__text:0000000100001E60 var_400         = qword ptr -400h
__text:0000000100001E60 var_3F8         = qword ptr -3F8h
__text:0000000100001E60 var_3F0         = qword ptr -3F0h
__text:0000000100001E60 var_3E8         = qword ptr -3E8h
__text:0000000100001E60 var_3DC         = dword ptr -3DCh
__text:0000000100001E60 var_3D8         = qword ptr -3D8h
__text:0000000100001E60 var_3D0         = qword ptr -3D0h
__text:0000000100001E60 var_3C8         = qword ptr -3C8h
__text:0000000100001E60 var_3C0         = qword ptr -3C0h
__text:0000000100001E60 var_3B8         = qword ptr -3B8h
__text:0000000100001E60 var_3B0         = qword ptr -3B0h
__text:0000000100001E60 var_3A8         = qword ptr -3A8h
__text:0000000100001E60 var_39C         = dword ptr -39Ch
__text:0000000100001E60 var_398         = qword ptr -398h
__text:0000000100001E60 var_390         = qword ptr -390h
__text:0000000100001E60 var_388         = qword ptr -388h
__text:0000000100001E60 var_380         = qword ptr -380h
__text:0000000100001E60 var_378         = qword ptr -378h
__text:0000000100001E60 var_370         = qword ptr -370h
__text:0000000100001E60 var_368         = qword ptr -368h
__text:0000000100001E60 var_360         = qword ptr -360h
__text:0000000100001E60 var_358         = qword ptr -358h
__text:0000000100001E60 var_350         = qword ptr -350h
__text:0000000100001E60 var_348         = qword ptr -348h
__text:0000000100001E60 var_340         = qword ptr -340h
__text:0000000100001E60 var_338         = qword ptr -338h
__text:0000000100001E60 var_330         = qword ptr -330h
__text:0000000100001E60 var_328         = qword ptr -328h
__text:0000000100001E60 var_320         = qword ptr -320h
__text:0000000100001E60 var_314         = dword ptr -314h
__text:0000000100001E60 var_310         = qword ptr -310h
__text:0000000100001E60 var_308         = qword ptr -308h
__text:0000000100001E60 var_300         = qword ptr -300h
__text:0000000100001E60 var_2F8         = qword ptr -2F8h
__text:0000000100001E60 var_2F0         = qword ptr -2F0h
__text:0000000100001E60 var_2E8         = qword ptr -2E8h
__text:0000000100001E60 var_2E0         = qword ptr -2E0h
__text:0000000100001E60 var_2D4         = dword ptr -2D4h
__text:0000000100001E60 var_2D0         = qword ptr -2D0h
__text:0000000100001E60 var_2C8         = qword ptr -2C8h
__text:0000000100001E60 var_2C0         = qword ptr -2C0h
__text:0000000100001E60 var_2B8         = qword ptr -2B8h
__text:0000000100001E60 var_2B0         = qword ptr -2B0h
__text:0000000100001E60 var_2A8         = qword ptr -2A8h
__text:0000000100001E60 var_2A0         = qword ptr -2A0h
__text:0000000100001E60 var_298         = qword ptr -298h
__text:0000000100001E60 var_290         = qword ptr -290h
__text:0000000100001E60 var_288         = qword ptr -288h
__text:0000000100001E60 var_280         = qword ptr -280h
__text:0000000100001E60 var_278         = qword ptr -278h
__text:0000000100001E60 var_270         = qword ptr -270h
__text:0000000100001E60 var_268         = qword ptr -268h
__text:0000000100001E60 var_260         = qword ptr -260h
__text:0000000100001E60 var_258         = qword ptr -258h
__text:0000000100001E60 var_250         = qword ptr -250h
__text:0000000100001E60 var_248         = qword ptr -248h
__text:0000000100001E60 var_240         = qword ptr -240h
__text:0000000100001E60 var_238         = qword ptr -238h
__text:0000000100001E60 var_230         = qword ptr -230h
__text:0000000100001E60 var_224         = dword ptr -224h
__text:0000000100001E60 var_220         = qword ptr -220h
__text:0000000100001E60 var_218         = qword ptr -218h
__text:0000000100001E60 var_210         = qword ptr -210h
__text:0000000100001E60 var_208         = qword ptr -208h
__text:0000000100001E60 var_200         = qword ptr -200h
__text:0000000100001E60 var_1F8         = qword ptr -1F8h
__text:0000000100001E60 var_1F0         = qword ptr -1F0h
__text:0000000100001E60 var_1E4         = dword ptr -1E4h
__text:0000000100001E60 var_1E0         = qword ptr -1E0h
__text:0000000100001E60 var_1D8         = qword ptr -1D8h
__text:0000000100001E60 var_1D0         = qword ptr -1D0h
__text:0000000100001E60 var_1C8         = qword ptr -1C8h
__text:0000000100001E60 var_1C0         = qword ptr -1C0h
__text:0000000100001E60 var_1B8         = qword ptr -1B8h
__text:0000000100001E60 var_1B0         = qword ptr -1B0h
__text:0000000100001E60 var_1A8         = qword ptr -1A8h
__text:0000000100001E60 var_1A0         = qword ptr -1A0h
__text:0000000100001E60 var_198         = qword ptr -198h
__text:0000000100001E60 var_190         = qword ptr -190h
__text:0000000100001E60 var_188         = qword ptr -188h
__text:0000000100001E60 var_180         = qword ptr -180h
__text:0000000100001E60 var_178         = qword ptr -178h
__text:0000000100001E60 var_170         = qword ptr -170h
__text:0000000100001E60 var_168         = qword ptr -168h
__text:0000000100001E60 var_15C         = dword ptr -15Ch
__text:0000000100001E60 var_158         = qword ptr -158h
__text:0000000100001E60 var_150         = qword ptr -150h
__text:0000000100001E60 var_148         = qword ptr -148h
__text:0000000100001E60 var_140         = qword ptr -140h
__text:0000000100001E60 var_138         = qword ptr -138h
__text:0000000100001E60 var_130         = qword ptr -130h
__text:0000000100001E60 var_128         = qword ptr -128h
__text:0000000100001E60 var_11C         = dword ptr -11Ch
__text:0000000100001E60 var_118         = qword ptr -118h
__text:0000000100001E60 var_110         = qword ptr -110h
__text:0000000100001E60 var_108         = qword ptr -108h
__text:0000000100001E60 var_100         = qword ptr -100h
__text:0000000100001E60 var_F8          = qword ptr -0F8h
__text:0000000100001E60 var_F0          = qword ptr -0F0h
__text:0000000100001E60 var_E8          = qword ptr -0E8h
__text:0000000100001E60 var_E0          = qword ptr -0E0h
__text:0000000100001E60 var_D8          = qword ptr -0D8h
__text:0000000100001E60 var_D0          = qword ptr -0D0h
__text:0000000100001E60 var_C8          = qword ptr -0C8h
__text:0000000100001E60 var_C0          = qword ptr -0C0h
__text:0000000100001E60 var_B8          = qword ptr -0B8h
__text:0000000100001E60 var_B0          = qword ptr -0B0h
__text:0000000100001E60 var_A8          = qword ptr -0A8h
__text:0000000100001E60 var_A0          = qword ptr -0A0h
__text:0000000100001E60 var_98          = qword ptr -98h
__text:0000000100001E60 var_90          = qword ptr -90h
__text:0000000100001E60 var_88          = qword ptr -88h
__text:0000000100001E60 var_80          = qword ptr -80h
__text:0000000100001E60 var_78          = qword ptr -78h
__text:0000000100001E60 var_6C          = dword ptr -6Ch
__text:0000000100001E60 var_68          = qword ptr -68h
__text:0000000100001E60 var_60          = qword ptr -60h
__text:0000000100001E60 var_58          = qword ptr -58h
__text:0000000100001E60 var_50          = qword ptr -50h
__text:0000000100001E60 var_48          = qword ptr -48h
__text:0000000100001E60 var_40          = qword ptr -40h
__text:0000000100001E60 var_38          = qword ptr -38h
__text:0000000100001E60 var_2C          = dword ptr -2Ch
__text:0000000100001E60 var_28          = qword ptr -28h
__text:0000000100001E60 var_20          = qword ptr -20h
__text:0000000100001E60 var_18          = qword ptr -18h
__text:0000000100001E60 var_10          = qword ptr -10h
__text:0000000100001E60 var_8           = qword ptr -8
__text:0000000100001E60
__text:0000000100001E60                 push    rbp
__text:0000000100001E61                 mov     rbp, rsp
__text:0000000100001E64                 sub     rsp, 640h
__text:0000000100001E6B                 mov     [rbp+var_558], rdi
__text:0000000100001E72                 mov     [rbp+var_560], rsi
__text:0000000100001E79                 mov     [rbp+var_568], rdx
__text:0000000100001E80                 mov     [rbp+var_570], 6
__text:0000000100001E8B
__text:0000000100001E8B loc_100001E8B:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+168E↓j
__text:0000000100001E8B                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+16BB↓j ...
__text:0000000100001E8B                 jmp     $+5
__text:0000000100001E90 ; ---------------------------------------------------------------------------
__text:0000000100001E90
__text:0000000100001E90 loc_100001E90:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100001E8B↑j
__text:0000000100001E90                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+D71↓j
__text:0000000100001E90                 mov     rax, [rbp+var_560]
__text:0000000100001E97                 mov     rcx, [rbp+var_558]
__text:0000000100001E9E                 sub     rax, rcx
__text:0000000100001EA1                 sar     rax, 3
__text:0000000100001EA5                 mov     rcx, rax
__text:0000000100001EA8                 sub     rcx, 5          ; switch 6 cases
__text:0000000100001EAC                 mov     [rbp+var_578], rax
__text:0000000100001EB3                 mov     [rbp+var_5B8], rax
__text:0000000100001EBA                 mov     [rbp+var_5C0], rcx
__text:0000000100001EC1                 ja      def_100001EDC   ; jumptable 0000000100001EDC default case
__text:0000000100001EC7                 lea     rax, jpt_100001EDC
__text:0000000100001ECE                 mov     rcx, [rbp+var_5B8]
__text:0000000100001ED5                 movsxd  rdx, ds:(jpt_100001EDC - 1000035D8h)[rax+rcx*4]
__text:0000000100001ED9                 add     rdx, rax
__text:0000000100001EDC                 jmp     rdx             ; switch jump
__text:0000000100001EDE ; ---------------------------------------------------------------------------
__text:0000000100001EDE
__text:0000000100001EDE loc_100001EDE:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+7C↑j
__text:0000000100001EDE                                         ; DATA XREF: __text:jpt_100001EDC↓o
__text:0000000100001EDE                 jmp     loc_1000035CE   ; jumptable 0000000100001EDC cases 0,1
__text:0000000100001EE3 ; ---------------------------------------------------------------------------
__text:0000000100001EE3
__text:0000000100001EE3 loc_100001EE3:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+7C↑j
__text:0000000100001EE3                                         ; DATA XREF: __text:jpt_100001EDC↓o
__text:0000000100001EE3                 mov     al, 1           ; jumptable 0000000100001EDC case 2
__text:0000000100001EE5                 mov     rcx, [rbp+var_568]
__text:0000000100001EEC                 mov     rdx, [rbp+var_560]
__text:0000000100001EF3                 add     rdx, 0FFFFFFFFFFFFFFF8h
__text:0000000100001EFA                 mov     [rbp+var_560], rdx
__text:0000000100001F01                 mov     rsi, [rbp+var_558]
__text:0000000100001F08                 mov     [rbp+var_540], rcx
__text:0000000100001F0F                 mov     [rbp+var_548], rdx
__text:0000000100001F16                 mov     [rbp+var_550], rsi
__text:0000000100001F1D                 mov     rcx, [rbp+var_548]
__text:0000000100001F24                 mov     rdx, [rbp+var_550]
__text:0000000100001F2B                 mov     [rbp+var_530], rcx
__text:0000000100001F32                 mov     [rbp+var_538], rdx
__text:0000000100001F39                 mov     rcx, [rbp+var_530]
__text:0000000100001F40                 mov     edi, [rcx]
__text:0000000100001F42                 mov     rcx, [rbp+var_538]
__text:0000000100001F49                 cmp     edi, [rcx]
__text:0000000100001F4B                 mov     [rbp+var_5C1], al
__text:0000000100001F51                 jl      loc_100001FA0
__text:0000000100001F57                 mov     al, 0
__text:0000000100001F59                 mov     rcx, [rbp+var_538]
__text:0000000100001F60                 mov     edx, [rcx]
__text:0000000100001F62                 mov     rcx, [rbp+var_530]
__text:0000000100001F69                 cmp     edx, [rcx]
__text:0000000100001F6B                 mov     [rbp+var_5C2], al
__text:0000000100001F71                 jl      loc_100001F94
__text:0000000100001F77                 mov     rax, [rbp+var_530]
__text:0000000100001F7E                 mov     ecx, [rax+4]
__text:0000000100001F81                 mov     rax, [rbp+var_538]
__text:0000000100001F88                 cmp     ecx, [rax+4]
__text:0000000100001F8B                 setl    dl
__text:0000000100001F8E                 mov     [rbp+var_5C2], dl
__text:0000000100001F94
__text:0000000100001F94 loc_100001F94:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+111↑j
__text:0000000100001F94                 mov     al, [rbp+var_5C2]
__text:0000000100001F9A                 mov     [rbp+var_5C1], al
__text:0000000100001FA0
__text:0000000100001FA0 loc_100001FA0:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+F1↑j
__text:0000000100001FA0                 mov     al, [rbp+var_5C1]
__text:0000000100001FA6                 test    al, 1
__text:0000000100001FA8                 jnz     loc_100001FB3
__text:0000000100001FAE                 jmp     loc_100002128
__text:0000000100001FB3 ; ---------------------------------------------------------------------------
__text:0000000100001FB3
__text:0000000100001FB3 loc_100001FB3:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+148↑j
__text:0000000100001FB3                 lea     rax, [rbp+var_4B4]
__text:0000000100001FBA                 lea     rcx, [rbp+var_4F4]
__text:0000000100001FC1                 mov     rdx, [rbp+var_558]
__text:0000000100001FC8                 mov     rsi, [rbp+var_560]
__text:0000000100001FCF                 mov     [rbp+var_520], rdx
__text:0000000100001FD6                 mov     [rbp+var_528], rsi
__text:0000000100001FDD                 mov     rdx, [rbp+var_520]
__text:0000000100001FE4                 mov     rsi, [rbp+var_528]
__text:0000000100001FEB                 mov     [rbp+var_510], rdx
__text:0000000100001FF2                 mov     [rbp+var_518], rsi
__text:0000000100001FF9                 mov     rdx, [rbp+var_510]
__text:0000000100002000                 mov     rsi, [rbp+var_518]
__text:0000000100002007                 mov     [rbp+var_500], rdx
__text:000000010000200E                 mov     [rbp+var_508], rsi
__text:0000000100002015                 mov     rsi, [rbp+var_500]
__text:000000010000201C                 mov     rdi, [rbp+var_508]
__text:0000000100002023                 mov     [rbp+var_4E8], rsi
__text:000000010000202A                 mov     [rbp+var_4F0], rdi
__text:0000000100002031                 mov     rsi, [rbp+var_4E8]
__text:0000000100002038                 mov     [rbp+var_4E0], rsi
__text:000000010000203F                 mov     rsi, [rbp+var_4E0]
__text:0000000100002046                 mov     r8d, [rsi]
__text:0000000100002049                 mov     [rbp+var_4F4], r8d
__text:0000000100002050                 mov     rsi, [rbp+var_4F0]
__text:0000000100002057                 mov     [rbp+var_4D0], rsi
__text:000000010000205E                 mov     rsi, [rbp+var_4D0]
__text:0000000100002065                 mov     r8d, [rsi]
__text:0000000100002068                 mov     rsi, [rbp+var_4E8]
__text:000000010000206F                 mov     [rsi], r8d
__text:0000000100002072                 mov     [rbp+var_4D8], rcx
__text:0000000100002079                 mov     rcx, [rbp+var_4D8]
__text:0000000100002080                 mov     r8d, [rcx]
__text:0000000100002083                 mov     rcx, [rbp+var_4F0]
__text:000000010000208A                 mov     [rcx], r8d
__text:000000010000208D                 add     rdx, 4
__text:0000000100002094                 mov     rcx, [rbp+var_518]
__text:000000010000209B                 add     rcx, 4
__text:00000001000020A2                 mov     [rbp+var_4C0], rdx
__text:00000001000020A9                 mov     [rbp+var_4C8], rcx
__text:00000001000020B0                 mov     rcx, [rbp+var_4C0]
__text:00000001000020B7                 mov     rdx, [rbp+var_4C8]
__text:00000001000020BE                 mov     [rbp+var_4A8], rcx
__text:00000001000020C5                 mov     [rbp+var_4B0], rdx
__text:00000001000020CC                 mov     rcx, [rbp+var_4A8]
__text:00000001000020D3                 mov     [rbp+var_4A0], rcx
__text:00000001000020DA                 mov     rcx, [rbp+var_4A0]
__text:00000001000020E1                 mov     r8d, [rcx]
__text:00000001000020E4                 mov     [rbp+var_4B4], r8d
__text:00000001000020EB                 mov     rcx, [rbp+var_4B0]
__text:00000001000020F2                 mov     [rbp+var_490], rcx
__text:00000001000020F9                 mov     rcx, [rbp+var_490]
__text:0000000100002100                 mov     r8d, [rcx]
__text:0000000100002103                 mov     rcx, [rbp+var_4A8]
__text:000000010000210A                 mov     [rcx], r8d
__text:000000010000210D                 mov     [rbp+var_498], rax
__text:0000000100002114                 mov     rax, [rbp+var_498]
__text:000000010000211B                 mov     r8d, [rax]
__text:000000010000211E                 mov     rax, [rbp+var_4B0]
__text:0000000100002125                 mov     [rax], r8d
__text:0000000100002128
__text:0000000100002128 loc_100002128:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+14E↑j
__text:0000000100002128                 jmp     loc_1000035CE
__text:000000010000212D ; ---------------------------------------------------------------------------
__text:000000010000212D
__text:000000010000212D loc_10000212D:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+7C↑j
__text:000000010000212D                                         ; DATA XREF: __text:jpt_100001EDC↓o
__text:000000010000212D                 mov     rdi, [rbp+var_558] ; jumptable 0000000100001EDC case 3
__text:0000000100002134                 mov     rax, [rbp+var_558]
__text:000000010000213B                 add     rax, 8
__text:0000000100002141                 mov     rcx, [rbp+var_560]
__text:0000000100002148                 add     rcx, 0FFFFFFFFFFFFFFF8h
__text:000000010000214F                 mov     [rbp+var_560], rcx
__text:0000000100002156                 mov     rdx, [rbp+var_568]
__text:000000010000215D                 mov     rsi, rax
__text:0000000100002160                 mov     [rbp+var_5D0], rdx
__text:0000000100002167                 mov     rdx, rcx
__text:000000010000216A                 mov     rcx, [rbp+var_5D0]
__text:0000000100002171                 call    j___ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T_ ; std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:0000000100002176                 mov     [rbp+var_5D4], eax
__text:000000010000217C                 jmp     loc_1000035CE
__text:0000000100002181 ; ---------------------------------------------------------------------------
__text:0000000100002181
__text:0000000100002181 loc_100002181:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+7C↑j
__text:0000000100002181                                         ; DATA XREF: __text:jpt_100001EDC↓o
__text:0000000100002181                 mov     rdi, [rbp+var_558] ; jumptable 0000000100001EDC case 4
__text:0000000100002188                 mov     rax, [rbp+var_558]
__text:000000010000218F                 add     rax, 8
__text:0000000100002195                 mov     rcx, [rbp+var_558]
__text:000000010000219C                 add     rcx, 10h
__text:00000001000021A3                 mov     rdx, [rbp+var_560]
__text:00000001000021AA                 add     rdx, 0FFFFFFFFFFFFFFF8h
__text:00000001000021B1                 mov     [rbp+var_560], rdx
__text:00000001000021B8                 mov     r8, [rbp+var_568]
__text:00000001000021BF                 mov     rsi, rax
__text:00000001000021C2                 mov     [rbp+var_5E0], rdx
__text:00000001000021C9                 mov     rdx, rcx
__text:00000001000021CC                 mov     rcx, [rbp+var_5E0]
__text:00000001000021D3                 call    j___ZNSt3__17__sort4IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_T_ ; std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:00000001000021D8                 mov     [rbp+var_5E4], eax
__text:00000001000021DE                 jmp     loc_1000035CE
__text:00000001000021E3 ; ---------------------------------------------------------------------------
__text:00000001000021E3
__text:00000001000021E3 loc_1000021E3:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+7C↑j
__text:00000001000021E3                                         ; DATA XREF: __text:jpt_100001EDC↓o
__text:00000001000021E3                 mov     rdi, [rbp+var_558] ; jumptable 0000000100001EDC case 5
__text:00000001000021EA                 mov     rax, [rbp+var_558]
__text:00000001000021F1                 add     rax, 8
__text:00000001000021F7                 mov     rcx, [rbp+var_558]
__text:00000001000021FE                 add     rcx, 10h
__text:0000000100002205                 mov     rdx, [rbp+var_558]
__text:000000010000220C                 add     rdx, 18h
__text:0000000100002213                 mov     rsi, [rbp+var_560]
__text:000000010000221A                 add     rsi, 0FFFFFFFFFFFFFFF8h
__text:0000000100002221                 mov     [rbp+var_560], rsi
__text:0000000100002228                 mov     r9, [rbp+var_568]
__text:000000010000222F                 mov     [rbp+var_5F0], rsi
__text:0000000100002236                 mov     rsi, rax
__text:0000000100002239                 mov     [rbp+var_5F8], rdx
__text:0000000100002240                 mov     rdx, rcx
__text:0000000100002243                 mov     rcx, [rbp+var_5F8]
__text:000000010000224A                 mov     r8, [rbp+var_5F0]
__text:0000000100002251                 call    j___ZNSt3__17__sort5IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ ; std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:0000000100002256                 mov     [rbp+var_5FC], eax
__text:000000010000225C                 jmp     loc_1000035CE
__text:0000000100002261 ; ---------------------------------------------------------------------------
__text:0000000100002261
__text:0000000100002261 def_100001EDC:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+61↑j
__text:0000000100002261                 cmp     [rbp+var_578], 6 ; jumptable 0000000100001EDC default case
__text:000000010000226C                 jg      loc_100002291
__text:0000000100002272                 mov     rdi, [rbp+var_558]
__text:0000000100002279                 mov     rsi, [rbp+var_560]
__text:0000000100002280                 mov     rdx, [rbp+var_568]
__text:0000000100002287                 call    j___ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T_ ; std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:000000010000228C                 jmp     loc_1000035CE
__text:0000000100002291 ; ---------------------------------------------------------------------------
__text:0000000100002291
__text:0000000100002291 loc_100002291:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+40C↑j
__text:0000000100002291                 mov     rax, [rbp+var_558]
__text:0000000100002298                 mov     [rbp+var_580], rax
__text:000000010000229F                 mov     rax, [rbp+var_560]
__text:00000001000022A6                 mov     [rbp+var_588], rax
__text:00000001000022AD                 mov     rax, [rbp+var_588]
__text:00000001000022B4                 add     rax, 0FFFFFFFFFFFFFFF8h
__text:00000001000022BA                 mov     [rbp+var_588], rax
__text:00000001000022C1                 cmp     [rbp+var_578], 3E8h
__text:00000001000022CC                 jl      loc_100002396
__text:00000001000022D2                 mov     rax, 2
__text:00000001000022DC                 mov     rcx, [rbp+var_578]
__text:00000001000022E3                 mov     [rbp+var_608], rax
__text:00000001000022EA                 mov     rax, rcx
__text:00000001000022ED                 cqo
__text:00000001000022EF                 mov     rcx, [rbp+var_608]
__text:00000001000022F6                 idiv    rcx
__text:00000001000022F9                 mov     [rbp+var_598], rax
__text:0000000100002300                 mov     rax, [rbp+var_598]
__text:0000000100002307                 mov     rdx, [rbp+var_580]
__text:000000010000230E                 shl     rax, 3
__text:0000000100002312                 add     rdx, rax
__text:0000000100002315                 mov     [rbp+var_580], rdx
__text:000000010000231C                 mov     rax, [rbp+var_598]
__text:0000000100002323                 cqo
__text:0000000100002325                 idiv    rcx
__text:0000000100002328                 mov     [rbp+var_598], rax
__text:000000010000232F                 mov     rdi, [rbp+var_558]
__text:0000000100002336                 mov     rax, [rbp+var_558]
__text:000000010000233D                 mov     rdx, [rbp+var_598]
__text:0000000100002344                 shl     rdx, 3
__text:0000000100002348                 add     rax, rdx
__text:000000010000234B                 mov     rdx, [rbp+var_580]
__text:0000000100002352                 mov     rsi, [rbp+var_580]
__text:0000000100002359                 mov     r8, [rbp+var_598]
__text:0000000100002360                 shl     r8, 3
__text:0000000100002364                 add     rsi, r8
__text:0000000100002367                 mov     r8, [rbp+var_588]
__text:000000010000236E                 mov     r9, [rbp+var_568]
__text:0000000100002375                 mov     [rbp+var_610], rsi
__text:000000010000237C                 mov     rsi, rax
__text:000000010000237F                 mov     rcx, [rbp+var_610]
__text:0000000100002386                 call    j___ZNSt3__17__sort5IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ ; std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:000000010000238B                 mov     [rbp+var_58C], eax
__text:0000000100002391                 jmp     loc_100002407
__text:0000000100002396 ; ---------------------------------------------------------------------------
__text:0000000100002396
__text:0000000100002396 loc_100002396:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+46C↑j
__text:0000000100002396                 mov     rax, 2
__text:00000001000023A0                 mov     rcx, [rbp+var_578]
__text:00000001000023A7                 mov     [rbp+var_618], rax
__text:00000001000023AE                 mov     rax, rcx
__text:00000001000023B1                 cqo
__text:00000001000023B3                 mov     rcx, [rbp+var_618]
__text:00000001000023BA                 idiv    rcx
__text:00000001000023BD                 mov     [rbp+var_598], rax
__text:00000001000023C4                 mov     rax, [rbp+var_598]
__text:00000001000023CB                 mov     rdx, [rbp+var_580]
__text:00000001000023D2                 shl     rax, 3
__text:00000001000023D6                 add     rdx, rax
__text:00000001000023D9                 mov     [rbp+var_580], rdx
__text:00000001000023E0                 mov     rdi, [rbp+var_558]
__text:00000001000023E7                 mov     rsi, [rbp+var_580]
__text:00000001000023EE                 mov     rdx, [rbp+var_588]
__text:00000001000023F5                 mov     rcx, [rbp+var_568]
__text:00000001000023FC                 call    j___ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T_ ; std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:0000000100002401                 mov     [rbp+var_58C], eax
__text:0000000100002407
__text:0000000100002407 loc_100002407:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+531↑j
__text:0000000100002407                 mov     al, 1
__text:0000000100002409                 mov     rcx, [rbp+var_558]
__text:0000000100002410                 mov     [rbp+var_5A0], rcx
__text:0000000100002417                 mov     rcx, [rbp+var_588]
__text:000000010000241E                 mov     [rbp+var_5A8], rcx
__text:0000000100002425                 mov     rcx, [rbp+var_568]
__text:000000010000242C                 mov     rdx, [rbp+var_5A0]
__text:0000000100002433                 mov     rsi, [rbp+var_580]
__text:000000010000243A                 mov     [rbp+var_478], rcx
__text:0000000100002441                 mov     [rbp+var_480], rdx
__text:0000000100002448                 mov     [rbp+var_488], rsi
__text:000000010000244F                 mov     rcx, [rbp+var_480]
__text:0000000100002456                 mov     rdx, [rbp+var_488]
__text:000000010000245D                 mov     [rbp+var_468], rcx
__text:0000000100002464                 mov     [rbp+var_470], rdx
__text:000000010000246B                 mov     rcx, [rbp+var_468]
__text:0000000100002472                 mov     edi, [rcx]
__text:0000000100002474                 mov     rcx, [rbp+var_470]
__text:000000010000247B                 cmp     edi, [rcx]
__text:000000010000247D                 mov     [rbp+var_619], al
__text:0000000100002483                 jl      loc_1000024D2
__text:0000000100002489                 mov     al, 0
__text:000000010000248B                 mov     rcx, [rbp+var_470]
__text:0000000100002492                 mov     edx, [rcx]
__text:0000000100002494                 mov     rcx, [rbp+var_468]
__text:000000010000249B                 cmp     edx, [rcx]
__text:000000010000249D                 mov     [rbp+var_61A], al
__text:00000001000024A3                 jl      loc_1000024C6
__text:00000001000024A9                 mov     rax, [rbp+var_468]
__text:00000001000024B0                 mov     ecx, [rax+4]
__text:00000001000024B3                 mov     rax, [rbp+var_470]
__text:00000001000024BA                 cmp     ecx, [rax+4]
__text:00000001000024BD                 setl    dl
__text:00000001000024C0                 mov     [rbp+var_61A], dl
__text:00000001000024C6
__text:00000001000024C6 loc_1000024C6:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+643↑j
__text:00000001000024C6                 mov     al, [rbp+var_61A]
__text:00000001000024CC                 mov     [rbp+var_619], al
__text:00000001000024D2
__text:00000001000024D2 loc_1000024D2:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+623↑j
__text:00000001000024D2                 mov     al, [rbp+var_619]
__text:00000001000024D8                 test    al, 1
__text:00000001000024DA                 jnz     loc_100002E31
__text:00000001000024E0                 jmp     $+5
__text:00000001000024E5 ; ---------------------------------------------------------------------------
__text:00000001000024E5
__text:00000001000024E5 loc_1000024E5:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+680↑j
__text:00000001000024E5                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100002E27↓j
__text:00000001000024E5                 mov     rax, [rbp+var_5A0]
__text:00000001000024EC                 mov     rcx, [rbp+var_5A8]
__text:00000001000024F3                 add     rcx, 0FFFFFFFFFFFFFFF8h
__text:00000001000024FA                 mov     [rbp+var_5A8], rcx
__text:0000000100002501                 cmp     rax, rcx
__text:0000000100002504                 jnz     loc_100002BD6
__text:000000010000250A                 mov     al, 1
__text:000000010000250C                 mov     rcx, [rbp+var_5A0]
__text:0000000100002513                 add     rcx, 8
__text:000000010000251A                 mov     [rbp+var_5A0], rcx
__text:0000000100002521                 mov     rcx, [rbp+var_560]
__text:0000000100002528                 mov     [rbp+var_5A8], rcx
__text:000000010000252F                 mov     rcx, [rbp+var_568]
__text:0000000100002536                 mov     rdx, [rbp+var_558]
__text:000000010000253D                 mov     rsi, [rbp+var_5A8]
__text:0000000100002544                 add     rsi, 0FFFFFFFFFFFFFFF8h
__text:000000010000254B                 mov     [rbp+var_5A8], rsi
__text:0000000100002552                 mov     [rbp+var_450], rcx
__text:0000000100002559                 mov     [rbp+var_458], rdx
__text:0000000100002560                 mov     [rbp+var_460], rsi
__text:0000000100002567                 mov     rcx, [rbp+var_458]
__text:000000010000256E                 mov     rdx, [rbp+var_460]
__text:0000000100002575                 mov     [rbp+var_440], rcx
__text:000000010000257C                 mov     [rbp+var_448], rdx
__text:0000000100002583                 mov     rcx, [rbp+var_440]
__text:000000010000258A                 mov     edi, [rcx]
__text:000000010000258C                 mov     rcx, [rbp+var_448]
__text:0000000100002593                 cmp     edi, [rcx]
__text:0000000100002595                 mov     [rbp+var_61B], al
__text:000000010000259B                 jl      loc_1000025EA
__text:00000001000025A1                 mov     al, 0
__text:00000001000025A3                 mov     rcx, [rbp+var_448]
__text:00000001000025AA                 mov     edx, [rcx]
__text:00000001000025AC                 mov     rcx, [rbp+var_440]
__text:00000001000025B3                 cmp     edx, [rcx]
__text:00000001000025B5                 mov     [rbp+var_61C], al
__text:00000001000025BB                 jl      loc_1000025DE
__text:00000001000025C1                 mov     rax, [rbp+var_440]
__text:00000001000025C8                 mov     ecx, [rax+4]
__text:00000001000025CB                 mov     rax, [rbp+var_448]
__text:00000001000025D2                 cmp     ecx, [rax+4]
__text:00000001000025D5                 setl    dl
__text:00000001000025D8                 mov     [rbp+var_61C], dl
__text:00000001000025DE
__text:00000001000025DE loc_1000025DE:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+75B↑j
__text:00000001000025DE                 mov     al, [rbp+var_61C]
__text:00000001000025E4                 mov     [rbp+var_61B], al
__text:00000001000025EA
__text:00000001000025EA loc_1000025EA:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+73B↑j
__text:00000001000025EA                 mov     al, [rbp+var_61B]
__text:00000001000025F0                 test    al, 1
__text:00000001000025F2                 jnz     loc_10000282D
__text:00000001000025F8                 jmp     $+5
__text:00000001000025FD ; ---------------------------------------------------------------------------
__text:00000001000025FD
__text:00000001000025FD loc_1000025FD:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+798↑j
__text:00000001000025FD                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+9C3↓j
__text:00000001000025FD                 mov     rax, [rbp+var_5A0]
__text:0000000100002604                 cmp     rax, [rbp+var_5A8]
__text:000000010000260B                 jnz     loc_100002616
__text:0000000100002611                 jmp     loc_1000035CE
__text:0000000100002616 ; ---------------------------------------------------------------------------
__text:0000000100002616
__text:0000000100002616 loc_100002616:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+7AB↑j
__text:0000000100002616                 mov     al, 1
__text:0000000100002618                 mov     rcx, [rbp+var_568]
__text:000000010000261F                 mov     rdx, [rbp+var_558]
__text:0000000100002626                 mov     rsi, [rbp+var_5A0]
__text:000000010000262D                 mov     [rbp+var_428], rcx
__text:0000000100002634                 mov     [rbp+var_430], rdx
__text:000000010000263B                 mov     [rbp+var_438], rsi
__text:0000000100002642                 mov     rcx, [rbp+var_430]
__text:0000000100002649                 mov     rdx, [rbp+var_438]
__text:0000000100002650                 mov     [rbp+var_418], rcx
__text:0000000100002657                 mov     [rbp+var_420], rdx
__text:000000010000265E                 mov     rcx, [rbp+var_418]
__text:0000000100002665                 mov     edi, [rcx]
__text:0000000100002667                 mov     rcx, [rbp+var_420]
__text:000000010000266E                 cmp     edi, [rcx]
__text:0000000100002670                 mov     [rbp+var_61D], al
__text:0000000100002676                 jl      loc_1000026C5
__text:000000010000267C                 mov     al, 0
__text:000000010000267E                 mov     rcx, [rbp+var_420]
__text:0000000100002685                 mov     edx, [rcx]
__text:0000000100002687                 mov     rcx, [rbp+var_418]
__text:000000010000268E                 cmp     edx, [rcx]
__text:0000000100002690                 mov     [rbp+var_61E], al
__text:0000000100002696                 jl      loc_1000026B9
__text:000000010000269C                 mov     rax, [rbp+var_418]
__text:00000001000026A3                 mov     ecx, [rax+4]
__text:00000001000026A6                 mov     rax, [rbp+var_420]
__text:00000001000026AD                 cmp     ecx, [rax+4]
__text:00000001000026B0                 setl    dl
__text:00000001000026B3                 mov     [rbp+var_61E], dl
__text:00000001000026B9
__text:00000001000026B9 loc_1000026B9:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+836↑j
__text:00000001000026B9                 mov     al, [rbp+var_61E]
__text:00000001000026BF                 mov     [rbp+var_61D], al
__text:00000001000026C5
__text:00000001000026C5 loc_1000026C5:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+816↑j
__text:00000001000026C5                 mov     al, [rbp+var_61D]
__text:00000001000026CB                 test    al, 1
__text:00000001000026CD                 jnz     loc_1000026D8
__text:00000001000026D3                 jmp     loc_10000280F
__text:00000001000026D8 ; ---------------------------------------------------------------------------
__text:00000001000026D8
__text:00000001000026D8 loc_1000026D8:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+86D↑j
__text:00000001000026D8                 lea     rax, [rbp+var_2C]
__text:00000001000026DC                 lea     rcx, [rbp+var_6C]
__text:00000001000026E0                 mov     rdx, [rbp+var_5A0]
__text:00000001000026E7                 mov     rsi, [rbp+var_5A8]
__text:00000001000026EE                 mov     [rbp+var_98], rdx
__text:00000001000026F5                 mov     [rbp+var_A0], rsi
__text:00000001000026FC                 mov     rdx, [rbp+var_98]
__text:0000000100002703                 mov     rsi, [rbp+var_A0]
__text:000000010000270A                 mov     [rbp+var_88], rdx
__text:0000000100002711                 mov     [rbp+var_90], rsi
__text:0000000100002718                 mov     rdx, [rbp+var_88]
__text:000000010000271F                 mov     rsi, [rbp+var_90]
__text:0000000100002726                 mov     [rbp+var_78], rdx
__text:000000010000272A                 mov     [rbp+var_80], rsi
__text:000000010000272E                 mov     rsi, [rbp+var_78]
__text:0000000100002732                 mov     rdi, [rbp+var_80]
__text:0000000100002736                 mov     [rbp+var_60], rsi
__text:000000010000273A                 mov     [rbp+var_68], rdi
__text:000000010000273E                 mov     rsi, [rbp+var_60]
__text:0000000100002742                 mov     [rbp+var_58], rsi
__text:0000000100002746                 mov     rsi, [rbp+var_58]
__text:000000010000274A                 mov     r8d, [rsi]
__text:000000010000274D                 mov     [rbp+var_6C], r8d
__text:0000000100002751                 mov     rsi, [rbp+var_68]
__text:0000000100002755                 mov     [rbp+var_48], rsi
__text:0000000100002759                 mov     rsi, [rbp+var_48]
__text:000000010000275D                 mov     r8d, [rsi]
__text:0000000100002760                 mov     rsi, [rbp+var_60]
__text:0000000100002764                 mov     [rsi], r8d
__text:0000000100002767                 mov     [rbp+var_50], rcx
__text:000000010000276B                 mov     rcx, [rbp+var_50]
__text:000000010000276F                 mov     r8d, [rcx]
__text:0000000100002772                 mov     rcx, [rbp+var_68]
__text:0000000100002776                 mov     [rcx], r8d
__text:0000000100002779                 add     rdx, 4
__text:0000000100002780                 mov     rcx, [rbp+var_90]
__text:0000000100002787                 add     rcx, 4
__text:000000010000278E                 mov     [rbp+var_38], rdx
__text:0000000100002792                 mov     [rbp+var_40], rcx
__text:0000000100002796                 mov     rcx, [rbp+var_38]
__text:000000010000279A                 mov     rdx, [rbp+var_40]
__text:000000010000279E                 mov     [rbp+var_20], rcx
__text:00000001000027A2                 mov     [rbp+var_28], rdx
__text:00000001000027A6                 mov     rcx, [rbp+var_20]
__text:00000001000027AA                 mov     [rbp+var_18], rcx
__text:00000001000027AE                 mov     rcx, [rbp+var_18]
__text:00000001000027B2                 mov     r8d, [rcx]
__text:00000001000027B5                 mov     [rbp+var_2C], r8d
__text:00000001000027B9                 mov     rcx, [rbp+var_28]
__text:00000001000027BD                 mov     [rbp+var_8], rcx
__text:00000001000027C1                 mov     rcx, [rbp+var_8]
__text:00000001000027C5                 mov     r8d, [rcx]
__text:00000001000027C8                 mov     rcx, [rbp+var_20]
__text:00000001000027CC                 mov     [rcx], r8d
__text:00000001000027CF                 mov     [rbp+var_10], rax
__text:00000001000027D3                 mov     rax, [rbp+var_10]
__text:00000001000027D7                 mov     r8d, [rax]
__text:00000001000027DA                 mov     rax, [rbp+var_28]
__text:00000001000027DE                 mov     [rax], r8d
__text:00000001000027E1                 mov     r8d, [rbp+var_58C]
__text:00000001000027E8                 add     r8d, 1
__text:00000001000027EF                 mov     [rbp+var_58C], r8d
__text:00000001000027F6                 mov     rax, [rbp+var_5A0]
__text:00000001000027FD                 add     rax, 8
__text:0000000100002803                 mov     [rbp+var_5A0], rax
__text:000000010000280A                 jmp     loc_100002828
__text:000000010000280F ; ---------------------------------------------------------------------------
__text:000000010000280F
__text:000000010000280F loc_10000280F:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+873↑j
__text:000000010000280F                 mov     rax, [rbp+var_5A0]
__text:0000000100002816                 add     rax, 8
__text:000000010000281C                 mov     [rbp+var_5A0], rax
__text:0000000100002823                 jmp     loc_1000025FD
__text:0000000100002828 ; ---------------------------------------------------------------------------
__text:0000000100002828
__text:0000000100002828 loc_100002828:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+9AA↑j
__text:0000000100002828                 jmp     $+5
__text:000000010000282D ; ---------------------------------------------------------------------------
__text:000000010000282D
__text:000000010000282D loc_10000282D:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+792↑j
__text:000000010000282D                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100002828↑j
__text:000000010000282D                 mov     rax, [rbp+var_5A0]
__text:0000000100002834                 cmp     rax, [rbp+var_5A8]
__text:000000010000283B                 jnz     loc_100002846
__text:0000000100002841                 jmp     loc_1000035CE
__text:0000000100002846 ; ---------------------------------------------------------------------------
__text:0000000100002846
__text:0000000100002846 loc_100002846:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+9DB↑j
__text:0000000100002846                 jmp     $+5
__text:000000010000284B ; ---------------------------------------------------------------------------
__text:000000010000284B
__text:000000010000284B loc_10000284B:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100002846↑j
__text:000000010000284B                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+D5E↓j
__text:000000010000284B                 jmp     $+5
__text:0000000100002850 ; ---------------------------------------------------------------------------
__text:0000000100002850
__text:0000000100002850 loc_100002850:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_10000284B↑j
__text:0000000100002850                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+AC8↓j
__text:0000000100002850                 mov     al, 1
__text:0000000100002852                 mov     rcx, [rbp+var_568]
__text:0000000100002859                 mov     rdx, [rbp+var_558]
__text:0000000100002860                 mov     rsi, [rbp+var_5A0]
__text:0000000100002867                 mov     [rbp+var_B8], rcx
__text:000000010000286E                 mov     [rbp+var_C0], rdx
__text:0000000100002875                 mov     [rbp+var_C8], rsi
__text:000000010000287C                 mov     rcx, [rbp+var_C0]
__text:0000000100002883                 mov     rdx, [rbp+var_C8]
__text:000000010000288A                 mov     [rbp+var_A8], rcx
__text:0000000100002891                 mov     [rbp+var_B0], rdx
__text:0000000100002898                 mov     rcx, [rbp+var_A8]
__text:000000010000289F                 mov     edi, [rcx]
__text:00000001000028A1                 mov     rcx, [rbp+var_B0]
__text:00000001000028A8                 cmp     edi, [rcx]
__text:00000001000028AA                 mov     [rbp+var_61F], al
__text:00000001000028B0                 jl      loc_1000028FF
__text:00000001000028B6                 mov     al, 0
__text:00000001000028B8                 mov     rcx, [rbp+var_B0]
__text:00000001000028BF                 mov     edx, [rcx]
__text:00000001000028C1                 mov     rcx, [rbp+var_A8]
__text:00000001000028C8                 cmp     edx, [rcx]
__text:00000001000028CA                 mov     [rbp+var_620], al
__text:00000001000028D0                 jl      loc_1000028F3
__text:00000001000028D6                 mov     rax, [rbp+var_A8]
__text:00000001000028DD                 mov     ecx, [rax+4]
__text:00000001000028E0                 mov     rax, [rbp+var_B0]
__text:00000001000028E7                 cmp     ecx, [rax+4]
__text:00000001000028EA                 setl    dl
__text:00000001000028ED                 mov     [rbp+var_620], dl
__text:00000001000028F3
__text:00000001000028F3 loc_1000028F3:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+A70↑j
__text:00000001000028F3                 mov     al, [rbp+var_620]
__text:00000001000028F9                 mov     [rbp+var_61F], al
__text:00000001000028FF
__text:00000001000028FF loc_1000028FF:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+A50↑j
__text:00000001000028FF                 mov     al, [rbp+var_61F]
__text:0000000100002905                 xor     al, 1
__text:0000000100002907                 test    al, 1
__text:0000000100002909                 jnz     loc_100002914
__text:000000010000290F                 jmp     loc_10000292D
__text:0000000100002914 ; ---------------------------------------------------------------------------
__text:0000000100002914
__text:0000000100002914 loc_100002914:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+AA9↑j
__text:0000000100002914                 mov     rax, [rbp+var_5A0]
__text:000000010000291B                 add     rax, 8
__text:0000000100002921                 mov     [rbp+var_5A0], rax
__text:0000000100002928                 jmp     loc_100002850
__text:000000010000292D ; ---------------------------------------------------------------------------
__text:000000010000292D
__text:000000010000292D loc_10000292D:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+AAF↑j
__text:000000010000292D                 jmp     $+5
__text:0000000100002932 ; ---------------------------------------------------------------------------
__text:0000000100002932
__text:0000000100002932 loc_100002932:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_10000292D↑j
__text:0000000100002932                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100002A02↓j
__text:0000000100002932                 mov     al, 1
__text:0000000100002934                 mov     rcx, [rbp+var_568]
__text:000000010000293B                 mov     rdx, [rbp+var_558]
__text:0000000100002942                 mov     rsi, [rbp+var_5A8]
__text:0000000100002949                 add     rsi, 0FFFFFFFFFFFFFFF8h
__text:0000000100002950                 mov     [rbp+var_5A8], rsi
__text:0000000100002957                 mov     [rbp+var_E0], rcx
__text:000000010000295E                 mov     [rbp+var_E8], rdx
__text:0000000100002965                 mov     [rbp+var_F0], rsi
__text:000000010000296C                 mov     rcx, [rbp+var_E8]
__text:0000000100002973                 mov     rdx, [rbp+var_F0]
__text:000000010000297A                 mov     [rbp+var_D0], rcx
__text:0000000100002981                 mov     [rbp+var_D8], rdx
__text:0000000100002988                 mov     rcx, [rbp+var_D0]
__text:000000010000298F                 mov     edi, [rcx]
__text:0000000100002991                 mov     rcx, [rbp+var_D8]
__text:0000000100002998                 cmp     edi, [rcx]
__text:000000010000299A                 mov     [rbp+var_621], al
__text:00000001000029A0                 jl      loc_1000029EF
__text:00000001000029A6                 mov     al, 0
__text:00000001000029A8                 mov     rcx, [rbp+var_D8]
__text:00000001000029AF                 mov     edx, [rcx]
__text:00000001000029B1                 mov     rcx, [rbp+var_D0]
__text:00000001000029B8                 cmp     edx, [rcx]
__text:00000001000029BA                 mov     [rbp+var_622], al
__text:00000001000029C0                 jl      loc_1000029E3
__text:00000001000029C6                 mov     rax, [rbp+var_D0]
__text:00000001000029CD                 mov     ecx, [rax+4]
__text:00000001000029D0                 mov     rax, [rbp+var_D8]
__text:00000001000029D7                 cmp     ecx, [rax+4]
__text:00000001000029DA                 setl    dl
__text:00000001000029DD                 mov     [rbp+var_622], dl
__text:00000001000029E3
__text:00000001000029E3 loc_1000029E3:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+B60↑j
__text:00000001000029E3                 mov     al, [rbp+var_622]
__text:00000001000029E9                 mov     [rbp+var_621], al
__text:00000001000029EF
__text:00000001000029EF loc_1000029EF:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+B40↑j
__text:00000001000029EF                 mov     al, [rbp+var_621]
__text:00000001000029F5                 test    al, 1
__text:00000001000029F7                 jnz     loc_100002A02
__text:00000001000029FD                 jmp     loc_100002A07
__text:0000000100002A02 ; ---------------------------------------------------------------------------
__text:0000000100002A02
__text:0000000100002A02 loc_100002A02:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+B97↑j
__text:0000000100002A02                 jmp     loc_100002932
__text:0000000100002A07 ; ---------------------------------------------------------------------------
__text:0000000100002A07
__text:0000000100002A07 loc_100002A07:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+B9D↑j
__text:0000000100002A07                 mov     rax, [rbp+var_5A0]
__text:0000000100002A0E                 cmp     rax, [rbp+var_5A8]
__text:0000000100002A15                 jb      loc_100002A20
__text:0000000100002A1B                 jmp     loc_100002BC3
__text:0000000100002A20 ; ---------------------------------------------------------------------------
__text:0000000100002A20
__text:0000000100002A20 loc_100002A20:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+BB5↑j
__text:0000000100002A20                 lea     rax, [rbp+var_11C]
__text:0000000100002A27                 lea     rcx, [rbp+var_15C]
__text:0000000100002A2E                 mov     rdx, [rbp+var_5A0]
__text:0000000100002A35                 mov     rsi, [rbp+var_5A8]
__text:0000000100002A3C                 mov     [rbp+var_188], rdx
__text:0000000100002A43                 mov     [rbp+var_190], rsi
__text:0000000100002A4A                 mov     rdx, [rbp+var_188]
__text:0000000100002A51                 mov     rsi, [rbp+var_190]
__text:0000000100002A58                 mov     [rbp+var_178], rdx
__text:0000000100002A5F                 mov     [rbp+var_180], rsi
__text:0000000100002A66                 mov     rdx, [rbp+var_178]
__text:0000000100002A6D                 mov     rsi, [rbp+var_180]
__text:0000000100002A74                 mov     [rbp+var_168], rdx
__text:0000000100002A7B                 mov     [rbp+var_170], rsi
__text:0000000100002A82                 mov     rsi, [rbp+var_168]
__text:0000000100002A89                 mov     rdi, [rbp+var_170]
__text:0000000100002A90                 mov     [rbp+var_150], rsi
__text:0000000100002A97                 mov     [rbp+var_158], rdi
__text:0000000100002A9E                 mov     rsi, [rbp+var_150]
__text:0000000100002AA5                 mov     [rbp+var_148], rsi
__text:0000000100002AAC                 mov     rsi, [rbp+var_148]
__text:0000000100002AB3                 mov     r8d, [rsi]
__text:0000000100002AB6                 mov     [rbp+var_15C], r8d
__text:0000000100002ABD                 mov     rsi, [rbp+var_158]
__text:0000000100002AC4                 mov     [rbp+var_138], rsi
__text:0000000100002ACB                 mov     rsi, [rbp+var_138]
__text:0000000100002AD2                 mov     r8d, [rsi]
__text:0000000100002AD5                 mov     rsi, [rbp+var_150]
__text:0000000100002ADC                 mov     [rsi], r8d
__text:0000000100002ADF                 mov     [rbp+var_140], rcx
__text:0000000100002AE6                 mov     rcx, [rbp+var_140]
__text:0000000100002AED                 mov     r8d, [rcx]
__text:0000000100002AF0                 mov     rcx, [rbp+var_158]
__text:0000000100002AF7                 mov     [rcx], r8d
__text:0000000100002AFA                 add     rdx, 4
__text:0000000100002B01                 mov     rcx, [rbp+var_180]
__text:0000000100002B08                 add     rcx, 4
__text:0000000100002B0F                 mov     [rbp+var_128], rdx
__text:0000000100002B16                 mov     [rbp+var_130], rcx
__text:0000000100002B1D                 mov     rcx, [rbp+var_128]
__text:0000000100002B24                 mov     rdx, [rbp+var_130]
__text:0000000100002B2B                 mov     [rbp+var_110], rcx
__text:0000000100002B32                 mov     [rbp+var_118], rdx
__text:0000000100002B39                 mov     rcx, [rbp+var_110]
__text:0000000100002B40                 mov     [rbp+var_108], rcx
__text:0000000100002B47                 mov     rcx, [rbp+var_108]
__text:0000000100002B4E                 mov     r8d, [rcx]
__text:0000000100002B51                 mov     [rbp+var_11C], r8d
__text:0000000100002B58                 mov     rcx, [rbp+var_118]
__text:0000000100002B5F                 mov     [rbp+var_F8], rcx
__text:0000000100002B66                 mov     rcx, [rbp+var_F8]
__text:0000000100002B6D                 mov     r8d, [rcx]
__text:0000000100002B70                 mov     rcx, [rbp+var_110]
__text:0000000100002B77                 mov     [rcx], r8d
__text:0000000100002B7A                 mov     [rbp+var_100], rax
__text:0000000100002B81                 mov     rax, [rbp+var_100]
__text:0000000100002B88                 mov     r8d, [rax]
__text:0000000100002B8B                 mov     rax, [rbp+var_118]
__text:0000000100002B92                 mov     [rax], r8d
__text:0000000100002B95                 mov     r8d, [rbp+var_58C]
__text:0000000100002B9C                 add     r8d, 1
__text:0000000100002BA3                 mov     [rbp+var_58C], r8d
__text:0000000100002BAA                 mov     rax, [rbp+var_5A0]
__text:0000000100002BB1                 add     rax, 8
__text:0000000100002BB7                 mov     [rbp+var_5A0], rax
__text:0000000100002BBE                 jmp     loc_10000284B
__text:0000000100002BC3 ; ---------------------------------------------------------------------------
__text:0000000100002BC3
__text:0000000100002BC3 loc_100002BC3:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+BBB↑j
__text:0000000100002BC3                 mov     rax, [rbp+var_5A0]
__text:0000000100002BCA                 mov     [rbp+var_558], rax
__text:0000000100002BD1                 jmp     loc_100001E90
__text:0000000100002BD6 ; ---------------------------------------------------------------------------
__text:0000000100002BD6
__text:0000000100002BD6 loc_100002BD6:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+6A4↑j
__text:0000000100002BD6                 mov     al, 1
__text:0000000100002BD8                 mov     rcx, [rbp+var_568]
__text:0000000100002BDF                 mov     rdx, [rbp+var_5A8]
__text:0000000100002BE6                 mov     rsi, [rbp+var_580]
__text:0000000100002BED                 mov     [rbp+var_1A8], rcx
__text:0000000100002BF4                 mov     [rbp+var_1B0], rdx
__text:0000000100002BFB                 mov     [rbp+var_1B8], rsi
__text:0000000100002C02                 mov     rcx, [rbp+var_1B0]
__text:0000000100002C09                 mov     rdx, [rbp+var_1B8]
__text:0000000100002C10                 mov     [rbp+var_198], rcx
__text:0000000100002C17                 mov     [rbp+var_1A0], rdx
__text:0000000100002C1E                 mov     rcx, [rbp+var_198]
__text:0000000100002C25                 mov     edi, [rcx]
__text:0000000100002C27                 mov     rcx, [rbp+var_1A0]
__text:0000000100002C2E                 cmp     edi, [rcx]
__text:0000000100002C30                 mov     [rbp+var_623], al
__text:0000000100002C36                 jl      loc_100002C85
__text:0000000100002C3C                 mov     al, 0
__text:0000000100002C3E                 mov     rcx, [rbp+var_1A0]
__text:0000000100002C45                 mov     edx, [rcx]
__text:0000000100002C47                 mov     rcx, [rbp+var_198]
__text:0000000100002C4E                 cmp     edx, [rcx]
__text:0000000100002C50                 mov     [rbp+var_624], al
__text:0000000100002C56                 jl      loc_100002C79
__text:0000000100002C5C                 mov     rax, [rbp+var_198]
__text:0000000100002C63                 mov     ecx, [rax+4]
__text:0000000100002C66                 mov     rax, [rbp+var_1A0]
__text:0000000100002C6D                 cmp     ecx, [rax+4]
__text:0000000100002C70                 setl    dl
__text:0000000100002C73                 mov     [rbp+var_624], dl
__text:0000000100002C79
__text:0000000100002C79 loc_100002C79:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+DF6↑j
__text:0000000100002C79                 mov     al, [rbp+var_624]
__text:0000000100002C7F                 mov     [rbp+var_623], al
__text:0000000100002C85
__text:0000000100002C85 loc_100002C85:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+DD6↑j
__text:0000000100002C85                 mov     al, [rbp+var_623]
__text:0000000100002C8B                 test    al, 1
__text:0000000100002C8D                 jnz     loc_100002C98
__text:0000000100002C93                 jmp     loc_100002E27
__text:0000000100002C98 ; ---------------------------------------------------------------------------
__text:0000000100002C98
__text:0000000100002C98 loc_100002C98:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+E2D↑j
__text:0000000100002C98                 lea     rax, [rbp+var_1E4]
__text:0000000100002C9F                 lea     rcx, [rbp+var_224]
__text:0000000100002CA6                 mov     rdx, [rbp+var_5A0]
__text:0000000100002CAD                 mov     rsi, [rbp+var_5A8]
__text:0000000100002CB4                 mov     [rbp+var_250], rdx
__text:0000000100002CBB                 mov     [rbp+var_258], rsi
__text:0000000100002CC2                 mov     rdx, [rbp+var_250]
__text:0000000100002CC9                 mov     rsi, [rbp+var_258]
__text:0000000100002CD0                 mov     [rbp+var_240], rdx
__text:0000000100002CD7                 mov     [rbp+var_248], rsi
__text:0000000100002CDE                 mov     rdx, [rbp+var_240]
__text:0000000100002CE5                 mov     rsi, [rbp+var_248]
__text:0000000100002CEC                 mov     [rbp+var_230], rdx
__text:0000000100002CF3                 mov     [rbp+var_238], rsi
__text:0000000100002CFA                 mov     rsi, [rbp+var_230]
__text:0000000100002D01                 mov     rdi, [rbp+var_238]
__text:0000000100002D08                 mov     [rbp+var_218], rsi
__text:0000000100002D0F                 mov     [rbp+var_220], rdi
__text:0000000100002D16                 mov     rsi, [rbp+var_218]
__text:0000000100002D1D                 mov     [rbp+var_210], rsi
__text:0000000100002D24                 mov     rsi, [rbp+var_210]
__text:0000000100002D2B                 mov     r8d, [rsi]
__text:0000000100002D2E                 mov     [rbp+var_224], r8d
__text:0000000100002D35                 mov     rsi, [rbp+var_220]
__text:0000000100002D3C                 mov     [rbp+var_200], rsi
__text:0000000100002D43                 mov     rsi, [rbp+var_200]
__text:0000000100002D4A                 mov     r8d, [rsi]
__text:0000000100002D4D                 mov     rsi, [rbp+var_218]
__text:0000000100002D54                 mov     [rsi], r8d
__text:0000000100002D57                 mov     [rbp+var_208], rcx
__text:0000000100002D5E                 mov     rcx, [rbp+var_208]
__text:0000000100002D65                 mov     r8d, [rcx]
__text:0000000100002D68                 mov     rcx, [rbp+var_220]
__text:0000000100002D6F                 mov     [rcx], r8d
__text:0000000100002D72                 add     rdx, 4
__text:0000000100002D79                 mov     rcx, [rbp+var_248]
__text:0000000100002D80                 add     rcx, 4
__text:0000000100002D87                 mov     [rbp+var_1F0], rdx
__text:0000000100002D8E                 mov     [rbp+var_1F8], rcx
__text:0000000100002D95                 mov     rcx, [rbp+var_1F0]
__text:0000000100002D9C                 mov     rdx, [rbp+var_1F8]
__text:0000000100002DA3                 mov     [rbp+var_1D8], rcx
__text:0000000100002DAA                 mov     [rbp+var_1E0], rdx
__text:0000000100002DB1                 mov     rcx, [rbp+var_1D8]
__text:0000000100002DB8                 mov     [rbp+var_1D0], rcx
__text:0000000100002DBF                 mov     rcx, [rbp+var_1D0]
__text:0000000100002DC6                 mov     r8d, [rcx]
__text:0000000100002DC9                 mov     [rbp+var_1E4], r8d
__text:0000000100002DD0                 mov     rcx, [rbp+var_1E0]
__text:0000000100002DD7                 mov     [rbp+var_1C0], rcx
__text:0000000100002DDE                 mov     rcx, [rbp+var_1C0]
__text:0000000100002DE5                 mov     r8d, [rcx]
__text:0000000100002DE8                 mov     rcx, [rbp+var_1D8]
__text:0000000100002DEF                 mov     [rcx], r8d
__text:0000000100002DF2                 mov     [rbp+var_1C8], rax
__text:0000000100002DF9                 mov     rax, [rbp+var_1C8]
__text:0000000100002E00                 mov     r8d, [rax]
__text:0000000100002E03                 mov     rax, [rbp+var_1E0]
__text:0000000100002E0A                 mov     [rax], r8d
__text:0000000100002E0D                 mov     r8d, [rbp+var_58C]
__text:0000000100002E14                 add     r8d, 1
__text:0000000100002E1B                 mov     [rbp+var_58C], r8d
__text:0000000100002E22                 jmp     loc_100002E2C
__text:0000000100002E27 ; ---------------------------------------------------------------------------
__text:0000000100002E27
__text:0000000100002E27 loc_100002E27:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+E33↑j
__text:0000000100002E27                 jmp     loc_1000024E5
__text:0000000100002E2C ; ---------------------------------------------------------------------------
__text:0000000100002E2C
__text:0000000100002E2C loc_100002E2C:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+FC2↑j
__text:0000000100002E2C                 jmp     $+5
__text:0000000100002E31 ; ---------------------------------------------------------------------------
__text:0000000100002E31
__text:0000000100002E31 loc_100002E31:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+67A↑j
__text:0000000100002E31                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100002E2C↑j
__text:0000000100002E31                 mov     rax, [rbp+var_5A0]
__text:0000000100002E38                 add     rax, 8
__text:0000000100002E3E                 mov     [rbp+var_5A0], rax
__text:0000000100002E45                 mov     rax, [rbp+var_5A0]
__text:0000000100002E4C                 cmp     rax, [rbp+var_5A8]
__text:0000000100002E53                 jnb     loc_1000031FD
__text:0000000100002E59                 jmp     $+5
__text:0000000100002E5E ; ---------------------------------------------------------------------------
__text:0000000100002E5E
__text:0000000100002E5E loc_100002E5E:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+FF9↑j
__text:0000000100002E5E                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1393↓j
__text:0000000100002E5E                 jmp     $+5
__text:0000000100002E63 ; ---------------------------------------------------------------------------
__text:0000000100002E63
__text:0000000100002E63 loc_100002E63:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100002E5E↑j
__text:0000000100002E63                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+10D9↓j
__text:0000000100002E63                 mov     al, 1
__text:0000000100002E65                 mov     rcx, [rbp+var_568]
__text:0000000100002E6C                 mov     rdx, [rbp+var_5A0]
__text:0000000100002E73                 mov     rsi, [rbp+var_580]
__text:0000000100002E7A                 mov     [rbp+var_270], rcx
__text:0000000100002E81                 mov     [rbp+var_278], rdx
__text:0000000100002E88                 mov     [rbp+var_280], rsi
__text:0000000100002E8F                 mov     rcx, [rbp+var_278]
__text:0000000100002E96                 mov     rdx, [rbp+var_280]
__text:0000000100002E9D                 mov     [rbp+var_260], rcx
__text:0000000100002EA4                 mov     [rbp+var_268], rdx
__text:0000000100002EAB                 mov     rcx, [rbp+var_260]
__text:0000000100002EB2                 mov     edi, [rcx]
__text:0000000100002EB4                 mov     rcx, [rbp+var_268]
__text:0000000100002EBB                 cmp     edi, [rcx]
__text:0000000100002EBD                 mov     [rbp+var_625], al
__text:0000000100002EC3                 jl      loc_100002F12
__text:0000000100002EC9                 mov     al, 0
__text:0000000100002ECB                 mov     rcx, [rbp+var_268]
__text:0000000100002ED2                 mov     edx, [rcx]
__text:0000000100002ED4                 mov     rcx, [rbp+var_260]
__text:0000000100002EDB                 cmp     edx, [rcx]
__text:0000000100002EDD                 mov     [rbp+var_626], al
__text:0000000100002EE3                 jl      loc_100002F06
__text:0000000100002EE9                 mov     rax, [rbp+var_260]
__text:0000000100002EF0                 mov     ecx, [rax+4]
__text:0000000100002EF3                 mov     rax, [rbp+var_268]
__text:0000000100002EFA                 cmp     ecx, [rax+4]
__text:0000000100002EFD                 setl    dl
__text:0000000100002F00                 mov     [rbp+var_626], dl
__text:0000000100002F06
__text:0000000100002F06 loc_100002F06:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1083↑j
__text:0000000100002F06                 mov     al, [rbp+var_626]
__text:0000000100002F0C                 mov     [rbp+var_625], al
__text:0000000100002F12
__text:0000000100002F12 loc_100002F12:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1063↑j
__text:0000000100002F12                 mov     al, [rbp+var_625]
__text:0000000100002F18                 test    al, 1
__text:0000000100002F1A                 jnz     loc_100002F25
__text:0000000100002F20                 jmp     loc_100002F3E
__text:0000000100002F25 ; ---------------------------------------------------------------------------
__text:0000000100002F25
__text:0000000100002F25 loc_100002F25:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+10BA↑j
__text:0000000100002F25                 mov     rax, [rbp+var_5A0]
__text:0000000100002F2C                 add     rax, 8
__text:0000000100002F32                 mov     [rbp+var_5A0], rax
__text:0000000100002F39                 jmp     loc_100002E63
__text:0000000100002F3E ; ---------------------------------------------------------------------------
__text:0000000100002F3E
__text:0000000100002F3E loc_100002F3E:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+10C0↑j
__text:0000000100002F3E                 jmp     $+5
__text:0000000100002F43 ; ---------------------------------------------------------------------------
__text:0000000100002F43
__text:0000000100002F43 loc_100002F43:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100002F3E↑j
__text:0000000100002F43                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100003015↓j
__text:0000000100002F43                 mov     al, 1
__text:0000000100002F45                 mov     rcx, [rbp+var_568]
__text:0000000100002F4C                 mov     rdx, [rbp+var_5A8]
__text:0000000100002F53                 add     rdx, 0FFFFFFFFFFFFFFF8h
__text:0000000100002F5A                 mov     [rbp+var_5A8], rdx
__text:0000000100002F61                 mov     rsi, [rbp+var_580]
__text:0000000100002F68                 mov     [rbp+var_298], rcx
__text:0000000100002F6F                 mov     [rbp+var_2A0], rdx
__text:0000000100002F76                 mov     [rbp+var_2A8], rsi
__text:0000000100002F7D                 mov     rcx, [rbp+var_2A0]
__text:0000000100002F84                 mov     rdx, [rbp+var_2A8]
__text:0000000100002F8B                 mov     [rbp+var_288], rcx
__text:0000000100002F92                 mov     [rbp+var_290], rdx
__text:0000000100002F99                 mov     rcx, [rbp+var_288]
__text:0000000100002FA0                 mov     edi, [rcx]
__text:0000000100002FA2                 mov     rcx, [rbp+var_290]
__text:0000000100002FA9                 cmp     edi, [rcx]
__text:0000000100002FAB                 mov     [rbp+var_627], al
__text:0000000100002FB1                 jl      loc_100003000
__text:0000000100002FB7                 mov     al, 0
__text:0000000100002FB9                 mov     rcx, [rbp+var_290]
__text:0000000100002FC0                 mov     edx, [rcx]
__text:0000000100002FC2                 mov     rcx, [rbp+var_288]
__text:0000000100002FC9                 cmp     edx, [rcx]
__text:0000000100002FCB                 mov     [rbp+var_628], al
__text:0000000100002FD1                 jl      loc_100002FF4
__text:0000000100002FD7                 mov     rax, [rbp+var_288]
__text:0000000100002FDE                 mov     ecx, [rax+4]
__text:0000000100002FE1                 mov     rax, [rbp+var_290]
__text:0000000100002FE8                 cmp     ecx, [rax+4]
__text:0000000100002FEB                 setl    dl
__text:0000000100002FEE                 mov     [rbp+var_628], dl
__text:0000000100002FF4
__text:0000000100002FF4 loc_100002FF4:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1171↑j
__text:0000000100002FF4                 mov     al, [rbp+var_628]
__text:0000000100002FFA                 mov     [rbp+var_627], al
__text:0000000100003000
__text:0000000100003000 loc_100003000:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1151↑j
__text:0000000100003000                 mov     al, [rbp+var_627]
__text:0000000100003006                 xor     al, 1
__text:0000000100003008                 test    al, 1
__text:000000010000300A                 jnz     loc_100003015
__text:0000000100003010                 jmp     loc_10000301A
__text:0000000100003015 ; ---------------------------------------------------------------------------
__text:0000000100003015
__text:0000000100003015 loc_100003015:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+11AA↑j
__text:0000000100003015                 jmp     loc_100002F43
__text:000000010000301A ; ---------------------------------------------------------------------------
__text:000000010000301A
__text:000000010000301A loc_10000301A:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+11B0↑j
__text:000000010000301A                 mov     rax, [rbp+var_5A0]
__text:0000000100003021                 cmp     rax, [rbp+var_5A8]
__text:0000000100003028                 jbe     loc_100003033
__text:000000010000302E                 jmp     loc_1000031F8
__text:0000000100003033 ; ---------------------------------------------------------------------------
__text:0000000100003033
__text:0000000100003033 loc_100003033:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+11C8↑j
__text:0000000100003033                 lea     rax, [rbp+var_2D4]
__text:000000010000303A                 lea     rcx, [rbp+var_314]
__text:0000000100003041                 mov     rdx, [rbp+var_5A0]
__text:0000000100003048                 mov     rsi, [rbp+var_5A8]
__text:000000010000304F                 mov     [rbp+var_340], rdx
__text:0000000100003056                 mov     [rbp+var_348], rsi
__text:000000010000305D                 mov     rdx, [rbp+var_340]
__text:0000000100003064                 mov     rsi, [rbp+var_348]
__text:000000010000306B                 mov     [rbp+var_330], rdx
__text:0000000100003072                 mov     [rbp+var_338], rsi
__text:0000000100003079                 mov     rdx, [rbp+var_330]
__text:0000000100003080                 mov     rsi, [rbp+var_338]
__text:0000000100003087                 mov     [rbp+var_320], rdx
__text:000000010000308E                 mov     [rbp+var_328], rsi
__text:0000000100003095                 mov     rsi, [rbp+var_320]
__text:000000010000309C                 mov     rdi, [rbp+var_328]
__text:00000001000030A3                 mov     [rbp+var_308], rsi
__text:00000001000030AA                 mov     [rbp+var_310], rdi
__text:00000001000030B1                 mov     rsi, [rbp+var_308]
__text:00000001000030B8                 mov     [rbp+var_300], rsi
__text:00000001000030BF                 mov     rsi, [rbp+var_300]
__text:00000001000030C6                 mov     r8d, [rsi]
__text:00000001000030C9                 mov     [rbp+var_314], r8d
__text:00000001000030D0                 mov     rsi, [rbp+var_310]
__text:00000001000030D7                 mov     [rbp+var_2F0], rsi
__text:00000001000030DE                 mov     rsi, [rbp+var_2F0]
__text:00000001000030E5                 mov     r8d, [rsi]
__text:00000001000030E8                 mov     rsi, [rbp+var_308]
__text:00000001000030EF                 mov     [rsi], r8d
__text:00000001000030F2                 mov     [rbp+var_2F8], rcx
__text:00000001000030F9                 mov     rcx, [rbp+var_2F8]
__text:0000000100003100                 mov     r8d, [rcx]
__text:0000000100003103                 mov     rcx, [rbp+var_310]
__text:000000010000310A                 mov     [rcx], r8d
__text:000000010000310D                 add     rdx, 4
__text:0000000100003114                 mov     rcx, [rbp+var_338]
__text:000000010000311B                 add     rcx, 4
__text:0000000100003122                 mov     [rbp+var_2E0], rdx
__text:0000000100003129                 mov     [rbp+var_2E8], rcx
__text:0000000100003130                 mov     rcx, [rbp+var_2E0]
__text:0000000100003137                 mov     rdx, [rbp+var_2E8]
__text:000000010000313E                 mov     [rbp+var_2C8], rcx
__text:0000000100003145                 mov     [rbp+var_2D0], rdx
__text:000000010000314C                 mov     rcx, [rbp+var_2C8]
__text:0000000100003153                 mov     [rbp+var_2C0], rcx
__text:000000010000315A                 mov     rcx, [rbp+var_2C0]
__text:0000000100003161                 mov     r8d, [rcx]
__text:0000000100003164                 mov     [rbp+var_2D4], r8d
__text:000000010000316B                 mov     rcx, [rbp+var_2D0]
__text:0000000100003172                 mov     [rbp+var_2B0], rcx
__text:0000000100003179                 mov     rcx, [rbp+var_2B0]
__text:0000000100003180                 mov     r8d, [rcx]
__text:0000000100003183                 mov     rcx, [rbp+var_2C8]
__text:000000010000318A                 mov     [rcx], r8d
__text:000000010000318D                 mov     [rbp+var_2B8], rax
__text:0000000100003194                 mov     rax, [rbp+var_2B8]
__text:000000010000319B                 mov     r8d, [rax]
__text:000000010000319E                 mov     rax, [rbp+var_2D0]
__text:00000001000031A5                 mov     [rax], r8d
__text:00000001000031A8                 mov     r8d, [rbp+var_58C]
__text:00000001000031AF                 add     r8d, 1
__text:00000001000031B6                 mov     [rbp+var_58C], r8d
__text:00000001000031BD                 mov     rax, [rbp+var_580]
__text:00000001000031C4                 cmp     rax, [rbp+var_5A0]
__text:00000001000031CB                 jnz     loc_1000031DF
__text:00000001000031D1                 mov     rax, [rbp+var_5A8]
__text:00000001000031D8                 mov     [rbp+var_580], rax
__text:00000001000031DF
__text:00000001000031DF loc_1000031DF:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+136B↑j
__text:00000001000031DF                 mov     rax, [rbp+var_5A0]
__text:00000001000031E6                 add     rax, 8
__text:00000001000031EC                 mov     [rbp+var_5A0], rax
__text:00000001000031F3                 jmp     loc_100002E5E
__text:00000001000031F8 ; ---------------------------------------------------------------------------
__text:00000001000031F8
__text:00000001000031F8 loc_1000031F8:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+11CE↑j
__text:00000001000031F8                 jmp     $+5
__text:00000001000031FD ; ---------------------------------------------------------------------------
__text:00000001000031FD
__text:00000001000031FD loc_1000031FD:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+FF3↑j
__text:00000001000031FD                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_1000031F8↑j
__text:00000001000031FD                 mov     rax, [rbp+var_5A0]
__text:0000000100003204                 cmp     rax, [rbp+var_580]
__text:000000010000320B                 jz      loc_10000345D
__text:0000000100003211                 mov     al, 1
__text:0000000100003213                 mov     rcx, [rbp+var_568]
__text:000000010000321A                 mov     rdx, [rbp+var_580]
__text:0000000100003221                 mov     rsi, [rbp+var_5A0]
__text:0000000100003228                 mov     [rbp+var_360], rcx
__text:000000010000322F                 mov     [rbp+var_368], rdx
__text:0000000100003236                 mov     [rbp+var_370], rsi
__text:000000010000323D                 mov     rcx, [rbp+var_368]
__text:0000000100003244                 mov     rdx, [rbp+var_370]
__text:000000010000324B                 mov     [rbp+var_350], rcx
__text:0000000100003252                 mov     [rbp+var_358], rdx
__text:0000000100003259                 mov     rcx, [rbp+var_350]
__text:0000000100003260                 mov     edi, [rcx]
__text:0000000100003262                 mov     rcx, [rbp+var_358]
__text:0000000100003269                 cmp     edi, [rcx]
__text:000000010000326B                 mov     [rbp+var_629], al
__text:0000000100003271                 jl      loc_1000032C0
__text:0000000100003277                 mov     al, 0
__text:0000000100003279                 mov     rcx, [rbp+var_358]
__text:0000000100003280                 mov     edx, [rcx]
__text:0000000100003282                 mov     rcx, [rbp+var_350]
__text:0000000100003289                 cmp     edx, [rcx]
__text:000000010000328B                 mov     [rbp+var_62A], al
__text:0000000100003291                 jl      loc_1000032B4
__text:0000000100003297                 mov     rax, [rbp+var_350]
__text:000000010000329E                 mov     ecx, [rax+4]
__text:00000001000032A1                 mov     rax, [rbp+var_358]
__text:00000001000032A8                 cmp     ecx, [rax+4]
__text:00000001000032AB                 setl    dl
__text:00000001000032AE                 mov     [rbp+var_62A], dl
__text:00000001000032B4
__text:00000001000032B4 loc_1000032B4:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1431↑j
__text:00000001000032B4                 mov     al, [rbp+var_62A]
__text:00000001000032BA                 mov     [rbp+var_629], al
__text:00000001000032C0
__text:00000001000032C0 loc_1000032C0:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1411↑j
__text:00000001000032C0                 mov     al, [rbp+var_629]
__text:00000001000032C6                 test    al, 1
__text:00000001000032C8                 jnz     loc_1000032D3
__text:00000001000032CE                 jmp     loc_10000345D
__text:00000001000032D3 ; ---------------------------------------------------------------------------
__text:00000001000032D3
__text:00000001000032D3 loc_1000032D3:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1468↑j
__text:00000001000032D3                 lea     rax, [rbp+var_39C]
__text:00000001000032DA                 lea     rcx, [rbp+var_3DC]
__text:00000001000032E1                 mov     rdx, [rbp+var_5A0]
__text:00000001000032E8                 mov     rsi, [rbp+var_580]
__text:00000001000032EF                 mov     [rbp+var_408], rdx
__text:00000001000032F6                 mov     [rbp+var_410], rsi
__text:00000001000032FD                 mov     rdx, [rbp+var_408]
__text:0000000100003304                 mov     rsi, [rbp+var_410]
__text:000000010000330B                 mov     [rbp+var_3F8], rdx
__text:0000000100003312                 mov     [rbp+var_400], rsi
__text:0000000100003319                 mov     rdx, [rbp+var_3F8]
__text:0000000100003320                 mov     rsi, [rbp+var_400]
__text:0000000100003327                 mov     [rbp+var_3E8], rdx
__text:000000010000332E                 mov     [rbp+var_3F0], rsi
__text:0000000100003335                 mov     rsi, [rbp+var_3E8]
__text:000000010000333C                 mov     rdi, [rbp+var_3F0]
__text:0000000100003343                 mov     [rbp+var_3D0], rsi
__text:000000010000334A                 mov     [rbp+var_3D8], rdi
__text:0000000100003351                 mov     rsi, [rbp+var_3D0]
__text:0000000100003358                 mov     [rbp+var_3C8], rsi
__text:000000010000335F                 mov     rsi, [rbp+var_3C8]
__text:0000000100003366                 mov     r8d, [rsi]
__text:0000000100003369                 mov     [rbp+var_3DC], r8d
__text:0000000100003370                 mov     rsi, [rbp+var_3D8]
__text:0000000100003377                 mov     [rbp+var_3B8], rsi
__text:000000010000337E                 mov     rsi, [rbp+var_3B8]
__text:0000000100003385                 mov     r8d, [rsi]
__text:0000000100003388                 mov     rsi, [rbp+var_3D0]
__text:000000010000338F                 mov     [rsi], r8d
__text:0000000100003392                 mov     [rbp+var_3C0], rcx
__text:0000000100003399                 mov     rcx, [rbp+var_3C0]
__text:00000001000033A0                 mov     r8d, [rcx]
__text:00000001000033A3                 mov     rcx, [rbp+var_3D8]
__text:00000001000033AA                 mov     [rcx], r8d
__text:00000001000033AD                 add     rdx, 4
__text:00000001000033B4                 mov     rcx, [rbp+var_400]
__text:00000001000033BB                 add     rcx, 4
__text:00000001000033C2                 mov     [rbp+var_3A8], rdx
__text:00000001000033C9                 mov     [rbp+var_3B0], rcx
__text:00000001000033D0                 mov     rcx, [rbp+var_3A8]
__text:00000001000033D7                 mov     rdx, [rbp+var_3B0]
__text:00000001000033DE                 mov     [rbp+var_390], rcx
__text:00000001000033E5                 mov     [rbp+var_398], rdx
__text:00000001000033EC                 mov     rcx, [rbp+var_390]
__text:00000001000033F3                 mov     [rbp+var_388], rcx
__text:00000001000033FA                 mov     rcx, [rbp+var_388]
__text:0000000100003401                 mov     r8d, [rcx]
__text:0000000100003404                 mov     [rbp+var_39C], r8d
__text:000000010000340B                 mov     rcx, [rbp+var_398]
__text:0000000100003412                 mov     [rbp+var_378], rcx
__text:0000000100003419                 mov     rcx, [rbp+var_378]
__text:0000000100003420                 mov     r8d, [rcx]
__text:0000000100003423                 mov     rcx, [rbp+var_390]
__text:000000010000342A                 mov     [rcx], r8d
__text:000000010000342D                 mov     [rbp+var_380], rax
__text:0000000100003434                 mov     rax, [rbp+var_380]
__text:000000010000343B                 mov     r8d, [rax]
__text:000000010000343E                 mov     rax, [rbp+var_398]
__text:0000000100003445                 mov     [rax], r8d
__text:0000000100003448                 mov     r8d, [rbp+var_58C]
__text:000000010000344F                 add     r8d, 1
__text:0000000100003456                 mov     [rbp+var_58C], r8d
__text:000000010000345D
__text:000000010000345D loc_10000345D:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+13AB↑j
__text:000000010000345D                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+146E↑j
__text:000000010000345D                 cmp     [rbp+var_58C], 0
__text:0000000100003467                 jnz     loc_10000352A
__text:000000010000346D                 mov     rdi, [rbp+var_558]
__text:0000000100003474                 mov     rsi, [rbp+var_5A0]
__text:000000010000347B                 mov     rdx, [rbp+var_568]
__text:0000000100003482                 call    j___ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEbT0_S7_T_ ; std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:0000000100003487                 and     al, 1
__text:0000000100003489                 mov     [rbp+var_5A9], al
__text:000000010000348F                 mov     rdx, [rbp+var_5A0]
__text:0000000100003496                 add     rdx, 8
__text:000000010000349D                 mov     rsi, [rbp+var_560]
__text:00000001000034A4                 mov     rdi, [rbp+var_568]
__text:00000001000034AB                 mov     [rbp+var_638], rdi
__text:00000001000034B2                 mov     rdi, rdx
__text:00000001000034B5                 mov     rdx, [rbp+var_638]
__text:00000001000034BC                 call    j___ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEbT0_S7_T_ ; std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:00000001000034C1                 test    al, 1
__text:00000001000034C3                 jnz     loc_1000034CE
__text:00000001000034C9                 jmp     loc_1000034F3
__text:00000001000034CE ; ---------------------------------------------------------------------------
__text:00000001000034CE
__text:00000001000034CE loc_1000034CE:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1663↑j
__text:00000001000034CE                 test    [rbp+var_5A9], 1
__text:00000001000034D5                 jz      loc_1000034E0
__text:00000001000034DB                 jmp     loc_1000035CE
__text:00000001000034E0 ; ---------------------------------------------------------------------------
__text:00000001000034E0
__text:00000001000034E0 loc_1000034E0:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1675↑j
__text:00000001000034E0                 mov     rax, [rbp+var_5A0]
__text:00000001000034E7                 mov     [rbp+var_560], rax
__text:00000001000034EE                 jmp     loc_100001E8B
__text:00000001000034F3 ; ---------------------------------------------------------------------------
__text:00000001000034F3
__text:00000001000034F3 loc_1000034F3:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1669↑j
__text:00000001000034F3                 test    [rbp+var_5A9], 1
__text:00000001000034FA                 jz      loc_100003520
__text:0000000100003500                 mov     rax, [rbp+var_5A0]
__text:0000000100003507                 add     rax, 8
__text:000000010000350D                 mov     [rbp+var_5A0], rax
__text:0000000100003514                 mov     [rbp+var_558], rax
__text:000000010000351B                 jmp     loc_100001E8B
__text:0000000100003520 ; ---------------------------------------------------------------------------
__text:0000000100003520
__text:0000000100003520 loc_100003520:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+169A↑j
__text:0000000100003520                 jmp     $+5
__text:0000000100003525 ; ---------------------------------------------------------------------------
__text:0000000100003525
__text:0000000100003525 loc_100003525:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100003520↑j
__text:0000000100003525                 jmp     $+5
__text:000000010000352A ; ---------------------------------------------------------------------------
__text:000000010000352A
__text:000000010000352A loc_10000352A:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1607↑j
__text:000000010000352A                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100003525↑j
__text:000000010000352A                 mov     rax, [rbp+var_5A0]
__text:0000000100003531                 mov     rcx, [rbp+var_558]
__text:0000000100003538                 sub     rax, rcx
__text:000000010000353B                 sar     rax, 3
__text:000000010000353F                 mov     rcx, [rbp+var_560]
__text:0000000100003546                 mov     rdx, [rbp+var_5A0]
__text:000000010000354D                 sub     rcx, rdx
__text:0000000100003550                 sar     rcx, 3
__text:0000000100003554                 cmp     rax, rcx
__text:0000000100003557                 jge     loc_100003598
__text:000000010000355D                 mov     rdi, [rbp+var_558]
__text:0000000100003564                 mov     rsi, [rbp+var_5A0]
__text:000000010000356B                 mov     rdx, [rbp+var_568]
__text:0000000100003572                 call    __ZNSt3__16__sortIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T_ ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:0000000100003577                 mov     rdx, [rbp+var_5A0]
__text:000000010000357E                 add     rdx, 8
__text:0000000100003585                 mov     [rbp+var_5A0], rdx
__text:000000010000358C                 mov     [rbp+var_558], rdx
__text:0000000100003593                 jmp     loc_1000035C9
__text:0000000100003598 ; ---------------------------------------------------------------------------
__text:0000000100003598
__text:0000000100003598 loc_100003598:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+16F7↑j
__text:0000000100003598                 mov     rax, [rbp+var_5A0]
__text:000000010000359F                 add     rax, 8
__text:00000001000035A5                 mov     rsi, [rbp+var_560]
__text:00000001000035AC                 mov     rdx, [rbp+var_568]
__text:00000001000035B3                 mov     rdi, rax
__text:00000001000035B6                 call    __ZNSt3__16__sortIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T_ ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:00000001000035BB                 mov     rax, [rbp+var_5A0]
__text:00000001000035C2                 mov     [rbp+var_560], rax
__text:00000001000035C9
__text:00000001000035C9 loc_1000035C9:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+1733↑j
__text:00000001000035C9                 jmp     loc_100001E8B
__text:00000001000035CE ; ---------------------------------------------------------------------------
__text:00000001000035CE
__text:00000001000035CE loc_1000035CE:                          ; CODE XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100001EDE↑j
__text:00000001000035CE                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100002128↑j ...
__text:00000001000035CE                 add     rsp, 640h
__text:00000001000035D5                 pop     rbp
__text:00000001000035D6                 retn
__text:00000001000035D6 __ZNSt3__16__sortIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T_ endp
__text:00000001000035D6
__text:00000001000035D6 ; ---------------------------------------------------------------------------
__text:00000001000035D7                 align 8
__text:00000001000035D8 jpt_100001EDC   dd offset loc_100001EDE - 1000035D8h
__text:00000001000035D8                                         ; DATA XREF: std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+67↑o
__text:00000001000035D8                                         ; std::__1::__sort<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+75↑r
__text:00000001000035D8                 dd offset loc_100001EDE - 1000035D8h ; jump table for switch statement
__text:00000001000035D8                 dd offset loc_100001EE3 - 1000035D8h
__text:00000001000035D8                 dd offset loc_10000212D - 1000035D8h
__text:00000001000035D8                 dd offset loc_100002181 - 1000035D8h
__text:00000001000035D8                 dd offset loc_1000021E3 - 1000035D8h
__text:00000001000035F0
__text:00000001000035F0 ; =============== S U B R O U T I N E =======================================
__text:00000001000035F0
__text:00000001000035F0 ; Attributes: bp-based frame
__text:00000001000035F0
__text:00000001000035F0 ; unsigned int std::__1::__sort3<std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &, std::__1::pair<int, int>*>(std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &)
__text:00000001000035F0 __ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T_ proc near
__text:00000001000035F0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T__ptr↓o
__text:00000001000035F0
__text:00000001000035F0 var_41E         = byte ptr -41Eh
__text:00000001000035F0 var_41D         = byte ptr -41Dh
__text:00000001000035F0 var_41C         = byte ptr -41Ch
__text:00000001000035F0 var_41B         = byte ptr -41Bh
__text:00000001000035F0 var_41A         = byte ptr -41Ah
__text:00000001000035F0 var_419         = byte ptr -419h
__text:00000001000035F0 var_418         = byte ptr -418h
__text:00000001000035F0 var_417         = byte ptr -417h
__text:00000001000035F0 var_416         = byte ptr -416h
__text:00000001000035F0 var_415         = byte ptr -415h
__text:00000001000035F0 var_414         = dword ptr -414h
__text:00000001000035F0 var_410         = qword ptr -410h
__text:00000001000035F0 var_408         = qword ptr -408h
__text:00000001000035F0 var_400         = qword ptr -400h
__text:00000001000035F0 var_3F8         = qword ptr -3F8h
__text:00000001000035F0 var_3EC         = dword ptr -3ECh
__text:00000001000035F0 var_3E8         = qword ptr -3E8h
__text:00000001000035F0 var_3E0         = qword ptr -3E0h
__text:00000001000035F0 var_3D8         = qword ptr -3D8h
__text:00000001000035F0 var_3D0         = qword ptr -3D0h
__text:00000001000035F0 var_3C8         = qword ptr -3C8h
__text:00000001000035F0 var_3C0         = qword ptr -3C0h
__text:00000001000035F0 var_3B8         = qword ptr -3B8h
__text:00000001000035F0 var_3B0         = qword ptr -3B0h
__text:00000001000035F0 var_3A8         = qword ptr -3A8h
__text:00000001000035F0 var_3A0         = qword ptr -3A0h
__text:00000001000035F0 var_398         = qword ptr -398h
__text:00000001000035F0 var_38C         = dword ptr -38Ch
__text:00000001000035F0 var_388         = qword ptr -388h
__text:00000001000035F0 var_380         = qword ptr -380h
__text:00000001000035F0 var_378         = qword ptr -378h
__text:00000001000035F0 var_370         = qword ptr -370h
__text:00000001000035F0 var_368         = qword ptr -368h
__text:00000001000035F0 var_360         = qword ptr -360h
__text:00000001000035F0 var_358         = qword ptr -358h
__text:00000001000035F0 var_34C         = dword ptr -34Ch
__text:00000001000035F0 var_348         = qword ptr -348h
__text:00000001000035F0 var_340         = qword ptr -340h
__text:00000001000035F0 var_338         = qword ptr -338h
__text:00000001000035F0 var_330         = qword ptr -330h
__text:00000001000035F0 var_328         = qword ptr -328h
__text:00000001000035F0 var_320         = qword ptr -320h
__text:00000001000035F0 var_318         = qword ptr -318h
__text:00000001000035F0 var_310         = qword ptr -310h
__text:00000001000035F0 var_308         = qword ptr -308h
__text:00000001000035F0 var_300         = qword ptr -300h
__text:00000001000035F0 var_2F8         = qword ptr -2F8h
__text:00000001000035F0 var_2F0         = qword ptr -2F0h
__text:00000001000035F0 var_2E8         = qword ptr -2E8h
__text:00000001000035F0 var_2E0         = qword ptr -2E0h
__text:00000001000035F0 var_2D8         = qword ptr -2D8h
__text:00000001000035F0 var_2D0         = qword ptr -2D0h
__text:00000001000035F0 var_2C4         = dword ptr -2C4h
__text:00000001000035F0 var_2C0         = qword ptr -2C0h
__text:00000001000035F0 var_2B8         = qword ptr -2B8h
__text:00000001000035F0 var_2B0         = qword ptr -2B0h
__text:00000001000035F0 var_2A8         = qword ptr -2A8h
__text:00000001000035F0 var_2A0         = qword ptr -2A0h
__text:00000001000035F0 var_298         = qword ptr -298h
__text:00000001000035F0 var_290         = qword ptr -290h
__text:00000001000035F0 var_284         = dword ptr -284h
__text:00000001000035F0 var_280         = qword ptr -280h
__text:00000001000035F0 var_278         = qword ptr -278h
__text:00000001000035F0 var_270         = qword ptr -270h
__text:00000001000035F0 var_268         = qword ptr -268h
__text:00000001000035F0 var_260         = qword ptr -260h
__text:00000001000035F0 var_258         = qword ptr -258h
__text:00000001000035F0 var_250         = qword ptr -250h
__text:00000001000035F0 var_248         = qword ptr -248h
__text:00000001000035F0 var_240         = qword ptr -240h
__text:00000001000035F0 var_238         = qword ptr -238h
__text:00000001000035F0 var_230         = qword ptr -230h
__text:00000001000035F0 var_224         = dword ptr -224h
__text:00000001000035F0 var_220         = qword ptr -220h
__text:00000001000035F0 var_218         = qword ptr -218h
__text:00000001000035F0 var_210         = qword ptr -210h
__text:00000001000035F0 var_208         = qword ptr -208h
__text:00000001000035F0 var_200         = qword ptr -200h
__text:00000001000035F0 var_1F8         = qword ptr -1F8h
__text:00000001000035F0 var_1F0         = qword ptr -1F0h
__text:00000001000035F0 var_1E4         = dword ptr -1E4h
__text:00000001000035F0 var_1E0         = qword ptr -1E0h
__text:00000001000035F0 var_1D8         = qword ptr -1D8h
__text:00000001000035F0 var_1D0         = qword ptr -1D0h
__text:00000001000035F0 var_1C8         = qword ptr -1C8h
__text:00000001000035F0 var_1C0         = qword ptr -1C0h
__text:00000001000035F0 var_1B8         = qword ptr -1B8h
__text:00000001000035F0 var_1B0         = qword ptr -1B0h
__text:00000001000035F0 var_1A8         = qword ptr -1A8h
__text:00000001000035F0 var_1A0         = qword ptr -1A0h
__text:00000001000035F0 var_198         = qword ptr -198h
__text:00000001000035F0 var_190         = qword ptr -190h
__text:00000001000035F0 var_188         = qword ptr -188h
__text:00000001000035F0 var_180         = qword ptr -180h
__text:00000001000035F0 var_178         = qword ptr -178h
__text:00000001000035F0 var_170         = qword ptr -170h
__text:00000001000035F0 var_168         = qword ptr -168h
__text:00000001000035F0 var_15C         = dword ptr -15Ch
__text:00000001000035F0 var_158         = qword ptr -158h
__text:00000001000035F0 var_150         = qword ptr -150h
__text:00000001000035F0 var_148         = qword ptr -148h
__text:00000001000035F0 var_140         = qword ptr -140h
__text:00000001000035F0 var_138         = qword ptr -138h
__text:00000001000035F0 var_130         = qword ptr -130h
__text:00000001000035F0 var_128         = qword ptr -128h
__text:00000001000035F0 var_11C         = dword ptr -11Ch
__text:00000001000035F0 var_118         = qword ptr -118h
__text:00000001000035F0 var_110         = qword ptr -110h
__text:00000001000035F0 var_108         = qword ptr -108h
__text:00000001000035F0 var_100         = qword ptr -100h
__text:00000001000035F0 var_F8          = qword ptr -0F8h
__text:00000001000035F0 var_F0          = qword ptr -0F0h
__text:00000001000035F0 var_E8          = qword ptr -0E8h
__text:00000001000035F0 var_E0          = qword ptr -0E0h
__text:00000001000035F0 var_D8          = qword ptr -0D8h
__text:00000001000035F0 var_D0          = qword ptr -0D0h
__text:00000001000035F0 var_C8          = qword ptr -0C8h
__text:00000001000035F0 var_C0          = qword ptr -0C0h
__text:00000001000035F0 var_B8          = qword ptr -0B8h
__text:00000001000035F0 var_B0          = qword ptr -0B0h
__text:00000001000035F0 var_A8          = qword ptr -0A8h
__text:00000001000035F0 var_A0          = qword ptr -0A0h
__text:00000001000035F0 var_94          = dword ptr -94h
__text:00000001000035F0 var_90          = qword ptr -90h
__text:00000001000035F0 var_88          = qword ptr -88h
__text:00000001000035F0 var_80          = qword ptr -80h
__text:00000001000035F0 var_78          = qword ptr -78h
__text:00000001000035F0 var_70          = qword ptr -70h
__text:00000001000035F0 var_68          = qword ptr -68h
__text:00000001000035F0 var_60          = qword ptr -60h
__text:00000001000035F0 var_54          = dword ptr -54h
__text:00000001000035F0 var_50          = qword ptr -50h
__text:00000001000035F0 var_48          = qword ptr -48h
__text:00000001000035F0 var_40          = qword ptr -40h
__text:00000001000035F0 var_38          = qword ptr -38h
__text:00000001000035F0 var_30          = qword ptr -30h
__text:00000001000035F0 var_28          = qword ptr -28h
__text:00000001000035F0 var_20          = qword ptr -20h
__text:00000001000035F0 var_18          = qword ptr -18h
__text:00000001000035F0 var_10          = qword ptr -10h
__text:00000001000035F0 var_8           = qword ptr -8
__text:00000001000035F0
__text:00000001000035F0                 push    rbp
__text:00000001000035F1                 mov     rbp, rsp
__text:00000001000035F4                 sub     rsp, 3A0h
__text:00000001000035FB                 mov     al, 1
__text:00000001000035FD                 mov     [rbp+var_3F8], rdi
__text:0000000100003604                 mov     [rbp+var_400], rsi
__text:000000010000360B                 mov     [rbp+var_408], rdx
__text:0000000100003612                 mov     [rbp+var_410], rcx
__text:0000000100003619                 mov     [rbp+var_414], 0
__text:0000000100003623                 mov     rcx, [rbp+var_410]
__text:000000010000362A                 mov     rdx, [rbp+var_400]
__text:0000000100003631                 mov     rsi, [rbp+var_3F8]
__text:0000000100003638                 mov     [rbp+var_3D8], rcx
__text:000000010000363F                 mov     [rbp+var_3E0], rdx
__text:0000000100003646                 mov     [rbp+var_3E8], rsi
__text:000000010000364D                 mov     rcx, [rbp+var_3E0]
__text:0000000100003654                 mov     rdx, [rbp+var_3E8]
__text:000000010000365B                 mov     [rbp+var_3C8], rcx
__text:0000000100003662                 mov     [rbp+var_3D0], rdx
__text:0000000100003669                 mov     rcx, [rbp+var_3C8]
__text:0000000100003670                 mov     r8d, [rcx]
__text:0000000100003673                 mov     rcx, [rbp+var_3D0]
__text:000000010000367A                 cmp     r8d, [rcx]
__text:000000010000367D                 mov     [rbp+var_415], al
__text:0000000100003683                 jl      loc_1000036D2
__text:0000000100003689                 mov     al, 0
__text:000000010000368B                 mov     rcx, [rbp+var_3D0]
__text:0000000100003692                 mov     edx, [rcx]
__text:0000000100003694                 mov     rcx, [rbp+var_3C8]
__text:000000010000369B                 cmp     edx, [rcx]
__text:000000010000369D                 mov     [rbp+var_416], al
__text:00000001000036A3                 jl      loc_1000036C6
__text:00000001000036A9                 mov     rax, [rbp+var_3C8]
__text:00000001000036B0                 mov     ecx, [rax+4]
__text:00000001000036B3                 mov     rax, [rbp+var_3D0]
__text:00000001000036BA                 cmp     ecx, [rax+4]
__text:00000001000036BD                 setl    dl
__text:00000001000036C0                 mov     [rbp+var_416], dl
__text:00000001000036C6
__text:00000001000036C6 loc_1000036C6:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+B3↑j
__text:00000001000036C6                 mov     al, [rbp+var_416]
__text:00000001000036CC                 mov     [rbp+var_415], al
__text:00000001000036D2
__text:00000001000036D2 loc_1000036D2:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+93↑j
__text:00000001000036D2                 mov     al, [rbp+var_415]
__text:00000001000036D8                 test    al, 1
__text:00000001000036DA                 jnz     loc_100003B12
__text:00000001000036E0                 mov     al, 1
__text:00000001000036E2                 mov     rcx, [rbp+var_410]
__text:00000001000036E9                 mov     rdx, [rbp+var_408]
__text:00000001000036F0                 mov     rsi, [rbp+var_400]
__text:00000001000036F7                 mov     [rbp+var_18], rcx
__text:00000001000036FB                 mov     [rbp+var_20], rdx
__text:00000001000036FF                 mov     [rbp+var_28], rsi
__text:0000000100003703                 mov     rcx, [rbp+var_20]
__text:0000000100003707                 mov     rdx, [rbp+var_28]
__text:000000010000370B                 mov     [rbp+var_8], rcx
__text:000000010000370F                 mov     [rbp+var_10], rdx
__text:0000000100003713                 mov     rcx, [rbp+var_8]
__text:0000000100003717                 mov     edi, [rcx]
__text:0000000100003719                 mov     rcx, [rbp+var_10]
__text:000000010000371D                 cmp     edi, [rcx]
__text:000000010000371F                 mov     [rbp+var_417], al
__text:0000000100003725                 jl      loc_100003768
__text:000000010000372B                 mov     al, 0
__text:000000010000372D                 mov     rcx, [rbp+var_10]
__text:0000000100003731                 mov     edx, [rcx]
__text:0000000100003733                 mov     rcx, [rbp+var_8]
__text:0000000100003737                 cmp     edx, [rcx]
__text:0000000100003739                 mov     [rbp+var_418], al
__text:000000010000373F                 jl      loc_10000375C
__text:0000000100003745                 mov     rax, [rbp+var_8]
__text:0000000100003749                 mov     ecx, [rax+4]
__text:000000010000374C                 mov     rax, [rbp+var_10]
__text:0000000100003750                 cmp     ecx, [rax+4]
__text:0000000100003753                 setl    dl
__text:0000000100003756                 mov     [rbp+var_418], dl
__text:000000010000375C
__text:000000010000375C loc_10000375C:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+14F↑j
__text:000000010000375C                 mov     al, [rbp+var_418]
__text:0000000100003762                 mov     [rbp+var_417], al
__text:0000000100003768
__text:0000000100003768 loc_100003768:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+135↑j
__text:0000000100003768                 mov     al, [rbp+var_417]
__text:000000010000376E                 test    al, 1
__text:0000000100003770                 jnz     loc_100003787
__text:0000000100003776                 mov     eax, [rbp+var_414]
__text:000000010000377C                 mov     [rbp+var_3EC], eax
__text:0000000100003782                 jmp     loc_100004134
__text:0000000100003787 ; ---------------------------------------------------------------------------
__text:0000000100003787
__text:0000000100003787 loc_100003787:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+180↑j
__text:0000000100003787                 mov     al, 1
__text:0000000100003789                 lea     rcx, [rbp+var_54]
__text:000000010000378D                 lea     rdx, [rbp+var_94]
__text:0000000100003794                 mov     rsi, [rbp+var_400]
__text:000000010000379B                 mov     rdi, [rbp+var_408]
__text:00000001000037A2                 mov     [rbp+var_C0], rsi
__text:00000001000037A9                 mov     [rbp+var_C8], rdi
__text:00000001000037B0                 mov     rsi, [rbp+var_C0]
__text:00000001000037B7                 mov     rdi, [rbp+var_C8]
__text:00000001000037BE                 mov     [rbp+var_B0], rsi
__text:00000001000037C5                 mov     [rbp+var_B8], rdi
__text:00000001000037CC                 mov     rsi, [rbp+var_B0]
__text:00000001000037D3                 mov     rdi, [rbp+var_B8]
__text:00000001000037DA                 mov     [rbp+var_A0], rsi
__text:00000001000037E1                 mov     [rbp+var_A8], rdi
__text:00000001000037E8                 mov     rdi, [rbp+var_A0]
__text:00000001000037EF                 mov     r8, [rbp+var_A8]
__text:00000001000037F6                 mov     [rbp+var_88], rdi
__text:00000001000037FD                 mov     [rbp+var_90], r8
__text:0000000100003804                 mov     rdi, [rbp+var_88]
__text:000000010000380B                 mov     [rbp+var_80], rdi
__text:000000010000380F                 mov     rdi, [rbp+var_80]
__text:0000000100003813                 mov     r9d, [rdi]
__text:0000000100003816                 mov     [rbp+var_94], r9d
__text:000000010000381D                 mov     rdi, [rbp+var_90]
__text:0000000100003824                 mov     [rbp+var_70], rdi
__text:0000000100003828                 mov     rdi, [rbp+var_70]
__text:000000010000382C                 mov     r9d, [rdi]
__text:000000010000382F                 mov     rdi, [rbp+var_88]
__text:0000000100003836                 mov     [rdi], r9d
__text:0000000100003839                 mov     [rbp+var_78], rdx
__text:000000010000383D                 mov     rdx, [rbp+var_78]
__text:0000000100003841                 mov     r9d, [rdx]
__text:0000000100003844                 mov     rdx, [rbp+var_90]
__text:000000010000384B                 mov     [rdx], r9d
__text:000000010000384E                 add     rsi, 4
__text:0000000100003855                 mov     rdx, [rbp+var_B8]
__text:000000010000385C                 add     rdx, 4
__text:0000000100003863                 mov     [rbp+var_60], rsi
__text:0000000100003867                 mov     [rbp+var_68], rdx
__text:000000010000386B                 mov     rdx, [rbp+var_60]
__text:000000010000386F                 mov     rsi, [rbp+var_68]
__text:0000000100003873                 mov     [rbp+var_48], rdx
__text:0000000100003877                 mov     [rbp+var_50], rsi
__text:000000010000387B                 mov     rdx, [rbp+var_48]
__text:000000010000387F                 mov     [rbp+var_40], rdx
__text:0000000100003883                 mov     rdx, [rbp+var_40]
__text:0000000100003887                 mov     r9d, [rdx]
__text:000000010000388A                 mov     [rbp+var_54], r9d
__text:000000010000388E                 mov     rdx, [rbp+var_50]
__text:0000000100003892                 mov     [rbp+var_30], rdx
__text:0000000100003896                 mov     rdx, [rbp+var_30]
__text:000000010000389A                 mov     r9d, [rdx]
__text:000000010000389D                 mov     rdx, [rbp+var_48]
__text:00000001000038A1                 mov     [rdx], r9d
__text:00000001000038A4                 mov     [rbp+var_38], rcx
__text:00000001000038A8                 mov     rcx, [rbp+var_38]
__text:00000001000038AC                 mov     r9d, [rcx]
__text:00000001000038AF                 mov     rcx, [rbp+var_50]
__text:00000001000038B3                 mov     [rcx], r9d
__text:00000001000038B6                 mov     [rbp+var_414], 1
__text:00000001000038C0                 mov     rcx, [rbp+var_410]
__text:00000001000038C7                 mov     rdx, [rbp+var_400]
__text:00000001000038CE                 mov     rsi, [rbp+var_3F8]
__text:00000001000038D5                 mov     [rbp+var_E0], rcx
__text:00000001000038DC                 mov     [rbp+var_E8], rdx
__text:00000001000038E3                 mov     [rbp+var_F0], rsi
__text:00000001000038EA                 mov     rcx, [rbp+var_E8]
__text:00000001000038F1                 mov     rdx, [rbp+var_F0]
__text:00000001000038F8                 mov     [rbp+var_D0], rcx
__text:00000001000038FF                 mov     [rbp+var_D8], rdx
__text:0000000100003906                 mov     rcx, [rbp+var_D0]
__text:000000010000390D                 mov     r9d, [rcx]
__text:0000000100003910                 mov     rcx, [rbp+var_D8]
__text:0000000100003917                 cmp     r9d, [rcx]
__text:000000010000391A                 mov     [rbp+var_419], al
__text:0000000100003920                 jl      loc_10000396F
__text:0000000100003926                 mov     al, 0
__text:0000000100003928                 mov     rcx, [rbp+var_D8]
__text:000000010000392F                 mov     edx, [rcx]
__text:0000000100003931                 mov     rcx, [rbp+var_D0]
__text:0000000100003938                 cmp     edx, [rcx]
__text:000000010000393A                 mov     [rbp+var_41A], al
__text:0000000100003940                 jl      loc_100003963
__text:0000000100003946                 mov     rax, [rbp+var_D0]
__text:000000010000394D                 mov     ecx, [rax+4]
__text:0000000100003950                 mov     rax, [rbp+var_D8]
__text:0000000100003957                 cmp     ecx, [rax+4]
__text:000000010000395A                 setl    dl
__text:000000010000395D                 mov     [rbp+var_41A], dl
__text:0000000100003963
__text:0000000100003963 loc_100003963:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+350↑j
__text:0000000100003963                 mov     al, [rbp+var_41A]
__text:0000000100003969                 mov     [rbp+var_419], al
__text:000000010000396F
__text:000000010000396F loc_10000396F:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+330↑j
__text:000000010000396F                 mov     al, [rbp+var_419]
__text:0000000100003975                 test    al, 1
__text:0000000100003977                 jnz     loc_100003982
__text:000000010000397D                 jmp     loc_100003B01
__text:0000000100003982 ; ---------------------------------------------------------------------------
__text:0000000100003982
__text:0000000100003982 loc_100003982:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+387↑j
__text:0000000100003982                 lea     rax, [rbp+var_11C]
__text:0000000100003989                 lea     rcx, [rbp+var_15C]
__text:0000000100003990                 mov     rdx, [rbp+var_3F8]
__text:0000000100003997                 mov     rsi, [rbp+var_400]
__text:000000010000399E                 mov     [rbp+var_188], rdx
__text:00000001000039A5                 mov     [rbp+var_190], rsi
__text:00000001000039AC                 mov     rdx, [rbp+var_188]
__text:00000001000039B3                 mov     rsi, [rbp+var_190]
__text:00000001000039BA                 mov     [rbp+var_178], rdx
__text:00000001000039C1                 mov     [rbp+var_180], rsi
__text:00000001000039C8                 mov     rdx, [rbp+var_178]
__text:00000001000039CF                 mov     rsi, [rbp+var_180]
__text:00000001000039D6                 mov     [rbp+var_168], rdx
__text:00000001000039DD                 mov     [rbp+var_170], rsi
__text:00000001000039E4                 mov     rsi, [rbp+var_168]
__text:00000001000039EB                 mov     rdi, [rbp+var_170]
__text:00000001000039F2                 mov     [rbp+var_150], rsi
__text:00000001000039F9                 mov     [rbp+var_158], rdi
__text:0000000100003A00                 mov     rsi, [rbp+var_150]
__text:0000000100003A07                 mov     [rbp+var_148], rsi
__text:0000000100003A0E                 mov     rsi, [rbp+var_148]
__text:0000000100003A15                 mov     r8d, [rsi]
__text:0000000100003A18                 mov     [rbp+var_15C], r8d
__text:0000000100003A1F                 mov     rsi, [rbp+var_158]
__text:0000000100003A26                 mov     [rbp+var_138], rsi
__text:0000000100003A2D                 mov     rsi, [rbp+var_138]
__text:0000000100003A34                 mov     r8d, [rsi]
__text:0000000100003A37                 mov     rsi, [rbp+var_150]
__text:0000000100003A3E                 mov     [rsi], r8d
__text:0000000100003A41                 mov     [rbp+var_140], rcx
__text:0000000100003A48                 mov     rcx, [rbp+var_140]
__text:0000000100003A4F                 mov     r8d, [rcx]
__text:0000000100003A52                 mov     rcx, [rbp+var_158]
__text:0000000100003A59                 mov     [rcx], r8d
__text:0000000100003A5C                 add     rdx, 4
__text:0000000100003A63                 mov     rcx, [rbp+var_180]
__text:0000000100003A6A                 add     rcx, 4
__text:0000000100003A71                 mov     [rbp+var_128], rdx
__text:0000000100003A78                 mov     [rbp+var_130], rcx
__text:0000000100003A7F                 mov     rcx, [rbp+var_128]
__text:0000000100003A86                 mov     rdx, [rbp+var_130]
__text:0000000100003A8D                 mov     [rbp+var_110], rcx
__text:0000000100003A94                 mov     [rbp+var_118], rdx
__text:0000000100003A9B                 mov     rcx, [rbp+var_110]
__text:0000000100003AA2                 mov     [rbp+var_108], rcx
__text:0000000100003AA9                 mov     rcx, [rbp+var_108]
__text:0000000100003AB0                 mov     r8d, [rcx]
__text:0000000100003AB3                 mov     [rbp+var_11C], r8d
__text:0000000100003ABA                 mov     rcx, [rbp+var_118]
__text:0000000100003AC1                 mov     [rbp+var_F8], rcx
__text:0000000100003AC8                 mov     rcx, [rbp+var_F8]
__text:0000000100003ACF                 mov     r8d, [rcx]
__text:0000000100003AD2                 mov     rcx, [rbp+var_110]
__text:0000000100003AD9                 mov     [rcx], r8d
__text:0000000100003ADC                 mov     [rbp+var_100], rax
__text:0000000100003AE3                 mov     rax, [rbp+var_100]
__text:0000000100003AEA                 mov     r8d, [rax]
__text:0000000100003AED                 mov     rax, [rbp+var_118]
__text:0000000100003AF4                 mov     [rax], r8d
__text:0000000100003AF7                 mov     [rbp+var_414], 2
__text:0000000100003B01
__text:0000000100003B01 loc_100003B01:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+38D↑j
__text:0000000100003B01                 mov     eax, [rbp+var_414]
__text:0000000100003B07                 mov     [rbp+var_3EC], eax
__text:0000000100003B0D                 jmp     loc_100004134
__text:0000000100003B12 ; ---------------------------------------------------------------------------
__text:0000000100003B12
__text:0000000100003B12 loc_100003B12:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+EA↑j
__text:0000000100003B12                 mov     al, 1
__text:0000000100003B14                 mov     rcx, [rbp+var_410]
__text:0000000100003B1B                 mov     rdx, [rbp+var_408]
__text:0000000100003B22                 mov     rsi, [rbp+var_400]
__text:0000000100003B29                 mov     [rbp+var_1A8], rcx
__text:0000000100003B30                 mov     [rbp+var_1B0], rdx
__text:0000000100003B37                 mov     [rbp+var_1B8], rsi
__text:0000000100003B3E                 mov     rcx, [rbp+var_1B0]
__text:0000000100003B45                 mov     rdx, [rbp+var_1B8]
__text:0000000100003B4C                 mov     [rbp+var_198], rcx
__text:0000000100003B53                 mov     [rbp+var_1A0], rdx
__text:0000000100003B5A                 mov     rcx, [rbp+var_198]
__text:0000000100003B61                 mov     edi, [rcx]
__text:0000000100003B63                 mov     rcx, [rbp+var_1A0]
__text:0000000100003B6A                 cmp     edi, [rcx]
__text:0000000100003B6C                 mov     [rbp+var_41B], al
__text:0000000100003B72                 jl      loc_100003BC1
__text:0000000100003B78                 mov     al, 0
__text:0000000100003B7A                 mov     rcx, [rbp+var_1A0]
__text:0000000100003B81                 mov     edx, [rcx]
__text:0000000100003B83                 mov     rcx, [rbp+var_198]
__text:0000000100003B8A                 cmp     edx, [rcx]
__text:0000000100003B8C                 mov     [rbp+var_41C], al
__text:0000000100003B92                 jl      loc_100003BB5
__text:0000000100003B98                 mov     rax, [rbp+var_198]
__text:0000000100003B9F                 mov     ecx, [rax+4]
__text:0000000100003BA2                 mov     rax, [rbp+var_1A0]
__text:0000000100003BA9                 cmp     ecx, [rax+4]
__text:0000000100003BAC                 setl    dl
__text:0000000100003BAF                 mov     [rbp+var_41C], dl
__text:0000000100003BB5
__text:0000000100003BB5 loc_100003BB5:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+5A2↑j
__text:0000000100003BB5                 mov     al, [rbp+var_41C]
__text:0000000100003BBB                 mov     [rbp+var_41B], al
__text:0000000100003BC1
__text:0000000100003BC1 loc_100003BC1:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+582↑j
__text:0000000100003BC1                 mov     al, [rbp+var_41B]
__text:0000000100003BC7                 test    al, 1
__text:0000000100003BC9                 jnz     loc_100003BD4
__text:0000000100003BCF                 jmp     loc_100003D66
__text:0000000100003BD4 ; ---------------------------------------------------------------------------
__text:0000000100003BD4
__text:0000000100003BD4 loc_100003BD4:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+5D9↑j
__text:0000000100003BD4                 lea     rax, [rbp+var_1E4]
__text:0000000100003BDB                 lea     rcx, [rbp+var_224]
__text:0000000100003BE2                 mov     rdx, [rbp+var_3F8]
__text:0000000100003BE9                 mov     rsi, [rbp+var_408]
__text:0000000100003BF0                 mov     [rbp+var_250], rdx
__text:0000000100003BF7                 mov     [rbp+var_258], rsi
__text:0000000100003BFE                 mov     rdx, [rbp+var_250]
__text:0000000100003C05                 mov     rsi, [rbp+var_258]
__text:0000000100003C0C                 mov     [rbp+var_240], rdx
__text:0000000100003C13                 mov     [rbp+var_248], rsi
__text:0000000100003C1A                 mov     rdx, [rbp+var_240]
__text:0000000100003C21                 mov     rsi, [rbp+var_248]
__text:0000000100003C28                 mov     [rbp+var_230], rdx
__text:0000000100003C2F                 mov     [rbp+var_238], rsi
__text:0000000100003C36                 mov     rsi, [rbp+var_230]
__text:0000000100003C3D                 mov     rdi, [rbp+var_238]
__text:0000000100003C44                 mov     [rbp+var_218], rsi
__text:0000000100003C4B                 mov     [rbp+var_220], rdi
__text:0000000100003C52                 mov     rsi, [rbp+var_218]
__text:0000000100003C59                 mov     [rbp+var_210], rsi
__text:0000000100003C60                 mov     rsi, [rbp+var_210]
__text:0000000100003C67                 mov     r8d, [rsi]
__text:0000000100003C6A                 mov     [rbp+var_224], r8d
__text:0000000100003C71                 mov     rsi, [rbp+var_220]
__text:0000000100003C78                 mov     [rbp+var_200], rsi
__text:0000000100003C7F                 mov     rsi, [rbp+var_200]
__text:0000000100003C86                 mov     r8d, [rsi]
__text:0000000100003C89                 mov     rsi, [rbp+var_218]
__text:0000000100003C90                 mov     [rsi], r8d
__text:0000000100003C93                 mov     [rbp+var_208], rcx
__text:0000000100003C9A                 mov     rcx, [rbp+var_208]
__text:0000000100003CA1                 mov     r8d, [rcx]
__text:0000000100003CA4                 mov     rcx, [rbp+var_220]
__text:0000000100003CAB                 mov     [rcx], r8d
__text:0000000100003CAE                 add     rdx, 4
__text:0000000100003CB5                 mov     rcx, [rbp+var_248]
__text:0000000100003CBC                 add     rcx, 4
__text:0000000100003CC3                 mov     [rbp+var_1F0], rdx
__text:0000000100003CCA                 mov     [rbp+var_1F8], rcx
__text:0000000100003CD1                 mov     rcx, [rbp+var_1F0]
__text:0000000100003CD8                 mov     rdx, [rbp+var_1F8]
__text:0000000100003CDF                 mov     [rbp+var_1D8], rcx
__text:0000000100003CE6                 mov     [rbp+var_1E0], rdx
__text:0000000100003CED                 mov     rcx, [rbp+var_1D8]
__text:0000000100003CF4                 mov     [rbp+var_1D0], rcx
__text:0000000100003CFB                 mov     rcx, [rbp+var_1D0]
__text:0000000100003D02                 mov     r8d, [rcx]
__text:0000000100003D05                 mov     [rbp+var_1E4], r8d
__text:0000000100003D0C                 mov     rcx, [rbp+var_1E0]
__text:0000000100003D13                 mov     [rbp+var_1C0], rcx
__text:0000000100003D1A                 mov     rcx, [rbp+var_1C0]
__text:0000000100003D21                 mov     r8d, [rcx]
__text:0000000100003D24                 mov     rcx, [rbp+var_1D8]
__text:0000000100003D2B                 mov     [rcx], r8d
__text:0000000100003D2E                 mov     [rbp+var_1C8], rax
__text:0000000100003D35                 mov     rax, [rbp+var_1C8]
__text:0000000100003D3C                 mov     r8d, [rax]
__text:0000000100003D3F                 mov     rax, [rbp+var_1E0]
__text:0000000100003D46                 mov     [rax], r8d
__text:0000000100003D49                 mov     [rbp+var_414], 1
__text:0000000100003D53                 mov     r8d, [rbp+var_414]
__text:0000000100003D5A                 mov     [rbp+var_3EC], r8d
__text:0000000100003D61                 jmp     loc_100004134
__text:0000000100003D66 ; ---------------------------------------------------------------------------
__text:0000000100003D66
__text:0000000100003D66 loc_100003D66:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+5DF↑j
__text:0000000100003D66                 mov     al, 1
__text:0000000100003D68                 lea     rcx, [rbp+var_284]
__text:0000000100003D6F                 lea     rdx, [rbp+var_2C4]
__text:0000000100003D76                 mov     rsi, [rbp+var_3F8]
__text:0000000100003D7D                 mov     rdi, [rbp+var_400]
__text:0000000100003D84                 mov     [rbp+var_2F0], rsi
__text:0000000100003D8B                 mov     [rbp+var_2F8], rdi
__text:0000000100003D92                 mov     rsi, [rbp+var_2F0]
__text:0000000100003D99                 mov     rdi, [rbp+var_2F8]
__text:0000000100003DA0                 mov     [rbp+var_2E0], rsi
__text:0000000100003DA7                 mov     [rbp+var_2E8], rdi
__text:0000000100003DAE                 mov     rsi, [rbp+var_2E0]
__text:0000000100003DB5                 mov     rdi, [rbp+var_2E8]
__text:0000000100003DBC                 mov     [rbp+var_2D0], rsi
__text:0000000100003DC3                 mov     [rbp+var_2D8], rdi
__text:0000000100003DCA                 mov     rdi, [rbp+var_2D0]
__text:0000000100003DD1                 mov     r8, [rbp+var_2D8]
__text:0000000100003DD8                 mov     [rbp+var_2B8], rdi
__text:0000000100003DDF                 mov     [rbp+var_2C0], r8
__text:0000000100003DE6                 mov     rdi, [rbp+var_2B8]
__text:0000000100003DED                 mov     [rbp+var_2B0], rdi
__text:0000000100003DF4                 mov     rdi, [rbp+var_2B0]
__text:0000000100003DFB                 mov     r9d, [rdi]
__text:0000000100003DFE                 mov     [rbp+var_2C4], r9d
__text:0000000100003E05                 mov     rdi, [rbp+var_2C0]
__text:0000000100003E0C                 mov     [rbp+var_2A0], rdi
__text:0000000100003E13                 mov     rdi, [rbp+var_2A0]
__text:0000000100003E1A                 mov     r9d, [rdi]
__text:0000000100003E1D                 mov     rdi, [rbp+var_2B8]
__text:0000000100003E24                 mov     [rdi], r9d
__text:0000000100003E27                 mov     [rbp+var_2A8], rdx
__text:0000000100003E2E                 mov     rdx, [rbp+var_2A8]
__text:0000000100003E35                 mov     r9d, [rdx]
__text:0000000100003E38                 mov     rdx, [rbp+var_2C0]
__text:0000000100003E3F                 mov     [rdx], r9d
__text:0000000100003E42                 add     rsi, 4
__text:0000000100003E49                 mov     rdx, [rbp+var_2E8]
__text:0000000100003E50                 add     rdx, 4
__text:0000000100003E57                 mov     [rbp+var_290], rsi
__text:0000000100003E5E                 mov     [rbp+var_298], rdx
__text:0000000100003E65                 mov     rdx, [rbp+var_290]
__text:0000000100003E6C                 mov     rsi, [rbp+var_298]
__text:0000000100003E73                 mov     [rbp+var_278], rdx
__text:0000000100003E7A                 mov     [rbp+var_280], rsi
__text:0000000100003E81                 mov     rdx, [rbp+var_278]
__text:0000000100003E88                 mov     [rbp+var_270], rdx
__text:0000000100003E8F                 mov     rdx, [rbp+var_270]
__text:0000000100003E96                 mov     r9d, [rdx]
__text:0000000100003E99                 mov     [rbp+var_284], r9d
__text:0000000100003EA0                 mov     rdx, [rbp+var_280]
__text:0000000100003EA7                 mov     [rbp+var_260], rdx
__text:0000000100003EAE                 mov     rdx, [rbp+var_260]
__text:0000000100003EB5                 mov     r9d, [rdx]
__text:0000000100003EB8                 mov     rdx, [rbp+var_278]
__text:0000000100003EBF                 mov     [rdx], r9d
__text:0000000100003EC2                 mov     [rbp+var_268], rcx
__text:0000000100003EC9                 mov     rcx, [rbp+var_268]
__text:0000000100003ED0                 mov     r9d, [rcx]
__text:0000000100003ED3                 mov     rcx, [rbp+var_280]
__text:0000000100003EDA                 mov     [rcx], r9d
__text:0000000100003EDD                 mov     [rbp+var_414], 1
__text:0000000100003EE7                 mov     rcx, [rbp+var_410]
__text:0000000100003EEE                 mov     rdx, [rbp+var_408]
__text:0000000100003EF5                 mov     rsi, [rbp+var_400]
__text:0000000100003EFC                 mov     [rbp+var_310], rcx
__text:0000000100003F03                 mov     [rbp+var_318], rdx
__text:0000000100003F0A                 mov     [rbp+var_320], rsi
__text:0000000100003F11                 mov     rcx, [rbp+var_318]
__text:0000000100003F18                 mov     rdx, [rbp+var_320]
__text:0000000100003F1F                 mov     [rbp+var_300], rcx
__text:0000000100003F26                 mov     [rbp+var_308], rdx
__text:0000000100003F2D                 mov     rcx, [rbp+var_300]
__text:0000000100003F34                 mov     r9d, [rcx]
__text:0000000100003F37                 mov     rcx, [rbp+var_308]
__text:0000000100003F3E                 cmp     r9d, [rcx]
__text:0000000100003F41                 mov     [rbp+var_41D], al
__text:0000000100003F47                 jl      loc_100003F96
__text:0000000100003F4D                 mov     al, 0
__text:0000000100003F4F                 mov     rcx, [rbp+var_308]
__text:0000000100003F56                 mov     edx, [rcx]
__text:0000000100003F58                 mov     rcx, [rbp+var_300]
__text:0000000100003F5F                 cmp     edx, [rcx]
__text:0000000100003F61                 mov     [rbp+var_41E], al
__text:0000000100003F67                 jl      loc_100003F8A
__text:0000000100003F6D                 mov     rax, [rbp+var_300]
__text:0000000100003F74                 mov     ecx, [rax+4]
__text:0000000100003F77                 mov     rax, [rbp+var_308]
__text:0000000100003F7E                 cmp     ecx, [rax+4]
__text:0000000100003F81                 setl    dl
__text:0000000100003F84                 mov     [rbp+var_41E], dl
__text:0000000100003F8A
__text:0000000100003F8A loc_100003F8A:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+977↑j
__text:0000000100003F8A                 mov     al, [rbp+var_41E]
__text:0000000100003F90                 mov     [rbp+var_41D], al
__text:0000000100003F96
__text:0000000100003F96 loc_100003F96:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+957↑j
__text:0000000100003F96                 mov     al, [rbp+var_41D]
__text:0000000100003F9C                 test    al, 1
__text:0000000100003F9E                 jnz     loc_100003FA9
__text:0000000100003FA4                 jmp     loc_100004128
__text:0000000100003FA9 ; ---------------------------------------------------------------------------
__text:0000000100003FA9
__text:0000000100003FA9 loc_100003FA9:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+9AE↑j
__text:0000000100003FA9                 lea     rax, [rbp+var_34C]
__text:0000000100003FB0                 lea     rcx, [rbp+var_38C]
__text:0000000100003FB7                 mov     rdx, [rbp+var_400]
__text:0000000100003FBE                 mov     rsi, [rbp+var_408]
__text:0000000100003FC5                 mov     [rbp+var_3B8], rdx
__text:0000000100003FCC                 mov     [rbp+var_3C0], rsi
__text:0000000100003FD3                 mov     rdx, [rbp+var_3B8]
__text:0000000100003FDA                 mov     rsi, [rbp+var_3C0]
__text:0000000100003FE1                 mov     [rbp+var_3A8], rdx
__text:0000000100003FE8                 mov     [rbp+var_3B0], rsi
__text:0000000100003FEF                 mov     rdx, [rbp+var_3A8]
__text:0000000100003FF6                 mov     rsi, [rbp+var_3B0]
__text:0000000100003FFD                 mov     [rbp+var_398], rdx
__text:0000000100004004                 mov     [rbp+var_3A0], rsi
__text:000000010000400B                 mov     rsi, [rbp+var_398]
__text:0000000100004012                 mov     rdi, [rbp+var_3A0]
__text:0000000100004019                 mov     [rbp+var_380], rsi
__text:0000000100004020                 mov     [rbp+var_388], rdi
__text:0000000100004027                 mov     rsi, [rbp+var_380]
__text:000000010000402E                 mov     [rbp+var_378], rsi
__text:0000000100004035                 mov     rsi, [rbp+var_378]
__text:000000010000403C                 mov     r8d, [rsi]
__text:000000010000403F                 mov     [rbp+var_38C], r8d
__text:0000000100004046                 mov     rsi, [rbp+var_388]
__text:000000010000404D                 mov     [rbp+var_368], rsi
__text:0000000100004054                 mov     rsi, [rbp+var_368]
__text:000000010000405B                 mov     r8d, [rsi]
__text:000000010000405E                 mov     rsi, [rbp+var_380]
__text:0000000100004065                 mov     [rsi], r8d
__text:0000000100004068                 mov     [rbp+var_370], rcx
__text:000000010000406F                 mov     rcx, [rbp+var_370]
__text:0000000100004076                 mov     r8d, [rcx]
__text:0000000100004079                 mov     rcx, [rbp+var_388]
__text:0000000100004080                 mov     [rcx], r8d
__text:0000000100004083                 add     rdx, 4
__text:000000010000408A                 mov     rcx, [rbp+var_3B0]
__text:0000000100004091                 add     rcx, 4
__text:0000000100004098                 mov     [rbp+var_358], rdx
__text:000000010000409F                 mov     [rbp+var_360], rcx
__text:00000001000040A6                 mov     rcx, [rbp+var_358]
__text:00000001000040AD                 mov     rdx, [rbp+var_360]
__text:00000001000040B4                 mov     [rbp+var_340], rcx
__text:00000001000040BB                 mov     [rbp+var_348], rdx
__text:00000001000040C2                 mov     rcx, [rbp+var_340]
__text:00000001000040C9                 mov     [rbp+var_338], rcx
__text:00000001000040D0                 mov     rcx, [rbp+var_338]
__text:00000001000040D7                 mov     r8d, [rcx]
__text:00000001000040DA                 mov     [rbp+var_34C], r8d
__text:00000001000040E1                 mov     rcx, [rbp+var_348]
__text:00000001000040E8                 mov     [rbp+var_328], rcx
__text:00000001000040EF                 mov     rcx, [rbp+var_328]
__text:00000001000040F6                 mov     r8d, [rcx]
__text:00000001000040F9                 mov     rcx, [rbp+var_340]
__text:0000000100004100                 mov     [rcx], r8d
__text:0000000100004103                 mov     [rbp+var_330], rax
__text:000000010000410A                 mov     rax, [rbp+var_330]
__text:0000000100004111                 mov     r8d, [rax]
__text:0000000100004114                 mov     rax, [rbp+var_348]
__text:000000010000411B                 mov     [rax], r8d
__text:000000010000411E                 mov     [rbp+var_414], 2
__text:0000000100004128
__text:0000000100004128 loc_100004128:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+9B4↑j
__text:0000000100004128                 mov     eax, [rbp+var_414]
__text:000000010000412E                 mov     [rbp+var_3EC], eax
__text:0000000100004134
__text:0000000100004134 loc_100004134:                          ; CODE XREF: std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+192↑j
__text:0000000100004134                                         ; std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+51D↑j ...
__text:0000000100004134                 mov     eax, [rbp+var_3EC]
__text:000000010000413A                 add     rsp, 3A0h
__text:0000000100004141                 pop     rbp
__text:0000000100004142                 retn
__text:0000000100004142 __ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T_ endp
__text:0000000100004142
__text:0000000100004142 ; ---------------------------------------------------------------------------
__text:0000000100004143                 align 10h
__text:0000000100004150
__text:0000000100004150 ; =============== S U B R O U T I N E =======================================
__text:0000000100004150
__text:0000000100004150 ; Attributes: bp-based frame
__text:0000000100004150
__text:0000000100004150 ; unsigned int std::__1::__sort4<std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &, std::__1::pair<int, int>*>(std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &)
__text:0000000100004150 __ZNSt3__17__sort4IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_T_ proc near
__text:0000000100004150                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__17__sort4IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_T__ptr↓o
__text:0000000100004150
__text:0000000100004150 var_28A         = byte ptr -28Ah
__text:0000000100004150 var_289         = byte ptr -289h
__text:0000000100004150 var_288         = byte ptr -288h
__text:0000000100004150 var_287         = byte ptr -287h
__text:0000000100004150 var_286         = byte ptr -286h
__text:0000000100004150 var_285         = byte ptr -285h
__text:0000000100004150 var_284         = dword ptr -284h
__text:0000000100004150 var_280         = qword ptr -280h
__text:0000000100004150 var_278         = qword ptr -278h
__text:0000000100004150 var_270         = qword ptr -270h
__text:0000000100004150 var_268         = qword ptr -268h
__text:0000000100004150 var_260         = qword ptr -260h
__text:0000000100004150 var_258         = qword ptr -258h
__text:0000000100004150 var_250         = qword ptr -250h
__text:0000000100004150 var_248         = qword ptr -248h
__text:0000000100004150 var_240         = qword ptr -240h
__text:0000000100004150 var_238         = qword ptr -238h
__text:0000000100004150 var_230         = qword ptr -230h
__text:0000000100004150 var_228         = qword ptr -228h
__text:0000000100004150 var_220         = qword ptr -220h
__text:0000000100004150 var_218         = qword ptr -218h
__text:0000000100004150 var_210         = qword ptr -210h
__text:0000000100004150 var_208         = qword ptr -208h
__text:0000000100004150 var_1FC         = dword ptr -1FCh
__text:0000000100004150 var_1F8         = qword ptr -1F8h
__text:0000000100004150 var_1F0         = qword ptr -1F0h
__text:0000000100004150 var_1E8         = qword ptr -1E8h
__text:0000000100004150 var_1E0         = qword ptr -1E0h
__text:0000000100004150 var_1D8         = qword ptr -1D8h
__text:0000000100004150 var_1D0         = qword ptr -1D0h
__text:0000000100004150 var_1C8         = qword ptr -1C8h
__text:0000000100004150 var_1BC         = dword ptr -1BCh
__text:0000000100004150 var_1B8         = qword ptr -1B8h
__text:0000000100004150 var_1B0         = qword ptr -1B0h
__text:0000000100004150 var_1A8         = qword ptr -1A8h
__text:0000000100004150 var_1A0         = qword ptr -1A0h
__text:0000000100004150 var_198         = qword ptr -198h
__text:0000000100004150 var_190         = qword ptr -190h
__text:0000000100004150 var_188         = qword ptr -188h
__text:0000000100004150 var_180         = qword ptr -180h
__text:0000000100004150 var_178         = qword ptr -178h
__text:0000000100004150 var_170         = qword ptr -170h
__text:0000000100004150 var_168         = qword ptr -168h
__text:0000000100004150 var_160         = qword ptr -160h
__text:0000000100004150 var_158         = qword ptr -158h
__text:0000000100004150 var_150         = qword ptr -150h
__text:0000000100004150 var_148         = qword ptr -148h
__text:0000000100004150 var_140         = qword ptr -140h
__text:0000000100004150 var_134         = dword ptr -134h
__text:0000000100004150 var_130         = qword ptr -130h
__text:0000000100004150 var_128         = qword ptr -128h
__text:0000000100004150 var_120         = qword ptr -120h
__text:0000000100004150 var_118         = qword ptr -118h
__text:0000000100004150 var_110         = qword ptr -110h
__text:0000000100004150 var_108         = qword ptr -108h
__text:0000000100004150 var_100         = qword ptr -100h
__text:0000000100004150 var_F4          = dword ptr -0F4h
__text:0000000100004150 var_F0          = qword ptr -0F0h
__text:0000000100004150 var_E8          = qword ptr -0E8h
__text:0000000100004150 var_E0          = qword ptr -0E0h
__text:0000000100004150 var_D8          = qword ptr -0D8h
__text:0000000100004150 var_D0          = qword ptr -0D0h
__text:0000000100004150 var_C8          = qword ptr -0C8h
__text:0000000100004150 var_C0          = qword ptr -0C0h
__text:0000000100004150 var_B8          = qword ptr -0B8h
__text:0000000100004150 var_B0          = qword ptr -0B0h
__text:0000000100004150 var_A8          = qword ptr -0A8h
__text:0000000100004150 var_A0          = qword ptr -0A0h
__text:0000000100004150 var_98          = qword ptr -98h
__text:0000000100004150 var_90          = qword ptr -90h
__text:0000000100004150 var_88          = qword ptr -88h
__text:0000000100004150 var_80          = qword ptr -80h
__text:0000000100004150 var_78          = qword ptr -78h
__text:0000000100004150 var_6C          = dword ptr -6Ch
__text:0000000100004150 var_68          = qword ptr -68h
__text:0000000100004150 var_60          = qword ptr -60h
__text:0000000100004150 var_58          = qword ptr -58h
__text:0000000100004150 var_50          = qword ptr -50h
__text:0000000100004150 var_48          = qword ptr -48h
__text:0000000100004150 var_40          = qword ptr -40h
__text:0000000100004150 var_38          = qword ptr -38h
__text:0000000100004150 var_2C          = dword ptr -2Ch
__text:0000000100004150 var_28          = qword ptr -28h
__text:0000000100004150 var_20          = qword ptr -20h
__text:0000000100004150 var_18          = qword ptr -18h
__text:0000000100004150 var_10          = qword ptr -10h
__text:0000000100004150 var_8           = qword ptr -8
__text:0000000100004150
__text:0000000100004150                 push    rbp
__text:0000000100004151                 mov     rbp, rsp
__text:0000000100004154                 sub     rsp, 290h
__text:000000010000415B                 mov     [rbp+var_260], rdi
__text:0000000100004162                 mov     [rbp+var_268], rsi
__text:0000000100004169                 mov     [rbp+var_270], rdx
__text:0000000100004170                 mov     [rbp+var_278], rcx
__text:0000000100004177                 mov     [rbp+var_280], r8
__text:000000010000417E                 mov     rdi, [rbp+var_260]
__text:0000000100004185                 mov     rsi, [rbp+var_268]
__text:000000010000418C                 mov     rdx, [rbp+var_270]
__text:0000000100004193                 mov     rcx, [rbp+var_280]
__text:000000010000419A                 call    j___ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T_ ; std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:000000010000419F                 mov     r9b, 1
__text:00000001000041A2                 mov     [rbp+var_284], eax
__text:00000001000041A8                 mov     rcx, [rbp+var_280]
__text:00000001000041AF                 mov     rdx, [rbp+var_278]
__text:00000001000041B6                 mov     rsi, [rbp+var_270]
__text:00000001000041BD                 mov     [rbp+var_248], rcx
__text:00000001000041C4                 mov     [rbp+var_250], rdx
__text:00000001000041CB                 mov     [rbp+var_258], rsi
__text:00000001000041D2                 mov     rcx, [rbp+var_250]
__text:00000001000041D9                 mov     rdx, [rbp+var_258]
__text:00000001000041E0                 mov     [rbp+var_238], rcx
__text:00000001000041E7                 mov     [rbp+var_240], rdx
__text:00000001000041EE                 mov     rcx, [rbp+var_238]
__text:00000001000041F5                 mov     eax, [rcx]
__text:00000001000041F7                 mov     rcx, [rbp+var_240]
__text:00000001000041FE                 cmp     eax, [rcx]
__text:0000000100004200                 mov     [rbp+var_285], r9b
__text:0000000100004207                 jl      loc_100004256
__text:000000010000420D                 mov     al, 0
__text:000000010000420F                 mov     rcx, [rbp+var_240]
__text:0000000100004216                 mov     edx, [rcx]
__text:0000000100004218                 mov     rcx, [rbp+var_238]
__text:000000010000421F                 cmp     edx, [rcx]
__text:0000000100004221                 mov     [rbp+var_286], al
__text:0000000100004227                 jl      loc_10000424A
__text:000000010000422D                 mov     rax, [rbp+var_238]
__text:0000000100004234                 mov     ecx, [rax+4]
__text:0000000100004237                 mov     rax, [rbp+var_240]
__text:000000010000423E                 cmp     ecx, [rax+4]
__text:0000000100004241                 setl    dl
__text:0000000100004244                 mov     [rbp+var_286], dl
__text:000000010000424A
__text:000000010000424A loc_10000424A:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+D7↑j
__text:000000010000424A                 mov     al, [rbp+var_286]
__text:0000000100004250                 mov     [rbp+var_285], al
__text:0000000100004256
__text:0000000100004256 loc_100004256:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+B7↑j
__text:0000000100004256                 mov     al, [rbp+var_285]
__text:000000010000425C                 test    al, 1
__text:000000010000425E                 jnz     loc_100004269
__text:0000000100004264                 jmp     loc_10000482D
__text:0000000100004269 ; ---------------------------------------------------------------------------
__text:0000000100004269
__text:0000000100004269 loc_100004269:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+10E↑j
__text:0000000100004269                 mov     al, 1
__text:000000010000426B                 lea     rcx, [rbp+var_2C]
__text:000000010000426F                 lea     rdx, [rbp+var_6C]
__text:0000000100004273                 mov     rsi, [rbp+var_270]
__text:000000010000427A                 mov     rdi, [rbp+var_278]
__text:0000000100004281                 mov     [rbp+var_98], rsi
__text:0000000100004288                 mov     [rbp+var_A0], rdi
__text:000000010000428F                 mov     rsi, [rbp+var_98]
__text:0000000100004296                 mov     rdi, [rbp+var_A0]
__text:000000010000429D                 mov     [rbp+var_88], rsi
__text:00000001000042A4                 mov     [rbp+var_90], rdi
__text:00000001000042AB                 mov     rsi, [rbp+var_88]
__text:00000001000042B2                 mov     rdi, [rbp+var_90]
__text:00000001000042B9                 mov     [rbp+var_78], rsi
__text:00000001000042BD                 mov     [rbp+var_80], rdi
__text:00000001000042C1                 mov     rdi, [rbp+var_78]
__text:00000001000042C5                 mov     r8, [rbp+var_80]
__text:00000001000042C9                 mov     [rbp+var_60], rdi
__text:00000001000042CD                 mov     [rbp+var_68], r8
__text:00000001000042D1                 mov     rdi, [rbp+var_60]
__text:00000001000042D5                 mov     [rbp+var_58], rdi
__text:00000001000042D9                 mov     rdi, [rbp+var_58]
__text:00000001000042DD                 mov     r9d, [rdi]
__text:00000001000042E0                 mov     [rbp+var_6C], r9d
__text:00000001000042E4                 mov     rdi, [rbp+var_68]
__text:00000001000042E8                 mov     [rbp+var_48], rdi
__text:00000001000042EC                 mov     rdi, [rbp+var_48]
__text:00000001000042F0                 mov     r9d, [rdi]
__text:00000001000042F3                 mov     rdi, [rbp+var_60]
__text:00000001000042F7                 mov     [rdi], r9d
__text:00000001000042FA                 mov     [rbp+var_50], rdx
__text:00000001000042FE                 mov     rdx, [rbp+var_50]
__text:0000000100004302                 mov     r9d, [rdx]
__text:0000000100004305                 mov     rdx, [rbp+var_68]
__text:0000000100004309                 mov     [rdx], r9d
__text:000000010000430C                 add     rsi, 4
__text:0000000100004313                 mov     rdx, [rbp+var_90]
__text:000000010000431A                 add     rdx, 4
__text:0000000100004321                 mov     [rbp+var_38], rsi
__text:0000000100004325                 mov     [rbp+var_40], rdx
__text:0000000100004329                 mov     rdx, [rbp+var_38]
__text:000000010000432D                 mov     rsi, [rbp+var_40]
__text:0000000100004331                 mov     [rbp+var_20], rdx
__text:0000000100004335                 mov     [rbp+var_28], rsi
__text:0000000100004339                 mov     rdx, [rbp+var_20]
__text:000000010000433D                 mov     [rbp+var_18], rdx
__text:0000000100004341                 mov     rdx, [rbp+var_18]
__text:0000000100004345                 mov     r9d, [rdx]
__text:0000000100004348                 mov     [rbp+var_2C], r9d
__text:000000010000434C                 mov     rdx, [rbp+var_28]
__text:0000000100004350                 mov     [rbp+var_8], rdx
__text:0000000100004354                 mov     rdx, [rbp+var_8]
__text:0000000100004358                 mov     r9d, [rdx]
__text:000000010000435B                 mov     rdx, [rbp+var_20]
__text:000000010000435F                 mov     [rdx], r9d
__text:0000000100004362                 mov     [rbp+var_10], rcx
__text:0000000100004366                 mov     rcx, [rbp+var_10]
__text:000000010000436A                 mov     r9d, [rcx]
__text:000000010000436D                 mov     rcx, [rbp+var_28]
__text:0000000100004371                 mov     [rcx], r9d
__text:0000000100004374                 mov     r9d, [rbp+var_284]
__text:000000010000437B                 add     r9d, 1
__text:0000000100004382                 mov     [rbp+var_284], r9d
__text:0000000100004389                 mov     rcx, [rbp+var_280]
__text:0000000100004390                 mov     rdx, [rbp+var_270]
__text:0000000100004397                 mov     rsi, [rbp+var_268]
__text:000000010000439E                 mov     [rbp+var_B8], rcx
__text:00000001000043A5                 mov     [rbp+var_C0], rdx
__text:00000001000043AC                 mov     [rbp+var_C8], rsi
__text:00000001000043B3                 mov     rcx, [rbp+var_C0]
__text:00000001000043BA                 mov     rdx, [rbp+var_C8]
__text:00000001000043C1                 mov     [rbp+var_A8], rcx
__text:00000001000043C8                 mov     [rbp+var_B0], rdx
__text:00000001000043CF                 mov     rcx, [rbp+var_A8]
__text:00000001000043D6                 mov     r9d, [rcx]
__text:00000001000043D9                 mov     rcx, [rbp+var_B0]
__text:00000001000043E0                 cmp     r9d, [rcx]
__text:00000001000043E3                 mov     [rbp+var_287], al
__text:00000001000043E9                 jl      loc_100004438
__text:00000001000043EF                 mov     al, 0
__text:00000001000043F1                 mov     rcx, [rbp+var_B0]
__text:00000001000043F8                 mov     edx, [rcx]
__text:00000001000043FA                 mov     rcx, [rbp+var_A8]
__text:0000000100004401                 cmp     edx, [rcx]
__text:0000000100004403                 mov     [rbp+var_288], al
__text:0000000100004409                 jl      loc_10000442C
__text:000000010000440F                 mov     rax, [rbp+var_A8]
__text:0000000100004416                 mov     ecx, [rax+4]
__text:0000000100004419                 mov     rax, [rbp+var_B0]
__text:0000000100004420                 cmp     ecx, [rax+4]
__text:0000000100004423                 setl    dl
__text:0000000100004426                 mov     [rbp+var_288], dl
__text:000000010000442C
__text:000000010000442C loc_10000442C:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+2B9↑j
__text:000000010000442C                 mov     al, [rbp+var_288]
__text:0000000100004432                 mov     [rbp+var_287], al
__text:0000000100004438
__text:0000000100004438 loc_100004438:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+299↑j
__text:0000000100004438                 mov     al, [rbp+var_287]
__text:000000010000443E                 test    al, 1
__text:0000000100004440                 jnz     loc_10000444B
__text:0000000100004446                 jmp     loc_100004828
__text:000000010000444B ; ---------------------------------------------------------------------------
__text:000000010000444B
__text:000000010000444B loc_10000444B:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+2F0↑j
__text:000000010000444B                 mov     al, 1
__text:000000010000444D                 lea     rcx, [rbp+var_F4]
__text:0000000100004454                 lea     rdx, [rbp+var_134]
__text:000000010000445B                 mov     rsi, [rbp+var_268]
__text:0000000100004462                 mov     rdi, [rbp+var_270]
__text:0000000100004469                 mov     [rbp+var_160], rsi
__text:0000000100004470                 mov     [rbp+var_168], rdi
__text:0000000100004477                 mov     rsi, [rbp+var_160]
__text:000000010000447E                 mov     rdi, [rbp+var_168]
__text:0000000100004485                 mov     [rbp+var_150], rsi
__text:000000010000448C                 mov     [rbp+var_158], rdi
__text:0000000100004493                 mov     rsi, [rbp+var_150]
__text:000000010000449A                 mov     rdi, [rbp+var_158]
__text:00000001000044A1                 mov     [rbp+var_140], rsi
__text:00000001000044A8                 mov     [rbp+var_148], rdi
__text:00000001000044AF                 mov     rdi, [rbp+var_140]
__text:00000001000044B6                 mov     r8, [rbp+var_148]
__text:00000001000044BD                 mov     [rbp+var_128], rdi
__text:00000001000044C4                 mov     [rbp+var_130], r8
__text:00000001000044CB                 mov     rdi, [rbp+var_128]
__text:00000001000044D2                 mov     [rbp+var_120], rdi
__text:00000001000044D9                 mov     rdi, [rbp+var_120]
__text:00000001000044E0                 mov     r9d, [rdi]
__text:00000001000044E3                 mov     [rbp+var_134], r9d
__text:00000001000044EA                 mov     rdi, [rbp+var_130]
__text:00000001000044F1                 mov     [rbp+var_110], rdi
__text:00000001000044F8                 mov     rdi, [rbp+var_110]
__text:00000001000044FF                 mov     r9d, [rdi]
__text:0000000100004502                 mov     rdi, [rbp+var_128]
__text:0000000100004509                 mov     [rdi], r9d
__text:000000010000450C                 mov     [rbp+var_118], rdx
__text:0000000100004513                 mov     rdx, [rbp+var_118]
__text:000000010000451A                 mov     r9d, [rdx]
__text:000000010000451D                 mov     rdx, [rbp+var_130]
__text:0000000100004524                 mov     [rdx], r9d
__text:0000000100004527                 add     rsi, 4
__text:000000010000452E                 mov     rdx, [rbp+var_158]
__text:0000000100004535                 add     rdx, 4
__text:000000010000453C                 mov     [rbp+var_100], rsi
__text:0000000100004543                 mov     [rbp+var_108], rdx
__text:000000010000454A                 mov     rdx, [rbp+var_100]
__text:0000000100004551                 mov     rsi, [rbp+var_108]
__text:0000000100004558                 mov     [rbp+var_E8], rdx
__text:000000010000455F                 mov     [rbp+var_F0], rsi
__text:0000000100004566                 mov     rdx, [rbp+var_E8]
__text:000000010000456D                 mov     [rbp+var_E0], rdx
__text:0000000100004574                 mov     rdx, [rbp+var_E0]
__text:000000010000457B                 mov     r9d, [rdx]
__text:000000010000457E                 mov     [rbp+var_F4], r9d
__text:0000000100004585                 mov     rdx, [rbp+var_F0]
__text:000000010000458C                 mov     [rbp+var_D0], rdx
__text:0000000100004593                 mov     rdx, [rbp+var_D0]
__text:000000010000459A                 mov     r9d, [rdx]
__text:000000010000459D                 mov     rdx, [rbp+var_E8]
__text:00000001000045A4                 mov     [rdx], r9d
__text:00000001000045A7                 mov     [rbp+var_D8], rcx
__text:00000001000045AE                 mov     rcx, [rbp+var_D8]
__text:00000001000045B5                 mov     r9d, [rcx]
__text:00000001000045B8                 mov     rcx, [rbp+var_F0]
__text:00000001000045BF                 mov     [rcx], r9d
__text:00000001000045C2                 mov     r9d, [rbp+var_284]
__text:00000001000045C9                 add     r9d, 1
__text:00000001000045D0                 mov     [rbp+var_284], r9d
__text:00000001000045D7                 mov     rcx, [rbp+var_280]
__text:00000001000045DE                 mov     rdx, [rbp+var_268]
__text:00000001000045E5                 mov     rsi, [rbp+var_260]
__text:00000001000045EC                 mov     [rbp+var_180], rcx
__text:00000001000045F3                 mov     [rbp+var_188], rdx
__text:00000001000045FA                 mov     [rbp+var_190], rsi
__text:0000000100004601                 mov     rcx, [rbp+var_188]
__text:0000000100004608                 mov     rdx, [rbp+var_190]
__text:000000010000460F                 mov     [rbp+var_170], rcx
__text:0000000100004616                 mov     [rbp+var_178], rdx
__text:000000010000461D                 mov     rcx, [rbp+var_170]
__text:0000000100004624                 mov     r9d, [rcx]
__text:0000000100004627                 mov     rcx, [rbp+var_178]
__text:000000010000462E                 cmp     r9d, [rcx]
__text:0000000100004631                 mov     [rbp+var_289], al
__text:0000000100004637                 jl      loc_100004686
__text:000000010000463D                 mov     al, 0
__text:000000010000463F                 mov     rcx, [rbp+var_178]
__text:0000000100004646                 mov     edx, [rcx]
__text:0000000100004648                 mov     rcx, [rbp+var_170]
__text:000000010000464F                 cmp     edx, [rcx]
__text:0000000100004651                 mov     [rbp+var_28A], al
__text:0000000100004657                 jl      loc_10000467A
__text:000000010000465D                 mov     rax, [rbp+var_170]
__text:0000000100004664                 mov     ecx, [rax+4]
__text:0000000100004667                 mov     rax, [rbp+var_178]
__text:000000010000466E                 cmp     ecx, [rax+4]
__text:0000000100004671                 setl    dl
__text:0000000100004674                 mov     [rbp+var_28A], dl
__text:000000010000467A
__text:000000010000467A loc_10000467A:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+507↑j
__text:000000010000467A                 mov     al, [rbp+var_28A]
__text:0000000100004680                 mov     [rbp+var_289], al
__text:0000000100004686
__text:0000000100004686 loc_100004686:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+4E7↑j
__text:0000000100004686                 mov     al, [rbp+var_289]
__text:000000010000468C                 test    al, 1
__text:000000010000468E                 jnz     loc_100004699
__text:0000000100004694                 jmp     loc_100004823
__text:0000000100004699 ; ---------------------------------------------------------------------------
__text:0000000100004699
__text:0000000100004699 loc_100004699:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+53E↑j
__text:0000000100004699                 lea     rax, [rbp+var_1BC]
__text:00000001000046A0                 lea     rcx, [rbp+var_1FC]
__text:00000001000046A7                 mov     rdx, [rbp+var_260]
__text:00000001000046AE                 mov     rsi, [rbp+var_268]
__text:00000001000046B5                 mov     [rbp+var_228], rdx
__text:00000001000046BC                 mov     [rbp+var_230], rsi
__text:00000001000046C3                 mov     rdx, [rbp+var_228]
__text:00000001000046CA                 mov     rsi, [rbp+var_230]
__text:00000001000046D1                 mov     [rbp+var_218], rdx
__text:00000001000046D8                 mov     [rbp+var_220], rsi
__text:00000001000046DF                 mov     rdx, [rbp+var_218]
__text:00000001000046E6                 mov     rsi, [rbp+var_220]
__text:00000001000046ED                 mov     [rbp+var_208], rdx
__text:00000001000046F4                 mov     [rbp+var_210], rsi
__text:00000001000046FB                 mov     rsi, [rbp+var_208]
__text:0000000100004702                 mov     rdi, [rbp+var_210]
__text:0000000100004709                 mov     [rbp+var_1F0], rsi
__text:0000000100004710                 mov     [rbp+var_1F8], rdi
__text:0000000100004717                 mov     rsi, [rbp+var_1F0]
__text:000000010000471E                 mov     [rbp+var_1E8], rsi
__text:0000000100004725                 mov     rsi, [rbp+var_1E8]
__text:000000010000472C                 mov     r8d, [rsi]
__text:000000010000472F                 mov     [rbp+var_1FC], r8d
__text:0000000100004736                 mov     rsi, [rbp+var_1F8]
__text:000000010000473D                 mov     [rbp+var_1D8], rsi
__text:0000000100004744                 mov     rsi, [rbp+var_1D8]
__text:000000010000474B                 mov     r8d, [rsi]
__text:000000010000474E                 mov     rsi, [rbp+var_1F0]
__text:0000000100004755                 mov     [rsi], r8d
__text:0000000100004758                 mov     [rbp+var_1E0], rcx
__text:000000010000475F                 mov     rcx, [rbp+var_1E0]
__text:0000000100004766                 mov     r8d, [rcx]
__text:0000000100004769                 mov     rcx, [rbp+var_1F8]
__text:0000000100004770                 mov     [rcx], r8d
__text:0000000100004773                 add     rdx, 4
__text:000000010000477A                 mov     rcx, [rbp+var_220]
__text:0000000100004781                 add     rcx, 4
__text:0000000100004788                 mov     [rbp+var_1C8], rdx
__text:000000010000478F                 mov     [rbp+var_1D0], rcx
__text:0000000100004796                 mov     rcx, [rbp+var_1C8]
__text:000000010000479D                 mov     rdx, [rbp+var_1D0]
__text:00000001000047A4                 mov     [rbp+var_1B0], rcx
__text:00000001000047AB                 mov     [rbp+var_1B8], rdx
__text:00000001000047B2                 mov     rcx, [rbp+var_1B0]
__text:00000001000047B9                 mov     [rbp+var_1A8], rcx
__text:00000001000047C0                 mov     rcx, [rbp+var_1A8]
__text:00000001000047C7                 mov     r8d, [rcx]
__text:00000001000047CA                 mov     [rbp+var_1BC], r8d
__text:00000001000047D1                 mov     rcx, [rbp+var_1B8]
__text:00000001000047D8                 mov     [rbp+var_198], rcx
__text:00000001000047DF                 mov     rcx, [rbp+var_198]
__text:00000001000047E6                 mov     r8d, [rcx]
__text:00000001000047E9                 mov     rcx, [rbp+var_1B0]
__text:00000001000047F0                 mov     [rcx], r8d
__text:00000001000047F3                 mov     [rbp+var_1A0], rax
__text:00000001000047FA                 mov     rax, [rbp+var_1A0]
__text:0000000100004801                 mov     r8d, [rax]
__text:0000000100004804                 mov     rax, [rbp+var_1B8]
__text:000000010000480B                 mov     [rax], r8d
__text:000000010000480E                 mov     r8d, [rbp+var_284]
__text:0000000100004815                 add     r8d, 1
__text:000000010000481C                 mov     [rbp+var_284], r8d
__text:0000000100004823
__text:0000000100004823 loc_100004823:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+544↑j
__text:0000000100004823                 jmp     $+5
__text:0000000100004828 ; ---------------------------------------------------------------------------
__text:0000000100004828
__text:0000000100004828 loc_100004828:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+2F6↑j
__text:0000000100004828                                         ; std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100004823↑j
__text:0000000100004828                 jmp     $+5
__text:000000010000482D ; ---------------------------------------------------------------------------
__text:000000010000482D
__text:000000010000482D loc_10000482D:                          ; CODE XREF: std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+114↑j
__text:000000010000482D                                         ; std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100004828↑j
__text:000000010000482D                 mov     eax, [rbp+var_284]
__text:0000000100004833                 add     rsp, 290h
__text:000000010000483A                 pop     rbp
__text:000000010000483B                 retn
__text:000000010000483B __ZNSt3__17__sort4IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_T_ endp
__text:000000010000483B
__text:000000010000483B ; ---------------------------------------------------------------------------
__text:000000010000483C                 align 20h
__text:0000000100004840
__text:0000000100004840 ; =============== S U B R O U T I N E =======================================
__text:0000000100004840
__text:0000000100004840 ; Attributes: bp-based frame
__text:0000000100004840
__text:0000000100004840 ; unsigned int std::__1::__sort5<std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &, std::__1::pair<int, int>*>(std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &)
__text:0000000100004840 __ZNSt3__17__sort5IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ proc near
__text:0000000100004840                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__17__sort5IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T__ptr↓o
__text:0000000100004840
__text:0000000100004840 var_35C         = byte ptr -35Ch
__text:0000000100004840 var_35B         = byte ptr -35Bh
__text:0000000100004840 var_35A         = byte ptr -35Ah
__text:0000000100004840 var_359         = byte ptr -359h
__text:0000000100004840 var_358         = byte ptr -358h
__text:0000000100004840 var_357         = byte ptr -357h
__text:0000000100004840 var_356         = byte ptr -356h
__text:0000000100004840 var_355         = byte ptr -355h
__text:0000000100004840 var_354         = dword ptr -354h
__text:0000000100004840 var_350         = qword ptr -350h
__text:0000000100004840 var_348         = qword ptr -348h
__text:0000000100004840 var_340         = qword ptr -340h
__text:0000000100004840 var_338         = qword ptr -338h
__text:0000000100004840 var_330         = qword ptr -330h
__text:0000000100004840 var_328         = qword ptr -328h
__text:0000000100004840 var_320         = qword ptr -320h
__text:0000000100004840 var_318         = qword ptr -318h
__text:0000000100004840 var_310         = qword ptr -310h
__text:0000000100004840 var_308         = qword ptr -308h
__text:0000000100004840 var_300         = qword ptr -300h
__text:0000000100004840 var_2F8         = qword ptr -2F8h
__text:0000000100004840 var_2F0         = qword ptr -2F0h
__text:0000000100004840 var_2E8         = qword ptr -2E8h
__text:0000000100004840 var_2E0         = qword ptr -2E0h
__text:0000000100004840 var_2D8         = qword ptr -2D8h
__text:0000000100004840 var_2D0         = qword ptr -2D0h
__text:0000000100004840 var_2C4         = dword ptr -2C4h
__text:0000000100004840 var_2C0         = qword ptr -2C0h
__text:0000000100004840 var_2B8         = qword ptr -2B8h
__text:0000000100004840 var_2B0         = qword ptr -2B0h
__text:0000000100004840 var_2A8         = qword ptr -2A8h
__text:0000000100004840 var_2A0         = qword ptr -2A0h
__text:0000000100004840 var_298         = qword ptr -298h
__text:0000000100004840 var_290         = qword ptr -290h
__text:0000000100004840 var_284         = dword ptr -284h
__text:0000000100004840 var_280         = qword ptr -280h
__text:0000000100004840 var_278         = qword ptr -278h
__text:0000000100004840 var_270         = qword ptr -270h
__text:0000000100004840 var_268         = qword ptr -268h
__text:0000000100004840 var_260         = qword ptr -260h
__text:0000000100004840 var_258         = qword ptr -258h
__text:0000000100004840 var_250         = qword ptr -250h
__text:0000000100004840 var_248         = qword ptr -248h
__text:0000000100004840 var_240         = qword ptr -240h
__text:0000000100004840 var_238         = qword ptr -238h
__text:0000000100004840 var_230         = qword ptr -230h
__text:0000000100004840 var_228         = qword ptr -228h
__text:0000000100004840 var_220         = qword ptr -220h
__text:0000000100004840 var_218         = qword ptr -218h
__text:0000000100004840 var_210         = qword ptr -210h
__text:0000000100004840 var_208         = qword ptr -208h
__text:0000000100004840 var_1FC         = dword ptr -1FCh
__text:0000000100004840 var_1F8         = qword ptr -1F8h
__text:0000000100004840 var_1F0         = qword ptr -1F0h
__text:0000000100004840 var_1E8         = qword ptr -1E8h
__text:0000000100004840 var_1E0         = qword ptr -1E0h
__text:0000000100004840 var_1D8         = qword ptr -1D8h
__text:0000000100004840 var_1D0         = qword ptr -1D0h
__text:0000000100004840 var_1C8         = qword ptr -1C8h
__text:0000000100004840 var_1BC         = dword ptr -1BCh
__text:0000000100004840 var_1B8         = qword ptr -1B8h
__text:0000000100004840 var_1B0         = qword ptr -1B0h
__text:0000000100004840 var_1A8         = qword ptr -1A8h
__text:0000000100004840 var_1A0         = qword ptr -1A0h
__text:0000000100004840 var_198         = qword ptr -198h
__text:0000000100004840 var_190         = qword ptr -190h
__text:0000000100004840 var_188         = qword ptr -188h
__text:0000000100004840 var_180         = qword ptr -180h
__text:0000000100004840 var_178         = qword ptr -178h
__text:0000000100004840 var_170         = qword ptr -170h
__text:0000000100004840 var_168         = qword ptr -168h
__text:0000000100004840 var_160         = qword ptr -160h
__text:0000000100004840 var_158         = qword ptr -158h
__text:0000000100004840 var_150         = qword ptr -150h
__text:0000000100004840 var_148         = qword ptr -148h
__text:0000000100004840 var_140         = qword ptr -140h
__text:0000000100004840 var_134         = dword ptr -134h
__text:0000000100004840 var_130         = qword ptr -130h
__text:0000000100004840 var_128         = qword ptr -128h
__text:0000000100004840 var_120         = qword ptr -120h
__text:0000000100004840 var_118         = qword ptr -118h
__text:0000000100004840 var_110         = qword ptr -110h
__text:0000000100004840 var_108         = qword ptr -108h
__text:0000000100004840 var_100         = qword ptr -100h
__text:0000000100004840 var_F4          = dword ptr -0F4h
__text:0000000100004840 var_F0          = qword ptr -0F0h
__text:0000000100004840 var_E8          = qword ptr -0E8h
__text:0000000100004840 var_E0          = qword ptr -0E0h
__text:0000000100004840 var_D8          = qword ptr -0D8h
__text:0000000100004840 var_D0          = qword ptr -0D0h
__text:0000000100004840 var_C8          = qword ptr -0C8h
__text:0000000100004840 var_C0          = qword ptr -0C0h
__text:0000000100004840 var_B8          = qword ptr -0B8h
__text:0000000100004840 var_B0          = qword ptr -0B0h
__text:0000000100004840 var_A8          = qword ptr -0A8h
__text:0000000100004840 var_A0          = qword ptr -0A0h
__text:0000000100004840 var_98          = qword ptr -98h
__text:0000000100004840 var_90          = qword ptr -90h
__text:0000000100004840 var_88          = qword ptr -88h
__text:0000000100004840 var_80          = qword ptr -80h
__text:0000000100004840 var_78          = qword ptr -78h
__text:0000000100004840 var_6C          = dword ptr -6Ch
__text:0000000100004840 var_68          = qword ptr -68h
__text:0000000100004840 var_60          = qword ptr -60h
__text:0000000100004840 var_58          = qword ptr -58h
__text:0000000100004840 var_50          = qword ptr -50h
__text:0000000100004840 var_48          = qword ptr -48h
__text:0000000100004840 var_40          = qword ptr -40h
__text:0000000100004840 var_38          = qword ptr -38h
__text:0000000100004840 var_2C          = dword ptr -2Ch
__text:0000000100004840 var_28          = qword ptr -28h
__text:0000000100004840 var_20          = qword ptr -20h
__text:0000000100004840 var_18          = qword ptr -18h
__text:0000000100004840 var_10          = qword ptr -10h
__text:0000000100004840 var_8           = qword ptr -8
__text:0000000100004840
__text:0000000100004840                 push    rbp
__text:0000000100004841                 mov     rbp, rsp
__text:0000000100004844                 sub     rsp, 360h
__text:000000010000484B                 mov     [rbp+var_328], rdi
__text:0000000100004852                 mov     [rbp+var_330], rsi
__text:0000000100004859                 mov     [rbp+var_338], rdx
__text:0000000100004860                 mov     [rbp+var_340], rcx
__text:0000000100004867                 mov     [rbp+var_348], r8
__text:000000010000486E                 mov     [rbp+var_350], r9
__text:0000000100004875                 mov     rdi, [rbp+var_328]
__text:000000010000487C                 mov     rsi, [rbp+var_330]
__text:0000000100004883                 mov     rdx, [rbp+var_338]
__text:000000010000488A                 mov     rcx, [rbp+var_340]
__text:0000000100004891                 mov     r8, [rbp+var_350]
__text:0000000100004898                 call    j___ZNSt3__17__sort4IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_T_ ; std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:000000010000489D                 mov     r10b, 1
__text:00000001000048A0                 mov     [rbp+var_354], eax
__text:00000001000048A6                 mov     rcx, [rbp+var_350]
__text:00000001000048AD                 mov     rdx, [rbp+var_348]
__text:00000001000048B4                 mov     rsi, [rbp+var_340]
__text:00000001000048BB                 mov     [rbp+var_310], rcx
__text:00000001000048C2                 mov     [rbp+var_318], rdx
__text:00000001000048C9                 mov     [rbp+var_320], rsi
__text:00000001000048D0                 mov     rcx, [rbp+var_318]
__text:00000001000048D7                 mov     rdx, [rbp+var_320]
__text:00000001000048DE                 mov     [rbp+var_300], rcx
__text:00000001000048E5                 mov     [rbp+var_308], rdx
__text:00000001000048EC                 mov     rcx, [rbp+var_300]
__text:00000001000048F3                 mov     eax, [rcx]
__text:00000001000048F5                 mov     rcx, [rbp+var_308]
__text:00000001000048FC                 cmp     eax, [rcx]
__text:00000001000048FE                 mov     [rbp+var_355], r10b
__text:0000000100004905                 jl      loc_100004954
__text:000000010000490B                 mov     al, 0
__text:000000010000490D                 mov     rcx, [rbp+var_308]
__text:0000000100004914                 mov     edx, [rcx]
__text:0000000100004916                 mov     rcx, [rbp+var_300]
__text:000000010000491D                 cmp     edx, [rcx]
__text:000000010000491F                 mov     [rbp+var_356], al
__text:0000000100004925                 jl      loc_100004948
__text:000000010000492B                 mov     rax, [rbp+var_300]
__text:0000000100004932                 mov     ecx, [rax+4]
__text:0000000100004935                 mov     rax, [rbp+var_308]
__text:000000010000493C                 cmp     ecx, [rax+4]
__text:000000010000493F                 setl    dl
__text:0000000100004942                 mov     [rbp+var_356], dl
__text:0000000100004948
__text:0000000100004948 loc_100004948:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+E5↑j
__text:0000000100004948                 mov     al, [rbp+var_356]
__text:000000010000494E                 mov     [rbp+var_355], al
__text:0000000100004954
__text:0000000100004954 loc_100004954:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+C5↑j
__text:0000000100004954                 mov     al, [rbp+var_355]
__text:000000010000495A                 test    al, 1
__text:000000010000495C                 jnz     loc_100004967
__text:0000000100004962                 jmp     loc_10000517E
__text:0000000100004967 ; ---------------------------------------------------------------------------
__text:0000000100004967
__text:0000000100004967 loc_100004967:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+11C↑j
__text:0000000100004967                 mov     al, 1
__text:0000000100004969                 lea     rcx, [rbp+var_2C]
__text:000000010000496D                 lea     rdx, [rbp+var_6C]
__text:0000000100004971                 mov     rsi, [rbp+var_340]
__text:0000000100004978                 mov     rdi, [rbp+var_348]
__text:000000010000497F                 mov     [rbp+var_98], rsi
__text:0000000100004986                 mov     [rbp+var_A0], rdi
__text:000000010000498D                 mov     rsi, [rbp+var_98]
__text:0000000100004994                 mov     rdi, [rbp+var_A0]
__text:000000010000499B                 mov     [rbp+var_88], rsi
__text:00000001000049A2                 mov     [rbp+var_90], rdi
__text:00000001000049A9                 mov     rsi, [rbp+var_88]
__text:00000001000049B0                 mov     rdi, [rbp+var_90]
__text:00000001000049B7                 mov     [rbp+var_78], rsi
__text:00000001000049BB                 mov     [rbp+var_80], rdi
__text:00000001000049BF                 mov     rdi, [rbp+var_78]
__text:00000001000049C3                 mov     r8, [rbp+var_80]
__text:00000001000049C7                 mov     [rbp+var_60], rdi
__text:00000001000049CB                 mov     [rbp+var_68], r8
__text:00000001000049CF                 mov     rdi, [rbp+var_60]
__text:00000001000049D3                 mov     [rbp+var_58], rdi
__text:00000001000049D7                 mov     rdi, [rbp+var_58]
__text:00000001000049DB                 mov     r9d, [rdi]
__text:00000001000049DE                 mov     [rbp+var_6C], r9d
__text:00000001000049E2                 mov     rdi, [rbp+var_68]
__text:00000001000049E6                 mov     [rbp+var_48], rdi
__text:00000001000049EA                 mov     rdi, [rbp+var_48]
__text:00000001000049EE                 mov     r9d, [rdi]
__text:00000001000049F1                 mov     rdi, [rbp+var_60]
__text:00000001000049F5                 mov     [rdi], r9d
__text:00000001000049F8                 mov     [rbp+var_50], rdx
__text:00000001000049FC                 mov     rdx, [rbp+var_50]
__text:0000000100004A00                 mov     r9d, [rdx]
__text:0000000100004A03                 mov     rdx, [rbp+var_68]
__text:0000000100004A07                 mov     [rdx], r9d
__text:0000000100004A0A                 add     rsi, 4
__text:0000000100004A11                 mov     rdx, [rbp+var_90]
__text:0000000100004A18                 add     rdx, 4
__text:0000000100004A1F                 mov     [rbp+var_38], rsi
__text:0000000100004A23                 mov     [rbp+var_40], rdx
__text:0000000100004A27                 mov     rdx, [rbp+var_38]
__text:0000000100004A2B                 mov     rsi, [rbp+var_40]
__text:0000000100004A2F                 mov     [rbp+var_20], rdx
__text:0000000100004A33                 mov     [rbp+var_28], rsi
__text:0000000100004A37                 mov     rdx, [rbp+var_20]
__text:0000000100004A3B                 mov     [rbp+var_18], rdx
__text:0000000100004A3F                 mov     rdx, [rbp+var_18]
__text:0000000100004A43                 mov     r9d, [rdx]
__text:0000000100004A46                 mov     [rbp+var_2C], r9d
__text:0000000100004A4A                 mov     rdx, [rbp+var_28]
__text:0000000100004A4E                 mov     [rbp+var_8], rdx
__text:0000000100004A52                 mov     rdx, [rbp+var_8]
__text:0000000100004A56                 mov     r9d, [rdx]
__text:0000000100004A59                 mov     rdx, [rbp+var_20]
__text:0000000100004A5D                 mov     [rdx], r9d
__text:0000000100004A60                 mov     [rbp+var_10], rcx
__text:0000000100004A64                 mov     rcx, [rbp+var_10]
__text:0000000100004A68                 mov     r9d, [rcx]
__text:0000000100004A6B                 mov     rcx, [rbp+var_28]
__text:0000000100004A6F                 mov     [rcx], r9d
__text:0000000100004A72                 mov     r9d, [rbp+var_354]
__text:0000000100004A79                 add     r9d, 1
__text:0000000100004A80                 mov     [rbp+var_354], r9d
__text:0000000100004A87                 mov     rcx, [rbp+var_350]
__text:0000000100004A8E                 mov     rdx, [rbp+var_340]
__text:0000000100004A95                 mov     rsi, [rbp+var_338]
__text:0000000100004A9C                 mov     [rbp+var_B8], rcx
__text:0000000100004AA3                 mov     [rbp+var_C0], rdx
__text:0000000100004AAA                 mov     [rbp+var_C8], rsi
__text:0000000100004AB1                 mov     rcx, [rbp+var_C0]
__text:0000000100004AB8                 mov     rdx, [rbp+var_C8]
__text:0000000100004ABF                 mov     [rbp+var_A8], rcx
__text:0000000100004AC6                 mov     [rbp+var_B0], rdx
__text:0000000100004ACD                 mov     rcx, [rbp+var_A8]
__text:0000000100004AD4                 mov     r9d, [rcx]
__text:0000000100004AD7                 mov     rcx, [rbp+var_B0]
__text:0000000100004ADE                 cmp     r9d, [rcx]
__text:0000000100004AE1                 mov     [rbp+var_357], al
__text:0000000100004AE7                 jl      loc_100004B36
__text:0000000100004AED                 mov     al, 0
__text:0000000100004AEF                 mov     rcx, [rbp+var_B0]
__text:0000000100004AF6                 mov     edx, [rcx]
__text:0000000100004AF8                 mov     rcx, [rbp+var_A8]
__text:0000000100004AFF                 cmp     edx, [rcx]
__text:0000000100004B01                 mov     [rbp+var_358], al
__text:0000000100004B07                 jl      loc_100004B2A
__text:0000000100004B0D                 mov     rax, [rbp+var_A8]
__text:0000000100004B14                 mov     ecx, [rax+4]
__text:0000000100004B17                 mov     rax, [rbp+var_B0]
__text:0000000100004B1E                 cmp     ecx, [rax+4]
__text:0000000100004B21                 setl    dl
__text:0000000100004B24                 mov     [rbp+var_358], dl
__text:0000000100004B2A
__text:0000000100004B2A loc_100004B2A:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+2C7↑j
__text:0000000100004B2A                 mov     al, [rbp+var_358]
__text:0000000100004B30                 mov     [rbp+var_357], al
__text:0000000100004B36
__text:0000000100004B36 loc_100004B36:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+2A7↑j
__text:0000000100004B36                 mov     al, [rbp+var_357]
__text:0000000100004B3C                 test    al, 1
__text:0000000100004B3E                 jnz     loc_100004B49
__text:0000000100004B44                 jmp     loc_100005179
__text:0000000100004B49 ; ---------------------------------------------------------------------------
__text:0000000100004B49
__text:0000000100004B49 loc_100004B49:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+2FE↑j
__text:0000000100004B49                 mov     al, 1
__text:0000000100004B4B                 lea     rcx, [rbp+var_F4]
__text:0000000100004B52                 lea     rdx, [rbp+var_134]
__text:0000000100004B59                 mov     rsi, [rbp+var_338]
__text:0000000100004B60                 mov     rdi, [rbp+var_340]
__text:0000000100004B67                 mov     [rbp+var_160], rsi
__text:0000000100004B6E                 mov     [rbp+var_168], rdi
__text:0000000100004B75                 mov     rsi, [rbp+var_160]
__text:0000000100004B7C                 mov     rdi, [rbp+var_168]
__text:0000000100004B83                 mov     [rbp+var_150], rsi
__text:0000000100004B8A                 mov     [rbp+var_158], rdi
__text:0000000100004B91                 mov     rsi, [rbp+var_150]
__text:0000000100004B98                 mov     rdi, [rbp+var_158]
__text:0000000100004B9F                 mov     [rbp+var_140], rsi
__text:0000000100004BA6                 mov     [rbp+var_148], rdi
__text:0000000100004BAD                 mov     rdi, [rbp+var_140]
__text:0000000100004BB4                 mov     r8, [rbp+var_148]
__text:0000000100004BBB                 mov     [rbp+var_128], rdi
__text:0000000100004BC2                 mov     [rbp+var_130], r8
__text:0000000100004BC9                 mov     rdi, [rbp+var_128]
__text:0000000100004BD0                 mov     [rbp+var_120], rdi
__text:0000000100004BD7                 mov     rdi, [rbp+var_120]
__text:0000000100004BDE                 mov     r9d, [rdi]
__text:0000000100004BE1                 mov     [rbp+var_134], r9d
__text:0000000100004BE8                 mov     rdi, [rbp+var_130]
__text:0000000100004BEF                 mov     [rbp+var_110], rdi
__text:0000000100004BF6                 mov     rdi, [rbp+var_110]
__text:0000000100004BFD                 mov     r9d, [rdi]
__text:0000000100004C00                 mov     rdi, [rbp+var_128]
__text:0000000100004C07                 mov     [rdi], r9d
__text:0000000100004C0A                 mov     [rbp+var_118], rdx
__text:0000000100004C11                 mov     rdx, [rbp+var_118]
__text:0000000100004C18                 mov     r9d, [rdx]
__text:0000000100004C1B                 mov     rdx, [rbp+var_130]
__text:0000000100004C22                 mov     [rdx], r9d
__text:0000000100004C25                 add     rsi, 4
__text:0000000100004C2C                 mov     rdx, [rbp+var_158]
__text:0000000100004C33                 add     rdx, 4
__text:0000000100004C3A                 mov     [rbp+var_100], rsi
__text:0000000100004C41                 mov     [rbp+var_108], rdx
__text:0000000100004C48                 mov     rdx, [rbp+var_100]
__text:0000000100004C4F                 mov     rsi, [rbp+var_108]
__text:0000000100004C56                 mov     [rbp+var_E8], rdx
__text:0000000100004C5D                 mov     [rbp+var_F0], rsi
__text:0000000100004C64                 mov     rdx, [rbp+var_E8]
__text:0000000100004C6B                 mov     [rbp+var_E0], rdx
__text:0000000100004C72                 mov     rdx, [rbp+var_E0]
__text:0000000100004C79                 mov     r9d, [rdx]
__text:0000000100004C7C                 mov     [rbp+var_F4], r9d
__text:0000000100004C83                 mov     rdx, [rbp+var_F0]
__text:0000000100004C8A                 mov     [rbp+var_D0], rdx
__text:0000000100004C91                 mov     rdx, [rbp+var_D0]
__text:0000000100004C98                 mov     r9d, [rdx]
__text:0000000100004C9B                 mov     rdx, [rbp+var_E8]
__text:0000000100004CA2                 mov     [rdx], r9d
__text:0000000100004CA5                 mov     [rbp+var_D8], rcx
__text:0000000100004CAC                 mov     rcx, [rbp+var_D8]
__text:0000000100004CB3                 mov     r9d, [rcx]
__text:0000000100004CB6                 mov     rcx, [rbp+var_F0]
__text:0000000100004CBD                 mov     [rcx], r9d
__text:0000000100004CC0                 mov     r9d, [rbp+var_354]
__text:0000000100004CC7                 add     r9d, 1
__text:0000000100004CCE                 mov     [rbp+var_354], r9d
__text:0000000100004CD5                 mov     rcx, [rbp+var_350]
__text:0000000100004CDC                 mov     rdx, [rbp+var_338]
__text:0000000100004CE3                 mov     rsi, [rbp+var_330]
__text:0000000100004CEA                 mov     [rbp+var_180], rcx
__text:0000000100004CF1                 mov     [rbp+var_188], rdx
__text:0000000100004CF8                 mov     [rbp+var_190], rsi
__text:0000000100004CFF                 mov     rcx, [rbp+var_188]
__text:0000000100004D06                 mov     rdx, [rbp+var_190]
__text:0000000100004D0D                 mov     [rbp+var_170], rcx
__text:0000000100004D14                 mov     [rbp+var_178], rdx
__text:0000000100004D1B                 mov     rcx, [rbp+var_170]
__text:0000000100004D22                 mov     r9d, [rcx]
__text:0000000100004D25                 mov     rcx, [rbp+var_178]
__text:0000000100004D2C                 cmp     r9d, [rcx]
__text:0000000100004D2F                 mov     [rbp+var_359], al
__text:0000000100004D35                 jl      loc_100004D84
__text:0000000100004D3B                 mov     al, 0
__text:0000000100004D3D                 mov     rcx, [rbp+var_178]
__text:0000000100004D44                 mov     edx, [rcx]
__text:0000000100004D46                 mov     rcx, [rbp+var_170]
__text:0000000100004D4D                 cmp     edx, [rcx]
__text:0000000100004D4F                 mov     [rbp+var_35A], al
__text:0000000100004D55                 jl      loc_100004D78
__text:0000000100004D5B                 mov     rax, [rbp+var_170]
__text:0000000100004D62                 mov     ecx, [rax+4]
__text:0000000100004D65                 mov     rax, [rbp+var_178]
__text:0000000100004D6C                 cmp     ecx, [rax+4]
__text:0000000100004D6F                 setl    dl
__text:0000000100004D72                 mov     [rbp+var_35A], dl
__text:0000000100004D78
__text:0000000100004D78 loc_100004D78:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+515↑j
__text:0000000100004D78                 mov     al, [rbp+var_35A]
__text:0000000100004D7E                 mov     [rbp+var_359], al
__text:0000000100004D84
__text:0000000100004D84 loc_100004D84:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+4F5↑j
__text:0000000100004D84                 mov     al, [rbp+var_359]
__text:0000000100004D8A                 test    al, 1
__text:0000000100004D8C                 jnz     loc_100004D97
__text:0000000100004D92                 jmp     loc_100005174
__text:0000000100004D97 ; ---------------------------------------------------------------------------
__text:0000000100004D97
__text:0000000100004D97 loc_100004D97:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+54C↑j
__text:0000000100004D97                 mov     al, 1
__text:0000000100004D99                 lea     rcx, [rbp+var_1BC]
__text:0000000100004DA0                 lea     rdx, [rbp+var_1FC]
__text:0000000100004DA7                 mov     rsi, [rbp+var_330]
__text:0000000100004DAE                 mov     rdi, [rbp+var_338]
__text:0000000100004DB5                 mov     [rbp+var_228], rsi
__text:0000000100004DBC                 mov     [rbp+var_230], rdi
__text:0000000100004DC3                 mov     rsi, [rbp+var_228]
__text:0000000100004DCA                 mov     rdi, [rbp+var_230]
__text:0000000100004DD1                 mov     [rbp+var_218], rsi
__text:0000000100004DD8                 mov     [rbp+var_220], rdi
__text:0000000100004DDF                 mov     rsi, [rbp+var_218]
__text:0000000100004DE6                 mov     rdi, [rbp+var_220]
__text:0000000100004DED                 mov     [rbp+var_208], rsi
__text:0000000100004DF4                 mov     [rbp+var_210], rdi
__text:0000000100004DFB                 mov     rdi, [rbp+var_208]
__text:0000000100004E02                 mov     r8, [rbp+var_210]
__text:0000000100004E09                 mov     [rbp+var_1F0], rdi
__text:0000000100004E10                 mov     [rbp+var_1F8], r8
__text:0000000100004E17                 mov     rdi, [rbp+var_1F0]
__text:0000000100004E1E                 mov     [rbp+var_1E8], rdi
__text:0000000100004E25                 mov     rdi, [rbp+var_1E8]
__text:0000000100004E2C                 mov     r9d, [rdi]
__text:0000000100004E2F                 mov     [rbp+var_1FC], r9d
__text:0000000100004E36                 mov     rdi, [rbp+var_1F8]
__text:0000000100004E3D                 mov     [rbp+var_1D8], rdi
__text:0000000100004E44                 mov     rdi, [rbp+var_1D8]
__text:0000000100004E4B                 mov     r9d, [rdi]
__text:0000000100004E4E                 mov     rdi, [rbp+var_1F0]
__text:0000000100004E55                 mov     [rdi], r9d
__text:0000000100004E58                 mov     [rbp+var_1E0], rdx
__text:0000000100004E5F                 mov     rdx, [rbp+var_1E0]
__text:0000000100004E66                 mov     r9d, [rdx]
__text:0000000100004E69                 mov     rdx, [rbp+var_1F8]
__text:0000000100004E70                 mov     [rdx], r9d
__text:0000000100004E73                 add     rsi, 4
__text:0000000100004E7A                 mov     rdx, [rbp+var_220]
__text:0000000100004E81                 add     rdx, 4
__text:0000000100004E88                 mov     [rbp+var_1C8], rsi
__text:0000000100004E8F                 mov     [rbp+var_1D0], rdx
__text:0000000100004E96                 mov     rdx, [rbp+var_1C8]
__text:0000000100004E9D                 mov     rsi, [rbp+var_1D0]
__text:0000000100004EA4                 mov     [rbp+var_1B0], rdx
__text:0000000100004EAB                 mov     [rbp+var_1B8], rsi
__text:0000000100004EB2                 mov     rdx, [rbp+var_1B0]
__text:0000000100004EB9                 mov     [rbp+var_1A8], rdx
__text:0000000100004EC0                 mov     rdx, [rbp+var_1A8]
__text:0000000100004EC7                 mov     r9d, [rdx]
__text:0000000100004ECA                 mov     [rbp+var_1BC], r9d
__text:0000000100004ED1                 mov     rdx, [rbp+var_1B8]
__text:0000000100004ED8                 mov     [rbp+var_198], rdx
__text:0000000100004EDF                 mov     rdx, [rbp+var_198]
__text:0000000100004EE6                 mov     r9d, [rdx]
__text:0000000100004EE9                 mov     rdx, [rbp+var_1B0]
__text:0000000100004EF0                 mov     [rdx], r9d
__text:0000000100004EF3                 mov     [rbp+var_1A0], rcx
__text:0000000100004EFA                 mov     rcx, [rbp+var_1A0]
__text:0000000100004F01                 mov     r9d, [rcx]
__text:0000000100004F04                 mov     rcx, [rbp+var_1B8]
__text:0000000100004F0B                 mov     [rcx], r9d
__text:0000000100004F0E                 mov     r9d, [rbp+var_354]
__text:0000000100004F15                 add     r9d, 1
__text:0000000100004F1C                 mov     [rbp+var_354], r9d
__text:0000000100004F23                 mov     rcx, [rbp+var_350]
__text:0000000100004F2A                 mov     rdx, [rbp+var_330]
__text:0000000100004F31                 mov     rsi, [rbp+var_328]
__text:0000000100004F38                 mov     [rbp+var_248], rcx
__text:0000000100004F3F                 mov     [rbp+var_250], rdx
__text:0000000100004F46                 mov     [rbp+var_258], rsi
__text:0000000100004F4D                 mov     rcx, [rbp+var_250]
__text:0000000100004F54                 mov     rdx, [rbp+var_258]
__text:0000000100004F5B                 mov     [rbp+var_238], rcx
__text:0000000100004F62                 mov     [rbp+var_240], rdx
__text:0000000100004F69                 mov     rcx, [rbp+var_238]
__text:0000000100004F70                 mov     r9d, [rcx]
__text:0000000100004F73                 mov     rcx, [rbp+var_240]
__text:0000000100004F7A                 cmp     r9d, [rcx]
__text:0000000100004F7D                 mov     [rbp+var_35B], al
__text:0000000100004F83                 jl      loc_100004FD2
__text:0000000100004F89                 mov     al, 0
__text:0000000100004F8B                 mov     rcx, [rbp+var_240]
__text:0000000100004F92                 mov     edx, [rcx]
__text:0000000100004F94                 mov     rcx, [rbp+var_238]
__text:0000000100004F9B                 cmp     edx, [rcx]
__text:0000000100004F9D                 mov     [rbp+var_35C], al
__text:0000000100004FA3                 jl      loc_100004FC6
__text:0000000100004FA9                 mov     rax, [rbp+var_238]
__text:0000000100004FB0                 mov     ecx, [rax+4]
__text:0000000100004FB3                 mov     rax, [rbp+var_240]
__text:0000000100004FBA                 cmp     ecx, [rax+4]
__text:0000000100004FBD                 setl    dl
__text:0000000100004FC0                 mov     [rbp+var_35C], dl
__text:0000000100004FC6
__text:0000000100004FC6 loc_100004FC6:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+763↑j
__text:0000000100004FC6                 mov     al, [rbp+var_35C]
__text:0000000100004FCC                 mov     [rbp+var_35B], al
__text:0000000100004FD2
__text:0000000100004FD2 loc_100004FD2:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+743↑j
__text:0000000100004FD2                 mov     al, [rbp+var_35B]
__text:0000000100004FD8                 test    al, 1
__text:0000000100004FDA                 jnz     loc_100004FE5
__text:0000000100004FE0                 jmp     loc_10000516F
__text:0000000100004FE5 ; ---------------------------------------------------------------------------
__text:0000000100004FE5
__text:0000000100004FE5 loc_100004FE5:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+79A↑j
__text:0000000100004FE5                 lea     rax, [rbp+var_284]
__text:0000000100004FEC                 lea     rcx, [rbp+var_2C4]
__text:0000000100004FF3                 mov     rdx, [rbp+var_328]
__text:0000000100004FFA                 mov     rsi, [rbp+var_330]
__text:0000000100005001                 mov     [rbp+var_2F0], rdx
__text:0000000100005008                 mov     [rbp+var_2F8], rsi
__text:000000010000500F                 mov     rdx, [rbp+var_2F0]
__text:0000000100005016                 mov     rsi, [rbp+var_2F8]
__text:000000010000501D                 mov     [rbp+var_2E0], rdx
__text:0000000100005024                 mov     [rbp+var_2E8], rsi
__text:000000010000502B                 mov     rdx, [rbp+var_2E0]
__text:0000000100005032                 mov     rsi, [rbp+var_2E8]
__text:0000000100005039                 mov     [rbp+var_2D0], rdx
__text:0000000100005040                 mov     [rbp+var_2D8], rsi
__text:0000000100005047                 mov     rsi, [rbp+var_2D0]
__text:000000010000504E                 mov     rdi, [rbp+var_2D8]
__text:0000000100005055                 mov     [rbp+var_2B8], rsi
__text:000000010000505C                 mov     [rbp+var_2C0], rdi
__text:0000000100005063                 mov     rsi, [rbp+var_2B8]
__text:000000010000506A                 mov     [rbp+var_2B0], rsi
__text:0000000100005071                 mov     rsi, [rbp+var_2B0]
__text:0000000100005078                 mov     r8d, [rsi]
__text:000000010000507B                 mov     [rbp+var_2C4], r8d
__text:0000000100005082                 mov     rsi, [rbp+var_2C0]
__text:0000000100005089                 mov     [rbp+var_2A0], rsi
__text:0000000100005090                 mov     rsi, [rbp+var_2A0]
__text:0000000100005097                 mov     r8d, [rsi]
__text:000000010000509A                 mov     rsi, [rbp+var_2B8]
__text:00000001000050A1                 mov     [rsi], r8d
__text:00000001000050A4                 mov     [rbp+var_2A8], rcx
__text:00000001000050AB                 mov     rcx, [rbp+var_2A8]
__text:00000001000050B2                 mov     r8d, [rcx]
__text:00000001000050B5                 mov     rcx, [rbp+var_2C0]
__text:00000001000050BC                 mov     [rcx], r8d
__text:00000001000050BF                 add     rdx, 4
__text:00000001000050C6                 mov     rcx, [rbp+var_2E8]
__text:00000001000050CD                 add     rcx, 4
__text:00000001000050D4                 mov     [rbp+var_290], rdx
__text:00000001000050DB                 mov     [rbp+var_298], rcx
__text:00000001000050E2                 mov     rcx, [rbp+var_290]
__text:00000001000050E9                 mov     rdx, [rbp+var_298]
__text:00000001000050F0                 mov     [rbp+var_278], rcx
__text:00000001000050F7                 mov     [rbp+var_280], rdx
__text:00000001000050FE                 mov     rcx, [rbp+var_278]
__text:0000000100005105                 mov     [rbp+var_270], rcx
__text:000000010000510C                 mov     rcx, [rbp+var_270]
__text:0000000100005113                 mov     r8d, [rcx]
__text:0000000100005116                 mov     [rbp+var_284], r8d
__text:000000010000511D                 mov     rcx, [rbp+var_280]
__text:0000000100005124                 mov     [rbp+var_260], rcx
__text:000000010000512B                 mov     rcx, [rbp+var_260]
__text:0000000100005132                 mov     r8d, [rcx]
__text:0000000100005135                 mov     rcx, [rbp+var_278]
__text:000000010000513C                 mov     [rcx], r8d
__text:000000010000513F                 mov     [rbp+var_268], rax
__text:0000000100005146                 mov     rax, [rbp+var_268]
__text:000000010000514D                 mov     r8d, [rax]
__text:0000000100005150                 mov     rax, [rbp+var_280]
__text:0000000100005157                 mov     [rax], r8d
__text:000000010000515A                 mov     r8d, [rbp+var_354]
__text:0000000100005161                 add     r8d, 1
__text:0000000100005168                 mov     [rbp+var_354], r8d
__text:000000010000516F
__text:000000010000516F loc_10000516F:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+7A0↑j
__text:000000010000516F                 jmp     $+5
__text:0000000100005174 ; ---------------------------------------------------------------------------
__text:0000000100005174
__text:0000000100005174 loc_100005174:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+552↑j
__text:0000000100005174                                         ; std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_10000516F↑j
__text:0000000100005174                 jmp     $+5
__text:0000000100005179 ; ---------------------------------------------------------------------------
__text:0000000100005179
__text:0000000100005179 loc_100005179:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+304↑j
__text:0000000100005179                                         ; std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100005174↑j
__text:0000000100005179                 jmp     $+5
__text:000000010000517E ; ---------------------------------------------------------------------------
__text:000000010000517E
__text:000000010000517E loc_10000517E:                          ; CODE XREF: std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+122↑j
__text:000000010000517E                                         ; std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100005179↑j
__text:000000010000517E                 mov     eax, [rbp+var_354]
__text:0000000100005184                 add     rsp, 360h
__text:000000010000518B                 pop     rbp
__text:000000010000518C                 retn
__text:000000010000518C __ZNSt3__17__sort5IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ endp
__text:000000010000518C
__text:000000010000518C ; ---------------------------------------------------------------------------
__text:000000010000518D                 align 10h
__text:0000000100005190
__text:0000000100005190 ; =============== S U B R O U T I N E =======================================
__text:0000000100005190
__text:0000000100005190 ; Attributes: bp-based frame
__text:0000000100005190
__text:0000000100005190 ; void std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &, std::__1::pair<int, int>*>(std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &)
__text:0000000100005190 __ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T_ proc near
__text:0000000100005190                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T__ptr↓o
__text:0000000100005190
__text:0000000100005190 var_F1          = byte ptr -0F1h
__text:0000000100005190 var_F0          = byte ptr -0F0h
__text:0000000100005190 var_EF          = byte ptr -0EFh
__text:0000000100005190 var_EE          = byte ptr -0EEh
__text:0000000100005190 var_ED          = byte ptr -0EDh
__text:0000000100005190 var_EC          = dword ptr -0ECh
__text:0000000100005190 var_E8          = qword ptr -0E8h
__text:0000000100005190 var_E0          = qword ptr -0E0h
__text:0000000100005190 var_D8          = byte ptr -0D8h
__text:0000000100005190 var_D0          = qword ptr -0D0h
__text:0000000100005190 var_C8          = qword ptr -0C8h
__text:0000000100005190 var_C0          = qword ptr -0C0h
__text:0000000100005190 var_B8          = qword ptr -0B8h
__text:0000000100005190 var_B0          = qword ptr -0B0h
__text:0000000100005190 var_A8          = qword ptr -0A8h
__text:0000000100005190 var_A0          = qword ptr -0A0h
__text:0000000100005190 var_98          = qword ptr -98h
__text:0000000100005190 var_90          = qword ptr -90h
__text:0000000100005190 var_88          = qword ptr -88h
__text:0000000100005190 var_80          = qword ptr -80h
__text:0000000100005190 var_78          = qword ptr -78h
__text:0000000100005190 var_70          = qword ptr -70h
__text:0000000100005190 var_68          = qword ptr -68h
__text:0000000100005190 var_60          = qword ptr -60h
__text:0000000100005190 var_58          = qword ptr -58h
__text:0000000100005190 var_50          = qword ptr -50h
__text:0000000100005190 var_48          = qword ptr -48h
__text:0000000100005190 var_40          = qword ptr -40h
__text:0000000100005190 var_38          = qword ptr -38h
__text:0000000100005190 var_30          = qword ptr -30h
__text:0000000100005190 var_28          = qword ptr -28h
__text:0000000100005190 var_20          = qword ptr -20h
__text:0000000100005190 var_18          = qword ptr -18h
__text:0000000100005190 var_10          = qword ptr -10h
__text:0000000100005190 var_8           = qword ptr -8
__text:0000000100005190
__text:0000000100005190                 push    rbp
__text:0000000100005191                 mov     rbp, rsp
__text:0000000100005194                 sub     rsp, 100h
__text:000000010000519B                 mov     [rbp+var_B0], rdi
__text:00000001000051A2                 mov     [rbp+var_B8], rsi
__text:00000001000051A9                 mov     [rbp+var_C0], rdx
__text:00000001000051B0                 mov     rdx, [rbp+var_B0]
__text:00000001000051B7                 add     rdx, 10h
__text:00000001000051BE                 mov     [rbp+var_C8], rdx
__text:00000001000051C5                 mov     rdi, [rbp+var_B0]
__text:00000001000051CC                 mov     rdx, [rbp+var_B0]
__text:00000001000051D3                 add     rdx, 8
__text:00000001000051DA                 mov     rsi, [rbp+var_C8]
__text:00000001000051E1                 mov     rcx, [rbp+var_C0]
__text:00000001000051E8                 mov     [rbp+var_E8], rsi
__text:00000001000051EF                 mov     rsi, rdx
__text:00000001000051F2                 mov     rdx, [rbp+var_E8]
__text:00000001000051F9                 call    j___ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T_ ; std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:00000001000051FE                 mov     rcx, [rbp+var_C8]
__text:0000000100005205                 add     rcx, 8
__text:000000010000520C                 mov     [rbp+var_D0], rcx
__text:0000000100005213                 mov     [rbp+var_EC], eax
__text:0000000100005219
__text:0000000100005219 loc_100005219:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+323↓j
__text:0000000100005219                 mov     rax, [rbp+var_D0]
__text:0000000100005220                 cmp     rax, [rbp+var_B8]
__text:0000000100005227                 jz      loc_1000054B8
__text:000000010000522D                 mov     al, 1
__text:000000010000522F                 mov     rcx, [rbp+var_C0]
__text:0000000100005236                 mov     rdx, [rbp+var_D0]
__text:000000010000523D                 mov     rsi, [rbp+var_C8]
__text:0000000100005244                 mov     [rbp+var_98], rcx
__text:000000010000524B                 mov     [rbp+var_A0], rdx
__text:0000000100005252                 mov     [rbp+var_A8], rsi
__text:0000000100005259                 mov     rcx, [rbp+var_A0]
__text:0000000100005260                 mov     rdx, [rbp+var_A8]
__text:0000000100005267                 mov     [rbp+var_88], rcx
__text:000000010000526E                 mov     [rbp+var_90], rdx
__text:0000000100005275                 mov     rcx, [rbp+var_88]
__text:000000010000527C                 mov     edi, [rcx]
__text:000000010000527E                 mov     rcx, [rbp+var_90]
__text:0000000100005285                 cmp     edi, [rcx]
__text:0000000100005287                 mov     [rbp+var_ED], al
__text:000000010000528D                 jl      loc_1000052DC
__text:0000000100005293                 mov     al, 0
__text:0000000100005295                 mov     rcx, [rbp+var_90]
__text:000000010000529C                 mov     edx, [rcx]
__text:000000010000529E                 mov     rcx, [rbp+var_88]
__text:00000001000052A5                 cmp     edx, [rcx]
__text:00000001000052A7                 mov     [rbp+var_EE], al
__text:00000001000052AD                 jl      loc_1000052D0
__text:00000001000052B3                 mov     rax, [rbp+var_88]
__text:00000001000052BA                 mov     ecx, [rax+4]
__text:00000001000052BD                 mov     rax, [rbp+var_90]
__text:00000001000052C4                 cmp     ecx, [rax+4]
__text:00000001000052C7                 setl    dl
__text:00000001000052CA                 mov     [rbp+var_EE], dl
__text:00000001000052D0
__text:00000001000052D0 loc_1000052D0:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+11D↑j
__text:00000001000052D0                 mov     al, [rbp+var_EE]
__text:00000001000052D6                 mov     [rbp+var_ED], al
__text:00000001000052DC
__text:00000001000052DC loc_1000052DC:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+FD↑j
__text:00000001000052DC                 mov     al, [rbp+var_ED]
__text:00000001000052E2                 test    al, 1
__text:00000001000052E4                 jnz     loc_1000052EF
__text:00000001000052EA                 jmp     loc_100005491
__text:00000001000052EF ; ---------------------------------------------------------------------------
__text:00000001000052EF
__text:00000001000052EF loc_1000052EF:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+154↑j
__text:00000001000052EF                 lea     rax, [rbp+var_D8]
__text:00000001000052F6                 mov     rcx, [rbp+var_D0]
__text:00000001000052FD                 mov     [rbp+var_8], rcx
__text:0000000100005301                 mov     rcx, [rbp+var_8]
__text:0000000100005305                 mov     [rbp+var_20], rax
__text:0000000100005309                 mov     [rbp+var_28], rcx
__text:000000010000530D                 mov     rax, [rbp+var_20]
__text:0000000100005311                 mov     rcx, [rbp+var_28]
__text:0000000100005315                 mov     [rbp+var_10], rax
__text:0000000100005319                 mov     [rbp+var_18], rcx
__text:000000010000531D                 mov     rax, [rbp+var_10]
__text:0000000100005321                 mov     rcx, [rbp+var_18]
__text:0000000100005325                 mov     edx, [rcx]
__text:0000000100005327                 mov     [rax], edx
__text:0000000100005329                 mov     rcx, [rbp+var_18]
__text:000000010000532D                 mov     edx, [rcx+4]
__text:0000000100005330                 mov     [rax+4], edx
__text:0000000100005333                 mov     rax, [rbp+var_C8]
__text:000000010000533A                 mov     [rbp+var_E0], rax
__text:0000000100005341                 mov     rax, [rbp+var_D0]
__text:0000000100005348                 mov     [rbp+var_C8], rax
__text:000000010000534F
__text:000000010000534F loc_10000534F:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+2C7↓j
__text:000000010000534F                 mov     rax, [rbp+var_C8]
__text:0000000100005356                 mov     rcx, [rbp+var_E0]
__text:000000010000535D                 mov     [rbp+var_30], rcx
__text:0000000100005361                 mov     rcx, [rbp+var_30]
__text:0000000100005365                 mov     [rbp+var_38], rax
__text:0000000100005369                 mov     [rbp+var_40], rcx
__text:000000010000536D                 mov     rax, [rbp+var_38]
__text:0000000100005371                 mov     rcx, [rbp+var_40]
__text:0000000100005375                 mov     edx, [rcx]
__text:0000000100005377                 mov     [rax], edx
__text:0000000100005379                 mov     rcx, [rbp+var_40]
__text:000000010000537D                 mov     edx, [rcx+4]
__text:0000000100005380                 mov     [rax+4], edx
__text:0000000100005383                 mov     rax, [rbp+var_E0]
__text:000000010000538A                 mov     [rbp+var_C8], rax
__text:0000000100005391                 mov     al, 0
__text:0000000100005393                 mov     rcx, [rbp+var_C8]
__text:000000010000539A                 cmp     rcx, [rbp+var_B0]
__text:00000001000053A1                 mov     [rbp+var_EF], al
__text:00000001000053A7                 jz      loc_10000544F
__text:00000001000053AD                 mov     al, 1
__text:00000001000053AF                 lea     rcx, [rbp+var_D8]
__text:00000001000053B6                 mov     rdx, [rbp+var_C0]
__text:00000001000053BD                 mov     rsi, [rbp+var_E0]
__text:00000001000053C4                 add     rsi, 0FFFFFFFFFFFFFFF8h
__text:00000001000053CB                 mov     [rbp+var_E0], rsi
__text:00000001000053D2                 mov     [rbp+var_58], rdx
__text:00000001000053D6                 mov     [rbp+var_60], rcx
__text:00000001000053DA                 mov     [rbp+var_68], rsi
__text:00000001000053DE                 mov     rcx, [rbp+var_60]
__text:00000001000053E2                 mov     rdx, [rbp+var_68]
__text:00000001000053E6                 mov     [rbp+var_48], rcx
__text:00000001000053EA                 mov     [rbp+var_50], rdx
__text:00000001000053EE                 mov     rcx, [rbp+var_48]
__text:00000001000053F2                 mov     edi, [rcx]
__text:00000001000053F4                 mov     rcx, [rbp+var_50]
__text:00000001000053F8                 cmp     edi, [rcx]
__text:00000001000053FA                 mov     [rbp+var_F0], al
__text:0000000100005400                 jl      loc_100005443
__text:0000000100005406                 mov     al, 0
__text:0000000100005408                 mov     rcx, [rbp+var_50]
__text:000000010000540C                 mov     edx, [rcx]
__text:000000010000540E                 mov     rcx, [rbp+var_48]
__text:0000000100005412                 cmp     edx, [rcx]
__text:0000000100005414                 mov     [rbp+var_F1], al
__text:000000010000541A                 jl      loc_100005437
__text:0000000100005420                 mov     rax, [rbp+var_48]
__text:0000000100005424                 mov     ecx, [rax+4]
__text:0000000100005427                 mov     rax, [rbp+var_50]
__text:000000010000542B                 cmp     ecx, [rax+4]
__text:000000010000542E                 setl    dl
__text:0000000100005431                 mov     [rbp+var_F1], dl
__text:0000000100005437
__text:0000000100005437 loc_100005437:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+28A↑j
__text:0000000100005437                 mov     al, [rbp+var_F1]
__text:000000010000543D                 mov     [rbp+var_F0], al
__text:0000000100005443
__text:0000000100005443 loc_100005443:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+270↑j
__text:0000000100005443                 mov     al, [rbp+var_F0]
__text:0000000100005449                 mov     [rbp+var_EF], al
__text:000000010000544F
__text:000000010000544F loc_10000544F:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+217↑j
__text:000000010000544F                 mov     al, [rbp+var_EF]
__text:0000000100005455                 test    al, 1
__text:0000000100005457                 jnz     loc_10000534F
__text:000000010000545D                 lea     rax, [rbp+var_D8]
__text:0000000100005464                 mov     rcx, [rbp+var_C8]
__text:000000010000546B                 mov     [rbp+var_70], rax
__text:000000010000546F                 mov     rax, [rbp+var_70]
__text:0000000100005473                 mov     [rbp+var_78], rcx
__text:0000000100005477                 mov     [rbp+var_80], rax
__text:000000010000547B                 mov     rax, [rbp+var_78]
__text:000000010000547F                 mov     rcx, [rbp+var_80]
__text:0000000100005483                 mov     edx, [rcx]
__text:0000000100005485                 mov     [rax], edx
__text:0000000100005487                 mov     rcx, [rbp+var_80]
__text:000000010000548B                 mov     edx, [rcx+4]
__text:000000010000548E                 mov     [rax+4], edx
__text:0000000100005491
__text:0000000100005491 loc_100005491:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+15A↑j
__text:0000000100005491                 mov     rax, [rbp+var_D0]
__text:0000000100005498                 mov     [rbp+var_C8], rax
__text:000000010000549F                 mov     rax, [rbp+var_D0]
__text:00000001000054A6                 add     rax, 8
__text:00000001000054AC                 mov     [rbp+var_D0], rax
__text:00000001000054B3                 jmp     loc_100005219
__text:00000001000054B8 ; ---------------------------------------------------------------------------
__text:00000001000054B8
__text:00000001000054B8 loc_1000054B8:                          ; CODE XREF: std::__1::__insertion_sort_3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+97↑j
__text:00000001000054B8                 add     rsp, 100h
__text:00000001000054BF                 pop     rbp
__text:00000001000054C0                 retn
__text:00000001000054C0 __ZNSt3__118__insertion_sort_3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEvT0_S7_T_ endp
__text:00000001000054C0
__text:00000001000054C0 ; ---------------------------------------------------------------------------
__text:00000001000054C1                 align 10h
__text:00000001000054D0
__text:00000001000054D0 ; =============== S U B R O U T I N E =======================================
__text:00000001000054D0
__text:00000001000054D0 ; Attributes: bp-based frame
__text:00000001000054D0
__text:00000001000054D0 ; bool std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &, std::__1::pair<int, int>*>(std::__1::pair<int, int>*, std::__1::pair<int, int>*, std::__1::__less<std::__1::pair<int, int>, std::__1::pair<int, int>> &)
__text:00000001000054D0 __ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEbT0_S7_T_ proc near
__text:00000001000054D0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEbT0_S7_T__ptr↓o
__text:00000001000054D0
__text:00000001000054D0 var_20D         = byte ptr -20Dh
__text:00000001000054D0 var_20C         = byte ptr -20Ch
__text:00000001000054D0 var_20B         = byte ptr -20Bh
__text:00000001000054D0 var_20A         = byte ptr -20Ah
__text:00000001000054D0 var_209         = byte ptr -209h
__text:00000001000054D0 var_208         = dword ptr -208h
__text:00000001000054D0 var_204         = dword ptr -204h
__text:00000001000054D0 var_200         = qword ptr -200h
__text:00000001000054D0 var_1F8         = qword ptr -1F8h
__text:00000001000054D0 var_1EC         = dword ptr -1ECh
__text:00000001000054D0 var_1E8         = qword ptr -1E8h
__text:00000001000054D0 var_1DC         = dword ptr -1DCh
__text:00000001000054D0 var_1D8         = qword ptr -1D8h
__text:00000001000054D0 var_1CA         = byte ptr -1CAh
__text:00000001000054D0 var_1C9         = byte ptr -1C9h
__text:00000001000054D0 var_1C8         = qword ptr -1C8h
__text:00000001000054D0 var_1C0         = qword ptr -1C0h
__text:00000001000054D0 var_1B8         = qword ptr -1B8h
__text:00000001000054D0 var_1B0         = byte ptr -1B0h
__text:00000001000054D0 var_1A8         = qword ptr -1A8h
__text:00000001000054D0 var_1A0         = dword ptr -1A0h
__text:00000001000054D0 var_19C         = dword ptr -19Ch
__text:00000001000054D0 var_198         = qword ptr -198h
__text:00000001000054D0 var_190         = qword ptr -190h
__text:00000001000054D0 var_188         = qword ptr -188h
__text:00000001000054D0 var_180         = qword ptr -180h
__text:00000001000054D0 var_171         = byte ptr -171h
__text:00000001000054D0 var_170         = qword ptr -170h
__text:00000001000054D0 var_168         = qword ptr -168h
__text:00000001000054D0 var_160         = qword ptr -160h
__text:00000001000054D0 var_158         = qword ptr -158h
__text:00000001000054D0 var_150         = qword ptr -150h
__text:00000001000054D0 var_148         = qword ptr -148h
__text:00000001000054D0 var_140         = qword ptr -140h
__text:00000001000054D0 var_138         = qword ptr -138h
__text:00000001000054D0 var_130         = qword ptr -130h
__text:00000001000054D0 var_128         = qword ptr -128h
__text:00000001000054D0 var_120         = qword ptr -120h
__text:00000001000054D0 var_118         = qword ptr -118h
__text:00000001000054D0 var_110         = qword ptr -110h
__text:00000001000054D0 var_108         = qword ptr -108h
__text:00000001000054D0 var_100         = qword ptr -100h
__text:00000001000054D0 var_F8          = qword ptr -0F8h
__text:00000001000054D0 var_F0          = qword ptr -0F0h
__text:00000001000054D0 var_E8          = qword ptr -0E8h
__text:00000001000054D0 var_E0          = qword ptr -0E0h
__text:00000001000054D0 var_D8          = qword ptr -0D8h
__text:00000001000054D0 var_D0          = qword ptr -0D0h
__text:00000001000054D0 var_C8          = qword ptr -0C8h
__text:00000001000054D0 var_C0          = qword ptr -0C0h
__text:00000001000054D0 var_B8          = qword ptr -0B8h
__text:00000001000054D0 var_B0          = qword ptr -0B0h
__text:00000001000054D0 var_A8          = qword ptr -0A8h
__text:00000001000054D0 var_A0          = qword ptr -0A0h
__text:00000001000054D0 var_98          = qword ptr -98h
__text:00000001000054D0 var_90          = qword ptr -90h
__text:00000001000054D0 var_88          = qword ptr -88h
__text:00000001000054D0 var_80          = qword ptr -80h
__text:00000001000054D0 var_78          = qword ptr -78h
__text:00000001000054D0 var_6C          = dword ptr -6Ch
__text:00000001000054D0 var_68          = qword ptr -68h
__text:00000001000054D0 var_60          = qword ptr -60h
__text:00000001000054D0 var_58          = qword ptr -58h
__text:00000001000054D0 var_50          = qword ptr -50h
__text:00000001000054D0 var_48          = qword ptr -48h
__text:00000001000054D0 var_40          = qword ptr -40h
__text:00000001000054D0 var_38          = qword ptr -38h
__text:00000001000054D0 var_2C          = dword ptr -2Ch
__text:00000001000054D0 var_28          = qword ptr -28h
__text:00000001000054D0 var_20          = qword ptr -20h
__text:00000001000054D0 var_18          = qword ptr -18h
__text:00000001000054D0 var_10          = qword ptr -10h
__text:00000001000054D0 var_8           = qword ptr -8
__text:00000001000054D0
__text:00000001000054D0                 push    rbp
__text:00000001000054D1                 mov     rbp, rsp
__text:00000001000054D4                 sub     rsp, 210h
__text:00000001000054DB                 mov     [rbp+var_180], rdi
__text:00000001000054E2                 mov     [rbp+var_188], rsi
__text:00000001000054E9                 mov     [rbp+var_190], rdx
__text:00000001000054F0                 mov     rdx, [rbp+var_188]
__text:00000001000054F7                 mov     rsi, [rbp+var_180]
__text:00000001000054FE                 sub     rdx, rsi
__text:0000000100005501                 sar     rdx, 3
__text:0000000100005505                 mov     rsi, rdx
__text:0000000100005508                 sub     rsi, 5          ; switch 6 cases
__text:000000010000550C                 mov     [rbp+var_1C0], rdx
__text:0000000100005513                 mov     [rbp+var_1C8], rsi
__text:000000010000551A                 ja      def_100005535   ; jumptable 0000000100005535 default case
__text:0000000100005520                 lea     rax, jpt_100005535
__text:0000000100005527                 mov     rcx, [rbp+var_1C0]
__text:000000010000552E                 movsxd  rdx, ds:(jpt_100005535 - 100005C5Ch)[rax+rcx*4]
__text:0000000100005532                 add     rdx, rax
__text:0000000100005535                 jmp     rdx             ; switch jump
__text:0000000100005537 ; ---------------------------------------------------------------------------
__text:0000000100005537
__text:0000000100005537 loc_100005537:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+65↑j
__text:0000000100005537                                         ; DATA XREF: __text:jpt_100005535↓o
__text:0000000100005537                 mov     [rbp+var_171], 1 ; jumptable 0000000100005535 cases 0,1
__text:000000010000553E                 jmp     loc_100005C45
__text:0000000100005543 ; ---------------------------------------------------------------------------
__text:0000000100005543
__text:0000000100005543 loc_100005543:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+65↑j
__text:0000000100005543                                         ; DATA XREF: __text:jpt_100005535↓o
__text:0000000100005543                 mov     al, 1           ; jumptable 0000000100005535 case 2
__text:0000000100005545                 mov     rcx, [rbp+var_190]
__text:000000010000554C                 mov     rdx, [rbp+var_188]
__text:0000000100005553                 add     rdx, 0FFFFFFFFFFFFFFF8h
__text:000000010000555A                 mov     [rbp+var_188], rdx
__text:0000000100005561                 mov     rsi, [rbp+var_180]
__text:0000000100005568                 mov     [rbp+var_160], rcx
__text:000000010000556F                 mov     [rbp+var_168], rdx
__text:0000000100005576                 mov     [rbp+var_170], rsi
__text:000000010000557D                 mov     rcx, [rbp+var_168]
__text:0000000100005584                 mov     rdx, [rbp+var_170]
__text:000000010000558B                 mov     [rbp+var_150], rcx
__text:0000000100005592                 mov     [rbp+var_158], rdx
__text:0000000100005599                 mov     rcx, [rbp+var_150]
__text:00000001000055A0                 mov     edi, [rcx]
__text:00000001000055A2                 mov     rcx, [rbp+var_158]
__text:00000001000055A9                 cmp     edi, [rcx]
__text:00000001000055AB                 mov     [rbp+var_1C9], al
__text:00000001000055B1                 jl      loc_100005600
__text:00000001000055B7                 mov     al, 0
__text:00000001000055B9                 mov     rcx, [rbp+var_158]
__text:00000001000055C0                 mov     edx, [rcx]
__text:00000001000055C2                 mov     rcx, [rbp+var_150]
__text:00000001000055C9                 cmp     edx, [rcx]
__text:00000001000055CB                 mov     [rbp+var_1CA], al
__text:00000001000055D1                 jl      loc_1000055F4
__text:00000001000055D7                 mov     rax, [rbp+var_150]
__text:00000001000055DE                 mov     ecx, [rax+4]
__text:00000001000055E1                 mov     rax, [rbp+var_158]
__text:00000001000055E8                 cmp     ecx, [rax+4]
__text:00000001000055EB                 setl    dl
__text:00000001000055EE                 mov     [rbp+var_1CA], dl
__text:00000001000055F4
__text:00000001000055F4 loc_1000055F4:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+101↑j
__text:00000001000055F4                 mov     al, [rbp+var_1CA]
__text:00000001000055FA                 mov     [rbp+var_1C9], al
__text:0000000100005600
__text:0000000100005600 loc_100005600:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+E1↑j
__text:0000000100005600                 mov     al, [rbp+var_1C9]
__text:0000000100005606                 test    al, 1
__text:0000000100005608                 jnz     loc_100005613
__text:000000010000560E                 jmp     loc_10000571C
__text:0000000100005613 ; ---------------------------------------------------------------------------
__text:0000000100005613
__text:0000000100005613 loc_100005613:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+138↑j
__text:0000000100005613                 lea     rax, [rbp+var_2C]
__text:0000000100005617                 lea     rcx, [rbp+var_6C]
__text:000000010000561B                 mov     rdx, [rbp+var_180]
__text:0000000100005622                 mov     rsi, [rbp+var_188]
__text:0000000100005629                 mov     [rbp+var_98], rdx
__text:0000000100005630                 mov     [rbp+var_A0], rsi
__text:0000000100005637                 mov     rdx, [rbp+var_98]
__text:000000010000563E                 mov     rsi, [rbp+var_A0]
__text:0000000100005645                 mov     [rbp+var_88], rdx
__text:000000010000564C                 mov     [rbp+var_90], rsi
__text:0000000100005653                 mov     rdx, [rbp+var_88]
__text:000000010000565A                 mov     rsi, [rbp+var_90]
__text:0000000100005661                 mov     [rbp+var_78], rdx
__text:0000000100005665                 mov     [rbp+var_80], rsi
__text:0000000100005669                 mov     rsi, [rbp+var_78]
__text:000000010000566D                 mov     rdi, [rbp+var_80]
__text:0000000100005671                 mov     [rbp+var_60], rsi
__text:0000000100005675                 mov     [rbp+var_68], rdi
__text:0000000100005679                 mov     rsi, [rbp+var_60]
__text:000000010000567D                 mov     [rbp+var_58], rsi
__text:0000000100005681                 mov     rsi, [rbp+var_58]
__text:0000000100005685                 mov     r8d, [rsi]
__text:0000000100005688                 mov     [rbp+var_6C], r8d
__text:000000010000568C                 mov     rsi, [rbp+var_68]
__text:0000000100005690                 mov     [rbp+var_48], rsi
__text:0000000100005694                 mov     rsi, [rbp+var_48]
__text:0000000100005698                 mov     r8d, [rsi]
__text:000000010000569B                 mov     rsi, [rbp+var_60]
__text:000000010000569F                 mov     [rsi], r8d
__text:00000001000056A2                 mov     [rbp+var_50], rcx
__text:00000001000056A6                 mov     rcx, [rbp+var_50]
__text:00000001000056AA                 mov     r8d, [rcx]
__text:00000001000056AD                 mov     rcx, [rbp+var_68]
__text:00000001000056B1                 mov     [rcx], r8d
__text:00000001000056B4                 add     rdx, 4
__text:00000001000056BB                 mov     rcx, [rbp+var_90]
__text:00000001000056C2                 add     rcx, 4
__text:00000001000056C9                 mov     [rbp+var_38], rdx
__text:00000001000056CD                 mov     [rbp+var_40], rcx
__text:00000001000056D1                 mov     rcx, [rbp+var_38]
__text:00000001000056D5                 mov     rdx, [rbp+var_40]
__text:00000001000056D9                 mov     [rbp+var_20], rcx
__text:00000001000056DD                 mov     [rbp+var_28], rdx
__text:00000001000056E1                 mov     rcx, [rbp+var_20]
__text:00000001000056E5                 mov     [rbp+var_18], rcx
__text:00000001000056E9                 mov     rcx, [rbp+var_18]
__text:00000001000056ED                 mov     r8d, [rcx]
__text:00000001000056F0                 mov     [rbp+var_2C], r8d
__text:00000001000056F4                 mov     rcx, [rbp+var_28]
__text:00000001000056F8                 mov     [rbp+var_8], rcx
__text:00000001000056FC                 mov     rcx, [rbp+var_8]
__text:0000000100005700                 mov     r8d, [rcx]
__text:0000000100005703                 mov     rcx, [rbp+var_20]
__text:0000000100005707                 mov     [rcx], r8d
__text:000000010000570A                 mov     [rbp+var_10], rax
__text:000000010000570E                 mov     rax, [rbp+var_10]
__text:0000000100005712                 mov     r8d, [rax]
__text:0000000100005715                 mov     rax, [rbp+var_28]
__text:0000000100005719                 mov     [rax], r8d
__text:000000010000571C
__text:000000010000571C loc_10000571C:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+13E↑j
__text:000000010000571C                 mov     [rbp+var_171], 1
__text:0000000100005723                 jmp     loc_100005C45
__text:0000000100005728 ; ---------------------------------------------------------------------------
__text:0000000100005728
__text:0000000100005728 loc_100005728:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+65↑j
__text:0000000100005728                                         ; DATA XREF: __text:jpt_100005535↓o
__text:0000000100005728                 mov     rdi, [rbp+var_180] ; jumptable 0000000100005535 case 3
__text:000000010000572F                 mov     rax, [rbp+var_180]
__text:0000000100005736                 add     rax, 8
__text:000000010000573C                 mov     rcx, [rbp+var_188]
__text:0000000100005743                 add     rcx, 0FFFFFFFFFFFFFFF8h
__text:000000010000574A                 mov     [rbp+var_188], rcx
__text:0000000100005751                 mov     rdx, [rbp+var_190]
__text:0000000100005758                 mov     rsi, rax
__text:000000010000575B                 mov     [rbp+var_1D8], rdx
__text:0000000100005762                 mov     rdx, rcx
__text:0000000100005765                 mov     rcx, [rbp+var_1D8]
__text:000000010000576C                 call    j___ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T_ ; std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:0000000100005771                 mov     [rbp+var_171], 1
__text:0000000100005778                 mov     [rbp+var_1DC], eax
__text:000000010000577E                 jmp     loc_100005C45
__text:0000000100005783 ; ---------------------------------------------------------------------------
__text:0000000100005783
__text:0000000100005783 loc_100005783:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+65↑j
__text:0000000100005783                                         ; DATA XREF: __text:jpt_100005535↓o
__text:0000000100005783                 mov     rdi, [rbp+var_180] ; jumptable 0000000100005535 case 4
__text:000000010000578A                 mov     rax, [rbp+var_180]
__text:0000000100005791                 add     rax, 8
__text:0000000100005797                 mov     rcx, [rbp+var_180]
__text:000000010000579E                 add     rcx, 10h
__text:00000001000057A5                 mov     rdx, [rbp+var_188]
__text:00000001000057AC                 add     rdx, 0FFFFFFFFFFFFFFF8h
__text:00000001000057B3                 mov     [rbp+var_188], rdx
__text:00000001000057BA                 mov     r8, [rbp+var_190]
__text:00000001000057C1                 mov     rsi, rax
__text:00000001000057C4                 mov     [rbp+var_1E8], rdx
__text:00000001000057CB                 mov     rdx, rcx
__text:00000001000057CE                 mov     rcx, [rbp+var_1E8]
__text:00000001000057D5                 call    j___ZNSt3__17__sort4IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_T_ ; std::__1::__sort4<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:00000001000057DA                 mov     [rbp+var_171], 1
__text:00000001000057E1                 mov     [rbp+var_1EC], eax
__text:00000001000057E7                 jmp     loc_100005C45
__text:00000001000057EC ; ---------------------------------------------------------------------------
__text:00000001000057EC
__text:00000001000057EC loc_1000057EC:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+65↑j
__text:00000001000057EC                                         ; DATA XREF: __text:jpt_100005535↓o
__text:00000001000057EC                 mov     rdi, [rbp+var_180] ; jumptable 0000000100005535 case 5
__text:00000001000057F3                 mov     rax, [rbp+var_180]
__text:00000001000057FA                 add     rax, 8
__text:0000000100005800                 mov     rcx, [rbp+var_180]
__text:0000000100005807                 add     rcx, 10h
__text:000000010000580E                 mov     rdx, [rbp+var_180]
__text:0000000100005815                 add     rdx, 18h
__text:000000010000581C                 mov     rsi, [rbp+var_188]
__text:0000000100005823                 add     rsi, 0FFFFFFFFFFFFFFF8h
__text:000000010000582A                 mov     [rbp+var_188], rsi
__text:0000000100005831                 mov     r9, [rbp+var_190]
__text:0000000100005838                 mov     [rbp+var_1F8], rsi
__text:000000010000583F                 mov     rsi, rax
__text:0000000100005842                 mov     [rbp+var_200], rdx
__text:0000000100005849                 mov     rdx, rcx
__text:000000010000584C                 mov     rcx, [rbp+var_200]
__text:0000000100005853                 mov     r8, [rbp+var_1F8]
__text:000000010000585A                 call    j___ZNSt3__17__sort5IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_S7_S7_T_ ; std::__1::__sort5<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:000000010000585F                 mov     [rbp+var_171], 1
__text:0000000100005866                 mov     [rbp+var_204], eax
__text:000000010000586C                 jmp     loc_100005C45
__text:0000000100005871 ; ---------------------------------------------------------------------------
__text:0000000100005871
__text:0000000100005871 def_100005535:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+4A↑j
__text:0000000100005871                 mov     rax, [rbp+var_180] ; jumptable 0000000100005535 default case
__text:0000000100005878                 add     rax, 10h
__text:000000010000587E                 mov     [rbp+var_198], rax
__text:0000000100005885                 mov     rdi, [rbp+var_180]
__text:000000010000588C                 mov     rax, [rbp+var_180]
__text:0000000100005893                 add     rax, 8
__text:0000000100005899                 mov     rdx, [rbp+var_198]
__text:00000001000058A0                 mov     rcx, [rbp+var_190]
__text:00000001000058A7                 mov     rsi, rax
__text:00000001000058AA                 call    j___ZNSt3__17__sort3IRNS_6__lessINS_4pairIiiEES3_EEPS3_EEjT0_S7_S7_T_ ; std::__1::__sort3<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)
__text:00000001000058AF                 mov     [rbp+var_19C], 8
__text:00000001000058B9                 mov     [rbp+var_1A0], 0
__text:00000001000058C3                 mov     rcx, [rbp+var_198]
__text:00000001000058CA                 add     rcx, 8
__text:00000001000058D1                 mov     [rbp+var_1A8], rcx
__text:00000001000058D8                 mov     [rbp+var_208], eax
__text:00000001000058DE
__text:00000001000058DE loc_1000058DE:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+769↓j
__text:00000001000058DE                 mov     rax, [rbp+var_1A8]
__text:00000001000058E5                 cmp     rax, [rbp+var_188]
__text:00000001000058EC                 jz      loc_100005C3E
__text:00000001000058F2                 mov     al, 1
__text:00000001000058F4                 mov     rcx, [rbp+var_190]
__text:00000001000058FB                 mov     rdx, [rbp+var_1A8]
__text:0000000100005902                 mov     rsi, [rbp+var_198]
__text:0000000100005909                 mov     [rbp+var_B8], rcx
__text:0000000100005910                 mov     [rbp+var_C0], rdx
__text:0000000100005917                 mov     [rbp+var_C8], rsi
__text:000000010000591E                 mov     rcx, [rbp+var_C0]
__text:0000000100005925                 mov     rdx, [rbp+var_C8]
__text:000000010000592C                 mov     [rbp+var_A8], rcx
__text:0000000100005933                 mov     [rbp+var_B0], rdx
__text:000000010000593A                 mov     rcx, [rbp+var_A8]
__text:0000000100005941                 mov     edi, [rcx]
__text:0000000100005943                 mov     rcx, [rbp+var_B0]
__text:000000010000594A                 cmp     edi, [rcx]
__text:000000010000594C                 mov     [rbp+var_209], al
__text:0000000100005952                 jl      loc_1000059A1
__text:0000000100005958                 mov     al, 0
__text:000000010000595A                 mov     rcx, [rbp+var_B0]
__text:0000000100005961                 mov     edx, [rcx]
__text:0000000100005963                 mov     rcx, [rbp+var_A8]
__text:000000010000596A                 cmp     edx, [rcx]
__text:000000010000596C                 mov     [rbp+var_20A], al
__text:0000000100005972                 jl      loc_100005995
__text:0000000100005978                 mov     rax, [rbp+var_A8]
__text:000000010000597F                 mov     ecx, [rax+4]
__text:0000000100005982                 mov     rax, [rbp+var_B0]
__text:0000000100005989                 cmp     ecx, [rax+4]
__text:000000010000598C                 setl    dl
__text:000000010000598F                 mov     [rbp+var_20A], dl
__text:0000000100005995
__text:0000000100005995 loc_100005995:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+4A2↑j
__text:0000000100005995                 mov     al, [rbp+var_20A]
__text:000000010000599B                 mov     [rbp+var_209], al
__text:00000001000059A1
__text:00000001000059A1 loc_1000059A1:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+482↑j
__text:00000001000059A1                 mov     al, [rbp+var_209]
__text:00000001000059A7                 test    al, 1
__text:00000001000059A9                 jnz     loc_1000059B4
__text:00000001000059AF                 jmp     loc_100005C17
__text:00000001000059B4 ; ---------------------------------------------------------------------------
__text:00000001000059B4
__text:00000001000059B4 loc_1000059B4:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+4D9↑j
__text:00000001000059B4                 lea     rax, [rbp+var_1B0]
__text:00000001000059BB                 mov     rcx, [rbp+var_1A8]
__text:00000001000059C2                 mov     [rbp+var_D0], rcx
__text:00000001000059C9                 mov     rcx, [rbp+var_D0]
__text:00000001000059D0                 mov     [rbp+var_E8], rax
__text:00000001000059D7                 mov     [rbp+var_F0], rcx
__text:00000001000059DE                 mov     rax, [rbp+var_E8]
__text:00000001000059E5                 mov     rcx, [rbp+var_F0]
__text:00000001000059EC                 mov     [rbp+var_D8], rax
__text:00000001000059F3                 mov     [rbp+var_E0], rcx
__text:00000001000059FA                 mov     rax, [rbp+var_D8]
__text:0000000100005A01                 mov     rcx, [rbp+var_E0]
__text:0000000100005A08                 mov     edx, [rcx]
__text:0000000100005A0A                 mov     [rax], edx
__text:0000000100005A0C                 mov     rcx, [rbp+var_E0]
__text:0000000100005A13                 mov     edx, [rcx+4]
__text:0000000100005A16                 mov     [rax+4], edx
__text:0000000100005A19                 mov     rax, [rbp+var_198]
__text:0000000100005A20                 mov     [rbp+var_1B8], rax
__text:0000000100005A27                 mov     rax, [rbp+var_1A8]
__text:0000000100005A2E                 mov     [rbp+var_198], rax
__text:0000000100005A35
__text:0000000100005A35 loc_100005A35:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+6A9↓j
__text:0000000100005A35                 mov     rax, [rbp+var_198]
__text:0000000100005A3C                 mov     rcx, [rbp+var_1B8]
__text:0000000100005A43                 mov     [rbp+var_F8], rcx
__text:0000000100005A4A                 mov     rcx, [rbp+var_F8]
__text:0000000100005A51                 mov     [rbp+var_100], rax
__text:0000000100005A58                 mov     [rbp+var_108], rcx
__text:0000000100005A5F                 mov     rax, [rbp+var_100]
__text:0000000100005A66                 mov     rcx, [rbp+var_108]
__text:0000000100005A6D                 mov     edx, [rcx]
__text:0000000100005A6F                 mov     [rax], edx
__text:0000000100005A71                 mov     rcx, [rbp+var_108]
__text:0000000100005A78                 mov     edx, [rcx+4]
__text:0000000100005A7B                 mov     [rax+4], edx
__text:0000000100005A7E                 mov     rax, [rbp+var_1B8]
__text:0000000100005A85                 mov     [rbp+var_198], rax
__text:0000000100005A8C                 mov     al, 0
__text:0000000100005A8E                 mov     rcx, [rbp+var_198]
__text:0000000100005A95                 cmp     rcx, [rbp+var_180]
__text:0000000100005A9C                 mov     [rbp+var_20B], al
__text:0000000100005AA2                 jz      loc_100005B71
__text:0000000100005AA8                 mov     al, 1
__text:0000000100005AAA                 lea     rcx, [rbp+var_1B0]
__text:0000000100005AB1                 mov     rdx, [rbp+var_190]
__text:0000000100005AB8                 mov     rsi, [rbp+var_1B8]
__text:0000000100005ABF                 add     rsi, 0FFFFFFFFFFFFFFF8h
__text:0000000100005AC6                 mov     [rbp+var_1B8], rsi
__text:0000000100005ACD                 mov     [rbp+var_120], rdx
__text:0000000100005AD4                 mov     [rbp+var_128], rcx
__text:0000000100005ADB                 mov     [rbp+var_130], rsi
__text:0000000100005AE2                 mov     rcx, [rbp+var_128]
__text:0000000100005AE9                 mov     rdx, [rbp+var_130]
__text:0000000100005AF0                 mov     [rbp+var_110], rcx
__text:0000000100005AF7                 mov     [rbp+var_118], rdx
__text:0000000100005AFE                 mov     rcx, [rbp+var_110]
__text:0000000100005B05                 mov     edi, [rcx]
__text:0000000100005B07                 mov     rcx, [rbp+var_118]
__text:0000000100005B0E                 cmp     edi, [rcx]
__text:0000000100005B10                 mov     [rbp+var_20C], al
__text:0000000100005B16                 jl      loc_100005B65
__text:0000000100005B1C                 mov     al, 0
__text:0000000100005B1E                 mov     rcx, [rbp+var_118]
__text:0000000100005B25                 mov     edx, [rcx]
__text:0000000100005B27                 mov     rcx, [rbp+var_110]
__text:0000000100005B2E                 cmp     edx, [rcx]
__text:0000000100005B30                 mov     [rbp+var_20D], al
__text:0000000100005B36                 jl      loc_100005B59
__text:0000000100005B3C                 mov     rax, [rbp+var_110]
__text:0000000100005B43                 mov     ecx, [rax+4]
__text:0000000100005B46                 mov     rax, [rbp+var_118]
__text:0000000100005B4D                 cmp     ecx, [rax+4]
__text:0000000100005B50                 setl    dl
__text:0000000100005B53                 mov     [rbp+var_20D], dl
__text:0000000100005B59
__text:0000000100005B59 loc_100005B59:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+666↑j
__text:0000000100005B59                 mov     al, [rbp+var_20D]
__text:0000000100005B5F                 mov     [rbp+var_20C], al
__text:0000000100005B65
__text:0000000100005B65 loc_100005B65:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+646↑j
__text:0000000100005B65                 mov     al, [rbp+var_20C]
__text:0000000100005B6B                 mov     [rbp+var_20B], al
__text:0000000100005B71
__text:0000000100005B71 loc_100005B71:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+5D2↑j
__text:0000000100005B71                 mov     al, [rbp+var_20B]
__text:0000000100005B77                 test    al, 1
__text:0000000100005B79                 jnz     loc_100005A35
__text:0000000100005B7F                 lea     rax, [rbp+var_1B0]
__text:0000000100005B86                 mov     rcx, [rbp+var_198]
__text:0000000100005B8D                 mov     [rbp+var_138], rax
__text:0000000100005B94                 mov     rax, [rbp+var_138]
__text:0000000100005B9B                 mov     [rbp+var_140], rcx
__text:0000000100005BA2                 mov     [rbp+var_148], rax
__text:0000000100005BA9                 mov     rax, [rbp+var_140]
__text:0000000100005BB0                 mov     rcx, [rbp+var_148]
__text:0000000100005BB7                 mov     edx, [rcx]
__text:0000000100005BB9                 mov     [rax], edx
__text:0000000100005BBB                 mov     rcx, [rbp+var_148]
__text:0000000100005BC2                 mov     edx, [rcx+4]
__text:0000000100005BC5                 mov     [rax+4], edx
__text:0000000100005BC8                 mov     edx, [rbp+var_1A0]
__text:0000000100005BCE                 add     edx, 1
__text:0000000100005BD4                 mov     [rbp+var_1A0], edx
__text:0000000100005BDA                 cmp     edx, 8
__text:0000000100005BE0                 jnz     loc_100005C12
__text:0000000100005BE6                 mov     rax, [rbp+var_1A8]
__text:0000000100005BED                 add     rax, 8
__text:0000000100005BF3                 mov     [rbp+var_1A8], rax
__text:0000000100005BFA                 cmp     rax, [rbp+var_188]
__text:0000000100005C01                 setz    cl
__text:0000000100005C04                 and     cl, 1
__text:0000000100005C07                 mov     [rbp+var_171], cl
__text:0000000100005C0D                 jmp     loc_100005C45
__text:0000000100005C12 ; ---------------------------------------------------------------------------
__text:0000000100005C12
__text:0000000100005C12 loc_100005C12:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+710↑j
__text:0000000100005C12                 jmp     $+5
__text:0000000100005C17 ; ---------------------------------------------------------------------------
__text:0000000100005C17
__text:0000000100005C17 loc_100005C17:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+4DF↑j
__text:0000000100005C17                                         ; std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &):loc_100005C12↑j
__text:0000000100005C17                 mov     rax, [rbp+var_1A8]
__text:0000000100005C1E                 mov     [rbp+var_198], rax
__text:0000000100005C25                 mov     rax, [rbp+var_1A8]
__text:0000000100005C2C                 add     rax, 8
__text:0000000100005C32                 mov     [rbp+var_1A8], rax
__text:0000000100005C39                 jmp     loc_1000058DE
__text:0000000100005C3E ; ---------------------------------------------------------------------------
__text:0000000100005C3E
__text:0000000100005C3E loc_100005C3E:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+41C↑j
__text:0000000100005C3E                 mov     [rbp+var_171], 1
__text:0000000100005C45
__text:0000000100005C45 loc_100005C45:                          ; CODE XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+6E↑j
__text:0000000100005C45                                         ; std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+253↑j ...
__text:0000000100005C45                 mov     al, [rbp+var_171]
__text:0000000100005C4B                 and     al, 1
__text:0000000100005C4D                 movzx   eax, al
__text:0000000100005C50                 add     rsp, 210h
__text:0000000100005C57                 pop     rbp
__text:0000000100005C58                 retn
__text:0000000100005C58 __ZNSt3__127__insertion_sort_incompleteIRNS_6__lessINS_4pairIiiEES3_EEPS3_EEbT0_S7_T_ endp
__text:0000000100005C58
__text:0000000100005C58 ; ---------------------------------------------------------------------------
__text:0000000100005C59                 align 4
__text:0000000100005C5C jpt_100005535   dd offset loc_100005537 - 100005C5Ch
__text:0000000100005C5C                                         ; DATA XREF: std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+50↑o
__text:0000000100005C5C                                         ; std::__1::__insertion_sort_incomplete<std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &,std::__1::pair<int,int>*>(std::__1::pair<int,int>*,std::__1::pair<int,int>*,std::__1::__less<std::__1::pair<int,int>,std::__1::pair<int,int>> &)+5E↑r
__text:0000000100005C5C                 dd offset loc_100005537 - 100005C5Ch ; jump table for switch statement
__text:0000000100005C5C                 dd offset loc_100005543 - 100005C5Ch
__text:0000000100005C5C                 dd offset loc_100005728 - 100005C5Ch
__text:0000000100005C5C                 dd offset loc_100005783 - 100005C5Ch
__text:0000000100005C5C                 dd offset loc_1000057EC - 100005C5Ch
__text:0000000100005C5C __text          ends
__text:0000000100005C5C