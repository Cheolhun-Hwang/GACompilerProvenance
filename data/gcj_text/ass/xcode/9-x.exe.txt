__text:0000000100000DC0 ; =============== S U B R O U T I N E =======================================
__text:0000000100000DC0
__text:0000000100000DC0 ; Attributes: bp-based frame
__text:0000000100000DC0
__text:0000000100000DC0 ; add(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>)
__text:0000000100000DC0                 public __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_
__text:0000000100000DC0 __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ proc near
__text:0000000100000DC0                                         ; CODE XREF: _main+159↓p
__text:0000000100000DC0                                         ; _main+2C1↓p ...
__text:0000000100000DC0
__text:0000000100000DC0 var_118         = qword ptr -118h
__text:0000000100000DC0 var_110         = qword ptr -110h
__text:0000000100000DC0 var_104         = dword ptr -104h
__text:0000000100000DC0 var_100         = qword ptr -100h
__text:0000000100000DC0 var_F8          = qword ptr -0F8h
__text:0000000100000DC0 var_F0          = qword ptr -0F0h
__text:0000000100000DC0 var_E4          = dword ptr -0E4h
__text:0000000100000DC0 var_E0          = qword ptr -0E0h
__text:0000000100000DC0 var_D8          = qword ptr -0D8h
__text:0000000100000DC0 var_D0          = qword ptr -0D0h
__text:0000000100000DC0 var_C8          = qword ptr -0C8h
__text:0000000100000DC0 var_C0          = qword ptr -0C0h
__text:0000000100000DC0 var_B8          = qword ptr -0B8h
__text:0000000100000DC0 var_B0          = qword ptr -0B0h
__text:0000000100000DC0 var_A8          = qword ptr -0A8h
__text:0000000100000DC0 var_A0          = qword ptr -0A0h
__text:0000000100000DC0 var_98          = qword ptr -98h
__text:0000000100000DC0 var_90          = qword ptr -90h
__text:0000000100000DC0 var_88          = qword ptr -88h
__text:0000000100000DC0 var_80          = qword ptr -80h
__text:0000000100000DC0 var_78          = qword ptr -78h
__text:0000000100000DC0 var_70          = qword ptr -70h
__text:0000000100000DC0 var_68          = qword ptr -68h
__text:0000000100000DC0 var_60          = qword ptr -60h
__text:0000000100000DC0 var_58          = qword ptr -58h
__text:0000000100000DC0 var_50          = qword ptr -50h
__text:0000000100000DC0 var_48          = qword ptr -48h
__text:0000000100000DC0 var_40          = qword ptr -40h
__text:0000000100000DC0 var_38          = qword ptr -38h
__text:0000000100000DC0 var_30          = qword ptr -30h
__text:0000000100000DC0 var_28          = qword ptr -28h
__text:0000000100000DC0 var_20          = qword ptr -20h
__text:0000000100000DC0 var_18          = qword ptr -18h
__text:0000000100000DC0 var_10          = qword ptr -10h
__text:0000000100000DC0 var_8           = qword ptr -8
__text:0000000100000DC0
__text:0000000100000DC0                 push    rbp
__text:0000000100000DC1                 mov     rbp, rsp
__text:0000000100000DC4                 sub     rsp, 120h
__text:0000000100000DCB                 mov     [rbp+var_D8], rsi
__text:0000000100000DD2                 mov     [rbp+var_E0], 0
__text:0000000100000DDD                 mov     rsi, [rbp+var_D8]
__text:0000000100000DE4                 mov     [rbp+var_D0], rsi
__text:0000000100000DEB                 mov     rsi, [rbp+var_D0]
__text:0000000100000DF2                 mov     [rbp+var_C8], rsi
__text:0000000100000DF9                 mov     rax, [rbp+var_C8]
__text:0000000100000E00                 mov     [rbp+var_C0], rax
__text:0000000100000E07                 mov     rax, [rbp+var_C0]
__text:0000000100000E0E                 mov     [rbp+var_B8], rax
__text:0000000100000E15                 mov     rax, [rbp+var_B8]
__text:0000000100000E1C                 movzx   ecx, byte ptr [rax]
__text:0000000100000E1F                 and     ecx, 1
__text:0000000100000E25                 cmp     ecx, 0
__text:0000000100000E2B                 mov     [rbp+var_F0], rdi
__text:0000000100000E32                 mov     [rbp+var_F8], rsi
__text:0000000100000E39                 jz      loc_100000E74
__text:0000000100000E3F                 mov     rax, [rbp+var_F8]
__text:0000000100000E46                 mov     [rbp+var_88], rax
__text:0000000100000E4D                 mov     rcx, [rbp+var_88]
__text:0000000100000E54                 mov     [rbp+var_80], rcx
__text:0000000100000E58                 mov     rcx, [rbp+var_80]
__text:0000000100000E5C                 mov     [rbp+var_78], rcx
__text:0000000100000E60                 mov     rcx, [rbp+var_78]
__text:0000000100000E64                 mov     rcx, [rcx+10h]
__text:0000000100000E68                 mov     [rbp+var_100], rcx
__text:0000000100000E6F                 jmp     loc_100000ECF
__text:0000000100000E74 ; ---------------------------------------------------------------------------
__text:0000000100000E74
__text:0000000100000E74 loc_100000E74:                          ; CODE XREF: add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)+79↑j
__text:0000000100000E74                 mov     rax, [rbp+var_F8]
__text:0000000100000E7B                 mov     [rbp+var_B0], rax
__text:0000000100000E82                 mov     rcx, [rbp+var_B0]
__text:0000000100000E89                 mov     [rbp+var_A8], rcx
__text:0000000100000E90                 mov     rcx, [rbp+var_A8]
__text:0000000100000E97                 mov     [rbp+var_A0], rcx
__text:0000000100000E9E                 mov     rcx, [rbp+var_A0]
__text:0000000100000EA5                 add     rcx, 1
__text:0000000100000EAC                 mov     [rbp+var_98], rcx
__text:0000000100000EB3                 mov     rcx, [rbp+var_98]
__text:0000000100000EBA                 mov     [rbp+var_90], rcx
__text:0000000100000EC1                 mov     rcx, [rbp+var_90]
__text:0000000100000EC8                 mov     [rbp+var_100], rcx
__text:0000000100000ECF
__text:0000000100000ECF loc_100000ECF:                          ; CODE XREF: add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)+AF↑j
__text:0000000100000ECF                 mov     rax, [rbp+var_100]
__text:0000000100000ED6                 mov     rcx, [rbp+var_E0]
__text:0000000100000EDD                 movsx   edx, byte ptr [rax+rcx]
__text:0000000100000EE1                 add     edx, 1Ah
__text:0000000100000EE7                 sub     edx, 30h ; '0'
__text:0000000100000EED                 mov     rax, [rbp+var_F0]
__text:0000000100000EF4                 mov     [rbp+var_68], rax
__text:0000000100000EF8                 mov     [rbp+var_70], 0
__text:0000000100000F00                 mov     rcx, [rbp+var_68]
__text:0000000100000F04                 mov     [rbp+var_60], rcx
__text:0000000100000F08                 mov     rcx, [rbp+var_60]
__text:0000000100000F0C                 mov     [rbp+var_58], rcx
__text:0000000100000F10                 mov     rsi, [rbp+var_58]
__text:0000000100000F14                 mov     [rbp+var_50], rsi
__text:0000000100000F18                 mov     rsi, [rbp+var_50]
__text:0000000100000F1C                 mov     [rbp+var_48], rsi
__text:0000000100000F20                 mov     rsi, [rbp+var_48]
__text:0000000100000F24                 movzx   edi, byte ptr [rsi]
__text:0000000100000F27                 and     edi, 1
__text:0000000100000F2D                 cmp     edi, 0
__text:0000000100000F33                 mov     [rbp+var_104], edx
__text:0000000100000F39                 mov     [rbp+var_110], rcx
__text:0000000100000F40                 jz      loc_100000F75
__text:0000000100000F46                 mov     rax, [rbp+var_110]
__text:0000000100000F4D                 mov     [rbp+var_18], rax
__text:0000000100000F51                 mov     rcx, [rbp+var_18]
__text:0000000100000F55                 mov     [rbp+var_10], rcx
__text:0000000100000F59                 mov     rcx, [rbp+var_10]
__text:0000000100000F5D                 mov     [rbp+var_8], rcx
__text:0000000100000F61                 mov     rcx, [rbp+var_8]
__text:0000000100000F65                 mov     rcx, [rcx+10h]
__text:0000000100000F69                 mov     [rbp+var_118], rcx
__text:0000000100000F70                 jmp     loc_100000FB2
__text:0000000100000F75 ; ---------------------------------------------------------------------------
__text:0000000100000F75
__text:0000000100000F75 loc_100000F75:                          ; CODE XREF: add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)+180↑j
__text:0000000100000F75                 mov     rax, [rbp+var_110]
__text:0000000100000F7C                 mov     [rbp+var_40], rax
__text:0000000100000F80                 mov     rcx, [rbp+var_40]
__text:0000000100000F84                 mov     [rbp+var_38], rcx
__text:0000000100000F88                 mov     rcx, [rbp+var_38]
__text:0000000100000F8C                 mov     [rbp+var_30], rcx
__text:0000000100000F90                 mov     rcx, [rbp+var_30]
__text:0000000100000F94                 add     rcx, 1
__text:0000000100000F9B                 mov     [rbp+var_28], rcx
__text:0000000100000F9F                 mov     rcx, [rbp+var_28]
__text:0000000100000FA3                 mov     [rbp+var_20], rcx
__text:0000000100000FA7                 mov     rcx, [rbp+var_20]
__text:0000000100000FAB                 mov     [rbp+var_118], rcx
__text:0000000100000FB2
__text:0000000100000FB2 loc_100000FB2:                          ; CODE XREF: add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)+1B0↑j
__text:0000000100000FB2                 mov     rax, [rbp+var_118]
__text:0000000100000FB9                 lea     rdi, _ma
__text:0000000100000FC0                 lea     rsi, [rbp+var_E4]
__text:0000000100000FC7                 mov     rcx, [rbp+var_70]
__text:0000000100000FCB                 movsx   edx, byte ptr [rax+rcx]
__text:0000000100000FCF                 sub     edx, 61h ; 'a'
__text:0000000100000FD5                 mov     [rbp+var_E4], edx
__text:0000000100000FDB                 call    j___ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_ ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)
__text:0000000100000FE0                 mov     edx, [rbp+var_104]
__text:0000000100000FE6                 mov     [rax], edx
__text:0000000100000FE8                 add     rsp, 120h
__text:0000000100000FEF                 pop     rbp
__text:0000000100000FF0                 retn
__text:0000000100000FF0 __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ endp
__text:0000000100000FF0
__text:0000000100000FF0 ; ---------------------------------------------------------------------------
__text:0000000100000FF1                 align 20h
__text:0000000100001000
__text:0000000100001000 ; =============== S U B R O U T I N E =======================================
__text:0000000100001000
__text:0000000100001000 ; Attributes: bp-based frame
__text:0000000100001000
__text:0000000100001000 ; __int64 read(void)
__text:0000000100001000                 public __Z4readv
__text:0000000100001000 __Z4readv       proc near               ; CODE XREF: _main+BD5↓p
__text:0000000100001000
__text:0000000100001000 var_28          = qword ptr -28h
__text:0000000100001000 var_1C          = dword ptr -1Ch
__text:0000000100001000 var_18          = qword ptr -18h
__text:0000000100001000 var_10          = qword ptr -10h
__text:0000000100001000 var_8           = qword ptr -8
__text:0000000100001000
__text:0000000100001000                 push    rbp
__text:0000000100001001                 mov     rbp, rsp
__text:0000000100001004                 sub     rsp, 30h
__text:0000000100001008                 mov     rdi, cs:__ZNSt3__13cinE_ptr
__text:000000010000100F                 lea     rsi, _k
__text:0000000100001016                 call    __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi ; std::__1::basic_istream<char,std::__1::char_traits<char>>::operator>>(int &)
__text:000000010000101B                 lea     rdi, aS         ; "%s"
__text:0000000100001022                 lea     rsi, _buf
__text:0000000100001029                 mov     [rbp+var_18], rax
__text:000000010000102D                 mov     al, 0
__text:000000010000102F                 call    _scanf
__text:0000000100001034                 lea     rsi, _buf
__text:000000010000103B                 lea     rdi, _s
__text:0000000100001042                 mov     [rbp+var_8], rdi
__text:0000000100001046                 mov     [rbp+var_10], rsi
__text:000000010000104A                 mov     rdi, [rbp+var_8]
__text:000000010000104E                 mov     rsi, [rbp+var_10]
__text:0000000100001052                 mov     [rbp+var_1C], eax
__text:0000000100001055                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6assignEPKc ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::assign(char const*)
__text:000000010000105A                 mov     [rbp+var_28], rax
__text:000000010000105E                 add     rsp, 30h
__text:0000000100001062                 pop     rbp
__text:0000000100001063                 retn
__text:0000000100001063 __Z4readv       endp
__text:0000000100001063
__text:0000000100001063 ; ---------------------------------------------------------------------------
__text:0000000100001064                 align 10h
__text:0000000100001070
__text:0000000100001070 ; =============== S U B R O U T I N E =======================================
__text:0000000100001070
__text:0000000100001070 ; Attributes: bp-based frame
__text:0000000100001070
__text:0000000100001070 ; __int64 __fastcall add(int, int)
__text:0000000100001070                 public __Z3addii
__text:0000000100001070 __Z3addii       proc near               ; CODE XREF: solve(void)+3D6↓p
__text:0000000100001070                                         ; solve(void)+425↓p ...
__text:0000000100001070
__text:0000000100001070 var_120         = byte ptr -120h
__text:0000000100001070 var_110         = byte ptr -110h
__text:0000000100001070 var_108         = byte ptr -108h
__text:0000000100001070 var_100         = dword ptr -100h
__text:0000000100001070 var_FC          = dword ptr -0FCh
__text:0000000100001070 var_F8          = dword ptr -0F8h
__text:0000000100001070 var_F4          = dword ptr -0F4h
__text:0000000100001070 var_F0          = qword ptr -0F0h
__text:0000000100001070 var_E8          = qword ptr -0E8h
__text:0000000100001070 var_E0          = qword ptr -0E0h
__text:0000000100001070 var_D8          = qword ptr -0D8h
__text:0000000100001070 var_D0          = qword ptr -0D0h
__text:0000000100001070 var_C8          = qword ptr -0C8h
__text:0000000100001070 var_C0          = byte ptr -0C0h
__text:0000000100001070 var_B0          = qword ptr -0B0h
__text:0000000100001070 var_A8          = qword ptr -0A8h
__text:0000000100001070 var_A0          = qword ptr -0A0h
__text:0000000100001070 var_98          = qword ptr -98h
__text:0000000100001070 var_90          = qword ptr -90h
__text:0000000100001070 var_88          = qword ptr -88h
__text:0000000100001070 var_80          = qword ptr -80h
__text:0000000100001070 var_78          = qword ptr -78h
__text:0000000100001070 var_70          = qword ptr -70h
__text:0000000100001070 var_68          = qword ptr -68h
__text:0000000100001070 var_60          = qword ptr -60h
__text:0000000100001070 var_58          = qword ptr -58h
__text:0000000100001070 var_50          = qword ptr -50h
__text:0000000100001070 var_48          = dword ptr -48h
__text:0000000100001070 var_44          = dword ptr -44h
__text:0000000100001070 var_40          = qword ptr -40h
__text:0000000100001070 var_38          = qword ptr -38h
__text:0000000100001070 var_30          = qword ptr -30h
__text:0000000100001070 var_28          = qword ptr -28h
__text:0000000100001070 var_20          = qword ptr -20h
__text:0000000100001070 var_18          = qword ptr -18h
__text:0000000100001070
__text:0000000100001070                 push    rbp
__text:0000000100001071                 mov     rbp, rsp
__text:0000000100001074                 push    r14
__text:0000000100001076                 push    rbx
__text:0000000100001077                 sub     rsp, 110h
__text:000000010000107E                 lea     rax, [rbp+var_108]
__text:0000000100001085                 lea     rcx, _g
__text:000000010000108C                 lea     rdx, [rbp+var_F8]
__text:0000000100001093                 lea     r8, [rbp+var_F4]
__text:000000010000109A                 mov     [rbp+var_FC], edi
__text:00000001000010A0                 mov     [rbp+var_100], esi
__text:00000001000010A6                 mov     esi, [rbp+var_FC]
__text:00000001000010AC                 mov     edi, [rbp+var_100]
__text:00000001000010B2                 mov     [rbp+var_F4], esi
__text:00000001000010B8                 mov     [rbp+var_F8], edi
__text:00000001000010BE                 mov     [rbp+var_E0], rax
__text:00000001000010C5                 mov     [rbp+var_E8], r8
__text:00000001000010CC                 mov     [rbp+var_F0], rdx
__text:00000001000010D3                 mov     rdx, [rbp+var_E0]
__text:00000001000010DA                 mov     r8, [rbp+var_E8]
__text:00000001000010E1                 mov     r9, [rbp+var_F0]
__text:00000001000010E8                 mov     [rbp+var_C8], rdx
__text:00000001000010EF                 mov     [rbp+var_D0], r8
__text:00000001000010F6                 mov     [rbp+var_D8], r9
__text:00000001000010FD                 mov     rdx, [rbp+var_C8]
__text:0000000100001104                 mov     r8, [rbp+var_D0]
__text:000000010000110B                 mov     esi, [r8]
__text:000000010000110E                 mov     [rdx], esi
__text:0000000100001110                 mov     r8, [rbp+var_D8]
__text:0000000100001117                 mov     esi, [r8]
__text:000000010000111A                 mov     [rdx+4], esi
__text:000000010000111D                 mov     [rbp+var_50], rcx
__text:0000000100001121                 mov     [rbp+var_58], rax
__text:0000000100001125                 mov     rdi, [rbp+var_50]
__text:0000000100001129                 mov     rsi, [rbp+var_58]
__text:000000010000112D                 call    j___ZNKSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__count_uniqueIS2_EEmRKT_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)
__text:0000000100001132                 cmp     rax, 0
__text:0000000100001138                 jnz     loc_10000128E
__text:000000010000113E                 lea     rdi, [rbp+var_C0]
__text:0000000100001145                 lea     rax, [rbp+var_110]
__text:000000010000114C                 lea     rcx, _g
__text:0000000100001153                 lea     rdx, [rbp+var_48]
__text:0000000100001157                 lea     rsi, [rbp+var_44]
__text:000000010000115B                 lea     r8, _in
__text:0000000100001162                 lea     r9, _out
__text:0000000100001169                 movsxd  r10, [rbp+var_FC]
__text:0000000100001170                 mov     r11d, [r9+r10*4]
__text:0000000100001174                 add     r11d, 1
__text:000000010000117B                 mov     [r9+r10*4], r11d
__text:000000010000117F                 movsxd  r9, [rbp+var_100]
__text:0000000100001186                 mov     r11d, [r8+r9*4]
__text:000000010000118A                 add     r11d, 1
__text:0000000100001191                 mov     [r8+r9*4], r11d
__text:0000000100001195                 mov     r11d, [rbp+var_FC]
__text:000000010000119C                 mov     ebx, [rbp+var_100]
__text:00000001000011A2                 mov     [rbp+var_44], r11d
__text:00000001000011A6                 mov     [rbp+var_48], ebx
__text:00000001000011A9                 mov     [rbp+var_30], rax
__text:00000001000011AD                 mov     [rbp+var_38], rsi
__text:00000001000011B1                 mov     [rbp+var_40], rdx
__text:00000001000011B5                 mov     rdx, [rbp+var_30]
__text:00000001000011B9                 mov     rsi, [rbp+var_38]
__text:00000001000011BD                 mov     r8, [rbp+var_40]
__text:00000001000011C1                 mov     [rbp+var_18], rdx
__text:00000001000011C5                 mov     [rbp+var_20], rsi
__text:00000001000011C9                 mov     [rbp+var_28], r8
__text:00000001000011CD                 mov     rdx, [rbp+var_18]
__text:00000001000011D1                 mov     rsi, [rbp+var_20]
__text:00000001000011D5                 mov     r11d, [rsi]
__text:00000001000011D8                 mov     [rdx], r11d
__text:00000001000011DB                 mov     rsi, [rbp+var_28]
__text:00000001000011DF                 mov     r11d, [rsi]
__text:00000001000011E2                 mov     [rdx+4], r11d
__text:00000001000011E6                 mov     [rbp+var_A8], rcx
__text:00000001000011ED                 mov     [rbp+var_B0], rax
__text:00000001000011F4                 mov     rsi, [rbp+var_A8]
__text:00000001000011FB                 mov     rdx, [rbp+var_B0]
__text:0000000100001202                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)
__text:0000000100001207                 lea     rax, [rbp+var_C0]
__text:000000010000120E                 lea     rcx, [rbp+var_120]
__text:0000000100001215                 mov     [rbp+var_98], rcx
__text:000000010000121C                 mov     [rbp+var_A0], rax
__text:0000000100001223                 mov     rax, [rbp+var_98]
__text:000000010000122A                 mov     rcx, [rbp+var_A0]
__text:0000000100001231                 mov     [rbp+var_80], rax
__text:0000000100001235                 mov     [rbp+var_88], rcx
__text:000000010000123C                 mov     rax, [rbp+var_80]
__text:0000000100001240                 mov     rcx, [rbp+var_88]
__text:0000000100001247                 mov     rcx, [rcx]
__text:000000010000124A                 mov     [rbp+var_90], rcx
__text:0000000100001251                 mov     rcx, [rbp+var_90]
__text:0000000100001258                 mov     [rbp+var_70], rax
__text:000000010000125C                 mov     [rbp+var_78], rcx
__text:0000000100001260                 mov     rcx, [rbp+var_70]
__text:0000000100001264                 mov     rdx, [rbp+var_78]
__text:0000000100001268                 mov     [rbp+var_60], rcx
__text:000000010000126C                 mov     [rbp+var_68], rdx
__text:0000000100001270                 mov     rcx, [rbp+var_60]
__text:0000000100001274                 mov     rdx, [rbp+var_68]
__text:0000000100001278                 mov     [rcx], rdx
__text:000000010000127B                 mov     rcx, [rbp+var_88]
__text:0000000100001282                 mov     r14b, [rcx+8]
__text:0000000100001286                 and     r14b, 1
__text:000000010000128A                 mov     [rax+8], r14b
__text:000000010000128E
__text:000000010000128E loc_10000128E:                          ; CODE XREF: add(int,int)+C8↑j
__text:000000010000128E                 add     rsp, 110h
__text:0000000100001295                 pop     rbx
__text:0000000100001296                 pop     r14
__text:0000000100001298                 pop     rbp
__text:0000000100001299                 retn
__text:0000000100001299 __Z3addii       endp
__text:0000000100001299
__text:0000000100001299 ; ---------------------------------------------------------------------------
__text:000000010000129A                 align 20h
__text:00000001000012A0
__text:00000001000012A0 ; =============== S U B R O U T I N E =======================================
__text:00000001000012A0
__text:00000001000012A0 ; Attributes: bp-based frame
__text:00000001000012A0
__text:00000001000012A0 ; __int64 solve(void)
__text:00000001000012A0                 public __Z5solvev
__text:00000001000012A0 __Z5solvev      proc near               ; CODE XREF: _main+BFC↓p
__text:00000001000012A0
__text:00000001000012A0 var_2D0         = qword ptr -2D0h
__text:00000001000012A0 var_2C8         = qword ptr -2C8h
__text:00000001000012A0 var_2C0         = qword ptr -2C0h
__text:00000001000012A0 var_2B4         = dword ptr -2B4h
__text:00000001000012A0 var_2B0         = dword ptr -2B0h
__text:00000001000012A0 var_2AC         = dword ptr -2ACh
__text:00000001000012A0 var_2A8         = qword ptr -2A8h
__text:00000001000012A0 var_2A0         = qword ptr -2A0h
__text:00000001000012A0 var_298         = qword ptr -298h
__text:00000001000012A0 var_290         = qword ptr -290h
__text:00000001000012A0 var_288         = qword ptr -288h
__text:00000001000012A0 var_280         = qword ptr -280h
__text:00000001000012A0 var_278         = dword ptr -278h
__text:00000001000012A0 var_274         = dword ptr -274h
__text:00000001000012A0 var_270         = qword ptr -270h
__text:00000001000012A0 var_268         = qword ptr -268h
__text:00000001000012A0 var_25C         = dword ptr -25Ch
__text:00000001000012A0 var_258         = dword ptr -258h
__text:00000001000012A0 var_254         = dword ptr -254h
__text:00000001000012A0 var_250         = dword ptr -250h
__text:00000001000012A0 var_24C         = dword ptr -24Ch
__text:00000001000012A0 var_248         = dword ptr -248h
__text:00000001000012A0 var_244         = dword ptr -244h
__text:00000001000012A0 var_240         = dword ptr -240h
__text:00000001000012A0 var_23C         = dword ptr -23Ch
__text:00000001000012A0 var_238         = qword ptr -238h
__text:00000001000012A0 var_230         = qword ptr -230h
__text:00000001000012A0 var_228         = qword ptr -228h
__text:00000001000012A0 var_220         = qword ptr -220h
__text:00000001000012A0 var_218         = qword ptr -218h
__text:00000001000012A0 var_210         = qword ptr -210h
__text:00000001000012A0 var_208         = qword ptr -208h
__text:00000001000012A0 var_200         = qword ptr -200h
__text:00000001000012A0 var_1F8         = qword ptr -1F8h
__text:00000001000012A0 var_1F0         = qword ptr -1F0h
__text:00000001000012A0 var_1E8         = qword ptr -1E8h
__text:00000001000012A0 var_1E0         = qword ptr -1E0h
__text:00000001000012A0 var_1D8         = qword ptr -1D8h
__text:00000001000012A0 var_1D0         = qword ptr -1D0h
__text:00000001000012A0 var_1C8         = qword ptr -1C8h
__text:00000001000012A0 var_1C0         = qword ptr -1C0h
__text:00000001000012A0 var_1B8         = qword ptr -1B8h
__text:00000001000012A0 var_1B0         = qword ptr -1B0h
__text:00000001000012A0 var_1A8         = qword ptr -1A8h
__text:00000001000012A0 var_1A0         = qword ptr -1A0h
__text:00000001000012A0 var_198         = qword ptr -198h
__text:00000001000012A0 var_190         = qword ptr -190h
__text:00000001000012A0 var_188         = qword ptr -188h
__text:00000001000012A0 var_180         = qword ptr -180h
__text:00000001000012A0 var_178         = qword ptr -178h
__text:00000001000012A0 var_170         = qword ptr -170h
__text:00000001000012A0 var_168         = qword ptr -168h
__text:00000001000012A0 var_158         = qword ptr -158h
__text:00000001000012A0 var_150         = qword ptr -150h
__text:00000001000012A0 var_148         = byte ptr -148h
__text:00000001000012A0 var_140         = qword ptr -140h
__text:00000001000012A0 var_138         = qword ptr -138h
__text:00000001000012A0 var_130         = qword ptr -130h
__text:00000001000012A0 var_128         = qword ptr -128h
__text:00000001000012A0 var_120         = qword ptr -120h
__text:00000001000012A0 var_110         = qword ptr -110h
__text:00000001000012A0 var_108         = qword ptr -108h
__text:00000001000012A0 var_100         = byte ptr -100h
__text:00000001000012A0 var_F8          = qword ptr -0F8h
__text:00000001000012A0 var_F0          = qword ptr -0F0h
__text:00000001000012A0 var_E8          = qword ptr -0E8h
__text:00000001000012A0 var_E0          = qword ptr -0E0h
__text:00000001000012A0 var_D8          = qword ptr -0D8h
__text:00000001000012A0 var_D0          = qword ptr -0D0h
__text:00000001000012A0 var_C8          = qword ptr -0C8h
__text:00000001000012A0 var_C0          = qword ptr -0C0h
__text:00000001000012A0 var_B8          = qword ptr -0B8h
__text:00000001000012A0 var_B0          = qword ptr -0B0h
__text:00000001000012A0 var_A8          = qword ptr -0A8h
__text:00000001000012A0 var_A0          = qword ptr -0A0h
__text:00000001000012A0 var_98          = qword ptr -98h
__text:00000001000012A0 var_90          = qword ptr -90h
__text:00000001000012A0 var_88          = qword ptr -88h
__text:00000001000012A0 var_80          = qword ptr -80h
__text:00000001000012A0 var_78          = qword ptr -78h
__text:00000001000012A0 var_70          = qword ptr -70h
__text:00000001000012A0 var_68          = qword ptr -68h
__text:00000001000012A0 var_60          = qword ptr -60h
__text:00000001000012A0 var_58          = qword ptr -58h
__text:00000001000012A0 var_50          = qword ptr -50h
__text:00000001000012A0 var_48          = qword ptr -48h
__text:00000001000012A0 var_40          = qword ptr -40h
__text:00000001000012A0 var_38          = qword ptr -38h
__text:00000001000012A0 var_30          = qword ptr -30h
__text:00000001000012A0 var_28          = qword ptr -28h
__text:00000001000012A0 var_20          = qword ptr -20h
__text:00000001000012A0 var_18          = qword ptr -18h
__text:00000001000012A0 var_10          = qword ptr -10h
__text:00000001000012A0 var_8           = qword ptr -8
__text:00000001000012A0
__text:00000001000012A0                 push    rbp
__text:00000001000012A1                 mov     rbp, rsp
__text:00000001000012A4                 sub     rsp, 2D0h
__text:00000001000012AB                 lea     rax, _g
__text:00000001000012B2                 mov     [rbp+var_238], rax
__text:00000001000012B9                 mov     rdi, [rbp+var_238]
__text:00000001000012C0                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5clearEv ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::clear(void)
__text:00000001000012C5                 lea     rax, _out
__text:00000001000012CC                 mov     ecx, 0
__text:00000001000012D1                 mov     rdi, 1B8h
__text:00000001000012DB                 lea     rdx, _in
__text:00000001000012E2                 mov     [rbp+var_268], rdi
__text:00000001000012E9                 mov     rdi, rdx        ; void *
__text:00000001000012EC                 mov     esi, ecx        ; int
__text:00000001000012EE                 mov     rdx, [rbp+var_268] ; size_t
__text:00000001000012F5                 mov     [rbp+var_270], rax
__text:00000001000012FC                 mov     [rbp+var_274], ecx
__text:0000000100001302                 call    _memset
__text:0000000100001307                 mov     rdi, [rbp+var_270] ; void *
__text:000000010000130E                 mov     esi, [rbp+var_274] ; int
__text:0000000100001314                 mov     rdx, [rbp+var_268] ; size_t
__text:000000010000131B                 call    _memset
__text:0000000100001320                 mov     [rbp+var_23C], 0
__text:000000010000132A
__text:000000010000132A loc_10000132A:                          ; CODE XREF: solve(void)+534↓j
__text:000000010000132A                 lea     rax, _s
__text:0000000100001331                 mov     ecx, [rbp+var_23C]
__text:0000000100001337                 mov     [rbp+var_230], rax
__text:000000010000133E                 mov     rax, [rbp+var_230]
__text:0000000100001345                 mov     [rbp+var_228], rax
__text:000000010000134C                 mov     rdx, [rbp+var_228]
__text:0000000100001353                 mov     [rbp+var_220], rdx
__text:000000010000135A                 mov     rdx, [rbp+var_220]
__text:0000000100001361                 mov     [rbp+var_218], rdx
__text:0000000100001368                 mov     rdx, [rbp+var_218]
__text:000000010000136F                 movzx   esi, byte ptr [rdx]
__text:0000000100001372                 and     esi, 1
__text:0000000100001378                 cmp     esi, 0
__text:000000010000137E                 mov     [rbp+var_278], ecx
__text:0000000100001384                 mov     [rbp+var_280], rax
__text:000000010000138B                 jz      loc_1000013D2
__text:0000000100001391                 mov     rax, [rbp+var_280]
__text:0000000100001398                 mov     [rbp+var_1F8], rax
__text:000000010000139F                 mov     rcx, [rbp+var_1F8]
__text:00000001000013A6                 mov     [rbp+var_1F0], rcx
__text:00000001000013AD                 mov     rcx, [rbp+var_1F0]
__text:00000001000013B4                 mov     [rbp+var_1E8], rcx
__text:00000001000013BB                 mov     rcx, [rbp+var_1E8]
__text:00000001000013C2                 mov     rcx, [rcx+8]
__text:00000001000013C6                 mov     [rbp+var_288], rcx
__text:00000001000013CD                 jmp     loc_100001413
__text:00000001000013D2 ; ---------------------------------------------------------------------------
__text:00000001000013D2
__text:00000001000013D2 loc_1000013D2:                          ; CODE XREF: solve(void)+EB↑j
__text:00000001000013D2                 mov     rax, [rbp+var_280]
__text:00000001000013D9                 mov     [rbp+var_210], rax
__text:00000001000013E0                 mov     rcx, [rbp+var_210]
__text:00000001000013E7                 mov     [rbp+var_208], rcx
__text:00000001000013EE                 mov     rcx, [rbp+var_208]
__text:00000001000013F5                 mov     [rbp+var_200], rcx
__text:00000001000013FC                 mov     rcx, [rbp+var_200]
__text:0000000100001403                 movzx   edx, byte ptr [rcx]
__text:0000000100001406                 sar     edx, 1
__text:0000000100001409                 movsxd  rcx, edx
__text:000000010000140C                 mov     [rbp+var_288], rcx
__text:0000000100001413
__text:0000000100001413 loc_100001413:                          ; CODE XREF: solve(void)+12D↑j
__text:0000000100001413                 mov     rax, [rbp+var_288]
__text:000000010000141A                 sub     rax, 1
__text:0000000100001420                 mov     ecx, eax
__text:0000000100001422                 mov     edx, [rbp+var_278]
__text:0000000100001428                 cmp     edx, ecx
__text:000000010000142A                 jge     loc_1000017D9
__text:0000000100001430                 lea     rax, _s
__text:0000000100001437                 movsxd  rcx, [rbp+var_23C]
__text:000000010000143E                 mov     [rbp+var_1C8], rax
__text:0000000100001445                 mov     [rbp+var_1D0], rcx
__text:000000010000144C                 mov     rax, [rbp+var_1C8]
__text:0000000100001453                 mov     [rbp+var_1C0], rax
__text:000000010000145A                 mov     rax, [rbp+var_1C0]
__text:0000000100001461                 mov     [rbp+var_1B8], rax
__text:0000000100001468                 mov     rcx, [rbp+var_1B8]
__text:000000010000146F                 mov     [rbp+var_1B0], rcx
__text:0000000100001476                 mov     rcx, [rbp+var_1B0]
__text:000000010000147D                 mov     [rbp+var_1A8], rcx
__text:0000000100001484                 mov     rcx, [rbp+var_1A8]
__text:000000010000148B                 movzx   edx, byte ptr [rcx]
__text:000000010000148E                 and     edx, 1
__text:0000000100001494                 cmp     edx, 0
__text:000000010000149A                 mov     [rbp+var_290], rax
__text:00000001000014A1                 jz      loc_1000014E8
__text:00000001000014A7                 mov     rax, [rbp+var_290]
__text:00000001000014AE                 mov     [rbp+var_178], rax
__text:00000001000014B5                 mov     rcx, [rbp+var_178]
__text:00000001000014BC                 mov     [rbp+var_170], rcx
__text:00000001000014C3                 mov     rcx, [rbp+var_170]
__text:00000001000014CA                 mov     [rbp+var_168], rcx
__text:00000001000014D1                 mov     rcx, [rbp+var_168]
__text:00000001000014D8                 mov     rcx, [rcx+10h]
__text:00000001000014DC                 mov     [rbp+var_298], rcx
__text:00000001000014E3                 jmp     loc_100001543
__text:00000001000014E8 ; ---------------------------------------------------------------------------
__text:00000001000014E8
__text:00000001000014E8 loc_1000014E8:                          ; CODE XREF: solve(void)+201↑j
__text:00000001000014E8                 mov     rax, [rbp+var_290]
__text:00000001000014EF                 mov     [rbp+var_1A0], rax
__text:00000001000014F6                 mov     rcx, [rbp+var_1A0]
__text:00000001000014FD                 mov     [rbp+var_198], rcx
__text:0000000100001504                 mov     rcx, [rbp+var_198]
__text:000000010000150B                 mov     [rbp+var_190], rcx
__text:0000000100001512                 mov     rcx, [rbp+var_190]
__text:0000000100001519                 add     rcx, 1
__text:0000000100001520                 mov     [rbp+var_188], rcx
__text:0000000100001527                 mov     rcx, [rbp+var_188]
__text:000000010000152E                 mov     [rbp+var_180], rcx
__text:0000000100001535                 mov     rcx, [rbp+var_180]
__text:000000010000153C                 mov     [rbp+var_298], rcx
__text:0000000100001543
__text:0000000100001543 loc_100001543:                          ; CODE XREF: solve(void)+243↑j
__text:0000000100001543                 mov     rax, [rbp+var_298]
__text:000000010000154A                 lea     rcx, _s
__text:0000000100001551                 mov     rdx, [rbp+var_1D0]
__text:0000000100001558                 movsx   esi, byte ptr [rax+rdx]
__text:000000010000155C                 sub     esi, 61h ; 'a'
__text:0000000100001562                 mov     [rbp+var_240], esi
__text:0000000100001568                 mov     esi, [rbp+var_23C]
__text:000000010000156E                 add     esi, 1
__text:0000000100001574                 movsxd  rax, esi
__text:0000000100001577                 mov     [rbp+var_A8], rcx
__text:000000010000157E                 mov     [rbp+var_B0], rax
__text:0000000100001585                 mov     rax, [rbp+var_A8]
__text:000000010000158C                 mov     [rbp+var_A0], rax
__text:0000000100001593                 mov     rax, [rbp+var_A0]
__text:000000010000159A                 mov     [rbp+var_98], rax
__text:00000001000015A1                 mov     rcx, [rbp+var_98]
__text:00000001000015A8                 mov     [rbp+var_90], rcx
__text:00000001000015AF                 mov     rcx, [rbp+var_90]
__text:00000001000015B6                 mov     [rbp+var_88], rcx
__text:00000001000015BD                 mov     rcx, [rbp+var_88]
__text:00000001000015C4                 movzx   esi, byte ptr [rcx]
__text:00000001000015C7                 and     esi, 1
__text:00000001000015CD                 cmp     esi, 0
__text:00000001000015D3                 mov     [rbp+var_2A0], rax
__text:00000001000015DA                 jz      loc_10000160F
__text:00000001000015E0                 mov     rax, [rbp+var_2A0]
__text:00000001000015E7                 mov     [rbp+var_58], rax
__text:00000001000015EB                 mov     rcx, [rbp+var_58]
__text:00000001000015EF                 mov     [rbp+var_50], rcx
__text:00000001000015F3                 mov     rcx, [rbp+var_50]
__text:00000001000015F7                 mov     [rbp+var_48], rcx
__text:00000001000015FB                 mov     rcx, [rbp+var_48]
__text:00000001000015FF                 mov     rcx, [rcx+10h]
__text:0000000100001603                 mov     [rbp+var_2A8], rcx
__text:000000010000160A                 jmp     loc_10000164C
__text:000000010000160F ; ---------------------------------------------------------------------------
__text:000000010000160F
__text:000000010000160F loc_10000160F:                          ; CODE XREF: solve(void)+33A↑j
__text:000000010000160F                 mov     rax, [rbp+var_2A0]
__text:0000000100001616                 mov     [rbp+var_80], rax
__text:000000010000161A                 mov     rcx, [rbp+var_80]
__text:000000010000161E                 mov     [rbp+var_78], rcx
__text:0000000100001622                 mov     rcx, [rbp+var_78]
__text:0000000100001626                 mov     [rbp+var_70], rcx
__text:000000010000162A                 mov     rcx, [rbp+var_70]
__text:000000010000162E                 add     rcx, 1
__text:0000000100001635                 mov     [rbp+var_68], rcx
__text:0000000100001639                 mov     rcx, [rbp+var_68]
__text:000000010000163D                 mov     [rbp+var_60], rcx
__text:0000000100001641                 mov     rcx, [rbp+var_60]
__text:0000000100001645                 mov     [rbp+var_2A8], rcx
__text:000000010000164C
__text:000000010000164C loc_10000164C:                          ; CODE XREF: solve(void)+36A↑j
__text:000000010000164C                 mov     rax, [rbp+var_2A8]
__text:0000000100001653                 mov     rcx, [rbp+var_B0]
__text:000000010000165A                 movsx   edx, byte ptr [rax+rcx]
__text:000000010000165E                 sub     edx, 61h ; 'a'
__text:0000000100001664                 mov     [rbp+var_244], edx
__text:000000010000166A                 mov     edi, [rbp+var_240] ; int
__text:0000000100001670                 mov     esi, [rbp+var_244] ; int
__text:0000000100001676                 call    __Z3addii       ; add(int,int)
__text:000000010000167B                 lea     rax, [rbp+var_240]
__text:0000000100001682                 lea     rcx, _ma
__text:0000000100001689                 mov     [rbp+var_38], rcx
__text:000000010000168D                 mov     [rbp+var_40], rax
__text:0000000100001691                 mov     rdi, [rbp+var_38]
__text:0000000100001695                 mov     rsi, [rbp+var_40]
__text:0000000100001699                 call    j___ZNKSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE14__count_uniqueIiEEmRKT_ ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)
__text:000000010000169E                 cmp     rax, 0
__text:00000001000016A4                 jz      loc_1000016CA
__text:00000001000016AA                 lea     rdi, _ma
__text:00000001000016B1                 lea     rsi, [rbp+var_240]
__text:00000001000016B8                 call    j___ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_ ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)
__text:00000001000016BD                 mov     edi, [rax]      ; int
__text:00000001000016BF                 mov     esi, [rbp+var_244] ; int
__text:00000001000016C5                 call    __Z3addii       ; add(int,int)
__text:00000001000016CA
__text:00000001000016CA loc_1000016CA:                          ; CODE XREF: solve(void)+404↑j
__text:00000001000016CA                 lea     rax, [rbp+var_244]
__text:00000001000016D1                 lea     rcx, _ma
__text:00000001000016D8                 mov     [rbp+var_28], rcx
__text:00000001000016DC                 mov     [rbp+var_30], rax
__text:00000001000016E0                 mov     rdi, [rbp+var_28]
__text:00000001000016E4                 mov     rsi, [rbp+var_30]
__text:00000001000016E8                 call    j___ZNKSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE14__count_uniqueIiEEmRKT_ ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)
__text:00000001000016ED                 cmp     rax, 0
__text:00000001000016F3                 jz      loc_100001725
__text:00000001000016F9                 lea     rdi, _ma
__text:0000000100001700                 lea     rsi, [rbp+var_244]
__text:0000000100001707                 mov     eax, [rbp+var_240]
__text:000000010000170D                 mov     [rbp+var_2AC], eax
__text:0000000100001713                 call    j___ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_ ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)
__text:0000000100001718                 mov     esi, [rax]      ; int
__text:000000010000171A                 mov     edi, [rbp+var_2AC] ; int
__text:0000000100001720                 call    __Z3addii       ; add(int,int)
__text:0000000100001725
__text:0000000100001725 loc_100001725:                          ; CODE XREF: solve(void)+453↑j
__text:0000000100001725                 lea     rax, [rbp+var_244]
__text:000000010000172C                 lea     rcx, _ma
__text:0000000100001733                 mov     [rbp+var_18], rcx
__text:0000000100001737                 mov     [rbp+var_20], rax
__text:000000010000173B                 mov     rdi, [rbp+var_18]
__text:000000010000173F                 mov     rsi, [rbp+var_20]
__text:0000000100001743                 call    j___ZNKSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE14__count_uniqueIiEEmRKT_ ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)
__text:0000000100001748                 cmp     rax, 0
__text:000000010000174E                 jz      loc_1000017BE
__text:0000000100001754                 lea     rax, [rbp+var_240]
__text:000000010000175B                 lea     rcx, _ma
__text:0000000100001762                 mov     [rbp+var_8], rcx
__text:0000000100001766                 mov     [rbp+var_10], rax
__text:000000010000176A                 mov     rdi, [rbp+var_8]
__text:000000010000176E                 mov     rsi, [rbp+var_10]
__text:0000000100001772                 call    j___ZNKSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE14__count_uniqueIiEEmRKT_ ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)
__text:0000000100001777                 cmp     rax, 0
__text:000000010000177D                 jz      loc_1000017BE
__text:0000000100001783                 lea     rdi, _ma
__text:000000010000178A                 lea     rsi, [rbp+var_240]
__text:0000000100001791                 call    j___ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_ ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)
__text:0000000100001796                 lea     rdi, _ma
__text:000000010000179D                 lea     rsi, [rbp+var_244]
__text:00000001000017A4                 mov     ecx, [rax]
__text:00000001000017A6                 mov     [rbp+var_2B0], ecx
__text:00000001000017AC                 call    j___ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_ ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)
__text:00000001000017B1                 mov     esi, [rax]      ; int
__text:00000001000017B3                 mov     edi, [rbp+var_2B0] ; int
__text:00000001000017B9                 call    __Z3addii       ; add(int,int)
__text:00000001000017BE
__text:00000001000017BE loc_1000017BE:                          ; CODE XREF: solve(void)+4AE↑j
__text:00000001000017BE                                         ; solve(void)+4DD↑j
__text:00000001000017BE                 jmp     $+5
__text:00000001000017C3 ; ---------------------------------------------------------------------------
__text:00000001000017C3
__text:00000001000017C3 loc_1000017C3:                          ; CODE XREF: solve(void):loc_1000017BE↑j
__text:00000001000017C3                 mov     eax, [rbp+var_23C]
__text:00000001000017C9                 add     eax, 1
__text:00000001000017CE                 mov     [rbp+var_23C], eax
__text:00000001000017D4                 jmp     loc_10000132A
__text:00000001000017D9 ; ---------------------------------------------------------------------------
__text:00000001000017D9
__text:00000001000017D9 loc_1000017D9:                          ; CODE XREF: solve(void)+18A↑j
__text:00000001000017D9                 mov     [rbp+var_248], 0
__text:00000001000017E3                 mov     [rbp+var_24C], 0
__text:00000001000017ED                 mov     [rbp+var_250], 0
__text:00000001000017F7
__text:00000001000017F7 loc_1000017F7:                          ; CODE XREF: solve(void)+60A↓j
__text:00000001000017F7                 cmp     [rbp+var_250], 6Eh ; 'n'
__text:0000000100001801                 jge     loc_1000018AF
__text:0000000100001807                 lea     rax, _out
__text:000000010000180E                 lea     rcx, _in
__text:0000000100001815                 movsxd  rdx, [rbp+var_250]
__text:000000010000181C                 mov     esi, [rcx+rdx*4]
__text:000000010000181F                 movsxd  rcx, [rbp+var_250]
__text:0000000100001826                 cmp     esi, [rax+rcx*4]
__text:0000000100001829                 jle     loc_100001864
__text:000000010000182F                 lea     rax, _out
__text:0000000100001836                 lea     rcx, _in
__text:000000010000183D                 movsxd  rdx, [rbp+var_250]
__text:0000000100001844                 mov     esi, [rcx+rdx*4]
__text:0000000100001847                 movsxd  rcx, [rbp+var_250]
__text:000000010000184E                 sub     esi, [rax+rcx*4]
__text:0000000100001851                 mov     edi, [rbp+var_248]
__text:0000000100001857                 add     edi, esi
__text:0000000100001859                 mov     [rbp+var_248], edi
__text:000000010000185F                 jmp     loc_100001894
__text:0000000100001864 ; ---------------------------------------------------------------------------
__text:0000000100001864
__text:0000000100001864 loc_100001864:                          ; CODE XREF: solve(void)+589↑j
__text:0000000100001864                 lea     rax, _in
__text:000000010000186B                 lea     rcx, _out
__text:0000000100001872                 movsxd  rdx, [rbp+var_250]
__text:0000000100001879                 mov     esi, [rcx+rdx*4]
__text:000000010000187C                 movsxd  rcx, [rbp+var_250]
__text:0000000100001883                 sub     esi, [rax+rcx*4]
__text:0000000100001886                 mov     edi, [rbp+var_24C]
__text:000000010000188C                 add     edi, esi
__text:000000010000188E                 mov     [rbp+var_24C], edi
__text:0000000100001894
__text:0000000100001894 loc_100001894:                          ; CODE XREF: solve(void)+5BF↑j
__text:0000000100001894                 jmp     $+5
__text:0000000100001899 ; ---------------------------------------------------------------------------
__text:0000000100001899
__text:0000000100001899 loc_100001899:                          ; CODE XREF: solve(void):loc_100001894↑j
__text:0000000100001899                 mov     eax, [rbp+var_250]
__text:000000010000189F                 add     eax, 1
__text:00000001000018A4                 mov     [rbp+var_250], eax
__text:00000001000018AA                 jmp     loc_1000017F7
__text:00000001000018AF ; ---------------------------------------------------------------------------
__text:00000001000018AF
__text:00000001000018AF loc_1000018AF:                          ; CODE XREF: solve(void)+561↑j
__text:00000001000018AF                 lea     rax, [rbp+var_100]
__text:00000001000018B6                 lea     rcx, [rbp+var_24C]
__text:00000001000018BD                 lea     rdx, [rbp+var_248]
__text:00000001000018C4                 lea     rsi, _g
__text:00000001000018CB                 mov     [rbp+var_D0], rsi
__text:00000001000018D2                 mov     rsi, [rbp+var_D0]
__text:00000001000018D9                 mov     [rbp+var_C8], rsi
__text:00000001000018E0                 mov     rsi, [rbp+var_C8]
__text:00000001000018E7                 add     rsi, 10h
__text:00000001000018EE                 mov     [rbp+var_C0], rsi
__text:00000001000018F5                 mov     rsi, [rbp+var_C0]
__text:00000001000018FC                 mov     [rbp+var_B8], rsi
__text:0000000100001903                 mov     rsi, [rbp+var_B8]
__text:000000010000190A                 mov     rsi, [rsi]
__text:000000010000190D                 mov     edi, esi
__text:000000010000190F                 add     edi, 1
__text:0000000100001915                 mov     [rbp+var_258], 0
__text:000000010000191F                 mov     [rbp+var_108], rdx
__text:0000000100001926                 mov     [rbp+var_110], rcx
__text:000000010000192D                 mov     rcx, [rbp+var_108]
__text:0000000100001934                 mov     rdx, [rbp+var_110]
__text:000000010000193B                 mov     [rbp+var_F0], rcx
__text:0000000100001942                 mov     [rbp+var_F8], rdx
__text:0000000100001949                 mov     rcx, [rbp+var_F0]
__text:0000000100001950                 mov     rdx, [rbp+var_F8]
__text:0000000100001957                 mov     [rbp+var_D8], rax
__text:000000010000195E                 mov     [rbp+var_E0], rcx
__text:0000000100001965                 mov     [rbp+var_E8], rdx
__text:000000010000196C                 mov     rax, [rbp+var_E0]
__text:0000000100001973                 mov     r8d, [rax]
__text:0000000100001976                 mov     rax, [rbp+var_E8]
__text:000000010000197D                 cmp     r8d, [rax]
__text:0000000100001980                 mov     [rbp+var_2B4], edi
__text:0000000100001986                 jge     loc_10000199F
__text:000000010000198C                 mov     rax, [rbp+var_F8]
__text:0000000100001993                 mov     [rbp+var_2C0], rax
__text:000000010000199A                 jmp     loc_1000019AD
__text:000000010000199F ; ---------------------------------------------------------------------------
__text:000000010000199F
__text:000000010000199F loc_10000199F:                          ; CODE XREF: solve(void)+6E6↑j
__text:000000010000199F                 mov     rax, [rbp+var_F0]
__text:00000001000019A6                 mov     [rbp+var_2C0], rax
__text:00000001000019AD
__text:00000001000019AD loc_1000019AD:                          ; CODE XREF: solve(void)+6FA↑j
__text:00000001000019AD                 mov     rax, [rbp+var_2C0]
__text:00000001000019B4                 lea     rcx, [rbp+var_148]
__text:00000001000019BB                 lea     rdx, [rbp+var_25C]
__text:00000001000019C2                 lea     rsi, [rbp+var_258]
__text:00000001000019C9                 mov     edi, [rax]
__text:00000001000019CB                 sub     edi, 1
__text:00000001000019D1                 mov     [rbp+var_25C], edi
__text:00000001000019D7                 mov     [rbp+var_150], rsi
__text:00000001000019DE                 mov     [rbp+var_158], rdx
__text:00000001000019E5                 mov     rax, [rbp+var_150]
__text:00000001000019EC                 mov     rdx, [rbp+var_158]
__text:00000001000019F3                 mov     [rbp+var_138], rax
__text:00000001000019FA                 mov     [rbp+var_140], rdx
__text:0000000100001A01                 mov     rax, [rbp+var_138]
__text:0000000100001A08                 mov     rdx, [rbp+var_140]
__text:0000000100001A0F                 mov     [rbp+var_120], rcx
__text:0000000100001A16                 mov     [rbp+var_128], rax
__text:0000000100001A1D                 mov     [rbp+var_130], rdx
__text:0000000100001A24                 mov     rax, [rbp+var_128]
__text:0000000100001A2B                 mov     edi, [rax]
__text:0000000100001A2D                 mov     rax, [rbp+var_130]
__text:0000000100001A34                 cmp     edi, [rax]
__text:0000000100001A36                 jge     loc_100001A4F
__text:0000000100001A3C                 mov     rax, [rbp+var_140]
__text:0000000100001A43                 mov     [rbp+var_2C8], rax
__text:0000000100001A4A                 jmp     loc_100001A5D
__text:0000000100001A4F ; ---------------------------------------------------------------------------
__text:0000000100001A4F
__text:0000000100001A4F loc_100001A4F:                          ; CODE XREF: solve(void)+796↑j
__text:0000000100001A4F                 mov     rax, [rbp+var_138]
__text:0000000100001A56                 mov     [rbp+var_2C8], rax
__text:0000000100001A5D
__text:0000000100001A5D loc_100001A5D:                          ; CODE XREF: solve(void)+7AA↑j
__text:0000000100001A5D                 mov     rax, [rbp+var_2C8]
__text:0000000100001A64                 mov     rdi, cs:__ZNSt3__14coutE_ptr
__text:0000000100001A6B                 mov     ecx, [rbp+var_2B4]
__text:0000000100001A71                 add     ecx, [rax]
__text:0000000100001A73                 mov     [rbp+var_254], ecx
__text:0000000100001A79                 mov     esi, [rbp+var_254]
__text:0000000100001A7F                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
__text:0000000100001A84                 lea     rdi, __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ ; std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)
__text:0000000100001A8B                 mov     [rbp+var_1D8], rax
__text:0000000100001A92                 mov     [rbp+var_1E0], rdi
__text:0000000100001A99                 mov     rdi, [rbp+var_1D8]
__text:0000000100001AA0                 call    [rbp+var_1E0]
__text:0000000100001AA6                 mov     [rbp+var_2D0], rax
__text:0000000100001AAD                 add     rsp, 2D0h
__text:0000000100001AB4                 pop     rbp
__text:0000000100001AB5                 retn
__text:0000000100001AB5 __Z5solvev      endp
__text:0000000100001AB5
__text:0000000100001AB5 ; ---------------------------------------------------------------------------
__text:0000000100001AB6                 align 20h
__text:0000000100001AC0
__text:0000000100001AC0 ; =============== S U B R O U T I N E =======================================
__text:0000000100001AC0
__text:0000000100001AC0 ; Attributes: bp-based frame
__text:0000000100001AC0
__text:0000000100001AC0 ; int __cdecl main(int argc, const char **argv, const char **envp)
__text:0000000100001AC0                 public _main
__text:0000000100001AC0 _main           proc near
__text:0000000100001AC0
__text:0000000100001AC0 var_7B8         = qword ptr -7B8h
__text:0000000100001AC0 var_7AC         = dword ptr -7ACh
__text:0000000100001AC0 var_7A8         = qword ptr -7A8h
__text:0000000100001AC0 var_79C         = dword ptr -79Ch
__text:0000000100001AC0 var_798         = qword ptr -798h
__text:0000000100001AC0 var_790         = qword ptr -790h
__text:0000000100001AC0 var_788         = qword ptr -788h
__text:0000000100001AC0 var_780         = qword ptr -780h
__text:0000000100001AC0 var_778         = qword ptr -778h
__text:0000000100001AC0 var_770         = qword ptr -770h
__text:0000000100001AC0 var_768         = qword ptr -768h
__text:0000000100001AC0 var_760         = qword ptr -760h
__text:0000000100001AC0 var_758         = qword ptr -758h
__text:0000000100001AC0 var_750         = qword ptr -750h
__text:0000000100001AC0 var_748         = qword ptr -748h
__text:0000000100001AC0 var_740         = qword ptr -740h
__text:0000000100001AC0 var_738         = qword ptr -738h
__text:0000000100001AC0 var_730         = qword ptr -730h
__text:0000000100001AC0 var_728         = qword ptr -728h
__text:0000000100001AC0 var_720         = qword ptr -720h
__text:0000000100001AC0 var_718         = qword ptr -718h
__text:0000000100001AC0 var_710         = qword ptr -710h
__text:0000000100001AC0 var_708         = qword ptr -708h
__text:0000000100001AC0 var_700         = qword ptr -700h
__text:0000000100001AC0 var_6F8         = qword ptr -6F8h
__text:0000000100001AC0 var_6F0         = qword ptr -6F0h
__text:0000000100001AC0 var_6E8         = qword ptr -6E8h
__text:0000000100001AC0 var_6E0         = qword ptr -6E0h
__text:0000000100001AC0 var_6D8         = qword ptr -6D8h
__text:0000000100001AC0 var_6D0         = qword ptr -6D0h
__text:0000000100001AC0 var_6C8         = qword ptr -6C8h
__text:0000000100001AC0 var_6C0         = qword ptr -6C0h
__text:0000000100001AC0 var_6B8         = qword ptr -6B8h
__text:0000000100001AC0 var_6B0         = qword ptr -6B0h
__text:0000000100001AC0 var_6A8         = qword ptr -6A8h
__text:0000000100001AC0 var_6A0         = qword ptr -6A0h
__text:0000000100001AC0 var_698         = qword ptr -698h
__text:0000000100001AC0 var_690         = qword ptr -690h
__text:0000000100001AC0 var_688         = qword ptr -688h
__text:0000000100001AC0 var_680         = qword ptr -680h
__text:0000000100001AC0 var_678         = qword ptr -678h
__text:0000000100001AC0 var_670         = qword ptr -670h
__text:0000000100001AC0 var_668         = qword ptr -668h
__text:0000000100001AC0 var_660         = qword ptr -660h
__text:0000000100001AC0 var_658         = qword ptr -658h
__text:0000000100001AC0 var_650         = qword ptr -650h
__text:0000000100001AC0 var_648         = qword ptr -648h
__text:0000000100001AC0 var_640         = dword ptr -640h
__text:0000000100001AC0 var_63C         = dword ptr -63Ch
__text:0000000100001AC0 var_638         = byte ptr -638h
__text:0000000100001AC0 var_620         = byte ptr -620h
__text:0000000100001AC0 var_608         = byte ptr -608h
__text:0000000100001AC0 var_5F0         = byte ptr -5F0h
__text:0000000100001AC0 var_5D8         = byte ptr -5D8h
__text:0000000100001AC0 var_5C0         = byte ptr -5C0h
__text:0000000100001AC0 var_5A8         = byte ptr -5A8h
__text:0000000100001AC0 var_590         = byte ptr -590h
__text:0000000100001AC0 var_578         = byte ptr -578h
__text:0000000100001AC0 var_560         = byte ptr -560h
__text:0000000100001AC0 var_548         = byte ptr -548h
__text:0000000100001AC0 var_530         = byte ptr -530h
__text:0000000100001AC0 var_518         = byte ptr -518h
__text:0000000100001AC0 var_500         = byte ptr -500h
__text:0000000100001AC0 var_4E4         = dword ptr -4E4h
__text:0000000100001AC0 var_4E0         = qword ptr -4E0h
__text:0000000100001AC0 var_4D8         = byte ptr -4D8h
__text:0000000100001AC0 var_4C0         = byte ptr -4C0h
__text:0000000100001AC0 var_4A4         = dword ptr -4A4h
__text:0000000100001AC0 var_4A0         = qword ptr -4A0h
__text:0000000100001AC0 var_498         = qword ptr -498h
__text:0000000100001AC0 var_490         = qword ptr -490h
__text:0000000100001AC0 var_488         = qword ptr -488h
__text:0000000100001AC0 var_480         = qword ptr -480h
__text:0000000100001AC0 var_478         = qword ptr -478h
__text:0000000100001AC0 var_470         = qword ptr -470h
__text:0000000100001AC0 var_468         = qword ptr -468h
__text:0000000100001AC0 var_460         = qword ptr -460h
__text:0000000100001AC0 var_458         = qword ptr -458h
__text:0000000100001AC0 var_450         = qword ptr -450h
__text:0000000100001AC0 var_448         = qword ptr -448h
__text:0000000100001AC0 var_440         = qword ptr -440h
__text:0000000100001AC0 var_438         = qword ptr -438h
__text:0000000100001AC0 var_430         = qword ptr -430h
__text:0000000100001AC0 var_428         = qword ptr -428h
__text:0000000100001AC0 var_420         = qword ptr -420h
__text:0000000100001AC0 var_418         = qword ptr -418h
__text:0000000100001AC0 var_410         = qword ptr -410h
__text:0000000100001AC0 var_408         = qword ptr -408h
__text:0000000100001AC0 var_400         = qword ptr -400h
__text:0000000100001AC0 var_3F8         = qword ptr -3F8h
__text:0000000100001AC0 var_3F0         = qword ptr -3F0h
__text:0000000100001AC0 var_3E8         = qword ptr -3E8h
__text:0000000100001AC0 var_3E0         = qword ptr -3E0h
__text:0000000100001AC0 var_3D8         = qword ptr -3D8h
__text:0000000100001AC0 var_3D0         = qword ptr -3D0h
__text:0000000100001AC0 var_3C8         = qword ptr -3C8h
__text:0000000100001AC0 var_3C0         = qword ptr -3C0h
__text:0000000100001AC0 var_3B8         = qword ptr -3B8h
__text:0000000100001AC0 var_3B0         = qword ptr -3B0h
__text:0000000100001AC0 var_3A8         = qword ptr -3A8h
__text:0000000100001AC0 var_3A0         = qword ptr -3A0h
__text:0000000100001AC0 var_398         = qword ptr -398h
__text:0000000100001AC0 var_390         = qword ptr -390h
__text:0000000100001AC0 var_388         = qword ptr -388h
__text:0000000100001AC0 var_380         = qword ptr -380h
__text:0000000100001AC0 var_378         = qword ptr -378h
__text:0000000100001AC0 var_370         = qword ptr -370h
__text:0000000100001AC0 var_368         = qword ptr -368h
__text:0000000100001AC0 var_360         = qword ptr -360h
__text:0000000100001AC0 var_358         = qword ptr -358h
__text:0000000100001AC0 var_350         = qword ptr -350h
__text:0000000100001AC0 var_348         = qword ptr -348h
__text:0000000100001AC0 var_340         = qword ptr -340h
__text:0000000100001AC0 var_338         = qword ptr -338h
__text:0000000100001AC0 var_330         = qword ptr -330h
__text:0000000100001AC0 var_328         = qword ptr -328h
__text:0000000100001AC0 var_320         = qword ptr -320h
__text:0000000100001AC0 var_318         = qword ptr -318h
__text:0000000100001AC0 var_310         = qword ptr -310h
__text:0000000100001AC0 var_308         = qword ptr -308h
__text:0000000100001AC0 var_300         = qword ptr -300h
__text:0000000100001AC0 var_2F8         = qword ptr -2F8h
__text:0000000100001AC0 var_2F0         = qword ptr -2F0h
__text:0000000100001AC0 var_2E8         = qword ptr -2E8h
__text:0000000100001AC0 var_2E0         = qword ptr -2E0h
__text:0000000100001AC0 var_2D8         = qword ptr -2D8h
__text:0000000100001AC0 var_2D0         = qword ptr -2D0h
__text:0000000100001AC0 var_2C8         = qword ptr -2C8h
__text:0000000100001AC0 var_2C0         = qword ptr -2C0h
__text:0000000100001AC0 var_2B8         = qword ptr -2B8h
__text:0000000100001AC0 var_2B0         = qword ptr -2B0h
__text:0000000100001AC0 var_2A8         = qword ptr -2A8h
__text:0000000100001AC0 var_2A0         = qword ptr -2A0h
__text:0000000100001AC0 var_298         = qword ptr -298h
__text:0000000100001AC0 var_290         = qword ptr -290h
__text:0000000100001AC0 var_288         = qword ptr -288h
__text:0000000100001AC0 var_280         = qword ptr -280h
__text:0000000100001AC0 var_278         = qword ptr -278h
__text:0000000100001AC0 var_270         = qword ptr -270h
__text:0000000100001AC0 var_268         = qword ptr -268h
__text:0000000100001AC0 var_260         = qword ptr -260h
__text:0000000100001AC0 var_258         = qword ptr -258h
__text:0000000100001AC0 var_250         = qword ptr -250h
__text:0000000100001AC0 var_248         = qword ptr -248h
__text:0000000100001AC0 var_240         = qword ptr -240h
__text:0000000100001AC0 var_238         = qword ptr -238h
__text:0000000100001AC0 var_230         = qword ptr -230h
__text:0000000100001AC0 var_228         = qword ptr -228h
__text:0000000100001AC0 var_220         = qword ptr -220h
__text:0000000100001AC0 var_218         = qword ptr -218h
__text:0000000100001AC0 var_210         = qword ptr -210h
__text:0000000100001AC0 var_208         = qword ptr -208h
__text:0000000100001AC0 var_200         = qword ptr -200h
__text:0000000100001AC0 var_1F8         = qword ptr -1F8h
__text:0000000100001AC0 var_1F0         = qword ptr -1F0h
__text:0000000100001AC0 var_1E8         = qword ptr -1E8h
__text:0000000100001AC0 var_1E0         = qword ptr -1E0h
__text:0000000100001AC0 var_1D8         = qword ptr -1D8h
__text:0000000100001AC0 var_1D0         = qword ptr -1D0h
__text:0000000100001AC0 var_1C8         = qword ptr -1C8h
__text:0000000100001AC0 var_1C0         = qword ptr -1C0h
__text:0000000100001AC0 var_1B8         = qword ptr -1B8h
__text:0000000100001AC0 var_1B0         = qword ptr -1B0h
__text:0000000100001AC0 var_1A8         = qword ptr -1A8h
__text:0000000100001AC0 var_1A0         = qword ptr -1A0h
__text:0000000100001AC0 var_198         = qword ptr -198h
__text:0000000100001AC0 var_190         = qword ptr -190h
__text:0000000100001AC0 var_188         = qword ptr -188h
__text:0000000100001AC0 var_180         = qword ptr -180h
__text:0000000100001AC0 var_178         = qword ptr -178h
__text:0000000100001AC0 var_170         = qword ptr -170h
__text:0000000100001AC0 var_168         = qword ptr -168h
__text:0000000100001AC0 var_160         = qword ptr -160h
__text:0000000100001AC0 var_158         = qword ptr -158h
__text:0000000100001AC0 var_150         = qword ptr -150h
__text:0000000100001AC0 var_148         = qword ptr -148h
__text:0000000100001AC0 var_140         = qword ptr -140h
__text:0000000100001AC0 var_138         = qword ptr -138h
__text:0000000100001AC0 var_130         = qword ptr -130h
__text:0000000100001AC0 var_128         = qword ptr -128h
__text:0000000100001AC0 var_120         = qword ptr -120h
__text:0000000100001AC0 var_118         = qword ptr -118h
__text:0000000100001AC0 var_110         = qword ptr -110h
__text:0000000100001AC0 var_108         = qword ptr -108h
__text:0000000100001AC0 var_100         = qword ptr -100h
__text:0000000100001AC0 var_F8          = qword ptr -0F8h
__text:0000000100001AC0 var_F0          = qword ptr -0F0h
__text:0000000100001AC0 var_E8          = qword ptr -0E8h
__text:0000000100001AC0 var_E0          = qword ptr -0E0h
__text:0000000100001AC0 var_D8          = qword ptr -0D8h
__text:0000000100001AC0 var_D0          = qword ptr -0D0h
__text:0000000100001AC0 var_C8          = qword ptr -0C8h
__text:0000000100001AC0 var_C0          = qword ptr -0C0h
__text:0000000100001AC0 var_B8          = qword ptr -0B8h
__text:0000000100001AC0 var_B0          = qword ptr -0B0h
__text:0000000100001AC0 var_A8          = qword ptr -0A8h
__text:0000000100001AC0 var_A0          = qword ptr -0A0h
__text:0000000100001AC0 var_98          = qword ptr -98h
__text:0000000100001AC0 var_90          = qword ptr -90h
__text:0000000100001AC0 var_88          = qword ptr -88h
__text:0000000100001AC0 var_80          = qword ptr -80h
__text:0000000100001AC0 var_78          = qword ptr -78h
__text:0000000100001AC0 var_70          = qword ptr -70h
__text:0000000100001AC0 var_68          = qword ptr -68h
__text:0000000100001AC0 var_60          = qword ptr -60h
__text:0000000100001AC0 var_58          = qword ptr -58h
__text:0000000100001AC0 var_50          = qword ptr -50h
__text:0000000100001AC0 var_48          = qword ptr -48h
__text:0000000100001AC0 var_40          = qword ptr -40h
__text:0000000100001AC0 var_38          = qword ptr -38h
__text:0000000100001AC0 var_30          = qword ptr -30h
__text:0000000100001AC0 var_28          = qword ptr -28h
__text:0000000100001AC0 var_20          = qword ptr -20h
__text:0000000100001AC0 var_18          = qword ptr -18h
__text:0000000100001AC0 var_10          = qword ptr -10h
__text:0000000100001AC0 var_8           = qword ptr -8
__text:0000000100001AC0
__text:0000000100001AC0                 push    rbp
__text:0000000100001AC1                 mov     rbp, rsp
__text:0000000100001AC4                 sub     rsp, 7C0h
__text:0000000100001ACB                 mov     [rbp+var_4A4], 0
__text:0000000100001AD5                 lea     rax, [rbp+var_4C0]
__text:0000000100001ADC                 mov     [rbp+var_498], rax
__text:0000000100001AE3                 lea     rax, aO         ; "o"
__text:0000000100001AEA                 mov     [rbp+var_4A0], rax
__text:0000000100001AF1                 mov     rcx, [rbp+var_498]
__text:0000000100001AF8                 mov     [rbp+var_488], rcx
__text:0000000100001AFF                 mov     [rbp+var_490], rax
__text:0000000100001B06                 mov     rax, [rbp+var_488]
__text:0000000100001B0D                 mov     [rbp+var_480], rax
__text:0000000100001B14                 mov     [rbp+var_478], rax
__text:0000000100001B1B                 mov     [rbp+var_470], rax
__text:0000000100001B22                 mov     [rbp+var_468], rax
__text:0000000100001B29                 mov     rcx, [rbp+var_490]
__text:0000000100001B30                 mov     [rbp+var_460], rcx
__text:0000000100001B37                 mov     rdi, rcx        ; char *
__text:0000000100001B3A                 mov     [rbp+var_648], rax
__text:0000000100001B41                 mov     [rbp+var_650], rcx
__text:0000000100001B48                 call    _strlen
__text:0000000100001B4D                 mov     rdi, [rbp+var_648]
__text:0000000100001B54                 mov     rsi, [rbp+var_650]
__text:0000000100001B5B                 mov     rdx, rax
__text:0000000100001B5E                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001B63                 lea     rax, [rbp+var_4D8]
__text:0000000100001B6A                 mov     [rbp+var_450], rax
__text:0000000100001B71                 lea     rax, a0         ; "0"
__text:0000000100001B78                 mov     [rbp+var_458], rax
__text:0000000100001B7F                 mov     rcx, [rbp+var_450]
__text:0000000100001B86                 mov     [rbp+var_440], rcx
__text:0000000100001B8D                 mov     [rbp+var_448], rax
__text:0000000100001B94                 mov     rax, [rbp+var_440]
__text:0000000100001B9B                 mov     [rbp+var_438], rax
__text:0000000100001BA2                 mov     [rbp+var_430], rax
__text:0000000100001BA9                 mov     [rbp+var_428], rax
__text:0000000100001BB0                 mov     [rbp+var_420], rax
__text:0000000100001BB7                 mov     rcx, [rbp+var_448]
__text:0000000100001BBE                 mov     [rbp+var_418], rcx
__text:0000000100001BC5                 mov     rdi, rcx        ; char *
__text:0000000100001BC8                 mov     [rbp+var_658], rax
__text:0000000100001BCF                 mov     [rbp+var_660], rcx
__text:0000000100001BD6                 call    _strlen
__text:0000000100001BDB                 mov     [rbp+var_668], rax
__text:0000000100001BE2                 jmp     $+5
__text:0000000100001BE7 ; ---------------------------------------------------------------------------
__text:0000000100001BE7
__text:0000000100001BE7 loc_100001BE7:                          ; CODE XREF: _main+122↑j
__text:0000000100001BE7                 mov     rdi, [rbp+var_658]
__text:0000000100001BEE                 mov     rsi, [rbp+var_660]
__text:0000000100001BF5                 mov     rdx, [rbp+var_668]
__text:0000000100001BFC                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001C01                 jmp     $+5
__text:0000000100001C06 ; ---------------------------------------------------------------------------
__text:0000000100001C06
__text:0000000100001C06 loc_100001C06:                          ; CODE XREF: _main+141↑j
__text:0000000100001C06                 jmp     $+5
__text:0000000100001C0B ; ---------------------------------------------------------------------------
__text:0000000100001C0B
__text:0000000100001C0B loc_100001C0B:                          ; CODE XREF: _main:loc_100001C06↑j
__text:0000000100001C0B                 lea     rdi, [rbp+var_4C0]
__text:0000000100001C12                 lea     rsi, [rbp+var_4D8]
__text:0000000100001C19                 call    __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ ; add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)
__text:0000000100001C1E                 jmp     $+5
__text:0000000100001C23 ; ---------------------------------------------------------------------------
__text:0000000100001C23
__text:0000000100001C23 loc_100001C23:                          ; CODE XREF: _main+15E↑j
__text:0000000100001C23                 lea     rdi, [rbp+var_4D8]
__text:0000000100001C2A                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001C2F                 jmp     $+5
__text:0000000100001C34 ; ---------------------------------------------------------------------------
__text:0000000100001C34
__text:0000000100001C34 loc_100001C34:                          ; CODE XREF: _main+16F↑j
__text:0000000100001C34                 lea     rdi, [rbp+var_4C0]
__text:0000000100001C3B                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001C40                 lea     rdi, [rbp+var_500]
__text:0000000100001C47                 mov     [rbp+var_408], rdi
__text:0000000100001C4E                 lea     rdi, aI         ; "i"
__text:0000000100001C55                 mov     [rbp+var_410], rdi
__text:0000000100001C5C                 mov     rax, [rbp+var_408]
__text:0000000100001C63                 mov     [rbp+var_3F8], rax
__text:0000000100001C6A                 mov     [rbp+var_400], rdi
__text:0000000100001C71                 mov     rax, [rbp+var_3F8]
__text:0000000100001C78                 mov     [rbp+var_3F0], rax
__text:0000000100001C7F                 mov     [rbp+var_3E8], rax
__text:0000000100001C86                 mov     [rbp+var_3E0], rax
__text:0000000100001C8D                 mov     [rbp+var_3D8], rax
__text:0000000100001C94                 mov     rdi, [rbp+var_400] ; char *
__text:0000000100001C9B                 mov     [rbp+var_3D0], rdi
__text:0000000100001CA2                 mov     [rbp+var_670], rdi
__text:0000000100001CA9                 mov     [rbp+var_678], rax
__text:0000000100001CB0                 call    _strlen
__text:0000000100001CB5                 mov     rdi, [rbp+var_678]
__text:0000000100001CBC                 mov     rsi, [rbp+var_670]
__text:0000000100001CC3                 mov     rdx, rax
__text:0000000100001CC6                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001CCB                 lea     rax, [rbp+var_518]
__text:0000000100001CD2                 mov     [rbp+var_3C0], rax
__text:0000000100001CD9                 lea     rax, a1         ; "1"
__text:0000000100001CE0                 mov     [rbp+var_3C8], rax
__text:0000000100001CE7                 mov     rdx, [rbp+var_3C0]
__text:0000000100001CEE                 mov     [rbp+var_3B0], rdx
__text:0000000100001CF5                 mov     [rbp+var_3B8], rax
__text:0000000100001CFC                 mov     rax, [rbp+var_3B0]
__text:0000000100001D03                 mov     [rbp+var_3A8], rax
__text:0000000100001D0A                 mov     [rbp+var_3A0], rax
__text:0000000100001D11                 mov     [rbp+var_398], rax
__text:0000000100001D18                 mov     [rbp+var_390], rax
__text:0000000100001D1F                 mov     rdx, [rbp+var_3B8]
__text:0000000100001D26                 mov     [rbp+var_388], rdx
__text:0000000100001D2D                 mov     rdi, rdx        ; char *
__text:0000000100001D30                 mov     [rbp+var_680], rax
__text:0000000100001D37                 mov     [rbp+var_688], rdx
__text:0000000100001D3E                 call    _strlen
__text:0000000100001D43                 mov     [rbp+var_690], rax
__text:0000000100001D4A                 jmp     $+5
__text:0000000100001D4F ; ---------------------------------------------------------------------------
__text:0000000100001D4F
__text:0000000100001D4F loc_100001D4F:                          ; CODE XREF: _main+28A↑j
__text:0000000100001D4F                 mov     rdi, [rbp+var_680]
__text:0000000100001D56                 mov     rsi, [rbp+var_688]
__text:0000000100001D5D                 mov     rdx, [rbp+var_690]
__text:0000000100001D64                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001D69                 jmp     $+5
__text:0000000100001D6E ; ---------------------------------------------------------------------------
__text:0000000100001D6E
__text:0000000100001D6E loc_100001D6E:                          ; CODE XREF: _main+2A9↑j
__text:0000000100001D6E                 jmp     $+5
__text:0000000100001D73 ; ---------------------------------------------------------------------------
__text:0000000100001D73
__text:0000000100001D73 loc_100001D73:                          ; CODE XREF: _main:loc_100001D6E↑j
__text:0000000100001D73                 lea     rdi, [rbp+var_500]
__text:0000000100001D7A                 lea     rsi, [rbp+var_518]
__text:0000000100001D81                 call    __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ ; add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)
__text:0000000100001D86                 jmp     $+5
__text:0000000100001D8B ; ---------------------------------------------------------------------------
__text:0000000100001D8B
__text:0000000100001D8B loc_100001D8B:                          ; CODE XREF: _main+2C6↑j
__text:0000000100001D8B                 lea     rdi, [rbp+var_518]
__text:0000000100001D92                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001D97                 jmp     $+5
__text:0000000100001D9C ; ---------------------------------------------------------------------------
__text:0000000100001D9C
__text:0000000100001D9C loc_100001D9C:                          ; CODE XREF: _main+2D7↑j
__text:0000000100001D9C                 lea     rdi, [rbp+var_500]
__text:0000000100001DA3                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001DA8                 lea     rdi, [rbp+var_530]
__text:0000000100001DAF                 mov     [rbp+var_378], rdi
__text:0000000100001DB6                 lea     rdi, aE         ; "e"
__text:0000000100001DBD                 mov     [rbp+var_380], rdi
__text:0000000100001DC4                 mov     rax, [rbp+var_378]
__text:0000000100001DCB                 mov     [rbp+var_368], rax
__text:0000000100001DD2                 mov     [rbp+var_370], rdi
__text:0000000100001DD9                 mov     rax, [rbp+var_368]
__text:0000000100001DE0                 mov     [rbp+var_360], rax
__text:0000000100001DE7                 mov     [rbp+var_358], rax
__text:0000000100001DEE                 mov     [rbp+var_350], rax
__text:0000000100001DF5                 mov     [rbp+var_348], rax
__text:0000000100001DFC                 mov     rdi, [rbp+var_370] ; char *
__text:0000000100001E03                 mov     [rbp+var_340], rdi
__text:0000000100001E0A                 mov     [rbp+var_698], rdi
__text:0000000100001E11                 mov     [rbp+var_6A0], rax
__text:0000000100001E18                 call    _strlen
__text:0000000100001E1D                 mov     rdi, [rbp+var_6A0]
__text:0000000100001E24                 mov     rsi, [rbp+var_698]
__text:0000000100001E2B                 mov     rdx, rax
__text:0000000100001E2E                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001E33                 lea     rax, [rbp+var_548]
__text:0000000100001E3A                 mov     [rbp+var_330], rax
__text:0000000100001E41                 lea     rax, a3         ; "3"
__text:0000000100001E48                 mov     [rbp+var_338], rax
__text:0000000100001E4F                 mov     rdx, [rbp+var_330]
__text:0000000100001E56                 mov     [rbp+var_320], rdx
__text:0000000100001E5D                 mov     [rbp+var_328], rax
__text:0000000100001E64                 mov     rax, [rbp+var_320]
__text:0000000100001E6B                 mov     [rbp+var_318], rax
__text:0000000100001E72                 mov     [rbp+var_310], rax
__text:0000000100001E79                 mov     [rbp+var_308], rax
__text:0000000100001E80                 mov     [rbp+var_300], rax
__text:0000000100001E87                 mov     rdx, [rbp+var_328]
__text:0000000100001E8E                 mov     [rbp+var_2F8], rdx
__text:0000000100001E95                 mov     rdi, rdx        ; char *
__text:0000000100001E98                 mov     [rbp+var_6A8], rax
__text:0000000100001E9F                 mov     [rbp+var_6B0], rdx
__text:0000000100001EA6                 call    _strlen
__text:0000000100001EAB                 mov     [rbp+var_6B8], rax
__text:0000000100001EB2                 jmp     $+5
__text:0000000100001EB7 ; ---------------------------------------------------------------------------
__text:0000000100001EB7
__text:0000000100001EB7 loc_100001EB7:                          ; CODE XREF: _main+3F2↑j
__text:0000000100001EB7                 mov     rdi, [rbp+var_6A8]
__text:0000000100001EBE                 mov     rsi, [rbp+var_6B0]
__text:0000000100001EC5                 mov     rdx, [rbp+var_6B8]
__text:0000000100001ECC                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001ED1                 jmp     $+5
__text:0000000100001ED6 ; ---------------------------------------------------------------------------
__text:0000000100001ED6
__text:0000000100001ED6 loc_100001ED6:                          ; CODE XREF: _main+411↑j
__text:0000000100001ED6                 jmp     $+5
__text:0000000100001EDB ; ---------------------------------------------------------------------------
__text:0000000100001EDB
__text:0000000100001EDB loc_100001EDB:                          ; CODE XREF: _main:loc_100001ED6↑j
__text:0000000100001EDB                 lea     rdi, [rbp+var_530]
__text:0000000100001EE2                 lea     rsi, [rbp+var_548]
__text:0000000100001EE9                 call    __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ ; add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)
__text:0000000100001EEE                 jmp     $+5
__text:0000000100001EF3 ; ---------------------------------------------------------------------------
__text:0000000100001EF3
__text:0000000100001EF3 loc_100001EF3:                          ; CODE XREF: _main+42E↑j
__text:0000000100001EF3                 lea     rdi, [rbp+var_548]
__text:0000000100001EFA                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001EFF                 jmp     $+5
__text:0000000100001F04 ; ---------------------------------------------------------------------------
__text:0000000100001F04
__text:0000000100001F04 loc_100001F04:                          ; CODE XREF: _main+43F↑j
__text:0000000100001F04                 lea     rdi, [rbp+var_530]
__text:0000000100001F0B                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100001F10                 lea     rdi, [rbp+var_560]
__text:0000000100001F17                 mov     [rbp+var_2E8], rdi
__text:0000000100001F1E                 lea     rdi, aA         ; "a"
__text:0000000100001F25                 mov     [rbp+var_2F0], rdi
__text:0000000100001F2C                 mov     rax, [rbp+var_2E8]
__text:0000000100001F33                 mov     [rbp+var_2D8], rax
__text:0000000100001F3A                 mov     [rbp+var_2E0], rdi
__text:0000000100001F41                 mov     rax, [rbp+var_2D8]
__text:0000000100001F48                 mov     [rbp+var_2D0], rax
__text:0000000100001F4F                 mov     [rbp+var_2C8], rax
__text:0000000100001F56                 mov     [rbp+var_2C0], rax
__text:0000000100001F5D                 mov     [rbp+var_2B8], rax
__text:0000000100001F64                 mov     rdi, [rbp+var_2E0] ; char *
__text:0000000100001F6B                 mov     [rbp+var_2B0], rdi
__text:0000000100001F72                 mov     [rbp+var_6C0], rdi
__text:0000000100001F79                 mov     [rbp+var_6C8], rax
__text:0000000100001F80                 call    _strlen
__text:0000000100001F85                 mov     rdi, [rbp+var_6C8]
__text:0000000100001F8C                 mov     rsi, [rbp+var_6C0]
__text:0000000100001F93                 mov     rdx, rax
__text:0000000100001F96                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100001F9B                 lea     rax, [rbp+var_578]
__text:0000000100001FA2                 mov     [rbp+var_2A0], rax
__text:0000000100001FA9                 lea     rax, a4         ; "4"
__text:0000000100001FB0                 mov     [rbp+var_2A8], rax
__text:0000000100001FB7                 mov     rdx, [rbp+var_2A0]
__text:0000000100001FBE                 mov     [rbp+var_290], rdx
__text:0000000100001FC5                 mov     [rbp+var_298], rax
__text:0000000100001FCC                 mov     rax, [rbp+var_290]
__text:0000000100001FD3                 mov     [rbp+var_288], rax
__text:0000000100001FDA                 mov     [rbp+var_280], rax
__text:0000000100001FE1                 mov     [rbp+var_278], rax
__text:0000000100001FE8                 mov     [rbp+var_270], rax
__text:0000000100001FEF                 mov     rdx, [rbp+var_298]
__text:0000000100001FF6                 mov     [rbp+var_268], rdx
__text:0000000100001FFD                 mov     rdi, rdx        ; char *
__text:0000000100002000                 mov     [rbp+var_6D0], rax
__text:0000000100002007                 mov     [rbp+var_6D8], rdx
__text:000000010000200E                 call    _strlen
__text:0000000100002013                 mov     [rbp+var_6E0], rax
__text:000000010000201A                 jmp     $+5
__text:000000010000201F ; ---------------------------------------------------------------------------
__text:000000010000201F
__text:000000010000201F loc_10000201F:                          ; CODE XREF: _main+55A↑j
__text:000000010000201F                 mov     rdi, [rbp+var_6D0]
__text:0000000100002026                 mov     rsi, [rbp+var_6D8]
__text:000000010000202D                 mov     rdx, [rbp+var_6E0]
__text:0000000100002034                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100002039                 jmp     $+5
__text:000000010000203E ; ---------------------------------------------------------------------------
__text:000000010000203E
__text:000000010000203E loc_10000203E:                          ; CODE XREF: _main+579↑j
__text:000000010000203E                 jmp     $+5
__text:0000000100002043 ; ---------------------------------------------------------------------------
__text:0000000100002043
__text:0000000100002043 loc_100002043:                          ; CODE XREF: _main:loc_10000203E↑j
__text:0000000100002043                 lea     rdi, [rbp+var_560]
__text:000000010000204A                 lea     rsi, [rbp+var_578]
__text:0000000100002051                 call    __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ ; add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)
__text:0000000100002056                 jmp     $+5
__text:000000010000205B ; ---------------------------------------------------------------------------
__text:000000010000205B
__text:000000010000205B loc_10000205B:                          ; CODE XREF: _main+596↑j
__text:000000010000205B                 lea     rdi, [rbp+var_578]
__text:0000000100002062                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002067                 jmp     $+5
__text:000000010000206C ; ---------------------------------------------------------------------------
__text:000000010000206C
__text:000000010000206C loc_10000206C:                          ; CODE XREF: _main+5A7↑j
__text:000000010000206C                 lea     rdi, [rbp+var_560]
__text:0000000100002073                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002078                 lea     rdi, [rbp+var_590]
__text:000000010000207F                 mov     [rbp+var_258], rdi
__text:0000000100002086                 lea     rdi, aS_0       ; "s"
__text:000000010000208D                 mov     [rbp+var_260], rdi
__text:0000000100002094                 mov     rax, [rbp+var_258]
__text:000000010000209B                 mov     [rbp+var_248], rax
__text:00000001000020A2                 mov     [rbp+var_250], rdi
__text:00000001000020A9                 mov     rax, [rbp+var_248]
__text:00000001000020B0                 mov     [rbp+var_240], rax
__text:00000001000020B7                 mov     [rbp+var_238], rax
__text:00000001000020BE                 mov     [rbp+var_230], rax
__text:00000001000020C5                 mov     [rbp+var_228], rax
__text:00000001000020CC                 mov     rdi, [rbp+var_250] ; char *
__text:00000001000020D3                 mov     [rbp+var_220], rdi
__text:00000001000020DA                 mov     [rbp+var_6E8], rdi
__text:00000001000020E1                 mov     [rbp+var_6F0], rax
__text:00000001000020E8                 call    _strlen
__text:00000001000020ED                 mov     rdi, [rbp+var_6F0]
__text:00000001000020F4                 mov     rsi, [rbp+var_6E8]
__text:00000001000020FB                 mov     rdx, rax
__text:00000001000020FE                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100002103                 lea     rax, [rbp+var_5A8]
__text:000000010000210A                 mov     [rbp+var_210], rax
__text:0000000100002111                 lea     rax, a5         ; "5"
__text:0000000100002118                 mov     [rbp+var_218], rax
__text:000000010000211F                 mov     rdx, [rbp+var_210]
__text:0000000100002126                 mov     [rbp+var_200], rdx
__text:000000010000212D                 mov     [rbp+var_208], rax
__text:0000000100002134                 mov     rax, [rbp+var_200]
__text:000000010000213B                 mov     [rbp+var_1F8], rax
__text:0000000100002142                 mov     [rbp+var_1F0], rax
__text:0000000100002149                 mov     [rbp+var_1E8], rax
__text:0000000100002150                 mov     [rbp+var_1E0], rax
__text:0000000100002157                 mov     rdx, [rbp+var_208]
__text:000000010000215E                 mov     [rbp+var_1D8], rdx
__text:0000000100002165                 mov     rdi, rdx        ; char *
__text:0000000100002168                 mov     [rbp+var_6F8], rax
__text:000000010000216F                 mov     [rbp+var_700], rdx
__text:0000000100002176                 call    _strlen
__text:000000010000217B                 mov     [rbp+var_708], rax
__text:0000000100002182                 jmp     $+5
__text:0000000100002187 ; ---------------------------------------------------------------------------
__text:0000000100002187
__text:0000000100002187 loc_100002187:                          ; CODE XREF: _main+6C2↑j
__text:0000000100002187                 mov     rdi, [rbp+var_6F8]
__text:000000010000218E                 mov     rsi, [rbp+var_700]
__text:0000000100002195                 mov     rdx, [rbp+var_708]
__text:000000010000219C                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:00000001000021A1                 jmp     $+5
__text:00000001000021A6 ; ---------------------------------------------------------------------------
__text:00000001000021A6
__text:00000001000021A6 loc_1000021A6:                          ; CODE XREF: _main+6E1↑j
__text:00000001000021A6                 jmp     $+5
__text:00000001000021AB ; ---------------------------------------------------------------------------
__text:00000001000021AB
__text:00000001000021AB loc_1000021AB:                          ; CODE XREF: _main:loc_1000021A6↑j
__text:00000001000021AB                 lea     rdi, [rbp+var_590]
__text:00000001000021B2                 lea     rsi, [rbp+var_5A8]
__text:00000001000021B9                 call    __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ ; add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)
__text:00000001000021BE                 jmp     $+5
__text:00000001000021C3 ; ---------------------------------------------------------------------------
__text:00000001000021C3
__text:00000001000021C3 loc_1000021C3:                          ; CODE XREF: _main+6FE↑j
__text:00000001000021C3                 lea     rdi, [rbp+var_5A8]
__text:00000001000021CA                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000021CF                 jmp     $+5
__text:00000001000021D4 ; ---------------------------------------------------------------------------
__text:00000001000021D4
__text:00000001000021D4 loc_1000021D4:                          ; CODE XREF: _main+70F↑j
__text:00000001000021D4                 lea     rdi, [rbp+var_590]
__text:00000001000021DB                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000021E0                 lea     rdi, [rbp+var_5C0]
__text:00000001000021E7                 mov     [rbp+var_1C8], rdi
__text:00000001000021EE                 lea     rdi, aT         ; "t"
__text:00000001000021F5                 mov     [rbp+var_1D0], rdi
__text:00000001000021FC                 mov     rax, [rbp+var_1C8]
__text:0000000100002203                 mov     [rbp+var_1B8], rax
__text:000000010000220A                 mov     [rbp+var_1C0], rdi
__text:0000000100002211                 mov     rax, [rbp+var_1B8]
__text:0000000100002218                 mov     [rbp+var_1B0], rax
__text:000000010000221F                 mov     [rbp+var_1A8], rax
__text:0000000100002226                 mov     [rbp+var_1A0], rax
__text:000000010000222D                 mov     [rbp+var_198], rax
__text:0000000100002234                 mov     rdi, [rbp+var_1C0] ; char *
__text:000000010000223B                 mov     [rbp+var_190], rdi
__text:0000000100002242                 mov     [rbp+var_710], rdi
__text:0000000100002249                 mov     [rbp+var_718], rax
__text:0000000100002250                 call    _strlen
__text:0000000100002255                 mov     rdi, [rbp+var_718]
__text:000000010000225C                 mov     rsi, [rbp+var_710]
__text:0000000100002263                 mov     rdx, rax
__text:0000000100002266                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:000000010000226B                 lea     rax, [rbp+var_5D8]
__text:0000000100002272                 mov     [rbp+var_180], rax
__text:0000000100002279                 lea     rax, a7         ; "7"
__text:0000000100002280                 mov     [rbp+var_188], rax
__text:0000000100002287                 mov     rdx, [rbp+var_180]
__text:000000010000228E                 mov     [rbp+var_170], rdx
__text:0000000100002295                 mov     [rbp+var_178], rax
__text:000000010000229C                 mov     rax, [rbp+var_170]
__text:00000001000022A3                 mov     [rbp+var_168], rax
__text:00000001000022AA                 mov     [rbp+var_160], rax
__text:00000001000022B1                 mov     [rbp+var_158], rax
__text:00000001000022B8                 mov     [rbp+var_150], rax
__text:00000001000022BF                 mov     rdx, [rbp+var_178]
__text:00000001000022C6                 mov     [rbp+var_148], rdx
__text:00000001000022CD                 mov     rdi, rdx        ; char *
__text:00000001000022D0                 mov     [rbp+var_720], rax
__text:00000001000022D7                 mov     [rbp+var_728], rdx
__text:00000001000022DE                 call    _strlen
__text:00000001000022E3                 mov     [rbp+var_730], rax
__text:00000001000022EA                 jmp     $+5
__text:00000001000022EF ; ---------------------------------------------------------------------------
__text:00000001000022EF
__text:00000001000022EF loc_1000022EF:                          ; CODE XREF: _main+82A↑j
__text:00000001000022EF                 mov     rdi, [rbp+var_720]
__text:00000001000022F6                 mov     rsi, [rbp+var_728]
__text:00000001000022FD                 mov     rdx, [rbp+var_730]
__text:0000000100002304                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100002309                 jmp     $+5
__text:000000010000230E ; ---------------------------------------------------------------------------
__text:000000010000230E
__text:000000010000230E loc_10000230E:                          ; CODE XREF: _main+849↑j
__text:000000010000230E                 jmp     $+5
__text:0000000100002313 ; ---------------------------------------------------------------------------
__text:0000000100002313
__text:0000000100002313 loc_100002313:                          ; CODE XREF: _main:loc_10000230E↑j
__text:0000000100002313                 lea     rdi, [rbp+var_5C0]
__text:000000010000231A                 lea     rsi, [rbp+var_5D8]
__text:0000000100002321                 call    __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ ; add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)
__text:0000000100002326                 jmp     $+5
__text:000000010000232B ; ---------------------------------------------------------------------------
__text:000000010000232B
__text:000000010000232B loc_10000232B:                          ; CODE XREF: _main+866↑j
__text:000000010000232B                 lea     rdi, [rbp+var_5D8]
__text:0000000100002332                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002337                 jmp     $+5
__text:000000010000233C ; ---------------------------------------------------------------------------
__text:000000010000233C
__text:000000010000233C loc_10000233C:                          ; CODE XREF: _main+877↑j
__text:000000010000233C                 lea     rdi, [rbp+var_5C0]
__text:0000000100002343                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002348                 lea     rdi, [rbp+var_5F0]
__text:000000010000234F                 mov     [rbp+var_138], rdi
__text:0000000100002356                 lea     rdi, aB         ; "b"
__text:000000010000235D                 mov     [rbp+var_140], rdi
__text:0000000100002364                 mov     rax, [rbp+var_138]
__text:000000010000236B                 mov     [rbp+var_128], rax
__text:0000000100002372                 mov     [rbp+var_130], rdi
__text:0000000100002379                 mov     rax, [rbp+var_128]
__text:0000000100002380                 mov     [rbp+var_120], rax
__text:0000000100002387                 mov     [rbp+var_118], rax
__text:000000010000238E                 mov     [rbp+var_110], rax
__text:0000000100002395                 mov     [rbp+var_108], rax
__text:000000010000239C                 mov     rdi, [rbp+var_130] ; char *
__text:00000001000023A3                 mov     [rbp+var_100], rdi
__text:00000001000023AA                 mov     [rbp+var_738], rdi
__text:00000001000023B1                 mov     [rbp+var_740], rax
__text:00000001000023B8                 call    _strlen
__text:00000001000023BD                 mov     rdi, [rbp+var_740]
__text:00000001000023C4                 mov     rsi, [rbp+var_738]
__text:00000001000023CB                 mov     rdx, rax
__text:00000001000023CE                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:00000001000023D3                 lea     rax, [rbp+var_608]
__text:00000001000023DA                 mov     [rbp+var_F0], rax
__text:00000001000023E1                 lea     rax, a8         ; "8"
__text:00000001000023E8                 mov     [rbp+var_F8], rax
__text:00000001000023EF                 mov     rdx, [rbp+var_F0]
__text:00000001000023F6                 mov     [rbp+var_E0], rdx
__text:00000001000023FD                 mov     [rbp+var_E8], rax
__text:0000000100002404                 mov     rax, [rbp+var_E0]
__text:000000010000240B                 mov     [rbp+var_D8], rax
__text:0000000100002412                 mov     [rbp+var_D0], rax
__text:0000000100002419                 mov     [rbp+var_C8], rax
__text:0000000100002420                 mov     [rbp+var_C0], rax
__text:0000000100002427                 mov     rdx, [rbp+var_E8]
__text:000000010000242E                 mov     [rbp+var_B8], rdx
__text:0000000100002435                 mov     rdi, rdx        ; char *
__text:0000000100002438                 mov     [rbp+var_748], rax
__text:000000010000243F                 mov     [rbp+var_750], rdx
__text:0000000100002446                 call    _strlen
__text:000000010000244B                 mov     [rbp+var_758], rax
__text:0000000100002452                 jmp     $+5
__text:0000000100002457 ; ---------------------------------------------------------------------------
__text:0000000100002457
__text:0000000100002457 loc_100002457:                          ; CODE XREF: _main+992↑j
__text:0000000100002457                 mov     rdi, [rbp+var_748]
__text:000000010000245E                 mov     rsi, [rbp+var_750]
__text:0000000100002465                 mov     rdx, [rbp+var_758]
__text:000000010000246C                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100002471                 jmp     $+5
__text:0000000100002476 ; ---------------------------------------------------------------------------
__text:0000000100002476
__text:0000000100002476 loc_100002476:                          ; CODE XREF: _main+9B1↑j
__text:0000000100002476                 jmp     $+5
__text:000000010000247B ; ---------------------------------------------------------------------------
__text:000000010000247B
__text:000000010000247B loc_10000247B:                          ; CODE XREF: _main:loc_100002476↑j
__text:000000010000247B                 lea     rdi, [rbp+var_5F0]
__text:0000000100002482                 lea     rsi, [rbp+var_608]
__text:0000000100002489                 call    __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ ; add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)
__text:000000010000248E                 jmp     $+5
__text:0000000100002493 ; ---------------------------------------------------------------------------
__text:0000000100002493
__text:0000000100002493 loc_100002493:                          ; CODE XREF: _main+9CE↑j
__text:0000000100002493                 lea     rdi, [rbp+var_608]
__text:000000010000249A                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:000000010000249F                 jmp     $+5
__text:00000001000024A4 ; ---------------------------------------------------------------------------
__text:00000001000024A4
__text:00000001000024A4 loc_1000024A4:                          ; CODE XREF: _main+9DF↑j
__text:00000001000024A4                 lea     rdi, [rbp+var_5F0]
__text:00000001000024AB                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000024B0                 lea     rdi, [rbp+var_620]
__text:00000001000024B7                 mov     [rbp+var_A8], rdi
__text:00000001000024BE                 lea     rdi, aG         ; "g"
__text:00000001000024C5                 mov     [rbp+var_B0], rdi
__text:00000001000024CC                 mov     rax, [rbp+var_A8]
__text:00000001000024D3                 mov     [rbp+var_98], rax
__text:00000001000024DA                 mov     [rbp+var_A0], rdi
__text:00000001000024E1                 mov     rax, [rbp+var_98]
__text:00000001000024E8                 mov     [rbp+var_90], rax
__text:00000001000024EF                 mov     [rbp+var_88], rax
__text:00000001000024F6                 mov     [rbp+var_80], rax
__text:00000001000024FA                 mov     [rbp+var_78], rax
__text:00000001000024FE                 mov     rdi, [rbp+var_A0] ; char *
__text:0000000100002505                 mov     [rbp+var_70], rdi
__text:0000000100002509                 mov     [rbp+var_760], rdi
__text:0000000100002510                 mov     [rbp+var_768], rax
__text:0000000100002517                 call    _strlen
__text:000000010000251C                 mov     rdi, [rbp+var_768]
__text:0000000100002523                 mov     rsi, [rbp+var_760]
__text:000000010000252A                 mov     rdx, rax
__text:000000010000252D                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:0000000100002532                 lea     rax, [rbp+var_638]
__text:0000000100002539                 mov     [rbp+var_60], rax
__text:000000010000253D                 lea     rax, a9         ; "9"
__text:0000000100002544                 mov     [rbp+var_68], rax
__text:0000000100002548                 mov     rdx, [rbp+var_60]
__text:000000010000254C                 mov     [rbp+var_50], rdx
__text:0000000100002550                 mov     [rbp+var_58], rax
__text:0000000100002554                 mov     rax, [rbp+var_50]
__text:0000000100002558                 mov     [rbp+var_48], rax
__text:000000010000255C                 mov     [rbp+var_40], rax
__text:0000000100002560                 mov     [rbp+var_38], rax
__text:0000000100002564                 mov     [rbp+var_30], rax
__text:0000000100002568                 mov     rdx, [rbp+var_58]
__text:000000010000256C                 mov     [rbp+var_28], rdx
__text:0000000100002570                 mov     rdi, rdx        ; char *
__text:0000000100002573                 mov     [rbp+var_770], rax
__text:000000010000257A                 mov     [rbp+var_778], rdx
__text:0000000100002581                 call    _strlen
__text:0000000100002586                 mov     [rbp+var_780], rax
__text:000000010000258D                 jmp     $+5
__text:0000000100002592 ; ---------------------------------------------------------------------------
__text:0000000100002592
__text:0000000100002592 loc_100002592:                          ; CODE XREF: _main+ACD↑j
__text:0000000100002592                 mov     rdi, [rbp+var_770]
__text:0000000100002599                 mov     rsi, [rbp+var_778]
__text:00000001000025A0                 mov     rdx, [rbp+var_780]
__text:00000001000025A7                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEPKcm ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(char const*,ulong)
__text:00000001000025AC                 jmp     $+5
__text:00000001000025B1 ; ---------------------------------------------------------------------------
__text:00000001000025B1
__text:00000001000025B1 loc_1000025B1:                          ; CODE XREF: _main+AEC↑j
__text:00000001000025B1                 jmp     $+5
__text:00000001000025B6 ; ---------------------------------------------------------------------------
__text:00000001000025B6
__text:00000001000025B6 loc_1000025B6:                          ; CODE XREF: _main:loc_1000025B1↑j
__text:00000001000025B6                 lea     rdi, [rbp+var_620]
__text:00000001000025BD                 lea     rsi, [rbp+var_638]
__text:00000001000025C4                 call    __Z3addNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEES5_ ; add(std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>,std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>)
__text:00000001000025C9                 jmp     $+5
__text:00000001000025CE ; ---------------------------------------------------------------------------
__text:00000001000025CE
__text:00000001000025CE loc_1000025CE:                          ; CODE XREF: _main+B09↑j
__text:00000001000025CE                 lea     rdi, [rbp+var_638]
__text:00000001000025D5                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000025DA                 jmp     $+5
__text:00000001000025DF ; ---------------------------------------------------------------------------
__text:00000001000025DF
__text:00000001000025DF loc_1000025DF:                          ; CODE XREF: _main+B1A↑j
__text:00000001000025DF                 lea     rdi, [rbp+var_620]
__text:00000001000025E6                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000025EB                 mov     rdi, cs:__ZNSt3__13cinE_ptr
__text:00000001000025F2                 lea     rsi, [rbp+var_63C]
__text:00000001000025F9                 call    __ZNSt3__113basic_istreamIcNS_11char_traitsIcEEErsERi ; std::__1::basic_istream<char,std::__1::char_traits<char>>::operator>>(int &)
__text:00000001000025FE                 mov     [rbp+var_640], 0
__text:0000000100002608                 mov     [rbp+var_788], rax
__text:000000010000260F
__text:000000010000260F loc_10000260F:                          ; CODE XREF: _main+C12↓j
__text:000000010000260F                 mov     eax, [rbp+var_640]
__text:0000000100002615                 cmp     eax, [rbp+var_63C]
__text:000000010000261B                 jge     loc_10000294F
__text:0000000100002621                 mov     rdi, cs:__ZNSt3__14cerrE_ptr
__text:0000000100002628                 mov     esi, [rbp+var_640]
__text:000000010000262E                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
__text:0000000100002633                 lea     rsi, asc_100009ECF ; "/"
__text:000000010000263A                 mov     rdi, rax
__text:000000010000263D                 call    j___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)
__text:0000000100002642                 mov     esi, [rbp+var_63C]
__text:0000000100002648                 mov     rdi, rax
__text:000000010000264B                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
__text:0000000100002650                 mov     esi, 20h ; ' '
__text:0000000100002655                 mov     rdi, rax
__text:0000000100002658                 call    j___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)
__text:000000010000265D                 mov     [rbp+var_790], rax
__text:0000000100002664                 call    _clock
__text:0000000100002669                 mov     rdi, [rbp+var_790]
__text:0000000100002670                 mov     rsi, rax
__text:0000000100002673                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(ulong)
__text:0000000100002678                 lea     rsi, __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ ; std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)
__text:000000010000267F                 mov     [rbp+var_18], rax
__text:0000000100002683                 mov     [rbp+var_20], rsi
__text:0000000100002687                 mov     rdi, [rbp+var_18]
__text:000000010000268B                 call    [rbp+var_20]
__text:000000010000268E                 mov     [rbp+var_798], rax
__text:0000000100002695                 call    __Z4readv       ; read(void)
__text:000000010000269A                 lea     rdi, aCaseD     ; "Case #%d: "
__text:00000001000026A1                 mov     ecx, [rbp+var_640]
__text:00000001000026A7                 add     ecx, 1
__text:00000001000026AD                 mov     esi, ecx
__text:00000001000026AF                 mov     al, 0
__text:00000001000026B1                 call    _printf
__text:00000001000026B6                 mov     [rbp+var_79C], eax
__text:00000001000026BC                 call    __Z5solvev      ; solve(void)
__text:00000001000026C1                 mov     eax, [rbp+var_640]
__text:00000001000026C7                 add     eax, 1
__text:00000001000026CC                 mov     [rbp+var_640], eax
__text:00000001000026D2                 jmp     loc_10000260F
__text:00000001000026D7 ; ---------------------------------------------------------------------------
__text:00000001000026D7                 mov     ecx, edx
__text:00000001000026D9                 mov     [rbp+var_4E0], rax
__text:00000001000026E0                 mov     [rbp+var_4E4], ecx
__text:00000001000026E6                 jmp     loc_100002710
__text:00000001000026EB ; ---------------------------------------------------------------------------
__text:00000001000026EB                 mov     ecx, edx
__text:00000001000026ED                 mov     [rbp+var_4E0], rax
__text:00000001000026F4                 mov     [rbp+var_4E4], ecx
__text:00000001000026FA                 lea     rdi, [rbp+var_4D8]
__text:0000000100002701                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002706                 jmp     $+5
__text:000000010000270B ; ---------------------------------------------------------------------------
__text:000000010000270B
__text:000000010000270B loc_10000270B:                          ; CODE XREF: _main+C46↑j
__text:000000010000270B                 jmp     $+5
__text:0000000100002710 ; ---------------------------------------------------------------------------
__text:0000000100002710
__text:0000000100002710 loc_100002710:                          ; CODE XREF: _main+C26↑j
__text:0000000100002710                                         ; _main:loc_10000270B↑j
__text:0000000100002710                 lea     rdi, [rbp+var_4C0]
__text:0000000100002717                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:000000010000271C                 jmp     $+5
__text:0000000100002721 ; ---------------------------------------------------------------------------
__text:0000000100002721
__text:0000000100002721 loc_100002721:                          ; CODE XREF: _main+C5C↑j
__text:0000000100002721                 jmp     loc_1000029DF
__text:0000000100002726 ; ---------------------------------------------------------------------------
__text:0000000100002726                 mov     ecx, edx
__text:0000000100002728                 mov     [rbp+var_4E0], rax
__text:000000010000272F                 mov     [rbp+var_4E4], ecx
__text:0000000100002735                 jmp     loc_10000275F
__text:000000010000273A ; ---------------------------------------------------------------------------
__text:000000010000273A                 mov     ecx, edx
__text:000000010000273C                 mov     [rbp+var_4E0], rax
__text:0000000100002743                 mov     [rbp+var_4E4], ecx
__text:0000000100002749                 lea     rdi, [rbp+var_518]
__text:0000000100002750                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002755                 jmp     $+5
__text:000000010000275A ; ---------------------------------------------------------------------------
__text:000000010000275A
__text:000000010000275A loc_10000275A:                          ; CODE XREF: _main+C95↑j
__text:000000010000275A                 jmp     $+5
__text:000000010000275F ; ---------------------------------------------------------------------------
__text:000000010000275F
__text:000000010000275F loc_10000275F:                          ; CODE XREF: _main+C75↑j
__text:000000010000275F                                         ; _main:loc_10000275A↑j
__text:000000010000275F                 lea     rdi, [rbp+var_500]
__text:0000000100002766                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:000000010000276B                 jmp     $+5
__text:0000000100002770 ; ---------------------------------------------------------------------------
__text:0000000100002770
__text:0000000100002770 loc_100002770:                          ; CODE XREF: _main+CAB↑j
__text:0000000100002770                 jmp     loc_1000029DF
__text:0000000100002775 ; ---------------------------------------------------------------------------
__text:0000000100002775                 mov     ecx, edx
__text:0000000100002777                 mov     [rbp+var_4E0], rax
__text:000000010000277E                 mov     [rbp+var_4E4], ecx
__text:0000000100002784                 jmp     loc_1000027AE
__text:0000000100002789 ; ---------------------------------------------------------------------------
__text:0000000100002789                 mov     ecx, edx
__text:000000010000278B                 mov     [rbp+var_4E0], rax
__text:0000000100002792                 mov     [rbp+var_4E4], ecx
__text:0000000100002798                 lea     rdi, [rbp+var_548]
__text:000000010000279F                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000027A4                 jmp     $+5
__text:00000001000027A9 ; ---------------------------------------------------------------------------
__text:00000001000027A9
__text:00000001000027A9 loc_1000027A9:                          ; CODE XREF: _main+CE4↑j
__text:00000001000027A9                 jmp     $+5
__text:00000001000027AE ; ---------------------------------------------------------------------------
__text:00000001000027AE
__text:00000001000027AE loc_1000027AE:                          ; CODE XREF: _main+CC4↑j
__text:00000001000027AE                                         ; _main:loc_1000027A9↑j
__text:00000001000027AE                 lea     rdi, [rbp+var_530]
__text:00000001000027B5                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000027BA                 jmp     $+5
__text:00000001000027BF ; ---------------------------------------------------------------------------
__text:00000001000027BF
__text:00000001000027BF loc_1000027BF:                          ; CODE XREF: _main+CFA↑j
__text:00000001000027BF                 jmp     loc_1000029DF
__text:00000001000027C4 ; ---------------------------------------------------------------------------
__text:00000001000027C4                 mov     ecx, edx
__text:00000001000027C6                 mov     [rbp+var_4E0], rax
__text:00000001000027CD                 mov     [rbp+var_4E4], ecx
__text:00000001000027D3                 jmp     loc_1000027FD
__text:00000001000027D8 ; ---------------------------------------------------------------------------
__text:00000001000027D8                 mov     ecx, edx
__text:00000001000027DA                 mov     [rbp+var_4E0], rax
__text:00000001000027E1                 mov     [rbp+var_4E4], ecx
__text:00000001000027E7                 lea     rdi, [rbp+var_578]
__text:00000001000027EE                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000027F3                 jmp     $+5
__text:00000001000027F8 ; ---------------------------------------------------------------------------
__text:00000001000027F8
__text:00000001000027F8 loc_1000027F8:                          ; CODE XREF: _main+D33↑j
__text:00000001000027F8                 jmp     $+5
__text:00000001000027FD ; ---------------------------------------------------------------------------
__text:00000001000027FD
__text:00000001000027FD loc_1000027FD:                          ; CODE XREF: _main+D13↑j
__text:00000001000027FD                                         ; _main:loc_1000027F8↑j
__text:00000001000027FD                 lea     rdi, [rbp+var_560]
__text:0000000100002804                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002809                 jmp     $+5
__text:000000010000280E ; ---------------------------------------------------------------------------
__text:000000010000280E
__text:000000010000280E loc_10000280E:                          ; CODE XREF: _main+D49↑j
__text:000000010000280E                 jmp     loc_1000029DF
__text:0000000100002813 ; ---------------------------------------------------------------------------
__text:0000000100002813                 mov     ecx, edx
__text:0000000100002815                 mov     [rbp+var_4E0], rax
__text:000000010000281C                 mov     [rbp+var_4E4], ecx
__text:0000000100002822                 jmp     loc_10000284C
__text:0000000100002827 ; ---------------------------------------------------------------------------
__text:0000000100002827                 mov     ecx, edx
__text:0000000100002829                 mov     [rbp+var_4E0], rax
__text:0000000100002830                 mov     [rbp+var_4E4], ecx
__text:0000000100002836                 lea     rdi, [rbp+var_5A8]
__text:000000010000283D                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002842                 jmp     $+5
__text:0000000100002847 ; ---------------------------------------------------------------------------
__text:0000000100002847
__text:0000000100002847 loc_100002847:                          ; CODE XREF: _main+D82↑j
__text:0000000100002847                 jmp     $+5
__text:000000010000284C ; ---------------------------------------------------------------------------
__text:000000010000284C
__text:000000010000284C loc_10000284C:                          ; CODE XREF: _main+D62↑j
__text:000000010000284C                                         ; _main:loc_100002847↑j
__text:000000010000284C                 lea     rdi, [rbp+var_590]
__text:0000000100002853                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002858                 jmp     $+5
__text:000000010000285D ; ---------------------------------------------------------------------------
__text:000000010000285D
__text:000000010000285D loc_10000285D:                          ; CODE XREF: _main+D98↑j
__text:000000010000285D                 jmp     loc_1000029DF
__text:0000000100002862 ; ---------------------------------------------------------------------------
__text:0000000100002862                 mov     ecx, edx
__text:0000000100002864                 mov     [rbp+var_4E0], rax
__text:000000010000286B                 mov     [rbp+var_4E4], ecx
__text:0000000100002871                 jmp     loc_10000289B
__text:0000000100002876 ; ---------------------------------------------------------------------------
__text:0000000100002876                 mov     ecx, edx
__text:0000000100002878                 mov     [rbp+var_4E0], rax
__text:000000010000287F                 mov     [rbp+var_4E4], ecx
__text:0000000100002885                 lea     rdi, [rbp+var_5D8]
__text:000000010000288C                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002891                 jmp     $+5
__text:0000000100002896 ; ---------------------------------------------------------------------------
__text:0000000100002896
__text:0000000100002896 loc_100002896:                          ; CODE XREF: _main+DD1↑j
__text:0000000100002896                 jmp     $+5
__text:000000010000289B ; ---------------------------------------------------------------------------
__text:000000010000289B
__text:000000010000289B loc_10000289B:                          ; CODE XREF: _main+DB1↑j
__text:000000010000289B                                         ; _main:loc_100002896↑j
__text:000000010000289B                 lea     rdi, [rbp+var_5C0]
__text:00000001000028A2                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000028A7                 jmp     $+5
__text:00000001000028AC ; ---------------------------------------------------------------------------
__text:00000001000028AC
__text:00000001000028AC loc_1000028AC:                          ; CODE XREF: _main+DE7↑j
__text:00000001000028AC                 jmp     loc_1000029DF
__text:00000001000028B1 ; ---------------------------------------------------------------------------
__text:00000001000028B1                 mov     ecx, edx
__text:00000001000028B3                 mov     [rbp+var_4E0], rax
__text:00000001000028BA                 mov     [rbp+var_4E4], ecx
__text:00000001000028C0                 jmp     loc_1000028EA
__text:00000001000028C5 ; ---------------------------------------------------------------------------
__text:00000001000028C5                 mov     ecx, edx
__text:00000001000028C7                 mov     [rbp+var_4E0], rax
__text:00000001000028CE                 mov     [rbp+var_4E4], ecx
__text:00000001000028D4                 lea     rdi, [rbp+var_608]
__text:00000001000028DB                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000028E0                 jmp     $+5
__text:00000001000028E5 ; ---------------------------------------------------------------------------
__text:00000001000028E5
__text:00000001000028E5 loc_1000028E5:                          ; CODE XREF: _main+E20↑j
__text:00000001000028E5                 jmp     $+5
__text:00000001000028EA ; ---------------------------------------------------------------------------
__text:00000001000028EA
__text:00000001000028EA loc_1000028EA:                          ; CODE XREF: _main+E00↑j
__text:00000001000028EA                                         ; _main:loc_1000028E5↑j
__text:00000001000028EA                 lea     rdi, [rbp+var_5F0]
__text:00000001000028F1                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000028F6                 jmp     $+5
__text:00000001000028FB ; ---------------------------------------------------------------------------
__text:00000001000028FB
__text:00000001000028FB loc_1000028FB:                          ; CODE XREF: _main+E36↑j
__text:00000001000028FB                 jmp     loc_1000029DF
__text:0000000100002900 ; ---------------------------------------------------------------------------
__text:0000000100002900                 mov     ecx, edx
__text:0000000100002902                 mov     [rbp+var_4E0], rax
__text:0000000100002909                 mov     [rbp+var_4E4], ecx
__text:000000010000290F                 jmp     loc_100002939
__text:0000000100002914 ; ---------------------------------------------------------------------------
__text:0000000100002914                 mov     ecx, edx
__text:0000000100002916                 mov     [rbp+var_4E0], rax
__text:000000010000291D                 mov     [rbp+var_4E4], ecx
__text:0000000100002923                 lea     rdi, [rbp+var_638]
__text:000000010000292A                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:000000010000292F                 jmp     $+5
__text:0000000100002934 ; ---------------------------------------------------------------------------
__text:0000000100002934
__text:0000000100002934 loc_100002934:                          ; CODE XREF: _main+E6F↑j
__text:0000000100002934                 jmp     $+5
__text:0000000100002939 ; ---------------------------------------------------------------------------
__text:0000000100002939
__text:0000000100002939 loc_100002939:                          ; CODE XREF: _main+E4F↑j
__text:0000000100002939                                         ; _main:loc_100002934↑j
__text:0000000100002939                 lea     rdi, [rbp+var_620]
__text:0000000100002940                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:0000000100002945                 jmp     $+5
__text:000000010000294A ; ---------------------------------------------------------------------------
__text:000000010000294A
__text:000000010000294A loc_10000294A:                          ; CODE XREF: _main+E85↑j
__text:000000010000294A                 jmp     loc_1000029DF
__text:000000010000294F ; ---------------------------------------------------------------------------
__text:000000010000294F
__text:000000010000294F loc_10000294F:                          ; CODE XREF: _main+B5B↑j
__text:000000010000294F                 mov     rdi, cs:__ZNSt3__14cerrE_ptr
__text:0000000100002956                 mov     esi, [rbp+var_63C]
__text:000000010000295C                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
__text:0000000100002961                 lea     rsi, asc_100009ECF ; "/"
__text:0000000100002968                 mov     rdi, rax
__text:000000010000296B                 call    j___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)
__text:0000000100002970                 mov     esi, [rbp+var_63C]
__text:0000000100002976                 mov     rdi, rax
__text:0000000100002979                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(int)
__text:000000010000297E                 mov     esi, 20h ; ' '
__text:0000000100002983                 mov     rdi, rax
__text:0000000100002986                 call    j___ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)
__text:000000010000298B                 mov     [rbp+var_7A8], rax
__text:0000000100002992                 call    _clock
__text:0000000100002997                 mov     rdi, [rbp+var_7A8]
__text:000000010000299E                 mov     rsi, rax
__text:00000001000029A1                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::operator<<(ulong)
__text:00000001000029A6                 mov     ecx, 0
__text:00000001000029AB                 lea     rsi, __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ ; std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)
__text:00000001000029B2                 mov     [rbp+var_8], rax
__text:00000001000029B6                 mov     [rbp+var_10], rsi
__text:00000001000029BA                 mov     rdi, [rbp+var_8]
__text:00000001000029BE                 mov     [rbp+var_7AC], ecx
__text:00000001000029C4                 call    [rbp+var_10]
__text:00000001000029C7                 mov     ecx, [rbp+var_7AC]
__text:00000001000029CD                 mov     [rbp+var_7B8], rax
__text:00000001000029D4                 mov     eax, ecx
__text:00000001000029D6                 add     rsp, 7C0h
__text:00000001000029DD                 pop     rbp
__text:00000001000029DE                 retn
__text:00000001000029DF ; ---------------------------------------------------------------------------
__text:00000001000029DF
__text:00000001000029DF loc_1000029DF:                          ; CODE XREF: _main:loc_100002721↑j
__text:00000001000029DF                                         ; _main:loc_100002770↑j ...
__text:00000001000029DF                 mov     rdi, [rbp+var_4E0]
__text:00000001000029E6                 call    __Unwind_Resume
__text:00000001000029E6 _main           endp
__text:00000001000029E6
__text:00000001000029EB ; ---------------------------------------------------------------------------
__text:00000001000029EB                 mov     ecx, edx
__text:00000001000029ED                 mov     rdi, rax
__text:00000001000029F0                 mov     [rbp-7BCh], ecx
__text:00000001000029F6                 call    ___clang_call_terminate
__text:00000001000029F6 ; ---------------------------------------------------------------------------
__text:00000001000029FB                 align 20h
__text:0000000100002A00
__text:0000000100002A00 ; =============== S U B R O U T I N E =======================================
__text:0000000100002A00
__text:0000000100002A00 ; Attributes: bp-based frame
__text:0000000100002A00
__text:0000000100002A00 ___cxx_global_var_init proc near        ; CODE XREF: `global constructor keyed to'_a+4↓p
__text:0000000100002A00
__text:0000000100002A00 var_5C          = dword ptr -5Ch
__text:0000000100002A00 var_58          = byte ptr -58h
__text:0000000100002A00 var_50          = qword ptr -50h
__text:0000000100002A00 var_48          = qword ptr -48h
__text:0000000100002A00 var_38          = byte ptr -38h
__text:0000000100002A00 var_30          = qword ptr -30h
__text:0000000100002A00 var_28          = qword ptr -28h
__text:0000000100002A00 var_18          = qword ptr -18h
__text:0000000100002A00 var_8           = qword ptr -8
__text:0000000100002A00
__text:0000000100002A00                 push    rbp
__text:0000000100002A01                 mov     rbp, rsp
__text:0000000100002A04                 sub     rsp, 60h
__text:0000000100002A08                 lea     rax, [rbp+var_38]
__text:0000000100002A0C                 lea     rcx, [rbp+var_58]
__text:0000000100002A10                 lea     rdx, _ma
__text:0000000100002A17                 mov     [rbp+var_48], rdx
__text:0000000100002A1B                 mov     [rbp+var_50], rcx
__text:0000000100002A1F                 mov     rcx, [rbp+var_48]
__text:0000000100002A23                 mov     rdx, [rbp+var_50]
__text:0000000100002A27                 mov     [rbp+var_28], rcx
__text:0000000100002A2B                 mov     [rbp+var_30], rdx
__text:0000000100002A2F                 mov     rdi, [rbp+var_28]
__text:0000000100002A33                 mov     [rbp+var_18], rax
__text:0000000100002A37                 mov     rcx, [rbp+var_18]
__text:0000000100002A3B                 mov     [rbp+var_8], rcx
__text:0000000100002A3F                 mov     rsi, rax
__text:0000000100002A42                 call    j___ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEEC1ERKS6_ ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__tree(std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true> const&)
__text:0000000100002A47                 mov     rax, cs:__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEED1Ev_ptr
__text:0000000100002A4E                 lea     rcx, _ma
__text:0000000100002A55                 lea     rdx, __mh_execute_header ; lpdso_handle
__text:0000000100002A5C                 mov     rdi, rax        ; lpfunc
__text:0000000100002A5F                 mov     rsi, rcx        ; obj
__text:0000000100002A62                 call    ___cxa_atexit
__text:0000000100002A67                 mov     [rbp+var_5C], eax
__text:0000000100002A6A                 add     rsp, 60h
__text:0000000100002A6E                 pop     rbp
__text:0000000100002A6F                 retn
__text:0000000100002A6F ___cxx_global_var_init endp
__text:0000000100002A6F
__text:0000000100002A70
__text:0000000100002A70 ; =============== S U B R O U T I N E =======================================
__text:0000000100002A70
__text:0000000100002A70 ; Attributes: bp-based frame
__text:0000000100002A70
__text:0000000100002A70 ___cxx_global_var_init1 proc near       ; CODE XREF: `global constructor keyed to'_a+9↓p
__text:0000000100002A70
__text:0000000100002A70 var_5C          = dword ptr -5Ch
__text:0000000100002A70 var_58          = qword ptr -58h
__text:0000000100002A70 var_50          = qword ptr -50h
__text:0000000100002A70 var_48          = qword ptr -48h
__text:0000000100002A70 var_40          = qword ptr -40h
__text:0000000100002A70 var_38          = qword ptr -38h
__text:0000000100002A70 var_30          = qword ptr -30h
__text:0000000100002A70 var_24          = dword ptr -24h
__text:0000000100002A70 var_20          = qword ptr -20h
__text:0000000100002A70 var_18          = qword ptr -18h
__text:0000000100002A70 var_10          = qword ptr -10h
__text:0000000100002A70 var_8           = qword ptr -8
__text:0000000100002A70
__text:0000000100002A70                 push    rbp
__text:0000000100002A71                 mov     rbp, rsp
__text:0000000100002A74                 sub     rsp, 60h
__text:0000000100002A78                 lea     rax, _s
__text:0000000100002A7F                 mov     [rbp+var_58], rax
__text:0000000100002A83                 mov     rax, [rbp+var_58]
__text:0000000100002A87                 mov     [rbp+var_50], rax
__text:0000000100002A8B                 mov     rax, [rbp+var_50]
__text:0000000100002A8F                 mov     [rbp+var_48], rax
__text:0000000100002A93                 mov     rcx, [rbp+var_48]
__text:0000000100002A97                 mov     [rbp+var_40], rcx
__text:0000000100002A9B                 mov     rcx, [rbp+var_40]
__text:0000000100002A9F                 mov     [rbp+var_38], rcx
__text:0000000100002AA3                 mov     rcx, [rbp+var_38]
__text:0000000100002AA7                 mov     [rbp+var_30], rcx
__text:0000000100002AAB                 mov     [rbp+var_18], rax
__text:0000000100002AAF                 mov     rax, [rbp+var_18]
__text:0000000100002AB3                 mov     [rbp+var_10], rax
__text:0000000100002AB7                 mov     rax, [rbp+var_10]
__text:0000000100002ABB                 mov     [rbp+var_8], rax
__text:0000000100002ABF                 mov     rax, [rbp+var_8]
__text:0000000100002AC3                 mov     [rbp+var_20], rax
__text:0000000100002AC7                 mov     [rbp+var_24], 0
__text:0000000100002ACE
__text:0000000100002ACE loc_100002ACE:                          ; CODE XREF: ___cxx_global_var_init1+87↓j
__text:0000000100002ACE                 cmp     [rbp+var_24], 3
__text:0000000100002AD5                 jnb     loc_100002AFC
__text:0000000100002ADB                 mov     eax, [rbp+var_24]
__text:0000000100002ADE                 mov     ecx, eax
__text:0000000100002AE0                 mov     rdx, [rbp+var_20]
__text:0000000100002AE4                 mov     qword ptr [rdx+rcx*8], 0
__text:0000000100002AEC                 mov     eax, [rbp+var_24]
__text:0000000100002AEF                 add     eax, 1
__text:0000000100002AF4                 mov     [rbp+var_24], eax
__text:0000000100002AF7                 jmp     loc_100002ACE
__text:0000000100002AFC ; ---------------------------------------------------------------------------
__text:0000000100002AFC
__text:0000000100002AFC loc_100002AFC:                          ; CODE XREF: ___cxx_global_var_init1+65↑j
__text:0000000100002AFC                 mov     rax, cs:__ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev_ptr
__text:0000000100002B03                 lea     rcx, _s
__text:0000000100002B0A                 lea     rdx, __mh_execute_header ; lpdso_handle
__text:0000000100002B11                 mov     rdi, rax        ; lpfunc
__text:0000000100002B14                 mov     rsi, rcx        ; obj
__text:0000000100002B17                 call    ___cxa_atexit
__text:0000000100002B1C                 mov     [rbp+var_5C], eax
__text:0000000100002B1F                 add     rsp, 60h
__text:0000000100002B23                 pop     rbp
__text:0000000100002B24                 retn
__text:0000000100002B24 ___cxx_global_var_init1 endp
__text:0000000100002B24
__text:0000000100002B24 ; ---------------------------------------------------------------------------
__text:0000000100002B25                 align 10h
__text:0000000100002B30
__text:0000000100002B30 ; =============== S U B R O U T I N E =======================================
__text:0000000100002B30
__text:0000000100002B30 ; Attributes: bp-based frame
__text:0000000100002B30
__text:0000000100002B30 ___cxx_global_var_init2 proc near       ; CODE XREF: `global constructor keyed to'_a+E↓p
__text:0000000100002B30
__text:0000000100002B30 var_2C          = dword ptr -2Ch
__text:0000000100002B30 var_28          = byte ptr -28h
__text:0000000100002B30 var_20          = qword ptr -20h
__text:0000000100002B30 var_18          = qword ptr -18h
__text:0000000100002B30 var_10          = qword ptr -10h
__text:0000000100002B30 var_8           = qword ptr -8
__text:0000000100002B30
__text:0000000100002B30                 push    rbp
__text:0000000100002B31                 mov     rbp, rsp
__text:0000000100002B34                 sub     rsp, 30h
__text:0000000100002B38                 lea     rax, [rbp+var_28]
__text:0000000100002B3C                 lea     rcx, _g
__text:0000000100002B43                 mov     [rbp+var_18], rcx
__text:0000000100002B47                 mov     [rbp+var_20], rax
__text:0000000100002B4B                 mov     rax, [rbp+var_18]
__text:0000000100002B4F                 mov     rcx, [rbp+var_20]
__text:0000000100002B53                 mov     [rbp+var_8], rax
__text:0000000100002B57                 mov     [rbp+var_10], rcx
__text:0000000100002B5B                 mov     rdi, [rbp+var_8]
__text:0000000100002B5F                 mov     rsi, [rbp+var_10]
__text:0000000100002B63                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__tree(std::__1::less<std::__1::pair<int,int>> const&)
__text:0000000100002B68                 mov     rax, cs:__ZNSt3__13setINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev_ptr
__text:0000000100002B6F                 lea     rcx, _g
__text:0000000100002B76                 lea     rdx, __mh_execute_header ; lpdso_handle
__text:0000000100002B7D                 mov     rdi, rax        ; lpfunc
__text:0000000100002B80                 mov     rsi, rcx        ; obj
__text:0000000100002B83                 call    ___cxa_atexit
__text:0000000100002B88                 mov     [rbp+var_2C], eax
__text:0000000100002B8B                 add     rsp, 30h
__text:0000000100002B8F                 pop     rbp
__text:0000000100002B90                 retn
__text:0000000100002B90 ___cxx_global_var_init2 endp
__text:0000000100002B90
__text:0000000100002B90 ; ---------------------------------------------------------------------------
__text:0000000100002B91                 align 20h
__text:0000000100002BA0
__text:0000000100002BA0 ; =============== S U B R O U T I N E =======================================
__text:0000000100002BA0
__text:0000000100002BA0 ; Attributes: bp-based frame
__text:0000000100002BA0
__text:0000000100002BA0 ; `global constructor keyed to'_a
__text:0000000100002BA0                 public __GLOBAL__I_a
__text:0000000100002BA0 __GLOBAL__I_a   proc near               ; DATA XREF: __mod_init_func:000000010000A210↓o
__text:0000000100002BA0                 push    rbp
__text:0000000100002BA1                 mov     rbp, rsp
__text:0000000100002BA4                 call    ___cxx_global_var_init
__text:0000000100002BA9                 call    ___cxx_global_var_init1
__text:0000000100002BAE                 call    ___cxx_global_var_init2
__text:0000000100002BB3                 pop     rbp
__text:0000000100002BB4                 retn
__text:0000000100002BB4 __GLOBAL__I_a   endp
__text:0000000100002BB4
__text:0000000100002BB4 ; ---------------------------------------------------------------------------
__text:0000000100002BB5                 align 20h
__text:0000000100002BC0
__text:0000000100002BC0 ; =============== S U B R O U T I N E =======================================
__text:0000000100002BC0
__text:0000000100002BC0 ; Attributes: bp-based frame
__text:0000000100002BC0
__text:0000000100002BC0 ; std::__1::map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, int>>>::~map()
__text:0000000100002BC0 __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEED1Ev proc near
__text:0000000100002BC0                                         ; DATA XREF: __got:__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEED1Ev_ptr↓o
__text:0000000100002BC0
__text:0000000100002BC0 var_8           = qword ptr -8
__text:0000000100002BC0
__text:0000000100002BC0                 push    rbp
__text:0000000100002BC1                 mov     rbp, rsp
__text:0000000100002BC4                 sub     rsp, 10h
__text:0000000100002BC8                 mov     [rbp+var_8], rdi
__text:0000000100002BCC                 mov     rdi, [rbp+var_8]
__text:0000000100002BD0                 call    j___ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEED2Ev ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::~map()
__text:0000000100002BD5                 add     rsp, 10h
__text:0000000100002BD9                 pop     rbp
__text:0000000100002BDA                 retn
__text:0000000100002BDA __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEED1Ev endp
__text:0000000100002BDA
__text:0000000100002BDA ; ---------------------------------------------------------------------------
__text:0000000100002BDB                 align 20h
__text:0000000100002BE0
__text:0000000100002BE0 ; =============== S U B R O U T I N E =======================================
__text:0000000100002BE0
__text:0000000100002BE0 ; Attributes: bp-based frame
__text:0000000100002BE0
__text:0000000100002BE0 ; std::__1::map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, int>>>::operator[](int const&)
__text:0000000100002BE0 __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_ proc near
__text:0000000100002BE0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5__ptr↓o
__text:0000000100002BE0
__text:0000000100002BE0 var_6E0         = qword ptr -6E0h
__text:0000000100002BE0 var_6D8         = qword ptr -6D8h
__text:0000000100002BE0 var_6D0         = qword ptr -6D0h
__text:0000000100002BE0 var_6C8         = qword ptr -6C8h
__text:0000000100002BE0 var_6C0         = qword ptr -6C0h
__text:0000000100002BE0 var_6B8         = qword ptr -6B8h
__text:0000000100002BE0 var_6B0         = qword ptr -6B0h
__text:0000000100002BE0 var_6A8         = qword ptr -6A8h
__text:0000000100002BE0 var_69C         = dword ptr -69Ch
__text:0000000100002BE0 var_698         = qword ptr -698h
__text:0000000100002BE0 var_690         = byte ptr -690h
__text:0000000100002BE0 var_678         = qword ptr -678h
__text:0000000100002BE0 var_670         = qword ptr -670h
__text:0000000100002BE0 var_658         = qword ptr -658h
__text:0000000100002BE0 var_650         = qword ptr -650h
__text:0000000100002BE0 var_648         = qword ptr -648h
__text:0000000100002BE0 var_640         = qword ptr -640h
__text:0000000100002BE0 var_638         = qword ptr -638h
__text:0000000100002BE0 var_630         = qword ptr -630h
__text:0000000100002BE0 var_628         = qword ptr -628h
__text:0000000100002BE0 var_620         = qword ptr -620h
__text:0000000100002BE0 var_618         = qword ptr -618h
__text:0000000100002BE0 var_610         = qword ptr -610h
__text:0000000100002BE0 var_608         = qword ptr -608h
__text:0000000100002BE0 var_600         = qword ptr -600h
__text:0000000100002BE0 var_5F8         = qword ptr -5F8h
__text:0000000100002BE0 var_5F0         = qword ptr -5F0h
__text:0000000100002BE0 var_5E8         = qword ptr -5E8h
__text:0000000100002BE0 var_5E0         = qword ptr -5E0h
__text:0000000100002BE0 var_5D8         = qword ptr -5D8h
__text:0000000100002BE0 var_5D0         = qword ptr -5D0h
__text:0000000100002BE0 var_5C8         = qword ptr -5C8h
__text:0000000100002BE0 var_5B0         = qword ptr -5B0h
__text:0000000100002BE0 var_5A8         = qword ptr -5A8h
__text:0000000100002BE0 var_5A0         = qword ptr -5A0h
__text:0000000100002BE0 var_598         = qword ptr -598h
__text:0000000100002BE0 var_590         = qword ptr -590h
__text:0000000100002BE0 var_588         = qword ptr -588h
__text:0000000100002BE0 var_580         = qword ptr -580h
__text:0000000100002BE0 var_578         = qword ptr -578h
__text:0000000100002BE0 var_570         = qword ptr -570h
__text:0000000100002BE0 var_558         = qword ptr -558h
__text:0000000100002BE0 var_550         = qword ptr -550h
__text:0000000100002BE0 var_548         = qword ptr -548h
__text:0000000100002BE0 var_540         = qword ptr -540h
__text:0000000100002BE0 var_528         = qword ptr -528h
__text:0000000100002BE0 var_520         = qword ptr -520h
__text:0000000100002BE0 var_518         = qword ptr -518h
__text:0000000100002BE0 var_510         = qword ptr -510h
__text:0000000100002BE0 var_508         = qword ptr -508h
__text:0000000100002BE0 var_500         = qword ptr -500h
__text:0000000100002BE0 var_4F8         = qword ptr -4F8h
__text:0000000100002BE0 var_4F0         = qword ptr -4F0h
__text:0000000100002BE0 var_4E8         = qword ptr -4E8h
__text:0000000100002BE0 var_4E0         = qword ptr -4E0h
__text:0000000100002BE0 var_4D8         = qword ptr -4D8h
__text:0000000100002BE0 var_4D0         = qword ptr -4D0h
__text:0000000100002BE0 var_4C8         = qword ptr -4C8h
__text:0000000100002BE0 var_4C0         = qword ptr -4C0h
__text:0000000100002BE0 var_4B8         = qword ptr -4B8h
__text:0000000100002BE0 var_398         = qword ptr -398h
__text:0000000100002BE0 var_390         = qword ptr -390h
__text:0000000100002BE0 var_388         = qword ptr -388h
__text:0000000100002BE0 var_380         = qword ptr -380h
__text:0000000100002BE0 var_378         = qword ptr -378h
__text:0000000100002BE0 var_370         = qword ptr -370h
__text:0000000100002BE0 var_368         = qword ptr -368h
__text:0000000100002BE0 var_360         = qword ptr -360h
__text:0000000100002BE0 var_358         = qword ptr -358h
__text:0000000100002BE0 var_350         = qword ptr -350h
__text:0000000100002BE0 var_348         = qword ptr -348h
__text:0000000100002BE0 var_340         = qword ptr -340h
__text:0000000100002BE0 var_338         = qword ptr -338h
__text:0000000100002BE0 var_330         = qword ptr -330h
__text:0000000100002BE0 var_328         = qword ptr -328h
__text:0000000100002BE0 var_320         = qword ptr -320h
__text:0000000100002BE0 var_318         = qword ptr -318h
__text:0000000100002BE0 var_310         = qword ptr -310h
__text:0000000100002BE0 var_308         = qword ptr -308h
__text:0000000100002BE0 var_300         = qword ptr -300h
__text:0000000100002BE0 var_2F8         = qword ptr -2F8h
__text:0000000100002BE0 var_2F0         = qword ptr -2F0h
__text:0000000100002BE0 var_2E8         = qword ptr -2E8h
__text:0000000100002BE0 var_2E0         = qword ptr -2E0h
__text:0000000100002BE0 var_2D8         = qword ptr -2D8h
__text:0000000100002BE0 var_2D0         = qword ptr -2D0h
__text:0000000100002BE0 var_2C8         = qword ptr -2C8h
__text:0000000100002BE0 var_2C0         = qword ptr -2C0h
__text:0000000100002BE0 var_2B8         = qword ptr -2B8h
__text:0000000100002BE0 var_2B0         = qword ptr -2B0h
__text:0000000100002BE0 var_2A8         = qword ptr -2A8h
__text:0000000100002BE0 var_2A0         = qword ptr -2A0h
__text:0000000100002BE0 var_298         = qword ptr -298h
__text:0000000100002BE0 var_290         = qword ptr -290h
__text:0000000100002BE0 var_288         = qword ptr -288h
__text:0000000100002BE0 var_280         = qword ptr -280h
__text:0000000100002BE0 var_278         = qword ptr -278h
__text:0000000100002BE0 var_270         = qword ptr -270h
__text:0000000100002BE0 var_268         = qword ptr -268h
__text:0000000100002BE0 var_260         = qword ptr -260h
__text:0000000100002BE0 var_258         = qword ptr -258h
__text:0000000100002BE0 var_250         = qword ptr -250h
__text:0000000100002BE0 var_248         = qword ptr -248h
__text:0000000100002BE0 var_230         = qword ptr -230h
__text:0000000100002BE0 var_228         = qword ptr -228h
__text:0000000100002BE0 var_220         = qword ptr -220h
__text:0000000100002BE0 var_218         = qword ptr -218h
__text:0000000100002BE0 var_210         = qword ptr -210h
__text:0000000100002BE0 var_208         = qword ptr -208h
__text:0000000100002BE0 var_200         = qword ptr -200h
__text:0000000100002BE0 var_1F8         = qword ptr -1F8h
__text:0000000100002BE0 var_1F0         = qword ptr -1F0h
__text:0000000100002BE0 var_1D8         = qword ptr -1D8h
__text:0000000100002BE0 var_1D0         = qword ptr -1D0h
__text:0000000100002BE0 var_1C8         = qword ptr -1C8h
__text:0000000100002BE0 var_1C0         = qword ptr -1C0h
__text:0000000100002BE0 var_1A8         = qword ptr -1A8h
__text:0000000100002BE0 var_1A0         = qword ptr -1A0h
__text:0000000100002BE0 var_198         = qword ptr -198h
__text:0000000100002BE0 var_190         = qword ptr -190h
__text:0000000100002BE0 var_188         = qword ptr -188h
__text:0000000100002BE0 var_180         = qword ptr -180h
__text:0000000100002BE0 var_178         = qword ptr -178h
__text:0000000100002BE0 var_170         = qword ptr -170h
__text:0000000100002BE0 var_168         = qword ptr -168h
__text:0000000100002BE0 var_160         = qword ptr -160h
__text:0000000100002BE0 var_158         = qword ptr -158h
__text:0000000100002BE0 var_150         = qword ptr -150h
__text:0000000100002BE0 var_148         = qword ptr -148h
__text:0000000100002BE0 var_140         = qword ptr -140h
__text:0000000100002BE0 var_138         = qword ptr -138h
__text:0000000100002BE0 var_130         = qword ptr -130h
__text:0000000100002BE0 var_118         = qword ptr -118h
__text:0000000100002BE0 var_110         = qword ptr -110h
__text:0000000100002BE0 var_108         = qword ptr -108h
__text:0000000100002BE0 var_100         = qword ptr -100h
__text:0000000100002BE0 var_F8          = qword ptr -0F8h
__text:0000000100002BE0 var_F0          = qword ptr -0F0h
__text:0000000100002BE0 var_E8          = qword ptr -0E8h
__text:0000000100002BE0 var_E0          = qword ptr -0E0h
__text:0000000100002BE0 var_D8          = qword ptr -0D8h
__text:0000000100002BE0 var_C0          = qword ptr -0C0h
__text:0000000100002BE0 var_B8          = qword ptr -0B8h
__text:0000000100002BE0 var_B0          = qword ptr -0B0h
__text:0000000100002BE0 var_A8          = qword ptr -0A8h
__text:0000000100002BE0 var_90          = qword ptr -90h
__text:0000000100002BE0 var_88          = qword ptr -88h
__text:0000000100002BE0 var_80          = qword ptr -80h
__text:0000000100002BE0 var_78          = qword ptr -78h
__text:0000000100002BE0 var_70          = qword ptr -70h
__text:0000000100002BE0 var_68          = qword ptr -68h
__text:0000000100002BE0 var_60          = qword ptr -60h
__text:0000000100002BE0 var_58          = qword ptr -58h
__text:0000000100002BE0 var_50          = qword ptr -50h
__text:0000000100002BE0 var_48          = qword ptr -48h
__text:0000000100002BE0 var_40          = qword ptr -40h
__text:0000000100002BE0 var_38          = qword ptr -38h
__text:0000000100002BE0 var_30          = qword ptr -30h
__text:0000000100002BE0 var_28          = qword ptr -28h
__text:0000000100002BE0 var_20          = qword ptr -20h
__text:0000000100002BE0 var_18          = qword ptr -18h
__text:0000000100002BE0 var_10          = qword ptr -10h
__text:0000000100002BE0 var_8           = qword ptr -8
__text:0000000100002BE0
__text:0000000100002BE0                 push    rbp
__text:0000000100002BE1                 mov     rbp, rsp
__text:0000000100002BE4                 sub     rsp, 6E0h
__text:0000000100002BEB                 lea     rax, [rbp+var_640]
__text:0000000100002BF2                 mov     [rbp+var_630], rdi
__text:0000000100002BF9                 mov     [rbp+var_638], rsi
__text:0000000100002C00                 mov     rsi, [rbp+var_630]
__text:0000000100002C07                 mov     rdx, [rbp+var_638]
__text:0000000100002C0E                 mov     rdi, rsi
__text:0000000100002C11                 mov     [rbp+var_6A8], rsi
__text:0000000100002C18                 mov     rsi, rax
__text:0000000100002C1B                 call    j___ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS5_ ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)
__text:0000000100002C20                 lea     rdx, [rbp+var_658]
__text:0000000100002C27                 lea     rsi, [rbp+var_628]
__text:0000000100002C2E                 mov     [rbp+var_648], rax
__text:0000000100002C35                 mov     rax, [rbp+var_648]
__text:0000000100002C3C                 mov     rax, [rax]
__text:0000000100002C3F                 mov     [rbp+var_650], rax
__text:0000000100002C46                 mov     rax, [rbp+var_648]
__text:0000000100002C4D                 mov     rax, [rax]
__text:0000000100002C50                 mov     [rbp+var_618], rsi
__text:0000000100002C57                 mov     [rbp+var_620], 0FFFFFFFFFFFFFFFFh
__text:0000000100002C62                 mov     rsi, [rbp+var_618]
__text:0000000100002C69                 mov     rdi, [rbp+var_620]
__text:0000000100002C70                 mov     [rbp+var_608], rsi
__text:0000000100002C77                 mov     [rbp+var_610], rdi
__text:0000000100002C7E                 mov     rsi, [rbp+var_608]
__text:0000000100002C85                 mov     qword ptr [rsi], 0
__text:0000000100002C8C                 mov     rsi, [rbp+var_628]
__text:0000000100002C93                 mov     [rbp+var_658], rsi
__text:0000000100002C9A                 mov     [rbp+var_600], rdx
__text:0000000100002CA1                 cmp     rax, 0
__text:0000000100002CA7                 jnz     loc_10000365B
__text:0000000100002CAD                 lea     rdi, [rbp+var_690]
__text:0000000100002CB4                 mov     rdx, [rbp+var_638]
__text:0000000100002CBB                 mov     rsi, [rbp+var_6A8]
__text:0000000100002CC2                 call    j___ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEE25__construct_node_with_keyERS5_ ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)
__text:0000000100002CC7                 lea     rdx, [rbp+var_4D8]
__text:0000000100002CCE                 lea     rsi, [rbp+var_690]
__text:0000000100002CD5                 mov     [rbp+var_4E0], rsi
__text:0000000100002CDC                 mov     rsi, [rbp+var_4E0]
__text:0000000100002CE3                 mov     [rbp+var_4C8], rdx
__text:0000000100002CEA                 mov     [rbp+var_4D0], rsi
__text:0000000100002CF1                 mov     rdx, [rbp+var_4C8]
__text:0000000100002CF8                 mov     rsi, [rbp+var_4D0]
__text:0000000100002CFF                 mov     [rbp+var_4B8], rdx
__text:0000000100002D06                 mov     [rbp+var_4C0], rsi
__text:0000000100002D0D                 mov     rdx, [rbp+var_4B8]
__text:0000000100002D14                 mov     rsi, [rbp+var_4C0]
__text:0000000100002D1B                 mov     [rdx], rsi
__text:0000000100002D1E                 mov     rdx, [rbp+var_4D8]
__text:0000000100002D25                 mov     [rbp+var_6B0], rdx
__text:0000000100002D2C                 lea     rax, [rbp+var_308]
__text:0000000100002D33                 lea     rcx, [rbp+var_2F8]
__text:0000000100002D3A                 lea     rdx, [rbp+var_330]
__text:0000000100002D41                 lea     rsi, [rbp+var_320]
__text:0000000100002D48                 lea     rdi, [rbp+var_378]
__text:0000000100002D4F                 lea     r8, [rbp+var_670]
__text:0000000100002D56                 mov     r9, [rbp+var_6B0]
__text:0000000100002D5D                 mov     [rbp+var_678], r9
__text:0000000100002D64                 mov     r10, [rbp+var_678]
__text:0000000100002D6B                 mov     [rbp+var_390], r8
__text:0000000100002D72                 mov     [rbp+var_398], r10
__text:0000000100002D79                 mov     r8, [rbp+var_390]
__text:0000000100002D80                 mov     r10, [rbp+var_398]
__text:0000000100002D87                 mov     [rbp+var_370], r8
__text:0000000100002D8E                 mov     [rbp+var_378], r10
__text:0000000100002D95                 mov     r8, [rbp+var_370]
__text:0000000100002D9C                 mov     [rbp+var_368], rdi
__text:0000000100002DA3                 mov     r10, [rbp+var_368]
__text:0000000100002DAA                 mov     r10, [r10]
__text:0000000100002DAD                 mov     [rbp+var_2A0], r10
__text:0000000100002DB4                 mov     r10, [rbp+var_2A0]
__text:0000000100002DBB                 mov     [rbp+var_298], r10
__text:0000000100002DC2                 mov     r11, [rbp+var_298]
__text:0000000100002DC9                 mov     [rbp+var_290], r11
__text:0000000100002DD0                 mov     r11, [rbp+var_290]
__text:0000000100002DD7                 mov     r11, [r11]
__text:0000000100002DDA                 mov     [rbp+var_2A8], r11
__text:0000000100002DE1                 mov     [rbp+var_288], r10
__text:0000000100002DE8                 mov     r10, [rbp+var_288]
__text:0000000100002DEF                 mov     [rbp+var_280], r10
__text:0000000100002DF6                 mov     r10, [rbp+var_280]
__text:0000000100002DFD                 mov     qword ptr [r10], 0
__text:0000000100002E04                 mov     r10, [rbp+var_2A8]
__text:0000000100002E0B                 mov     [rbp+var_2B0], rdi
__text:0000000100002E12                 mov     rdi, [rbp+var_2B0]
__text:0000000100002E19                 mov     rdi, [rdi]
__text:0000000100002E1C                 mov     [rbp+var_2C8], rdi
__text:0000000100002E23                 mov     rdi, [rbp+var_2C8]
__text:0000000100002E2A                 mov     [rbp+var_2C0], rdi
__text:0000000100002E31                 mov     rdi, [rbp+var_2C0]
__text:0000000100002E38                 mov     [rbp+var_2B8], rdi
__text:0000000100002E3F                 mov     rdi, [rbp+var_2B8]
__text:0000000100002E46                 add     rdi, 8
__text:0000000100002E4D                 mov     [rbp+var_2D0], rdi
__text:0000000100002E54                 mov     rdi, [rbp+var_2D0]
__text:0000000100002E5B                 mov     r11, [rdi]
__text:0000000100002E5E                 mov     [rbp+var_388], r11
__text:0000000100002E65                 mov     rdi, [rdi+8]
__text:0000000100002E69                 mov     [rbp+var_380], rdi
__text:0000000100002E70                 mov     rdi, [rbp+var_388]
__text:0000000100002E77                 mov     r11, [rbp+var_380]
__text:0000000100002E7E                 mov     [rbp+var_348], r8
__text:0000000100002E85                 mov     [rbp+var_350], r10
__text:0000000100002E8C                 mov     [rbp+var_360], rdi
__text:0000000100002E93                 mov     [rbp+var_358], r11
__text:0000000100002E9A                 mov     rdi, [rbp+var_348]
__text:0000000100002EA1                 mov     r8, [rbp+var_350]
__text:0000000100002EA8                 mov     r10, [rbp+var_360]
__text:0000000100002EAF                 mov     r11, [rbp+var_358]
__text:0000000100002EB6                 mov     [rbp+var_318], rdi
__text:0000000100002EBD                 mov     [rbp+var_320], r8
__text:0000000100002EC4                 mov     [rbp+var_330], r10
__text:0000000100002ECB                 mov     [rbp+var_328], r11
__text:0000000100002ED2                 mov     rdi, [rbp+var_318]
__text:0000000100002ED9                 mov     [rbp+var_310], rsi
__text:0000000100002EE0                 mov     rsi, [rbp+var_310]
__text:0000000100002EE7                 mov     rsi, [rsi]
__text:0000000100002EEA                 mov     [rbp+var_2D8], rdx
__text:0000000100002EF1                 mov     rdx, [rbp+var_2D8]
__text:0000000100002EF8                 mov     r8, [rdx]
__text:0000000100002EFB                 mov     [rbp+var_340], r8
__text:0000000100002F02                 mov     rdx, [rdx+8]
__text:0000000100002F06                 mov     [rbp+var_338], rdx
__text:0000000100002F0D                 mov     rdx, [rbp+var_340]
__text:0000000100002F14                 mov     r8, [rbp+var_338]
__text:0000000100002F1B                 mov     [rbp+var_2F0], rdi
__text:0000000100002F22                 mov     [rbp+var_2F8], rsi
__text:0000000100002F29                 mov     [rbp+var_308], rdx
__text:0000000100002F30                 mov     [rbp+var_300], r8
__text:0000000100002F37                 mov     rdx, [rbp+var_2F0]
__text:0000000100002F3E                 mov     [rbp+var_2E8], rcx
__text:0000000100002F45                 mov     rcx, [rbp+var_2E8]
__text:0000000100002F4C                 mov     rcx, [rcx]
__text:0000000100002F4F                 mov     [rdx], rcx
__text:0000000100002F52                 mov     [rbp+var_2E0], rax
__text:0000000100002F59                 mov     rax, [rbp+var_2E0]
__text:0000000100002F60                 mov     rcx, [rax]
__text:0000000100002F63                 mov     [rdx+8], rcx
__text:0000000100002F67                 mov     rax, [rax+8]
__text:0000000100002F6B                 mov     [rdx+10h], rax
__text:0000000100002F6F                 lea     rax, [rbp+var_690]
__text:0000000100002F76                 mov     [rbp+var_160], rax
__text:0000000100002F7D                 mov     rax, [rbp+var_160]
__text:0000000100002F84                 mov     [rbp+var_158], rax
__text:0000000100002F8B                 mov     rax, [rbp+var_158]
__text:0000000100002F92                 mov     [rbp+var_140], rax
__text:0000000100002F99                 mov     [rbp+var_148], 0
__text:0000000100002FA4                 mov     rax, [rbp+var_140]
__text:0000000100002FAB                 mov     [rbp+var_138], rax
__text:0000000100002FB2                 mov     rcx, [rbp+var_138]
__text:0000000100002FB9                 mov     [rbp+var_130], rcx
__text:0000000100002FC0                 mov     rcx, [rbp+var_130]
__text:0000000100002FC7                 mov     rcx, [rcx]
__text:0000000100002FCA                 mov     [rbp+var_150], rcx
__text:0000000100002FD1                 mov     rcx, [rbp+var_148]
__text:0000000100002FD8                 mov     [rbp+var_68], rax
__text:0000000100002FDC                 mov     rdx, [rbp+var_68]
__text:0000000100002FE0                 mov     [rbp+var_60], rdx
__text:0000000100002FE4                 mov     rdx, [rbp+var_60]
__text:0000000100002FE8                 mov     [rdx], rcx
__text:0000000100002FEB                 cmp     [rbp+var_150], 0
__text:0000000100002FF6                 mov     [rbp+var_6B8], rax
__text:0000000100002FFD                 jz      loc_100003173
__text:0000000100003003                 mov     rax, [rbp+var_6B8]
__text:000000010000300A                 mov     [rbp+var_58], rax
__text:000000010000300E                 mov     rcx, [rbp+var_58]
__text:0000000100003012                 mov     [rbp+var_50], rcx
__text:0000000100003016                 mov     rcx, [rbp+var_50]
__text:000000010000301A                 add     rcx, 8
__text:0000000100003021                 mov     rdx, [rbp+var_150]
__text:0000000100003028                 mov     [rbp+var_110], rcx
__text:000000010000302F                 mov     [rbp+var_118], rdx
__text:0000000100003036                 mov     rcx, [rbp+var_110]
__text:000000010000303D                 test    byte ptr [rcx+9], 1
__text:0000000100003041                 mov     [rbp+var_6C0], rcx
__text:0000000100003048                 jz      loc_1000030A5
__text:000000010000304E                 mov     rax, [rbp+var_6C0]
__text:0000000100003055                 mov     rcx, [rax]
__text:0000000100003058                 mov     rdx, [rbp+var_118]
__text:000000010000305F                 add     rdx, 1Ch
__text:0000000100003066                 add     rdx, 4
__text:000000010000306D                 mov     [rbp+var_108], rdx
__text:0000000100003074                 mov     rdx, [rbp+var_108]
__text:000000010000307B                 mov     [rbp+var_B8], rcx
__text:0000000100003082                 mov     [rbp+var_C0], rdx
__text:0000000100003089                 mov     rcx, [rbp+var_B8]
__text:0000000100003090                 mov     rdx, [rbp+var_C0]
__text:0000000100003097                 mov     [rbp+var_A8], rcx
__text:000000010000309E                 mov     [rbp+var_B0], rdx
__text:00000001000030A5
__text:00000001000030A5 loc_1000030A5:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+468↑j
__text:00000001000030A5                 mov     rax, [rbp+var_6C0]
__text:00000001000030AC                 test    byte ptr [rax+8], 1
__text:00000001000030B0                 jz      loc_1000030FA
__text:00000001000030B6                 mov     rax, [rbp+var_6C0]
__text:00000001000030BD                 mov     rcx, [rax]
__text:00000001000030C0                 mov     rdx, [rbp+var_118]
__text:00000001000030C7                 add     rdx, 1Ch
__text:00000001000030CE                 mov     [rbp+var_70], rdx
__text:00000001000030D2                 mov     rdx, [rbp+var_70]
__text:00000001000030D6                 mov     [rbp+var_88], rcx
__text:00000001000030DD                 mov     [rbp+var_90], rdx
__text:00000001000030E4                 mov     rcx, [rbp+var_88]
__text:00000001000030EB                 mov     rdx, [rbp+var_90]
__text:00000001000030F2                 mov     [rbp+var_78], rcx
__text:00000001000030F6                 mov     [rbp+var_80], rdx
__text:00000001000030FA
__text:00000001000030FA loc_1000030FA:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+4D0↑j
__text:00000001000030FA                 cmp     [rbp+var_118], 0
__text:0000000100003105                 jz      loc_10000316E
__text:000000010000310B                 mov     rax, [rbp+var_6C0]
__text:0000000100003112                 mov     rcx, [rax]
__text:0000000100003115                 mov     rdx, [rbp+var_118]
__text:000000010000311C                 mov     [rbp+var_F0], rcx
__text:0000000100003123                 mov     [rbp+var_F8], rdx
__text:000000010000312A                 mov     [rbp+var_100], 1
__text:0000000100003135                 mov     rcx, [rbp+var_F0]
__text:000000010000313C                 mov     rdx, [rbp+var_F8]
__text:0000000100003143                 mov     rsi, [rbp+var_100]
__text:000000010000314A                 mov     [rbp+var_D8], rcx
__text:0000000100003151                 mov     [rbp+var_E0], rdx
__text:0000000100003158                 mov     [rbp+var_E8], rsi
__text:000000010000315F                 mov     rcx, [rbp+var_E0]
__text:0000000100003166                 mov     rdi, rcx        ; void *
__text:0000000100003169                 call    __ZdlPv         ; operator delete(void *)
__text:000000010000316E
__text:000000010000316E loc_10000316E:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+525↑j
__text:000000010000316E                 jmp     $+5
__text:0000000100003173 ; ---------------------------------------------------------------------------
__text:0000000100003173
__text:0000000100003173 loc_100003173:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+41D↑j
__text:0000000100003173                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&):loc_10000316E↑j
__text:0000000100003173                 mov     rsi, [rbp+var_640]
__text:000000010000317A                 mov     rdx, [rbp+var_648]
__text:0000000100003181                 lea     rax, [rbp+var_670]
__text:0000000100003188                 mov     [rbp+var_48], rax
__text:000000010000318C                 mov     [rbp+var_40], rax
__text:0000000100003190                 mov     [rbp+var_38], rax
__text:0000000100003194                 mov     rcx, [rbp+var_670]
__text:000000010000319B                 mov     rdi, [rbp+var_6A8]
__text:00000001000031A2                 call    j___ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_ ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *&,std::__1::__tree_node_base<void *> *)
__text:00000001000031A7                 jmp     $+5
__text:00000001000031AC ; ---------------------------------------------------------------------------
__text:00000001000031AC
__text:00000001000031AC loc_1000031AC:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+5C7↑j
__text:00000001000031AC                 lea     rax, [rbp+var_670]
__text:00000001000031B3                 mov     [rbp+var_28], rax
__text:00000001000031B7                 mov     rcx, [rbp+var_28]
__text:00000001000031BB                 mov     [rbp+var_20], rcx
__text:00000001000031BF                 mov     rdx, [rbp+var_20]
__text:00000001000031C3                 mov     [rbp+var_18], rdx
__text:00000001000031C7                 mov     rdx, [rbp+var_18]
__text:00000001000031CB                 mov     rdx, [rdx]
__text:00000001000031CE                 mov     [rbp+var_30], rdx
__text:00000001000031D2                 mov     [rbp+var_10], rcx
__text:00000001000031D6                 mov     rcx, [rbp+var_10]
__text:00000001000031DA                 mov     [rbp+var_8], rcx
__text:00000001000031DE                 mov     rcx, [rbp+var_8]
__text:00000001000031E2                 mov     qword ptr [rcx], 0
__text:00000001000031E9                 mov     rcx, [rbp+var_30]
__text:00000001000031ED                 mov     [rbp+var_650], rcx
__text:00000001000031F4                 mov     [rbp+var_278], rax
__text:00000001000031FB                 mov     rax, [rbp+var_278]
__text:0000000100003202                 mov     [rbp+var_270], rax
__text:0000000100003209                 mov     rax, [rbp+var_270]
__text:0000000100003210                 mov     [rbp+var_258], rax
__text:0000000100003217                 mov     [rbp+var_260], 0
__text:0000000100003222                 mov     rax, [rbp+var_258]
__text:0000000100003229                 mov     [rbp+var_250], rax
__text:0000000100003230                 mov     rcx, [rbp+var_250]
__text:0000000100003237                 mov     [rbp+var_248], rcx
__text:000000010000323E                 mov     rcx, [rbp+var_248]
__text:0000000100003245                 mov     rcx, [rcx]
__text:0000000100003248                 mov     [rbp+var_268], rcx
__text:000000010000324F                 mov     rcx, [rbp+var_260]
__text:0000000100003256                 mov     [rbp+var_180], rax
__text:000000010000325D                 mov     rdx, [rbp+var_180]
__text:0000000100003264                 mov     [rbp+var_178], rdx
__text:000000010000326B                 mov     rdx, [rbp+var_178]
__text:0000000100003272                 mov     [rdx], rcx
__text:0000000100003275                 cmp     [rbp+var_268], 0
__text:0000000100003280                 mov     [rbp+var_6C8], rax
__text:0000000100003287                 jz      loc_100003415
__text:000000010000328D                 mov     rax, [rbp+var_6C8]
__text:0000000100003294                 mov     [rbp+var_170], rax
__text:000000010000329B                 mov     rcx, [rbp+var_170]
__text:00000001000032A2                 mov     [rbp+var_168], rcx
__text:00000001000032A9                 mov     rcx, [rbp+var_168]
__text:00000001000032B0                 add     rcx, 8
__text:00000001000032B7                 mov     rdx, [rbp+var_268]
__text:00000001000032BE                 mov     [rbp+var_228], rcx
__text:00000001000032C5                 mov     [rbp+var_230], rdx
__text:00000001000032CC                 mov     rcx, [rbp+var_228]
__text:00000001000032D3                 test    byte ptr [rcx+9], 1
__text:00000001000032D7                 mov     [rbp+var_6D0], rcx
__text:00000001000032DE                 jz      loc_10000333B
__text:00000001000032E4                 mov     rax, [rbp+var_6D0]
__text:00000001000032EB                 mov     rcx, [rax]
__text:00000001000032EE                 mov     rdx, [rbp+var_230]
__text:00000001000032F5                 add     rdx, 1Ch
__text:00000001000032FC                 add     rdx, 4
__text:0000000100003303                 mov     [rbp+var_220], rdx
__text:000000010000330A                 mov     rdx, [rbp+var_220]
__text:0000000100003311                 mov     [rbp+var_1D0], rcx
__text:0000000100003318                 mov     [rbp+var_1D8], rdx
__text:000000010000331F                 mov     rcx, [rbp+var_1D0]
__text:0000000100003326                 mov     rdx, [rbp+var_1D8]
__text:000000010000332D                 mov     [rbp+var_1C0], rcx
__text:0000000100003334                 mov     [rbp+var_1C8], rdx
__text:000000010000333B
__text:000000010000333B loc_10000333B:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+6FE↑j
__text:000000010000333B                 mov     rax, [rbp+var_6D0]
__text:0000000100003342                 test    byte ptr [rax+8], 1
__text:0000000100003346                 jz      loc_10000339C
__text:000000010000334C                 mov     rax, [rbp+var_6D0]
__text:0000000100003353                 mov     rcx, [rax]
__text:0000000100003356                 mov     rdx, [rbp+var_230]
__text:000000010000335D                 add     rdx, 1Ch
__text:0000000100003364                 mov     [rbp+var_188], rdx
__text:000000010000336B                 mov     rdx, [rbp+var_188]
__text:0000000100003372                 mov     [rbp+var_1A0], rcx
__text:0000000100003379                 mov     [rbp+var_1A8], rdx
__text:0000000100003380                 mov     rcx, [rbp+var_1A0]
__text:0000000100003387                 mov     rdx, [rbp+var_1A8]
__text:000000010000338E                 mov     [rbp+var_190], rcx
__text:0000000100003395                 mov     [rbp+var_198], rdx
__text:000000010000339C
__text:000000010000339C loc_10000339C:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+766↑j
__text:000000010000339C                 cmp     [rbp+var_230], 0
__text:00000001000033A7                 jz      loc_100003410
__text:00000001000033AD                 mov     rax, [rbp+var_6D0]
__text:00000001000033B4                 mov     rcx, [rax]
__text:00000001000033B7                 mov     rdx, [rbp+var_230]
__text:00000001000033BE                 mov     [rbp+var_208], rcx
__text:00000001000033C5                 mov     [rbp+var_210], rdx
__text:00000001000033CC                 mov     [rbp+var_218], 1
__text:00000001000033D7                 mov     rcx, [rbp+var_208]
__text:00000001000033DE                 mov     rdx, [rbp+var_210]
__text:00000001000033E5                 mov     rsi, [rbp+var_218]
__text:00000001000033EC                 mov     [rbp+var_1F0], rcx
__text:00000001000033F3                 mov     [rbp+var_1F8], rdx
__text:00000001000033FA                 mov     [rbp+var_200], rsi
__text:0000000100003401                 mov     rcx, [rbp+var_1F8]
__text:0000000100003408                 mov     rdi, rcx        ; void *
__text:000000010000340B                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100003410
__text:0000000100003410 loc_100003410:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+7C7↑j
__text:0000000100003410                 jmp     $+5
__text:0000000100003415 ; ---------------------------------------------------------------------------
__text:0000000100003415
__text:0000000100003415 loc_100003415:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+6A7↑j
__text:0000000100003415                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&):loc_100003410↑j
__text:0000000100003415                 jmp     loc_10000365B
__text:000000010000341A ; ---------------------------------------------------------------------------
__text:000000010000341A                 lea     rcx, [rbp+var_670]
__text:0000000100003421                 mov     esi, edx
__text:0000000100003423                 mov     [rbp+var_698], rax
__text:000000010000342A                 mov     [rbp+var_69C], esi
__text:0000000100003430                 mov     [rbp+var_5F8], rcx
__text:0000000100003437                 mov     rax, [rbp+var_5F8]
__text:000000010000343E                 mov     [rbp+var_5F0], rax
__text:0000000100003445                 mov     rax, [rbp+var_5F0]
__text:000000010000344C                 mov     [rbp+var_5D8], rax
__text:0000000100003453                 mov     [rbp+var_5E0], 0
__text:000000010000345E                 mov     rax, [rbp+var_5D8]
__text:0000000100003465                 mov     [rbp+var_5D0], rax
__text:000000010000346C                 mov     rcx, [rbp+var_5D0]
__text:0000000100003473                 mov     [rbp+var_5C8], rcx
__text:000000010000347A                 mov     rcx, [rbp+var_5C8]
__text:0000000100003481                 mov     rcx, [rcx]
__text:0000000100003484                 mov     [rbp+var_5E8], rcx
__text:000000010000348B                 mov     rcx, [rbp+var_5E0]
__text:0000000100003492                 mov     [rbp+var_500], rax
__text:0000000100003499                 mov     rdx, [rbp+var_500]
__text:00000001000034A0                 mov     [rbp+var_4F8], rdx
__text:00000001000034A7                 mov     rdx, [rbp+var_4F8]
__text:00000001000034AE                 mov     [rdx], rcx
__text:00000001000034B1                 cmp     [rbp+var_5E8], 0
__text:00000001000034BC                 mov     [rbp+var_6D8], rax
__text:00000001000034C3                 jz      loc_100003651
__text:00000001000034C9                 mov     rax, [rbp+var_6D8]
__text:00000001000034D0                 mov     [rbp+var_4F0], rax
__text:00000001000034D7                 mov     rcx, [rbp+var_4F0]
__text:00000001000034DE                 mov     [rbp+var_4E8], rcx
__text:00000001000034E5                 mov     rcx, [rbp+var_4E8]
__text:00000001000034EC                 add     rcx, 8
__text:00000001000034F3                 mov     rdx, [rbp+var_5E8]
__text:00000001000034FA                 mov     [rbp+var_5A8], rcx
__text:0000000100003501                 mov     [rbp+var_5B0], rdx
__text:0000000100003508                 mov     rcx, [rbp+var_5A8]
__text:000000010000350F                 test    byte ptr [rcx+9], 1
__text:0000000100003513                 mov     [rbp+var_6E0], rcx
__text:000000010000351A                 jz      loc_100003577
__text:0000000100003520                 mov     rax, [rbp+var_6E0]
__text:0000000100003527                 mov     rcx, [rax]
__text:000000010000352A                 mov     rdx, [rbp+var_5B0]
__text:0000000100003531                 add     rdx, 1Ch
__text:0000000100003538                 add     rdx, 4
__text:000000010000353F                 mov     [rbp+var_5A0], rdx
__text:0000000100003546                 mov     rdx, [rbp+var_5A0]
__text:000000010000354D                 mov     [rbp+var_550], rcx
__text:0000000100003554                 mov     [rbp+var_558], rdx
__text:000000010000355B                 mov     rcx, [rbp+var_550]
__text:0000000100003562                 mov     rdx, [rbp+var_558]
__text:0000000100003569                 mov     [rbp+var_540], rcx
__text:0000000100003570                 mov     [rbp+var_548], rdx
__text:0000000100003577
__text:0000000100003577 loc_100003577:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+93A↑j
__text:0000000100003577                 mov     rax, [rbp+var_6E0]
__text:000000010000357E                 test    byte ptr [rax+8], 1
__text:0000000100003582                 jz      loc_1000035D8
__text:0000000100003588                 mov     rax, [rbp+var_6E0]
__text:000000010000358F                 mov     rcx, [rax]
__text:0000000100003592                 mov     rdx, [rbp+var_5B0]
__text:0000000100003599                 add     rdx, 1Ch
__text:00000001000035A0                 mov     [rbp+var_508], rdx
__text:00000001000035A7                 mov     rdx, [rbp+var_508]
__text:00000001000035AE                 mov     [rbp+var_520], rcx
__text:00000001000035B5                 mov     [rbp+var_528], rdx
__text:00000001000035BC                 mov     rcx, [rbp+var_520]
__text:00000001000035C3                 mov     rdx, [rbp+var_528]
__text:00000001000035CA                 mov     [rbp+var_510], rcx
__text:00000001000035D1                 mov     [rbp+var_518], rdx
__text:00000001000035D8
__text:00000001000035D8 loc_1000035D8:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+9A2↑j
__text:00000001000035D8                 cmp     [rbp+var_5B0], 0
__text:00000001000035E3                 jz      loc_10000364C
__text:00000001000035E9                 mov     rax, [rbp+var_6E0]
__text:00000001000035F0                 mov     rcx, [rax]
__text:00000001000035F3                 mov     rdx, [rbp+var_5B0]
__text:00000001000035FA                 mov     [rbp+var_588], rcx
__text:0000000100003601                 mov     [rbp+var_590], rdx
__text:0000000100003608                 mov     [rbp+var_598], 1
__text:0000000100003613                 mov     rcx, [rbp+var_588]
__text:000000010000361A                 mov     rdx, [rbp+var_590]
__text:0000000100003621                 mov     rsi, [rbp+var_598]
__text:0000000100003628                 mov     [rbp+var_570], rcx
__text:000000010000362F                 mov     [rbp+var_578], rdx
__text:0000000100003636                 mov     [rbp+var_580], rsi
__text:000000010000363D                 mov     rcx, [rbp+var_578]
__text:0000000100003644                 mov     rdi, rcx        ; void *
__text:0000000100003647                 call    __ZdlPv         ; operator delete(void *)
__text:000000010000364C
__text:000000010000364C loc_10000364C:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+A03↑j
__text:000000010000364C                 jmp     $+5
__text:0000000100003651 ; ---------------------------------------------------------------------------
__text:0000000100003651
__text:0000000100003651 loc_100003651:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+8E3↑j
__text:0000000100003651                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&):loc_10000364C↑j
__text:0000000100003651                 jmp     $+5
__text:0000000100003656 ; ---------------------------------------------------------------------------
__text:0000000100003656
__text:0000000100003656 loc_100003656:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&):loc_100003651↑j
__text:0000000100003656                 jmp     loc_100003677
__text:000000010000365B ; ---------------------------------------------------------------------------
__text:000000010000365B
__text:000000010000365B loc_10000365B:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&)+C7↑j
__text:000000010000365B                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&):loc_100003415↑j
__text:000000010000365B                 mov     rax, [rbp+var_650]
__text:0000000100003662                 add     rax, 1Ch
__text:0000000100003668                 add     rax, 4
__text:000000010000366E                 add     rsp, 6E0h
__text:0000000100003675                 pop     rbp
__text:0000000100003676                 retn
__text:0000000100003677 ; ---------------------------------------------------------------------------
__text:0000000100003677
__text:0000000100003677 loc_100003677:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::operator[](int const&):loc_100003656↑j
__text:0000000100003677                 mov     rdi, [rbp+var_698]
__text:000000010000367E                 call    __Unwind_Resume
__text:000000010000367E __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEEixERS5_ endp
__text:000000010000367E
__text:000000010000367E ; ---------------------------------------------------------------------------
__text:0000000100003683                 align 10h
__text:0000000100003690
__text:0000000100003690 ; =============== S U B R O U T I N E =======================================
__text:0000000100003690
__text:0000000100003690 ; Attributes: bp-based frame
__text:0000000100003690
__text:0000000100003690 ; std::__1::set<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::~set()
__text:0000000100003690 __ZNSt3__13setINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev proc near
__text:0000000100003690                                         ; DATA XREF: __got:__ZNSt3__13setINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev_ptr↓o
__text:0000000100003690
__text:0000000100003690 var_8           = qword ptr -8
__text:0000000100003690
__text:0000000100003690                 push    rbp
__text:0000000100003691                 mov     rbp, rsp
__text:0000000100003694                 sub     rsp, 10h
__text:0000000100003698                 mov     [rbp+var_8], rdi
__text:000000010000369C                 mov     rdi, [rbp+var_8]
__text:00000001000036A0                 call    j___ZNSt3__13setINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev ; std::__1::set<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::~set()
__text:00000001000036A5                 add     rsp, 10h
__text:00000001000036A9                 pop     rbp
__text:00000001000036AA                 retn
__text:00000001000036AA __ZNSt3__13setINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev endp
__text:00000001000036AA
__text:00000001000036AA ; ---------------------------------------------------------------------------
__text:00000001000036AB                 align 10h
__text:00000001000036B0
__text:00000001000036B0 ; =============== S U B R O U T I N E =======================================
__text:00000001000036B0
__text:00000001000036B0 ; Attributes: bp-based frame
__text:00000001000036B0
__text:00000001000036B0 ; std::__1::basic_ostream<char, std::__1::char_traits<char>> & std::__1::endl<char, std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &)
__text:00000001000036B0 __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ proc near
__text:00000001000036B0                                         ; DATA XREF: solve(void)+7E4↑o
__text:00000001000036B0                                         ; _main+BB8↑o ...
__text:00000001000036B0
__text:00000001000036B0 var_88          = qword ptr -88h
__text:00000001000036B0 var_80          = qword ptr -80h
__text:00000001000036B0 var_78          = dword ptr -78h
__text:00000001000036B0 var_71          = byte ptr -71h
__text:00000001000036B0 var_70          = qword ptr -70h
__text:00000001000036B0 var_64          = dword ptr -64h
__text:00000001000036B0 var_60          = qword ptr -60h
__text:00000001000036B0 var_58          = qword ptr -58h
__text:00000001000036B0 var_50          = qword ptr -50h
__text:00000001000036B0 var_48          = qword ptr -48h
__text:00000001000036B0 var_3C          = dword ptr -3Ch
__text:00000001000036B0 var_38          = qword ptr -38h
__text:00000001000036B0 var_30          = byte ptr -30h
__text:00000001000036B0 var_21          = byte ptr -21h
__text:00000001000036B0 var_20          = qword ptr -20h
__text:00000001000036B0 var_18          = qword ptr -18h
__text:00000001000036B0 var_9           = byte ptr -9
__text:00000001000036B0 var_8           = qword ptr -8
__text:00000001000036B0
__text:00000001000036B0                 push    rbp
__text:00000001000036B1                 mov     rbp, rsp
__text:00000001000036B4                 sub     rsp, 90h
__text:00000001000036BB                 mov     [rbp+var_48], rdi
__text:00000001000036BF                 mov     rax, rdi
__text:00000001000036C2                 mov     rcx, [rdi]
__text:00000001000036C5                 mov     rcx, [rcx-18h]
__text:00000001000036C9                 add     rdi, rcx
__text:00000001000036CC                 mov     [rbp+var_20], rdi
__text:00000001000036D0                 mov     [rbp+var_21], 0Ah
__text:00000001000036D4                 mov     rsi, [rbp+var_20]
__text:00000001000036D8                 lea     rcx, [rbp+var_30]
__text:00000001000036DC                 mov     rdi, rcx        ; this
__text:00000001000036DF                 mov     [rbp+var_50], rax
__text:00000001000036E3                 mov     [rbp+var_58], rcx
__text:00000001000036E7                 call    __ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
__text:00000001000036EC                 mov     rax, [rbp+var_58]
__text:00000001000036F0                 mov     [rbp+var_18], rax
__text:00000001000036F4                 mov     rsi, cs:__ZNSt3__15ctypeIcE2idE_ptr
__text:00000001000036FB                 mov     rdi, rax
__text:00000001000036FE                 call    __ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
__text:0000000100003703                 mov     [rbp+var_60], rax
__text:0000000100003707                 jmp     $+5
__text:000000010000370C ; ---------------------------------------------------------------------------
__text:000000010000370C
__text:000000010000370C loc_10000370C:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+57↑j
__text:000000010000370C                 mov     al, [rbp+var_21]
__text:000000010000370F                 mov     rcx, [rbp+var_60]
__text:0000000100003713                 mov     [rbp+var_8], rcx
__text:0000000100003717                 mov     [rbp+var_9], al
__text:000000010000371A                 mov     rdx, [rbp+var_8]
__text:000000010000371E                 mov     rsi, [rdx]
__text:0000000100003721                 mov     rsi, [rsi+38h]
__text:0000000100003725                 movsx   edi, [rbp+var_9]
__text:0000000100003729                 mov     [rbp+var_64], edi
__text:000000010000372C                 mov     rdi, rdx
__text:000000010000372F                 mov     r8d, [rbp+var_64]
__text:0000000100003733                 mov     [rbp+var_70], rsi
__text:0000000100003737                 mov     esi, r8d
__text:000000010000373A                 mov     rdx, [rbp+var_70]
__text:000000010000373E                 call    rdx
__text:0000000100003740                 mov     [rbp+var_71], al
__text:0000000100003743                 jmp     loc_100003775
__text:0000000100003748 ; ---------------------------------------------------------------------------
__text:0000000100003748                 mov     ecx, edx
__text:000000010000374A                 mov     [rbp+var_38], rax
__text:000000010000374E                 mov     [rbp+var_3C], ecx
__text:0000000100003751                 lea     rdi, [rbp+var_30] ; this
__text:0000000100003755                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:000000010000375A                 jmp     $+5
__text:000000010000375F ; ---------------------------------------------------------------------------
__text:000000010000375F
__text:000000010000375F loc_10000375F:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+AA↑j
__text:000000010000375F                 mov     rdi, [rbp+var_38]
__text:0000000100003763                 call    __Unwind_Resume
__text:0000000100003768 ; ---------------------------------------------------------------------------
__text:0000000100003768                 mov     ecx, edx
__text:000000010000376A                 mov     rdi, rax
__text:000000010000376D                 mov     [rbp+var_78], ecx
__text:0000000100003770                 call    ___clang_call_terminate
__text:0000000100003775 ; ---------------------------------------------------------------------------
__text:0000000100003775
__text:0000000100003775 loc_100003775:                          ; CODE XREF: std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+93↑j
__text:0000000100003775                 lea     rdi, [rbp+var_30] ; this
__text:0000000100003779                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:000000010000377E                 mov     rdi, [rbp+var_50]
__text:0000000100003782                 mov     al, [rbp+var_71]
__text:0000000100003785                 movsx   esi, al
__text:0000000100003788                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::put(char)
__text:000000010000378D                 mov     rdi, [rbp+var_48]
__text:0000000100003791                 mov     [rbp+var_80], rax
__text:0000000100003795                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::flush(void)
__text:000000010000379A                 mov     rdi, [rbp+var_48]
__text:000000010000379E                 mov     [rbp+var_88], rax
__text:00000001000037A5                 mov     rax, rdi
__text:00000001000037A8                 add     rsp, 90h
__text:00000001000037AF                 pop     rbp
__text:00000001000037B0                 retn
__text:00000001000037B0 __ZNSt3__14endlIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_ endp
__text:00000001000037B0
__text:00000001000037B0 ; ---------------------------------------------------------------------------
__text:00000001000037B1                 align 20h
__text:00000001000037C0
__text:00000001000037C0 ; =============== S U B R O U T I N E =======================================
__text:00000001000037C0
__text:00000001000037C0 ; Attributes: noreturn bp-based frame
__text:00000001000037C0
__text:00000001000037C0 ___clang_call_terminate proc near       ; CODE XREF: __text:00000001000029F6↑p
__text:00000001000037C0                                         ; std::__1::endl<char,std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &)+C0↑p ...
__text:00000001000037C0
__text:00000001000037C0 var_8           = qword ptr -8
__text:00000001000037C0
__text:00000001000037C0                 push    rbp
__text:00000001000037C1                 mov     rbp, rsp
__text:00000001000037C4                 sub     rsp, 10h
__text:00000001000037C8                 call    ___cxa_begin_catch
__text:00000001000037CD                 mov     [rbp+var_8], rax
__text:00000001000037D1                 call    __ZSt9terminatev ; std::terminate(void)
__text:00000001000037D1 ___clang_call_terminate endp
__text:00000001000037D1
__text:00000001000037D1 ; ---------------------------------------------------------------------------
__text:00000001000037D6                 align 20h
__text:00000001000037E0
__text:00000001000037E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000037E0
__text:00000001000037E0 ; Attributes: bp-based frame
__text:00000001000037E0
__text:00000001000037E0 ; std::__1::basic_ostream<char, std::__1::char_traits<char>> & std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, char)
__text:00000001000037E0 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c proc near
__text:00000001000037E0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c_ptr↓o
__text:00000001000037E0
__text:00000001000037E0 var_180         = qword ptr -180h
__text:00000001000037E0 var_178         = qword ptr -178h
__text:00000001000037E0 var_169         = byte ptr -169h
__text:00000001000037E0 var_168         = dword ptr -168h
__text:00000001000037E0 var_164         = dword ptr -164h
__text:00000001000037E0 var_160         = qword ptr -160h
__text:00000001000037E0 var_151         = byte ptr -151h
__text:00000001000037E0 var_150         = qword ptr -150h
__text:00000001000037E0 var_144         = dword ptr -144h
__text:00000001000037E0 var_140         = qword ptr -140h
__text:00000001000037E0 var_138         = qword ptr -138h
__text:00000001000037E0 var_130         = qword ptr -130h
__text:00000001000037E0 var_128         = qword ptr -128h
__text:00000001000037E0 var_120         = qword ptr -120h
__text:00000001000037E0 var_118         = qword ptr -118h
__text:00000001000037E0 var_110         = dword ptr -110h
__text:00000001000037E0 var_109         = byte ptr -109h
__text:00000001000037E0 var_108         = qword ptr -108h
__text:00000001000037E0 var_100         = qword ptr -100h
__text:00000001000037E0 var_F4          = dword ptr -0F4h
__text:00000001000037E0 var_F0          = qword ptr -0F0h
__text:00000001000037E0 var_E8          = byte ptr -0E8h
__text:00000001000037E0 var_D1          = byte ptr -0D1h
__text:00000001000037E0 var_D0          = qword ptr -0D0h
__text:00000001000037E0 var_C8          = qword ptr -0C8h
__text:00000001000037E0 var_C0          = qword ptr -0C0h
__text:00000001000037E0 var_B8          = qword ptr -0B8h
__text:00000001000037E0 var_A0          = qword ptr -0A0h
__text:00000001000037E0 var_98          = qword ptr -98h
__text:00000001000037E0 var_90          = qword ptr -90h
__text:00000001000037E0 var_88          = qword ptr -88h
__text:00000001000037E0 var_7C          = dword ptr -7Ch
__text:00000001000037E0 var_78          = qword ptr -78h
__text:00000001000037E0 var_6C          = dword ptr -6Ch
__text:00000001000037E0 var_68          = qword ptr -68h
__text:00000001000037E0 var_60          = qword ptr -60h
__text:00000001000037E0 var_58          = qword ptr -58h
__text:00000001000037E0 var_50          = qword ptr -50h
__text:00000001000037E0 var_44          = dword ptr -44h
__text:00000001000037E0 var_40          = qword ptr -40h
__text:00000001000037E0 var_38          = byte ptr -38h
__text:00000001000037E0 var_29          = byte ptr -29h
__text:00000001000037E0 var_28          = qword ptr -28h
__text:00000001000037E0 var_20          = qword ptr -20h
__text:00000001000037E0 var_11          = byte ptr -11h
__text:00000001000037E0 var_10          = qword ptr -10h
__text:00000001000037E0 var_8           = dword ptr -8
__text:00000001000037E0 var_4           = dword ptr -4
__text:00000001000037E0
__text:00000001000037E0                 push    rbp
__text:00000001000037E1                 mov     rbp, rsp
__text:00000001000037E4                 sub     rsp, 190h
__text:00000001000037EB                 mov     al, sil
__text:00000001000037EE                 mov     [rbp+var_D0], rdi
__text:00000001000037F5                 mov     [rbp+var_D1], al
__text:00000001000037FB                 mov     rsi, [rbp+var_D0]
__text:0000000100003802                 lea     rdi, [rbp+var_E8]
__text:0000000100003809                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_ ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char,std::__1::char_traits<char>>&)
__text:000000010000380E                 jmp     $+5
__text:0000000100003813 ; ---------------------------------------------------------------------------
__text:0000000100003813
__text:0000000100003813 loc_100003813:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+2E↑j
__text:0000000100003813                 lea     rax, [rbp+var_E8]
__text:000000010000381A                 mov     [rbp+var_C8], rax
__text:0000000100003821                 mov     rax, [rbp+var_C8]
__text:0000000100003828                 mov     cl, [rax]
__text:000000010000382A                 mov     [rbp+var_109], cl
__text:0000000100003830                 mov     al, [rbp+var_109]
__text:0000000100003836                 test    al, 1
__text:0000000100003838                 jnz     loc_100003843
__text:000000010000383E                 jmp     loc_100003BA9
__text:0000000100003843 ; ---------------------------------------------------------------------------
__text:0000000100003843
__text:0000000100003843 loc_100003843:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+58↑j
__text:0000000100003843                 lea     rax, [rbp+var_100]
__text:000000010000384A                 mov     rcx, [rbp+var_D0]
__text:0000000100003851                 mov     [rbp+var_B8], rax
__text:0000000100003858                 mov     [rbp+var_C0], rcx
__text:000000010000385F                 mov     rax, [rbp+var_B8]
__text:0000000100003866                 mov     rcx, [rbp+var_C0]
__text:000000010000386D                 mov     [rbp+var_98], rax
__text:0000000100003874                 mov     [rbp+var_A0], rcx
__text:000000010000387B                 mov     rax, [rbp+var_98]
__text:0000000100003882                 mov     rcx, [rbp+var_A0]
__text:0000000100003889                 mov     rdx, [rcx]
__text:000000010000388C                 mov     rdx, [rdx-18h]
__text:0000000100003890                 add     rcx, rdx
__text:0000000100003893                 mov     [rbp+var_90], rcx
__text:000000010000389A                 mov     rcx, [rbp+var_90]
__text:00000001000038A1                 mov     [rbp+var_88], rcx
__text:00000001000038A8                 mov     rcx, [rbp+var_88]
__text:00000001000038AF                 mov     rcx, [rcx+28h]
__text:00000001000038B3                 mov     [rax], rcx
__text:00000001000038B6                 mov     rax, [rbp+var_D0]
__text:00000001000038BD                 mov     rcx, [rax]
__text:00000001000038C0                 mov     rcx, [rcx-18h]
__text:00000001000038C4                 add     rax, rcx
__text:00000001000038C7                 mov     [rbp+var_60], rax
__text:00000001000038CB                 mov     rax, [rbp+var_60]
__text:00000001000038CF                 mov     esi, [rax+8]
__text:00000001000038D2                 mov     [rbp+var_110], esi
__text:00000001000038D8                 mov     eax, [rbp+var_110]
__text:00000001000038DE                 and     eax, 0B0h
__text:00000001000038E3                 cmp     eax, 20h ; ' '
__text:00000001000038E8                 jnz     loc_100003907
__text:00000001000038EE                 lea     rax, [rbp+var_D1]
__text:00000001000038F5                 add     rax, 1
__text:00000001000038FB                 mov     [rbp+var_118], rax
__text:0000000100003902                 jmp     loc_10000391A
__text:0000000100003907 ; ---------------------------------------------------------------------------
__text:0000000100003907
__text:0000000100003907 loc_100003907:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+108↑j
__text:0000000100003907                 lea     rax, [rbp+var_D1]
__text:000000010000390E                 mov     [rbp+var_118], rax
__text:0000000100003915                 jmp     $+5
__text:000000010000391A ; ---------------------------------------------------------------------------
__text:000000010000391A
__text:000000010000391A loc_10000391A:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+122↑j
__text:000000010000391A                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+135↑j
__text:000000010000391A                 mov     rax, [rbp+var_118]
__text:0000000100003921                 lea     rcx, [rbp+var_D1]
__text:0000000100003928                 add     rcx, 1
__text:000000010000392F                 mov     rdx, [rbp+var_D0]
__text:0000000100003936                 mov     rsi, [rdx]
__text:0000000100003939                 mov     rsi, [rsi-18h]
__text:000000010000393D                 add     rdx, rsi
__text:0000000100003940                 mov     rsi, [rbp+var_D0]
__text:0000000100003947                 mov     rdi, [rsi]
__text:000000010000394A                 mov     rdi, [rdi-18h]
__text:000000010000394E                 add     rsi, rdi
__text:0000000100003951                 mov     [rbp+var_50], rsi
__text:0000000100003955                 mov     rsi, [rbp+var_50]
__text:0000000100003959                 mov     r8d, [rsi+90h]
__text:0000000100003960                 mov     [rbp+var_4], 0FFFFFFFFh
__text:0000000100003967                 mov     [rbp+var_8], r8d
__text:000000010000396B                 mov     r8d, [rbp+var_4]
__text:000000010000396F                 cmp     r8d, [rbp+var_8]
__text:0000000100003973                 mov     [rbp+var_120], rax
__text:000000010000397A                 mov     [rbp+var_128], rcx
__text:0000000100003981                 mov     [rbp+var_130], rdx
__text:0000000100003988                 mov     [rbp+var_138], rsi
__text:000000010000398F                 jnz     loc_100003A8B
__text:0000000100003995                 mov     rax, [rbp+var_138]
__text:000000010000399C                 mov     [rbp+var_28], rax
__text:00000001000039A0                 mov     [rbp+var_29], 20h ; ' '
__text:00000001000039A4                 mov     rsi, [rbp+var_28]
__text:00000001000039A8                 lea     rdi, [rbp+var_38] ; this
__text:00000001000039AC                 call    __ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
__text:00000001000039B1                 jmp     $+5
__text:00000001000039B6 ; ---------------------------------------------------------------------------
__text:00000001000039B6
__text:00000001000039B6 loc_1000039B6:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+1D1↑j
__text:00000001000039B6                 lea     rax, [rbp+var_38]
__text:00000001000039BA                 mov     [rbp+var_20], rax
__text:00000001000039BE                 mov     rsi, cs:__ZNSt3__15ctypeIcE2idE_ptr
__text:00000001000039C5                 mov     rdi, rax
__text:00000001000039C8                 call    __ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
__text:00000001000039CD                 mov     [rbp+var_140], rax
__text:00000001000039D4                 jmp     $+5
__text:00000001000039D9 ; ---------------------------------------------------------------------------
__text:00000001000039D9
__text:00000001000039D9 loc_1000039D9:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+1F4↑j
__text:00000001000039D9                 mov     al, [rbp+var_29]
__text:00000001000039DC                 mov     rcx, [rbp+var_140]
__text:00000001000039E3                 mov     [rbp+var_10], rcx
__text:00000001000039E7                 mov     [rbp+var_11], al
__text:00000001000039EA                 mov     rdx, [rbp+var_10]
__text:00000001000039EE                 mov     rsi, [rdx]
__text:00000001000039F1                 mov     rsi, [rsi+38h]
__text:00000001000039F5                 movsx   edi, [rbp+var_11]
__text:00000001000039F9                 mov     [rbp+var_144], edi
__text:00000001000039FF                 mov     rdi, rdx
__text:0000000100003A02                 mov     r8d, [rbp+var_144]
__text:0000000100003A09                 mov     [rbp+var_150], rsi
__text:0000000100003A10                 mov     esi, r8d
__text:0000000100003A13                 mov     rdx, [rbp+var_150]
__text:0000000100003A1A                 call    rdx
__text:0000000100003A1C                 mov     [rbp+var_151], al
__text:0000000100003A22                 jmp     loc_100003A67
__text:0000000100003A27 ; ---------------------------------------------------------------------------
__text:0000000100003A27                 mov     ecx, edx
__text:0000000100003A29                 mov     [rbp+var_40], rax
__text:0000000100003A2D                 mov     [rbp+var_44], ecx
__text:0000000100003A30                 lea     rdi, [rbp+var_38] ; this
__text:0000000100003A34                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:0000000100003A39                 jmp     $+5
__text:0000000100003A3E ; ---------------------------------------------------------------------------
__text:0000000100003A3E
__text:0000000100003A3E loc_100003A3E:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+259↑j
__text:0000000100003A3E                 mov     rax, [rbp+var_40]
__text:0000000100003A42                 mov     ecx, [rbp+var_44]
__text:0000000100003A45                 mov     [rbp+var_160], rax
__text:0000000100003A4C                 mov     [rbp+var_164], ecx
__text:0000000100003A52                 jmp     loc_100003B79
__text:0000000100003A57 ; ---------------------------------------------------------------------------
__text:0000000100003A57                 mov     ecx, edx
__text:0000000100003A59                 mov     rdi, rax
__text:0000000100003A5C                 mov     [rbp+var_168], ecx
__text:0000000100003A62                 call    ___clang_call_terminate
__text:0000000100003A67 ; ---------------------------------------------------------------------------
__text:0000000100003A67
__text:0000000100003A67 loc_100003A67:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+242↑j
__text:0000000100003A67                 lea     rdi, [rbp+var_38] ; this
__text:0000000100003A6B                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:0000000100003A70                 jmp     $+5
__text:0000000100003A75 ; ---------------------------------------------------------------------------
__text:0000000100003A75
__text:0000000100003A75 loc_100003A75:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+290↑j
__text:0000000100003A75                 mov     al, [rbp+var_151]
__text:0000000100003A7B                 movsx   ecx, al
__text:0000000100003A7E                 mov     rdx, [rbp+var_138]
__text:0000000100003A85                 mov     [rdx+90h], ecx
__text:0000000100003A8B
__text:0000000100003A8B loc_100003A8B:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+1AF↑j
__text:0000000100003A8B                 mov     rax, [rbp+var_138]
__text:0000000100003A92                 mov     ecx, [rax+90h]
__text:0000000100003A98                 mov     dl, cl
__text:0000000100003A9A                 mov     [rbp+var_169], dl
__text:0000000100003AA0                 mov     rdi, [rbp+var_100]
__text:0000000100003AA7                 mov     al, [rbp+var_169]
__text:0000000100003AAD                 movsx   r9d, al
__text:0000000100003AB1                 lea     rsi, [rbp+var_D1]
__text:0000000100003AB8                 mov     rdx, [rbp+var_120]
__text:0000000100003ABF                 mov     rcx, [rbp+var_128]
__text:0000000100003AC6                 mov     r8, [rbp+var_130]
__text:0000000100003ACD                 call    __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)
__text:0000000100003AD2                 mov     [rbp+var_178], rax
__text:0000000100003AD9                 jmp     $+5
__text:0000000100003ADE ; ---------------------------------------------------------------------------
__text:0000000100003ADE
__text:0000000100003ADE loc_100003ADE:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+2F9↑j
__text:0000000100003ADE                 lea     rax, [rbp+var_108]
__text:0000000100003AE5                 mov     rcx, [rbp+var_178]
__text:0000000100003AEC                 mov     [rbp+var_108], rcx
__text:0000000100003AF3                 mov     [rbp+var_58], rax
__text:0000000100003AF7                 mov     rax, [rbp+var_58]
__text:0000000100003AFB                 cmp     qword ptr [rax], 0
__text:0000000100003B02                 jnz     loc_100003BA4
__text:0000000100003B08                 mov     rax, [rbp+var_D0]
__text:0000000100003B0F                 mov     rcx, [rax]
__text:0000000100003B12                 mov     rcx, [rcx-18h]
__text:0000000100003B16                 add     rax, rcx
__text:0000000100003B19                 mov     [rbp+var_78], rax
__text:0000000100003B1D                 mov     [rbp+var_7C], 5
__text:0000000100003B24                 mov     rax, [rbp+var_78]
__text:0000000100003B28                 mov     [rbp+var_68], rax
__text:0000000100003B2C                 mov     [rbp+var_6C], 5
__text:0000000100003B33                 mov     rax, [rbp+var_68]
__text:0000000100003B37                 mov     edx, [rax+20h]
__text:0000000100003B3A                 or      edx, 5
__text:0000000100003B3D                 mov     rdi, rax        ; this
__text:0000000100003B40                 mov     esi, edx        ; unsigned int
__text:0000000100003B42                 call    __ZNSt3__18ios_base5clearEj ; std::__1::ios_base::clear(uint)
__text:0000000100003B47                 jmp     $+5
__text:0000000100003B4C ; ---------------------------------------------------------------------------
__text:0000000100003B4C
__text:0000000100003B4C loc_100003B4C:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+367↑j
__text:0000000100003B4C                 jmp     $+5
__text:0000000100003B51 ; ---------------------------------------------------------------------------
__text:0000000100003B51
__text:0000000100003B51 loc_100003B51:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char):loc_100003B4C↑j
__text:0000000100003B51                 jmp     loc_100003BA4
__text:0000000100003B56 ; ---------------------------------------------------------------------------
__text:0000000100003B56                 mov     ecx, edx
__text:0000000100003B58                 mov     [rbp+var_F0], rax
__text:0000000100003B5F                 mov     [rbp+var_F4], ecx
__text:0000000100003B65                 jmp     loc_100003BC4
__text:0000000100003B6A ; ---------------------------------------------------------------------------
__text:0000000100003B6A                 mov     ecx, edx
__text:0000000100003B6C                 mov     [rbp+var_160], rax
__text:0000000100003B73                 mov     [rbp+var_164], ecx
__text:0000000100003B79
__text:0000000100003B79 loc_100003B79:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+272↑j
__text:0000000100003B79                 mov     eax, [rbp+var_164]
__text:0000000100003B7F                 mov     rcx, [rbp+var_160]
__text:0000000100003B86                 mov     [rbp+var_F0], rcx
__text:0000000100003B8D                 mov     [rbp+var_F4], eax
__text:0000000100003B93                 lea     rdi, [rbp+var_E8]
__text:0000000100003B9A                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
__text:0000000100003B9F                 jmp     loc_100003BBF
__text:0000000100003BA4 ; ---------------------------------------------------------------------------
__text:0000000100003BA4
__text:0000000100003BA4 loc_100003BA4:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+322↑j
__text:0000000100003BA4                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char):loc_100003B51↑j
__text:0000000100003BA4                 jmp     $+5
__text:0000000100003BA9 ; ---------------------------------------------------------------------------
__text:0000000100003BA9
__text:0000000100003BA9 loc_100003BA9:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+5E↑j
__text:0000000100003BA9                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char):loc_100003BA4↑j
__text:0000000100003BA9                 lea     rdi, [rbp+var_E8]
__text:0000000100003BB0                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
__text:0000000100003BB5                 jmp     $+5
__text:0000000100003BBA ; ---------------------------------------------------------------------------
__text:0000000100003BBA
__text:0000000100003BBA loc_100003BBA:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+3D5↑j
__text:0000000100003BBA                 jmp     loc_100003BF7
__text:0000000100003BBF ; ---------------------------------------------------------------------------
__text:0000000100003BBF
__text:0000000100003BBF loc_100003BBF:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+3BF↑j
__text:0000000100003BBF                 jmp     $+5
__text:0000000100003BC4 ; ---------------------------------------------------------------------------
__text:0000000100003BC4
__text:0000000100003BC4 loc_100003BC4:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+385↑j
__text:0000000100003BC4                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char):loc_100003BBF↑j
__text:0000000100003BC4                 mov     rdi, [rbp+var_F0] ; void *
__text:0000000100003BCB                 call    ___cxa_begin_catch
__text:0000000100003BD0                 mov     rdi, [rbp+var_D0]
__text:0000000100003BD7                 mov     rcx, [rdi]
__text:0000000100003BDA                 mov     rcx, [rcx-18h]
__text:0000000100003BDE                 add     rdi, rcx        ; this
__text:0000000100003BE1                 mov     [rbp+var_180], rax
__text:0000000100003BE8                 call    __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv ; std::__1::ios_base::__set_badbit_and_consider_rethrow(void)
__text:0000000100003BED                 jmp     $+5
__text:0000000100003BF2 ; ---------------------------------------------------------------------------
__text:0000000100003BF2
__text:0000000100003BF2 loc_100003BF2:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+40D↑j
__text:0000000100003BF2                 call    ___cxa_end_catch
__text:0000000100003BF7
__text:0000000100003BF7 loc_100003BF7:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char):loc_100003BBA↑j
__text:0000000100003BF7                 mov     rax, [rbp+var_D0]
__text:0000000100003BFE                 add     rsp, 190h
__text:0000000100003C05                 pop     rbp
__text:0000000100003C06                 retn
__text:0000000100003C06 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_c endp
__text:0000000100003C06
__text:0000000100003C07 ; ---------------------------------------------------------------------------
__text:0000000100003C07                 mov     ecx, edx
__text:0000000100003C09                 mov     [rbp-0F0h], rax
__text:0000000100003C10                 mov     [rbp-0F4h], ecx
__text:0000000100003C16                 call    ___cxa_end_catch
__text:0000000100003C1B                 jmp     $+5
__text:0000000100003C20 ; ---------------------------------------------------------------------------
__text:0000000100003C20
__text:0000000100003C20 loc_100003C20:                          ; CODE XREF: __text:0000000100003C1B↑j
__text:0000000100003C20                 jmp     $+5
__text:0000000100003C25 ; ---------------------------------------------------------------------------
__text:0000000100003C25
__text:0000000100003C25 loc_100003C25:                          ; CODE XREF: __text:loc_100003C20↑j
__text:0000000100003C25                 mov     rdi, [rbp-0F0h]
__text:0000000100003C2C                 call    __Unwind_Resume
__text:0000000100003C31 ; ---------------------------------------------------------------------------
__text:0000000100003C31                 mov     ecx, edx
__text:0000000100003C33                 mov     rdi, rax
__text:0000000100003C36                 mov     [rbp-184h], ecx
__text:0000000100003C3C                 call    ___clang_call_terminate
__text:0000000100003C3C ; ---------------------------------------------------------------------------
__text:0000000100003C41                 align 10h
__text:0000000100003C50
__text:0000000100003C50 ; =============== S U B R O U T I N E =======================================
__text:0000000100003C50
__text:0000000100003C50 ; Attributes: bp-based frame
__text:0000000100003C50
__text:0000000100003C50 ; std::__1::basic_ostream<char, std::__1::char_traits<char>> & std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char, std::__1::char_traits<char>> &, char const*)
__text:0000000100003C50 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc proc near
__text:0000000100003C50                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc_ptr↓o
__text:0000000100003C50
__text:0000000100003C50 var_1A8         = qword ptr -1A8h
__text:0000000100003C50 var_1A0         = qword ptr -1A0h
__text:0000000100003C50 var_191         = byte ptr -191h
__text:0000000100003C50 var_190         = dword ptr -190h
__text:0000000100003C50 var_18C         = dword ptr -18Ch
__text:0000000100003C50 var_188         = qword ptr -188h
__text:0000000100003C50 var_179         = byte ptr -179h
__text:0000000100003C50 var_178         = qword ptr -178h
__text:0000000100003C50 var_16C         = dword ptr -16Ch
__text:0000000100003C50 var_168         = qword ptr -168h
__text:0000000100003C50 var_160         = qword ptr -160h
__text:0000000100003C50 var_158         = qword ptr -158h
__text:0000000100003C50 var_150         = qword ptr -150h
__text:0000000100003C50 var_148         = qword ptr -148h
__text:0000000100003C50 var_140         = qword ptr -140h
__text:0000000100003C50 var_134         = dword ptr -134h
__text:0000000100003C50 var_130         = qword ptr -130h
__text:0000000100003C50 var_128         = qword ptr -128h
__text:0000000100003C50 var_119         = byte ptr -119h
__text:0000000100003C50 var_118         = qword ptr -118h
__text:0000000100003C50 var_110         = qword ptr -110h
__text:0000000100003C50 var_108         = qword ptr -108h
__text:0000000100003C50 var_FC          = dword ptr -0FCh
__text:0000000100003C50 var_F8          = qword ptr -0F8h
__text:0000000100003C50 var_F0          = byte ptr -0F0h
__text:0000000100003C50 var_E0          = qword ptr -0E0h
__text:0000000100003C50 var_D8          = qword ptr -0D8h
__text:0000000100003C50 var_D0          = qword ptr -0D0h
__text:0000000100003C50 var_C8          = qword ptr -0C8h
__text:0000000100003C50 var_C0          = qword ptr -0C0h
__text:0000000100003C50 var_B8          = qword ptr -0B8h
__text:0000000100003C50 var_A0          = qword ptr -0A0h
__text:0000000100003C50 var_98          = qword ptr -98h
__text:0000000100003C50 var_90          = qword ptr -90h
__text:0000000100003C50 var_88          = qword ptr -88h
__text:0000000100003C50 var_7C          = dword ptr -7Ch
__text:0000000100003C50 var_78          = qword ptr -78h
__text:0000000100003C50 var_6C          = dword ptr -6Ch
__text:0000000100003C50 var_68          = qword ptr -68h
__text:0000000100003C50 var_60          = qword ptr -60h
__text:0000000100003C50 var_58          = qword ptr -58h
__text:0000000100003C50 var_50          = qword ptr -50h
__text:0000000100003C50 var_44          = dword ptr -44h
__text:0000000100003C50 var_40          = qword ptr -40h
__text:0000000100003C50 var_38          = byte ptr -38h
__text:0000000100003C50 var_29          = byte ptr -29h
__text:0000000100003C50 var_28          = qword ptr -28h
__text:0000000100003C50 var_20          = qword ptr -20h
__text:0000000100003C50 var_11          = byte ptr -11h
__text:0000000100003C50 var_10          = qword ptr -10h
__text:0000000100003C50 var_8           = dword ptr -8
__text:0000000100003C50 var_4           = dword ptr -4
__text:0000000100003C50
__text:0000000100003C50                 push    rbp
__text:0000000100003C51                 mov     rbp, rsp
__text:0000000100003C54                 sub     rsp, 1B0h
__text:0000000100003C5B                 mov     [rbp+var_D8], rdi
__text:0000000100003C62                 mov     [rbp+var_E0], rsi
__text:0000000100003C69                 mov     rsi, [rbp+var_D8]
__text:0000000100003C70                 lea     rdi, [rbp+var_F0]
__text:0000000100003C77                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_ ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::sentry(std::__1::basic_ostream<char,std::__1::char_traits<char>>&)
__text:0000000100003C7C                 jmp     $+5
__text:0000000100003C81 ; ---------------------------------------------------------------------------
__text:0000000100003C81
__text:0000000100003C81 loc_100003C81:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2C↑j
__text:0000000100003C81                 lea     rax, [rbp+var_F0]
__text:0000000100003C88                 mov     [rbp+var_D0], rax
__text:0000000100003C8F                 mov     rax, [rbp+var_D0]
__text:0000000100003C96                 mov     cl, [rax]
__text:0000000100003C98                 mov     [rbp+var_119], cl
__text:0000000100003C9E                 mov     al, [rbp+var_119]
__text:0000000100003CA4                 test    al, 1
__text:0000000100003CA6                 jnz     loc_100003CB1
__text:0000000100003CAC                 jmp     loc_100004056
__text:0000000100003CB1 ; ---------------------------------------------------------------------------
__text:0000000100003CB1
__text:0000000100003CB1 loc_100003CB1:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+56↑j
__text:0000000100003CB1                 mov     rax, [rbp+var_E0]
__text:0000000100003CB8                 mov     [rbp+var_C8], rax
__text:0000000100003CBF                 mov     rdi, rax        ; char *
__text:0000000100003CC2                 call    _strlen
__text:0000000100003CC7                 mov     [rbp+var_128], rax
__text:0000000100003CCE                 jmp     $+5
__text:0000000100003CD3 ; ---------------------------------------------------------------------------
__text:0000000100003CD3
__text:0000000100003CD3 loc_100003CD3:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+7E↑j
__text:0000000100003CD3                 jmp     $+5
__text:0000000100003CD8 ; ---------------------------------------------------------------------------
__text:0000000100003CD8
__text:0000000100003CD8 loc_100003CD8:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100003CD3↑j
__text:0000000100003CD8                 lea     rax, [rbp+var_110]
__text:0000000100003CDF                 mov     rcx, [rbp+var_128]
__text:0000000100003CE6                 mov     [rbp+var_108], rcx
__text:0000000100003CED                 mov     rdx, [rbp+var_D8]
__text:0000000100003CF4                 mov     [rbp+var_B8], rax
__text:0000000100003CFB                 mov     [rbp+var_C0], rdx
__text:0000000100003D02                 mov     rax, [rbp+var_B8]
__text:0000000100003D09                 mov     rdx, [rbp+var_C0]
__text:0000000100003D10                 mov     [rbp+var_98], rax
__text:0000000100003D17                 mov     [rbp+var_A0], rdx
__text:0000000100003D1E                 mov     rax, [rbp+var_98]
__text:0000000100003D25                 mov     rdx, [rbp+var_A0]
__text:0000000100003D2C                 mov     rsi, [rdx]
__text:0000000100003D2F                 mov     rsi, [rsi-18h]
__text:0000000100003D33                 add     rdx, rsi
__text:0000000100003D36                 mov     [rbp+var_90], rdx
__text:0000000100003D3D                 mov     rdx, [rbp+var_90]
__text:0000000100003D44                 mov     [rbp+var_88], rdx
__text:0000000100003D4B                 mov     rdx, [rbp+var_88]
__text:0000000100003D52                 mov     rdx, [rdx+28h]
__text:0000000100003D56                 mov     [rax], rdx
__text:0000000100003D59                 mov     rsi, [rbp+var_E0]
__text:0000000100003D60                 mov     rax, [rbp+var_D8]
__text:0000000100003D67                 mov     rdx, [rax]
__text:0000000100003D6A                 mov     rdx, [rdx-18h]
__text:0000000100003D6E                 add     rax, rdx
__text:0000000100003D71                 mov     [rbp+var_60], rax
__text:0000000100003D75                 mov     rax, [rbp+var_60]
__text:0000000100003D79                 mov     edi, [rax+8]
__text:0000000100003D7C                 mov     [rbp+var_130], rsi
__text:0000000100003D83                 mov     [rbp+var_134], edi
__text:0000000100003D89                 mov     eax, [rbp+var_134]
__text:0000000100003D8F                 and     eax, 0B0h
__text:0000000100003D94                 cmp     eax, 20h ; ' '
__text:0000000100003D99                 jnz     loc_100003DB9
__text:0000000100003D9F                 mov     rax, [rbp+var_E0]
__text:0000000100003DA6                 add     rax, [rbp+var_108]
__text:0000000100003DAD                 mov     [rbp+var_140], rax
__text:0000000100003DB4                 jmp     loc_100003DC7
__text:0000000100003DB9 ; ---------------------------------------------------------------------------
__text:0000000100003DB9
__text:0000000100003DB9 loc_100003DB9:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+149↑j
__text:0000000100003DB9                 mov     rax, [rbp+var_E0]
__text:0000000100003DC0                 mov     [rbp+var_140], rax
__text:0000000100003DC7
__text:0000000100003DC7 loc_100003DC7:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+164↑j
__text:0000000100003DC7                 mov     rax, [rbp+var_140]
__text:0000000100003DCE                 mov     rcx, [rbp+var_E0]
__text:0000000100003DD5                 add     rcx, [rbp+var_108]
__text:0000000100003DDC                 mov     rdx, [rbp+var_D8]
__text:0000000100003DE3                 mov     rsi, [rdx]
__text:0000000100003DE6                 mov     rsi, [rsi-18h]
__text:0000000100003DEA                 add     rdx, rsi
__text:0000000100003DED                 mov     rsi, [rbp+var_D8]
__text:0000000100003DF4                 mov     rdi, [rsi]
__text:0000000100003DF7                 mov     rdi, [rdi-18h]
__text:0000000100003DFB                 add     rsi, rdi
__text:0000000100003DFE                 mov     [rbp+var_50], rsi
__text:0000000100003E02                 mov     rsi, [rbp+var_50]
__text:0000000100003E06                 mov     r8d, [rsi+90h]
__text:0000000100003E0D                 mov     [rbp+var_4], 0FFFFFFFFh
__text:0000000100003E14                 mov     [rbp+var_8], r8d
__text:0000000100003E18                 mov     r8d, [rbp+var_4]
__text:0000000100003E1C                 cmp     r8d, [rbp+var_8]
__text:0000000100003E20                 mov     [rbp+var_148], rax
__text:0000000100003E27                 mov     [rbp+var_150], rcx
__text:0000000100003E2E                 mov     [rbp+var_158], rdx
__text:0000000100003E35                 mov     [rbp+var_160], rsi
__text:0000000100003E3C                 jnz     loc_100003F38
__text:0000000100003E42                 mov     rax, [rbp+var_160]
__text:0000000100003E49                 mov     [rbp+var_28], rax
__text:0000000100003E4D                 mov     [rbp+var_29], 20h ; ' '
__text:0000000100003E51                 mov     rsi, [rbp+var_28]
__text:0000000100003E55                 lea     rdi, [rbp+var_38] ; this
__text:0000000100003E59                 call    __ZNKSt3__18ios_base6getlocEv ; std::__1::ios_base::getloc(void)
__text:0000000100003E5E                 jmp     $+5
__text:0000000100003E63 ; ---------------------------------------------------------------------------
__text:0000000100003E63
__text:0000000100003E63 loc_100003E63:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+20E↑j
__text:0000000100003E63                 lea     rax, [rbp+var_38]
__text:0000000100003E67                 mov     [rbp+var_20], rax
__text:0000000100003E6B                 mov     rsi, cs:__ZNSt3__15ctypeIcE2idE_ptr
__text:0000000100003E72                 mov     rdi, rax
__text:0000000100003E75                 call    __ZNKSt3__16locale9use_facetERNS0_2idE ; std::__1::locale::use_facet(std::__1::locale::id &)
__text:0000000100003E7A                 mov     [rbp+var_168], rax
__text:0000000100003E81                 jmp     $+5
__text:0000000100003E86 ; ---------------------------------------------------------------------------
__text:0000000100003E86
__text:0000000100003E86 loc_100003E86:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+231↑j
__text:0000000100003E86                 mov     al, [rbp+var_29]
__text:0000000100003E89                 mov     rcx, [rbp+var_168]
__text:0000000100003E90                 mov     [rbp+var_10], rcx
__text:0000000100003E94                 mov     [rbp+var_11], al
__text:0000000100003E97                 mov     rdx, [rbp+var_10]
__text:0000000100003E9B                 mov     rsi, [rdx]
__text:0000000100003E9E                 mov     rsi, [rsi+38h]
__text:0000000100003EA2                 movsx   edi, [rbp+var_11]
__text:0000000100003EA6                 mov     [rbp+var_16C], edi
__text:0000000100003EAC                 mov     rdi, rdx
__text:0000000100003EAF                 mov     r8d, [rbp+var_16C]
__text:0000000100003EB6                 mov     [rbp+var_178], rsi
__text:0000000100003EBD                 mov     esi, r8d
__text:0000000100003EC0                 mov     rdx, [rbp+var_178]
__text:0000000100003EC7                 call    rdx
__text:0000000100003EC9                 mov     [rbp+var_179], al
__text:0000000100003ECF                 jmp     loc_100003F14
__text:0000000100003ED4 ; ---------------------------------------------------------------------------
__text:0000000100003ED4                 mov     ecx, edx
__text:0000000100003ED6                 mov     [rbp+var_40], rax
__text:0000000100003EDA                 mov     [rbp+var_44], ecx
__text:0000000100003EDD                 lea     rdi, [rbp+var_38] ; this
__text:0000000100003EE1                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:0000000100003EE6                 jmp     $+5
__text:0000000100003EEB ; ---------------------------------------------------------------------------
__text:0000000100003EEB
__text:0000000100003EEB loc_100003EEB:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+296↑j
__text:0000000100003EEB                 mov     rax, [rbp+var_40]
__text:0000000100003EEF                 mov     ecx, [rbp+var_44]
__text:0000000100003EF2                 mov     [rbp+var_188], rax
__text:0000000100003EF9                 mov     [rbp+var_18C], ecx
__text:0000000100003EFF                 jmp     loc_100004026
__text:0000000100003F04 ; ---------------------------------------------------------------------------
__text:0000000100003F04                 mov     ecx, edx
__text:0000000100003F06                 mov     rdi, rax
__text:0000000100003F09                 mov     [rbp+var_190], ecx
__text:0000000100003F0F                 call    ___clang_call_terminate
__text:0000000100003F14 ; ---------------------------------------------------------------------------
__text:0000000100003F14
__text:0000000100003F14 loc_100003F14:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+27F↑j
__text:0000000100003F14                 lea     rdi, [rbp+var_38] ; this
__text:0000000100003F18                 call    __ZNSt3__16localeD1Ev ; std::__1::locale::~locale()
__text:0000000100003F1D                 jmp     $+5
__text:0000000100003F22 ; ---------------------------------------------------------------------------
__text:0000000100003F22
__text:0000000100003F22 loc_100003F22:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2CD↑j
__text:0000000100003F22                 mov     al, [rbp+var_179]
__text:0000000100003F28                 movsx   ecx, al
__text:0000000100003F2B                 mov     rdx, [rbp+var_160]
__text:0000000100003F32                 mov     [rdx+90h], ecx
__text:0000000100003F38
__text:0000000100003F38 loc_100003F38:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+1EC↑j
__text:0000000100003F38                 mov     rax, [rbp+var_160]
__text:0000000100003F3F                 mov     ecx, [rax+90h]
__text:0000000100003F45                 mov     dl, cl
__text:0000000100003F47                 mov     [rbp+var_191], dl
__text:0000000100003F4D                 mov     rdi, [rbp+var_110]
__text:0000000100003F54                 mov     al, [rbp+var_191]
__text:0000000100003F5A                 movsx   r9d, al
__text:0000000100003F5E                 mov     rsi, [rbp+var_130]
__text:0000000100003F65                 mov     rdx, [rbp+var_148]
__text:0000000100003F6C                 mov     rcx, [rbp+var_150]
__text:0000000100003F73                 mov     r8, [rbp+var_158]
__text:0000000100003F7A                 call    __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)
__text:0000000100003F7F                 mov     [rbp+var_1A0], rax
__text:0000000100003F86                 jmp     $+5
__text:0000000100003F8B ; ---------------------------------------------------------------------------
__text:0000000100003F8B
__text:0000000100003F8B loc_100003F8B:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+336↑j
__text:0000000100003F8B                 lea     rax, [rbp+var_118]
__text:0000000100003F92                 mov     rcx, [rbp+var_1A0]
__text:0000000100003F99                 mov     [rbp+var_118], rcx
__text:0000000100003FA0                 mov     [rbp+var_58], rax
__text:0000000100003FA4                 mov     rax, [rbp+var_58]
__text:0000000100003FA8                 cmp     qword ptr [rax], 0
__text:0000000100003FAF                 jnz     loc_100004051
__text:0000000100003FB5                 mov     rax, [rbp+var_D8]
__text:0000000100003FBC                 mov     rcx, [rax]
__text:0000000100003FBF                 mov     rcx, [rcx-18h]
__text:0000000100003FC3                 add     rax, rcx
__text:0000000100003FC6                 mov     [rbp+var_78], rax
__text:0000000100003FCA                 mov     [rbp+var_7C], 5
__text:0000000100003FD1                 mov     rax, [rbp+var_78]
__text:0000000100003FD5                 mov     [rbp+var_68], rax
__text:0000000100003FD9                 mov     [rbp+var_6C], 5
__text:0000000100003FE0                 mov     rax, [rbp+var_68]
__text:0000000100003FE4                 mov     edx, [rax+20h]
__text:0000000100003FE7                 or      edx, 5
__text:0000000100003FEA                 mov     rdi, rax        ; this
__text:0000000100003FED                 mov     esi, edx        ; unsigned int
__text:0000000100003FEF                 call    __ZNSt3__18ios_base5clearEj ; std::__1::ios_base::clear(uint)
__text:0000000100003FF4                 jmp     $+5
__text:0000000100003FF9 ; ---------------------------------------------------------------------------
__text:0000000100003FF9
__text:0000000100003FF9 loc_100003FF9:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3A4↑j
__text:0000000100003FF9                 jmp     $+5
__text:0000000100003FFE ; ---------------------------------------------------------------------------
__text:0000000100003FFE
__text:0000000100003FFE loc_100003FFE:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100003FF9↑j
__text:0000000100003FFE                 jmp     loc_100004051
__text:0000000100004003 ; ---------------------------------------------------------------------------
__text:0000000100004003                 mov     ecx, edx
__text:0000000100004005                 mov     [rbp+var_F8], rax
__text:000000010000400C                 mov     [rbp+var_FC], ecx
__text:0000000100004012                 jmp     loc_100004071
__text:0000000100004017 ; ---------------------------------------------------------------------------
__text:0000000100004017                 mov     ecx, edx
__text:0000000100004019                 mov     [rbp+var_188], rax
__text:0000000100004020                 mov     [rbp+var_18C], ecx
__text:0000000100004026
__text:0000000100004026 loc_100004026:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+2AF↑j
__text:0000000100004026                 mov     eax, [rbp+var_18C]
__text:000000010000402C                 mov     rcx, [rbp+var_188]
__text:0000000100004033                 mov     [rbp+var_F8], rcx
__text:000000010000403A                 mov     [rbp+var_FC], eax
__text:0000000100004040                 lea     rdi, [rbp+var_F0]
__text:0000000100004047                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
__text:000000010000404C                 jmp     loc_10000406C
__text:0000000100004051 ; ---------------------------------------------------------------------------
__text:0000000100004051
__text:0000000100004051 loc_100004051:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+35F↑j
__text:0000000100004051                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100003FFE↑j
__text:0000000100004051                 jmp     $+5
__text:0000000100004056 ; ---------------------------------------------------------------------------
__text:0000000100004056
__text:0000000100004056 loc_100004056:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+5C↑j
__text:0000000100004056                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100004051↑j
__text:0000000100004056                 lea     rdi, [rbp+var_F0]
__text:000000010000405D                 call    __ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev ; std::__1::basic_ostream<char,std::__1::char_traits<char>>::sentry::~sentry()
__text:0000000100004062                 jmp     $+5
__text:0000000100004067 ; ---------------------------------------------------------------------------
__text:0000000100004067
__text:0000000100004067 loc_100004067:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+412↑j
__text:0000000100004067                 jmp     loc_1000040A4
__text:000000010000406C ; ---------------------------------------------------------------------------
__text:000000010000406C
__text:000000010000406C loc_10000406C:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3FC↑j
__text:000000010000406C                 jmp     $+5
__text:0000000100004071 ; ---------------------------------------------------------------------------
__text:0000000100004071
__text:0000000100004071 loc_100004071:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+3C2↑j
__text:0000000100004071                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_10000406C↑j
__text:0000000100004071                 mov     rdi, [rbp+var_F8] ; void *
__text:0000000100004078                 call    ___cxa_begin_catch
__text:000000010000407D                 mov     rdi, [rbp+var_D8]
__text:0000000100004084                 mov     rcx, [rdi]
__text:0000000100004087                 mov     rcx, [rcx-18h]
__text:000000010000408B                 add     rdi, rcx        ; this
__text:000000010000408E                 mov     [rbp+var_1A8], rax
__text:0000000100004095                 call    __ZNSt3__18ios_base33__set_badbit_and_consider_rethrowEv ; std::__1::ios_base::__set_badbit_and_consider_rethrow(void)
__text:000000010000409A                 jmp     $+5
__text:000000010000409F ; ---------------------------------------------------------------------------
__text:000000010000409F
__text:000000010000409F loc_10000409F:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+44A↑j
__text:000000010000409F                 call    ___cxa_end_catch
__text:00000001000040A4
__text:00000001000040A4 loc_1000040A4:                          ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*):loc_100004067↑j
__text:00000001000040A4                 mov     rax, [rbp+var_D8]
__text:00000001000040AB                 add     rsp, 1B0h
__text:00000001000040B2                 pop     rbp
__text:00000001000040B3                 retn
__text:00000001000040B3 __ZNSt3__1lsINS_11char_traitsIcEEEERNS_13basic_ostreamIcT_EES6_PKc endp
__text:00000001000040B3
__text:00000001000040B4 ; ---------------------------------------------------------------------------
__text:00000001000040B4                 mov     ecx, edx
__text:00000001000040B6                 mov     [rbp-0F8h], rax
__text:00000001000040BD                 mov     [rbp-0FCh], ecx
__text:00000001000040C3                 call    ___cxa_end_catch
__text:00000001000040C8                 jmp     $+5
__text:00000001000040CD ; ---------------------------------------------------------------------------
__text:00000001000040CD
__text:00000001000040CD loc_1000040CD:                          ; CODE XREF: __text:00000001000040C8↑j
__text:00000001000040CD                 jmp     $+5
__text:00000001000040D2 ; ---------------------------------------------------------------------------
__text:00000001000040D2
__text:00000001000040D2 loc_1000040D2:                          ; CODE XREF: __text:loc_1000040CD↑j
__text:00000001000040D2                 mov     rdi, [rbp-0F8h]
__text:00000001000040D9                 call    __Unwind_Resume
__text:00000001000040DE ; ---------------------------------------------------------------------------
__text:00000001000040DE                 mov     ecx, edx
__text:00000001000040E0                 mov     rdi, rax
__text:00000001000040E3                 mov     [rbp-1ACh], ecx
__text:00000001000040E9                 call    ___clang_call_terminate
__text:00000001000040E9 ; ---------------------------------------------------------------------------
__text:00000001000040EE                 align 10h
__text:00000001000040F0
__text:00000001000040F0 ; =============== S U B R O U T I N E =======================================
__text:00000001000040F0
__text:00000001000040F0 ; Attributes: bp-based frame
__text:00000001000040F0
__text:00000001000040F0 ; std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>> std::__1::__pad_and_output<char, std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char, std::__1::char_traits<char>>, char const*, char const*, char const*, std::__1::ios_base &, char)
__text:00000001000040F0 __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ proc near
__text:00000001000040F0                                         ; CODE XREF: std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char)+2ED↑p
__text:00000001000040F0                                         ; std::__1::operator<<<std::__1::char_traits<char>>(std::__1::basic_ostream<char,std::__1::char_traits<char>> &,char const*)+32A↑p
__text:00000001000040F0
__text:00000001000040F0 var_2CC         = dword ptr -2CCh
__text:00000001000040F0 var_2C8         = dword ptr -2C8h
__text:00000001000040F0 var_2C4         = dword ptr -2C4h
__text:00000001000040F0 var_2C0         = qword ptr -2C0h
__text:00000001000040F0 var_2B8         = qword ptr -2B8h
__text:00000001000040F0 var_2B0         = qword ptr -2B0h
__text:00000001000040F0 var_2A8         = qword ptr -2A8h
__text:00000001000040F0 var_2A0         = qword ptr -2A0h
__text:00000001000040F0 var_298         = qword ptr -298h
__text:00000001000040F0 var_290         = qword ptr -290h
__text:00000001000040F0 var_288         = qword ptr -288h
__text:00000001000040F0 var_27C         = dword ptr -27Ch
__text:00000001000040F0 var_278         = qword ptr -278h
__text:00000001000040F0 var_26C         = dword ptr -26Ch
__text:00000001000040F0 var_268         = qword ptr -268h
__text:00000001000040F0 var_260         = byte ptr -260h
__text:00000001000040F0 var_248         = qword ptr -248h
__text:00000001000040F0 var_240         = qword ptr -240h
__text:00000001000040F0 var_238         = qword ptr -238h
__text:00000001000040F0 var_230         = qword ptr -230h
__text:00000001000040F0 var_228         = qword ptr -228h
__text:00000001000040F0 var_219         = byte ptr -219h
__text:00000001000040F0 var_218         = qword ptr -218h
__text:00000001000040F0 var_210         = qword ptr -210h
__text:00000001000040F0 var_208         = qword ptr -208h
__text:00000001000040F0 var_200         = qword ptr -200h
__text:00000001000040F0 var_1F8         = qword ptr -1F8h
__text:00000001000040F0 var_1F0         = qword ptr -1F0h
__text:00000001000040F0 var_1E8         = qword ptr -1E8h
__text:00000001000040F0 var_1E0         = qword ptr -1E0h
__text:00000001000040F0 var_1D8         = qword ptr -1D8h
__text:00000001000040F0 var_1D0         = qword ptr -1D0h
__text:00000001000040F0 var_1C8         = qword ptr -1C8h
__text:00000001000040F0 var_1C0         = qword ptr -1C0h
__text:00000001000040F0 var_1B8         = qword ptr -1B8h
__text:00000001000040F0 var_1B0         = qword ptr -1B0h
__text:00000001000040F0 var_1A8         = qword ptr -1A8h
__text:00000001000040F0 var_1A0         = qword ptr -1A0h
__text:00000001000040F0 var_198         = qword ptr -198h
__text:00000001000040F0 var_190         = qword ptr -190h
__text:00000001000040F0 var_188         = qword ptr -188h
__text:00000001000040F0 var_180         = qword ptr -180h
__text:00000001000040F0 var_178         = qword ptr -178h
__text:00000001000040F0 var_170         = qword ptr -170h
__text:00000001000040F0 var_168         = qword ptr -168h
__text:00000001000040F0 var_160         = qword ptr -160h
__text:00000001000040F0 var_158         = qword ptr -158h
__text:00000001000040F0 var_150         = qword ptr -150h
__text:00000001000040F0 var_148         = qword ptr -148h
__text:00000001000040F0 var_140         = qword ptr -140h
__text:00000001000040F0 var_138         = qword ptr -138h
__text:00000001000040F0 var_130         = qword ptr -130h
__text:00000001000040F0 var_128         = qword ptr -128h
__text:00000001000040F0 var_120         = qword ptr -120h
__text:00000001000040F0 var_118         = qword ptr -118h
__text:00000001000040F0 var_110         = qword ptr -110h
__text:00000001000040F0 var_108         = qword ptr -108h
__text:00000001000040F0 var_100         = qword ptr -100h
__text:00000001000040F0 var_F8          = qword ptr -0F8h
__text:00000001000040F0 var_F0          = qword ptr -0F0h
__text:00000001000040F0 var_E8          = qword ptr -0E8h
__text:00000001000040F0 var_E0          = qword ptr -0E0h
__text:00000001000040F0 var_D8          = qword ptr -0D8h
__text:00000001000040F0 var_D0          = qword ptr -0D0h
__text:00000001000040F0 var_C8          = qword ptr -0C8h
__text:00000001000040F0 var_C0          = qword ptr -0C0h
__text:00000001000040F0 var_B8          = qword ptr -0B8h
__text:00000001000040F0 var_B0          = qword ptr -0B0h
__text:00000001000040F0 var_A8          = qword ptr -0A8h
__text:00000001000040F0 var_A0          = qword ptr -0A0h
__text:00000001000040F0 var_98          = qword ptr -98h
__text:00000001000040F0 var_90          = qword ptr -90h
__text:00000001000040F0 var_88          = qword ptr -88h
__text:00000001000040F0 var_80          = qword ptr -80h
__text:00000001000040F0 var_78          = qword ptr -78h
__text:00000001000040F0 var_70          = qword ptr -70h
__text:00000001000040F0 var_68          = qword ptr -68h
__text:00000001000040F0 var_60          = qword ptr -60h
__text:00000001000040F0 var_51          = byte ptr -51h
__text:00000001000040F0 var_50          = qword ptr -50h
__text:00000001000040F0 var_48          = qword ptr -48h
__text:00000001000040F0 var_39          = byte ptr -39h
__text:00000001000040F0 var_38          = qword ptr -38h
__text:00000001000040F0 var_30          = qword ptr -30h
__text:00000001000040F0 var_28          = qword ptr -28h
__text:00000001000040F0 var_20          = qword ptr -20h
__text:00000001000040F0 var_18          = qword ptr -18h
__text:00000001000040F0 var_10          = qword ptr -10h
__text:00000001000040F0 var_8           = qword ptr -8
__text:00000001000040F0
__text:00000001000040F0                 push    rbp
__text:00000001000040F1                 mov     rbp, rsp
__text:00000001000040F4                 sub     rsp, 2D0h
__text:00000001000040FB                 mov     al, r9b
__text:00000001000040FE                 lea     r10, [rbp+var_228]
__text:0000000100004105                 lea     r11, [rbp+var_1E8]
__text:000000010000410C                 mov     [rbp+var_1F8], rdi
__text:0000000100004113                 mov     [rbp+var_200], rsi
__text:000000010000411A                 mov     [rbp+var_208], rdx
__text:0000000100004121                 mov     [rbp+var_210], rcx
__text:0000000100004128                 mov     [rbp+var_218], r8
__text:000000010000412F                 mov     [rbp+var_219], al
__text:0000000100004135                 mov     rcx, [rbp+var_1F8]
__text:000000010000413C                 mov     [rbp+var_1D8], r11
__text:0000000100004143                 mov     [rbp+var_1E0], 0FFFFFFFFFFFFFFFFh
__text:000000010000414E                 mov     rdx, [rbp+var_1D8]
__text:0000000100004155                 mov     rsi, [rbp+var_1E0]
__text:000000010000415C                 mov     [rbp+var_1C8], rdx
__text:0000000100004163                 mov     [rbp+var_1D0], rsi
__text:000000010000416A                 mov     rdx, [rbp+var_1C8]
__text:0000000100004171                 mov     qword ptr [rdx], 0
__text:0000000100004178                 mov     rdx, [rbp+var_1E8]
__text:000000010000417F                 mov     [rbp+var_228], rdx
__text:0000000100004186                 mov     [rbp+var_1C0], r10
__text:000000010000418D                 cmp     rcx, 0
__text:0000000100004194                 jnz     loc_1000041AD
__text:000000010000419A                 mov     rax, [rbp+var_1F8]
__text:00000001000041A1                 mov     [rbp+var_1F0], rax
__text:00000001000041A8                 jmp     loc_100004772
__text:00000001000041AD ; ---------------------------------------------------------------------------
__text:00000001000041AD
__text:00000001000041AD loc_1000041AD:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+A4↑j
__text:00000001000041AD                 mov     rax, [rbp+var_210]
__text:00000001000041B4                 mov     rcx, [rbp+var_200]
__text:00000001000041BB                 sub     rax, rcx
__text:00000001000041BE                 mov     [rbp+var_230], rax
__text:00000001000041C5                 mov     rax, [rbp+var_218]
__text:00000001000041CC                 mov     [rbp+var_158], rax
__text:00000001000041D3                 mov     rax, [rbp+var_158]
__text:00000001000041DA                 mov     rax, [rax+18h]
__text:00000001000041DE                 mov     [rbp+var_238], rax
__text:00000001000041E5                 mov     rax, [rbp+var_238]
__text:00000001000041EC                 cmp     rax, [rbp+var_230]
__text:00000001000041F3                 jle     loc_100004216
__text:00000001000041F9                 mov     rax, [rbp+var_230]
__text:0000000100004200                 mov     rcx, [rbp+var_238]
__text:0000000100004207                 sub     rcx, rax
__text:000000010000420A                 mov     [rbp+var_238], rcx
__text:0000000100004211                 jmp     loc_100004221
__text:0000000100004216 ; ---------------------------------------------------------------------------
__text:0000000100004216
__text:0000000100004216 loc_100004216:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+103↑j
__text:0000000100004216                 mov     [rbp+var_238], 0
__text:0000000100004221
__text:0000000100004221 loc_100004221:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+121↑j
__text:0000000100004221                 mov     rax, [rbp+var_208]
__text:0000000100004228                 mov     rcx, [rbp+var_200]
__text:000000010000422F                 sub     rax, rcx
__text:0000000100004232                 mov     [rbp+var_240], rax
__text:0000000100004239                 cmp     [rbp+var_240], 0
__text:0000000100004244                 jle     loc_100004321
__text:000000010000424A                 mov     rax, [rbp+var_1F8]
__text:0000000100004251                 mov     rcx, [rbp+var_200]
__text:0000000100004258                 mov     rdx, [rbp+var_240]
__text:000000010000425F                 mov     [rbp+var_F8], rax
__text:0000000100004266                 mov     [rbp+var_100], rcx
__text:000000010000426D                 mov     [rbp+var_108], rdx
__text:0000000100004274                 mov     rax, [rbp+var_F8]
__text:000000010000427B                 mov     rcx, [rax]
__text:000000010000427E                 mov     rcx, [rcx+60h]
__text:0000000100004282                 mov     rsi, [rbp+var_100]
__text:0000000100004289                 mov     rdx, [rbp+var_108]
__text:0000000100004290                 mov     rdi, rax
__text:0000000100004293                 call    rcx
__text:0000000100004295                 cmp     rax, [rbp+var_240]
__text:000000010000429C                 jz      loc_10000431C
__text:00000001000042A2                 lea     rax, [rbp+var_248]
__text:00000001000042A9                 lea     rcx, [rbp+var_F0]
__text:00000001000042B0                 mov     [rbp+var_E0], rcx
__text:00000001000042B7                 mov     [rbp+var_E8], 0FFFFFFFFFFFFFFFFh
__text:00000001000042C2                 mov     rcx, [rbp+var_E0]
__text:00000001000042C9                 mov     rdx, [rbp+var_E8]
__text:00000001000042D0                 mov     [rbp+var_D0], rcx
__text:00000001000042D7                 mov     [rbp+var_D8], rdx
__text:00000001000042DE                 mov     rcx, [rbp+var_D0]
__text:00000001000042E5                 mov     qword ptr [rcx], 0
__text:00000001000042EC                 mov     rcx, [rbp+var_F0]
__text:00000001000042F3                 mov     [rbp+var_248], rcx
__text:00000001000042FA                 mov     [rbp+var_8], rax
__text:00000001000042FE                 mov     [rbp+var_1F8], 0
__text:0000000100004309                 mov     rax, [rbp+var_1F8]
__text:0000000100004310                 mov     [rbp+var_1F0], rax
__text:0000000100004317                 jmp     loc_100004772
__text:000000010000431C ; ---------------------------------------------------------------------------
__text:000000010000431C
__text:000000010000431C loc_10000431C:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+1AC↑j
__text:000000010000431C                 jmp     $+5
__text:0000000100004321 ; ---------------------------------------------------------------------------
__text:0000000100004321
__text:0000000100004321 loc_100004321:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+154↑j
__text:0000000100004321                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_10000431C↑j
__text:0000000100004321                 cmp     [rbp+var_238], 0
__text:000000010000432C                 jle     loc_10000462B
__text:0000000100004332                 lea     rax, [rbp+var_260]
__text:0000000100004339                 mov     rcx, [rbp+var_238]
__text:0000000100004340                 mov     dl, [rbp+var_219]
__text:0000000100004346                 mov     [rbp+var_48], rax
__text:000000010000434A                 mov     [rbp+var_50], rcx
__text:000000010000434E                 mov     [rbp+var_51], dl
__text:0000000100004351                 mov     rax, [rbp+var_48]
__text:0000000100004355                 mov     rcx, [rbp+var_50]
__text:0000000100004359                 mov     dl, [rbp+var_51]
__text:000000010000435C                 mov     [rbp+var_30], rax
__text:0000000100004360                 mov     [rbp+var_38], rcx
__text:0000000100004364                 mov     [rbp+var_39], dl
__text:0000000100004367                 mov     rax, [rbp+var_30]
__text:000000010000436B                 mov     [rbp+var_28], rax
__text:000000010000436F                 mov     rcx, [rbp+var_28]
__text:0000000100004373                 mov     [rbp+var_20], rcx
__text:0000000100004377                 mov     rcx, [rbp+var_20]
__text:000000010000437B                 mov     [rbp+var_18], rcx
__text:000000010000437F                 mov     rcx, [rbp+var_18]
__text:0000000100004383                 mov     [rbp+var_10], rcx
__text:0000000100004387                 mov     rsi, [rbp+var_38]
__text:000000010000438B                 mov     rdi, rax
__text:000000010000438E                 movsx   edx, [rbp+var_39]
__text:0000000100004392                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6__initEmc ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::__init(ulong,char)
__text:0000000100004397                 lea     rax, [rbp+var_260]
__text:000000010000439E                 mov     rcx, [rbp+var_1F8]
__text:00000001000043A5                 mov     [rbp+var_C8], rax
__text:00000001000043AC                 mov     rax, [rbp+var_C8]
__text:00000001000043B3                 mov     [rbp+var_C0], rax
__text:00000001000043BA                 mov     rax, [rbp+var_C0]
__text:00000001000043C1                 mov     [rbp+var_B8], rax
__text:00000001000043C8                 mov     rsi, [rbp+var_B8]
__text:00000001000043CF                 mov     [rbp+var_B0], rsi
__text:00000001000043D6                 mov     rsi, [rbp+var_B0]
__text:00000001000043DD                 mov     [rbp+var_A8], rsi
__text:00000001000043E4                 mov     rsi, [rbp+var_A8]
__text:00000001000043EB                 movzx   edx, byte ptr [rsi]
__text:00000001000043EE                 and     edx, 1
__text:00000001000043F4                 cmp     edx, 0
__text:00000001000043FA                 mov     [rbp+var_290], rcx
__text:0000000100004401                 mov     [rbp+var_298], rax
__text:0000000100004408                 jz      loc_10000443D
__text:000000010000440E                 mov     rax, [rbp+var_298]
__text:0000000100004415                 mov     [rbp+var_78], rax
__text:0000000100004419                 mov     rcx, [rbp+var_78]
__text:000000010000441D                 mov     [rbp+var_70], rcx
__text:0000000100004421                 mov     rcx, [rbp+var_70]
__text:0000000100004425                 mov     [rbp+var_68], rcx
__text:0000000100004429                 mov     rcx, [rbp+var_68]
__text:000000010000442D                 mov     rcx, [rcx+10h]
__text:0000000100004431                 mov     [rbp+var_2A0], rcx
__text:0000000100004438                 jmp     loc_100004492
__text:000000010000443D ; ---------------------------------------------------------------------------
__text:000000010000443D
__text:000000010000443D loc_10000443D:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+318↑j
__text:000000010000443D                 mov     rax, [rbp+var_298]
__text:0000000100004444                 mov     [rbp+var_A0], rax
__text:000000010000444B                 mov     rcx, [rbp+var_A0]
__text:0000000100004452                 mov     [rbp+var_98], rcx
__text:0000000100004459                 mov     rcx, [rbp+var_98]
__text:0000000100004460                 mov     [rbp+var_90], rcx
__text:0000000100004467                 mov     rcx, [rbp+var_90]
__text:000000010000446E                 add     rcx, 1
__text:0000000100004475                 mov     [rbp+var_88], rcx
__text:000000010000447C                 mov     rcx, [rbp+var_88]
__text:0000000100004483                 mov     [rbp+var_80], rcx
__text:0000000100004487                 mov     rcx, [rbp+var_80]
__text:000000010000448B                 mov     [rbp+var_2A0], rcx
__text:0000000100004492
__text:0000000100004492 loc_100004492:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+348↑j
__text:0000000100004492                 mov     rax, [rbp+var_2A0]
__text:0000000100004499                 mov     [rbp+var_60], rax
__text:000000010000449D                 mov     rcx, [rbp+var_238]
__text:00000001000044A4                 mov     rdx, [rbp+var_290]
__text:00000001000044AB                 mov     [rbp+var_110], rdx
__text:00000001000044B2                 mov     [rbp+var_118], rax
__text:00000001000044B9                 mov     [rbp+var_120], rcx
__text:00000001000044C0                 mov     rax, [rbp+var_110]
__text:00000001000044C7                 mov     rsi, [rax]
__text:00000001000044CA                 mov     rsi, [rsi+60h]
__text:00000001000044CE                 mov     rdi, [rbp+var_118]
__text:00000001000044D5                 mov     [rbp+var_2A8], rdi
__text:00000001000044DC                 mov     rdi, rax
__text:00000001000044DF                 mov     rax, [rbp+var_2A8]
__text:00000001000044E6                 mov     [rbp+var_2B0], rsi
__text:00000001000044ED                 mov     rsi, rax
__text:00000001000044F0                 mov     rdx, rcx
__text:00000001000044F3                 mov     rcx, [rbp+var_2B0]
__text:00000001000044FA                 call    rcx
__text:00000001000044FC                 mov     [rbp+var_2B8], rax
__text:0000000100004503                 jmp     $+5
__text:0000000100004508 ; ---------------------------------------------------------------------------
__text:0000000100004508
__text:0000000100004508 loc_100004508:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+413↑j
__text:0000000100004508                 jmp     $+5
__text:000000010000450D ; ---------------------------------------------------------------------------
__text:000000010000450D
__text:000000010000450D loc_10000450D:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100004508↑j
__text:000000010000450D                 mov     rax, [rbp+var_2B8]
__text:0000000100004514                 cmp     rax, [rbp+var_238]
__text:000000010000451B                 jz      loc_1000045D6
__text:0000000100004521                 lea     rax, [rbp+var_148]
__text:0000000100004528                 mov     [rbp+var_138], rax
__text:000000010000452F                 mov     [rbp+var_140], 0FFFFFFFFFFFFFFFFh
__text:000000010000453A                 mov     rax, [rbp+var_138]
__text:0000000100004541                 mov     rcx, [rbp+var_140]
__text:0000000100004548                 mov     [rbp+var_128], rax
__text:000000010000454F                 mov     [rbp+var_130], rcx
__text:0000000100004556                 mov     rax, [rbp+var_128]
__text:000000010000455D                 mov     qword ptr [rax], 0
__text:0000000100004564                 mov     rax, [rbp+var_148]
__text:000000010000456B                 mov     [rbp+var_2C0], rax
__text:0000000100004572                 lea     rax, [rbp+var_278]
__text:0000000100004579                 mov     rcx, [rbp+var_2C0]
__text:0000000100004580                 mov     [rbp+var_278], rcx
__text:0000000100004587                 mov     [rbp+var_150], rax
__text:000000010000458E                 mov     [rbp+var_1F8], 0
__text:0000000100004599                 mov     rax, [rbp+var_1F8]
__text:00000001000045A0                 mov     [rbp+var_1F0], rax
__text:00000001000045A7                 mov     [rbp+var_27C], 1
__text:00000001000045B1                 jmp     loc_1000045E0
__text:00000001000045B6 ; ---------------------------------------------------------------------------
__text:00000001000045B6                 mov     ecx, edx
__text:00000001000045B8                 mov     [rbp+var_268], rax
__text:00000001000045BF                 mov     [rbp+var_26C], ecx
__text:00000001000045C5                 lea     rdi, [rbp+var_260]
__text:00000001000045CC                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000045D1                 jmp     loc_100004626
__text:00000001000045D6 ; ---------------------------------------------------------------------------
__text:00000001000045D6
__text:00000001000045D6 loc_1000045D6:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+42B↑j
__text:00000001000045D6                 mov     [rbp+var_27C], 0
__text:00000001000045E0
__text:00000001000045E0 loc_1000045E0:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+4C1↑j
__text:00000001000045E0                 lea     rdi, [rbp+var_260]
__text:00000001000045E7                 call    __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED1Ev ; std::__1::basic_string<char,std::__1::char_traits<char>,std::__1::allocator<char>>::~basic_string()
__text:00000001000045EC                 mov     eax, [rbp+var_27C]
__text:00000001000045F2                 mov     ecx, eax
__text:00000001000045F4                 sub     ecx, 1
__text:00000001000045F7                 mov     [rbp+var_2C4], eax
__text:00000001000045FD                 mov     [rbp+var_2C8], ecx
__text:0000000100004603                 jz      loc_100004772
__text:0000000100004609                 jmp     $+5
__text:000000010000460E ; ---------------------------------------------------------------------------
__text:000000010000460E
__text:000000010000460E loc_10000460E:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+519↑j
__text:000000010000460E                 mov     eax, [rbp+var_2C4]
__text:0000000100004614                 test    eax, eax
__text:0000000100004616                 jnz     loc_10000479E
__text:000000010000461C                 jmp     $+5
__text:0000000100004621 ; ---------------------------------------------------------------------------
__text:0000000100004621
__text:0000000100004621 loc_100004621:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+52C↑j
__text:0000000100004621                 jmp     loc_10000462B
__text:0000000100004626 ; ---------------------------------------------------------------------------
__text:0000000100004626
__text:0000000100004626 loc_100004626:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+4E1↑j
__text:0000000100004626                 jmp     loc_100004782
__text:000000010000462B ; ---------------------------------------------------------------------------
__text:000000010000462B
__text:000000010000462B loc_10000462B:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+23C↑j
__text:000000010000462B                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100004621↑j
__text:000000010000462B                 mov     rax, [rbp+var_210]
__text:0000000100004632                 mov     rcx, [rbp+var_208]
__text:0000000100004639                 sub     rax, rcx
__text:000000010000463C                 mov     [rbp+var_240], rax
__text:0000000100004643                 cmp     [rbp+var_240], 0
__text:000000010000464E                 jle     loc_10000472E
__text:0000000100004654                 mov     rax, [rbp+var_1F8]
__text:000000010000465B                 mov     rcx, [rbp+var_208]
__text:0000000100004662                 mov     rdx, [rbp+var_240]
__text:0000000100004669                 mov     [rbp+var_160], rax
__text:0000000100004670                 mov     [rbp+var_168], rcx
__text:0000000100004677                 mov     [rbp+var_170], rdx
__text:000000010000467E                 mov     rax, [rbp+var_160]
__text:0000000100004685                 mov     rcx, [rax]
__text:0000000100004688                 mov     rcx, [rcx+60h]
__text:000000010000468C                 mov     rsi, [rbp+var_168]
__text:0000000100004693                 mov     rdx, [rbp+var_170]
__text:000000010000469A                 mov     rdi, rax
__text:000000010000469D                 call    rcx
__text:000000010000469F                 cmp     rax, [rbp+var_240]
__text:00000001000046A6                 jz      loc_100004729
__text:00000001000046AC                 lea     rax, [rbp+var_288]
__text:00000001000046B3                 lea     rcx, [rbp+var_198]
__text:00000001000046BA                 mov     [rbp+var_188], rcx
__text:00000001000046C1                 mov     [rbp+var_190], 0FFFFFFFFFFFFFFFFh
__text:00000001000046CC                 mov     rcx, [rbp+var_188]
__text:00000001000046D3                 mov     rdx, [rbp+var_190]
__text:00000001000046DA                 mov     [rbp+var_178], rcx
__text:00000001000046E1                 mov     [rbp+var_180], rdx
__text:00000001000046E8                 mov     rcx, [rbp+var_178]
__text:00000001000046EF                 mov     qword ptr [rcx], 0
__text:00000001000046F6                 mov     rcx, [rbp+var_198]
__text:00000001000046FD                 mov     [rbp+var_288], rcx
__text:0000000100004704                 mov     [rbp+var_1A0], rax
__text:000000010000470B                 mov     [rbp+var_1F8], 0
__text:0000000100004716                 mov     rax, [rbp+var_1F8]
__text:000000010000471D                 mov     [rbp+var_1F0], rax
__text:0000000100004724                 jmp     loc_100004772
__text:0000000100004729 ; ---------------------------------------------------------------------------
__text:0000000100004729
__text:0000000100004729 loc_100004729:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+5B6↑j
__text:0000000100004729                 jmp     $+5
__text:000000010000472E ; ---------------------------------------------------------------------------
__text:000000010000472E
__text:000000010000472E loc_10000472E:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+55E↑j
__text:000000010000472E                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100004729↑j
__text:000000010000472E                 mov     rax, [rbp+var_218]
__text:0000000100004735                 mov     [rbp+var_1A8], rax
__text:000000010000473C                 mov     [rbp+var_1B0], 0
__text:0000000100004747                 mov     rax, [rbp+var_1A8]
__text:000000010000474E                 mov     rcx, [rax+18h]
__text:0000000100004752                 mov     [rbp+var_1B8], rcx
__text:0000000100004759                 mov     rcx, [rbp+var_1B0]
__text:0000000100004760                 mov     [rax+18h], rcx
__text:0000000100004764                 mov     rax, [rbp+var_1F8]
__text:000000010000476B                 mov     [rbp+var_1F0], rax
__text:0000000100004772
__text:0000000100004772 loc_100004772:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+B8↑j
__text:0000000100004772                                         ; std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+227↑j ...
__text:0000000100004772                 mov     rax, [rbp+var_1F0]
__text:0000000100004779                 add     rsp, 2D0h
__text:0000000100004780                 pop     rbp
__text:0000000100004781                 retn
__text:0000000100004782 ; ---------------------------------------------------------------------------
__text:0000000100004782
__text:0000000100004782 loc_100004782:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char):loc_100004626↑j
__text:0000000100004782                 mov     rdi, [rbp+var_268]
__text:0000000100004789                 call    __Unwind_Resume
__text:000000010000478E ; ---------------------------------------------------------------------------
__text:000000010000478E                 mov     ecx, edx
__text:0000000100004790                 mov     rdi, rax
__text:0000000100004793                 mov     [rbp+var_2CC], ecx
__text:0000000100004799                 call    ___clang_call_terminate
__text:000000010000479E ; ---------------------------------------------------------------------------
__text:000000010000479E
__text:000000010000479E loc_10000479E:                          ; CODE XREF: std::__1::__pad_and_output<char,std::__1::char_traits<char>>(std::__1::ostreambuf_iterator<char,std::__1::char_traits<char>>,char const*,char const*,char const*,std::__1::ios_base &,char)+526↑j
__text:000000010000479E                 xchg    ax, ax
__text:000000010000479E __ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ endp ; sp-analysis failed
__text:000000010000479E
__text:00000001000047A0
__text:00000001000047A0 ; =============== S U B R O U T I N E =======================================
__text:00000001000047A0
__text:00000001000047A0 ; Attributes: bp-based frame
__text:00000001000047A0
__text:00000001000047A0 ; unsigned long std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>>::__count_unique<int>(int const&)const
__text:00000001000047A0 __ZNKSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE14__count_uniqueIiEEmRKT_ proc near
__text:00000001000047A0                                         ; DATA XREF: __la_symbol_ptr:__ZNKSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE14__count_uniqueIiEEmRKT__ptr↓o
__text:00000001000047A0
__text:00000001000047A0 var_150         = qword ptr -150h
__text:00000001000047A0 var_148         = qword ptr -148h
__text:00000001000047A0 var_140         = qword ptr -140h
__text:00000001000047A0 var_138         = qword ptr -138h
__text:00000001000047A0 var_130         = qword ptr -130h
__text:00000001000047A0 var_128         = qword ptr -128h
__text:00000001000047A0 var_120         = qword ptr -120h
__text:00000001000047A0 var_118         = qword ptr -118h
__text:00000001000047A0 var_110         = qword ptr -110h
__text:00000001000047A0 var_108         = qword ptr -108h
__text:00000001000047A0 var_100         = qword ptr -100h
__text:00000001000047A0 var_F8          = qword ptr -0F8h
__text:00000001000047A0 var_F0          = qword ptr -0F0h
__text:00000001000047A0 var_E8          = qword ptr -0E8h
__text:00000001000047A0 var_E0          = qword ptr -0E0h
__text:00000001000047A0 var_D8          = qword ptr -0D8h
__text:00000001000047A0 var_D0          = qword ptr -0D0h
__text:00000001000047A0 var_C8          = qword ptr -0C8h
__text:00000001000047A0 var_C0          = qword ptr -0C0h
__text:00000001000047A0 var_B8          = qword ptr -0B8h
__text:00000001000047A0 var_B0          = qword ptr -0B0h
__text:00000001000047A0 var_A8          = qword ptr -0A8h
__text:00000001000047A0 var_A0          = qword ptr -0A0h
__text:00000001000047A0 var_98          = qword ptr -98h
__text:00000001000047A0 var_90          = qword ptr -90h
__text:00000001000047A0 var_88          = qword ptr -88h
__text:00000001000047A0 var_80          = qword ptr -80h
__text:00000001000047A0 var_78          = qword ptr -78h
__text:00000001000047A0 var_70          = qword ptr -70h
__text:00000001000047A0 var_68          = qword ptr -68h
__text:00000001000047A0 var_60          = qword ptr -60h
__text:00000001000047A0 var_58          = qword ptr -58h
__text:00000001000047A0 var_50          = qword ptr -50h
__text:00000001000047A0 var_48          = qword ptr -48h
__text:00000001000047A0 var_40          = qword ptr -40h
__text:00000001000047A0 var_38          = qword ptr -38h
__text:00000001000047A0 var_30          = qword ptr -30h
__text:00000001000047A0 var_28          = qword ptr -28h
__text:00000001000047A0 var_20          = qword ptr -20h
__text:00000001000047A0 var_18          = qword ptr -18h
__text:00000001000047A0 var_10          = qword ptr -10h
__text:00000001000047A0 var_8           = qword ptr -8
__text:00000001000047A0
__text:00000001000047A0                 push    rbp
__text:00000001000047A1                 mov     rbp, rsp
__text:00000001000047A4                 sub     rsp, 0D0h
__text:00000001000047AB                 mov     [rbp+var_128], rdi
__text:00000001000047B2                 mov     [rbp+var_130], rsi
__text:00000001000047B9                 mov     rsi, [rbp+var_128]
__text:00000001000047C0                 mov     [rbp+var_118], rsi
__text:00000001000047C7                 mov     rdi, [rbp+var_118]
__text:00000001000047CE                 add     rdi, 8
__text:00000001000047D5                 mov     [rbp+var_110], rdi
__text:00000001000047DC                 mov     rdi, [rbp+var_110]
__text:00000001000047E3                 mov     [rbp+var_108], rdi
__text:00000001000047EA                 mov     rdi, [rbp+var_108]
__text:00000001000047F1                 mov     [rbp+var_100], rdi
__text:00000001000047F8                 mov     rdi, [rbp+var_100]
__text:00000001000047FF                 mov     [rbp+var_F8], rdi
__text:0000000100004806                 mov     rdi, [rbp+var_F8]
__text:000000010000480D                 mov     [rbp+var_138], rdi
__text:0000000100004814                 mov     [rbp+var_30], rsi
__text:0000000100004818                 mov     rdi, [rbp+var_30]
__text:000000010000481C                 mov     [rbp+var_28], rdi
__text:0000000100004820                 mov     rdi, [rbp+var_28]
__text:0000000100004824                 add     rdi, 8
__text:000000010000482B                 mov     [rbp+var_20], rdi
__text:000000010000482F                 mov     rdi, [rbp+var_20]
__text:0000000100004833                 mov     [rbp+var_18], rdi
__text:0000000100004837                 mov     rdi, [rbp+var_18]
__text:000000010000483B                 mov     [rbp+var_10], rdi
__text:000000010000483F                 mov     rdi, [rbp+var_10]
__text:0000000100004843                 mov     [rbp+var_8], rdi
__text:0000000100004847                 mov     rdi, [rbp+var_8]
__text:000000010000484B                 mov     rdi, [rdi]
__text:000000010000484E                 mov     [rbp+var_140], rdi
__text:0000000100004855                 mov     [rbp+var_150], rsi
__text:000000010000485C
__text:000000010000485C loc_10000485C:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&):loc_100004A34↓j
__text:000000010000485C                 lea     rax, [rbp+var_148]
__text:0000000100004863                 lea     rcx, [rbp+var_58]
__text:0000000100004867                 mov     rdx, [rbp+var_140]
__text:000000010000486E                 mov     [rbp+var_48], rcx
__text:0000000100004872                 mov     [rbp+var_50], 0FFFFFFFFFFFFFFFFh
__text:000000010000487A                 mov     rcx, [rbp+var_48]
__text:000000010000487E                 mov     rsi, [rbp+var_50]
__text:0000000100004882                 mov     [rbp+var_38], rcx
__text:0000000100004886                 mov     [rbp+var_40], rsi
__text:000000010000488A                 mov     rcx, [rbp+var_38]
__text:000000010000488E                 mov     qword ptr [rcx], 0
__text:0000000100004895                 mov     rcx, [rbp+var_58]
__text:0000000100004899                 mov     [rbp+var_148], rcx
__text:00000001000048A0                 mov     [rbp+var_60], rax
__text:00000001000048A4                 cmp     rdx, 0
__text:00000001000048AB                 jz      loc_100004A39
__text:00000001000048B1                 mov     rax, [rbp+var_150]
__text:00000001000048B8                 mov     [rbp+var_78], rax
__text:00000001000048BC                 mov     rcx, [rbp+var_78]
__text:00000001000048C0                 add     rcx, 10h
__text:00000001000048C7                 mov     [rbp+var_70], rcx
__text:00000001000048CB                 mov     rcx, [rbp+var_70]
__text:00000001000048CF                 mov     [rbp+var_68], rcx
__text:00000001000048D3                 mov     rcx, [rbp+var_68]
__text:00000001000048D7                 mov     rdx, [rbp+var_130]
__text:00000001000048DE                 mov     rsi, [rbp+var_140]
__text:00000001000048E5                 add     rsi, 1Ch
__text:00000001000048EC                 mov     [rbp+var_98], rcx
__text:00000001000048F3                 mov     [rbp+var_A0], rdx
__text:00000001000048FA                 mov     [rbp+var_A8], rsi
__text:0000000100004901                 mov     rcx, [rbp+var_98]
__text:0000000100004908                 mov     rdx, [rbp+var_A0]
__text:000000010000490F                 mov     rsi, [rbp+var_A8]
__text:0000000100004916                 mov     [rbp+var_80], rcx
__text:000000010000491A                 mov     [rbp+var_88], rdx
__text:0000000100004921                 mov     [rbp+var_90], rsi
__text:0000000100004928                 mov     rcx, [rbp+var_88]
__text:000000010000492F                 mov     edi, [rcx]
__text:0000000100004931                 mov     rcx, [rbp+var_90]
__text:0000000100004938                 cmp     edi, [rcx]
__text:000000010000493A                 jge     loc_100004964
__text:0000000100004940                 mov     rax, [rbp+var_140]
__text:0000000100004947                 mov     [rbp+var_138], rax
__text:000000010000494E                 mov     rax, [rbp+var_140]
__text:0000000100004955                 mov     rax, [rax]
__text:0000000100004958                 mov     [rbp+var_140], rax
__text:000000010000495F                 jmp     loc_100004A34
__text:0000000100004964 ; ---------------------------------------------------------------------------
__text:0000000100004964
__text:0000000100004964 loc_100004964:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)+19A↑j
__text:0000000100004964                 mov     rax, [rbp+var_150]
__text:000000010000496B                 mov     [rbp+var_C0], rax
__text:0000000100004972                 mov     rcx, [rbp+var_C0]
__text:0000000100004979                 add     rcx, 10h
__text:0000000100004980                 mov     [rbp+var_B8], rcx
__text:0000000100004987                 mov     rcx, [rbp+var_B8]
__text:000000010000498E                 mov     [rbp+var_B0], rcx
__text:0000000100004995                 mov     rcx, [rbp+var_B0]
__text:000000010000499C                 mov     rdx, [rbp+var_140]
__text:00000001000049A3                 add     rdx, 1Ch
__text:00000001000049AA                 mov     rsi, [rbp+var_130]
__text:00000001000049B1                 mov     [rbp+var_E0], rcx
__text:00000001000049B8                 mov     [rbp+var_E8], rdx
__text:00000001000049BF                 mov     [rbp+var_F0], rsi
__text:00000001000049C6                 mov     rcx, [rbp+var_E0]
__text:00000001000049CD                 mov     rdx, [rbp+var_E8]
__text:00000001000049D4                 mov     rsi, [rbp+var_F0]
__text:00000001000049DB                 mov     [rbp+var_C8], rcx
__text:00000001000049E2                 mov     [rbp+var_D0], rdx
__text:00000001000049E9                 mov     [rbp+var_D8], rsi
__text:00000001000049F0                 mov     rcx, [rbp+var_D0]
__text:00000001000049F7                 mov     edi, [rcx]
__text:00000001000049F9                 mov     rcx, [rbp+var_D8]
__text:0000000100004A00                 cmp     edi, [rcx]
__text:0000000100004A02                 jge     loc_100004A1F
__text:0000000100004A08                 mov     rax, [rbp+var_140]
__text:0000000100004A0F                 mov     rax, [rax+8]
__text:0000000100004A13                 mov     [rbp+var_140], rax
__text:0000000100004A1A                 jmp     loc_100004A2F
__text:0000000100004A1F ; ---------------------------------------------------------------------------
__text:0000000100004A1F
__text:0000000100004A1F loc_100004A1F:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)+262↑j
__text:0000000100004A1F                 mov     [rbp+var_120], 1
__text:0000000100004A2A                 jmp     loc_100004A44
__text:0000000100004A2F ; ---------------------------------------------------------------------------
__text:0000000100004A2F
__text:0000000100004A2F loc_100004A2F:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)+27A↑j
__text:0000000100004A2F                 jmp     $+5
__text:0000000100004A34 ; ---------------------------------------------------------------------------
__text:0000000100004A34
__text:0000000100004A34 loc_100004A34:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)+1BF↑j
__text:0000000100004A34                                         ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&):loc_100004A2F↑j
__text:0000000100004A34                 jmp     loc_10000485C
__text:0000000100004A39 ; ---------------------------------------------------------------------------
__text:0000000100004A39
__text:0000000100004A39 loc_100004A39:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)+10B↑j
__text:0000000100004A39                 mov     [rbp+var_120], 0
__text:0000000100004A44
__text:0000000100004A44 loc_100004A44:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__count_unique<int>(int const&)+28A↑j
__text:0000000100004A44                 mov     rax, [rbp+var_120]
__text:0000000100004A4B                 add     rsp, 0D0h
__text:0000000100004A52                 pop     rbp
__text:0000000100004A53                 retn
__text:0000000100004A53 __ZNKSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE14__count_uniqueIiEEmRKT_ endp
__text:0000000100004A53
__text:0000000100004A53 ; ---------------------------------------------------------------------------
__text:0000000100004A54                 align 20h
__text:0000000100004A60
__text:0000000100004A60 ; =============== S U B R O U T I N E =======================================
__text:0000000100004A60
__text:0000000100004A60 ; Attributes: bp-based frame
__text:0000000100004A60
__text:0000000100004A60 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::clear(void)
__text:0000000100004A60 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5clearEv proc near
__text:0000000100004A60                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5clearEv_ptr↓o
__text:0000000100004A60
__text:0000000100004A60 var_100         = qword ptr -100h
__text:0000000100004A60 var_F8          = qword ptr -0F8h
__text:0000000100004A60 var_F0          = qword ptr -0F0h
__text:0000000100004A60 var_D8          = qword ptr -0D8h
__text:0000000100004A60 var_D0          = qword ptr -0D0h
__text:0000000100004A60 var_C8          = qword ptr -0C8h
__text:0000000100004A60 var_C0          = qword ptr -0C0h
__text:0000000100004A60 var_B8          = qword ptr -0B8h
__text:0000000100004A60 var_B0          = qword ptr -0B0h
__text:0000000100004A60 var_A8          = qword ptr -0A8h
__text:0000000100004A60 var_A0          = qword ptr -0A0h
__text:0000000100004A60 var_98          = qword ptr -98h
__text:0000000100004A60 var_90          = qword ptr -90h
__text:0000000100004A60 var_88          = qword ptr -88h
__text:0000000100004A60 var_80          = qword ptr -80h
__text:0000000100004A60 var_78          = qword ptr -78h
__text:0000000100004A60 var_70          = qword ptr -70h
__text:0000000100004A60 var_68          = qword ptr -68h
__text:0000000100004A60 var_60          = qword ptr -60h
__text:0000000100004A60 var_58          = qword ptr -58h
__text:0000000100004A60 var_50          = qword ptr -50h
__text:0000000100004A60 var_48          = qword ptr -48h
__text:0000000100004A60 var_40          = qword ptr -40h
__text:0000000100004A60 var_38          = qword ptr -38h
__text:0000000100004A60 var_30          = qword ptr -30h
__text:0000000100004A60 var_28          = qword ptr -28h
__text:0000000100004A60 var_20          = qword ptr -20h
__text:0000000100004A60 var_18          = qword ptr -18h
__text:0000000100004A60 var_10          = qword ptr -10h
__text:0000000100004A60 var_8           = qword ptr -8
__text:0000000100004A60
__text:0000000100004A60                 push    rbp
__text:0000000100004A61                 mov     rbp, rsp
__text:0000000100004A64                 sub     rsp, 100h
__text:0000000100004A6B                 mov     [rbp+var_D8], rdi
__text:0000000100004A72                 mov     rdi, [rbp+var_D8]
__text:0000000100004A79                 mov     [rbp+var_D0], rdi
__text:0000000100004A80                 mov     rax, [rbp+var_D0]
__text:0000000100004A87                 mov     [rbp+var_C8], rax
__text:0000000100004A8E                 mov     rax, [rbp+var_C8]
__text:0000000100004A95                 add     rax, 8
__text:0000000100004A9B                 mov     [rbp+var_C0], rax
__text:0000000100004AA2                 mov     rax, [rbp+var_C0]
__text:0000000100004AA9                 mov     [rbp+var_B8], rax
__text:0000000100004AB0                 mov     rax, [rbp+var_B8]
__text:0000000100004AB7                 mov     [rbp+var_B0], rax
__text:0000000100004ABE                 mov     rax, [rbp+var_B0]
__text:0000000100004AC5                 mov     [rbp+var_A8], rax
__text:0000000100004ACC                 mov     rax, [rbp+var_A8]
__text:0000000100004AD3                 mov     rax, [rax]
__text:0000000100004AD6                 mov     [rbp+var_F8], rdi
__text:0000000100004ADD                 mov     rsi, rax
__text:0000000100004AE0                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)
__text:0000000100004AE5                 lea     rax, [rbp+var_70]
__text:0000000100004AE9                 mov     rsi, [rbp+var_F8]
__text:0000000100004AF0                 mov     [rbp+var_18], rsi
__text:0000000100004AF4                 mov     rdi, [rbp+var_18]
__text:0000000100004AF8                 add     rdi, 10h
__text:0000000100004AFF                 mov     [rbp+var_10], rdi
__text:0000000100004B03                 mov     rdi, [rbp+var_10]
__text:0000000100004B07                 mov     [rbp+var_8], rdi
__text:0000000100004B0B                 mov     rdi, [rbp+var_8]
__text:0000000100004B0F                 mov     qword ptr [rdi], 0
__text:0000000100004B16                 mov     [rbp+var_40], rsi
__text:0000000100004B1A                 mov     rdi, [rbp+var_40]
__text:0000000100004B1E                 add     rdi, 8
__text:0000000100004B25                 mov     [rbp+var_38], rdi
__text:0000000100004B29                 mov     rdi, [rbp+var_38]
__text:0000000100004B2D                 mov     [rbp+var_30], rdi
__text:0000000100004B31                 mov     rdi, [rbp+var_30]
__text:0000000100004B35                 mov     [rbp+var_28], rdi
__text:0000000100004B39                 mov     rdi, [rbp+var_28]
__text:0000000100004B3D                 mov     [rbp+var_20], rdi
__text:0000000100004B41                 mov     rdi, [rbp+var_20]
__text:0000000100004B45                 mov     [rbp+var_48], rsi
__text:0000000100004B49                 mov     rcx, [rbp+var_48]
__text:0000000100004B4D                 mov     [rcx], rdi
__text:0000000100004B50                 mov     [rbp+var_60], rax
__text:0000000100004B54                 mov     [rbp+var_68], 0FFFFFFFFFFFFFFFFh
__text:0000000100004B5C                 mov     rax, [rbp+var_60]
__text:0000000100004B60                 mov     rcx, [rbp+var_68]
__text:0000000100004B64                 mov     [rbp+var_50], rax
__text:0000000100004B68                 mov     [rbp+var_58], rcx
__text:0000000100004B6C                 mov     rax, [rbp+var_50]
__text:0000000100004B70                 mov     qword ptr [rax], 0
__text:0000000100004B77                 mov     rax, [rbp+var_70]
__text:0000000100004B7B                 mov     [rbp+var_100], rax
__text:0000000100004B82                 lea     rax, [rbp+var_F0]
__text:0000000100004B89                 mov     rcx, [rbp+var_100]
__text:0000000100004B90                 mov     [rbp+var_F0], rcx
__text:0000000100004B97                 mov     [rbp+var_78], rax
__text:0000000100004B9B                 mov     rax, [rbp+var_F8]
__text:0000000100004BA2                 mov     [rbp+var_A0], rax
__text:0000000100004BA9                 mov     rcx, [rbp+var_A0]
__text:0000000100004BB0                 add     rcx, 8
__text:0000000100004BB7                 mov     [rbp+var_98], rcx
__text:0000000100004BBE                 mov     rcx, [rbp+var_98]
__text:0000000100004BC5                 mov     [rbp+var_90], rcx
__text:0000000100004BCC                 mov     rcx, [rbp+var_90]
__text:0000000100004BD3                 mov     [rbp+var_88], rcx
__text:0000000100004BDA                 mov     rcx, [rbp+var_88]
__text:0000000100004BE1                 mov     [rbp+var_80], rcx
__text:0000000100004BE5                 mov     rcx, [rbp+var_80]
__text:0000000100004BE9                 mov     qword ptr [rcx], 0
__text:0000000100004BF0                 add     rsp, 100h
__text:0000000100004BF7                 pop     rbp
__text:0000000100004BF8                 retn
__text:0000000100004BF8 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE5clearEv endp
__text:0000000100004BF8
__text:0000000100004BF8 ; ---------------------------------------------------------------------------
__text:0000000100004BF9                 align 20h
__text:0000000100004C00
__text:0000000100004C00 ; =============== S U B R O U T I N E =======================================
__text:0000000100004C00
__text:0000000100004C00 ; Attributes: bp-based frame
__text:0000000100004C00
__text:0000000100004C00 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::destroy(std::__1::__tree_node<std::__1::pair<int, int>, void *> *)
__text:0000000100004C00 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE proc near
__text:0000000100004C00                                         ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+C9↓p
__text:0000000100004C00                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+E3↓p
__text:0000000100004C00                                         ; DATA XREF: ...
__text:0000000100004C00
__text:0000000100004C00 var_F8          = qword ptr -0F8h
__text:0000000100004C00 var_F0          = qword ptr -0F0h
__text:0000000100004C00 var_E8          = qword ptr -0E8h
__text:0000000100004C00 var_E0          = qword ptr -0E0h
__text:0000000100004C00 var_D8          = qword ptr -0D8h
__text:0000000100004C00 var_C0          = qword ptr -0C0h
__text:0000000100004C00 var_B8          = qword ptr -0B8h
__text:0000000100004C00 var_B0          = qword ptr -0B0h
__text:0000000100004C00 var_A8          = qword ptr -0A8h
__text:0000000100004C00 var_A0          = qword ptr -0A0h
__text:0000000100004C00 var_98          = qword ptr -98h
__text:0000000100004C00 var_90          = qword ptr -90h
__text:0000000100004C00 var_88          = qword ptr -88h
__text:0000000100004C00 var_80          = qword ptr -80h
__text:0000000100004C00 var_78          = qword ptr -78h
__text:0000000100004C00 var_70          = qword ptr -70h
__text:0000000100004C00 var_68          = qword ptr -68h
__text:0000000100004C00 var_60          = qword ptr -60h
__text:0000000100004C00 var_58          = qword ptr -58h
__text:0000000100004C00 var_40          = qword ptr -40h
__text:0000000100004C00 var_38          = qword ptr -38h
__text:0000000100004C00 var_30          = qword ptr -30h
__text:0000000100004C00 var_28          = qword ptr -28h
__text:0000000100004C00 var_20          = qword ptr -20h
__text:0000000100004C00 var_18          = qword ptr -18h
__text:0000000100004C00 var_10          = qword ptr -10h
__text:0000000100004C00 var_8           = qword ptr -8
__text:0000000100004C00
__text:0000000100004C00                 push    rbp
__text:0000000100004C01                 mov     rbp, rsp
__text:0000000100004C04                 sub     rsp, 100h
__text:0000000100004C0B                 lea     rax, [rbp+var_B0]
__text:0000000100004C12                 mov     [rbp+var_B8], rdi
__text:0000000100004C19                 mov     [rbp+var_C0], rsi
__text:0000000100004C20                 mov     rsi, [rbp+var_B8]
__text:0000000100004C27                 mov     rdi, [rbp+var_C0]
__text:0000000100004C2E                 mov     [rbp+var_A0], rax
__text:0000000100004C35                 mov     [rbp+var_A8], 0FFFFFFFFFFFFFFFFh
__text:0000000100004C40                 mov     rax, [rbp+var_A0]
__text:0000000100004C47                 mov     rcx, [rbp+var_A8]
__text:0000000100004C4E                 mov     [rbp+var_90], rax
__text:0000000100004C55                 mov     [rbp+var_98], rcx
__text:0000000100004C5C                 mov     rax, [rbp+var_90]
__text:0000000100004C63                 mov     qword ptr [rax], 0
__text:0000000100004C6A                 mov     rax, [rbp+var_B0]
__text:0000000100004C71                 mov     [rbp+var_E8], rdi
__text:0000000100004C78                 mov     [rbp+var_F0], rsi
__text:0000000100004C7F                 mov     [rbp+var_F8], rax
__text:0000000100004C86                 lea     rax, [rbp+var_D8]
__text:0000000100004C8D                 mov     rcx, [rbp+var_F8]
__text:0000000100004C94                 mov     [rbp+var_D8], rcx
__text:0000000100004C9B                 mov     [rbp+var_88], rax
__text:0000000100004CA2                 mov     rax, [rbp+var_E8]
__text:0000000100004CA9                 cmp     rax, 0
__text:0000000100004CAF                 jz      loc_100004D8C
__text:0000000100004CB5                 mov     rax, [rbp+var_C0]
__text:0000000100004CBC                 mov     rax, [rax]
__text:0000000100004CBF                 mov     rdi, [rbp+var_F0]
__text:0000000100004CC6                 mov     rsi, rax
__text:0000000100004CC9                 call    __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)
__text:0000000100004CCE                 mov     rax, [rbp+var_C0]
__text:0000000100004CD5                 mov     rax, [rax+8]
__text:0000000100004CD9                 mov     rdi, [rbp+var_F0]
__text:0000000100004CE0                 mov     rsi, rax
__text:0000000100004CE3                 call    __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)
__text:0000000100004CE8                 mov     rax, [rbp+var_F0]
__text:0000000100004CEF                 mov     [rbp+var_18], rax
__text:0000000100004CF3                 mov     rsi, [rbp+var_18]
__text:0000000100004CF7                 add     rsi, 8
__text:0000000100004CFE                 mov     [rbp+var_10], rsi
__text:0000000100004D02                 mov     rsi, [rbp+var_10]
__text:0000000100004D06                 mov     [rbp+var_8], rsi
__text:0000000100004D0A                 mov     rsi, [rbp+var_8]
__text:0000000100004D0E                 mov     [rbp+var_E0], rsi
__text:0000000100004D15                 mov     rsi, [rbp+var_E0]
__text:0000000100004D1C                 mov     rdi, [rbp+var_C0]
__text:0000000100004D23                 add     rdi, 1Ch
__text:0000000100004D2A                 mov     [rbp+var_20], rdi
__text:0000000100004D2E                 mov     rdi, [rbp+var_20]
__text:0000000100004D32                 mov     [rbp+var_38], rsi
__text:0000000100004D36                 mov     [rbp+var_40], rdi
__text:0000000100004D3A                 mov     rsi, [rbp+var_38]
__text:0000000100004D3E                 mov     rdi, [rbp+var_40]
__text:0000000100004D42                 mov     [rbp+var_28], rsi
__text:0000000100004D46                 mov     [rbp+var_30], rdi
__text:0000000100004D4A                 mov     rax, [rbp+var_E0]
__text:0000000100004D51                 mov     rcx, [rbp+var_C0]
__text:0000000100004D58                 mov     [rbp+var_70], rax
__text:0000000100004D5C                 mov     [rbp+var_78], rcx
__text:0000000100004D60                 mov     [rbp+var_80], 1
__text:0000000100004D68                 mov     rax, [rbp+var_70]
__text:0000000100004D6C                 mov     rcx, [rbp+var_78]
__text:0000000100004D70                 mov     rdx, [rbp+var_80]
__text:0000000100004D74                 mov     [rbp+var_58], rax
__text:0000000100004D78                 mov     [rbp+var_60], rcx
__text:0000000100004D7C                 mov     [rbp+var_68], rdx
__text:0000000100004D80                 mov     rax, [rbp+var_60]
__text:0000000100004D84                 mov     rdi, rax        ; void *
__text:0000000100004D87                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100004D8C
__text:0000000100004D8C loc_100004D8C:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)+AF↑j
__text:0000000100004D8C                 add     rsp, 100h
__text:0000000100004D93                 pop     rbp
__text:0000000100004D94                 retn
__text:0000000100004D94 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE endp
__text:0000000100004D94
__text:0000000100004D94 ; ---------------------------------------------------------------------------
__text:0000000100004D95                 align 20h
__text:0000000100004DA0
__text:0000000100004DA0 ; =============== S U B R O U T I N E =======================================
__text:0000000100004DA0
__text:0000000100004DA0 ; Attributes: bp-based frame
__text:0000000100004DA0
__text:0000000100004DA0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__insert_unique(std::__1::pair<int, int> const&)
__text:0000000100004DA0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_ proc near
__text:0000000100004DA0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2__ptr↓o
__text:0000000100004DA0
__text:0000000100004DA0 var_680         = qword ptr -680h
__text:0000000100004DA0 var_678         = qword ptr -678h
__text:0000000100004DA0 var_670         = qword ptr -670h
__text:0000000100004DA0 var_668         = qword ptr -668h
__text:0000000100004DA0 var_660         = qword ptr -660h
__text:0000000100004DA0 var_658         = qword ptr -658h
__text:0000000100004DA0 var_650         = qword ptr -650h
__text:0000000100004DA0 var_648         = qword ptr -648h
__text:0000000100004DA0 var_640         = qword ptr -640h
__text:0000000100004DA0 var_638         = qword ptr -638h
__text:0000000100004DA0 var_630         = qword ptr -630h
__text:0000000100004DA0 var_628         = byte ptr -628h
__text:0000000100004DA0 var_61C         = dword ptr -61Ch
__text:0000000100004DA0 var_618         = qword ptr -618h
__text:0000000100004DA0 var_610         = byte ptr -610h
__text:0000000100004DA0 var_5F8         = qword ptr -5F8h
__text:0000000100004DA0 var_5F0         = qword ptr -5F0h
__text:0000000100004DA0 var_5D8         = qword ptr -5D8h
__text:0000000100004DA0 var_5C9         = byte ptr -5C9h
__text:0000000100004DA0 var_5C8         = qword ptr -5C8h
__text:0000000100004DA0 var_5C0         = qword ptr -5C0h
__text:0000000100004DA0 var_5B8         = qword ptr -5B8h
__text:0000000100004DA0 var_5B0         = qword ptr -5B0h
__text:0000000100004DA0 var_5A8         = qword ptr -5A8h
__text:0000000100004DA0 var_5A0         = qword ptr -5A0h
__text:0000000100004DA0 var_598         = qword ptr -598h
__text:0000000100004DA0 var_590         = qword ptr -590h
__text:0000000100004DA0 var_588         = qword ptr -588h
__text:0000000100004DA0 var_580         = qword ptr -580h
__text:0000000100004DA0 var_578         = qword ptr -578h
__text:0000000100004DA0 var_570         = qword ptr -570h
__text:0000000100004DA0 var_568         = qword ptr -568h
__text:0000000100004DA0 var_560         = qword ptr -560h
__text:0000000100004DA0 var_558         = qword ptr -558h
__text:0000000100004DA0 var_550         = qword ptr -550h
__text:0000000100004DA0 var_548         = qword ptr -548h
__text:0000000100004DA0 var_540         = qword ptr -540h
__text:0000000100004DA0 var_538         = qword ptr -538h
__text:0000000100004DA0 var_530         = qword ptr -530h
__text:0000000100004DA0 var_528         = qword ptr -528h
__text:0000000100004DA0 var_520         = qword ptr -520h
__text:0000000100004DA0 var_518         = qword ptr -518h
__text:0000000100004DA0 var_510         = qword ptr -510h
__text:0000000100004DA0 var_508         = qword ptr -508h
__text:0000000100004DA0 var_500         = qword ptr -500h
__text:0000000100004DA0 var_4F8         = qword ptr -4F8h
__text:0000000100004DA0 var_4F0         = qword ptr -4F0h
__text:0000000100004DA0 var_4D8         = qword ptr -4D8h
__text:0000000100004DA0 var_4D0         = qword ptr -4D0h
__text:0000000100004DA0 var_4C8         = qword ptr -4C8h
__text:0000000100004DA0 var_4C0         = qword ptr -4C0h
__text:0000000100004DA0 var_4B8         = qword ptr -4B8h
__text:0000000100004DA0 var_4B0         = qword ptr -4B0h
__text:0000000100004DA0 var_4A8         = qword ptr -4A8h
__text:0000000100004DA0 var_4A0         = qword ptr -4A0h
__text:0000000100004DA0 var_498         = qword ptr -498h
__text:0000000100004DA0 var_480         = qword ptr -480h
__text:0000000100004DA0 var_478         = qword ptr -478h
__text:0000000100004DA0 var_470         = qword ptr -470h
__text:0000000100004DA0 var_468         = qword ptr -468h
__text:0000000100004DA0 var_460         = qword ptr -460h
__text:0000000100004DA0 var_458         = qword ptr -458h
__text:0000000100004DA0 var_450         = qword ptr -450h
__text:0000000100004DA0 var_448         = qword ptr -448h
__text:0000000100004DA0 var_440         = qword ptr -440h
__text:0000000100004DA0 var_438         = qword ptr -438h
__text:0000000100004DA0 var_430         = qword ptr -430h
__text:0000000100004DA0 var_428         = qword ptr -428h
__text:0000000100004DA0 var_420         = qword ptr -420h
__text:0000000100004DA0 var_418         = qword ptr -418h
__text:0000000100004DA0 var_330         = qword ptr -330h
__text:0000000100004DA0 var_328         = qword ptr -328h
__text:0000000100004DA0 var_320         = qword ptr -320h
__text:0000000100004DA0 var_318         = qword ptr -318h
__text:0000000100004DA0 var_310         = qword ptr -310h
__text:0000000100004DA0 var_308         = qword ptr -308h
__text:0000000100004DA0 var_300         = qword ptr -300h
__text:0000000100004DA0 var_2F8         = qword ptr -2F8h
__text:0000000100004DA0 var_2F0         = byte ptr -2F0h
__text:0000000100004DA0 var_2E8         = qword ptr -2E8h
__text:0000000100004DA0 var_2E0         = qword ptr -2E0h
__text:0000000100004DA0 var_2D8         = qword ptr -2D8h
__text:0000000100004DA0 var_2D0         = qword ptr -2D0h
__text:0000000100004DA0 var_2C8         = qword ptr -2C8h
__text:0000000100004DA0 var_2C0         = byte ptr -2C0h
__text:0000000100004DA0 var_2B8         = qword ptr -2B8h
__text:0000000100004DA0 var_2B0         = qword ptr -2B0h
__text:0000000100004DA0 var_2A8         = qword ptr -2A8h
__text:0000000100004DA0 var_2A0         = qword ptr -2A0h
__text:0000000100004DA0 var_298         = byte ptr -298h
__text:0000000100004DA0 var_290         = qword ptr -290h
__text:0000000100004DA0 var_288         = qword ptr -288h
__text:0000000100004DA0 var_280         = qword ptr -280h
__text:0000000100004DA0 var_278         = qword ptr -278h
__text:0000000100004DA0 var_270         = qword ptr -270h
__text:0000000100004DA0 var_268         = qword ptr -268h
__text:0000000100004DA0 var_260         = qword ptr -260h
__text:0000000100004DA0 var_258         = qword ptr -258h
__text:0000000100004DA0 var_250         = qword ptr -250h
__text:0000000100004DA0 var_248         = qword ptr -248h
__text:0000000100004DA0 var_240         = qword ptr -240h
__text:0000000100004DA0 var_238         = qword ptr -238h
__text:0000000100004DA0 var_230         = qword ptr -230h
__text:0000000100004DA0 var_228         = qword ptr -228h
__text:0000000100004DA0 var_220         = qword ptr -220h
__text:0000000100004DA0 var_218         = qword ptr -218h
__text:0000000100004DA0 var_210         = qword ptr -210h
__text:0000000100004DA0 var_208         = qword ptr -208h
__text:0000000100004DA0 var_200         = qword ptr -200h
__text:0000000100004DA0 var_1F8         = qword ptr -1F8h
__text:0000000100004DA0 var_1F0         = qword ptr -1F0h
__text:0000000100004DA0 var_1E8         = qword ptr -1E8h
__text:0000000100004DA0 var_1E0         = qword ptr -1E0h
__text:0000000100004DA0 var_1C8         = qword ptr -1C8h
__text:0000000100004DA0 var_1C0         = qword ptr -1C0h
__text:0000000100004DA0 var_1B8         = qword ptr -1B8h
__text:0000000100004DA0 var_1B0         = qword ptr -1B0h
__text:0000000100004DA0 var_1A8         = qword ptr -1A8h
__text:0000000100004DA0 var_1A0         = qword ptr -1A0h
__text:0000000100004DA0 var_198         = qword ptr -198h
__text:0000000100004DA0 var_190         = qword ptr -190h
__text:0000000100004DA0 var_188         = qword ptr -188h
__text:0000000100004DA0 var_170         = qword ptr -170h
__text:0000000100004DA0 var_168         = qword ptr -168h
__text:0000000100004DA0 var_160         = qword ptr -160h
__text:0000000100004DA0 var_158         = qword ptr -158h
__text:0000000100004DA0 var_150         = qword ptr -150h
__text:0000000100004DA0 var_148         = qword ptr -148h
__text:0000000100004DA0 var_140         = qword ptr -140h
__text:0000000100004DA0 var_138         = qword ptr -138h
__text:0000000100004DA0 var_130         = qword ptr -130h
__text:0000000100004DA0 var_128         = qword ptr -128h
__text:0000000100004DA0 var_120         = qword ptr -120h
__text:0000000100004DA0 var_118         = qword ptr -118h
__text:0000000100004DA0 var_110         = qword ptr -110h
__text:0000000100004DA0 var_108         = qword ptr -108h
__text:0000000100004DA0 var_100         = qword ptr -100h
__text:0000000100004DA0 var_E8          = qword ptr -0E8h
__text:0000000100004DA0 var_E0          = qword ptr -0E0h
__text:0000000100004DA0 var_D8          = qword ptr -0D8h
__text:0000000100004DA0 var_D0          = qword ptr -0D0h
__text:0000000100004DA0 var_C8          = qword ptr -0C8h
__text:0000000100004DA0 var_C0          = qword ptr -0C0h
__text:0000000100004DA0 var_B8          = qword ptr -0B8h
__text:0000000100004DA0 var_B0          = qword ptr -0B0h
__text:0000000100004DA0 var_A8          = qword ptr -0A8h
__text:0000000100004DA0 var_90          = qword ptr -90h
__text:0000000100004DA0 var_88          = qword ptr -88h
__text:0000000100004DA0 var_80          = qword ptr -80h
__text:0000000100004DA0 var_78          = qword ptr -78h
__text:0000000100004DA0 var_70          = qword ptr -70h
__text:0000000100004DA0 var_68          = qword ptr -68h
__text:0000000100004DA0 var_60          = qword ptr -60h
__text:0000000100004DA0 var_58          = qword ptr -58h
__text:0000000100004DA0 var_50          = qword ptr -50h
__text:0000000100004DA0 var_48          = qword ptr -48h
__text:0000000100004DA0 var_40          = qword ptr -40h
__text:0000000100004DA0 var_38          = qword ptr -38h
__text:0000000100004DA0 var_30          = qword ptr -30h
__text:0000000100004DA0 var_28          = qword ptr -28h
__text:0000000100004DA0 var_20          = qword ptr -20h
__text:0000000100004DA0 var_18          = qword ptr -18h
__text:0000000100004DA0 var_10          = qword ptr -10h
__text:0000000100004DA0
__text:0000000100004DA0                 push    rbp
__text:0000000100004DA1                 mov     rbp, rsp
__text:0000000100004DA4                 push    rbx
__text:0000000100004DA5                 sub     rsp, 678h
__text:0000000100004DAC                 mov     rax, rdi
__text:0000000100004DAF                 lea     rcx, [rbp+var_5B8]
__text:0000000100004DB6                 mov     [rbp+var_5A8], rsi
__text:0000000100004DBD                 mov     [rbp+var_5B0], rdx
__text:0000000100004DC4                 mov     rdx, [rbp+var_5A8]
__text:0000000100004DCB                 mov     rsi, [rbp+var_5B0]
__text:0000000100004DD2                 mov     [rbp+var_630], rdi
__text:0000000100004DD9                 mov     rdi, rdx
__text:0000000100004DDC                 mov     [rbp+var_638], rsi
__text:0000000100004DE3                 mov     rsi, rcx
__text:0000000100004DE6                 mov     rcx, [rbp+var_638]
__text:0000000100004DED                 mov     [rbp+var_640], rdx
__text:0000000100004DF4                 mov     rdx, rcx
__text:0000000100004DF7                 mov     [rbp+var_648], rax
__text:0000000100004DFE                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)
__text:0000000100004E03                 lea     rcx, [rbp+var_5D8]
__text:0000000100004E0A                 lea     rdx, [rbp+var_5A0]
__text:0000000100004E11                 mov     [rbp+var_5C0], rax
__text:0000000100004E18                 mov     rax, [rbp+var_5C0]
__text:0000000100004E1F                 mov     rax, [rax]
__text:0000000100004E22                 mov     [rbp+var_5C8], rax
__text:0000000100004E29                 mov     [rbp+var_5C9], 0
__text:0000000100004E30                 mov     rax, [rbp+var_5C0]
__text:0000000100004E37                 mov     rax, [rax]
__text:0000000100004E3A                 mov     [rbp+var_590], rdx
__text:0000000100004E41                 mov     [rbp+var_598], 0FFFFFFFFFFFFFFFFh
__text:0000000100004E4C                 mov     rdx, [rbp+var_590]
__text:0000000100004E53                 mov     rsi, [rbp+var_598]
__text:0000000100004E5A                 mov     [rbp+var_580], rdx
__text:0000000100004E61                 mov     [rbp+var_588], rsi
__text:0000000100004E68                 mov     rdx, [rbp+var_580]
__text:0000000100004E6F                 mov     qword ptr [rdx], 0
__text:0000000100004E76                 mov     rdx, [rbp+var_5A0]
__text:0000000100004E7D                 mov     [rbp+var_5D8], rdx
__text:0000000100004E84                 mov     [rbp+var_578], rcx
__text:0000000100004E8B                 cmp     rax, 0
__text:0000000100004E91                 jnz     loc_100005714
__text:0000000100004E97                 lea     rdi, [rbp+var_610]
__text:0000000100004E9E                 mov     rdx, [rbp+var_5B0]
__text:0000000100004EA5                 mov     rsi, [rbp+var_640]
__text:0000000100004EAC                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)
__text:0000000100004EB1                 lea     rdx, [rbp+var_438]
__text:0000000100004EB8                 lea     rsi, [rbp+var_610]
__text:0000000100004EBF                 mov     [rbp+var_440], rsi
__text:0000000100004EC6                 mov     rsi, [rbp+var_440]
__text:0000000100004ECD                 mov     [rbp+var_428], rdx
__text:0000000100004ED4                 mov     [rbp+var_430], rsi
__text:0000000100004EDB                 mov     rdx, [rbp+var_428]
__text:0000000100004EE2                 mov     rsi, [rbp+var_430]
__text:0000000100004EE9                 mov     [rbp+var_418], rdx
__text:0000000100004EF0                 mov     [rbp+var_420], rsi
__text:0000000100004EF7                 mov     rdx, [rbp+var_418]
__text:0000000100004EFE                 mov     rsi, [rbp+var_420]
__text:0000000100004F05                 mov     [rdx], rsi
__text:0000000100004F08                 mov     rdx, [rbp+var_438]
__text:0000000100004F0F                 mov     [rbp+var_650], rdx
__text:0000000100004F16                 lea     rax, [rbp+var_2A0]
__text:0000000100004F1D                 lea     rcx, [rbp+var_290]
__text:0000000100004F24                 lea     rdx, [rbp+var_2C8]
__text:0000000100004F2B                 lea     rsi, [rbp+var_2B8]
__text:0000000100004F32                 lea     rdi, [rbp+var_310]
__text:0000000100004F39                 lea     r8, [rbp+var_5F0]
__text:0000000100004F40                 mov     r9, [rbp+var_650]
__text:0000000100004F47                 mov     [rbp+var_5F8], r9
__text:0000000100004F4E                 mov     r10, [rbp+var_5F8]
__text:0000000100004F55                 mov     [rbp+var_328], r8
__text:0000000100004F5C                 mov     [rbp+var_330], r10
__text:0000000100004F63                 mov     r8, [rbp+var_328]
__text:0000000100004F6A                 mov     r10, [rbp+var_330]
__text:0000000100004F71                 mov     [rbp+var_308], r8
__text:0000000100004F78                 mov     [rbp+var_310], r10
__text:0000000100004F7F                 mov     r8, [rbp+var_308]
__text:0000000100004F86                 mov     [rbp+var_300], rdi
__text:0000000100004F8D                 mov     r10, [rbp+var_300]
__text:0000000100004F94                 mov     r10, [r10]
__text:0000000100004F97                 mov     [rbp+var_238], r10
__text:0000000100004F9E                 mov     r10, [rbp+var_238]
__text:0000000100004FA5                 mov     [rbp+var_230], r10
__text:0000000100004FAC                 mov     r11, [rbp+var_230]
__text:0000000100004FB3                 mov     [rbp+var_228], r11
__text:0000000100004FBA                 mov     r11, [rbp+var_228]
__text:0000000100004FC1                 mov     r11, [r11]
__text:0000000100004FC4                 mov     [rbp+var_240], r11
__text:0000000100004FCB                 mov     [rbp+var_220], r10
__text:0000000100004FD2                 mov     r10, [rbp+var_220]
__text:0000000100004FD9                 mov     [rbp+var_218], r10
__text:0000000100004FE0                 mov     r10, [rbp+var_218]
__text:0000000100004FE7                 mov     qword ptr [r10], 0
__text:0000000100004FEE                 mov     r10, [rbp+var_240]
__text:0000000100004FF5                 mov     [rbp+var_248], rdi
__text:0000000100004FFC                 mov     rdi, [rbp+var_248]
__text:0000000100005003                 mov     rdi, [rdi]
__text:0000000100005006                 mov     [rbp+var_260], rdi
__text:000000010000500D                 mov     rdi, [rbp+var_260]
__text:0000000100005014                 mov     [rbp+var_258], rdi
__text:000000010000501B                 mov     rdi, [rbp+var_258]
__text:0000000100005022                 mov     [rbp+var_250], rdi
__text:0000000100005029                 mov     rdi, [rbp+var_250]
__text:0000000100005030                 add     rdi, 8
__text:0000000100005037                 mov     [rbp+var_268], rdi
__text:000000010000503E                 mov     rdi, [rbp+var_268]
__text:0000000100005045                 mov     r11, [rdi]
__text:0000000100005048                 mov     [rbp+var_320], r11
__text:000000010000504F                 mov     rdi, [rdi+8]
__text:0000000100005053                 mov     [rbp+var_318], rdi
__text:000000010000505A                 mov     rdi, [rbp+var_320]
__text:0000000100005061                 mov     bl, byte ptr [rbp+var_318]
__text:0000000100005067                 mov     [rbp+var_2E0], r8
__text:000000010000506E                 mov     [rbp+var_2E8], r10
__text:0000000100005075                 mov     [rbp+var_2F8], rdi
__text:000000010000507C                 mov     [rbp+var_2F0], bl
__text:0000000100005082                 mov     rdi, [rbp+var_2E0]
__text:0000000100005089                 mov     r8, [rbp+var_2E8]
__text:0000000100005090                 mov     r10, [rbp+var_2F8]
__text:0000000100005097                 mov     bl, [rbp+var_2F0]
__text:000000010000509D                 mov     [rbp+var_2B0], rdi
__text:00000001000050A4                 mov     [rbp+var_2B8], r8
__text:00000001000050AB                 mov     [rbp+var_2C8], r10
__text:00000001000050B2                 mov     [rbp+var_2C0], bl
__text:00000001000050B8                 mov     rdi, [rbp+var_2B0]
__text:00000001000050BF                 mov     [rbp+var_2A8], rsi
__text:00000001000050C6                 mov     rsi, [rbp+var_2A8]
__text:00000001000050CD                 mov     rsi, [rsi]
__text:00000001000050D0                 mov     [rbp+var_270], rdx
__text:00000001000050D7                 mov     rdx, [rbp+var_270]
__text:00000001000050DE                 mov     r8, [rdx]
__text:00000001000050E1                 mov     [rbp+var_2D8], r8
__text:00000001000050E8                 mov     rdx, [rdx+8]
__text:00000001000050EC                 mov     [rbp+var_2D0], rdx
__text:00000001000050F3                 mov     rdx, [rbp+var_2D8]
__text:00000001000050FA                 mov     bl, byte ptr [rbp+var_2D0]
__text:0000000100005100                 mov     [rbp+var_288], rdi
__text:0000000100005107                 mov     [rbp+var_290], rsi
__text:000000010000510E                 mov     [rbp+var_2A0], rdx
__text:0000000100005115                 mov     [rbp+var_298], bl
__text:000000010000511B                 mov     rdx, [rbp+var_288]
__text:0000000100005122                 mov     [rbp+var_280], rcx
__text:0000000100005129                 mov     rcx, [rbp+var_280]
__text:0000000100005130                 mov     rcx, [rcx]
__text:0000000100005133                 mov     [rdx], rcx
__text:0000000100005136                 mov     [rbp+var_278], rax
__text:000000010000513D                 mov     rax, [rbp+var_278]
__text:0000000100005144                 mov     rcx, [rax]
__text:0000000100005147                 mov     [rdx+8], rcx
__text:000000010000514B                 mov     rax, [rax+8]
__text:000000010000514F                 mov     [rdx+10h], rax
__text:0000000100005153                 lea     rax, [rbp+var_610]
__text:000000010000515A                 mov     [rbp+var_130], rax
__text:0000000100005161                 mov     rax, [rbp+var_130]
__text:0000000100005168                 mov     [rbp+var_128], rax
__text:000000010000516F                 mov     rax, [rbp+var_128]
__text:0000000100005176                 mov     [rbp+var_110], rax
__text:000000010000517D                 mov     [rbp+var_118], 0
__text:0000000100005188                 mov     rax, [rbp+var_110]
__text:000000010000518F                 mov     [rbp+var_108], rax
__text:0000000100005196                 mov     rcx, [rbp+var_108]
__text:000000010000519D                 mov     [rbp+var_100], rcx
__text:00000001000051A4                 mov     rcx, [rbp+var_100]
__text:00000001000051AB                 mov     rcx, [rcx]
__text:00000001000051AE                 mov     [rbp+var_120], rcx
__text:00000001000051B5                 mov     rcx, [rbp+var_118]
__text:00000001000051BC                 mov     [rbp+var_70], rax
__text:00000001000051C0                 mov     rdx, [rbp+var_70]
__text:00000001000051C4                 mov     [rbp+var_68], rdx
__text:00000001000051C8                 mov     rdx, [rbp+var_68]
__text:00000001000051CC                 mov     [rdx], rcx
__text:00000001000051CF                 cmp     [rbp+var_120], 0
__text:00000001000051DA                 mov     [rbp+var_658], rax
__text:00000001000051E1                 jz      loc_1000052F5
__text:00000001000051E7                 mov     rax, [rbp+var_658]
__text:00000001000051EE                 mov     [rbp+var_60], rax
__text:00000001000051F2                 mov     rcx, [rbp+var_60]
__text:00000001000051F6                 mov     [rbp+var_58], rcx
__text:00000001000051FA                 mov     rcx, [rbp+var_58]
__text:00000001000051FE                 add     rcx, 8
__text:0000000100005205                 mov     rdx, [rbp+var_120]
__text:000000010000520C                 mov     [rbp+var_E0], rcx
__text:0000000100005213                 mov     [rbp+var_E8], rdx
__text:000000010000521A                 mov     rcx, [rbp+var_E0]
__text:0000000100005221                 test    byte ptr [rcx+8], 1
__text:0000000100005225                 mov     [rbp+var_660], rcx
__text:000000010000522C                 jz      loc_10000527C
__text:0000000100005232                 mov     rax, [rbp+var_660]
__text:0000000100005239                 mov     rcx, [rax]
__text:000000010000523C                 mov     rdx, [rbp+var_E8]
__text:0000000100005243                 add     rdx, 1Ch
__text:000000010000524A                 mov     [rbp+var_D8], rdx
__text:0000000100005251                 mov     rdx, [rbp+var_D8]
__text:0000000100005258                 mov     [rbp+var_88], rcx
__text:000000010000525F                 mov     [rbp+var_90], rdx
__text:0000000100005266                 mov     rcx, [rbp+var_88]
__text:000000010000526D                 mov     rdx, [rbp+var_90]
__text:0000000100005274                 mov     [rbp+var_78], rcx
__text:0000000100005278                 mov     [rbp+var_80], rdx
__text:000000010000527C
__text:000000010000527C loc_10000527C:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+48C↑j
__text:000000010000527C                 cmp     [rbp+var_E8], 0
__text:0000000100005287                 jz      loc_1000052F0
__text:000000010000528D                 mov     rax, [rbp+var_660]
__text:0000000100005294                 mov     rcx, [rax]
__text:0000000100005297                 mov     rdx, [rbp+var_E8]
__text:000000010000529E                 mov     [rbp+var_C0], rcx
__text:00000001000052A5                 mov     [rbp+var_C8], rdx
__text:00000001000052AC                 mov     [rbp+var_D0], 1
__text:00000001000052B7                 mov     rcx, [rbp+var_C0]
__text:00000001000052BE                 mov     rdx, [rbp+var_C8]
__text:00000001000052C5                 mov     rsi, [rbp+var_D0]
__text:00000001000052CC                 mov     [rbp+var_A8], rcx
__text:00000001000052D3                 mov     [rbp+var_B0], rdx
__text:00000001000052DA                 mov     [rbp+var_B8], rsi
__text:00000001000052E1                 mov     rcx, [rbp+var_B0]
__text:00000001000052E8                 mov     rdi, rcx        ; void *
__text:00000001000052EB                 call    __ZdlPv         ; operator delete(void *)
__text:00000001000052F0
__text:00000001000052F0 loc_1000052F0:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+4E7↑j
__text:00000001000052F0                 jmp     $+5
__text:00000001000052F5 ; ---------------------------------------------------------------------------
__text:00000001000052F5
__text:00000001000052F5 loc_1000052F5:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+441↑j
__text:00000001000052F5                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&):loc_1000052F0↑j
__text:00000001000052F5                 mov     rsi, [rbp+var_5B8]
__text:00000001000052FC                 mov     rdx, [rbp+var_5C0]
__text:0000000100005303                 lea     rax, [rbp+var_5F0]
__text:000000010000530A                 mov     [rbp+var_50], rax
__text:000000010000530E                 mov     [rbp+var_48], rax
__text:0000000100005312                 mov     [rbp+var_40], rax
__text:0000000100005316                 mov     rcx, [rbp+var_5F0]
__text:000000010000531D                 mov     rdi, [rbp+var_640]
__text:0000000100005324                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *&,std::__1::__tree_node_base<void *> *)
__text:0000000100005329                 jmp     $+5
__text:000000010000532E ; ---------------------------------------------------------------------------
__text:000000010000532E
__text:000000010000532E loc_10000532E:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+589↑j
__text:000000010000532E                 lea     rax, [rbp+var_5F0]
__text:0000000100005335                 mov     [rbp+var_30], rax
__text:0000000100005339                 mov     rcx, [rbp+var_30]
__text:000000010000533D                 mov     [rbp+var_28], rcx
__text:0000000100005341                 mov     rdx, [rbp+var_28]
__text:0000000100005345                 mov     [rbp+var_20], rdx
__text:0000000100005349                 mov     rdx, [rbp+var_20]
__text:000000010000534D                 mov     rdx, [rdx]
__text:0000000100005350                 mov     [rbp+var_38], rdx
__text:0000000100005354                 mov     [rbp+var_18], rcx
__text:0000000100005358                 mov     rcx, [rbp+var_18]
__text:000000010000535C                 mov     [rbp+var_10], rcx
__text:0000000100005360                 mov     rcx, [rbp+var_10]
__text:0000000100005364                 mov     qword ptr [rcx], 0
__text:000000010000536B                 mov     rcx, [rbp+var_38]
__text:000000010000536F                 mov     [rbp+var_5C8], rcx
__text:0000000100005376                 mov     [rbp+var_5C9], 1
__text:000000010000537D                 mov     [rbp+var_210], rax
__text:0000000100005384                 mov     rax, [rbp+var_210]
__text:000000010000538B                 mov     [rbp+var_208], rax
__text:0000000100005392                 mov     rax, [rbp+var_208]
__text:0000000100005399                 mov     [rbp+var_1F0], rax
__text:00000001000053A0                 mov     [rbp+var_1F8], 0
__text:00000001000053AB                 mov     rax, [rbp+var_1F0]
__text:00000001000053B2                 mov     [rbp+var_1E8], rax
__text:00000001000053B9                 mov     rcx, [rbp+var_1E8]
__text:00000001000053C0                 mov     [rbp+var_1E0], rcx
__text:00000001000053C7                 mov     rcx, [rbp+var_1E0]
__text:00000001000053CE                 mov     rcx, [rcx]
__text:00000001000053D1                 mov     [rbp+var_200], rcx
__text:00000001000053D8                 mov     rcx, [rbp+var_1F8]
__text:00000001000053DF                 mov     [rbp+var_150], rax
__text:00000001000053E6                 mov     rdx, [rbp+var_150]
__text:00000001000053ED                 mov     [rbp+var_148], rdx
__text:00000001000053F4                 mov     rdx, [rbp+var_148]
__text:00000001000053FB                 mov     [rdx], rcx
__text:00000001000053FE                 cmp     [rbp+var_200], 0
__text:0000000100005409                 mov     [rbp+var_668], rax
__text:0000000100005410                 jz      loc_100005536
__text:0000000100005416                 mov     rax, [rbp+var_668]
__text:000000010000541D                 mov     [rbp+var_140], rax
__text:0000000100005424                 mov     rcx, [rbp+var_140]
__text:000000010000542B                 mov     [rbp+var_138], rcx
__text:0000000100005432                 mov     rcx, [rbp+var_138]
__text:0000000100005439                 add     rcx, 8
__text:0000000100005440                 mov     rdx, [rbp+var_200]
__text:0000000100005447                 mov     [rbp+var_1C0], rcx
__text:000000010000544E                 mov     [rbp+var_1C8], rdx
__text:0000000100005455                 mov     rcx, [rbp+var_1C0]
__text:000000010000545C                 test    byte ptr [rcx+8], 1
__text:0000000100005460                 mov     [rbp+var_670], rcx
__text:0000000100005467                 jz      loc_1000054BD
__text:000000010000546D                 mov     rax, [rbp+var_670]
__text:0000000100005474                 mov     rcx, [rax]
__text:0000000100005477                 mov     rdx, [rbp+var_1C8]
__text:000000010000547E                 add     rdx, 1Ch
__text:0000000100005485                 mov     [rbp+var_1B8], rdx
__text:000000010000548C                 mov     rdx, [rbp+var_1B8]
__text:0000000100005493                 mov     [rbp+var_168], rcx
__text:000000010000549A                 mov     [rbp+var_170], rdx
__text:00000001000054A1                 mov     rcx, [rbp+var_168]
__text:00000001000054A8                 mov     rdx, [rbp+var_170]
__text:00000001000054AF                 mov     [rbp+var_158], rcx
__text:00000001000054B6                 mov     [rbp+var_160], rdx
__text:00000001000054BD
__text:00000001000054BD loc_1000054BD:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+6C7↑j
__text:00000001000054BD                 cmp     [rbp+var_1C8], 0
__text:00000001000054C8                 jz      loc_100005531
__text:00000001000054CE                 mov     rax, [rbp+var_670]
__text:00000001000054D5                 mov     rcx, [rax]
__text:00000001000054D8                 mov     rdx, [rbp+var_1C8]
__text:00000001000054DF                 mov     [rbp+var_1A0], rcx
__text:00000001000054E6                 mov     [rbp+var_1A8], rdx
__text:00000001000054ED                 mov     [rbp+var_1B0], 1
__text:00000001000054F8                 mov     rcx, [rbp+var_1A0]
__text:00000001000054FF                 mov     rdx, [rbp+var_1A8]
__text:0000000100005506                 mov     rsi, [rbp+var_1B0]
__text:000000010000550D                 mov     [rbp+var_188], rcx
__text:0000000100005514                 mov     [rbp+var_190], rdx
__text:000000010000551B                 mov     [rbp+var_198], rsi
__text:0000000100005522                 mov     rcx, [rbp+var_190]
__text:0000000100005529                 mov     rdi, rcx        ; void *
__text:000000010000552C                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100005531
__text:0000000100005531 loc_100005531:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+728↑j
__text:0000000100005531                 jmp     $+5
__text:0000000100005536 ; ---------------------------------------------------------------------------
__text:0000000100005536
__text:0000000100005536 loc_100005536:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+670↑j
__text:0000000100005536                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&):loc_100005531↑j
__text:0000000100005536                 jmp     loc_100005714
__text:000000010000553B ; ---------------------------------------------------------------------------
__text:000000010000553B                 lea     rcx, [rbp+var_5F0]
__text:0000000100005542                 mov     esi, edx
__text:0000000100005544                 mov     [rbp+var_618], rax
__text:000000010000554B                 mov     [rbp+var_61C], esi
__text:0000000100005551                 mov     [rbp+var_520], rcx
__text:0000000100005558                 mov     rax, [rbp+var_520]
__text:000000010000555F                 mov     [rbp+var_518], rax
__text:0000000100005566                 mov     rax, [rbp+var_518]
__text:000000010000556D                 mov     [rbp+var_500], rax
__text:0000000100005574                 mov     [rbp+var_508], 0
__text:000000010000557F                 mov     rax, [rbp+var_500]
__text:0000000100005586                 mov     [rbp+var_4F8], rax
__text:000000010000558D                 mov     rcx, [rbp+var_4F8]
__text:0000000100005594                 mov     [rbp+var_4F0], rcx
__text:000000010000559B                 mov     rcx, [rbp+var_4F0]
__text:00000001000055A2                 mov     rcx, [rcx]
__text:00000001000055A5                 mov     [rbp+var_510], rcx
__text:00000001000055AC                 mov     rcx, [rbp+var_508]
__text:00000001000055B3                 mov     [rbp+var_460], rax
__text:00000001000055BA                 mov     rdx, [rbp+var_460]
__text:00000001000055C1                 mov     [rbp+var_458], rdx
__text:00000001000055C8                 mov     rdx, [rbp+var_458]
__text:00000001000055CF                 mov     [rdx], rcx
__text:00000001000055D2                 cmp     [rbp+var_510], 0
__text:00000001000055DD                 mov     [rbp+var_678], rax
__text:00000001000055E4                 jz      loc_10000570A
__text:00000001000055EA                 mov     rax, [rbp+var_678]
__text:00000001000055F1                 mov     [rbp+var_450], rax
__text:00000001000055F8                 mov     rcx, [rbp+var_450]
__text:00000001000055FF                 mov     [rbp+var_448], rcx
__text:0000000100005606                 mov     rcx, [rbp+var_448]
__text:000000010000560D                 add     rcx, 8
__text:0000000100005614                 mov     rdx, [rbp+var_510]
__text:000000010000561B                 mov     [rbp+var_4D0], rcx
__text:0000000100005622                 mov     [rbp+var_4D8], rdx
__text:0000000100005629                 mov     rcx, [rbp+var_4D0]
__text:0000000100005630                 test    byte ptr [rcx+8], 1
__text:0000000100005634                 mov     [rbp+var_680], rcx
__text:000000010000563B                 jz      loc_100005691
__text:0000000100005641                 mov     rax, [rbp+var_680]
__text:0000000100005648                 mov     rcx, [rax]
__text:000000010000564B                 mov     rdx, [rbp+var_4D8]
__text:0000000100005652                 add     rdx, 1Ch
__text:0000000100005659                 mov     [rbp+var_4C8], rdx
__text:0000000100005660                 mov     rdx, [rbp+var_4C8]
__text:0000000100005667                 mov     [rbp+var_478], rcx
__text:000000010000566E                 mov     [rbp+var_480], rdx
__text:0000000100005675                 mov     rcx, [rbp+var_478]
__text:000000010000567C                 mov     rdx, [rbp+var_480]
__text:0000000100005683                 mov     [rbp+var_468], rcx
__text:000000010000568A                 mov     [rbp+var_470], rdx
__text:0000000100005691
__text:0000000100005691 loc_100005691:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+89B↑j
__text:0000000100005691                 cmp     [rbp+var_4D8], 0
__text:000000010000569C                 jz      loc_100005705
__text:00000001000056A2                 mov     rax, [rbp+var_680]
__text:00000001000056A9                 mov     rcx, [rax]
__text:00000001000056AC                 mov     rdx, [rbp+var_4D8]
__text:00000001000056B3                 mov     [rbp+var_4B0], rcx
__text:00000001000056BA                 mov     [rbp+var_4B8], rdx
__text:00000001000056C1                 mov     [rbp+var_4C0], 1
__text:00000001000056CC                 mov     rcx, [rbp+var_4B0]
__text:00000001000056D3                 mov     rdx, [rbp+var_4B8]
__text:00000001000056DA                 mov     rsi, [rbp+var_4C0]
__text:00000001000056E1                 mov     [rbp+var_498], rcx
__text:00000001000056E8                 mov     [rbp+var_4A0], rdx
__text:00000001000056EF                 mov     [rbp+var_4A8], rsi
__text:00000001000056F6                 mov     rcx, [rbp+var_4A0]
__text:00000001000056FD                 mov     rdi, rcx        ; void *
__text:0000000100005700                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100005705
__text:0000000100005705 loc_100005705:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+8FC↑j
__text:0000000100005705                 jmp     $+5
__text:000000010000570A ; ---------------------------------------------------------------------------
__text:000000010000570A
__text:000000010000570A loc_10000570A:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+844↑j
__text:000000010000570A                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&):loc_100005705↑j
__text:000000010000570A                 jmp     $+5
__text:000000010000570F ; ---------------------------------------------------------------------------
__text:000000010000570F
__text:000000010000570F loc_10000570F:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&):loc_10000570A↑j
__text:000000010000570F                 jmp     loc_1000057E1
__text:0000000100005714 ; ---------------------------------------------------------------------------
__text:0000000100005714
__text:0000000100005714 loc_100005714:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&)+F1↑j
__text:0000000100005714                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&):loc_100005536↑j
__text:0000000100005714                 lea     rax, [rbp+var_5C9]
__text:000000010000571B                 lea     rcx, [rbp+var_628]
__text:0000000100005722                 mov     rdx, [rbp+var_5C8]
__text:0000000100005729                 mov     [rbp+var_538], rcx
__text:0000000100005730                 mov     [rbp+var_540], rdx
__text:0000000100005737                 mov     rdx, [rbp+var_538]
__text:000000010000573E                 mov     rsi, [rbp+var_540]
__text:0000000100005745                 mov     [rbp+var_528], rdx
__text:000000010000574C                 mov     [rbp+var_530], rsi
__text:0000000100005753                 mov     rdx, [rbp+var_528]
__text:000000010000575A                 mov     rsi, [rbp+var_530]
__text:0000000100005761                 mov     [rdx], rsi
__text:0000000100005764                 mov     rdx, [rbp+var_630]
__text:000000010000576B                 mov     [rbp+var_560], rdx
__text:0000000100005772                 mov     [rbp+var_568], rcx
__text:0000000100005779                 mov     [rbp+var_570], rax
__text:0000000100005780                 mov     rax, [rbp+var_560]
__text:0000000100005787                 mov     rcx, [rbp+var_570]
__text:000000010000578E                 mov     rsi, [rbp+var_568]
__text:0000000100005795                 mov     [rbp+var_548], rax
__text:000000010000579C                 mov     [rbp+var_550], rsi
__text:00000001000057A3                 mov     [rbp+var_558], rcx
__text:00000001000057AA                 mov     rax, [rbp+var_548]
__text:00000001000057B1                 mov     rcx, [rbp+var_550]
__text:00000001000057B8                 mov     rcx, [rcx]
__text:00000001000057BB                 mov     [rax], rcx
__text:00000001000057BE                 mov     rcx, [rbp+var_558]
__text:00000001000057C5                 mov     dil, [rcx]
__text:00000001000057C8                 and     dil, 1
__text:00000001000057CC                 mov     [rax+8], dil
__text:00000001000057D0                 mov     rax, [rbp+var_648]
__text:00000001000057D7                 add     rsp, 678h
__text:00000001000057DE                 pop     rbx
__text:00000001000057DF                 pop     rbp
__text:00000001000057E0                 retn
__text:00000001000057E1 ; ---------------------------------------------------------------------------
__text:00000001000057E1
__text:00000001000057E1 loc_1000057E1:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_unique(std::__1::pair<int,int> const&):loc_10000570F↑j
__text:00000001000057E1                 mov     rdi, [rbp+var_618]
__text:00000001000057E8                 call    __Unwind_Resume
__text:00000001000057E8 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE15__insert_uniqueERKS2_ endp
__text:00000001000057E8
__text:00000001000057E8 ; ---------------------------------------------------------------------------
__text:00000001000057ED                 align 10h
__text:00000001000057F0
__text:00000001000057F0 ; =============== S U B R O U T I N E =======================================
__text:00000001000057F0
__text:00000001000057F0 ; Attributes: bp-based frame
__text:00000001000057F0
__text:00000001000057F0 ; std::__1::__tree_node_base<void *> *& std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__find_equal<std::__1::pair<int, int>>(std::__1::__tree_node_base<void *> *&, std::__1::pair<int, int> const&)
__text:00000001000057F0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_ proc near
__text:00000001000057F0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT__ptr↓o
__text:00000001000057F0
__text:00000001000057F0 var_1B4         = byte ptr -1B4h
__text:00000001000057F0 var_1B3         = byte ptr -1B3h
__text:00000001000057F0 var_1B2         = byte ptr -1B2h
__text:00000001000057F0 var_1B1         = byte ptr -1B1h
__text:00000001000057F0 var_1B0         = qword ptr -1B0h
__text:00000001000057F0 var_1A8         = qword ptr -1A8h
__text:00000001000057F0 var_1A0         = qword ptr -1A0h
__text:00000001000057F0 var_198         = qword ptr -198h
__text:00000001000057F0 var_190         = qword ptr -190h
__text:00000001000057F0 var_188         = qword ptr -188h
__text:00000001000057F0 var_180         = qword ptr -180h
__text:00000001000057F0 var_178         = qword ptr -178h
__text:00000001000057F0 var_170         = qword ptr -170h
__text:00000001000057F0 var_168         = qword ptr -168h
__text:00000001000057F0 var_160         = qword ptr -160h
__text:00000001000057F0 var_158         = qword ptr -158h
__text:00000001000057F0 var_150         = qword ptr -150h
__text:00000001000057F0 var_148         = qword ptr -148h
__text:00000001000057F0 var_140         = qword ptr -140h
__text:00000001000057F0 var_138         = qword ptr -138h
__text:00000001000057F0 var_130         = qword ptr -130h
__text:00000001000057F0 var_128         = qword ptr -128h
__text:00000001000057F0 var_120         = qword ptr -120h
__text:00000001000057F0 var_118         = qword ptr -118h
__text:00000001000057F0 var_110         = qword ptr -110h
__text:00000001000057F0 var_108         = qword ptr -108h
__text:00000001000057F0 var_100         = qword ptr -100h
__text:00000001000057F0 var_F8          = qword ptr -0F8h
__text:00000001000057F0 var_F0          = qword ptr -0F0h
__text:00000001000057F0 var_E8          = qword ptr -0E8h
__text:00000001000057F0 var_E0          = qword ptr -0E0h
__text:00000001000057F0 var_D8          = qword ptr -0D8h
__text:00000001000057F0 var_D0          = qword ptr -0D0h
__text:00000001000057F0 var_C8          = qword ptr -0C8h
__text:00000001000057F0 var_C0          = qword ptr -0C0h
__text:00000001000057F0 var_B8          = qword ptr -0B8h
__text:00000001000057F0 var_B0          = qword ptr -0B0h
__text:00000001000057F0 var_A8          = qword ptr -0A8h
__text:00000001000057F0 var_A0          = qword ptr -0A0h
__text:00000001000057F0 var_98          = qword ptr -98h
__text:00000001000057F0 var_90          = qword ptr -90h
__text:00000001000057F0 var_88          = qword ptr -88h
__text:00000001000057F0 var_80          = qword ptr -80h
__text:00000001000057F0 var_78          = qword ptr -78h
__text:00000001000057F0 var_70          = qword ptr -70h
__text:00000001000057F0 var_68          = qword ptr -68h
__text:00000001000057F0 var_60          = qword ptr -60h
__text:00000001000057F0 var_58          = qword ptr -58h
__text:00000001000057F0 var_50          = qword ptr -50h
__text:00000001000057F0 var_48          = qword ptr -48h
__text:00000001000057F0 var_40          = qword ptr -40h
__text:00000001000057F0 var_38          = qword ptr -38h
__text:00000001000057F0 var_30          = qword ptr -30h
__text:00000001000057F0 var_28          = qword ptr -28h
__text:00000001000057F0 var_20          = qword ptr -20h
__text:00000001000057F0 var_18          = qword ptr -18h
__text:00000001000057F0 var_10          = qword ptr -10h
__text:00000001000057F0 var_8           = qword ptr -8
__text:00000001000057F0
__text:00000001000057F0                 push    rbp
__text:00000001000057F1                 mov     rbp, rsp
__text:00000001000057F4                 sub     rsp, 138h
__text:00000001000057FB                 lea     rax, [rbp+var_198]
__text:0000000100005802                 lea     rcx, [rbp+var_28]
__text:0000000100005806                 mov     [rbp+var_178], rdi
__text:000000010000580D                 mov     [rbp+var_180], rsi
__text:0000000100005814                 mov     [rbp+var_188], rdx
__text:000000010000581B                 mov     rdx, [rbp+var_178]
__text:0000000100005822                 mov     [rbp+var_168], rdx
__text:0000000100005829                 mov     rsi, [rbp+var_168]
__text:0000000100005830                 mov     [rbp+var_160], rsi
__text:0000000100005837                 mov     rsi, [rbp+var_160]
__text:000000010000583E                 add     rsi, 8
__text:0000000100005845                 mov     [rbp+var_158], rsi
__text:000000010000584C                 mov     rsi, [rbp+var_158]
__text:0000000100005853                 mov     [rbp+var_150], rsi
__text:000000010000585A                 mov     rsi, [rbp+var_150]
__text:0000000100005861                 mov     [rbp+var_148], rsi
__text:0000000100005868                 mov     rsi, [rbp+var_148]
__text:000000010000586F                 mov     [rbp+var_140], rsi
__text:0000000100005876                 mov     rsi, [rbp+var_140]
__text:000000010000587D                 mov     rsi, [rsi]
__text:0000000100005880                 mov     [rbp+var_190], rsi
__text:0000000100005887                 mov     rsi, [rbp+var_190]
__text:000000010000588E                 mov     [rbp+var_18], rcx
__text:0000000100005892                 mov     [rbp+var_20], 0FFFFFFFFFFFFFFFFh
__text:000000010000589A                 mov     rcx, [rbp+var_18]
__text:000000010000589E                 mov     rdi, [rbp+var_20]
__text:00000001000058A2                 mov     [rbp+var_8], rcx
__text:00000001000058A6                 mov     [rbp+var_10], rdi
__text:00000001000058AA                 mov     rcx, [rbp+var_8]
__text:00000001000058AE                 mov     qword ptr [rcx], 0
__text:00000001000058B5                 mov     rcx, [rbp+var_28]
__text:00000001000058B9                 mov     [rbp+var_198], rcx
__text:00000001000058C0                 mov     [rbp+var_30], rax
__text:00000001000058C4                 cmp     rsi, 0
__text:00000001000058CB                 mov     [rbp+var_1B0], rdx
__text:00000001000058D2                 jz      loc_100005C39
__text:00000001000058D8                 jmp     $+5
__text:00000001000058DD ; ---------------------------------------------------------------------------
__text:00000001000058DD
__text:00000001000058DD loc_1000058DD:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+E8↑j
__text:00000001000058DD                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&):loc_100005C34↓j
__text:00000001000058DD                 mov     al, 1
__text:00000001000058DF                 mov     rcx, [rbp+var_1B0]
__text:00000001000058E6                 mov     [rbp+var_48], rcx
__text:00000001000058EA                 mov     rdx, [rbp+var_48]
__text:00000001000058EE                 add     rdx, 10h
__text:00000001000058F5                 mov     [rbp+var_40], rdx
__text:00000001000058F9                 mov     rdx, [rbp+var_40]
__text:00000001000058FD                 mov     [rbp+var_38], rdx
__text:0000000100005901                 mov     rdx, [rbp+var_38]
__text:0000000100005905                 mov     rsi, [rbp+var_188]
__text:000000010000590C                 mov     rdi, [rbp+var_190]
__text:0000000100005913                 add     rdi, 1Ch
__text:000000010000591A                 mov     [rbp+var_60], rdx
__text:000000010000591E                 mov     [rbp+var_68], rsi
__text:0000000100005922                 mov     [rbp+var_70], rdi
__text:0000000100005926                 mov     rdx, [rbp+var_68]
__text:000000010000592A                 mov     rsi, [rbp+var_70]
__text:000000010000592E                 mov     [rbp+var_50], rdx
__text:0000000100005932                 mov     [rbp+var_58], rsi
__text:0000000100005936                 mov     rdx, [rbp+var_50]
__text:000000010000593A                 mov     r8d, [rdx]
__text:000000010000593D                 mov     rdx, [rbp+var_58]
__text:0000000100005941                 cmp     r8d, [rdx]
__text:0000000100005944                 mov     [rbp+var_1B1], al
__text:000000010000594A                 jl      loc_10000598D
__text:0000000100005950                 mov     al, 0
__text:0000000100005952                 mov     rcx, [rbp+var_58]
__text:0000000100005956                 mov     edx, [rcx]
__text:0000000100005958                 mov     rcx, [rbp+var_50]
__text:000000010000595C                 cmp     edx, [rcx]
__text:000000010000595E                 mov     [rbp+var_1B2], al
__text:0000000100005964                 jl      loc_100005981
__text:000000010000596A                 mov     rax, [rbp+var_50]
__text:000000010000596E                 mov     ecx, [rax+4]
__text:0000000100005971                 mov     rax, [rbp+var_58]
__text:0000000100005975                 cmp     ecx, [rax+4]
__text:0000000100005978                 setl    dl
__text:000000010000597B                 mov     [rbp+var_1B2], dl
__text:0000000100005981
__text:0000000100005981 loc_100005981:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+174↑j
__text:0000000100005981                 mov     al, [rbp+var_1B2]
__text:0000000100005987                 mov     [rbp+var_1B1], al
__text:000000010000598D
__text:000000010000598D loc_10000598D:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+15A↑j
__text:000000010000598D                 mov     al, [rbp+var_1B1]
__text:0000000100005993                 test    al, 1
__text:0000000100005995                 jnz     loc_1000059A0
__text:000000010000599B                 jmp     loc_100005A4F
__text:00000001000059A0 ; ---------------------------------------------------------------------------
__text:00000001000059A0
__text:00000001000059A0 loc_1000059A0:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+1A5↑j
__text:00000001000059A0                 lea     rax, [rbp+var_1A0]
__text:00000001000059A7                 lea     rcx, [rbp+var_98]
__text:00000001000059AE                 mov     rdx, [rbp+var_190]
__text:00000001000059B5                 mov     rdx, [rdx]
__text:00000001000059B8                 mov     [rbp+var_88], rcx
__text:00000001000059BF                 mov     [rbp+var_90], 0FFFFFFFFFFFFFFFFh
__text:00000001000059CA                 mov     rcx, [rbp+var_88]
__text:00000001000059D1                 mov     rsi, [rbp+var_90]
__text:00000001000059D8                 mov     [rbp+var_78], rcx
__text:00000001000059DC                 mov     [rbp+var_80], rsi
__text:00000001000059E0                 mov     rcx, [rbp+var_78]
__text:00000001000059E4                 mov     qword ptr [rcx], 0
__text:00000001000059EB                 mov     rcx, [rbp+var_98]
__text:00000001000059F2                 mov     [rbp+var_1A0], rcx
__text:00000001000059F9                 mov     [rbp+var_A0], rax
__text:0000000100005A00                 cmp     rdx, 0
__text:0000000100005A07                 jz      loc_100005A23
__text:0000000100005A0D                 mov     rax, [rbp+var_190]
__text:0000000100005A14                 mov     rax, [rax]
__text:0000000100005A17                 mov     [rbp+var_190], rax
__text:0000000100005A1E                 jmp     loc_100005A4A
__text:0000000100005A23 ; ---------------------------------------------------------------------------
__text:0000000100005A23
__text:0000000100005A23 loc_100005A23:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+217↑j
__text:0000000100005A23                 mov     rax, [rbp+var_190]
__text:0000000100005A2A                 mov     rcx, [rbp+var_180]
__text:0000000100005A31                 mov     [rcx], rax
__text:0000000100005A34                 mov     rax, [rbp+var_180]
__text:0000000100005A3B                 mov     rax, [rax]
__text:0000000100005A3E                 mov     [rbp+var_170], rax
__text:0000000100005A45                 jmp     loc_100005CA8
__text:0000000100005A4A ; ---------------------------------------------------------------------------
__text:0000000100005A4A
__text:0000000100005A4A loc_100005A4A:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+22E↑j
__text:0000000100005A4A                 jmp     loc_100005C34
__text:0000000100005A4F ; ---------------------------------------------------------------------------
__text:0000000100005A4F
__text:0000000100005A4F loc_100005A4F:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+1AB↑j
__text:0000000100005A4F                 mov     al, 1
__text:0000000100005A51                 mov     rcx, [rbp+var_1B0]
__text:0000000100005A58                 mov     [rbp+var_B8], rcx
__text:0000000100005A5F                 mov     rdx, [rbp+var_B8]
__text:0000000100005A66                 add     rdx, 10h
__text:0000000100005A6D                 mov     [rbp+var_B0], rdx
__text:0000000100005A74                 mov     rdx, [rbp+var_B0]
__text:0000000100005A7B                 mov     [rbp+var_A8], rdx
__text:0000000100005A82                 mov     rdx, [rbp+var_A8]
__text:0000000100005A89                 mov     rsi, [rbp+var_190]
__text:0000000100005A90                 add     rsi, 1Ch
__text:0000000100005A97                 mov     rdi, [rbp+var_188]
__text:0000000100005A9E                 mov     [rbp+var_D0], rdx
__text:0000000100005AA5                 mov     [rbp+var_D8], rsi
__text:0000000100005AAC                 mov     [rbp+var_E0], rdi
__text:0000000100005AB3                 mov     rdx, [rbp+var_D8]
__text:0000000100005ABA                 mov     rsi, [rbp+var_E0]
__text:0000000100005AC1                 mov     [rbp+var_C0], rdx
__text:0000000100005AC8                 mov     [rbp+var_C8], rsi
__text:0000000100005ACF                 mov     rdx, [rbp+var_C0]
__text:0000000100005AD6                 mov     r8d, [rdx]
__text:0000000100005AD9                 mov     rdx, [rbp+var_C8]
__text:0000000100005AE0                 cmp     r8d, [rdx]
__text:0000000100005AE3                 mov     [rbp+var_1B3], al
__text:0000000100005AE9                 jl      loc_100005B38
__text:0000000100005AEF                 mov     al, 0
__text:0000000100005AF1                 mov     rcx, [rbp+var_C8]
__text:0000000100005AF8                 mov     edx, [rcx]
__text:0000000100005AFA                 mov     rcx, [rbp+var_C0]
__text:0000000100005B01                 cmp     edx, [rcx]
__text:0000000100005B03                 mov     [rbp+var_1B4], al
__text:0000000100005B09                 jl      loc_100005B2C
__text:0000000100005B0F                 mov     rax, [rbp+var_C0]
__text:0000000100005B16                 mov     ecx, [rax+4]
__text:0000000100005B19                 mov     rax, [rbp+var_C8]
__text:0000000100005B20                 cmp     ecx, [rax+4]
__text:0000000100005B23                 setl    dl
__text:0000000100005B26                 mov     [rbp+var_1B4], dl
__text:0000000100005B2C
__text:0000000100005B2C loc_100005B2C:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+319↑j
__text:0000000100005B2C                 mov     al, [rbp+var_1B4]
__text:0000000100005B32                 mov     [rbp+var_1B3], al
__text:0000000100005B38
__text:0000000100005B38 loc_100005B38:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+2F9↑j
__text:0000000100005B38                 mov     al, [rbp+var_1B3]
__text:0000000100005B3E                 test    al, 1
__text:0000000100005B40                 jnz     loc_100005B4B
__text:0000000100005B46                 jmp     loc_100005C0B
__text:0000000100005B4B ; ---------------------------------------------------------------------------
__text:0000000100005B4B
__text:0000000100005B4B loc_100005B4B:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+350↑j
__text:0000000100005B4B                 lea     rax, [rbp+var_1A8]
__text:0000000100005B52                 lea     rcx, [rbp+var_108]
__text:0000000100005B59                 mov     rdx, [rbp+var_190]
__text:0000000100005B60                 mov     rdx, [rdx+8]
__text:0000000100005B64                 mov     [rbp+var_F8], rcx
__text:0000000100005B6B                 mov     [rbp+var_100], 0FFFFFFFFFFFFFFFFh
__text:0000000100005B76                 mov     rcx, [rbp+var_F8]
__text:0000000100005B7D                 mov     rsi, [rbp+var_100]
__text:0000000100005B84                 mov     [rbp+var_E8], rcx
__text:0000000100005B8B                 mov     [rbp+var_F0], rsi
__text:0000000100005B92                 mov     rcx, [rbp+var_E8]
__text:0000000100005B99                 mov     qword ptr [rcx], 0
__text:0000000100005BA0                 mov     rcx, [rbp+var_108]
__text:0000000100005BA7                 mov     [rbp+var_1A8], rcx
__text:0000000100005BAE                 mov     [rbp+var_110], rax
__text:0000000100005BB5                 cmp     rdx, 0
__text:0000000100005BBC                 jz      loc_100005BD9
__text:0000000100005BC2                 mov     rax, [rbp+var_190]
__text:0000000100005BC9                 mov     rax, [rax+8]
__text:0000000100005BCD                 mov     [rbp+var_190], rax
__text:0000000100005BD4                 jmp     loc_100005C06
__text:0000000100005BD9 ; ---------------------------------------------------------------------------
__text:0000000100005BD9
__text:0000000100005BD9 loc_100005BD9:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+3CC↑j
__text:0000000100005BD9                 mov     rax, [rbp+var_190]
__text:0000000100005BE0                 mov     rcx, [rbp+var_180]
__text:0000000100005BE7                 mov     [rcx], rax
__text:0000000100005BEA                 mov     rax, [rbp+var_180]
__text:0000000100005BF1                 mov     rax, [rax]
__text:0000000100005BF4                 add     rax, 8
__text:0000000100005BFA                 mov     [rbp+var_170], rax
__text:0000000100005C01                 jmp     loc_100005CA8
__text:0000000100005C06 ; ---------------------------------------------------------------------------
__text:0000000100005C06
__text:0000000100005C06 loc_100005C06:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+3E4↑j
__text:0000000100005C06                 jmp     loc_100005C2F
__text:0000000100005C0B ; ---------------------------------------------------------------------------
__text:0000000100005C0B
__text:0000000100005C0B loc_100005C0B:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+356↑j
__text:0000000100005C0B                 mov     rax, [rbp+var_190]
__text:0000000100005C12                 mov     rcx, [rbp+var_180]
__text:0000000100005C19                 mov     [rcx], rax
__text:0000000100005C1C                 mov     rax, [rbp+var_180]
__text:0000000100005C23                 mov     [rbp+var_170], rax
__text:0000000100005C2A                 jmp     loc_100005CA8
__text:0000000100005C2F ; ---------------------------------------------------------------------------
__text:0000000100005C2F
__text:0000000100005C2F loc_100005C2F:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&):loc_100005C06↑j
__text:0000000100005C2F                 jmp     $+5
__text:0000000100005C34 ; ---------------------------------------------------------------------------
__text:0000000100005C34
__text:0000000100005C34 loc_100005C34:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&):loc_100005A4A↑j
__text:0000000100005C34                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&):loc_100005C2F↑j
__text:0000000100005C34                 jmp     loc_1000058DD
__text:0000000100005C39 ; ---------------------------------------------------------------------------
__text:0000000100005C39
__text:0000000100005C39 loc_100005C39:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+E2↑j
__text:0000000100005C39                 mov     rax, [rbp+var_1B0]
__text:0000000100005C40                 mov     [rbp+var_138], rax
__text:0000000100005C47                 mov     rcx, [rbp+var_138]
__text:0000000100005C4E                 add     rcx, 8
__text:0000000100005C55                 mov     [rbp+var_130], rcx
__text:0000000100005C5C                 mov     rcx, [rbp+var_130]
__text:0000000100005C63                 mov     [rbp+var_128], rcx
__text:0000000100005C6A                 mov     rcx, [rbp+var_128]
__text:0000000100005C71                 mov     [rbp+var_120], rcx
__text:0000000100005C78                 mov     rcx, [rbp+var_120]
__text:0000000100005C7F                 mov     [rbp+var_118], rcx
__text:0000000100005C86                 mov     rcx, [rbp+var_118]
__text:0000000100005C8D                 mov     rdx, [rbp+var_180]
__text:0000000100005C94                 mov     [rdx], rcx
__text:0000000100005C97                 mov     rcx, [rbp+var_180]
__text:0000000100005C9E                 mov     rcx, [rcx]
__text:0000000100005CA1                 mov     [rbp+var_170], rcx
__text:0000000100005CA8
__text:0000000100005CA8 loc_100005CA8:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+255↑j
__text:0000000100005CA8                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__find_equal<std::__1::pair<int,int>>(std::__1::__tree_node_base<void *> *&,std::__1::pair<int,int> const&)+411↑j ...
__text:0000000100005CA8                 mov     rax, [rbp+var_170]
__text:0000000100005CAF                 add     rsp, 138h
__text:0000000100005CB6                 pop     rbp
__text:0000000100005CB7                 retn
__text:0000000100005CB7 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE12__find_equalIS2_EERPNS_16__tree_node_baseIPvEESD_RKT_ endp
__text:0000000100005CB7
__text:0000000100005CB7 ; ---------------------------------------------------------------------------
__text:0000000100005CB8                 align 20h
__text:0000000100005CC0
__text:0000000100005CC0 ; =============== S U B R O U T I N E =======================================
__text:0000000100005CC0
__text:0000000100005CC0 ; Attributes: bp-based frame
__text:0000000100005CC0
__text:0000000100005CC0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__construct_node(std::__1::pair<int, int> const&)
__text:0000000100005CC0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_ proc near
__text:0000000100005CC0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2__ptr↓o
__text:0000000100005CC0
__text:0000000100005CC0 var_C38         = qword ptr -0C38h
__text:0000000100005CC0 var_C30         = qword ptr -0C30h
__text:0000000100005CC0 var_C28         = qword ptr -0C28h
__text:0000000100005CC0 var_C20         = qword ptr -0C20h
__text:0000000100005CC0 var_C18         = qword ptr -0C18h
__text:0000000100005CC0 var_C10         = qword ptr -0C10h
__text:0000000100005CC0 var_C08         = qword ptr -0C08h
__text:0000000100005CC0 var_C00         = qword ptr -0C00h
__text:0000000100005CC0 var_BF8         = qword ptr -0BF8h
__text:0000000100005CC0 var_BF0         = qword ptr -0BF0h
__text:0000000100005CC0 var_BE8         = qword ptr -0BE8h
__text:0000000100005CC0 var_BE0         = qword ptr -0BE0h
__text:0000000100005CC0 var_BD8         = qword ptr -0BD8h
__text:0000000100005CC0 var_BD0         = qword ptr -0BD0h
__text:0000000100005CC0 var_BC8         = qword ptr -0BC8h
__text:0000000100005CC0 var_BBC         = dword ptr -0BBCh
__text:0000000100005CC0 var_BB8         = byte ptr -0BB8h
__text:0000000100005CC0 var_BA0         = qword ptr -0BA0h
__text:0000000100005CC0 var_B88         = qword ptr -0B88h
__text:0000000100005CC0 var_B80         = byte ptr -0B80h
__text:0000000100005CC0 var_B78         = byte ptr -0B78h
__text:0000000100005CC0 var_B60         = qword ptr -0B60h
__text:0000000100005CC0 var_B58         = qword ptr -0B58h
__text:0000000100005CC0 var_B50         = qword ptr -0B50h
__text:0000000100005CC0 var_B48         = qword ptr -0B48h
__text:0000000100005CC0 var_B40         = qword ptr -0B40h
__text:0000000100005CC0 var_B38         = qword ptr -0B38h
__text:0000000100005CC0 var_B30         = qword ptr -0B30h
__text:0000000100005CC0 var_B28         = qword ptr -0B28h
__text:0000000100005CC0 var_B20         = qword ptr -0B20h
__text:0000000100005CC0 var_B18         = qword ptr -0B18h
__text:0000000100005CC0 var_B10         = qword ptr -0B10h
__text:0000000100005CC0 var_B08         = qword ptr -0B08h
__text:0000000100005CC0 var_B00         = qword ptr -0B00h
__text:0000000100005CC0 var_AF8         = qword ptr -0AF8h
__text:0000000100005CC0 var_AF0         = qword ptr -0AF0h
__text:0000000100005CC0 var_A08         = qword ptr -0A08h
__text:0000000100005CC0 var_A00         = byte ptr -0A00h
__text:0000000100005CC0 var_9F8         = qword ptr -9F8h
__text:0000000100005CC0 var_9F0         = qword ptr -9F0h
__text:0000000100005CC0 var_9E8         = qword ptr -9E8h
__text:0000000100005CC0 var_9E0         = qword ptr -9E0h
__text:0000000100005CC0 var_9D8         = qword ptr -9D8h
__text:0000000100005CC0 var_9D0         = byte ptr -9D0h
__text:0000000100005CC0 var_9C8         = qword ptr -9C8h
__text:0000000100005CC0 var_9C0         = qword ptr -9C0h
__text:0000000100005CC0 var_9B8         = qword ptr -9B8h
__text:0000000100005CC0 var_9B0         = qword ptr -9B0h
__text:0000000100005CC0 var_9A8         = byte ptr -9A8h
__text:0000000100005CC0 var_9A0         = qword ptr -9A0h
__text:0000000100005CC0 var_998         = qword ptr -998h
__text:0000000100005CC0 var_990         = qword ptr -990h
__text:0000000100005CC0 var_988         = qword ptr -988h
__text:0000000100005CC0 var_980         = qword ptr -980h
__text:0000000100005CC0 var_978         = byte ptr -978h
__text:0000000100005CC0 var_970         = qword ptr -970h
__text:0000000100005CC0 var_968         = qword ptr -968h
__text:0000000100005CC0 var_960         = qword ptr -960h
__text:0000000100005CC0 var_958         = qword ptr -958h
__text:0000000100005CC0 var_950         = byte ptr -950h
__text:0000000100005CC0 var_948         = qword ptr -948h
__text:0000000100005CC0 var_940         = qword ptr -940h
__text:0000000100005CC0 var_938         = qword ptr -938h
__text:0000000100005CC0 var_930         = qword ptr -930h
__text:0000000100005CC0 var_928         = qword ptr -928h
__text:0000000100005CC0 var_920         = qword ptr -920h
__text:0000000100005CC0 var_838         = qword ptr -838h
__text:0000000100005CC0 var_830         = qword ptr -830h
__text:0000000100005CC0 var_828         = qword ptr -828h
__text:0000000100005CC0 var_820         = qword ptr -820h
__text:0000000100005CC0 var_818         = qword ptr -818h
__text:0000000100005CC0 var_810         = qword ptr -810h
__text:0000000100005CC0 var_808         = qword ptr -808h
__text:0000000100005CC0 var_800         = qword ptr -800h
__text:0000000100005CC0 var_7F8         = qword ptr -7F8h
__text:0000000100005CC0 var_7F0         = qword ptr -7F0h
__text:0000000100005CC0 var_7D8         = qword ptr -7D8h
__text:0000000100005CC0 var_7D0         = qword ptr -7D0h
__text:0000000100005CC0 var_7C8         = qword ptr -7C8h
__text:0000000100005CC0 var_7C0         = qword ptr -7C0h
__text:0000000100005CC0 var_7B8         = qword ptr -7B8h
__text:0000000100005CC0 var_7B0         = qword ptr -7B0h
__text:0000000100005CC0 var_7A8         = qword ptr -7A8h
__text:0000000100005CC0 var_7A0         = qword ptr -7A0h
__text:0000000100005CC0 var_798         = qword ptr -798h
__text:0000000100005CC0 var_780         = qword ptr -780h
__text:0000000100005CC0 var_778         = qword ptr -778h
__text:0000000100005CC0 var_770         = qword ptr -770h
__text:0000000100005CC0 var_768         = qword ptr -768h
__text:0000000100005CC0 var_760         = qword ptr -760h
__text:0000000100005CC0 var_758         = qword ptr -758h
__text:0000000100005CC0 var_750         = qword ptr -750h
__text:0000000100005CC0 var_748         = qword ptr -748h
__text:0000000100005CC0 var_740         = qword ptr -740h
__text:0000000100005CC0 var_738         = qword ptr -738h
__text:0000000100005CC0 var_730         = qword ptr -730h
__text:0000000100005CC0 var_728         = qword ptr -728h
__text:0000000100005CC0 var_720         = qword ptr -720h
__text:0000000100005CC0 var_718         = qword ptr -718h
__text:0000000100005CC0 var_710         = qword ptr -710h
__text:0000000100005CC0 var_708         = qword ptr -708h
__text:0000000100005CC0 var_6F0         = qword ptr -6F0h
__text:0000000100005CC0 var_6E8         = qword ptr -6E8h
__text:0000000100005CC0 var_6E0         = qword ptr -6E0h
__text:0000000100005CC0 var_6D8         = qword ptr -6D8h
__text:0000000100005CC0 var_6D0         = qword ptr -6D0h
__text:0000000100005CC0 var_6C8         = qword ptr -6C8h
__text:0000000100005CC0 var_6C0         = qword ptr -6C0h
__text:0000000100005CC0 var_6B8         = qword ptr -6B8h
__text:0000000100005CC0 var_6B0         = qword ptr -6B0h
__text:0000000100005CC0 var_698         = qword ptr -698h
__text:0000000100005CC0 var_690         = qword ptr -690h
__text:0000000100005CC0 var_688         = qword ptr -688h
__text:0000000100005CC0 var_680         = qword ptr -680h
__text:0000000100005CC0 var_678         = qword ptr -678h
__text:0000000100005CC0 var_670         = qword ptr -670h
__text:0000000100005CC0 var_668         = qword ptr -668h
__text:0000000100005CC0 var_660         = qword ptr -660h
__text:0000000100005CC0 var_658         = qword ptr -658h
__text:0000000100005CC0 var_650         = qword ptr -650h
__text:0000000100005CC0 var_648         = qword ptr -648h
__text:0000000100005CC0 var_640         = qword ptr -640h
__text:0000000100005CC0 var_638         = qword ptr -638h
__text:0000000100005CC0 var_630         = qword ptr -630h
__text:0000000100005CC0 var_628         = qword ptr -628h
__text:0000000100005CC0 var_620         = qword ptr -620h
__text:0000000100005CC0 var_618         = qword ptr -618h
__text:0000000100005CC0 var_610         = qword ptr -610h
__text:0000000100005CC0 var_608         = qword ptr -608h
__text:0000000100005CC0 var_600         = qword ptr -600h
__text:0000000100005CC0 var_5F8         = qword ptr -5F8h
__text:0000000100005CC0 var_5F0         = qword ptr -5F0h
__text:0000000100005CC0 var_5E8         = qword ptr -5E8h
__text:0000000100005CC0 var_5E0         = byte ptr -5E0h
__text:0000000100005CC0 var_5D8         = qword ptr -5D8h
__text:0000000100005CC0 var_5D0         = qword ptr -5D0h
__text:0000000100005CC0 var_5C8         = qword ptr -5C8h
__text:0000000100005CC0 var_5C0         = qword ptr -5C0h
__text:0000000100005CC0 var_5B8         = qword ptr -5B8h
__text:0000000100005CC0 var_5B0         = byte ptr -5B0h
__text:0000000100005CC0 var_5A8         = qword ptr -5A8h
__text:0000000100005CC0 var_5A0         = qword ptr -5A0h
__text:0000000100005CC0 var_598         = qword ptr -598h
__text:0000000100005CC0 var_590         = qword ptr -590h
__text:0000000100005CC0 var_588         = byte ptr -588h
__text:0000000100005CC0 var_580         = qword ptr -580h
__text:0000000100005CC0 var_578         = qword ptr -578h
__text:0000000100005CC0 var_570         = qword ptr -570h
__text:0000000100005CC0 var_568         = qword ptr -568h
__text:0000000100005CC0 var_560         = qword ptr -560h
__text:0000000100005CC0 var_558         = qword ptr -558h
__text:0000000100005CC0 var_550         = qword ptr -550h
__text:0000000100005CC0 var_548         = qword ptr -548h
__text:0000000100005CC0 var_540         = qword ptr -540h
__text:0000000100005CC0 var_538         = qword ptr -538h
__text:0000000100005CC0 var_530         = qword ptr -530h
__text:0000000100005CC0 var_528         = qword ptr -528h
__text:0000000100005CC0 var_520         = qword ptr -520h
__text:0000000100005CC0 var_518         = qword ptr -518h
__text:0000000100005CC0 var_510         = qword ptr -510h
__text:0000000100005CC0 var_508         = qword ptr -508h
__text:0000000100005CC0 var_500         = qword ptr -500h
__text:0000000100005CC0 var_4F8         = qword ptr -4F8h
__text:0000000100005CC0 var_4F0         = qword ptr -4F0h
__text:0000000100005CC0 var_4E8         = qword ptr -4E8h
__text:0000000100005CC0 var_4E0         = qword ptr -4E0h
__text:0000000100005CC0 var_4D8         = qword ptr -4D8h
__text:0000000100005CC0 var_4C0         = qword ptr -4C0h
__text:0000000100005CC0 var_4B8         = byte ptr -4B8h
__text:0000000100005CC0 var_4A0         = qword ptr -4A0h
__text:0000000100005CC0 var_498         = qword ptr -498h
__text:0000000100005CC0 var_490         = qword ptr -490h
__text:0000000100005CC0 var_488         = qword ptr -488h
__text:0000000100005CC0 var_480         = qword ptr -480h
__text:0000000100005CC0 var_478         = qword ptr -478h
__text:0000000100005CC0 var_470         = qword ptr -470h
__text:0000000100005CC0 var_468         = qword ptr -468h
__text:0000000100005CC0 var_460         = qword ptr -460h
__text:0000000100005CC0 var_458         = qword ptr -458h
__text:0000000100005CC0 var_450         = qword ptr -450h
__text:0000000100005CC0 var_448         = qword ptr -448h
__text:0000000100005CC0 var_440         = qword ptr -440h
__text:0000000100005CC0 var_438         = qword ptr -438h
__text:0000000100005CC0 var_430         = byte ptr -430h
__text:0000000100005CC0 var_428         = qword ptr -428h
__text:0000000100005CC0 var_420         = qword ptr -420h
__text:0000000100005CC0 var_418         = qword ptr -418h
__text:0000000100005CC0 var_410         = qword ptr -410h
__text:0000000100005CC0 var_408         = qword ptr -408h
__text:0000000100005CC0 var_400         = byte ptr -400h
__text:0000000100005CC0 var_3F8         = qword ptr -3F8h
__text:0000000100005CC0 var_3F0         = qword ptr -3F0h
__text:0000000100005CC0 var_3E8         = qword ptr -3E8h
__text:0000000100005CC0 var_3E0         = qword ptr -3E0h
__text:0000000100005CC0 var_3D8         = byte ptr -3D8h
__text:0000000100005CC0 var_3D0         = qword ptr -3D0h
__text:0000000100005CC0 var_3C8         = qword ptr -3C8h
__text:0000000100005CC0 var_3C0         = qword ptr -3C0h
__text:0000000100005CC0 var_3B8         = qword ptr -3B8h
__text:0000000100005CC0 var_3B0         = qword ptr -3B0h
__text:0000000100005CC0 var_3A8         = qword ptr -3A8h
__text:0000000100005CC0 var_3A0         = qword ptr -3A0h
__text:0000000100005CC0 var_398         = qword ptr -398h
__text:0000000100005CC0 var_390         = qword ptr -390h
__text:0000000100005CC0 var_388         = qword ptr -388h
__text:0000000100005CC0 var_380         = qword ptr -380h
__text:0000000100005CC0 var_378         = qword ptr -378h
__text:0000000100005CC0 var_370         = qword ptr -370h
__text:0000000100005CC0 var_368         = qword ptr -368h
__text:0000000100005CC0 var_360         = qword ptr -360h
__text:0000000100005CC0 var_358         = qword ptr -358h
__text:0000000100005CC0 var_270         = qword ptr -270h
__text:0000000100005CC0 var_268         = qword ptr -268h
__text:0000000100005CC0 var_260         = qword ptr -260h
__text:0000000100005CC0 var_258         = qword ptr -258h
__text:0000000100005CC0 var_250         = qword ptr -250h
__text:0000000100005CC0 var_248         = qword ptr -248h
__text:0000000100005CC0 var_240         = qword ptr -240h
__text:0000000100005CC0 var_238         = qword ptr -238h
__text:0000000100005CC0 var_230         = qword ptr -230h
__text:0000000100005CC0 var_228         = qword ptr -228h
__text:0000000100005CC0 var_220         = qword ptr -220h
__text:0000000100005CC0 var_218         = qword ptr -218h
__text:0000000100005CC0 var_210         = qword ptr -210h
__text:0000000100005CC0 var_1F8         = qword ptr -1F8h
__text:0000000100005CC0 var_1F0         = qword ptr -1F0h
__text:0000000100005CC0 var_1E8         = qword ptr -1E8h
__text:0000000100005CC0 var_1E0         = qword ptr -1E0h
__text:0000000100005CC0 var_1D8         = qword ptr -1D8h
__text:0000000100005CC0 var_1D0         = qword ptr -1D0h
__text:0000000100005CC0 var_1C8         = qword ptr -1C8h
__text:0000000100005CC0 var_1C0         = qword ptr -1C0h
__text:0000000100005CC0 var_1B8         = qword ptr -1B8h
__text:0000000100005CC0 var_1A0         = qword ptr -1A0h
__text:0000000100005CC0 var_198         = qword ptr -198h
__text:0000000100005CC0 var_190         = qword ptr -190h
__text:0000000100005CC0 var_188         = qword ptr -188h
__text:0000000100005CC0 var_180         = qword ptr -180h
__text:0000000100005CC0 var_178         = qword ptr -178h
__text:0000000100005CC0 var_170         = qword ptr -170h
__text:0000000100005CC0 var_168         = qword ptr -168h
__text:0000000100005CC0 var_160         = qword ptr -160h
__text:0000000100005CC0 var_158         = qword ptr -158h
__text:0000000100005CC0 var_150         = qword ptr -150h
__text:0000000100005CC0 var_148         = qword ptr -148h
__text:0000000100005CC0 var_140         = qword ptr -140h
__text:0000000100005CC0 var_138         = qword ptr -138h
__text:0000000100005CC0 var_130         = qword ptr -130h
__text:0000000100005CC0 var_128         = qword ptr -128h
__text:0000000100005CC0 var_120         = byte ptr -120h
__text:0000000100005CC0 var_118         = qword ptr -118h
__text:0000000100005CC0 var_110         = qword ptr -110h
__text:0000000100005CC0 var_108         = qword ptr -108h
__text:0000000100005CC0 var_100         = qword ptr -100h
__text:0000000100005CC0 var_F8          = qword ptr -0F8h
__text:0000000100005CC0 var_F0          = byte ptr -0F0h
__text:0000000100005CC0 var_E8          = qword ptr -0E8h
__text:0000000100005CC0 var_E0          = qword ptr -0E0h
__text:0000000100005CC0 var_D8          = qword ptr -0D8h
__text:0000000100005CC0 var_D0          = qword ptr -0D0h
__text:0000000100005CC0 var_C8          = byte ptr -0C8h
__text:0000000100005CC0 var_C0          = qword ptr -0C0h
__text:0000000100005CC0 var_B8          = qword ptr -0B8h
__text:0000000100005CC0 var_B0          = qword ptr -0B0h
__text:0000000100005CC0 var_A8          = qword ptr -0A8h
__text:0000000100005CC0 var_A0          = qword ptr -0A0h
__text:0000000100005CC0 var_98          = qword ptr -98h
__text:0000000100005CC0 var_90          = qword ptr -90h
__text:0000000100005CC0 var_88          = qword ptr -88h
__text:0000000100005CC0 var_80          = qword ptr -80h
__text:0000000100005CC0 var_78          = qword ptr -78h
__text:0000000100005CC0 var_70          = qword ptr -70h
__text:0000000100005CC0 var_68          = qword ptr -68h
__text:0000000100005CC0 var_60          = qword ptr -60h
__text:0000000100005CC0 var_58          = qword ptr -58h
__text:0000000100005CC0 var_50          = qword ptr -50h
__text:0000000100005CC0 var_48          = qword ptr -48h
__text:0000000100005CC0 var_40          = qword ptr -40h
__text:0000000100005CC0 var_38          = qword ptr -38h
__text:0000000100005CC0 var_30          = qword ptr -30h
__text:0000000100005CC0
__text:0000000100005CC0                 push    rbp
__text:0000000100005CC1                 mov     rbp, rsp
__text:0000000100005CC4                 push    r15
__text:0000000100005CC6                 push    r14
__text:0000000100005CC8                 push    r13
__text:0000000100005CCA                 push    r12
__text:0000000100005CCC                 push    rbx
__text:0000000100005CCD                 sub     rsp, 0C18h
__text:0000000100005CD4                 mov     rax, rdi
__text:0000000100005CD7                 mov     [rbp+var_B50], rsi
__text:0000000100005CDE                 mov     [rbp+var_B58], rdx
__text:0000000100005CE5                 mov     rdx, [rbp+var_B50]
__text:0000000100005CEC                 mov     [rbp+var_B48], rdx
__text:0000000100005CF3                 mov     rdx, [rbp+var_B48]
__text:0000000100005CFA                 add     rdx, 8
__text:0000000100005D01                 mov     [rbp+var_B40], rdx
__text:0000000100005D08                 mov     rdx, [rbp+var_B40]
__text:0000000100005D0F                 mov     [rbp+var_B38], rdx
__text:0000000100005D16                 mov     rdx, [rbp+var_B38]
__text:0000000100005D1D                 mov     [rbp+var_B60], rdx
__text:0000000100005D24                 mov     rdx, [rbp+var_B60]
__text:0000000100005D2B                 mov     [rbp+var_B28], rdx
__text:0000000100005D32                 mov     [rbp+var_B30], 1
__text:0000000100005D3D                 mov     rdx, [rbp+var_B28]
__text:0000000100005D44                 mov     rsi, [rbp+var_B30]
__text:0000000100005D4B                 mov     [rbp+var_B10], rdx
__text:0000000100005D52                 mov     [rbp+var_B18], rsi
__text:0000000100005D59                 mov     [rbp+var_B20], 0
__text:0000000100005D64                 imul    rdx, [rbp+var_B18], 28h
__text:0000000100005D6F                 mov     [rbp+var_BC8], rdi
__text:0000000100005D76                 mov     rdi, rdx        ; unsigned __int64
__text:0000000100005D79                 mov     [rbp+var_BD0], rax
__text:0000000100005D80                 call    __Znwm          ; operator new(ulong)
__text:0000000100005D85                 lea     rdx, [rbp+var_B78]
__text:0000000100005D8C                 lea     rsi, [rbp+var_958]
__text:0000000100005D93                 lea     rdi, [rbp+var_948]
__text:0000000100005D9A                 lea     rcx, [rbp+var_980]
__text:0000000100005DA1                 lea     r8, [rbp+var_970]
__text:0000000100005DA8                 lea     r9, [rbp+var_9D8]
__text:0000000100005DAF                 lea     r10, [rbp+var_9C8]
__text:0000000100005DB6                 lea     r11, [rbp+var_B88]
__text:0000000100005DBD                 mov     rbx, [rbp+var_B60]
__text:0000000100005DC4                 mov     [rbp+var_B00], r11
__text:0000000100005DCB                 mov     [rbp+var_B08], rbx
__text:0000000100005DD2                 mov     r11, [rbp+var_B00]
__text:0000000100005DD9                 mov     rbx, [rbp+var_B08]
__text:0000000100005DE0                 mov     [rbp+var_AF0], r11
__text:0000000100005DE7                 mov     [rbp+var_AF8], rbx
__text:0000000100005DEE                 mov     r11, [rbp+var_AF0]
__text:0000000100005DF5                 mov     rbx, [rbp+var_AF8]
__text:0000000100005DFC                 mov     [r11], rbx
__text:0000000100005DFF                 mov     byte ptr [r11+8], 0
__text:0000000100005E04                 mov     r11, [rbp+var_B88]
__text:0000000100005E0B                 mov     r14b, [rbp+var_B80]
__text:0000000100005E12                 mov     [rbp+var_9F0], rdx
__text:0000000100005E19                 mov     [rbp+var_9F8], rax
__text:0000000100005E20                 mov     [rbp+var_A08], r11
__text:0000000100005E27                 mov     [rbp+var_A00], r14b
__text:0000000100005E2E                 mov     rax, [rbp+var_9F0]
__text:0000000100005E35                 mov     r11, [rbp+var_9F8]
__text:0000000100005E3C                 mov     rbx, [rbp+var_A08]
__text:0000000100005E43                 mov     r14b, [rbp+var_A00]
__text:0000000100005E4A                 mov     [rbp+var_9C0], rax
__text:0000000100005E51                 mov     [rbp+var_9C8], r11
__text:0000000100005E58                 mov     [rbp+var_9D8], rbx
__text:0000000100005E5F                 mov     [rbp+var_9D0], r14b
__text:0000000100005E66                 mov     rax, [rbp+var_9C0]
__text:0000000100005E6D                 mov     [rbp+var_9B8], r10
__text:0000000100005E74                 mov     r10, [rbp+var_9B8]
__text:0000000100005E7B                 mov     r10, [r10]
__text:0000000100005E7E                 mov     [rbp+var_920], r9
__text:0000000100005E85                 mov     r9, [rbp+var_920]
__text:0000000100005E8C                 mov     r11, [r9]
__text:0000000100005E8F                 mov     [rbp+var_9E8], r11
__text:0000000100005E96                 mov     r9, [r9+8]
__text:0000000100005E9A                 mov     [rbp+var_9E0], r9
__text:0000000100005EA1                 mov     r9, [rbp+var_9E8]
__text:0000000100005EA8                 mov     r14b, byte ptr [rbp+var_9E0]
__text:0000000100005EAF                 mov     [rbp+var_998], rax
__text:0000000100005EB6                 mov     [rbp+var_9A0], r10
__text:0000000100005EBD                 mov     [rbp+var_9B0], r9
__text:0000000100005EC4                 mov     [rbp+var_9A8], r14b
__text:0000000100005ECB                 mov     rax, [rbp+var_998]
__text:0000000100005ED2                 mov     r9, [rbp+var_9A0]
__text:0000000100005ED9                 mov     r10, [rbp+var_9B0]
__text:0000000100005EE0                 mov     r14b, [rbp+var_9A8]
__text:0000000100005EE7                 mov     [rbp+var_968], rax
__text:0000000100005EEE                 mov     [rbp+var_970], r9
__text:0000000100005EF5                 mov     [rbp+var_980], r10
__text:0000000100005EFC                 mov     [rbp+var_978], r14b
__text:0000000100005F03                 mov     rax, [rbp+var_968]
__text:0000000100005F0A                 mov     [rbp+var_960], r8
__text:0000000100005F11                 mov     r8, [rbp+var_960]
__text:0000000100005F18                 mov     r8, [r8]
__text:0000000100005F1B                 mov     [rbp+var_928], rcx
__text:0000000100005F22                 mov     rcx, [rbp+var_928]
__text:0000000100005F29                 mov     r9, [rcx]
__text:0000000100005F2C                 mov     [rbp+var_990], r9
__text:0000000100005F33                 mov     rcx, [rcx+8]
__text:0000000100005F37                 mov     [rbp+var_988], rcx
__text:0000000100005F3E                 mov     rcx, [rbp+var_990]
__text:0000000100005F45                 mov     r14b, byte ptr [rbp+var_988]
__text:0000000100005F4C                 mov     [rbp+var_940], rax
__text:0000000100005F53                 mov     [rbp+var_948], r8
__text:0000000100005F5A                 mov     [rbp+var_958], rcx
__text:0000000100005F61                 mov     [rbp+var_950], r14b
__text:0000000100005F68                 mov     rax, [rbp+var_940]
__text:0000000100005F6F                 mov     [rbp+var_938], rdi
__text:0000000100005F76                 mov     rcx, [rbp+var_938]
__text:0000000100005F7D                 mov     rcx, [rcx]
__text:0000000100005F80                 mov     [rax], rcx
__text:0000000100005F83                 mov     [rbp+var_930], rsi
__text:0000000100005F8A                 mov     rcx, [rbp+var_930]
__text:0000000100005F91                 mov     rsi, [rcx]
__text:0000000100005F94                 mov     [rax+8], rsi
__text:0000000100005F98                 mov     rcx, [rcx+8]
__text:0000000100005F9C                 mov     [rax+10h], rcx
__text:0000000100005FA0                 mov     rax, [rbp+var_B60]
__text:0000000100005FA7                 mov     [rbp+var_838], rdx
__text:0000000100005FAE                 mov     rcx, [rbp+var_838]
__text:0000000100005FB5                 mov     [rbp+var_830], rcx
__text:0000000100005FBC                 mov     rcx, [rbp+var_830]
__text:0000000100005FC3                 mov     [rbp+var_828], rcx
__text:0000000100005FCA                 mov     rcx, [rbp+var_828]
__text:0000000100005FD1                 mov     rcx, [rcx]
__text:0000000100005FD4                 add     rcx, 1Ch
__text:0000000100005FDB                 mov     [rbp+var_740], rcx
__text:0000000100005FE2                 mov     rcx, [rbp+var_740]
__text:0000000100005FE9                 mov     rdx, [rbp+var_B58]
__text:0000000100005FF0                 mov     [rbp+var_648], rax
__text:0000000100005FF7                 mov     [rbp+var_650], rcx
__text:0000000100005FFE                 mov     [rbp+var_658], rdx
__text:0000000100006005                 mov     rax, [rbp+var_650]
__text:000000010000600C                 cmp     rax, 0
__text:0000000100006012                 mov     [rbp+var_BD8], rax
__text:0000000100006019                 jz      loc_100006076
__text:000000010000601F                 mov     rax, [rbp+var_BD8]
__text:0000000100006026                 mov     rcx, [rbp+var_658]
__text:000000010000602D                 mov     [rbp+var_638], rax
__text:0000000100006034                 mov     [rbp+var_640], rcx
__text:000000010000603B                 mov     rax, [rbp+var_638]
__text:0000000100006042                 mov     rcx, [rbp+var_640]
__text:0000000100006049                 mov     [rbp+var_628], rax
__text:0000000100006050                 mov     [rbp+var_630], rcx
__text:0000000100006057                 mov     rax, [rbp+var_628]
__text:000000010000605E                 mov     rcx, [rbp+var_630]
__text:0000000100006065                 mov     edx, [rcx]
__text:0000000100006067                 mov     [rax], edx
__text:0000000100006069                 mov     rcx, [rbp+var_630]
__text:0000000100006070                 mov     edx, [rcx+4]
__text:0000000100006073                 mov     [rax+4], edx
__text:0000000100006076
__text:0000000100006076 loc_100006076:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+359↑j
__text:0000000100006076                 lea     rax, [rbp+var_4B8]
__text:000000010000607D                 lea     rcx, [rbp+var_D0]
__text:0000000100006084                 lea     rdx, [rbp+var_C0]
__text:000000010000608B                 lea     rsi, [rbp+var_F8]
__text:0000000100006092                 lea     rdi, [rbp+var_E8]
__text:0000000100006099                 lea     r8, [rbp+var_140]
__text:00000001000060A0                 lea     r9, [rbp+var_BB8]
__text:00000001000060A7                 lea     r10, [rbp+var_268]
__text:00000001000060AE                 lea     r11, [rbp+var_3E0]
__text:00000001000060B5                 lea     rbx, [rbp+var_3D0]
__text:00000001000060BC                 lea     r14, [rbp+var_408]
__text:00000001000060C3                 lea     r15, [rbp+var_3F8]
__text:00000001000060CA                 lea     r12, [rbp+var_450]
__text:00000001000060D1                 lea     r13, [rbp+var_4C0]
__text:00000001000060D8                 mov     [rbp+var_BE0], rax
__text:00000001000060DF                 lea     rax, [rbp+var_B78]
__text:00000001000060E6                 mov     [rbp+var_40], rax
__text:00000001000060EA                 mov     [rbp+var_BE8], rax
__text:00000001000060F1                 mov     rax, [rbp+var_40]
__text:00000001000060F5                 mov     [rbp+var_38], rax
__text:00000001000060F9                 mov     rax, [rbp+var_38]
__text:00000001000060FD                 mov     [rbp+var_30], rax
__text:0000000100006101                 mov     rax, [rbp+var_30]
__text:0000000100006105                 mov     byte ptr [rax+10h], 1
__text:0000000100006109                 mov     rax, [rbp+var_BE8]
__text:0000000100006110                 mov     [rbp+var_498], rax
__text:0000000100006117                 mov     rax, [rbp+var_498]
__text:000000010000611E                 mov     [rbp+var_488], r13
__text:0000000100006125                 mov     [rbp+var_490], rax
__text:000000010000612C                 mov     rax, [rbp+var_488]
__text:0000000100006133                 mov     r13, [rbp+var_490]
__text:000000010000613A                 mov     [rbp+var_478], rax
__text:0000000100006141                 mov     [rbp+var_480], r13
__text:0000000100006148                 mov     rax, [rbp+var_478]
__text:000000010000614F                 mov     r13, [rbp+var_480]
__text:0000000100006156                 mov     [rax], r13
__text:0000000100006159                 mov     rax, [rbp+var_4C0]
__text:0000000100006160                 mov     r13, [rbp+var_BE0]
__text:0000000100006167                 mov     [rbp+var_468], r13
__text:000000010000616E                 mov     [rbp+var_470], rax
__text:0000000100006175                 mov     rax, [rbp+var_468]
__text:000000010000617C                 mov     r13, [rbp+var_470]
__text:0000000100006183                 mov     [rbp+var_448], rax
__text:000000010000618A                 mov     [rbp+var_450], r13
__text:0000000100006191                 mov     rax, [rbp+var_448]
__text:0000000100006198                 mov     [rbp+var_440], r12
__text:000000010000619F                 mov     r13, [rbp+var_440]
__text:00000001000061A6                 mov     r13, [r13+0]
__text:00000001000061AA                 mov     [rbp+var_378], r13
__text:00000001000061B1                 mov     r13, [rbp+var_378]
__text:00000001000061B8                 mov     [rbp+var_370], r13
__text:00000001000061BF                 mov     [rbp+var_BF0], rax
__text:00000001000061C6                 mov     rax, [rbp+var_370]
__text:00000001000061CD                 mov     [rbp+var_368], rax
__text:00000001000061D4                 mov     rax, [rbp+var_368]
__text:00000001000061DB                 mov     rax, [rax]
__text:00000001000061DE                 mov     [rbp+var_380], rax
__text:00000001000061E5                 mov     [rbp+var_360], r13
__text:00000001000061EC                 mov     rax, [rbp+var_360]
__text:00000001000061F3                 mov     [rbp+var_358], rax
__text:00000001000061FA                 mov     rax, [rbp+var_358]
__text:0000000100006201                 mov     qword ptr [rax], 0
__text:0000000100006208                 mov     rax, [rbp+var_380]
__text:000000010000620F                 mov     [rbp+var_388], r12
__text:0000000100006216                 mov     r12, [rbp+var_388]
__text:000000010000621D                 mov     r12, [r12]
__text:0000000100006221                 mov     [rbp+var_3A0], r12
__text:0000000100006228                 mov     r12, [rbp+var_3A0]
__text:000000010000622F                 mov     [rbp+var_398], r12
__text:0000000100006236                 mov     r12, [rbp+var_398]
__text:000000010000623D                 mov     [rbp+var_390], r12
__text:0000000100006244                 mov     r12, [rbp+var_390]
__text:000000010000624B                 add     r12, 8
__text:0000000100006252                 mov     [rbp+var_3A8], r12
__text:0000000100006259                 mov     r12, [rbp+var_3A8]
__text:0000000100006260                 mov     r13, [r12]
__text:0000000100006264                 mov     [rbp+var_460], r13
__text:000000010000626B                 mov     r12, [r12+8]
__text:0000000100006270                 mov     [rbp+var_458], r12
__text:0000000100006277                 mov     r12, [rbp+var_460]
__text:000000010000627E                 mov     r13b, byte ptr [rbp+var_458]
__text:0000000100006285                 mov     [rbp+var_BF8], rax
__text:000000010000628C                 mov     rax, [rbp+var_BF0]
__text:0000000100006293                 mov     [rbp+var_420], rax
__text:000000010000629A                 mov     rax, [rbp+var_BF8]
__text:00000001000062A1                 mov     [rbp+var_428], rax
__text:00000001000062A8                 mov     [rbp+var_438], r12
__text:00000001000062AF                 mov     [rbp+var_430], r13b
__text:00000001000062B6                 mov     r12, [rbp+var_420]
__text:00000001000062BD                 mov     rax, [rbp+var_428]
__text:00000001000062C4                 mov     r13, [rbp+var_438]
__text:00000001000062CB                 mov     [rbp+var_C00], rax
__text:00000001000062D2                 mov     al, [rbp+var_430]
__text:00000001000062D8                 mov     [rbp+var_3F0], r12
__text:00000001000062DF                 mov     r12, [rbp+var_C00]
__text:00000001000062E6                 mov     [rbp+var_3F8], r12
__text:00000001000062ED                 mov     [rbp+var_408], r13
__text:00000001000062F4                 mov     [rbp+var_400], al
__text:00000001000062FA                 mov     r13, [rbp+var_3F0]
__text:0000000100006301                 mov     [rbp+var_3E8], r15
__text:0000000100006308                 mov     r15, [rbp+var_3E8]
__text:000000010000630F                 mov     r15, [r15]
__text:0000000100006312                 mov     [rbp+var_3B0], r14
__text:0000000100006319                 mov     r14, [rbp+var_3B0]
__text:0000000100006320                 mov     rax, [r14]
__text:0000000100006323                 mov     [rbp+var_418], rax
__text:000000010000632A                 mov     rax, [r14+8]
__text:000000010000632E                 mov     [rbp+var_410], rax
__text:0000000100006335                 mov     rax, [rbp+var_418]
__text:000000010000633C                 mov     r14b, byte ptr [rbp+var_410]
__text:0000000100006343                 mov     [rbp+var_3C8], r13
__text:000000010000634A                 mov     [rbp+var_3D0], r15
__text:0000000100006351                 mov     [rbp+var_3E0], rax
__text:0000000100006358                 mov     [rbp+var_3D8], r14b
__text:000000010000635F                 mov     rax, [rbp+var_3C8]
__text:0000000100006366                 mov     [rbp+var_3C0], rbx
__text:000000010000636D                 mov     rbx, [rbp+var_3C0]
__text:0000000100006374                 mov     rbx, [rbx]
__text:0000000100006377                 mov     [rax], rbx
__text:000000010000637A                 mov     [rbp+var_3B8], r11
__text:0000000100006381                 mov     r11, [rbp+var_3B8]
__text:0000000100006388                 mov     rbx, [r11]
__text:000000010000638B                 mov     [rax+8], rbx
__text:000000010000638F                 mov     r11, [r11+8]
__text:0000000100006393                 mov     [rax+10h], r11
__text:0000000100006397                 mov     rax, [rbp+var_BE0]
__text:000000010000639E                 mov     [rbp+var_270], rax
__text:00000001000063A5                 mov     r11, [rbp+var_270]
__text:00000001000063AC                 mov     [rbp+var_258], r10
__text:00000001000063B3                 mov     [rbp+var_260], r11
__text:00000001000063BA                 mov     r10, [rbp+var_258]
__text:00000001000063C1                 mov     r11, [rbp+var_260]
__text:00000001000063C8                 mov     [rbp+var_248], r10
__text:00000001000063CF                 mov     [rbp+var_250], r11
__text:00000001000063D6                 mov     r10, [rbp+var_248]
__text:00000001000063DD                 mov     r11, [rbp+var_250]
__text:00000001000063E4                 mov     [r10], r11
__text:00000001000063E7                 mov     r10, [rbp+var_268]
__text:00000001000063EE                 mov     [rbp+var_4A0], r10
__text:00000001000063F5                 mov     r10, [rbp+var_4A0]
__text:00000001000063FC                 mov     [rbp+var_158], r9
__text:0000000100006403                 mov     [rbp+var_160], r10
__text:000000010000640A                 mov     r9, [rbp+var_158]
__text:0000000100006411                 mov     r10, [rbp+var_160]
__text:0000000100006418                 mov     [rbp+var_138], r9
__text:000000010000641F                 mov     [rbp+var_140], r10
__text:0000000100006426                 mov     r9, [rbp+var_138]
__text:000000010000642D                 mov     [rbp+var_130], r8
__text:0000000100006434                 mov     r10, [rbp+var_130]
__text:000000010000643B                 mov     r10, [r10]
__text:000000010000643E                 mov     [rbp+var_68], r10
__text:0000000100006442                 mov     r10, [rbp+var_68]
__text:0000000100006446                 mov     [rbp+var_60], r10
__text:000000010000644A                 mov     r11, [rbp+var_60]
__text:000000010000644E                 mov     [rbp+var_58], r11
__text:0000000100006452                 mov     r11, [rbp+var_58]
__text:0000000100006456                 mov     r11, [r11]
__text:0000000100006459                 mov     [rbp+var_70], r11
__text:000000010000645D                 mov     [rbp+var_50], r10
__text:0000000100006461                 mov     r10, [rbp+var_50]
__text:0000000100006465                 mov     [rbp+var_48], r10
__text:0000000100006469                 mov     r10, [rbp+var_48]
__text:000000010000646D                 mov     qword ptr [r10], 0
__text:0000000100006474                 mov     r10, [rbp+var_70]
__text:0000000100006478                 mov     [rbp+var_78], r8
__text:000000010000647C                 mov     r8, [rbp+var_78]
__text:0000000100006480                 mov     r8, [r8]
__text:0000000100006483                 mov     [rbp+var_90], r8
__text:000000010000648A                 mov     r8, [rbp+var_90]
__text:0000000100006491                 mov     [rbp+var_88], r8
__text:0000000100006498                 mov     r8, [rbp+var_88]
__text:000000010000649F                 mov     [rbp+var_80], r8
__text:00000001000064A3                 mov     r8, [rbp+var_80]
__text:00000001000064A7                 add     r8, 8
__text:00000001000064AE                 mov     [rbp+var_98], r8
__text:00000001000064B5                 mov     r8, [rbp+var_98]
__text:00000001000064BC                 mov     r11, [r8]
__text:00000001000064BF                 mov     [rbp+var_150], r11
__text:00000001000064C6                 mov     r8, [r8+8]
__text:00000001000064CA                 mov     [rbp+var_148], r8
__text:00000001000064D1                 mov     r8, [rbp+var_150]
__text:00000001000064D8                 mov     r14b, byte ptr [rbp+var_148]
__text:00000001000064DF                 mov     [rbp+var_110], r9
__text:00000001000064E6                 mov     [rbp+var_118], r10
__text:00000001000064ED                 mov     [rbp+var_128], r8
__text:00000001000064F4                 mov     [rbp+var_120], r14b
__text:00000001000064FB                 mov     r8, [rbp+var_110]
__text:0000000100006502                 mov     r9, [rbp+var_118]
__text:0000000100006509                 mov     r10, [rbp+var_128]
__text:0000000100006510                 mov     r14b, [rbp+var_120]
__text:0000000100006517                 mov     [rbp+var_E0], r8
__text:000000010000651E                 mov     [rbp+var_E8], r9
__text:0000000100006525                 mov     [rbp+var_F8], r10
__text:000000010000652C                 mov     [rbp+var_F0], r14b
__text:0000000100006533                 mov     r8, [rbp+var_E0]
__text:000000010000653A                 mov     [rbp+var_D8], rdi
__text:0000000100006541                 mov     rdi, [rbp+var_D8]
__text:0000000100006548                 mov     rdi, [rdi]
__text:000000010000654B                 mov     [rbp+var_A0], rsi
__text:0000000100006552                 mov     rsi, [rbp+var_A0]
__text:0000000100006559                 mov     r9, [rsi]
__text:000000010000655C                 mov     [rbp+var_108], r9
__text:0000000100006563                 mov     rsi, [rsi+8]
__text:0000000100006567                 mov     [rbp+var_100], rsi
__text:000000010000656E                 mov     rsi, [rbp+var_108]
__text:0000000100006575                 mov     r14b, byte ptr [rbp+var_100]
__text:000000010000657C                 mov     [rbp+var_B8], r8
__text:0000000100006583                 mov     [rbp+var_C0], rdi
__text:000000010000658A                 mov     [rbp+var_D0], rsi
__text:0000000100006591                 mov     [rbp+var_C8], r14b
__text:0000000100006598                 mov     rsi, [rbp+var_B8]
__text:000000010000659F                 mov     [rbp+var_B0], rdx
__text:00000001000065A6                 mov     rdx, [rbp+var_B0]
__text:00000001000065AD                 mov     rdx, [rdx]
__text:00000001000065B0                 mov     [rsi], rdx
__text:00000001000065B3                 mov     [rbp+var_A8], rcx
__text:00000001000065BA                 mov     rcx, [rbp+var_A8]
__text:00000001000065C1                 mov     rdx, [rcx]
__text:00000001000065C4                 mov     [rsi+8], rdx
__text:00000001000065C8                 mov     rcx, [rcx+8]
__text:00000001000065CC                 mov     [rsi+10h], rcx
__text:00000001000065D0                 mov     [rbp+var_240], rax
__text:00000001000065D7                 mov     rcx, [rbp+var_240]
__text:00000001000065DE                 mov     [rbp+var_238], rcx
__text:00000001000065E5                 mov     rcx, [rbp+var_238]
__text:00000001000065EC                 mov     [rbp+var_220], rcx
__text:00000001000065F3                 mov     [rbp+var_228], 0
__text:00000001000065FE                 mov     rcx, [rbp+var_220]
__text:0000000100006605                 mov     [rbp+var_218], rcx
__text:000000010000660C                 mov     rdx, [rbp+var_218]
__text:0000000100006613                 mov     [rbp+var_210], rdx
__text:000000010000661A                 mov     rdx, [rbp+var_210]
__text:0000000100006621                 mov     rdx, [rdx]
__text:0000000100006624                 mov     [rbp+var_230], rdx
__text:000000010000662B                 mov     rdx, [rbp+var_228]
__text:0000000100006632                 mov     [rbp+var_180], rcx
__text:0000000100006639                 mov     rsi, [rbp+var_180]
__text:0000000100006640                 mov     [rbp+var_178], rsi
__text:0000000100006647                 mov     rsi, [rbp+var_178]
__text:000000010000664E                 mov     [rsi], rdx
__text:0000000100006651                 cmp     [rbp+var_230], 0
__text:000000010000665C                 mov     [rbp+var_C08], rcx
__text:0000000100006663                 jz      loc_100006789
__text:0000000100006669                 mov     rax, [rbp+var_C08]
__text:0000000100006670                 mov     [rbp+var_170], rax
__text:0000000100006677                 mov     rcx, [rbp+var_170]
__text:000000010000667E                 mov     [rbp+var_168], rcx
__text:0000000100006685                 mov     rcx, [rbp+var_168]
__text:000000010000668C                 add     rcx, 8
__text:0000000100006693                 mov     rdx, [rbp+var_230]
__text:000000010000669A                 mov     [rbp+var_1F0], rcx
__text:00000001000066A1                 mov     [rbp+var_1F8], rdx
__text:00000001000066A8                 mov     rcx, [rbp+var_1F0]
__text:00000001000066AF                 test    byte ptr [rcx+8], 1
__text:00000001000066B3                 mov     [rbp+var_C10], rcx
__text:00000001000066BA                 jz      loc_100006710
__text:00000001000066C0                 mov     rax, [rbp+var_C10]
__text:00000001000066C7                 mov     rcx, [rax]
__text:00000001000066CA                 mov     rdx, [rbp+var_1F8]
__text:00000001000066D1                 add     rdx, 1Ch
__text:00000001000066D8                 mov     [rbp+var_1E8], rdx
__text:00000001000066DF                 mov     rdx, [rbp+var_1E8]
__text:00000001000066E6                 mov     [rbp+var_198], rcx
__text:00000001000066ED                 mov     [rbp+var_1A0], rdx
__text:00000001000066F4                 mov     rcx, [rbp+var_198]
__text:00000001000066FB                 mov     rdx, [rbp+var_1A0]
__text:0000000100006702                 mov     [rbp+var_188], rcx
__text:0000000100006709                 mov     [rbp+var_190], rdx
__text:0000000100006710
__text:0000000100006710 loc_100006710:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+9FA↑j
__text:0000000100006710                 cmp     [rbp+var_1F8], 0
__text:000000010000671B                 jz      loc_100006784
__text:0000000100006721                 mov     rax, [rbp+var_C10]
__text:0000000100006728                 mov     rcx, [rax]
__text:000000010000672B                 mov     rdx, [rbp+var_1F8]
__text:0000000100006732                 mov     [rbp+var_1D0], rcx
__text:0000000100006739                 mov     [rbp+var_1D8], rdx
__text:0000000100006740                 mov     [rbp+var_1E0], 1
__text:000000010000674B                 mov     rcx, [rbp+var_1D0]
__text:0000000100006752                 mov     rdx, [rbp+var_1D8]
__text:0000000100006759                 mov     rsi, [rbp+var_1E0]
__text:0000000100006760                 mov     [rbp+var_1B8], rcx
__text:0000000100006767                 mov     [rbp+var_1C0], rdx
__text:000000010000676E                 mov     [rbp+var_1C8], rsi
__text:0000000100006775                 mov     rcx, [rbp+var_1C0]
__text:000000010000677C                 mov     rdi, rcx        ; void *
__text:000000010000677F                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100006784
__text:0000000100006784 loc_100006784:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+A5B↑j
__text:0000000100006784                 jmp     $+5
__text:0000000100006789 ; ---------------------------------------------------------------------------
__text:0000000100006789
__text:0000000100006789 loc_100006789:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+9A3↑j
__text:0000000100006789                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_100006784↑j
__text:0000000100006789                 jmp     $+5
__text:000000010000678E ; ---------------------------------------------------------------------------
__text:000000010000678E
__text:000000010000678E loc_10000678E:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_100006789↑j
__text:000000010000678E                 lea     rax, [rbp+var_4F8]
__text:0000000100006795                 lea     rcx, [rbp+var_BB8]
__text:000000010000679C                 mov     [rbp+var_500], rcx
__text:00000001000067A3                 mov     rcx, [rbp+var_500]
__text:00000001000067AA                 mov     [rbp+var_4E8], rax
__text:00000001000067B1                 mov     [rbp+var_4F0], rcx
__text:00000001000067B8                 mov     rax, [rbp+var_4E8]
__text:00000001000067BF                 mov     rcx, [rbp+var_4F0]
__text:00000001000067C6                 mov     [rbp+var_4D8], rax
__text:00000001000067CD                 mov     [rbp+var_4E0], rcx
__text:00000001000067D4                 mov     rax, [rbp+var_4D8]
__text:00000001000067DB                 mov     rcx, [rbp+var_4E0]
__text:00000001000067E2                 mov     [rax], rcx
__text:00000001000067E5                 mov     rax, [rbp+var_4F8]
__text:00000001000067EC                 mov     [rbp+var_C18], rax
__text:00000001000067F3                 lea     rax, [rbp+var_590]
__text:00000001000067FA                 lea     rcx, [rbp+var_580]
__text:0000000100006801                 lea     rdx, [rbp+var_5B8]
__text:0000000100006808                 lea     rsi, [rbp+var_5A8]
__text:000000010000680F                 lea     rdi, [rbp+var_600]
__text:0000000100006816                 mov     r8, [rbp+var_C18]
__text:000000010000681D                 mov     [rbp+var_BA0], r8
__text:0000000100006824                 mov     r9, [rbp+var_BA0]
__text:000000010000682B                 mov     r10, [rbp+var_BC8]
__text:0000000100006832                 mov     [rbp+var_618], r10
__text:0000000100006839                 mov     [rbp+var_620], r9
__text:0000000100006840                 mov     r9, [rbp+var_618]
__text:0000000100006847                 mov     r11, [rbp+var_620]
__text:000000010000684E                 mov     [rbp+var_5F8], r9
__text:0000000100006855                 mov     [rbp+var_600], r11
__text:000000010000685C                 mov     r9, [rbp+var_5F8]
__text:0000000100006863                 mov     [rbp+var_5F0], rdi
__text:000000010000686A                 mov     r11, [rbp+var_5F0]
__text:0000000100006871                 mov     r11, [r11]
__text:0000000100006874                 mov     [rbp+var_528], r11
__text:000000010000687B                 mov     r11, [rbp+var_528]
__text:0000000100006882                 mov     [rbp+var_520], r11
__text:0000000100006889                 mov     rbx, [rbp+var_520]
__text:0000000100006890                 mov     [rbp+var_518], rbx
__text:0000000100006897                 mov     rbx, [rbp+var_518]
__text:000000010000689E                 mov     rbx, [rbx]
__text:00000001000068A1                 mov     [rbp+var_530], rbx
__text:00000001000068A8                 mov     [rbp+var_510], r11
__text:00000001000068AF                 mov     r11, [rbp+var_510]
__text:00000001000068B6                 mov     [rbp+var_508], r11
__text:00000001000068BD                 mov     r11, [rbp+var_508]
__text:00000001000068C4                 mov     qword ptr [r11], 0
__text:00000001000068CB                 mov     r11, [rbp+var_530]
__text:00000001000068D2                 mov     [rbp+var_538], rdi
__text:00000001000068D9                 mov     rdi, [rbp+var_538]
__text:00000001000068E0                 mov     rdi, [rdi]
__text:00000001000068E3                 mov     [rbp+var_550], rdi
__text:00000001000068EA                 mov     rdi, [rbp+var_550]
__text:00000001000068F1                 mov     [rbp+var_548], rdi
__text:00000001000068F8                 mov     rdi, [rbp+var_548]
__text:00000001000068FF                 mov     [rbp+var_540], rdi
__text:0000000100006906                 mov     rdi, [rbp+var_540]
__text:000000010000690D                 add     rdi, 8
__text:0000000100006914                 mov     [rbp+var_558], rdi
__text:000000010000691B                 mov     rdi, [rbp+var_558]
__text:0000000100006922                 mov     rbx, [rdi]
__text:0000000100006925                 mov     [rbp+var_610], rbx
__text:000000010000692C                 mov     rdi, [rdi+8]
__text:0000000100006930                 mov     [rbp+var_608], rdi
__text:0000000100006937                 mov     rdi, [rbp+var_610]
__text:000000010000693E                 mov     r14b, byte ptr [rbp+var_608]
__text:0000000100006945                 mov     [rbp+var_5D0], r9
__text:000000010000694C                 mov     [rbp+var_5D8], r11
__text:0000000100006953                 mov     [rbp+var_5E8], rdi
__text:000000010000695A                 mov     [rbp+var_5E0], r14b
__text:0000000100006961                 mov     rdi, [rbp+var_5D0]
__text:0000000100006968                 mov     r9, [rbp+var_5D8]
__text:000000010000696F                 mov     r11, [rbp+var_5E8]
__text:0000000100006976                 mov     r14b, [rbp+var_5E0]
__text:000000010000697D                 mov     [rbp+var_5A0], rdi
__text:0000000100006984                 mov     [rbp+var_5A8], r9
__text:000000010000698B                 mov     [rbp+var_5B8], r11
__text:0000000100006992                 mov     [rbp+var_5B0], r14b
__text:0000000100006999                 mov     rdi, [rbp+var_5A0]
__text:00000001000069A0                 mov     [rbp+var_598], rsi
__text:00000001000069A7                 mov     rsi, [rbp+var_598]
__text:00000001000069AE                 mov     rsi, [rsi]
__text:00000001000069B1                 mov     [rbp+var_560], rdx
__text:00000001000069B8                 mov     rdx, [rbp+var_560]
__text:00000001000069BF                 mov     r9, [rdx]
__text:00000001000069C2                 mov     [rbp+var_5C8], r9
__text:00000001000069C9                 mov     rdx, [rdx+8]
__text:00000001000069CD                 mov     [rbp+var_5C0], rdx
__text:00000001000069D4                 mov     rdx, [rbp+var_5C8]
__text:00000001000069DB                 mov     r14b, byte ptr [rbp+var_5C0]
__text:00000001000069E2                 mov     [rbp+var_578], rdi
__text:00000001000069E9                 mov     [rbp+var_580], rsi
__text:00000001000069F0                 mov     [rbp+var_590], rdx
__text:00000001000069F7                 mov     [rbp+var_588], r14b
__text:00000001000069FE                 mov     rdx, [rbp+var_578]
__text:0000000100006A05                 mov     [rbp+var_570], rcx
__text:0000000100006A0C                 mov     rcx, [rbp+var_570]
__text:0000000100006A13                 mov     rcx, [rcx]
__text:0000000100006A16                 mov     [rdx], rcx
__text:0000000100006A19                 mov     [rbp+var_568], rax
__text:0000000100006A20                 mov     rax, [rbp+var_568]
__text:0000000100006A27                 mov     rcx, [rax]
__text:0000000100006A2A                 mov     [rdx+8], rcx
__text:0000000100006A2E                 mov     rax, [rax+8]
__text:0000000100006A32                 mov     [rdx+10h], rax
__text:0000000100006A36                 lea     rax, [rbp+var_BB8]
__text:0000000100006A3D                 mov     [rbp+var_738], rax
__text:0000000100006A44                 mov     rax, [rbp+var_738]
__text:0000000100006A4B                 mov     [rbp+var_730], rax
__text:0000000100006A52                 mov     rax, [rbp+var_730]
__text:0000000100006A59                 mov     [rbp+var_718], rax
__text:0000000100006A60                 mov     [rbp+var_720], 0
__text:0000000100006A6B                 mov     rax, [rbp+var_718]
__text:0000000100006A72                 mov     [rbp+var_710], rax
__text:0000000100006A79                 mov     rcx, [rbp+var_710]
__text:0000000100006A80                 mov     [rbp+var_708], rcx
__text:0000000100006A87                 mov     rcx, [rbp+var_708]
__text:0000000100006A8E                 mov     rcx, [rcx]
__text:0000000100006A91                 mov     [rbp+var_728], rcx
__text:0000000100006A98                 mov     rcx, [rbp+var_720]
__text:0000000100006A9F                 mov     [rbp+var_678], rax
__text:0000000100006AA6                 mov     rdx, [rbp+var_678]
__text:0000000100006AAD                 mov     [rbp+var_670], rdx
__text:0000000100006AB4                 mov     rdx, [rbp+var_670]
__text:0000000100006ABB                 mov     [rdx], rcx
__text:0000000100006ABE                 cmp     [rbp+var_728], 0
__text:0000000100006AC9                 mov     [rbp+var_C20], rax
__text:0000000100006AD0                 jz      loc_100006BF6
__text:0000000100006AD6                 mov     rax, [rbp+var_C20]
__text:0000000100006ADD                 mov     [rbp+var_668], rax
__text:0000000100006AE4                 mov     rcx, [rbp+var_668]
__text:0000000100006AEB                 mov     [rbp+var_660], rcx
__text:0000000100006AF2                 mov     rcx, [rbp+var_660]
__text:0000000100006AF9                 add     rcx, 8
__text:0000000100006B00                 mov     rdx, [rbp+var_728]
__text:0000000100006B07                 mov     [rbp+var_6E8], rcx
__text:0000000100006B0E                 mov     [rbp+var_6F0], rdx
__text:0000000100006B15                 mov     rcx, [rbp+var_6E8]
__text:0000000100006B1C                 test    byte ptr [rcx+8], 1
__text:0000000100006B20                 mov     [rbp+var_C28], rcx
__text:0000000100006B27                 jz      loc_100006B7D
__text:0000000100006B2D                 mov     rax, [rbp+var_C28]
__text:0000000100006B34                 mov     rcx, [rax]
__text:0000000100006B37                 mov     rdx, [rbp+var_6F0]
__text:0000000100006B3E                 add     rdx, 1Ch
__text:0000000100006B45                 mov     [rbp+var_6E0], rdx
__text:0000000100006B4C                 mov     rdx, [rbp+var_6E0]
__text:0000000100006B53                 mov     [rbp+var_690], rcx
__text:0000000100006B5A                 mov     [rbp+var_698], rdx
__text:0000000100006B61                 mov     rcx, [rbp+var_690]
__text:0000000100006B68                 mov     rdx, [rbp+var_698]
__text:0000000100006B6F                 mov     [rbp+var_680], rcx
__text:0000000100006B76                 mov     [rbp+var_688], rdx
__text:0000000100006B7D
__text:0000000100006B7D loc_100006B7D:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+E67↑j
__text:0000000100006B7D                 cmp     [rbp+var_6F0], 0
__text:0000000100006B88                 jz      loc_100006BF1
__text:0000000100006B8E                 mov     rax, [rbp+var_C28]
__text:0000000100006B95                 mov     rcx, [rax]
__text:0000000100006B98                 mov     rdx, [rbp+var_6F0]
__text:0000000100006B9F                 mov     [rbp+var_6C8], rcx
__text:0000000100006BA6                 mov     [rbp+var_6D0], rdx
__text:0000000100006BAD                 mov     [rbp+var_6D8], 1
__text:0000000100006BB8                 mov     rcx, [rbp+var_6C8]
__text:0000000100006BBF                 mov     rdx, [rbp+var_6D0]
__text:0000000100006BC6                 mov     rsi, [rbp+var_6D8]
__text:0000000100006BCD                 mov     [rbp+var_6B0], rcx
__text:0000000100006BD4                 mov     [rbp+var_6B8], rdx
__text:0000000100006BDB                 mov     [rbp+var_6C0], rsi
__text:0000000100006BE2                 mov     rcx, [rbp+var_6B8]
__text:0000000100006BE9                 mov     rdi, rcx        ; void *
__text:0000000100006BEC                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100006BF1
__text:0000000100006BF1 loc_100006BF1:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+EC8↑j
__text:0000000100006BF1                 jmp     $+5
__text:0000000100006BF6 ; ---------------------------------------------------------------------------
__text:0000000100006BF6
__text:0000000100006BF6 loc_100006BF6:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+E10↑j
__text:0000000100006BF6                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_100006BF1↑j
__text:0000000100006BF6                 jmp     $+5
__text:0000000100006BFB ; ---------------------------------------------------------------------------
__text:0000000100006BFB
__text:0000000100006BFB loc_100006BFB:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_100006BF6↑j
__text:0000000100006BFB                 lea     rax, [rbp+var_B78]
__text:0000000100006C02                 mov     [rbp+var_BBC], 1
__text:0000000100006C0C                 mov     [rbp+var_820], rax
__text:0000000100006C13                 mov     rax, [rbp+var_820]
__text:0000000100006C1A                 mov     [rbp+var_818], rax
__text:0000000100006C21                 mov     rax, [rbp+var_818]
__text:0000000100006C28                 mov     [rbp+var_800], rax
__text:0000000100006C2F                 mov     [rbp+var_808], 0
__text:0000000100006C3A                 mov     rax, [rbp+var_800]
__text:0000000100006C41                 mov     [rbp+var_7F8], rax
__text:0000000100006C48                 mov     rcx, [rbp+var_7F8]
__text:0000000100006C4F                 mov     [rbp+var_7F0], rcx
__text:0000000100006C56                 mov     rcx, [rbp+var_7F0]
__text:0000000100006C5D                 mov     rcx, [rcx]
__text:0000000100006C60                 mov     [rbp+var_810], rcx
__text:0000000100006C67                 mov     rcx, [rbp+var_808]
__text:0000000100006C6E                 mov     [rbp+var_760], rax
__text:0000000100006C75                 mov     rdx, [rbp+var_760]
__text:0000000100006C7C                 mov     [rbp+var_758], rdx
__text:0000000100006C83                 mov     rdx, [rbp+var_758]
__text:0000000100006C8A                 mov     [rdx], rcx
__text:0000000100006C8D                 cmp     [rbp+var_810], 0
__text:0000000100006C98                 mov     [rbp+var_C30], rax
__text:0000000100006C9F                 jz      loc_100006DC5
__text:0000000100006CA5                 mov     rax, [rbp+var_C30]
__text:0000000100006CAC                 mov     [rbp+var_750], rax
__text:0000000100006CB3                 mov     rcx, [rbp+var_750]
__text:0000000100006CBA                 mov     [rbp+var_748], rcx
__text:0000000100006CC1                 mov     rcx, [rbp+var_748]
__text:0000000100006CC8                 add     rcx, 8
__text:0000000100006CCF                 mov     rdx, [rbp+var_810]
__text:0000000100006CD6                 mov     [rbp+var_7D0], rcx
__text:0000000100006CDD                 mov     [rbp+var_7D8], rdx
__text:0000000100006CE4                 mov     rcx, [rbp+var_7D0]
__text:0000000100006CEB                 test    byte ptr [rcx+8], 1
__text:0000000100006CEF                 mov     [rbp+var_C38], rcx
__text:0000000100006CF6                 jz      loc_100006D4C
__text:0000000100006CFC                 mov     rax, [rbp+var_C38]
__text:0000000100006D03                 mov     rcx, [rax]
__text:0000000100006D06                 mov     rdx, [rbp+var_7D8]
__text:0000000100006D0D                 add     rdx, 1Ch
__text:0000000100006D14                 mov     [rbp+var_7C8], rdx
__text:0000000100006D1B                 mov     rdx, [rbp+var_7C8]
__text:0000000100006D22                 mov     [rbp+var_778], rcx
__text:0000000100006D29                 mov     [rbp+var_780], rdx
__text:0000000100006D30                 mov     rcx, [rbp+var_778]
__text:0000000100006D37                 mov     rdx, [rbp+var_780]
__text:0000000100006D3E                 mov     [rbp+var_768], rcx
__text:0000000100006D45                 mov     [rbp+var_770], rdx
__text:0000000100006D4C
__text:0000000100006D4C loc_100006D4C:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+1036↑j
__text:0000000100006D4C                 cmp     [rbp+var_7D8], 0
__text:0000000100006D57                 jz      loc_100006DC0
__text:0000000100006D5D                 mov     rax, [rbp+var_C38]
__text:0000000100006D64                 mov     rcx, [rax]
__text:0000000100006D67                 mov     rdx, [rbp+var_7D8]
__text:0000000100006D6E                 mov     [rbp+var_7B0], rcx
__text:0000000100006D75                 mov     [rbp+var_7B8], rdx
__text:0000000100006D7C                 mov     [rbp+var_7C0], 1
__text:0000000100006D87                 mov     rcx, [rbp+var_7B0]
__text:0000000100006D8E                 mov     rdx, [rbp+var_7B8]
__text:0000000100006D95                 mov     rsi, [rbp+var_7C0]
__text:0000000100006D9C                 mov     [rbp+var_798], rcx
__text:0000000100006DA3                 mov     [rbp+var_7A0], rdx
__text:0000000100006DAA                 mov     [rbp+var_7A8], rsi
__text:0000000100006DB1                 mov     rcx, [rbp+var_7A0]
__text:0000000100006DB8                 mov     rdi, rcx        ; void *
__text:0000000100006DBB                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100006DC0
__text:0000000100006DC0 loc_100006DC0:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+1097↑j
__text:0000000100006DC0                 jmp     $+5
__text:0000000100006DC5 ; ---------------------------------------------------------------------------
__text:0000000100006DC5
__text:0000000100006DC5 loc_100006DC5:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&)+FDF↑j
__text:0000000100006DC5                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__construct_node(std::__1::pair<int,int> const&):loc_100006DC0↑j
__text:0000000100006DC5                 mov     rax, [rbp+var_BD0]
__text:0000000100006DCC                 add     rsp, 0C18h
__text:0000000100006DD3                 pop     rbx
__text:0000000100006DD4                 pop     r12
__text:0000000100006DD6                 pop     r13
__text:0000000100006DD8                 pop     r14
__text:0000000100006DDA                 pop     r15
__text:0000000100006DDC                 pop     rbp
__text:0000000100006DDD                 retn
__text:0000000100006DDD __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__construct_nodeERKS2_ endp
__text:0000000100006DDD
__text:0000000100006DDD ; ---------------------------------------------------------------------------
__text:0000000100006DDE                 align 20h
__text:0000000100006DE0
__text:0000000100006DE0 ; =============== S U B R O U T I N E =======================================
__text:0000000100006DE0
__text:0000000100006DE0 ; Attributes: bp-based frame
__text:0000000100006DE0
__text:0000000100006DE0 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *, std::__1::__tree_node_base<void *> *&, std::__1::__tree_node_base<void *> *)
__text:0000000100006DE0 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_ proc near
__text:0000000100006DE0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB__ptr↓o
__text:0000000100006DE0
__text:0000000100006DE0 var_130         = qword ptr -130h
__text:0000000100006DE0 var_128         = qword ptr -128h
__text:0000000100006DE0 var_120         = qword ptr -120h
__text:0000000100006DE0 var_118         = qword ptr -118h
__text:0000000100006DE0 var_110         = qword ptr -110h
__text:0000000100006DE0 var_108         = qword ptr -108h
__text:0000000100006DE0 var_100         = qword ptr -100h
__text:0000000100006DE0 var_F8          = qword ptr -0F8h
__text:0000000100006DE0 var_F0          = qword ptr -0F0h
__text:0000000100006DE0 var_E8          = qword ptr -0E8h
__text:0000000100006DE0 var_E0          = qword ptr -0E0h
__text:0000000100006DE0 var_D8          = qword ptr -0D8h
__text:0000000100006DE0 var_D0          = qword ptr -0D0h
__text:0000000100006DE0 var_C8          = qword ptr -0C8h
__text:0000000100006DE0 var_C0          = qword ptr -0C0h
__text:0000000100006DE0 var_B8          = qword ptr -0B8h
__text:0000000100006DE0 var_B0          = qword ptr -0B0h
__text:0000000100006DE0 var_A8          = qword ptr -0A8h
__text:0000000100006DE0 var_A0          = qword ptr -0A0h
__text:0000000100006DE0 var_98          = qword ptr -98h
__text:0000000100006DE0 var_90          = qword ptr -90h
__text:0000000100006DE0 var_88          = qword ptr -88h
__text:0000000100006DE0 var_80          = qword ptr -80h
__text:0000000100006DE0 var_78          = qword ptr -78h
__text:0000000100006DE0 var_70          = qword ptr -70h
__text:0000000100006DE0 var_68          = qword ptr -68h
__text:0000000100006DE0 var_60          = qword ptr -60h
__text:0000000100006DE0 var_58          = qword ptr -58h
__text:0000000100006DE0 var_50          = qword ptr -50h
__text:0000000100006DE0 var_48          = qword ptr -48h
__text:0000000100006DE0 var_40          = qword ptr -40h
__text:0000000100006DE0 var_38          = qword ptr -38h
__text:0000000100006DE0 var_30          = qword ptr -30h
__text:0000000100006DE0 var_28          = qword ptr -28h
__text:0000000100006DE0 var_20          = qword ptr -20h
__text:0000000100006DE0 var_18          = qword ptr -18h
__text:0000000100006DE0 var_10          = qword ptr -10h
__text:0000000100006DE0
__text:0000000100006DE0                 push    rbp
__text:0000000100006DE1                 mov     rbp, rsp
__text:0000000100006DE4                 push    rbx
__text:0000000100006DE5                 sub     rsp, 128h
__text:0000000100006DEC                 lea     rax, [rbp+var_128]
__text:0000000100006DF3                 lea     r8, [rbp+var_68]
__text:0000000100006DF7                 lea     r9, [rbp+var_120]
__text:0000000100006DFE                 lea     r10, [rbp+var_30]
__text:0000000100006E02                 lea     r11, [rbp+var_118]
__text:0000000100006E09                 lea     rbx, [rbp+var_F0]
__text:0000000100006E10                 mov     [rbp+var_F8], rdi
__text:0000000100006E17                 mov     [rbp+var_100], rsi
__text:0000000100006E1E                 mov     [rbp+var_108], rdx
__text:0000000100006E25                 mov     [rbp+var_110], rcx
__text:0000000100006E2C                 mov     rcx, [rbp+var_F8]
__text:0000000100006E33                 mov     [rbp+var_E0], rbx
__text:0000000100006E3A                 mov     [rbp+var_E8], 0FFFFFFFFFFFFFFFFh
__text:0000000100006E45                 mov     rdx, [rbp+var_E0]
__text:0000000100006E4C                 mov     rsi, [rbp+var_E8]
__text:0000000100006E53                 mov     [rbp+var_D0], rdx
__text:0000000100006E5A                 mov     [rbp+var_D8], rsi
__text:0000000100006E61                 mov     rdx, [rbp+var_D0]
__text:0000000100006E68                 mov     qword ptr [rdx], 0
__text:0000000100006E6F                 mov     rdx, [rbp+var_F0]
__text:0000000100006E76                 mov     [rbp+var_118], rdx
__text:0000000100006E7D                 mov     [rbp+var_B0], r11
__text:0000000100006E84                 mov     rdx, [rbp+var_110]
__text:0000000100006E8B                 mov     qword ptr [rdx], 0
__text:0000000100006E92                 mov     [rbp+var_20], r10
__text:0000000100006E96                 mov     [rbp+var_28], 0FFFFFFFFFFFFFFFFh
__text:0000000100006E9E                 mov     rdx, [rbp+var_20]
__text:0000000100006EA2                 mov     rsi, [rbp+var_28]
__text:0000000100006EA6                 mov     [rbp+var_10], rdx
__text:0000000100006EAA                 mov     [rbp+var_18], rsi
__text:0000000100006EAE                 mov     rdx, [rbp+var_10]
__text:0000000100006EB2                 mov     qword ptr [rdx], 0
__text:0000000100006EB9                 mov     rdx, [rbp+var_30]
__text:0000000100006EBD                 mov     [rbp+var_120], rdx
__text:0000000100006EC4                 mov     [rbp+var_38], r9
__text:0000000100006EC8                 mov     rdx, [rbp+var_110]
__text:0000000100006ECF                 mov     qword ptr [rdx+8], 0
__text:0000000100006ED7                 mov     rdx, [rbp+var_100]
__text:0000000100006EDE                 mov     rsi, [rbp+var_110]
__text:0000000100006EE5                 mov     [rsi+10h], rdx
__text:0000000100006EE9                 mov     rdx, [rbp+var_110]
__text:0000000100006EF0                 mov     rsi, [rbp+var_108]
__text:0000000100006EF7                 mov     [rsi], rdx
__text:0000000100006EFA                 mov     [rbp+var_40], rcx
__text:0000000100006EFE                 mov     rdx, [rbp+var_40]
__text:0000000100006F02                 mov     rdx, [rdx]
__text:0000000100006F05                 mov     rdx, [rdx]
__text:0000000100006F08                 mov     [rbp+var_58], r8
__text:0000000100006F0C                 mov     [rbp+var_60], 0FFFFFFFFFFFFFFFFh
__text:0000000100006F14                 mov     rsi, [rbp+var_58]
__text:0000000100006F18                 mov     rdi, [rbp+var_60]
__text:0000000100006F1C                 mov     [rbp+var_48], rsi
__text:0000000100006F20                 mov     [rbp+var_50], rdi
__text:0000000100006F24                 mov     rsi, [rbp+var_48]
__text:0000000100006F28                 mov     qword ptr [rsi], 0
__text:0000000100006F2F                 mov     rsi, [rbp+var_68]
__text:0000000100006F33                 mov     [rbp+var_128], rsi
__text:0000000100006F3A                 mov     [rbp+var_70], rax
__text:0000000100006F3E                 cmp     rdx, 0
__text:0000000100006F45                 mov     [rbp+var_130], rcx
__text:0000000100006F4C                 jz      loc_100006F72
__text:0000000100006F52                 mov     rax, [rbp+var_130]
__text:0000000100006F59                 mov     [rbp+var_78], rax
__text:0000000100006F5D                 mov     rcx, [rbp+var_78]
__text:0000000100006F61                 mov     rcx, [rcx]
__text:0000000100006F64                 mov     rcx, [rcx]
__text:0000000100006F67                 mov     [rbp+var_80], rax
__text:0000000100006F6B                 mov     rdx, [rbp+var_80]
__text:0000000100006F6F                 mov     [rdx], rcx
__text:0000000100006F72
__text:0000000100006F72 loc_100006F72:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *&,std::__1::__tree_node_base<void *> *)+16C↑j
__text:0000000100006F72                 mov     rax, [rbp+var_130]
__text:0000000100006F79                 mov     [rbp+var_A8], rax
__text:0000000100006F80                 mov     rcx, [rbp+var_A8]
__text:0000000100006F87                 add     rcx, 8
__text:0000000100006F8E                 mov     [rbp+var_A0], rcx
__text:0000000100006F95                 mov     rcx, [rbp+var_A0]
__text:0000000100006F9C                 mov     [rbp+var_98], rcx
__text:0000000100006FA3                 mov     rcx, [rbp+var_98]
__text:0000000100006FAA                 mov     [rbp+var_90], rcx
__text:0000000100006FB1                 mov     rcx, [rbp+var_90]
__text:0000000100006FB8                 mov     [rbp+var_88], rcx
__text:0000000100006FBF                 mov     rcx, [rbp+var_88]
__text:0000000100006FC6                 mov     rdi, [rcx]
__text:0000000100006FC9                 mov     rcx, [rbp+var_108]
__text:0000000100006FD0                 mov     rsi, [rcx]
__text:0000000100006FD3                 call    j___ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)
__text:0000000100006FD8                 mov     rax, [rbp+var_130]
__text:0000000100006FDF                 mov     [rbp+var_C8], rax
__text:0000000100006FE6                 mov     rcx, [rbp+var_C8]
__text:0000000100006FED                 add     rcx, 10h
__text:0000000100006FF4                 mov     [rbp+var_C0], rcx
__text:0000000100006FFB                 mov     rcx, [rbp+var_C0]
__text:0000000100007002                 mov     [rbp+var_B8], rcx
__text:0000000100007009                 mov     rcx, [rbp+var_B8]
__text:0000000100007010                 mov     rsi, [rcx]
__text:0000000100007013                 add     rsi, 1
__text:000000010000701A                 mov     [rcx], rsi
__text:000000010000701D                 add     rsp, 128h
__text:0000000100007024                 pop     rbx
__text:0000000100007025                 pop     rbp
__text:0000000100007026                 retn
__text:0000000100007026 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSB_SB_ endp
__text:0000000100007026
__text:0000000100007026 ; ---------------------------------------------------------------------------
__text:0000000100007027                 align 10h
__text:0000000100007030
__text:0000000100007030 ; =============== S U B R O U T I N E =======================================
__text:0000000100007030
__text:0000000100007030 ; Attributes: bp-based frame
__text:0000000100007030
__text:0000000100007030 ; void std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *, std::__1::__tree_node_base<void *> *)
__text:0000000100007030 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ proc near
__text:0000000100007030                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5__ptr↓o
__text:0000000100007030
__text:0000000100007030 var_E0          = qword ptr -0E0h
__text:0000000100007030 var_D8          = qword ptr -0D8h
__text:0000000100007030 var_D0          = qword ptr -0D0h
__text:0000000100007030 var_C8          = qword ptr -0C8h
__text:0000000100007030 var_B9          = byte ptr -0B9h
__text:0000000100007030 var_B8          = qword ptr -0B8h
__text:0000000100007030 var_B0          = qword ptr -0B0h
__text:0000000100007030 var_A8          = qword ptr -0A8h
__text:0000000100007030 var_90          = qword ptr -90h
__text:0000000100007030 var_88          = qword ptr -88h
__text:0000000100007030 var_80          = qword ptr -80h
__text:0000000100007030 var_78          = qword ptr -78h
__text:0000000100007030 var_70          = qword ptr -70h
__text:0000000100007030 var_68          = qword ptr -68h
__text:0000000100007030 var_60          = qword ptr -60h
__text:0000000100007030 var_58          = qword ptr -58h
__text:0000000100007030 var_50          = qword ptr -50h
__text:0000000100007030 var_48          = qword ptr -48h
__text:0000000100007030 var_40          = qword ptr -40h
__text:0000000100007030 var_38          = qword ptr -38h
__text:0000000100007030 var_30          = qword ptr -30h
__text:0000000100007030 var_28          = qword ptr -28h
__text:0000000100007030 var_20          = qword ptr -20h
__text:0000000100007030 var_18          = qword ptr -18h
__text:0000000100007030 var_10          = qword ptr -10h
__text:0000000100007030 var_8           = qword ptr -8
__text:0000000100007030
__text:0000000100007030                 push    rbp
__text:0000000100007031                 mov     rbp, rsp
__text:0000000100007034                 sub     rsp, 0E0h
__text:000000010000703B                 mov     [rbp+var_80], rdi
__text:000000010000703F                 mov     [rbp+var_88], rsi
__text:0000000100007046                 mov     rsi, [rbp+var_88]
__text:000000010000704D                 cmp     rsi, [rbp+var_80]
__text:0000000100007051                 setz    al
__text:0000000100007054                 mov     rsi, [rbp+var_88]
__text:000000010000705B                 and     al, 1
__text:000000010000705D                 mov     [rsi+18h], al
__text:0000000100007060
__text:0000000100007060 loc_100007060:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_1000073CC↓j
__text:0000000100007060                 mov     al, 0
__text:0000000100007062                 mov     rcx, [rbp+var_88]
__text:0000000100007069                 cmp     rcx, [rbp+var_80]
__text:000000010000706D                 mov     [rbp+var_B9], al
__text:0000000100007073                 jz      loc_100007090
__text:0000000100007079                 mov     rax, [rbp+var_88]
__text:0000000100007080                 mov     rax, [rax+10h]
__text:0000000100007084                 mov     cl, [rax+18h]
__text:0000000100007087                 xor     cl, 1
__text:000000010000708A                 mov     [rbp+var_B9], cl
__text:0000000100007090
__text:0000000100007090 loc_100007090:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+43↑j
__text:0000000100007090                 mov     al, [rbp+var_B9]
__text:0000000100007096                 test    al, 1
__text:0000000100007098                 jnz     loc_1000070A3
__text:000000010000709E                 jmp     loc_1000073D1
__text:00000001000070A3 ; ---------------------------------------------------------------------------
__text:00000001000070A3
__text:00000001000070A3 loc_1000070A3:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+68↑j
__text:00000001000070A3                 mov     rax, [rbp+var_88]
__text:00000001000070AA                 mov     rax, [rax+10h]
__text:00000001000070AE                 mov     [rbp+var_78], rax
__text:00000001000070B2                 mov     rax, [rbp+var_78]
__text:00000001000070B6                 mov     rcx, [rbp+var_78]
__text:00000001000070BA                 mov     rcx, [rcx+10h]
__text:00000001000070BE                 cmp     rax, [rcx]
__text:00000001000070C1                 jnz     loc_10000724A
__text:00000001000070C7                 lea     rax, [rbp+var_70]
__text:00000001000070CB                 mov     rcx, [rbp+var_88]
__text:00000001000070D2                 mov     rcx, [rcx+10h]
__text:00000001000070D6                 mov     rcx, [rcx+10h]
__text:00000001000070DA                 mov     rcx, [rcx+8]
__text:00000001000070DE                 mov     [rbp+var_90], rcx
__text:00000001000070E5                 mov     rcx, [rbp+var_90]
__text:00000001000070EC                 mov     [rbp+var_60], rax
__text:00000001000070F0                 mov     [rbp+var_68], 0FFFFFFFFFFFFFFFFh
__text:00000001000070F8                 mov     rax, [rbp+var_60]
__text:00000001000070FC                 mov     rdx, [rbp+var_68]
__text:0000000100007100                 mov     [rbp+var_50], rax
__text:0000000100007104                 mov     [rbp+var_58], rdx
__text:0000000100007108                 mov     rax, [rbp+var_50]
__text:000000010000710C                 mov     qword ptr [rax], 0
__text:0000000100007113                 mov     rax, [rbp+var_70]
__text:0000000100007117                 mov     [rbp+var_C8], rcx
__text:000000010000711E                 mov     [rbp+var_D0], rax
__text:0000000100007125                 lea     rax, [rbp+var_A8]
__text:000000010000712C                 mov     rcx, [rbp+var_D0]
__text:0000000100007133                 mov     [rbp+var_A8], rcx
__text:000000010000713A                 mov     [rbp+var_48], rax
__text:000000010000713E                 mov     rax, [rbp+var_C8]
__text:0000000100007145                 cmp     rax, 0
__text:000000010000714B                 jz      loc_1000071BC
__text:0000000100007151                 mov     rax, [rbp+var_90]
__text:0000000100007158                 test    byte ptr [rax+18h], 1
__text:000000010000715C                 jnz     loc_1000071BC
__text:0000000100007162                 mov     rax, [rbp+var_88]
__text:0000000100007169                 mov     rax, [rax+10h]
__text:000000010000716D                 mov     [rbp+var_88], rax
__text:0000000100007174                 mov     rax, [rbp+var_88]
__text:000000010000717B                 mov     byte ptr [rax+18h], 1
__text:000000010000717F                 mov     rax, [rbp+var_88]
__text:0000000100007186                 mov     rax, [rax+10h]
__text:000000010000718A                 mov     [rbp+var_88], rax
__text:0000000100007191                 mov     rax, [rbp+var_88]
__text:0000000100007198                 cmp     rax, [rbp+var_80]
__text:000000010000719C                 setz    cl
__text:000000010000719F                 mov     rax, [rbp+var_88]
__text:00000001000071A6                 and     cl, 1
__text:00000001000071A9                 mov     [rax+18h], cl
__text:00000001000071AC                 mov     rax, [rbp+var_90]
__text:00000001000071B3                 mov     byte ptr [rax+18h], 1
__text:00000001000071B7                 jmp     loc_100007245
__text:00000001000071BC ; ---------------------------------------------------------------------------
__text:00000001000071BC
__text:00000001000071BC loc_1000071BC:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+11B↑j
__text:00000001000071BC                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+12C↑j
__text:00000001000071BC                 mov     rax, [rbp+var_88]
__text:00000001000071C3                 mov     [rbp+var_8], rax
__text:00000001000071C7                 mov     rax, [rbp+var_8]
__text:00000001000071CB                 mov     rcx, [rbp+var_8]
__text:00000001000071CF                 mov     rcx, [rcx+10h]
__text:00000001000071D3                 cmp     rax, [rcx]
__text:00000001000071D6                 jz      loc_1000071FA
__text:00000001000071DC                 mov     rax, [rbp+var_88]
__text:00000001000071E3                 mov     rax, [rax+10h]
__text:00000001000071E7                 mov     [rbp+var_88], rax
__text:00000001000071EE                 mov     rdi, [rbp+var_88]
__text:00000001000071F5                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000071FA
__text:00000001000071FA loc_1000071FA:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+1A6↑j
__text:00000001000071FA                 mov     rax, [rbp+var_88]
__text:0000000100007201                 mov     rax, [rax+10h]
__text:0000000100007205                 mov     [rbp+var_88], rax
__text:000000010000720C                 mov     rax, [rbp+var_88]
__text:0000000100007213                 mov     byte ptr [rax+18h], 1
__text:0000000100007217                 mov     rax, [rbp+var_88]
__text:000000010000721E                 mov     rax, [rax+10h]
__text:0000000100007222                 mov     [rbp+var_88], rax
__text:0000000100007229                 mov     rax, [rbp+var_88]
__text:0000000100007230                 mov     byte ptr [rax+18h], 0
__text:0000000100007234                 mov     rdi, [rbp+var_88]
__text:000000010000723B                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:0000000100007240                 jmp     loc_1000073D1
__text:0000000100007245 ; ---------------------------------------------------------------------------
__text:0000000100007245
__text:0000000100007245 loc_100007245:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+187↑j
__text:0000000100007245                 jmp     loc_1000073CC
__text:000000010000724A ; ---------------------------------------------------------------------------
__text:000000010000724A
__text:000000010000724A loc_10000724A:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+91↑j
__text:000000010000724A                 lea     rax, [rbp+var_30]
__text:000000010000724E                 mov     rcx, [rbp+var_88]
__text:0000000100007255                 mov     rcx, [rcx+10h]
__text:0000000100007259                 mov     rcx, [rcx+10h]
__text:000000010000725D                 mov     rcx, [rcx]
__text:0000000100007260                 mov     [rbp+var_B0], rcx
__text:0000000100007267                 mov     rcx, [rbp+var_B0]
__text:000000010000726E                 mov     [rbp+var_20], rax
__text:0000000100007272                 mov     [rbp+var_28], 0FFFFFFFFFFFFFFFFh
__text:000000010000727A                 mov     rax, [rbp+var_20]
__text:000000010000727E                 mov     rdx, [rbp+var_28]
__text:0000000100007282                 mov     [rbp+var_10], rax
__text:0000000100007286                 mov     [rbp+var_18], rdx
__text:000000010000728A                 mov     rax, [rbp+var_10]
__text:000000010000728E                 mov     qword ptr [rax], 0
__text:0000000100007295                 mov     rax, [rbp+var_30]
__text:0000000100007299                 mov     [rbp+var_D8], rcx
__text:00000001000072A0                 mov     [rbp+var_E0], rax
__text:00000001000072A7                 lea     rax, [rbp+var_B8]
__text:00000001000072AE                 mov     rcx, [rbp+var_E0]
__text:00000001000072B5                 mov     [rbp+var_B8], rcx
__text:00000001000072BC                 mov     [rbp+var_38], rax
__text:00000001000072C0                 mov     rax, [rbp+var_D8]
__text:00000001000072C7                 cmp     rax, 0
__text:00000001000072CD                 jz      loc_10000733E
__text:00000001000072D3                 mov     rax, [rbp+var_B0]
__text:00000001000072DA                 test    byte ptr [rax+18h], 1
__text:00000001000072DE                 jnz     loc_10000733E
__text:00000001000072E4                 mov     rax, [rbp+var_88]
__text:00000001000072EB                 mov     rax, [rax+10h]
__text:00000001000072EF                 mov     [rbp+var_88], rax
__text:00000001000072F6                 mov     rax, [rbp+var_88]
__text:00000001000072FD                 mov     byte ptr [rax+18h], 1
__text:0000000100007301                 mov     rax, [rbp+var_88]
__text:0000000100007308                 mov     rax, [rax+10h]
__text:000000010000730C                 mov     [rbp+var_88], rax
__text:0000000100007313                 mov     rax, [rbp+var_88]
__text:000000010000731A                 cmp     rax, [rbp+var_80]
__text:000000010000731E                 setz    cl
__text:0000000100007321                 mov     rax, [rbp+var_88]
__text:0000000100007328                 and     cl, 1
__text:000000010000732B                 mov     [rax+18h], cl
__text:000000010000732E                 mov     rax, [rbp+var_B0]
__text:0000000100007335                 mov     byte ptr [rax+18h], 1
__text:0000000100007339                 jmp     loc_1000073C7
__text:000000010000733E ; ---------------------------------------------------------------------------
__text:000000010000733E
__text:000000010000733E loc_10000733E:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+29D↑j
__text:000000010000733E                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+2AE↑j
__text:000000010000733E                 mov     rax, [rbp+var_88]
__text:0000000100007345                 mov     [rbp+var_40], rax
__text:0000000100007349                 mov     rax, [rbp+var_40]
__text:000000010000734D                 mov     rcx, [rbp+var_40]
__text:0000000100007351                 mov     rcx, [rcx+10h]
__text:0000000100007355                 cmp     rax, [rcx]
__text:0000000100007358                 jnz     loc_10000737C
__text:000000010000735E                 mov     rax, [rbp+var_88]
__text:0000000100007365                 mov     rax, [rax+10h]
__text:0000000100007369                 mov     [rbp+var_88], rax
__text:0000000100007370                 mov     rdi, [rbp+var_88]
__text:0000000100007377                 call    j___ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:000000010000737C
__text:000000010000737C loc_10000737C:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+328↑j
__text:000000010000737C                 mov     rax, [rbp+var_88]
__text:0000000100007383                 mov     rax, [rax+10h]
__text:0000000100007387                 mov     [rbp+var_88], rax
__text:000000010000738E                 mov     rax, [rbp+var_88]
__text:0000000100007395                 mov     byte ptr [rax+18h], 1
__text:0000000100007399                 mov     rax, [rbp+var_88]
__text:00000001000073A0                 mov     rax, [rax+10h]
__text:00000001000073A4                 mov     [rbp+var_88], rax
__text:00000001000073AB                 mov     rax, [rbp+var_88]
__text:00000001000073B2                 mov     byte ptr [rax+18h], 0
__text:00000001000073B6                 mov     rdi, [rbp+var_88]
__text:00000001000073BD                 call    j___ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ ; std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000073C2                 jmp     loc_1000073D1
__text:00000001000073C7 ; ---------------------------------------------------------------------------
__text:00000001000073C7
__text:00000001000073C7 loc_1000073C7:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+309↑j
__text:00000001000073C7                 jmp     $+5
__text:00000001000073CC ; ---------------------------------------------------------------------------
__text:00000001000073CC
__text:00000001000073CC loc_1000073CC:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_100007245↑j
__text:00000001000073CC                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *):loc_1000073C7↑j
__text:00000001000073CC                 jmp     loc_100007060
__text:00000001000073D1 ; ---------------------------------------------------------------------------
__text:00000001000073D1
__text:00000001000073D1 loc_1000073D1:                          ; CODE XREF: std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+6E↑j
__text:00000001000073D1                                         ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)+210↑j ...
__text:00000001000073D1                 add     rsp, 0E0h
__text:00000001000073D8                 pop     rbp
__text:00000001000073D9                 retn
__text:00000001000073D9 __ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ endp
__text:00000001000073D9
__text:00000001000073D9 ; ---------------------------------------------------------------------------
__text:00000001000073DA                 align 20h
__text:00000001000073E0
__text:00000001000073E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000073E0
__text:00000001000073E0 ; Attributes: bp-based frame
__text:00000001000073E0
__text:00000001000073E0 ; void std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000073E0 __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ proc near
__text:00000001000073E0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT__ptr↓o
__text:00000001000073E0
__text:00000001000073E0 var_70          = qword ptr -70h
__text:00000001000073E0 var_68          = qword ptr -68h
__text:00000001000073E0 var_60          = qword ptr -60h
__text:00000001000073E0 var_48          = qword ptr -48h
__text:00000001000073E0 var_40          = qword ptr -40h
__text:00000001000073E0 var_38          = qword ptr -38h
__text:00000001000073E0 var_30          = qword ptr -30h
__text:00000001000073E0 var_28          = qword ptr -28h
__text:00000001000073E0 var_20          = qword ptr -20h
__text:00000001000073E0 var_18          = qword ptr -18h
__text:00000001000073E0 var_10          = qword ptr -10h
__text:00000001000073E0 var_8           = qword ptr -8
__text:00000001000073E0
__text:00000001000073E0                 push    rbp
__text:00000001000073E1                 mov     rbp, rsp
__text:00000001000073E4                 lea     rax, [rbp+var_38]
__text:00000001000073E8                 mov     [rbp+var_40], rdi
__text:00000001000073EC                 mov     rdi, [rbp+var_40]
__text:00000001000073F0                 mov     rdi, [rdi+8]
__text:00000001000073F4                 mov     [rbp+var_48], rdi
__text:00000001000073F8                 mov     rdi, [rbp+var_48]
__text:00000001000073FC                 mov     rdi, [rdi]
__text:00000001000073FF                 mov     rcx, [rbp+var_40]
__text:0000000100007403                 mov     [rcx+8], rdi
__text:0000000100007407                 mov     rcx, [rbp+var_40]
__text:000000010000740B                 mov     rcx, [rcx+8]
__text:000000010000740F                 mov     [rbp+var_28], rax
__text:0000000100007413                 mov     [rbp+var_30], 0FFFFFFFFFFFFFFFFh
__text:000000010000741B                 mov     rax, [rbp+var_28]
__text:000000010000741F                 mov     rdi, [rbp+var_30]
__text:0000000100007423                 mov     [rbp+var_18], rax
__text:0000000100007427                 mov     [rbp+var_20], rdi
__text:000000010000742B                 mov     rax, [rbp+var_18]
__text:000000010000742F                 mov     qword ptr [rax], 0
__text:0000000100007436                 mov     rax, [rbp+var_38]
__text:000000010000743A                 mov     [rbp+var_68], rcx
__text:000000010000743E                 mov     [rbp+var_70], rax
__text:0000000100007442                 lea     rax, [rbp+var_60]
__text:0000000100007446                 mov     rcx, [rbp+var_70]
__text:000000010000744A                 mov     [rbp+var_60], rcx
__text:000000010000744E                 mov     [rbp+var_8], rax
__text:0000000100007452                 mov     rax, [rbp+var_68]
__text:0000000100007456                 cmp     rax, 0
__text:000000010000745C                 jz      loc_100007472
__text:0000000100007462                 mov     rax, [rbp+var_40]
__text:0000000100007466                 mov     rcx, [rbp+var_40]
__text:000000010000746A                 mov     rcx, [rcx+8]
__text:000000010000746E                 mov     [rcx+10h], rax
__text:0000000100007472
__text:0000000100007472 loc_100007472:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+7C↑j
__text:0000000100007472                 mov     rax, [rbp+var_40]
__text:0000000100007476                 mov     rax, [rax+10h]
__text:000000010000747A                 mov     rcx, [rbp+var_48]
__text:000000010000747E                 mov     [rcx+10h], rax
__text:0000000100007482                 mov     rax, [rbp+var_40]
__text:0000000100007486                 mov     [rbp+var_10], rax
__text:000000010000748A                 mov     rax, [rbp+var_10]
__text:000000010000748E                 mov     rcx, [rbp+var_10]
__text:0000000100007492                 mov     rcx, [rcx+10h]
__text:0000000100007496                 cmp     rax, [rcx]
__text:0000000100007499                 jnz     loc_1000074B3
__text:000000010000749F                 mov     rax, [rbp+var_48]
__text:00000001000074A3                 mov     rcx, [rbp+var_40]
__text:00000001000074A7                 mov     rcx, [rcx+10h]
__text:00000001000074AB                 mov     [rcx], rax
__text:00000001000074AE                 jmp     loc_1000074C3
__text:00000001000074B3 ; ---------------------------------------------------------------------------
__text:00000001000074B3
__text:00000001000074B3 loc_1000074B3:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+B9↑j
__text:00000001000074B3                 mov     rax, [rbp+var_48]
__text:00000001000074B7                 mov     rcx, [rbp+var_40]
__text:00000001000074BB                 mov     rcx, [rcx+10h]
__text:00000001000074BF                 mov     [rcx+8], rax
__text:00000001000074C3
__text:00000001000074C3 loc_1000074C3:                          ; CODE XREF: std::__1::__tree_left_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+CE↑j
__text:00000001000074C3                 mov     rax, [rbp+var_40]
__text:00000001000074C7                 mov     rcx, [rbp+var_48]
__text:00000001000074CB                 mov     [rcx], rax
__text:00000001000074CE                 mov     rax, [rbp+var_48]
__text:00000001000074D2                 mov     rcx, [rbp+var_40]
__text:00000001000074D6                 mov     [rcx+10h], rax
__text:00000001000074DA                 pop     rbp
__text:00000001000074DB                 retn
__text:00000001000074DB __ZNSt3__118__tree_left_rotateIPNS_16__tree_node_baseIPvEEEEvT_ endp
__text:00000001000074DB
__text:00000001000074DB ; ---------------------------------------------------------------------------
__text:00000001000074DC                 align 20h
__text:00000001000074E0
__text:00000001000074E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000074E0
__text:00000001000074E0 ; Attributes: bp-based frame
__text:00000001000074E0
__text:00000001000074E0 ; void std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)
__text:00000001000074E0 __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ proc near
__text:00000001000074E0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT__ptr↓o
__text:00000001000074E0
__text:00000001000074E0 var_70          = qword ptr -70h
__text:00000001000074E0 var_68          = qword ptr -68h
__text:00000001000074E0 var_60          = qword ptr -60h
__text:00000001000074E0 var_48          = qword ptr -48h
__text:00000001000074E0 var_40          = qword ptr -40h
__text:00000001000074E0 var_38          = qword ptr -38h
__text:00000001000074E0 var_30          = qword ptr -30h
__text:00000001000074E0 var_28          = qword ptr -28h
__text:00000001000074E0 var_20          = qword ptr -20h
__text:00000001000074E0 var_18          = qword ptr -18h
__text:00000001000074E0 var_10          = qword ptr -10h
__text:00000001000074E0 var_8           = qword ptr -8
__text:00000001000074E0
__text:00000001000074E0                 push    rbp
__text:00000001000074E1                 mov     rbp, rsp
__text:00000001000074E4                 lea     rax, [rbp+var_38]
__text:00000001000074E8                 mov     [rbp+var_40], rdi
__text:00000001000074EC                 mov     rdi, [rbp+var_40]
__text:00000001000074F0                 mov     rdi, [rdi]
__text:00000001000074F3                 mov     [rbp+var_48], rdi
__text:00000001000074F7                 mov     rdi, [rbp+var_48]
__text:00000001000074FB                 mov     rdi, [rdi+8]
__text:00000001000074FF                 mov     rcx, [rbp+var_40]
__text:0000000100007503                 mov     [rcx], rdi
__text:0000000100007506                 mov     rcx, [rbp+var_40]
__text:000000010000750A                 mov     rcx, [rcx]
__text:000000010000750D                 mov     [rbp+var_28], rax
__text:0000000100007511                 mov     [rbp+var_30], 0FFFFFFFFFFFFFFFFh
__text:0000000100007519                 mov     rax, [rbp+var_28]
__text:000000010000751D                 mov     rdi, [rbp+var_30]
__text:0000000100007521                 mov     [rbp+var_18], rax
__text:0000000100007525                 mov     [rbp+var_20], rdi
__text:0000000100007529                 mov     rax, [rbp+var_18]
__text:000000010000752D                 mov     qword ptr [rax], 0
__text:0000000100007534                 mov     rax, [rbp+var_38]
__text:0000000100007538                 mov     [rbp+var_68], rcx
__text:000000010000753C                 mov     [rbp+var_70], rax
__text:0000000100007540                 lea     rax, [rbp+var_60]
__text:0000000100007544                 mov     rcx, [rbp+var_70]
__text:0000000100007548                 mov     [rbp+var_60], rcx
__text:000000010000754C                 mov     [rbp+var_8], rax
__text:0000000100007550                 mov     rax, [rbp+var_68]
__text:0000000100007554                 cmp     rax, 0
__text:000000010000755A                 jz      loc_10000756F
__text:0000000100007560                 mov     rax, [rbp+var_40]
__text:0000000100007564                 mov     rcx, [rbp+var_40]
__text:0000000100007568                 mov     rcx, [rcx]
__text:000000010000756B                 mov     [rcx+10h], rax
__text:000000010000756F
__text:000000010000756F loc_10000756F:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+7A↑j
__text:000000010000756F                 mov     rax, [rbp+var_40]
__text:0000000100007573                 mov     rax, [rax+10h]
__text:0000000100007577                 mov     rcx, [rbp+var_48]
__text:000000010000757B                 mov     [rcx+10h], rax
__text:000000010000757F                 mov     rax, [rbp+var_40]
__text:0000000100007583                 mov     [rbp+var_10], rax
__text:0000000100007587                 mov     rax, [rbp+var_10]
__text:000000010000758B                 mov     rcx, [rbp+var_10]
__text:000000010000758F                 mov     rcx, [rcx+10h]
__text:0000000100007593                 cmp     rax, [rcx]
__text:0000000100007596                 jnz     loc_1000075B0
__text:000000010000759C                 mov     rax, [rbp+var_48]
__text:00000001000075A0                 mov     rcx, [rbp+var_40]
__text:00000001000075A4                 mov     rcx, [rcx+10h]
__text:00000001000075A8                 mov     [rcx], rax
__text:00000001000075AB                 jmp     loc_1000075C0
__text:00000001000075B0 ; ---------------------------------------------------------------------------
__text:00000001000075B0
__text:00000001000075B0 loc_1000075B0:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+B6↑j
__text:00000001000075B0                 mov     rax, [rbp+var_48]
__text:00000001000075B4                 mov     rcx, [rbp+var_40]
__text:00000001000075B8                 mov     rcx, [rcx+10h]
__text:00000001000075BC                 mov     [rcx+8], rax
__text:00000001000075C0
__text:00000001000075C0 loc_1000075C0:                          ; CODE XREF: std::__1::__tree_right_rotate<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *)+CB↑j
__text:00000001000075C0                 mov     rax, [rbp+var_40]
__text:00000001000075C4                 mov     rcx, [rbp+var_48]
__text:00000001000075C8                 mov     [rcx+8], rax
__text:00000001000075CC                 mov     rax, [rbp+var_48]
__text:00000001000075D0                 mov     rcx, [rbp+var_40]
__text:00000001000075D4                 mov     [rcx+10h], rax
__text:00000001000075D8                 pop     rbp
__text:00000001000075D9                 retn
__text:00000001000075D9 __ZNSt3__119__tree_right_rotateIPNS_16__tree_node_baseIPvEEEEvT_ endp
__text:00000001000075D9
__text:00000001000075D9 ; ---------------------------------------------------------------------------
__text:00000001000075DA                 align 20h
__text:00000001000075E0
__text:00000001000075E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000075E0
__text:00000001000075E0 ; Attributes: bp-based frame
__text:00000001000075E0
__text:00000001000075E0 ; unsigned long std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__count_unique<std::__1::pair<int, int>>(std::__1::pair<int, int> const&)const
__text:00000001000075E0 __ZNKSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__count_uniqueIS2_EEmRKT_ proc near
__text:00000001000075E0                                         ; DATA XREF: __la_symbol_ptr:__ZNKSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__count_uniqueIS2_EEmRKT__ptr↓o
__text:00000001000075E0
__text:00000001000075E0 var_144         = byte ptr -144h
__text:00000001000075E0 var_143         = byte ptr -143h
__text:00000001000075E0 var_142         = byte ptr -142h
__text:00000001000075E0 var_141         = byte ptr -141h
__text:00000001000075E0 var_140         = qword ptr -140h
__text:00000001000075E0 var_138         = qword ptr -138h
__text:00000001000075E0 var_130         = qword ptr -130h
__text:00000001000075E0 var_128         = qword ptr -128h
__text:00000001000075E0 var_120         = qword ptr -120h
__text:00000001000075E0 var_118         = qword ptr -118h
__text:00000001000075E0 var_110         = qword ptr -110h
__text:00000001000075E0 var_108         = qword ptr -108h
__text:00000001000075E0 var_100         = qword ptr -100h
__text:00000001000075E0 var_F8          = qword ptr -0F8h
__text:00000001000075E0 var_F0          = qword ptr -0F0h
__text:00000001000075E0 var_E8          = qword ptr -0E8h
__text:00000001000075E0 var_E0          = qword ptr -0E0h
__text:00000001000075E0 var_D8          = qword ptr -0D8h
__text:00000001000075E0 var_D0          = qword ptr -0D0h
__text:00000001000075E0 var_C8          = qword ptr -0C8h
__text:00000001000075E0 var_C0          = qword ptr -0C0h
__text:00000001000075E0 var_B8          = qword ptr -0B8h
__text:00000001000075E0 var_B0          = qword ptr -0B0h
__text:00000001000075E0 var_A8          = qword ptr -0A8h
__text:00000001000075E0 var_A0          = qword ptr -0A0h
__text:00000001000075E0 var_98          = qword ptr -98h
__text:00000001000075E0 var_90          = qword ptr -90h
__text:00000001000075E0 var_88          = qword ptr -88h
__text:00000001000075E0 var_80          = qword ptr -80h
__text:00000001000075E0 var_78          = qword ptr -78h
__text:00000001000075E0 var_70          = qword ptr -70h
__text:00000001000075E0 var_68          = qword ptr -68h
__text:00000001000075E0 var_60          = qword ptr -60h
__text:00000001000075E0 var_58          = qword ptr -58h
__text:00000001000075E0 var_50          = qword ptr -50h
__text:00000001000075E0 var_48          = qword ptr -48h
__text:00000001000075E0 var_40          = qword ptr -40h
__text:00000001000075E0 var_38          = qword ptr -38h
__text:00000001000075E0 var_30          = qword ptr -30h
__text:00000001000075E0 var_28          = qword ptr -28h
__text:00000001000075E0 var_20          = qword ptr -20h
__text:00000001000075E0 var_18          = qword ptr -18h
__text:00000001000075E0 var_10          = qword ptr -10h
__text:00000001000075E0 var_8           = qword ptr -8
__text:00000001000075E0
__text:00000001000075E0                 push    rbp
__text:00000001000075E1                 mov     rbp, rsp
__text:00000001000075E4                 sub     rsp, 0C8h
__text:00000001000075EB                 mov     [rbp+var_118], rdi
__text:00000001000075F2                 mov     [rbp+var_120], rsi
__text:00000001000075F9                 mov     rsi, [rbp+var_118]
__text:0000000100007600                 mov     [rbp+var_108], rsi
__text:0000000100007607                 mov     rdi, [rbp+var_108]
__text:000000010000760E                 add     rdi, 8
__text:0000000100007615                 mov     [rbp+var_100], rdi
__text:000000010000761C                 mov     rdi, [rbp+var_100]
__text:0000000100007623                 mov     [rbp+var_F8], rdi
__text:000000010000762A                 mov     rdi, [rbp+var_F8]
__text:0000000100007631                 mov     [rbp+var_F0], rdi
__text:0000000100007638                 mov     rdi, [rbp+var_F0]
__text:000000010000763F                 mov     [rbp+var_E8], rdi
__text:0000000100007646                 mov     rdi, [rbp+var_E8]
__text:000000010000764D                 mov     [rbp+var_128], rdi
__text:0000000100007654                 mov     [rbp+var_30], rsi
__text:0000000100007658                 mov     rdi, [rbp+var_30]
__text:000000010000765C                 mov     [rbp+var_28], rdi
__text:0000000100007660                 mov     rdi, [rbp+var_28]
__text:0000000100007664                 add     rdi, 8
__text:000000010000766B                 mov     [rbp+var_20], rdi
__text:000000010000766F                 mov     rdi, [rbp+var_20]
__text:0000000100007673                 mov     [rbp+var_18], rdi
__text:0000000100007677                 mov     rdi, [rbp+var_18]
__text:000000010000767B                 mov     [rbp+var_10], rdi
__text:000000010000767F                 mov     rdi, [rbp+var_10]
__text:0000000100007683                 mov     [rbp+var_8], rdi
__text:0000000100007687                 mov     rdi, [rbp+var_8]
__text:000000010000768B                 mov     rdi, [rdi]
__text:000000010000768E                 mov     [rbp+var_130], rdi
__text:0000000100007695                 mov     [rbp+var_140], rsi
__text:000000010000769C
__text:000000010000769C loc_10000769C:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&):loc_10000791B↓j
__text:000000010000769C                 lea     rax, [rbp+var_138]
__text:00000001000076A3                 lea     rcx, [rbp+var_58]
__text:00000001000076A7                 mov     rdx, [rbp+var_130]
__text:00000001000076AE                 mov     [rbp+var_48], rcx
__text:00000001000076B2                 mov     [rbp+var_50], 0FFFFFFFFFFFFFFFFh
__text:00000001000076BA                 mov     rcx, [rbp+var_48]
__text:00000001000076BE                 mov     rsi, [rbp+var_50]
__text:00000001000076C2                 mov     [rbp+var_38], rcx
__text:00000001000076C6                 mov     [rbp+var_40], rsi
__text:00000001000076CA                 mov     rcx, [rbp+var_38]
__text:00000001000076CE                 mov     qword ptr [rcx], 0
__text:00000001000076D5                 mov     rcx, [rbp+var_58]
__text:00000001000076D9                 mov     [rbp+var_138], rcx
__text:00000001000076E0                 mov     [rbp+var_60], rax
__text:00000001000076E4                 cmp     rdx, 0
__text:00000001000076EB                 jz      loc_100007920
__text:00000001000076F1                 mov     al, 1
__text:00000001000076F3                 mov     rcx, [rbp+var_140]
__text:00000001000076FA                 mov     [rbp+var_78], rcx
__text:00000001000076FE                 mov     rdx, [rbp+var_78]
__text:0000000100007702                 add     rdx, 10h
__text:0000000100007709                 mov     [rbp+var_70], rdx
__text:000000010000770D                 mov     rdx, [rbp+var_70]
__text:0000000100007711                 mov     [rbp+var_68], rdx
__text:0000000100007715                 mov     rdx, [rbp+var_68]
__text:0000000100007719                 mov     rsi, [rbp+var_120]
__text:0000000100007720                 mov     rdi, [rbp+var_130]
__text:0000000100007727                 add     rdi, 1Ch
__text:000000010000772E                 mov     [rbp+var_90], rdx
__text:0000000100007735                 mov     [rbp+var_98], rsi
__text:000000010000773C                 mov     [rbp+var_A0], rdi
__text:0000000100007743                 mov     rdx, [rbp+var_98]
__text:000000010000774A                 mov     rsi, [rbp+var_A0]
__text:0000000100007751                 mov     [rbp+var_80], rdx
__text:0000000100007755                 mov     [rbp+var_88], rsi
__text:000000010000775C                 mov     rdx, [rbp+var_80]
__text:0000000100007760                 mov     r8d, [rdx]
__text:0000000100007763                 mov     rdx, [rbp+var_88]
__text:000000010000776A                 cmp     r8d, [rdx]
__text:000000010000776D                 mov     [rbp+var_141], al
__text:0000000100007773                 jl      loc_1000077BC
__text:0000000100007779                 mov     al, 0
__text:000000010000777B                 mov     rcx, [rbp+var_88]
__text:0000000100007782                 mov     edx, [rcx]
__text:0000000100007784                 mov     rcx, [rbp+var_80]
__text:0000000100007788                 cmp     edx, [rcx]
__text:000000010000778A                 mov     [rbp+var_142], al
__text:0000000100007790                 jl      loc_1000077B0
__text:0000000100007796                 mov     rax, [rbp+var_80]
__text:000000010000779A                 mov     ecx, [rax+4]
__text:000000010000779D                 mov     rax, [rbp+var_88]
__text:00000001000077A4                 cmp     ecx, [rax+4]
__text:00000001000077A7                 setl    dl
__text:00000001000077AA                 mov     [rbp+var_142], dl
__text:00000001000077B0
__text:00000001000077B0 loc_1000077B0:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+1B0↑j
__text:00000001000077B0                 mov     al, [rbp+var_142]
__text:00000001000077B6                 mov     [rbp+var_141], al
__text:00000001000077BC
__text:00000001000077BC loc_1000077BC:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+193↑j
__text:00000001000077BC                 mov     al, [rbp+var_141]
__text:00000001000077C2                 test    al, 1
__text:00000001000077C4                 jnz     loc_1000077CF
__text:00000001000077CA                 jmp     loc_1000077F3
__text:00000001000077CF ; ---------------------------------------------------------------------------
__text:00000001000077CF
__text:00000001000077CF loc_1000077CF:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+1E4↑j
__text:00000001000077CF                 mov     rax, [rbp+var_130]
__text:00000001000077D6                 mov     [rbp+var_128], rax
__text:00000001000077DD                 mov     rax, [rbp+var_130]
__text:00000001000077E4                 mov     rax, [rax]
__text:00000001000077E7                 mov     [rbp+var_130], rax
__text:00000001000077EE                 jmp     loc_10000791B
__text:00000001000077F3 ; ---------------------------------------------------------------------------
__text:00000001000077F3
__text:00000001000077F3 loc_1000077F3:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+1EA↑j
__text:00000001000077F3                 mov     al, 1
__text:00000001000077F5                 mov     rcx, [rbp+var_140]
__text:00000001000077FC                 mov     [rbp+var_B8], rcx
__text:0000000100007803                 mov     rdx, [rbp+var_B8]
__text:000000010000780A                 add     rdx, 10h
__text:0000000100007811                 mov     [rbp+var_B0], rdx
__text:0000000100007818                 mov     rdx, [rbp+var_B0]
__text:000000010000781F                 mov     [rbp+var_A8], rdx
__text:0000000100007826                 mov     rdx, [rbp+var_A8]
__text:000000010000782D                 mov     rsi, [rbp+var_130]
__text:0000000100007834                 add     rsi, 1Ch
__text:000000010000783B                 mov     rdi, [rbp+var_120]
__text:0000000100007842                 mov     [rbp+var_D0], rdx
__text:0000000100007849                 mov     [rbp+var_D8], rsi
__text:0000000100007850                 mov     [rbp+var_E0], rdi
__text:0000000100007857                 mov     rdx, [rbp+var_D8]
__text:000000010000785E                 mov     rsi, [rbp+var_E0]
__text:0000000100007865                 mov     [rbp+var_C0], rdx
__text:000000010000786C                 mov     [rbp+var_C8], rsi
__text:0000000100007873                 mov     rdx, [rbp+var_C0]
__text:000000010000787A                 mov     r8d, [rdx]
__text:000000010000787D                 mov     rdx, [rbp+var_C8]
__text:0000000100007884                 cmp     r8d, [rdx]
__text:0000000100007887                 mov     [rbp+var_143], al
__text:000000010000788D                 jl      loc_1000078DC
__text:0000000100007893                 mov     al, 0
__text:0000000100007895                 mov     rcx, [rbp+var_C8]
__text:000000010000789C                 mov     edx, [rcx]
__text:000000010000789E                 mov     rcx, [rbp+var_C0]
__text:00000001000078A5                 cmp     edx, [rcx]
__text:00000001000078A7                 mov     [rbp+var_144], al
__text:00000001000078AD                 jl      loc_1000078D0
__text:00000001000078B3                 mov     rax, [rbp+var_C0]
__text:00000001000078BA                 mov     ecx, [rax+4]
__text:00000001000078BD                 mov     rax, [rbp+var_C8]
__text:00000001000078C4                 cmp     ecx, [rax+4]
__text:00000001000078C7                 setl    dl
__text:00000001000078CA                 mov     [rbp+var_144], dl
__text:00000001000078D0
__text:00000001000078D0 loc_1000078D0:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+2CD↑j
__text:00000001000078D0                 mov     al, [rbp+var_144]
__text:00000001000078D6                 mov     [rbp+var_143], al
__text:00000001000078DC
__text:00000001000078DC loc_1000078DC:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+2AD↑j
__text:00000001000078DC                 mov     al, [rbp+var_143]
__text:00000001000078E2                 test    al, 1
__text:00000001000078E4                 jnz     loc_1000078EF
__text:00000001000078EA                 jmp     loc_100007906
__text:00000001000078EF ; ---------------------------------------------------------------------------
__text:00000001000078EF
__text:00000001000078EF loc_1000078EF:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+304↑j
__text:00000001000078EF                 mov     rax, [rbp+var_130]
__text:00000001000078F6                 mov     rax, [rax+8]
__text:00000001000078FA                 mov     [rbp+var_130], rax
__text:0000000100007901                 jmp     loc_100007916
__text:0000000100007906 ; ---------------------------------------------------------------------------
__text:0000000100007906
__text:0000000100007906 loc_100007906:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+30A↑j
__text:0000000100007906                 mov     [rbp+var_110], 1
__text:0000000100007911                 jmp     loc_10000792B
__text:0000000100007916 ; ---------------------------------------------------------------------------
__text:0000000100007916
__text:0000000100007916 loc_100007916:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+321↑j
__text:0000000100007916                 jmp     $+5
__text:000000010000791B ; ---------------------------------------------------------------------------
__text:000000010000791B
__text:000000010000791B loc_10000791B:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+20E↑j
__text:000000010000791B                                         ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&):loc_100007916↑j
__text:000000010000791B                 jmp     loc_10000769C
__text:0000000100007920 ; ---------------------------------------------------------------------------
__text:0000000100007920
__text:0000000100007920 loc_100007920:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+10B↑j
__text:0000000100007920                 mov     [rbp+var_110], 0
__text:000000010000792B
__text:000000010000792B loc_10000792B:                          ; CODE XREF: std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__count_unique<std::__1::pair<int,int>>(std::__1::pair<int,int> const&)+331↑j
__text:000000010000792B                 mov     rax, [rbp+var_110]
__text:0000000100007932                 add     rsp, 0C8h
__text:0000000100007939                 pop     rbp
__text:000000010000793A                 retn
__text:000000010000793A __ZNKSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE14__count_uniqueIS2_EEmRKT_ endp
__text:000000010000793A
__text:000000010000793A ; ---------------------------------------------------------------------------
__text:000000010000793B                 align 20h
__text:0000000100007940
__text:0000000100007940 ; =============== S U B R O U T I N E =======================================
__text:0000000100007940
__text:0000000100007940 ; Attributes: bp-based frame
__text:0000000100007940
__text:0000000100007940 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__tree(std::__1::less<std::__1::pair<int, int>> const&)
__text:0000000100007940 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_ proc near
__text:0000000100007940                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4__ptr↓o
__text:0000000100007940
__text:0000000100007940 var_10          = qword ptr -10h
__text:0000000100007940 var_8           = qword ptr -8
__text:0000000100007940
__text:0000000100007940                 push    rbp
__text:0000000100007941                 mov     rbp, rsp
__text:0000000100007944                 sub     rsp, 10h
__text:0000000100007948                 mov     [rbp+var_8], rdi
__text:000000010000794C                 mov     [rbp+var_10], rsi
__text:0000000100007950                 mov     rdi, [rbp+var_8]
__text:0000000100007954                 mov     rsi, [rbp+var_10]
__text:0000000100007958                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_ ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::__tree(std::__1::less<std::__1::pair<int,int>> const&)
__text:000000010000795D                 add     rsp, 10h
__text:0000000100007961                 pop     rbp
__text:0000000100007962                 retn
__text:0000000100007962 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC1ERKS4_ endp
__text:0000000100007962
__text:0000000100007962 ; ---------------------------------------------------------------------------
__text:0000000100007963                 align 10h
__text:0000000100007970
__text:0000000100007970 ; =============== S U B R O U T I N E =======================================
__text:0000000100007970
__text:0000000100007970 ; Attributes: bp-based frame
__text:0000000100007970
__text:0000000100007970 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::__tree(std::__1::less<std::__1::pair<int, int>> const&)
__text:0000000100007970 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_ proc near
__text:0000000100007970                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4__ptr↓o
__text:0000000100007970
__text:0000000100007970 var_E0          = qword ptr -0E0h
__text:0000000100007970 var_D8          = qword ptr -0D8h
__text:0000000100007970 var_D0          = qword ptr -0D0h
__text:0000000100007970 var_C8          = qword ptr -0C8h
__text:0000000100007970 var_C0          = qword ptr -0C0h
__text:0000000100007970 var_B8          = qword ptr -0B8h
__text:0000000100007970 var_B0          = qword ptr -0B0h
__text:0000000100007970 var_A8          = qword ptr -0A8h
__text:0000000100007970 var_A0          = qword ptr -0A0h
__text:0000000100007970 var_98          = qword ptr -98h
__text:0000000100007970 var_90          = qword ptr -90h
__text:0000000100007970 var_88          = qword ptr -88h
__text:0000000100007970 var_80          = qword ptr -80h
__text:0000000100007970 var_78          = qword ptr -78h
__text:0000000100007970 var_68          = qword ptr -68h
__text:0000000100007970 var_60          = qword ptr -60h
__text:0000000100007970 var_50          = byte ptr -50h
__text:0000000100007970 var_48          = qword ptr -48h
__text:0000000100007970 var_40          = qword ptr -40h
__text:0000000100007970 var_38          = qword ptr -38h
__text:0000000100007970 var_30          = byte ptr -30h
__text:0000000100007970 var_28          = qword ptr -28h
__text:0000000100007970 var_20          = qword ptr -20h
__text:0000000100007970 var_18          = qword ptr -18h
__text:0000000100007970 var_10          = qword ptr -10h
__text:0000000100007970 var_8           = qword ptr -8
__text:0000000100007970
__text:0000000100007970                 push    rbp
__text:0000000100007971                 mov     rbp, rsp
__text:0000000100007974                 sub     rsp, 68h
__text:0000000100007978                 lea     rax, [rbp+var_28]
__text:000000010000797C                 lea     rcx, [rbp+var_30]
__text:0000000100007980                 lea     rdx, [rbp+var_50]
__text:0000000100007984                 lea     r8, [rbp+var_48]
__text:0000000100007988                 mov     [rbp+var_D8], rdi
__text:000000010000798F                 mov     [rbp+var_E0], rsi
__text:0000000100007996                 mov     rsi, [rbp+var_D8]
__text:000000010000799D                 mov     rdi, rsi
__text:00000001000079A0                 add     rdi, 8
__text:00000001000079A7                 mov     [rbp+var_D0], rdi
__text:00000001000079AE                 mov     rdi, [rbp+var_D0]
__text:00000001000079B5                 mov     [rbp+var_C8], rdi
__text:00000001000079BC                 mov     rdi, [rbp+var_C8]
__text:00000001000079C3                 mov     [rbp+var_C0], rdi
__text:00000001000079CA                 mov     rdi, [rbp+var_C0]
__text:00000001000079D1                 mov     r9, rdi
__text:00000001000079D4                 mov     [rbp+var_B8], r9
__text:00000001000079DB                 mov     [rbp+var_B0], rdi
__text:00000001000079E2                 mov     rdi, [rbp+var_B0]
__text:00000001000079E9                 mov     [rbp+var_A8], rdi
__text:00000001000079F0                 mov     rdi, [rbp+var_A8]
__text:00000001000079F7                 mov     qword ptr [rdi], 0
__text:00000001000079FE                 mov     rdi, rsi
__text:0000000100007A01                 add     rdi, 10h
__text:0000000100007A08                 mov     [rbp+var_60], rdi
__text:0000000100007A0C                 mov     [rbp+var_68], 0
__text:0000000100007A14                 mov     rdi, [rbp+var_60]
__text:0000000100007A18                 mov     r9, [rbp+var_68]
__text:0000000100007A1C                 mov     [rbp+var_40], rdi
__text:0000000100007A20                 mov     [rbp+var_48], r9
__text:0000000100007A24                 mov     rdi, [rbp+var_40]
__text:0000000100007A28                 mov     [rbp+var_38], r8
__text:0000000100007A2C                 mov     r8, [rbp+var_38]
__text:0000000100007A30                 mov     r8, [r8]
__text:0000000100007A33                 mov     [rbp+var_8], rdx
__text:0000000100007A37                 mov     [rbp+var_20], rdi
__text:0000000100007A3B                 mov     [rbp+var_28], r8
__text:0000000100007A3F                 mov     rdx, [rbp+var_20]
__text:0000000100007A43                 mov     [rbp+var_18], rcx
__text:0000000100007A47                 mov     [rbp+var_10], rax
__text:0000000100007A4B                 mov     rax, [rbp+var_10]
__text:0000000100007A4F                 mov     rax, [rax]
__text:0000000100007A52                 mov     [rdx], rax
__text:0000000100007A55                 mov     [rbp+var_98], rsi
__text:0000000100007A5C                 mov     rax, [rbp+var_98]
__text:0000000100007A63                 add     rax, 8
__text:0000000100007A69                 mov     [rbp+var_90], rax
__text:0000000100007A70                 mov     rax, [rbp+var_90]
__text:0000000100007A77                 mov     [rbp+var_88], rax
__text:0000000100007A7E                 mov     rax, [rbp+var_88]
__text:0000000100007A85                 mov     [rbp+var_80], rax
__text:0000000100007A89                 mov     rax, [rbp+var_80]
__text:0000000100007A8D                 mov     [rbp+var_78], rax
__text:0000000100007A91                 mov     rax, [rbp+var_78]
__text:0000000100007A95                 mov     [rbp+var_A0], rsi
__text:0000000100007A9C                 mov     rcx, [rbp+var_A0]
__text:0000000100007AA3                 mov     [rcx], rax
__text:0000000100007AA6                 add     rsp, 68h
__text:0000000100007AAA                 pop     rbp
__text:0000000100007AAB                 retn
__text:0000000100007AAB __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEEC2ERKS4_ endp
__text:0000000100007AAB
__text:0000000100007AAB ; ---------------------------------------------------------------------------
__text:0000000100007AAC                 align 10h
__text:0000000100007AB0
__text:0000000100007AB0 ; =============== S U B R O U T I N E =======================================
__text:0000000100007AB0
__text:0000000100007AB0 ; Attributes: bp-based frame
__text:0000000100007AB0
__text:0000000100007AB0 ; std::__1::map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&, int const&)
__text:0000000100007AB0 __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS5_ proc near
__text:0000000100007AB0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS5__ptr↓o
__text:0000000100007AB0
__text:0000000100007AB0 var_1A0         = qword ptr -1A0h
__text:0000000100007AB0 var_198         = qword ptr -198h
__text:0000000100007AB0 var_190         = qword ptr -190h
__text:0000000100007AB0 var_188         = qword ptr -188h
__text:0000000100007AB0 var_180         = qword ptr -180h
__text:0000000100007AB0 var_178         = qword ptr -178h
__text:0000000100007AB0 var_170         = qword ptr -170h
__text:0000000100007AB0 var_168         = qword ptr -168h
__text:0000000100007AB0 var_160         = qword ptr -160h
__text:0000000100007AB0 var_158         = qword ptr -158h
__text:0000000100007AB0 var_150         = qword ptr -150h
__text:0000000100007AB0 var_148         = qword ptr -148h
__text:0000000100007AB0 var_140         = qword ptr -140h
__text:0000000100007AB0 var_138         = qword ptr -138h
__text:0000000100007AB0 var_130         = qword ptr -130h
__text:0000000100007AB0 var_128         = qword ptr -128h
__text:0000000100007AB0 var_120         = qword ptr -120h
__text:0000000100007AB0 var_118         = qword ptr -118h
__text:0000000100007AB0 var_110         = qword ptr -110h
__text:0000000100007AB0 var_108         = qword ptr -108h
__text:0000000100007AB0 var_100         = qword ptr -100h
__text:0000000100007AB0 var_F8          = qword ptr -0F8h
__text:0000000100007AB0 var_F0          = qword ptr -0F0h
__text:0000000100007AB0 var_E8          = qword ptr -0E8h
__text:0000000100007AB0 var_E0          = qword ptr -0E0h
__text:0000000100007AB0 var_D8          = qword ptr -0D8h
__text:0000000100007AB0 var_D0          = qword ptr -0D0h
__text:0000000100007AB0 var_C8          = qword ptr -0C8h
__text:0000000100007AB0 var_C0          = qword ptr -0C0h
__text:0000000100007AB0 var_B8          = qword ptr -0B8h
__text:0000000100007AB0 var_B0          = qword ptr -0B0h
__text:0000000100007AB0 var_A8          = qword ptr -0A8h
__text:0000000100007AB0 var_A0          = qword ptr -0A0h
__text:0000000100007AB0 var_98          = qword ptr -98h
__text:0000000100007AB0 var_90          = qword ptr -90h
__text:0000000100007AB0 var_88          = qword ptr -88h
__text:0000000100007AB0 var_80          = qword ptr -80h
__text:0000000100007AB0 var_78          = qword ptr -78h
__text:0000000100007AB0 var_70          = qword ptr -70h
__text:0000000100007AB0 var_68          = qword ptr -68h
__text:0000000100007AB0 var_60          = qword ptr -60h
__text:0000000100007AB0 var_58          = qword ptr -58h
__text:0000000100007AB0 var_50          = qword ptr -50h
__text:0000000100007AB0 var_48          = qword ptr -48h
__text:0000000100007AB0 var_40          = qword ptr -40h
__text:0000000100007AB0 var_38          = qword ptr -38h
__text:0000000100007AB0 var_30          = qword ptr -30h
__text:0000000100007AB0 var_28          = qword ptr -28h
__text:0000000100007AB0 var_20          = qword ptr -20h
__text:0000000100007AB0 var_18          = qword ptr -18h
__text:0000000100007AB0 var_10          = qword ptr -10h
__text:0000000100007AB0 var_8           = qword ptr -8
__text:0000000100007AB0
__text:0000000100007AB0                 push    rbp
__text:0000000100007AB1                 mov     rbp, rsp
__text:0000000100007AB4                 sub     rsp, 120h
__text:0000000100007ABB                 lea     rax, [rbp+var_188]
__text:0000000100007AC2                 lea     rcx, [rbp+var_28]
__text:0000000100007AC6                 mov     [rbp+var_168], rdi
__text:0000000100007ACD                 mov     [rbp+var_170], rsi
__text:0000000100007AD4                 mov     [rbp+var_178], rdx
__text:0000000100007ADB                 mov     rdx, [rbp+var_168]
__text:0000000100007AE2                 mov     [rbp+var_158], rdx
__text:0000000100007AE9                 mov     rsi, [rbp+var_158]
__text:0000000100007AF0                 mov     [rbp+var_150], rsi
__text:0000000100007AF7                 mov     rsi, [rbp+var_150]
__text:0000000100007AFE                 add     rsi, 8
__text:0000000100007B05                 mov     [rbp+var_148], rsi
__text:0000000100007B0C                 mov     rsi, [rbp+var_148]
__text:0000000100007B13                 mov     [rbp+var_140], rsi
__text:0000000100007B1A                 mov     rsi, [rbp+var_140]
__text:0000000100007B21                 mov     [rbp+var_138], rsi
__text:0000000100007B28                 mov     rsi, [rbp+var_138]
__text:0000000100007B2F                 mov     [rbp+var_130], rsi
__text:0000000100007B36                 mov     rsi, [rbp+var_130]
__text:0000000100007B3D                 mov     rsi, [rsi]
__text:0000000100007B40                 mov     [rbp+var_180], rsi
__text:0000000100007B47                 mov     rsi, [rbp+var_180]
__text:0000000100007B4E                 mov     [rbp+var_18], rcx
__text:0000000100007B52                 mov     [rbp+var_20], 0FFFFFFFFFFFFFFFFh
__text:0000000100007B5A                 mov     rcx, [rbp+var_18]
__text:0000000100007B5E                 mov     rdi, [rbp+var_20]
__text:0000000100007B62                 mov     [rbp+var_8], rcx
__text:0000000100007B66                 mov     [rbp+var_10], rdi
__text:0000000100007B6A                 mov     rcx, [rbp+var_8]
__text:0000000100007B6E                 mov     qword ptr [rcx], 0
__text:0000000100007B75                 mov     rcx, [rbp+var_28]
__text:0000000100007B79                 mov     [rbp+var_188], rcx
__text:0000000100007B80                 mov     [rbp+var_30], rax
__text:0000000100007B84                 cmp     rsi, 0
__text:0000000100007B8B                 mov     [rbp+var_1A0], rdx
__text:0000000100007B92                 jz      loc_100007E1D
__text:0000000100007B98                 jmp     $+5
__text:0000000100007B9D ; ---------------------------------------------------------------------------
__text:0000000100007B9D
__text:0000000100007B9D loc_100007B9D:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+E8↑j
__text:0000000100007B9D                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&):loc_100007E18↓j
__text:0000000100007B9D                 mov     rax, [rbp+var_1A0]
__text:0000000100007BA4                 mov     [rbp+var_48], rax
__text:0000000100007BA8                 mov     rcx, [rbp+var_48]
__text:0000000100007BAC                 add     rcx, 10h
__text:0000000100007BB3                 mov     [rbp+var_40], rcx
__text:0000000100007BB7                 mov     rcx, [rbp+var_40]
__text:0000000100007BBB                 mov     [rbp+var_38], rcx
__text:0000000100007BBF                 mov     rcx, [rbp+var_38]
__text:0000000100007BC3                 mov     [rbp+var_50], rcx
__text:0000000100007BC7                 mov     rcx, [rbp+var_50]
__text:0000000100007BCB                 mov     rdx, [rbp+var_178]
__text:0000000100007BD2                 mov     rsi, [rbp+var_180]
__text:0000000100007BD9                 add     rsi, 1Ch
__text:0000000100007BE0                 mov     [rbp+var_58], rcx
__text:0000000100007BE4                 mov     [rbp+var_60], rdx
__text:0000000100007BE8                 mov     [rbp+var_68], rsi
__text:0000000100007BEC                 mov     rcx, [rbp+var_60]
__text:0000000100007BF0                 mov     edi, [rcx]
__text:0000000100007BF2                 mov     rcx, [rbp+var_68]
__text:0000000100007BF6                 cmp     edi, [rcx]
__text:0000000100007BF8                 jge     loc_100007CA7
__text:0000000100007BFE                 lea     rax, [rbp+var_190]
__text:0000000100007C05                 lea     rcx, [rbp+var_90]
__text:0000000100007C0C                 mov     rdx, [rbp+var_180]
__text:0000000100007C13                 mov     rdx, [rdx]
__text:0000000100007C16                 mov     [rbp+var_80], rcx
__text:0000000100007C1A                 mov     [rbp+var_88], 0FFFFFFFFFFFFFFFFh
__text:0000000100007C25                 mov     rcx, [rbp+var_80]
__text:0000000100007C29                 mov     rsi, [rbp+var_88]
__text:0000000100007C30                 mov     [rbp+var_70], rcx
__text:0000000100007C34                 mov     [rbp+var_78], rsi
__text:0000000100007C38                 mov     rcx, [rbp+var_70]
__text:0000000100007C3C                 mov     qword ptr [rcx], 0
__text:0000000100007C43                 mov     rcx, [rbp+var_90]
__text:0000000100007C4A                 mov     [rbp+var_190], rcx
__text:0000000100007C51                 mov     [rbp+var_98], rax
__text:0000000100007C58                 cmp     rdx, 0
__text:0000000100007C5F                 jz      loc_100007C7B
__text:0000000100007C65                 mov     rax, [rbp+var_180]
__text:0000000100007C6C                 mov     rax, [rax]
__text:0000000100007C6F                 mov     [rbp+var_180], rax
__text:0000000100007C76                 jmp     loc_100007CA2
__text:0000000100007C7B ; ---------------------------------------------------------------------------
__text:0000000100007C7B
__text:0000000100007C7B loc_100007C7B:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+1AF↑j
__text:0000000100007C7B                 mov     rax, [rbp+var_180]
__text:0000000100007C82                 mov     rcx, [rbp+var_170]
__text:0000000100007C89                 mov     [rcx], rax
__text:0000000100007C8C                 mov     rax, [rbp+var_170]
__text:0000000100007C93                 mov     rax, [rax]
__text:0000000100007C96                 mov     [rbp+var_160], rax
__text:0000000100007C9D                 jmp     loc_100007E8C
__text:0000000100007CA2 ; ---------------------------------------------------------------------------
__text:0000000100007CA2
__text:0000000100007CA2 loc_100007CA2:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+1C6↑j
__text:0000000100007CA2                 jmp     loc_100007E18
__text:0000000100007CA7 ; ---------------------------------------------------------------------------
__text:0000000100007CA7
__text:0000000100007CA7 loc_100007CA7:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+148↑j
__text:0000000100007CA7                 mov     rax, [rbp+var_1A0]
__text:0000000100007CAE                 mov     [rbp+var_B0], rax
__text:0000000100007CB5                 mov     rcx, [rbp+var_B0]
__text:0000000100007CBC                 add     rcx, 10h
__text:0000000100007CC3                 mov     [rbp+var_A8], rcx
__text:0000000100007CCA                 mov     rcx, [rbp+var_A8]
__text:0000000100007CD1                 mov     [rbp+var_A0], rcx
__text:0000000100007CD8                 mov     rcx, [rbp+var_A0]
__text:0000000100007CDF                 mov     [rbp+var_B8], rcx
__text:0000000100007CE6                 mov     rcx, [rbp+var_B8]
__text:0000000100007CED                 mov     rdx, [rbp+var_180]
__text:0000000100007CF4                 add     rdx, 1Ch
__text:0000000100007CFB                 mov     rsi, [rbp+var_178]
__text:0000000100007D02                 mov     [rbp+var_C0], rcx
__text:0000000100007D09                 mov     [rbp+var_C8], rdx
__text:0000000100007D10                 mov     [rbp+var_D0], rsi
__text:0000000100007D17                 mov     rcx, [rbp+var_C8]
__text:0000000100007D1E                 mov     edi, [rcx]
__text:0000000100007D20                 mov     rcx, [rbp+var_D0]
__text:0000000100007D27                 cmp     edi, [rcx]
__text:0000000100007D29                 jge     loc_100007DEF
__text:0000000100007D2F                 lea     rax, [rbp+var_198]
__text:0000000100007D36                 lea     rcx, [rbp+var_F8]
__text:0000000100007D3D                 mov     rdx, [rbp+var_180]
__text:0000000100007D44                 mov     rdx, [rdx+8]
__text:0000000100007D48                 mov     [rbp+var_E8], rcx
__text:0000000100007D4F                 mov     [rbp+var_F0], 0FFFFFFFFFFFFFFFFh
__text:0000000100007D5A                 mov     rcx, [rbp+var_E8]
__text:0000000100007D61                 mov     rsi, [rbp+var_F0]
__text:0000000100007D68                 mov     [rbp+var_D8], rcx
__text:0000000100007D6F                 mov     [rbp+var_E0], rsi
__text:0000000100007D76                 mov     rcx, [rbp+var_D8]
__text:0000000100007D7D                 mov     qword ptr [rcx], 0
__text:0000000100007D84                 mov     rcx, [rbp+var_F8]
__text:0000000100007D8B                 mov     [rbp+var_198], rcx
__text:0000000100007D92                 mov     [rbp+var_100], rax
__text:0000000100007D99                 cmp     rdx, 0
__text:0000000100007DA0                 jz      loc_100007DBD
__text:0000000100007DA6                 mov     rax, [rbp+var_180]
__text:0000000100007DAD                 mov     rax, [rax+8]
__text:0000000100007DB1                 mov     [rbp+var_180], rax
__text:0000000100007DB8                 jmp     loc_100007DEA
__text:0000000100007DBD ; ---------------------------------------------------------------------------
__text:0000000100007DBD
__text:0000000100007DBD loc_100007DBD:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+2F0↑j
__text:0000000100007DBD                 mov     rax, [rbp+var_180]
__text:0000000100007DC4                 mov     rcx, [rbp+var_170]
__text:0000000100007DCB                 mov     [rcx], rax
__text:0000000100007DCE                 mov     rax, [rbp+var_170]
__text:0000000100007DD5                 mov     rax, [rax]
__text:0000000100007DD8                 add     rax, 8
__text:0000000100007DDE                 mov     [rbp+var_160], rax
__text:0000000100007DE5                 jmp     loc_100007E8C
__text:0000000100007DEA ; ---------------------------------------------------------------------------
__text:0000000100007DEA
__text:0000000100007DEA loc_100007DEA:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+308↑j
__text:0000000100007DEA                 jmp     loc_100007E13
__text:0000000100007DEF ; ---------------------------------------------------------------------------
__text:0000000100007DEF
__text:0000000100007DEF loc_100007DEF:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+279↑j
__text:0000000100007DEF                 mov     rax, [rbp+var_180]
__text:0000000100007DF6                 mov     rcx, [rbp+var_170]
__text:0000000100007DFD                 mov     [rcx], rax
__text:0000000100007E00                 mov     rax, [rbp+var_170]
__text:0000000100007E07                 mov     [rbp+var_160], rax
__text:0000000100007E0E                 jmp     loc_100007E8C
__text:0000000100007E13 ; ---------------------------------------------------------------------------
__text:0000000100007E13
__text:0000000100007E13 loc_100007E13:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&):loc_100007DEA↑j
__text:0000000100007E13                 jmp     $+5
__text:0000000100007E18 ; ---------------------------------------------------------------------------
__text:0000000100007E18
__text:0000000100007E18 loc_100007E18:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&):loc_100007CA2↑j
__text:0000000100007E18                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&):loc_100007E13↑j
__text:0000000100007E18                 jmp     loc_100007B9D
__text:0000000100007E1D ; ---------------------------------------------------------------------------
__text:0000000100007E1D
__text:0000000100007E1D loc_100007E1D:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+E2↑j
__text:0000000100007E1D                 mov     rax, [rbp+var_1A0]
__text:0000000100007E24                 mov     [rbp+var_128], rax
__text:0000000100007E2B                 mov     rcx, [rbp+var_128]
__text:0000000100007E32                 add     rcx, 8
__text:0000000100007E39                 mov     [rbp+var_120], rcx
__text:0000000100007E40                 mov     rcx, [rbp+var_120]
__text:0000000100007E47                 mov     [rbp+var_118], rcx
__text:0000000100007E4E                 mov     rcx, [rbp+var_118]
__text:0000000100007E55                 mov     [rbp+var_110], rcx
__text:0000000100007E5C                 mov     rcx, [rbp+var_110]
__text:0000000100007E63                 mov     [rbp+var_108], rcx
__text:0000000100007E6A                 mov     rcx, [rbp+var_108]
__text:0000000100007E71                 mov     rdx, [rbp+var_170]
__text:0000000100007E78                 mov     [rdx], rcx
__text:0000000100007E7B                 mov     rcx, [rbp+var_170]
__text:0000000100007E82                 mov     rcx, [rcx]
__text:0000000100007E85                 mov     [rbp+var_160], rcx
__text:0000000100007E8C
__text:0000000100007E8C loc_100007E8C:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+1ED↑j
__text:0000000100007E8C                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__find_equal_key(std::__1::__tree_node_base<void *> *&,int const&)+335↑j ...
__text:0000000100007E8C                 mov     rax, [rbp+var_160]
__text:0000000100007E93                 add     rsp, 120h
__text:0000000100007E9A                 pop     rbp
__text:0000000100007E9B                 retn
__text:0000000100007E9B __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEE16__find_equal_keyERPNS_16__tree_node_baseIPvEERS5_ endp
__text:0000000100007E9B
__text:0000000100007E9B ; ---------------------------------------------------------------------------
__text:0000000100007E9C                 align 20h
__text:0000000100007EA0
__text:0000000100007EA0 ; =============== S U B R O U T I N E =======================================
__text:0000000100007EA0
__text:0000000100007EA0 ; Attributes: bp-based frame
__text:0000000100007EA0
__text:0000000100007EA0 ; std::__1::map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, int>>>::__construct_node_with_key(int const&)
__text:0000000100007EA0 __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEE25__construct_node_with_keyERS5_ proc near
__text:0000000100007EA0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEE25__construct_node_with_keyERS5__ptr↓o
__text:0000000100007EA0
__text:0000000100007EA0 var_DC8         = qword ptr -0DC8h
__text:0000000100007EA0 var_DC0         = qword ptr -0DC0h
__text:0000000100007EA0 var_DB8         = qword ptr -0DB8h
__text:0000000100007EA0 var_DB0         = qword ptr -0DB0h
__text:0000000100007EA0 var_DA8         = qword ptr -0DA8h
__text:0000000100007EA0 var_DA0         = qword ptr -0DA0h
__text:0000000100007EA0 var_D98         = qword ptr -0D98h
__text:0000000100007EA0 var_D90         = qword ptr -0D90h
__text:0000000100007EA0 var_D88         = qword ptr -0D88h
__text:0000000100007EA0 var_D80         = qword ptr -0D80h
__text:0000000100007EA0 var_D78         = qword ptr -0D78h
__text:0000000100007EA0 var_D70         = qword ptr -0D70h
__text:0000000100007EA0 var_D68         = qword ptr -0D68h
__text:0000000100007EA0 var_D60         = qword ptr -0D60h
__text:0000000100007EA0 var_D58         = qword ptr -0D58h
__text:0000000100007EA0 var_D50         = qword ptr -0D50h
__text:0000000100007EA0 var_D48         = qword ptr -0D48h
__text:0000000100007EA0 var_D40         = qword ptr -0D40h
__text:0000000100007EA0 var_D34         = dword ptr -0D34h
__text:0000000100007EA0 var_D30         = byte ptr -0D30h
__text:0000000100007EA0 var_D18         = qword ptr -0D18h
__text:0000000100007EA0 var_D00         = qword ptr -0D00h
__text:0000000100007EA0 var_CF8         = qword ptr -0CF8h
__text:0000000100007EA0 var_CF0         = byte ptr -0CF0h
__text:0000000100007EA0 var_CD8         = qword ptr -0CD8h
__text:0000000100007EA0 var_CD0         = qword ptr -0CD0h
__text:0000000100007EA0 var_CC8         = qword ptr -0CC8h
__text:0000000100007EA0 var_CC0         = qword ptr -0CC0h
__text:0000000100007EA0 var_CB8         = qword ptr -0CB8h
__text:0000000100007EA0 var_CB0         = qword ptr -0CB0h
__text:0000000100007EA0 var_CA8         = qword ptr -0CA8h
__text:0000000100007EA0 var_CA0         = qword ptr -0CA0h
__text:0000000100007EA0 var_C98         = qword ptr -0C98h
__text:0000000100007EA0 var_C90         = qword ptr -0C90h
__text:0000000100007EA0 var_C88         = qword ptr -0C88h
__text:0000000100007EA0 var_C80         = qword ptr -0C80h
__text:0000000100007EA0 var_C78         = qword ptr -0C78h
__text:0000000100007EA0 var_C70         = qword ptr -0C70h
__text:0000000100007EA0 var_C68         = qword ptr -0C68h
__text:0000000100007EA0 var_B48         = qword ptr -0B48h
__text:0000000100007EA0 var_B40         = qword ptr -0B40h
__text:0000000100007EA0 var_B38         = qword ptr -0B38h
__text:0000000100007EA0 var_B30         = qword ptr -0B30h
__text:0000000100007EA0 var_B28         = qword ptr -0B28h
__text:0000000100007EA0 var_B20         = qword ptr -0B20h
__text:0000000100007EA0 var_B18         = qword ptr -0B18h
__text:0000000100007EA0 var_B10         = qword ptr -0B10h
__text:0000000100007EA0 var_B08         = qword ptr -0B08h
__text:0000000100007EA0 var_B00         = qword ptr -0B00h
__text:0000000100007EA0 var_AF8         = qword ptr -0AF8h
__text:0000000100007EA0 var_AF0         = qword ptr -0AF0h
__text:0000000100007EA0 var_AE8         = qword ptr -0AE8h
__text:0000000100007EA0 var_AE0         = qword ptr -0AE0h
__text:0000000100007EA0 var_AD8         = qword ptr -0AD8h
__text:0000000100007EA0 var_AD0         = qword ptr -0AD0h
__text:0000000100007EA0 var_AC8         = qword ptr -0AC8h
__text:0000000100007EA0 var_AC0         = qword ptr -0AC0h
__text:0000000100007EA0 var_AB8         = qword ptr -0AB8h
__text:0000000100007EA0 var_AB0         = qword ptr -0AB0h
__text:0000000100007EA0 var_AA8         = qword ptr -0AA8h
__text:0000000100007EA0 var_AA0         = qword ptr -0AA0h
__text:0000000100007EA0 var_A98         = qword ptr -0A98h
__text:0000000100007EA0 var_A90         = qword ptr -0A90h
__text:0000000100007EA0 var_A88         = qword ptr -0A88h
__text:0000000100007EA0 var_A80         = qword ptr -0A80h
__text:0000000100007EA0 var_A78         = qword ptr -0A78h
__text:0000000100007EA0 var_A70         = qword ptr -0A70h
__text:0000000100007EA0 var_A68         = qword ptr -0A68h
__text:0000000100007EA0 var_A60         = qword ptr -0A60h
__text:0000000100007EA0 var_940         = qword ptr -940h
__text:0000000100007EA0 var_938         = qword ptr -938h
__text:0000000100007EA0 var_930         = qword ptr -930h
__text:0000000100007EA0 var_928         = qword ptr -928h
__text:0000000100007EA0 var_920         = qword ptr -920h
__text:0000000100007EA0 var_918         = qword ptr -918h
__text:0000000100007EA0 var_910         = qword ptr -910h
__text:0000000100007EA0 var_908         = qword ptr -908h
__text:0000000100007EA0 var_900         = qword ptr -900h
__text:0000000100007EA0 var_8F8         = qword ptr -8F8h
__text:0000000100007EA0 var_8E0         = qword ptr -8E0h
__text:0000000100007EA0 var_8D8         = qword ptr -8D8h
__text:0000000100007EA0 var_8D0         = qword ptr -8D0h
__text:0000000100007EA0 var_8C8         = qword ptr -8C8h
__text:0000000100007EA0 var_8C0         = qword ptr -8C0h
__text:0000000100007EA0 var_8B8         = qword ptr -8B8h
__text:0000000100007EA0 var_8B0         = qword ptr -8B0h
__text:0000000100007EA0 var_8A8         = qword ptr -8A8h
__text:0000000100007EA0 var_8A0         = qword ptr -8A0h
__text:0000000100007EA0 var_888         = qword ptr -888h
__text:0000000100007EA0 var_880         = qword ptr -880h
__text:0000000100007EA0 var_878         = qword ptr -878h
__text:0000000100007EA0 var_870         = qword ptr -870h
__text:0000000100007EA0 var_858         = qword ptr -858h
__text:0000000100007EA0 var_850         = qword ptr -850h
__text:0000000100007EA0 var_848         = qword ptr -848h
__text:0000000100007EA0 var_840         = qword ptr -840h
__text:0000000100007EA0 var_838         = qword ptr -838h
__text:0000000100007EA0 var_830         = qword ptr -830h
__text:0000000100007EA0 var_828         = qword ptr -828h
__text:0000000100007EA0 var_820         = qword ptr -820h
__text:0000000100007EA0 var_818         = qword ptr -818h
__text:0000000100007EA0 var_810         = qword ptr -810h
__text:0000000100007EA0 var_808         = qword ptr -808h
__text:0000000100007EA0 var_800         = qword ptr -800h
__text:0000000100007EA0 var_7F8         = qword ptr -7F8h
__text:0000000100007EA0 var_7F0         = qword ptr -7F0h
__text:0000000100007EA0 var_7E8         = qword ptr -7E8h
__text:0000000100007EA0 var_7E0         = qword ptr -7E0h
__text:0000000100007EA0 var_7D8         = qword ptr -7D8h
__text:0000000100007EA0 var_7C0         = qword ptr -7C0h
__text:0000000100007EA0 var_7B8         = qword ptr -7B8h
__text:0000000100007EA0 var_7B0         = qword ptr -7B0h
__text:0000000100007EA0 var_7A8         = qword ptr -7A8h
__text:0000000100007EA0 var_7A0         = qword ptr -7A0h
__text:0000000100007EA0 var_798         = qword ptr -798h
__text:0000000100007EA0 var_790         = qword ptr -790h
__text:0000000100007EA0 var_788         = qword ptr -788h
__text:0000000100007EA0 var_780         = qword ptr -780h
__text:0000000100007EA0 var_768         = qword ptr -768h
__text:0000000100007EA0 var_760         = qword ptr -760h
__text:0000000100007EA0 var_758         = qword ptr -758h
__text:0000000100007EA0 var_750         = qword ptr -750h
__text:0000000100007EA0 var_738         = qword ptr -738h
__text:0000000100007EA0 var_730         = qword ptr -730h
__text:0000000100007EA0 var_728         = qword ptr -728h
__text:0000000100007EA0 var_720         = qword ptr -720h
__text:0000000100007EA0 var_718         = qword ptr -718h
__text:0000000100007EA0 var_710         = qword ptr -710h
__text:0000000100007EA0 var_708         = qword ptr -708h
__text:0000000100007EA0 var_700         = qword ptr -700h
__text:0000000100007EA0 var_6F8         = qword ptr -6F8h
__text:0000000100007EA0 var_6F0         = qword ptr -6F0h
__text:0000000100007EA0 var_6E8         = qword ptr -6E8h
__text:0000000100007EA0 var_6E0         = qword ptr -6E0h
__text:0000000100007EA0 var_6D8         = qword ptr -6D8h
__text:0000000100007EA0 var_6D0         = qword ptr -6D0h
__text:0000000100007EA0 var_6C8         = qword ptr -6C8h
__text:0000000100007EA0 var_6C0         = qword ptr -6C0h
__text:0000000100007EA0 var_6B8         = qword ptr -6B8h
__text:0000000100007EA0 var_6B0         = qword ptr -6B0h
__text:0000000100007EA0 var_6A8         = qword ptr -6A8h
__text:0000000100007EA0 var_6A0         = qword ptr -6A0h
__text:0000000100007EA0 var_698         = qword ptr -698h
__text:0000000100007EA0 var_690         = qword ptr -690h
__text:0000000100007EA0 var_688         = qword ptr -688h
__text:0000000100007EA0 var_680         = qword ptr -680h
__text:0000000100007EA0 var_678         = qword ptr -678h
__text:0000000100007EA0 var_670         = qword ptr -670h
__text:0000000100007EA0 var_668         = qword ptr -668h
__text:0000000100007EA0 var_660         = qword ptr -660h
__text:0000000100007EA0 var_658         = qword ptr -658h
__text:0000000100007EA0 var_650         = qword ptr -650h
__text:0000000100007EA0 var_648         = qword ptr -648h
__text:0000000100007EA0 var_640         = qword ptr -640h
__text:0000000100007EA0 var_638         = qword ptr -638h
__text:0000000100007EA0 var_630         = qword ptr -630h
__text:0000000100007EA0 var_628         = qword ptr -628h
__text:0000000100007EA0 var_620         = qword ptr -620h
__text:0000000100007EA0 var_618         = qword ptr -618h
__text:0000000100007EA0 var_610         = qword ptr -610h
__text:0000000100007EA0 var_608         = qword ptr -608h
__text:0000000100007EA0 var_600         = qword ptr -600h
__text:0000000100007EA0 var_5F8         = qword ptr -5F8h
__text:0000000100007EA0 var_5F0         = qword ptr -5F0h
__text:0000000100007EA0 var_5E8         = qword ptr -5E8h
__text:0000000100007EA0 var_5E0         = qword ptr -5E0h
__text:0000000100007EA0 var_5D8         = qword ptr -5D8h
__text:0000000100007EA0 var_5D0         = qword ptr -5D0h
__text:0000000100007EA0 var_5C8         = qword ptr -5C8h
__text:0000000100007EA0 var_5C0         = qword ptr -5C0h
__text:0000000100007EA0 var_5B8         = qword ptr -5B8h
__text:0000000100007EA0 var_5B0         = qword ptr -5B0h
__text:0000000100007EA0 var_5A8         = qword ptr -5A8h
__text:0000000100007EA0 var_5A0         = qword ptr -5A0h
__text:0000000100007EA0 var_598         = qword ptr -598h
__text:0000000100007EA0 var_590         = qword ptr -590h
__text:0000000100007EA0 var_578         = qword ptr -578h
__text:0000000100007EA0 var_570         = byte ptr -570h
__text:0000000100007EA0 var_558         = qword ptr -558h
__text:0000000100007EA0 var_550         = qword ptr -550h
__text:0000000100007EA0 var_548         = qword ptr -548h
__text:0000000100007EA0 var_540         = qword ptr -540h
__text:0000000100007EA0 var_538         = qword ptr -538h
__text:0000000100007EA0 var_530         = qword ptr -530h
__text:0000000100007EA0 var_528         = qword ptr -528h
__text:0000000100007EA0 var_520         = qword ptr -520h
__text:0000000100007EA0 var_518         = qword ptr -518h
__text:0000000100007EA0 var_510         = qword ptr -510h
__text:0000000100007EA0 var_508         = qword ptr -508h
__text:0000000100007EA0 var_500         = qword ptr -500h
__text:0000000100007EA0 var_4F8         = qword ptr -4F8h
__text:0000000100007EA0 var_4F0         = qword ptr -4F0h
__text:0000000100007EA0 var_4E8         = qword ptr -4E8h
__text:0000000100007EA0 var_4E0         = qword ptr -4E0h
__text:0000000100007EA0 var_4D8         = qword ptr -4D8h
__text:0000000100007EA0 var_4D0         = qword ptr -4D0h
__text:0000000100007EA0 var_4C8         = qword ptr -4C8h
__text:0000000100007EA0 var_4C0         = qword ptr -4C0h
__text:0000000100007EA0 var_4B8         = qword ptr -4B8h
__text:0000000100007EA0 var_4B0         = qword ptr -4B0h
__text:0000000100007EA0 var_4A8         = qword ptr -4A8h
__text:0000000100007EA0 var_4A0         = qword ptr -4A0h
__text:0000000100007EA0 var_498         = qword ptr -498h
__text:0000000100007EA0 var_490         = qword ptr -490h
__text:0000000100007EA0 var_488         = qword ptr -488h
__text:0000000100007EA0 var_480         = qword ptr -480h
__text:0000000100007EA0 var_478         = qword ptr -478h
__text:0000000100007EA0 var_470         = qword ptr -470h
__text:0000000100007EA0 var_468         = qword ptr -468h
__text:0000000100007EA0 var_460         = qword ptr -460h
__text:0000000100007EA0 var_458         = qword ptr -458h
__text:0000000100007EA0 var_450         = qword ptr -450h
__text:0000000100007EA0 var_448         = qword ptr -448h
__text:0000000100007EA0 var_440         = qword ptr -440h
__text:0000000100007EA0 var_438         = qword ptr -438h
__text:0000000100007EA0 var_430         = qword ptr -430h
__text:0000000100007EA0 var_428         = qword ptr -428h
__text:0000000100007EA0 var_420         = qword ptr -420h
__text:0000000100007EA0 var_418         = qword ptr -418h
__text:0000000100007EA0 var_410         = qword ptr -410h
__text:0000000100007EA0 var_2F0         = qword ptr -2F0h
__text:0000000100007EA0 var_2E8         = qword ptr -2E8h
__text:0000000100007EA0 var_2E0         = qword ptr -2E0h
__text:0000000100007EA0 var_2D8         = qword ptr -2D8h
__text:0000000100007EA0 var_2D0         = qword ptr -2D0h
__text:0000000100007EA0 var_2C8         = qword ptr -2C8h
__text:0000000100007EA0 var_2C0         = qword ptr -2C0h
__text:0000000100007EA0 var_2B8         = qword ptr -2B8h
__text:0000000100007EA0 var_2B0         = qword ptr -2B0h
__text:0000000100007EA0 var_2A8         = qword ptr -2A8h
__text:0000000100007EA0 var_2A0         = qword ptr -2A0h
__text:0000000100007EA0 var_298         = qword ptr -298h
__text:0000000100007EA0 var_290         = qword ptr -290h
__text:0000000100007EA0 var_278         = qword ptr -278h
__text:0000000100007EA0 var_270         = qword ptr -270h
__text:0000000100007EA0 var_268         = qword ptr -268h
__text:0000000100007EA0 var_260         = qword ptr -260h
__text:0000000100007EA0 var_258         = qword ptr -258h
__text:0000000100007EA0 var_250         = qword ptr -250h
__text:0000000100007EA0 var_248         = qword ptr -248h
__text:0000000100007EA0 var_240         = qword ptr -240h
__text:0000000100007EA0 var_238         = qword ptr -238h
__text:0000000100007EA0 var_220         = qword ptr -220h
__text:0000000100007EA0 var_218         = qword ptr -218h
__text:0000000100007EA0 var_210         = qword ptr -210h
__text:0000000100007EA0 var_208         = qword ptr -208h
__text:0000000100007EA0 var_1F0         = qword ptr -1F0h
__text:0000000100007EA0 var_1E8         = qword ptr -1E8h
__text:0000000100007EA0 var_1E0         = qword ptr -1E0h
__text:0000000100007EA0 var_1D8         = qword ptr -1D8h
__text:0000000100007EA0 var_1D0         = qword ptr -1D0h
__text:0000000100007EA0 var_1C8         = qword ptr -1C8h
__text:0000000100007EA0 var_1C0         = qword ptr -1C0h
__text:0000000100007EA0 var_1B8         = qword ptr -1B8h
__text:0000000100007EA0 var_1B0         = qword ptr -1B0h
__text:0000000100007EA0 var_1A8         = qword ptr -1A8h
__text:0000000100007EA0 var_1A0         = qword ptr -1A0h
__text:0000000100007EA0 var_198         = qword ptr -198h
__text:0000000100007EA0 var_190         = qword ptr -190h
__text:0000000100007EA0 var_188         = qword ptr -188h
__text:0000000100007EA0 var_180         = qword ptr -180h
__text:0000000100007EA0 var_178         = qword ptr -178h
__text:0000000100007EA0 var_170         = qword ptr -170h
__text:0000000100007EA0 var_168         = qword ptr -168h
__text:0000000100007EA0 var_160         = qword ptr -160h
__text:0000000100007EA0 var_158         = qword ptr -158h
__text:0000000100007EA0 var_150         = qword ptr -150h
__text:0000000100007EA0 var_148         = qword ptr -148h
__text:0000000100007EA0 var_140         = qword ptr -140h
__text:0000000100007EA0 var_138         = qword ptr -138h
__text:0000000100007EA0 var_130         = qword ptr -130h
__text:0000000100007EA0 var_128         = qword ptr -128h
__text:0000000100007EA0 var_120         = qword ptr -120h
__text:0000000100007EA0 var_118         = qword ptr -118h
__text:0000000100007EA0 var_110         = qword ptr -110h
__text:0000000100007EA0 var_108         = qword ptr -108h
__text:0000000100007EA0 var_100         = qword ptr -100h
__text:0000000100007EA0 var_F8          = qword ptr -0F8h
__text:0000000100007EA0 var_F0          = qword ptr -0F0h
__text:0000000100007EA0 var_E8          = qword ptr -0E8h
__text:0000000100007EA0 var_E0          = qword ptr -0E0h
__text:0000000100007EA0 var_D8          = qword ptr -0D8h
__text:0000000100007EA0 var_D0          = qword ptr -0D0h
__text:0000000100007EA0 var_C8          = qword ptr -0C8h
__text:0000000100007EA0 var_C0          = qword ptr -0C0h
__text:0000000100007EA0 var_B8          = qword ptr -0B8h
__text:0000000100007EA0 var_B0          = qword ptr -0B0h
__text:0000000100007EA0 var_A8          = qword ptr -0A8h
__text:0000000100007EA0 var_A0          = qword ptr -0A0h
__text:0000000100007EA0 var_98          = qword ptr -98h
__text:0000000100007EA0 var_90          = qword ptr -90h
__text:0000000100007EA0 var_88          = qword ptr -88h
__text:0000000100007EA0 var_80          = qword ptr -80h
__text:0000000100007EA0 var_78          = qword ptr -78h
__text:0000000100007EA0 var_70          = qword ptr -70h
__text:0000000100007EA0 var_68          = qword ptr -68h
__text:0000000100007EA0 var_60          = qword ptr -60h
__text:0000000100007EA0 var_58          = qword ptr -58h
__text:0000000100007EA0 var_50          = qword ptr -50h
__text:0000000100007EA0 var_48          = qword ptr -48h
__text:0000000100007EA0 var_40          = qword ptr -40h
__text:0000000100007EA0 var_38          = qword ptr -38h
__text:0000000100007EA0 var_30          = qword ptr -30h
__text:0000000100007EA0
__text:0000000100007EA0                 push    rbp
__text:0000000100007EA1                 mov     rbp, rsp
__text:0000000100007EA4                 push    r15
__text:0000000100007EA6                 push    r14
__text:0000000100007EA8                 push    r13
__text:0000000100007EAA                 push    r12
__text:0000000100007EAC                 push    rbx
__text:0000000100007EAD                 sub     rsp, 0DA8h
__text:0000000100007EB4                 mov     rax, rdi
__text:0000000100007EB7                 mov     [rbp+var_CC8], rsi
__text:0000000100007EBE                 mov     [rbp+var_CD0], rdx
__text:0000000100007EC5                 mov     rdx, [rbp+var_CC8]
__text:0000000100007ECC                 mov     [rbp+var_CC0], rdx
__text:0000000100007ED3                 mov     rdx, [rbp+var_CC0]
__text:0000000100007EDA                 add     rdx, 8
__text:0000000100007EE1                 mov     [rbp+var_CB8], rdx
__text:0000000100007EE8                 mov     rdx, [rbp+var_CB8]
__text:0000000100007EEF                 mov     [rbp+var_CB0], rdx
__text:0000000100007EF6                 mov     rdx, [rbp+var_CB0]
__text:0000000100007EFD                 mov     [rbp+var_CD8], rdx
__text:0000000100007F04                 mov     rdx, [rbp+var_CD8]
__text:0000000100007F0B                 mov     [rbp+var_CA0], rdx
__text:0000000100007F12                 mov     [rbp+var_CA8], 1
__text:0000000100007F1D                 mov     rdx, [rbp+var_CA0]
__text:0000000100007F24                 mov     rsi, [rbp+var_CA8]
__text:0000000100007F2B                 mov     [rbp+var_C88], rdx
__text:0000000100007F32                 mov     [rbp+var_C90], rsi
__text:0000000100007F39                 mov     [rbp+var_C98], 0
__text:0000000100007F44                 imul    rdx, [rbp+var_C90], 28h
__text:0000000100007F4F                 mov     [rbp+var_D40], rdi
__text:0000000100007F56                 mov     rdi, rdx        ; unsigned __int64
__text:0000000100007F59                 mov     [rbp+var_D48], rax
__text:0000000100007F60                 call    __Znwm          ; operator new(ulong)
__text:0000000100007F65                 lea     rdx, [rbp+var_CF0]
__text:0000000100007F6C                 lea     rsi, [rbp+var_A98]
__text:0000000100007F73                 lea     rdi, [rbp+var_A88]
__text:0000000100007F7A                 lea     rcx, [rbp+var_AC0]
__text:0000000100007F81                 lea     r8, [rbp+var_AB0]
__text:0000000100007F88                 lea     r9, [rbp+var_B18]
__text:0000000100007F8F                 lea     r10, [rbp+var_B08]
__text:0000000100007F96                 lea     r11, [rbp+var_D00]
__text:0000000100007F9D                 mov     rbx, [rbp+var_CD8]
__text:0000000100007FA4                 mov     [rbp+var_C78], r11
__text:0000000100007FAB                 mov     [rbp+var_C80], rbx
__text:0000000100007FB2                 mov     r11, [rbp+var_C78]
__text:0000000100007FB9                 mov     rbx, [rbp+var_C80]
__text:0000000100007FC0                 mov     [rbp+var_C68], r11
__text:0000000100007FC7                 mov     [rbp+var_C70], rbx
__text:0000000100007FCE                 mov     r11, [rbp+var_C68]
__text:0000000100007FD5                 mov     rbx, [rbp+var_C70]
__text:0000000100007FDC                 mov     [r11], rbx
__text:0000000100007FDF                 mov     byte ptr [r11+8], 0
__text:0000000100007FE4                 mov     byte ptr [r11+9], 0
__text:0000000100007FE9                 mov     r11, [rbp+var_D00]
__text:0000000100007FF0                 mov     rbx, [rbp+var_CF8]
__text:0000000100007FF7                 mov     [rbp+var_B30], rdx
__text:0000000100007FFE                 mov     [rbp+var_B38], rax
__text:0000000100008005                 mov     [rbp+var_B48], r11
__text:000000010000800C                 mov     [rbp+var_B40], rbx
__text:0000000100008013                 mov     rax, [rbp+var_B30]
__text:000000010000801A                 mov     r11, [rbp+var_B38]
__text:0000000100008021                 mov     rbx, [rbp+var_B48]
__text:0000000100008028                 mov     r14, [rbp+var_B40]
__text:000000010000802F                 mov     [rbp+var_B00], rax
__text:0000000100008036                 mov     [rbp+var_B08], r11
__text:000000010000803D                 mov     [rbp+var_B18], rbx
__text:0000000100008044                 mov     [rbp+var_B10], r14
__text:000000010000804B                 mov     rax, [rbp+var_B00]
__text:0000000100008052                 mov     [rbp+var_AF8], r10
__text:0000000100008059                 mov     r10, [rbp+var_AF8]
__text:0000000100008060                 mov     r10, [r10]
__text:0000000100008063                 mov     [rbp+var_A60], r9
__text:000000010000806A                 mov     r9, [rbp+var_A60]
__text:0000000100008071                 mov     r11, [r9]
__text:0000000100008074                 mov     [rbp+var_B28], r11
__text:000000010000807B                 mov     r9, [r9+8]
__text:000000010000807F                 mov     [rbp+var_B20], r9
__text:0000000100008086                 mov     r9, [rbp+var_B28]
__text:000000010000808D                 mov     r11, [rbp+var_B20]
__text:0000000100008094                 mov     [rbp+var_AD8], rax
__text:000000010000809B                 mov     [rbp+var_AE0], r10
__text:00000001000080A2                 mov     [rbp+var_AF0], r9
__text:00000001000080A9                 mov     [rbp+var_AE8], r11
__text:00000001000080B0                 mov     rax, [rbp+var_AD8]
__text:00000001000080B7                 mov     r9, [rbp+var_AE0]
__text:00000001000080BE                 mov     r10, [rbp+var_AF0]
__text:00000001000080C5                 mov     r11, [rbp+var_AE8]
__text:00000001000080CC                 mov     [rbp+var_AA8], rax
__text:00000001000080D3                 mov     [rbp+var_AB0], r9
__text:00000001000080DA                 mov     [rbp+var_AC0], r10
__text:00000001000080E1                 mov     [rbp+var_AB8], r11
__text:00000001000080E8                 mov     rax, [rbp+var_AA8]
__text:00000001000080EF                 mov     [rbp+var_AA0], r8
__text:00000001000080F6                 mov     r8, [rbp+var_AA0]
__text:00000001000080FD                 mov     r8, [r8]
__text:0000000100008100                 mov     [rbp+var_A68], rcx
__text:0000000100008107                 mov     rcx, [rbp+var_A68]
__text:000000010000810E                 mov     r9, [rcx]
__text:0000000100008111                 mov     [rbp+var_AD0], r9
__text:0000000100008118                 mov     rcx, [rcx+8]
__text:000000010000811C                 mov     [rbp+var_AC8], rcx
__text:0000000100008123                 mov     rcx, [rbp+var_AD0]
__text:000000010000812A                 mov     r9, [rbp+var_AC8]
__text:0000000100008131                 mov     [rbp+var_A80], rax
__text:0000000100008138                 mov     [rbp+var_A88], r8
__text:000000010000813F                 mov     [rbp+var_A98], rcx
__text:0000000100008146                 mov     [rbp+var_A90], r9
__text:000000010000814D                 mov     rax, [rbp+var_A80]
__text:0000000100008154                 mov     [rbp+var_A78], rdi
__text:000000010000815B                 mov     rcx, [rbp+var_A78]
__text:0000000100008162                 mov     rcx, [rcx]
__text:0000000100008165                 mov     [rax], rcx
__text:0000000100008168                 mov     [rbp+var_A70], rsi
__text:000000010000816F                 mov     rcx, [rbp+var_A70]
__text:0000000100008176                 mov     rsi, [rcx]
__text:0000000100008179                 mov     [rax+8], rsi
__text:000000010000817D                 mov     rcx, [rcx+8]
__text:0000000100008181                 mov     [rax+10h], rcx
__text:0000000100008185                 mov     rax, [rbp+var_CD8]
__text:000000010000818C                 mov     [rbp+var_940], rdx
__text:0000000100008193                 mov     rcx, [rbp+var_940]
__text:000000010000819A                 mov     [rbp+var_938], rcx
__text:00000001000081A1                 mov     rcx, [rbp+var_938]
__text:00000001000081A8                 mov     [rbp+var_930], rcx
__text:00000001000081AF                 mov     rcx, [rbp+var_930]
__text:00000001000081B6                 mov     rcx, [rcx]
__text:00000001000081B9                 add     rcx, 1Ch
__text:00000001000081C0                 mov     [rbp+var_810], rcx
__text:00000001000081C7                 mov     rcx, [rbp+var_810]
__text:00000001000081CE                 mov     rdx, [rbp+var_CD0]
__text:00000001000081D5                 mov     [rbp+var_6E0], rax
__text:00000001000081DC                 mov     [rbp+var_6E8], rcx
__text:00000001000081E3                 mov     [rbp+var_6F0], rdx
__text:00000001000081EA                 mov     rax, [rbp+var_6E8]
__text:00000001000081F1                 cmp     rax, 0
__text:00000001000081F7                 mov     [rbp+var_D50], rax
__text:00000001000081FE                 jz      loc_100008224
__text:0000000100008204                 mov     rax, [rbp+var_D50]
__text:000000010000820B                 mov     rcx, [rbp+var_6F0]
__text:0000000100008212                 mov     edx, [rcx]
__text:0000000100008214                 mov     rcx, [rbp+var_D50]
__text:000000010000821B                 mov     [rcx], edx
__text:000000010000821D                 mov     [rbp+var_D58], rax
__text:0000000100008224
__text:0000000100008224 loc_100008224:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+35E↑j
__text:0000000100008224                 lea     rax, [rbp+var_CF0]
__text:000000010000822B                 mov     [rbp+var_88], rax
__text:0000000100008232                 mov     rcx, [rbp+var_88]
__text:0000000100008239                 mov     [rbp+var_80], rcx
__text:000000010000823D                 mov     rcx, [rbp+var_80]
__text:0000000100008241                 mov     [rbp+var_78], rcx
__text:0000000100008245                 mov     rcx, [rbp+var_78]
__text:0000000100008249                 mov     byte ptr [rcx+10h], 1
__text:000000010000824D                 mov     rcx, [rbp+var_CD8]
__text:0000000100008254                 mov     [rbp+var_40], rax
__text:0000000100008258                 mov     rax, [rbp+var_40]
__text:000000010000825C                 mov     [rbp+var_38], rax
__text:0000000100008260                 mov     rax, [rbp+var_38]
__text:0000000100008264                 mov     [rbp+var_30], rax
__text:0000000100008268                 mov     rax, [rbp+var_30]
__text:000000010000826C                 mov     rax, [rax]
__text:000000010000826F                 add     rax, 1Ch
__text:0000000100008275                 add     rax, 4
__text:000000010000827B                 mov     [rbp+var_48], rax
__text:000000010000827F                 mov     rax, [rbp+var_48]
__text:0000000100008283                 mov     [rbp+var_50], rcx
__text:0000000100008287                 mov     [rbp+var_58], rax
__text:000000010000828B                 mov     rax, [rbp+var_58]
__text:000000010000828F                 cmp     rax, 0
__text:0000000100008295                 mov     [rbp+var_D60], rax
__text:000000010000829C                 jz      loc_1000082BD
__text:00000001000082A2                 mov     rax, [rbp+var_D60]
__text:00000001000082A9                 mov     rcx, [rbp+var_D60]
__text:00000001000082B0                 mov     dword ptr [rcx], 0
__text:00000001000082B6                 mov     [rbp+var_D68], rax
__text:00000001000082BD
__text:00000001000082BD loc_1000082BD:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+3FC↑j
__text:00000001000082BD                 lea     rax, [rbp+var_570]
__text:00000001000082C4                 lea     rcx, [rbp+var_118]
__text:00000001000082CB                 lea     rdx, [rbp+var_108]
__text:00000001000082D2                 lea     rsi, [rbp+var_140]
__text:00000001000082D9                 lea     rdi, [rbp+var_130]
__text:00000001000082E0                 lea     r8, [rbp+var_188]
__text:00000001000082E7                 lea     r9, [rbp+var_D30]
__text:00000001000082EE                 lea     r10, [rbp+var_2E8]
__text:00000001000082F5                 lea     r11, [rbp+var_498]
__text:00000001000082FC                 lea     rbx, [rbp+var_488]
__text:0000000100008303                 lea     r14, [rbp+var_4C0]
__text:000000010000830A                 lea     r15, [rbp+var_4B0]
__text:0000000100008311                 lea     r12, [rbp+var_508]
__text:0000000100008318                 lea     r13, [rbp+var_578]
__text:000000010000831F                 mov     [rbp+var_D70], rax
__text:0000000100008326                 lea     rax, [rbp+var_CF0]
__text:000000010000832D                 mov     [rbp+var_70], rax
__text:0000000100008331                 mov     [rbp+var_D78], rax
__text:0000000100008338                 mov     rax, [rbp+var_70]
__text:000000010000833C                 mov     [rbp+var_68], rax
__text:0000000100008340                 mov     rax, [rbp+var_68]
__text:0000000100008344                 mov     [rbp+var_60], rax
__text:0000000100008348                 mov     rax, [rbp+var_60]
__text:000000010000834C                 mov     byte ptr [rax+11h], 1
__text:0000000100008350                 mov     rax, [rbp+var_D78]
__text:0000000100008357                 mov     [rbp+var_550], rax
__text:000000010000835E                 mov     rax, [rbp+var_550]
__text:0000000100008365                 mov     [rbp+var_540], r13
__text:000000010000836C                 mov     [rbp+var_548], rax
__text:0000000100008373                 mov     rax, [rbp+var_540]
__text:000000010000837A                 mov     r13, [rbp+var_548]
__text:0000000100008381                 mov     [rbp+var_530], rax
__text:0000000100008388                 mov     [rbp+var_538], r13
__text:000000010000838F                 mov     rax, [rbp+var_530]
__text:0000000100008396                 mov     r13, [rbp+var_538]
__text:000000010000839D                 mov     [rax], r13
__text:00000001000083A0                 mov     rax, [rbp+var_578]
__text:00000001000083A7                 mov     r13, [rbp+var_D70]
__text:00000001000083AE                 mov     [rbp+var_520], r13
__text:00000001000083B5                 mov     [rbp+var_528], rax
__text:00000001000083BC                 mov     rax, [rbp+var_520]
__text:00000001000083C3                 mov     r13, [rbp+var_528]
__text:00000001000083CA                 mov     [rbp+var_500], rax
__text:00000001000083D1                 mov     [rbp+var_508], r13
__text:00000001000083D8                 mov     rax, [rbp+var_500]
__text:00000001000083DF                 mov     [rbp+var_4F8], r12
__text:00000001000083E6                 mov     r13, [rbp+var_4F8]
__text:00000001000083ED                 mov     r13, [r13+0]
__text:00000001000083F1                 mov     [rbp+var_430], r13
__text:00000001000083F8                 mov     r13, [rbp+var_430]
__text:00000001000083FF                 mov     [rbp+var_428], r13
__text:0000000100008406                 mov     [rbp+var_D80], rax
__text:000000010000840D                 mov     rax, [rbp+var_428]
__text:0000000100008414                 mov     [rbp+var_420], rax
__text:000000010000841B                 mov     rax, [rbp+var_420]
__text:0000000100008422                 mov     rax, [rax]
__text:0000000100008425                 mov     [rbp+var_438], rax
__text:000000010000842C                 mov     [rbp+var_418], r13
__text:0000000100008433                 mov     rax, [rbp+var_418]
__text:000000010000843A                 mov     [rbp+var_410], rax
__text:0000000100008441                 mov     rax, [rbp+var_410]
__text:0000000100008448                 mov     qword ptr [rax], 0
__text:000000010000844F                 mov     rax, [rbp+var_438]
__text:0000000100008456                 mov     [rbp+var_440], r12
__text:000000010000845D                 mov     r12, [rbp+var_440]
__text:0000000100008464                 mov     r12, [r12]
__text:0000000100008468                 mov     [rbp+var_458], r12
__text:000000010000846F                 mov     r12, [rbp+var_458]
__text:0000000100008476                 mov     [rbp+var_450], r12
__text:000000010000847D                 mov     r12, [rbp+var_450]
__text:0000000100008484                 mov     [rbp+var_448], r12
__text:000000010000848B                 mov     r12, [rbp+var_448]
__text:0000000100008492                 add     r12, 8
__text:0000000100008499                 mov     [rbp+var_460], r12
__text:00000001000084A0                 mov     r12, [rbp+var_460]
__text:00000001000084A7                 mov     r13, [r12]
__text:00000001000084AB                 mov     [rbp+var_518], r13
__text:00000001000084B2                 mov     r12, [r12+8]
__text:00000001000084B7                 mov     [rbp+var_510], r12
__text:00000001000084BE                 mov     r12, [rbp+var_518]
__text:00000001000084C5                 mov     r13, [rbp+var_510]
__text:00000001000084CC                 mov     [rbp+var_D88], rax
__text:00000001000084D3                 mov     rax, [rbp+var_D80]
__text:00000001000084DA                 mov     [rbp+var_4D8], rax
__text:00000001000084E1                 mov     rax, [rbp+var_D88]
__text:00000001000084E8                 mov     [rbp+var_4E0], rax
__text:00000001000084EF                 mov     [rbp+var_4F0], r12
__text:00000001000084F6                 mov     [rbp+var_4E8], r13
__text:00000001000084FD                 mov     r12, [rbp+var_4D8]
__text:0000000100008504                 mov     r13, [rbp+var_4E0]
__text:000000010000850B                 mov     rax, [rbp+var_4F0]
__text:0000000100008512                 mov     [rbp+var_D90], rax
__text:0000000100008519                 mov     rax, [rbp+var_4E8]
__text:0000000100008520                 mov     [rbp+var_4A8], r12
__text:0000000100008527                 mov     [rbp+var_4B0], r13
__text:000000010000852E                 mov     r12, [rbp+var_D90]
__text:0000000100008535                 mov     [rbp+var_4C0], r12
__text:000000010000853C                 mov     [rbp+var_4B8], rax
__text:0000000100008543                 mov     rax, [rbp+var_4A8]
__text:000000010000854A                 mov     [rbp+var_4A0], r15
__text:0000000100008551                 mov     r15, [rbp+var_4A0]
__text:0000000100008558                 mov     r15, [r15]
__text:000000010000855B                 mov     [rbp+var_468], r14
__text:0000000100008562                 mov     r14, [rbp+var_468]
__text:0000000100008569                 mov     r13, [r14]
__text:000000010000856C                 mov     [rbp+var_4D0], r13
__text:0000000100008573                 mov     r14, [r14+8]
__text:0000000100008577                 mov     [rbp+var_4C8], r14
__text:000000010000857E                 mov     r14, [rbp+var_4D0]
__text:0000000100008585                 mov     r13, [rbp+var_4C8]
__text:000000010000858C                 mov     [rbp+var_480], rax
__text:0000000100008593                 mov     [rbp+var_488], r15
__text:000000010000859A                 mov     [rbp+var_498], r14
__text:00000001000085A1                 mov     [rbp+var_490], r13
__text:00000001000085A8                 mov     rax, [rbp+var_480]
__text:00000001000085AF                 mov     [rbp+var_478], rbx
__text:00000001000085B6                 mov     rbx, [rbp+var_478]
__text:00000001000085BD                 mov     rbx, [rbx]
__text:00000001000085C0                 mov     [rax], rbx
__text:00000001000085C3                 mov     [rbp+var_470], r11
__text:00000001000085CA                 mov     r11, [rbp+var_470]
__text:00000001000085D1                 mov     rbx, [r11]
__text:00000001000085D4                 mov     [rax+8], rbx
__text:00000001000085D8                 mov     r11, [r11+8]
__text:00000001000085DC                 mov     [rax+10h], r11
__text:00000001000085E0                 mov     rax, [rbp+var_D70]
__text:00000001000085E7                 mov     [rbp+var_2F0], rax
__text:00000001000085EE                 mov     r11, [rbp+var_2F0]
__text:00000001000085F5                 mov     [rbp+var_2D8], r10
__text:00000001000085FC                 mov     [rbp+var_2E0], r11
__text:0000000100008603                 mov     r10, [rbp+var_2D8]
__text:000000010000860A                 mov     r11, [rbp+var_2E0]
__text:0000000100008611                 mov     [rbp+var_2C8], r10
__text:0000000100008618                 mov     [rbp+var_2D0], r11
__text:000000010000861F                 mov     r10, [rbp+var_2C8]
__text:0000000100008626                 mov     r11, [rbp+var_2D0]
__text:000000010000862D                 mov     [r10], r11
__text:0000000100008630                 mov     r10, [rbp+var_2E8]
__text:0000000100008637                 mov     [rbp+var_558], r10
__text:000000010000863E                 mov     r10, [rbp+var_558]
__text:0000000100008645                 mov     [rbp+var_1A0], r9
__text:000000010000864C                 mov     [rbp+var_1A8], r10
__text:0000000100008653                 mov     r9, [rbp+var_1A0]
__text:000000010000865A                 mov     r10, [rbp+var_1A8]
__text:0000000100008661                 mov     [rbp+var_180], r9
__text:0000000100008668                 mov     [rbp+var_188], r10
__text:000000010000866F                 mov     r9, [rbp+var_180]
__text:0000000100008676                 mov     [rbp+var_178], r8
__text:000000010000867D                 mov     r10, [rbp+var_178]
__text:0000000100008684                 mov     r10, [r10]
__text:0000000100008687                 mov     [rbp+var_B0], r10
__text:000000010000868E                 mov     r10, [rbp+var_B0]
__text:0000000100008695                 mov     [rbp+var_A8], r10
__text:000000010000869C                 mov     r11, [rbp+var_A8]
__text:00000001000086A3                 mov     [rbp+var_A0], r11
__text:00000001000086AA                 mov     r11, [rbp+var_A0]
__text:00000001000086B1                 mov     r11, [r11]
__text:00000001000086B4                 mov     [rbp+var_B8], r11
__text:00000001000086BB                 mov     [rbp+var_98], r10
__text:00000001000086C2                 mov     r10, [rbp+var_98]
__text:00000001000086C9                 mov     [rbp+var_90], r10
__text:00000001000086D0                 mov     r10, [rbp+var_90]
__text:00000001000086D7                 mov     qword ptr [r10], 0
__text:00000001000086DE                 mov     r10, [rbp+var_B8]
__text:00000001000086E5                 mov     [rbp+var_C0], r8
__text:00000001000086EC                 mov     r8, [rbp+var_C0]
__text:00000001000086F3                 mov     r8, [r8]
__text:00000001000086F6                 mov     [rbp+var_D8], r8
__text:00000001000086FD                 mov     r8, [rbp+var_D8]
__text:0000000100008704                 mov     [rbp+var_D0], r8
__text:000000010000870B                 mov     r8, [rbp+var_D0]
__text:0000000100008712                 mov     [rbp+var_C8], r8
__text:0000000100008719                 mov     r8, [rbp+var_C8]
__text:0000000100008720                 add     r8, 8
__text:0000000100008727                 mov     [rbp+var_E0], r8
__text:000000010000872E                 mov     r8, [rbp+var_E0]
__text:0000000100008735                 mov     r11, [r8]
__text:0000000100008738                 mov     [rbp+var_198], r11
__text:000000010000873F                 mov     r8, [r8+8]
__text:0000000100008743                 mov     [rbp+var_190], r8
__text:000000010000874A                 mov     r8, [rbp+var_198]
__text:0000000100008751                 mov     r11, [rbp+var_190]
__text:0000000100008758                 mov     [rbp+var_158], r9
__text:000000010000875F                 mov     [rbp+var_160], r10
__text:0000000100008766                 mov     [rbp+var_170], r8
__text:000000010000876D                 mov     [rbp+var_168], r11
__text:0000000100008774                 mov     r8, [rbp+var_158]
__text:000000010000877B                 mov     r9, [rbp+var_160]
__text:0000000100008782                 mov     r10, [rbp+var_170]
__text:0000000100008789                 mov     r11, [rbp+var_168]
__text:0000000100008790                 mov     [rbp+var_128], r8
__text:0000000100008797                 mov     [rbp+var_130], r9
__text:000000010000879E                 mov     [rbp+var_140], r10
__text:00000001000087A5                 mov     [rbp+var_138], r11
__text:00000001000087AC                 mov     r8, [rbp+var_128]
__text:00000001000087B3                 mov     [rbp+var_120], rdi
__text:00000001000087BA                 mov     rdi, [rbp+var_120]
__text:00000001000087C1                 mov     rdi, [rdi]
__text:00000001000087C4                 mov     [rbp+var_E8], rsi
__text:00000001000087CB                 mov     rsi, [rbp+var_E8]
__text:00000001000087D2                 mov     r9, [rsi]
__text:00000001000087D5                 mov     [rbp+var_150], r9
__text:00000001000087DC                 mov     rsi, [rsi+8]
__text:00000001000087E0                 mov     [rbp+var_148], rsi
__text:00000001000087E7                 mov     rsi, [rbp+var_150]
__text:00000001000087EE                 mov     r9, [rbp+var_148]
__text:00000001000087F5                 mov     [rbp+var_100], r8
__text:00000001000087FC                 mov     [rbp+var_108], rdi
__text:0000000100008803                 mov     [rbp+var_118], rsi
__text:000000010000880A                 mov     [rbp+var_110], r9
__text:0000000100008811                 mov     rsi, [rbp+var_100]
__text:0000000100008818                 mov     [rbp+var_F8], rdx
__text:000000010000881F                 mov     rdx, [rbp+var_F8]
__text:0000000100008826                 mov     rdx, [rdx]
__text:0000000100008829                 mov     [rsi], rdx
__text:000000010000882C                 mov     [rbp+var_F0], rcx
__text:0000000100008833                 mov     rcx, [rbp+var_F0]
__text:000000010000883A                 mov     rdx, [rcx]
__text:000000010000883D                 mov     [rsi+8], rdx
__text:0000000100008841                 mov     rcx, [rcx+8]
__text:0000000100008845                 mov     [rsi+10h], rcx
__text:0000000100008849                 mov     [rbp+var_2C0], rax
__text:0000000100008850                 mov     rcx, [rbp+var_2C0]
__text:0000000100008857                 mov     [rbp+var_2B8], rcx
__text:000000010000885E                 mov     rcx, [rbp+var_2B8]
__text:0000000100008865                 mov     [rbp+var_2A0], rcx
__text:000000010000886C                 mov     [rbp+var_2A8], 0
__text:0000000100008877                 mov     rcx, [rbp+var_2A0]
__text:000000010000887E                 mov     [rbp+var_298], rcx
__text:0000000100008885                 mov     rdx, [rbp+var_298]
__text:000000010000888C                 mov     [rbp+var_290], rdx
__text:0000000100008893                 mov     rdx, [rbp+var_290]
__text:000000010000889A                 mov     rdx, [rdx]
__text:000000010000889D                 mov     [rbp+var_2B0], rdx
__text:00000001000088A4                 mov     rdx, [rbp+var_2A8]
__text:00000001000088AB                 mov     [rbp+var_1C8], rcx
__text:00000001000088B2                 mov     rsi, [rbp+var_1C8]
__text:00000001000088B9                 mov     [rbp+var_1C0], rsi
__text:00000001000088C0                 mov     rsi, [rbp+var_1C0]
__text:00000001000088C7                 mov     [rsi], rdx
__text:00000001000088CA                 cmp     [rbp+var_2B0], 0
__text:00000001000088D5                 mov     [rbp+var_D98], rcx
__text:00000001000088DC                 jz      loc_100008A6A
__text:00000001000088E2                 mov     rax, [rbp+var_D98]
__text:00000001000088E9                 mov     [rbp+var_1B8], rax
__text:00000001000088F0                 mov     rcx, [rbp+var_1B8]
__text:00000001000088F7                 mov     [rbp+var_1B0], rcx
__text:00000001000088FE                 mov     rcx, [rbp+var_1B0]
__text:0000000100008905                 add     rcx, 8
__text:000000010000890C                 mov     rdx, [rbp+var_2B0]
__text:0000000100008913                 mov     [rbp+var_270], rcx
__text:000000010000891A                 mov     [rbp+var_278], rdx
__text:0000000100008921                 mov     rcx, [rbp+var_270]
__text:0000000100008928                 test    byte ptr [rcx+9], 1
__text:000000010000892C                 mov     [rbp+var_DA0], rcx
__text:0000000100008933                 jz      loc_100008990
__text:0000000100008939                 mov     rax, [rbp+var_DA0]
__text:0000000100008940                 mov     rcx, [rax]
__text:0000000100008943                 mov     rdx, [rbp+var_278]
__text:000000010000894A                 add     rdx, 1Ch
__text:0000000100008951                 add     rdx, 4
__text:0000000100008958                 mov     [rbp+var_268], rdx
__text:000000010000895F                 mov     rdx, [rbp+var_268]
__text:0000000100008966                 mov     [rbp+var_218], rcx
__text:000000010000896D                 mov     [rbp+var_220], rdx
__text:0000000100008974                 mov     rcx, [rbp+var_218]
__text:000000010000897B                 mov     rdx, [rbp+var_220]
__text:0000000100008982                 mov     [rbp+var_208], rcx
__text:0000000100008989                 mov     [rbp+var_210], rdx
__text:0000000100008990
__text:0000000100008990 loc_100008990:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+A93↑j
__text:0000000100008990                 mov     rax, [rbp+var_DA0]
__text:0000000100008997                 test    byte ptr [rax+8], 1
__text:000000010000899B                 jz      loc_1000089F1
__text:00000001000089A1                 mov     rax, [rbp+var_DA0]
__text:00000001000089A8                 mov     rcx, [rax]
__text:00000001000089AB                 mov     rdx, [rbp+var_278]
__text:00000001000089B2                 add     rdx, 1Ch
__text:00000001000089B9                 mov     [rbp+var_1D0], rdx
__text:00000001000089C0                 mov     rdx, [rbp+var_1D0]
__text:00000001000089C7                 mov     [rbp+var_1E8], rcx
__text:00000001000089CE                 mov     [rbp+var_1F0], rdx
__text:00000001000089D5                 mov     rcx, [rbp+var_1E8]
__text:00000001000089DC                 mov     rdx, [rbp+var_1F0]
__text:00000001000089E3                 mov     [rbp+var_1D8], rcx
__text:00000001000089EA                 mov     [rbp+var_1E0], rdx
__text:00000001000089F1
__text:00000001000089F1 loc_1000089F1:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+AFB↑j
__text:00000001000089F1                 cmp     [rbp+var_278], 0
__text:00000001000089FC                 jz      loc_100008A65
__text:0000000100008A02                 mov     rax, [rbp+var_DA0]
__text:0000000100008A09                 mov     rcx, [rax]
__text:0000000100008A0C                 mov     rdx, [rbp+var_278]
__text:0000000100008A13                 mov     [rbp+var_250], rcx
__text:0000000100008A1A                 mov     [rbp+var_258], rdx
__text:0000000100008A21                 mov     [rbp+var_260], 1
__text:0000000100008A2C                 mov     rcx, [rbp+var_250]
__text:0000000100008A33                 mov     rdx, [rbp+var_258]
__text:0000000100008A3A                 mov     rsi, [rbp+var_260]
__text:0000000100008A41                 mov     [rbp+var_238], rcx
__text:0000000100008A48                 mov     [rbp+var_240], rdx
__text:0000000100008A4F                 mov     [rbp+var_248], rsi
__text:0000000100008A56                 mov     rcx, [rbp+var_240]
__text:0000000100008A5D                 mov     rdi, rcx        ; void *
__text:0000000100008A60                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100008A65
__text:0000000100008A65 loc_100008A65:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+B5C↑j
__text:0000000100008A65                 jmp     $+5
__text:0000000100008A6A ; ---------------------------------------------------------------------------
__text:0000000100008A6A
__text:0000000100008A6A loc_100008A6A:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+A3C↑j
__text:0000000100008A6A                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&):loc_100008A65↑j
__text:0000000100008A6A                 jmp     $+5
__text:0000000100008A6F ; ---------------------------------------------------------------------------
__text:0000000100008A6F
__text:0000000100008A6F loc_100008A6F:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&):loc_100008A6A↑j
__text:0000000100008A6F                 lea     rax, [rbp+var_5B0]
__text:0000000100008A76                 lea     rcx, [rbp+var_D30]
__text:0000000100008A7D                 mov     [rbp+var_5B8], rcx
__text:0000000100008A84                 mov     rcx, [rbp+var_5B8]
__text:0000000100008A8B                 mov     [rbp+var_5A0], rax
__text:0000000100008A92                 mov     [rbp+var_5A8], rcx
__text:0000000100008A99                 mov     rax, [rbp+var_5A0]
__text:0000000100008AA0                 mov     rcx, [rbp+var_5A8]
__text:0000000100008AA7                 mov     [rbp+var_590], rax
__text:0000000100008AAE                 mov     [rbp+var_598], rcx
__text:0000000100008AB5                 mov     rax, [rbp+var_590]
__text:0000000100008ABC                 mov     rcx, [rbp+var_598]
__text:0000000100008AC3                 mov     [rax], rcx
__text:0000000100008AC6                 mov     rax, [rbp+var_5B0]
__text:0000000100008ACD                 mov     [rbp+var_DA8], rax
__text:0000000100008AD4                 lea     rax, [rbp+var_648]
__text:0000000100008ADB                 lea     rcx, [rbp+var_638]
__text:0000000100008AE2                 lea     rdx, [rbp+var_670]
__text:0000000100008AE9                 lea     rsi, [rbp+var_660]
__text:0000000100008AF0                 lea     rdi, [rbp+var_6B8]
__text:0000000100008AF7                 mov     r8, [rbp+var_DA8]
__text:0000000100008AFE                 mov     [rbp+var_D18], r8
__text:0000000100008B05                 mov     r9, [rbp+var_D18]
__text:0000000100008B0C                 mov     r10, [rbp+var_D40]
__text:0000000100008B13                 mov     [rbp+var_6D0], r10
__text:0000000100008B1A                 mov     [rbp+var_6D8], r9
__text:0000000100008B21                 mov     r9, [rbp+var_6D0]
__text:0000000100008B28                 mov     r11, [rbp+var_6D8]
__text:0000000100008B2F                 mov     [rbp+var_6B0], r9
__text:0000000100008B36                 mov     [rbp+var_6B8], r11
__text:0000000100008B3D                 mov     r9, [rbp+var_6B0]
__text:0000000100008B44                 mov     [rbp+var_6A8], rdi
__text:0000000100008B4B                 mov     r11, [rbp+var_6A8]
__text:0000000100008B52                 mov     r11, [r11]
__text:0000000100008B55                 mov     [rbp+var_5E0], r11
__text:0000000100008B5C                 mov     r11, [rbp+var_5E0]
__text:0000000100008B63                 mov     [rbp+var_5D8], r11
__text:0000000100008B6A                 mov     rbx, [rbp+var_5D8]
__text:0000000100008B71                 mov     [rbp+var_5D0], rbx
__text:0000000100008B78                 mov     rbx, [rbp+var_5D0]
__text:0000000100008B7F                 mov     rbx, [rbx]
__text:0000000100008B82                 mov     [rbp+var_5E8], rbx
__text:0000000100008B89                 mov     [rbp+var_5C8], r11
__text:0000000100008B90                 mov     r11, [rbp+var_5C8]
__text:0000000100008B97                 mov     [rbp+var_5C0], r11
__text:0000000100008B9E                 mov     r11, [rbp+var_5C0]
__text:0000000100008BA5                 mov     qword ptr [r11], 0
__text:0000000100008BAC                 mov     r11, [rbp+var_5E8]
__text:0000000100008BB3                 mov     [rbp+var_5F0], rdi
__text:0000000100008BBA                 mov     rdi, [rbp+var_5F0]
__text:0000000100008BC1                 mov     rdi, [rdi]
__text:0000000100008BC4                 mov     [rbp+var_608], rdi
__text:0000000100008BCB                 mov     rdi, [rbp+var_608]
__text:0000000100008BD2                 mov     [rbp+var_600], rdi
__text:0000000100008BD9                 mov     rdi, [rbp+var_600]
__text:0000000100008BE0                 mov     [rbp+var_5F8], rdi
__text:0000000100008BE7                 mov     rdi, [rbp+var_5F8]
__text:0000000100008BEE                 add     rdi, 8
__text:0000000100008BF5                 mov     [rbp+var_610], rdi
__text:0000000100008BFC                 mov     rdi, [rbp+var_610]
__text:0000000100008C03                 mov     rbx, [rdi]
__text:0000000100008C06                 mov     [rbp+var_6C8], rbx
__text:0000000100008C0D                 mov     rdi, [rdi+8]
__text:0000000100008C11                 mov     [rbp+var_6C0], rdi
__text:0000000100008C18                 mov     rdi, [rbp+var_6C8]
__text:0000000100008C1F                 mov     rbx, [rbp+var_6C0]
__text:0000000100008C26                 mov     [rbp+var_688], r9
__text:0000000100008C2D                 mov     [rbp+var_690], r11
__text:0000000100008C34                 mov     [rbp+var_6A0], rdi
__text:0000000100008C3B                 mov     [rbp+var_698], rbx
__text:0000000100008C42                 mov     rdi, [rbp+var_688]
__text:0000000100008C49                 mov     r9, [rbp+var_690]
__text:0000000100008C50                 mov     r11, [rbp+var_6A0]
__text:0000000100008C57                 mov     rbx, [rbp+var_698]
__text:0000000100008C5E                 mov     [rbp+var_658], rdi
__text:0000000100008C65                 mov     [rbp+var_660], r9
__text:0000000100008C6C                 mov     [rbp+var_670], r11
__text:0000000100008C73                 mov     [rbp+var_668], rbx
__text:0000000100008C7A                 mov     rdi, [rbp+var_658]
__text:0000000100008C81                 mov     [rbp+var_650], rsi
__text:0000000100008C88                 mov     rsi, [rbp+var_650]
__text:0000000100008C8F                 mov     rsi, [rsi]
__text:0000000100008C92                 mov     [rbp+var_618], rdx
__text:0000000100008C99                 mov     rdx, [rbp+var_618]
__text:0000000100008CA0                 mov     r9, [rdx]
__text:0000000100008CA3                 mov     [rbp+var_680], r9
__text:0000000100008CAA                 mov     rdx, [rdx+8]
__text:0000000100008CAE                 mov     [rbp+var_678], rdx
__text:0000000100008CB5                 mov     rdx, [rbp+var_680]
__text:0000000100008CBC                 mov     r9, [rbp+var_678]
__text:0000000100008CC3                 mov     [rbp+var_630], rdi
__text:0000000100008CCA                 mov     [rbp+var_638], rsi
__text:0000000100008CD1                 mov     [rbp+var_648], rdx
__text:0000000100008CD8                 mov     [rbp+var_640], r9
__text:0000000100008CDF                 mov     rdx, [rbp+var_630]
__text:0000000100008CE6                 mov     [rbp+var_628], rcx
__text:0000000100008CED                 mov     rcx, [rbp+var_628]
__text:0000000100008CF4                 mov     rcx, [rcx]
__text:0000000100008CF7                 mov     [rdx], rcx
__text:0000000100008CFA                 mov     [rbp+var_620], rax
__text:0000000100008D01                 mov     rax, [rbp+var_620]
__text:0000000100008D08                 mov     rcx, [rax]
__text:0000000100008D0B                 mov     [rdx+8], rcx
__text:0000000100008D0F                 mov     rax, [rax+8]
__text:0000000100008D13                 mov     [rdx+10h], rax
__text:0000000100008D17                 lea     rax, [rbp+var_D30]
__text:0000000100008D1E                 mov     [rbp+var_808], rax
__text:0000000100008D25                 mov     rax, [rbp+var_808]
__text:0000000100008D2C                 mov     [rbp+var_800], rax
__text:0000000100008D33                 mov     rax, [rbp+var_800]
__text:0000000100008D3A                 mov     [rbp+var_7E8], rax
__text:0000000100008D41                 mov     [rbp+var_7F0], 0
__text:0000000100008D4C                 mov     rax, [rbp+var_7E8]
__text:0000000100008D53                 mov     [rbp+var_7E0], rax
__text:0000000100008D5A                 mov     rcx, [rbp+var_7E0]
__text:0000000100008D61                 mov     [rbp+var_7D8], rcx
__text:0000000100008D68                 mov     rcx, [rbp+var_7D8]
__text:0000000100008D6F                 mov     rcx, [rcx]
__text:0000000100008D72                 mov     [rbp+var_7F8], rcx
__text:0000000100008D79                 mov     rcx, [rbp+var_7F0]
__text:0000000100008D80                 mov     [rbp+var_710], rax
__text:0000000100008D87                 mov     rdx, [rbp+var_710]
__text:0000000100008D8E                 mov     [rbp+var_708], rdx
__text:0000000100008D95                 mov     rdx, [rbp+var_708]
__text:0000000100008D9C                 mov     [rdx], rcx
__text:0000000100008D9F                 cmp     [rbp+var_7F8], 0
__text:0000000100008DAA                 mov     [rbp+var_DB0], rax
__text:0000000100008DB1                 jz      loc_100008F3F
__text:0000000100008DB7                 mov     rax, [rbp+var_DB0]
__text:0000000100008DBE                 mov     [rbp+var_700], rax
__text:0000000100008DC5                 mov     rcx, [rbp+var_700]
__text:0000000100008DCC                 mov     [rbp+var_6F8], rcx
__text:0000000100008DD3                 mov     rcx, [rbp+var_6F8]
__text:0000000100008DDA                 add     rcx, 8
__text:0000000100008DE1                 mov     rdx, [rbp+var_7F8]
__text:0000000100008DE8                 mov     [rbp+var_7B8], rcx
__text:0000000100008DEF                 mov     [rbp+var_7C0], rdx
__text:0000000100008DF6                 mov     rcx, [rbp+var_7B8]
__text:0000000100008DFD                 test    byte ptr [rcx+9], 1
__text:0000000100008E01                 mov     [rbp+var_DB8], rcx
__text:0000000100008E08                 jz      loc_100008E65
__text:0000000100008E0E                 mov     rax, [rbp+var_DB8]
__text:0000000100008E15                 mov     rcx, [rax]
__text:0000000100008E18                 mov     rdx, [rbp+var_7C0]
__text:0000000100008E1F                 add     rdx, 1Ch
__text:0000000100008E26                 add     rdx, 4
__text:0000000100008E2D                 mov     [rbp+var_7B0], rdx
__text:0000000100008E34                 mov     rdx, [rbp+var_7B0]
__text:0000000100008E3B                 mov     [rbp+var_760], rcx
__text:0000000100008E42                 mov     [rbp+var_768], rdx
__text:0000000100008E49                 mov     rcx, [rbp+var_760]
__text:0000000100008E50                 mov     rdx, [rbp+var_768]
__text:0000000100008E57                 mov     [rbp+var_750], rcx
__text:0000000100008E5E                 mov     [rbp+var_758], rdx
__text:0000000100008E65
__text:0000000100008E65 loc_100008E65:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+F68↑j
__text:0000000100008E65                 mov     rax, [rbp+var_DB8]
__text:0000000100008E6C                 test    byte ptr [rax+8], 1
__text:0000000100008E70                 jz      loc_100008EC6
__text:0000000100008E76                 mov     rax, [rbp+var_DB8]
__text:0000000100008E7D                 mov     rcx, [rax]
__text:0000000100008E80                 mov     rdx, [rbp+var_7C0]
__text:0000000100008E87                 add     rdx, 1Ch
__text:0000000100008E8E                 mov     [rbp+var_718], rdx
__text:0000000100008E95                 mov     rdx, [rbp+var_718]
__text:0000000100008E9C                 mov     [rbp+var_730], rcx
__text:0000000100008EA3                 mov     [rbp+var_738], rdx
__text:0000000100008EAA                 mov     rcx, [rbp+var_730]
__text:0000000100008EB1                 mov     rdx, [rbp+var_738]
__text:0000000100008EB8                 mov     [rbp+var_720], rcx
__text:0000000100008EBF                 mov     [rbp+var_728], rdx
__text:0000000100008EC6
__text:0000000100008EC6 loc_100008EC6:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+FD0↑j
__text:0000000100008EC6                 cmp     [rbp+var_7C0], 0
__text:0000000100008ED1                 jz      loc_100008F3A
__text:0000000100008ED7                 mov     rax, [rbp+var_DB8]
__text:0000000100008EDE                 mov     rcx, [rax]
__text:0000000100008EE1                 mov     rdx, [rbp+var_7C0]
__text:0000000100008EE8                 mov     [rbp+var_798], rcx
__text:0000000100008EEF                 mov     [rbp+var_7A0], rdx
__text:0000000100008EF6                 mov     [rbp+var_7A8], 1
__text:0000000100008F01                 mov     rcx, [rbp+var_798]
__text:0000000100008F08                 mov     rdx, [rbp+var_7A0]
__text:0000000100008F0F                 mov     rsi, [rbp+var_7A8]
__text:0000000100008F16                 mov     [rbp+var_780], rcx
__text:0000000100008F1D                 mov     [rbp+var_788], rdx
__text:0000000100008F24                 mov     [rbp+var_790], rsi
__text:0000000100008F2B                 mov     rcx, [rbp+var_788]
__text:0000000100008F32                 mov     rdi, rcx        ; void *
__text:0000000100008F35                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100008F3A
__text:0000000100008F3A loc_100008F3A:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+1031↑j
__text:0000000100008F3A                 jmp     $+5
__text:0000000100008F3F ; ---------------------------------------------------------------------------
__text:0000000100008F3F
__text:0000000100008F3F loc_100008F3F:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+F11↑j
__text:0000000100008F3F                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&):loc_100008F3A↑j
__text:0000000100008F3F                 jmp     $+5
__text:0000000100008F44 ; ---------------------------------------------------------------------------
__text:0000000100008F44
__text:0000000100008F44 loc_100008F44:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&):loc_100008F3F↑j
__text:0000000100008F44                 lea     rax, [rbp+var_CF0]
__text:0000000100008F4B                 mov     [rbp+var_D34], 1
__text:0000000100008F55                 mov     [rbp+var_928], rax
__text:0000000100008F5C                 mov     rax, [rbp+var_928]
__text:0000000100008F63                 mov     [rbp+var_920], rax
__text:0000000100008F6A                 mov     rax, [rbp+var_920]
__text:0000000100008F71                 mov     [rbp+var_908], rax
__text:0000000100008F78                 mov     [rbp+var_910], 0
__text:0000000100008F83                 mov     rax, [rbp+var_908]
__text:0000000100008F8A                 mov     [rbp+var_900], rax
__text:0000000100008F91                 mov     rcx, [rbp+var_900]
__text:0000000100008F98                 mov     [rbp+var_8F8], rcx
__text:0000000100008F9F                 mov     rcx, [rbp+var_8F8]
__text:0000000100008FA6                 mov     rcx, [rcx]
__text:0000000100008FA9                 mov     [rbp+var_918], rcx
__text:0000000100008FB0                 mov     rcx, [rbp+var_910]
__text:0000000100008FB7                 mov     [rbp+var_830], rax
__text:0000000100008FBE                 mov     rdx, [rbp+var_830]
__text:0000000100008FC5                 mov     [rbp+var_828], rdx
__text:0000000100008FCC                 mov     rdx, [rbp+var_828]
__text:0000000100008FD3                 mov     [rdx], rcx
__text:0000000100008FD6                 cmp     [rbp+var_918], 0
__text:0000000100008FE1                 mov     [rbp+var_DC0], rax
__text:0000000100008FE8                 jz      loc_100009176
__text:0000000100008FEE                 mov     rax, [rbp+var_DC0]
__text:0000000100008FF5                 mov     [rbp+var_820], rax
__text:0000000100008FFC                 mov     rcx, [rbp+var_820]
__text:0000000100009003                 mov     [rbp+var_818], rcx
__text:000000010000900A                 mov     rcx, [rbp+var_818]
__text:0000000100009011                 add     rcx, 8
__text:0000000100009018                 mov     rdx, [rbp+var_918]
__text:000000010000901F                 mov     [rbp+var_8D8], rcx
__text:0000000100009026                 mov     [rbp+var_8E0], rdx
__text:000000010000902D                 mov     rcx, [rbp+var_8D8]
__text:0000000100009034                 test    byte ptr [rcx+9], 1
__text:0000000100009038                 mov     [rbp+var_DC8], rcx
__text:000000010000903F                 jz      loc_10000909C
__text:0000000100009045                 mov     rax, [rbp+var_DC8]
__text:000000010000904C                 mov     rcx, [rax]
__text:000000010000904F                 mov     rdx, [rbp+var_8E0]
__text:0000000100009056                 add     rdx, 1Ch
__text:000000010000905D                 add     rdx, 4
__text:0000000100009064                 mov     [rbp+var_8D0], rdx
__text:000000010000906B                 mov     rdx, [rbp+var_8D0]
__text:0000000100009072                 mov     [rbp+var_880], rcx
__text:0000000100009079                 mov     [rbp+var_888], rdx
__text:0000000100009080                 mov     rcx, [rbp+var_880]
__text:0000000100009087                 mov     rdx, [rbp+var_888]
__text:000000010000908E                 mov     [rbp+var_870], rcx
__text:0000000100009095                 mov     [rbp+var_878], rdx
__text:000000010000909C
__text:000000010000909C loc_10000909C:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+119F↑j
__text:000000010000909C                 mov     rax, [rbp+var_DC8]
__text:00000001000090A3                 test    byte ptr [rax+8], 1
__text:00000001000090A7                 jz      loc_1000090FD
__text:00000001000090AD                 mov     rax, [rbp+var_DC8]
__text:00000001000090B4                 mov     rcx, [rax]
__text:00000001000090B7                 mov     rdx, [rbp+var_8E0]
__text:00000001000090BE                 add     rdx, 1Ch
__text:00000001000090C5                 mov     [rbp+var_838], rdx
__text:00000001000090CC                 mov     rdx, [rbp+var_838]
__text:00000001000090D3                 mov     [rbp+var_850], rcx
__text:00000001000090DA                 mov     [rbp+var_858], rdx
__text:00000001000090E1                 mov     rcx, [rbp+var_850]
__text:00000001000090E8                 mov     rdx, [rbp+var_858]
__text:00000001000090EF                 mov     [rbp+var_840], rcx
__text:00000001000090F6                 mov     [rbp+var_848], rdx
__text:00000001000090FD
__text:00000001000090FD loc_1000090FD:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+1207↑j
__text:00000001000090FD                 cmp     [rbp+var_8E0], 0
__text:0000000100009108                 jz      loc_100009171
__text:000000010000910E                 mov     rax, [rbp+var_DC8]
__text:0000000100009115                 mov     rcx, [rax]
__text:0000000100009118                 mov     rdx, [rbp+var_8E0]
__text:000000010000911F                 mov     [rbp+var_8B8], rcx
__text:0000000100009126                 mov     [rbp+var_8C0], rdx
__text:000000010000912D                 mov     [rbp+var_8C8], 1
__text:0000000100009138                 mov     rcx, [rbp+var_8B8]
__text:000000010000913F                 mov     rdx, [rbp+var_8C0]
__text:0000000100009146                 mov     rsi, [rbp+var_8C8]
__text:000000010000914D                 mov     [rbp+var_8A0], rcx
__text:0000000100009154                 mov     [rbp+var_8A8], rdx
__text:000000010000915B                 mov     [rbp+var_8B0], rsi
__text:0000000100009162                 mov     rcx, [rbp+var_8A8]
__text:0000000100009169                 mov     rdi, rcx        ; void *
__text:000000010000916C                 call    __ZdlPv         ; operator delete(void *)
__text:0000000100009171
__text:0000000100009171 loc_100009171:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+1268↑j
__text:0000000100009171                 jmp     $+5
__text:0000000100009176 ; ---------------------------------------------------------------------------
__text:0000000100009176
__text:0000000100009176 loc_100009176:                          ; CODE XREF: std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&)+1148↑j
__text:0000000100009176                                         ; std::__1::map<int,int,std::__1::less<int>,std::__1::allocator<std::__1::pair<int const,int>>>::__construct_node_with_key(int const&):loc_100009171↑j
__text:0000000100009176                 mov     rax, [rbp+var_D48]
__text:000000010000917D                 add     rsp, 0DA8h
__text:0000000100009184                 pop     rbx
__text:0000000100009185                 pop     r12
__text:0000000100009187                 pop     r13
__text:0000000100009189                 pop     r14
__text:000000010000918B                 pop     r15
__text:000000010000918D                 pop     rbp
__text:000000010000918E                 retn
__text:000000010000918E __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEE25__construct_node_with_keyERS5_ endp
__text:000000010000918E
__text:000000010000918E ; ---------------------------------------------------------------------------
__text:000000010000918F                 align 10h
__text:0000000100009190
__text:0000000100009190 ; =============== S U B R O U T I N E =======================================
__text:0000000100009190
__text:0000000100009190 ; Attributes: bp-based frame
__text:0000000100009190
__text:0000000100009190 ; std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *, std::__1::__tree_node_base<void *> *&, std::__1::__tree_node_base<void *> *)
__text:0000000100009190 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_ proc near
__text:0000000100009190                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD__ptr↓o
__text:0000000100009190
__text:0000000100009190 var_130         = qword ptr -130h
__text:0000000100009190 var_128         = qword ptr -128h
__text:0000000100009190 var_120         = qword ptr -120h
__text:0000000100009190 var_118         = qword ptr -118h
__text:0000000100009190 var_110         = qword ptr -110h
__text:0000000100009190 var_108         = qword ptr -108h
__text:0000000100009190 var_100         = qword ptr -100h
__text:0000000100009190 var_F8          = qword ptr -0F8h
__text:0000000100009190 var_F0          = qword ptr -0F0h
__text:0000000100009190 var_E8          = qword ptr -0E8h
__text:0000000100009190 var_E0          = qword ptr -0E0h
__text:0000000100009190 var_D8          = qword ptr -0D8h
__text:0000000100009190 var_D0          = qword ptr -0D0h
__text:0000000100009190 var_C8          = qword ptr -0C8h
__text:0000000100009190 var_C0          = qword ptr -0C0h
__text:0000000100009190 var_B8          = qword ptr -0B8h
__text:0000000100009190 var_B0          = qword ptr -0B0h
__text:0000000100009190 var_A8          = qword ptr -0A8h
__text:0000000100009190 var_A0          = qword ptr -0A0h
__text:0000000100009190 var_98          = qword ptr -98h
__text:0000000100009190 var_90          = qword ptr -90h
__text:0000000100009190 var_88          = qword ptr -88h
__text:0000000100009190 var_80          = qword ptr -80h
__text:0000000100009190 var_78          = qword ptr -78h
__text:0000000100009190 var_70          = qword ptr -70h
__text:0000000100009190 var_68          = qword ptr -68h
__text:0000000100009190 var_60          = qword ptr -60h
__text:0000000100009190 var_58          = qword ptr -58h
__text:0000000100009190 var_50          = qword ptr -50h
__text:0000000100009190 var_48          = qword ptr -48h
__text:0000000100009190 var_40          = qword ptr -40h
__text:0000000100009190 var_38          = qword ptr -38h
__text:0000000100009190 var_30          = qword ptr -30h
__text:0000000100009190 var_28          = qword ptr -28h
__text:0000000100009190 var_20          = qword ptr -20h
__text:0000000100009190 var_18          = qword ptr -18h
__text:0000000100009190 var_10          = qword ptr -10h
__text:0000000100009190
__text:0000000100009190                 push    rbp
__text:0000000100009191                 mov     rbp, rsp
__text:0000000100009194                 push    rbx
__text:0000000100009195                 sub     rsp, 128h
__text:000000010000919C                 lea     rax, [rbp+var_128]
__text:00000001000091A3                 lea     r8, [rbp+var_68]
__text:00000001000091A7                 lea     r9, [rbp+var_120]
__text:00000001000091AE                 lea     r10, [rbp+var_30]
__text:00000001000091B2                 lea     r11, [rbp+var_118]
__text:00000001000091B9                 lea     rbx, [rbp+var_F0]
__text:00000001000091C0                 mov     [rbp+var_F8], rdi
__text:00000001000091C7                 mov     [rbp+var_100], rsi
__text:00000001000091CE                 mov     [rbp+var_108], rdx
__text:00000001000091D5                 mov     [rbp+var_110], rcx
__text:00000001000091DC                 mov     rcx, [rbp+var_F8]
__text:00000001000091E3                 mov     [rbp+var_E0], rbx
__text:00000001000091EA                 mov     [rbp+var_E8], 0FFFFFFFFFFFFFFFFh
__text:00000001000091F5                 mov     rdx, [rbp+var_E0]
__text:00000001000091FC                 mov     rsi, [rbp+var_E8]
__text:0000000100009203                 mov     [rbp+var_D0], rdx
__text:000000010000920A                 mov     [rbp+var_D8], rsi
__text:0000000100009211                 mov     rdx, [rbp+var_D0]
__text:0000000100009218                 mov     qword ptr [rdx], 0
__text:000000010000921F                 mov     rdx, [rbp+var_F0]
__text:0000000100009226                 mov     [rbp+var_118], rdx
__text:000000010000922D                 mov     [rbp+var_B0], r11
__text:0000000100009234                 mov     rdx, [rbp+var_110]
__text:000000010000923B                 mov     qword ptr [rdx], 0
__text:0000000100009242                 mov     [rbp+var_20], r10
__text:0000000100009246                 mov     [rbp+var_28], 0FFFFFFFFFFFFFFFFh
__text:000000010000924E                 mov     rdx, [rbp+var_20]
__text:0000000100009252                 mov     rsi, [rbp+var_28]
__text:0000000100009256                 mov     [rbp+var_10], rdx
__text:000000010000925A                 mov     [rbp+var_18], rsi
__text:000000010000925E                 mov     rdx, [rbp+var_10]
__text:0000000100009262                 mov     qword ptr [rdx], 0
__text:0000000100009269                 mov     rdx, [rbp+var_30]
__text:000000010000926D                 mov     [rbp+var_120], rdx
__text:0000000100009274                 mov     [rbp+var_38], r9
__text:0000000100009278                 mov     rdx, [rbp+var_110]
__text:000000010000927F                 mov     qword ptr [rdx+8], 0
__text:0000000100009287                 mov     rdx, [rbp+var_100]
__text:000000010000928E                 mov     rsi, [rbp+var_110]
__text:0000000100009295                 mov     [rsi+10h], rdx
__text:0000000100009299                 mov     rdx, [rbp+var_110]
__text:00000001000092A0                 mov     rsi, [rbp+var_108]
__text:00000001000092A7                 mov     [rsi], rdx
__text:00000001000092AA                 mov     [rbp+var_40], rcx
__text:00000001000092AE                 mov     rdx, [rbp+var_40]
__text:00000001000092B2                 mov     rdx, [rdx]
__text:00000001000092B5                 mov     rdx, [rdx]
__text:00000001000092B8                 mov     [rbp+var_58], r8
__text:00000001000092BC                 mov     [rbp+var_60], 0FFFFFFFFFFFFFFFFh
__text:00000001000092C4                 mov     rsi, [rbp+var_58]
__text:00000001000092C8                 mov     rdi, [rbp+var_60]
__text:00000001000092CC                 mov     [rbp+var_48], rsi
__text:00000001000092D0                 mov     [rbp+var_50], rdi
__text:00000001000092D4                 mov     rsi, [rbp+var_48]
__text:00000001000092D8                 mov     qword ptr [rsi], 0
__text:00000001000092DF                 mov     rsi, [rbp+var_68]
__text:00000001000092E3                 mov     [rbp+var_128], rsi
__text:00000001000092EA                 mov     [rbp+var_70], rax
__text:00000001000092EE                 cmp     rdx, 0
__text:00000001000092F5                 mov     [rbp+var_130], rcx
__text:00000001000092FC                 jz      loc_100009322
__text:0000000100009302                 mov     rax, [rbp+var_130]
__text:0000000100009309                 mov     [rbp+var_78], rax
__text:000000010000930D                 mov     rcx, [rbp+var_78]
__text:0000000100009311                 mov     rcx, [rcx]
__text:0000000100009314                 mov     rcx, [rcx]
__text:0000000100009317                 mov     [rbp+var_80], rax
__text:000000010000931B                 mov     rdx, [rbp+var_80]
__text:000000010000931F                 mov     [rdx], rcx
__text:0000000100009322
__text:0000000100009322 loc_100009322:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__insert_node_at(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *&,std::__1::__tree_node_base<void *> *)+16C↑j
__text:0000000100009322                 mov     rax, [rbp+var_130]
__text:0000000100009329                 mov     [rbp+var_A8], rax
__text:0000000100009330                 mov     rcx, [rbp+var_A8]
__text:0000000100009337                 add     rcx, 8
__text:000000010000933E                 mov     [rbp+var_A0], rcx
__text:0000000100009345                 mov     rcx, [rbp+var_A0]
__text:000000010000934C                 mov     [rbp+var_98], rcx
__text:0000000100009353                 mov     rcx, [rbp+var_98]
__text:000000010000935A                 mov     [rbp+var_90], rcx
__text:0000000100009361                 mov     rcx, [rbp+var_90]
__text:0000000100009368                 mov     [rbp+var_88], rcx
__text:000000010000936F                 mov     rcx, [rbp+var_88]
__text:0000000100009376                 mov     rdi, [rcx]
__text:0000000100009379                 mov     rcx, [rbp+var_108]
__text:0000000100009380                 mov     rsi, [rcx]
__text:0000000100009383                 call    j___ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ ; std::__1::__tree_balance_after_insert<std::__1::__tree_node_base<void *> *>(std::__1::__tree_node_base<void *> *,std::__1::__tree_node_base<void *> *)
__text:0000000100009388                 mov     rax, [rbp+var_130]
__text:000000010000938F                 mov     [rbp+var_C8], rax
__text:0000000100009396                 mov     rcx, [rbp+var_C8]
__text:000000010000939D                 add     rcx, 10h
__text:00000001000093A4                 mov     [rbp+var_C0], rcx
__text:00000001000093AB                 mov     rcx, [rbp+var_C0]
__text:00000001000093B2                 mov     [rbp+var_B8], rcx
__text:00000001000093B9                 mov     rcx, [rbp+var_B8]
__text:00000001000093C0                 mov     rsi, [rcx]
__text:00000001000093C3                 add     rsi, 1
__text:00000001000093CA                 mov     [rcx], rsi
__text:00000001000093CD                 add     rsp, 128h
__text:00000001000093D4                 pop     rbx
__text:00000001000093D5                 pop     rbp
__text:00000001000093D6                 retn
__text:00000001000093D6 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE16__insert_node_atEPNS_16__tree_node_baseIPvEERSD_SD_ endp
__text:00000001000093D6
__text:00000001000093D6 ; ---------------------------------------------------------------------------
__text:00000001000093D7                 align 20h
__text:00000001000093E0
__text:00000001000093E0 ; =============== S U B R O U T I N E =======================================
__text:00000001000093E0
__text:00000001000093E0 ; Attributes: bp-based frame
__text:00000001000093E0
__text:00000001000093E0 ; std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>>::__tree(std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true> const&)
__text:00000001000093E0 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEEC1ERKS6_ proc near
__text:00000001000093E0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEEC1ERKS6__ptr↓o
__text:00000001000093E0
__text:00000001000093E0 var_10          = qword ptr -10h
__text:00000001000093E0 var_8           = qword ptr -8
__text:00000001000093E0
__text:00000001000093E0                 push    rbp
__text:00000001000093E1                 mov     rbp, rsp
__text:00000001000093E4                 sub     rsp, 10h
__text:00000001000093E8                 mov     [rbp+var_8], rdi
__text:00000001000093EC                 mov     [rbp+var_10], rsi
__text:00000001000093F0                 mov     rdi, [rbp+var_8]
__text:00000001000093F4                 mov     rsi, [rbp+var_10]
__text:00000001000093F8                 call    j___ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEEC2ERKS6_ ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::__tree(std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true> const&)
__text:00000001000093FD                 add     rsp, 10h
__text:0000000100009401                 pop     rbp
__text:0000000100009402                 retn
__text:0000000100009402 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEEC1ERKS6_ endp
__text:0000000100009402
__text:0000000100009402 ; ---------------------------------------------------------------------------
__text:0000000100009403                 align 10h
__text:0000000100009410
__text:0000000100009410 ; =============== S U B R O U T I N E =======================================
__text:0000000100009410
__text:0000000100009410 ; Attributes: bp-based frame
__text:0000000100009410
__text:0000000100009410 ; std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>>::__tree(std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true> const&)
__text:0000000100009410 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEEC2ERKS6_ proc near
__text:0000000100009410                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEEC2ERKS6__ptr↓o
__text:0000000100009410
__text:0000000100009410 var_E0          = qword ptr -0E0h
__text:0000000100009410 var_D8          = qword ptr -0D8h
__text:0000000100009410 var_D0          = qword ptr -0D0h
__text:0000000100009410 var_C8          = qword ptr -0C8h
__text:0000000100009410 var_C0          = qword ptr -0C0h
__text:0000000100009410 var_B8          = qword ptr -0B8h
__text:0000000100009410 var_B0          = qword ptr -0B0h
__text:0000000100009410 var_A8          = qword ptr -0A8h
__text:0000000100009410 var_A0          = qword ptr -0A0h
__text:0000000100009410 var_98          = qword ptr -98h
__text:0000000100009410 var_90          = qword ptr -90h
__text:0000000100009410 var_88          = qword ptr -88h
__text:0000000100009410 var_80          = qword ptr -80h
__text:0000000100009410 var_78          = qword ptr -78h
__text:0000000100009410 var_68          = qword ptr -68h
__text:0000000100009410 var_60          = qword ptr -60h
__text:0000000100009410 var_50          = byte ptr -50h
__text:0000000100009410 var_48          = qword ptr -48h
__text:0000000100009410 var_40          = qword ptr -40h
__text:0000000100009410 var_38          = qword ptr -38h
__text:0000000100009410 var_30          = byte ptr -30h
__text:0000000100009410 var_28          = qword ptr -28h
__text:0000000100009410 var_20          = qword ptr -20h
__text:0000000100009410 var_18          = qword ptr -18h
__text:0000000100009410 var_10          = qword ptr -10h
__text:0000000100009410 var_8           = qword ptr -8
__text:0000000100009410
__text:0000000100009410                 push    rbp
__text:0000000100009411                 mov     rbp, rsp
__text:0000000100009414                 sub     rsp, 68h
__text:0000000100009418                 lea     rax, [rbp+var_28]
__text:000000010000941C                 lea     rcx, [rbp+var_30]
__text:0000000100009420                 lea     rdx, [rbp+var_50]
__text:0000000100009424                 lea     r8, [rbp+var_48]
__text:0000000100009428                 mov     [rbp+var_D8], rdi
__text:000000010000942F                 mov     [rbp+var_E0], rsi
__text:0000000100009436                 mov     rsi, [rbp+var_D8]
__text:000000010000943D                 mov     rdi, rsi
__text:0000000100009440                 add     rdi, 8
__text:0000000100009447                 mov     [rbp+var_D0], rdi
__text:000000010000944E                 mov     rdi, [rbp+var_D0]
__text:0000000100009455                 mov     [rbp+var_C8], rdi
__text:000000010000945C                 mov     rdi, [rbp+var_C8]
__text:0000000100009463                 mov     [rbp+var_C0], rdi
__text:000000010000946A                 mov     rdi, [rbp+var_C0]
__text:0000000100009471                 mov     r9, rdi
__text:0000000100009474                 mov     [rbp+var_B8], r9
__text:000000010000947B                 mov     [rbp+var_B0], rdi
__text:0000000100009482                 mov     rdi, [rbp+var_B0]
__text:0000000100009489                 mov     [rbp+var_A8], rdi
__text:0000000100009490                 mov     rdi, [rbp+var_A8]
__text:0000000100009497                 mov     qword ptr [rdi], 0
__text:000000010000949E                 mov     rdi, rsi
__text:00000001000094A1                 add     rdi, 10h
__text:00000001000094A8                 mov     [rbp+var_60], rdi
__text:00000001000094AC                 mov     [rbp+var_68], 0
__text:00000001000094B4                 mov     rdi, [rbp+var_60]
__text:00000001000094B8                 mov     r9, [rbp+var_68]
__text:00000001000094BC                 mov     [rbp+var_40], rdi
__text:00000001000094C0                 mov     [rbp+var_48], r9
__text:00000001000094C4                 mov     rdi, [rbp+var_40]
__text:00000001000094C8                 mov     [rbp+var_38], r8
__text:00000001000094CC                 mov     r8, [rbp+var_38]
__text:00000001000094D0                 mov     r8, [r8]
__text:00000001000094D3                 mov     [rbp+var_8], rdx
__text:00000001000094D7                 mov     [rbp+var_20], rdi
__text:00000001000094DB                 mov     [rbp+var_28], r8
__text:00000001000094DF                 mov     rdx, [rbp+var_20]
__text:00000001000094E3                 mov     [rbp+var_18], rcx
__text:00000001000094E7                 mov     [rbp+var_10], rax
__text:00000001000094EB                 mov     rax, [rbp+var_10]
__text:00000001000094EF                 mov     rax, [rax]
__text:00000001000094F2                 mov     [rdx], rax
__text:00000001000094F5                 mov     [rbp+var_98], rsi
__text:00000001000094FC                 mov     rax, [rbp+var_98]
__text:0000000100009503                 add     rax, 8
__text:0000000100009509                 mov     [rbp+var_90], rax
__text:0000000100009510                 mov     rax, [rbp+var_90]
__text:0000000100009517                 mov     [rbp+var_88], rax
__text:000000010000951E                 mov     rax, [rbp+var_88]
__text:0000000100009525                 mov     [rbp+var_80], rax
__text:0000000100009529                 mov     rax, [rbp+var_80]
__text:000000010000952D                 mov     [rbp+var_78], rax
__text:0000000100009531                 mov     rax, [rbp+var_78]
__text:0000000100009535                 mov     [rbp+var_A0], rsi
__text:000000010000953C                 mov     rcx, [rbp+var_A0]
__text:0000000100009543                 mov     [rcx], rax
__text:0000000100009546                 add     rsp, 68h
__text:000000010000954A                 pop     rbp
__text:000000010000954B                 retn
__text:000000010000954B __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEEC2ERKS6_ endp
__text:000000010000954B
__text:000000010000954B ; ---------------------------------------------------------------------------
__text:000000010000954C                 align 10h
__text:0000000100009550
__text:0000000100009550 ; =============== S U B R O U T I N E =======================================
__text:0000000100009550
__text:0000000100009550 ; Attributes: bp-based frame
__text:0000000100009550
__text:0000000100009550 ; std::__1::set<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::~set()
__text:0000000100009550 __ZNSt3__13setINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev proc near
__text:0000000100009550                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13setINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev_ptr↓o
__text:0000000100009550
__text:0000000100009550 var_8           = qword ptr -8
__text:0000000100009550
__text:0000000100009550                 push    rbp
__text:0000000100009551                 mov     rbp, rsp
__text:0000000100009554                 sub     rsp, 10h
__text:0000000100009558                 mov     [rbp+var_8], rdi
__text:000000010000955C                 mov     rdi, [rbp+var_8]
__text:0000000100009560                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::~__tree()
__text:0000000100009565                 add     rsp, 10h
__text:0000000100009569                 pop     rbp
__text:000000010000956A                 retn
__text:000000010000956A __ZNSt3__13setINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev endp
__text:000000010000956A
__text:000000010000956A ; ---------------------------------------------------------------------------
__text:000000010000956B                 align 10h
__text:0000000100009570
__text:0000000100009570 ; =============== S U B R O U T I N E =======================================
__text:0000000100009570
__text:0000000100009570 ; Attributes: bp-based frame
__text:0000000100009570
__text:0000000100009570 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::~__tree()
__text:0000000100009570 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev proc near
__text:0000000100009570                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev_ptr↓o
__text:0000000100009570
__text:0000000100009570 var_8           = qword ptr -8
__text:0000000100009570
__text:0000000100009570                 push    rbp
__text:0000000100009571                 mov     rbp, rsp
__text:0000000100009574                 sub     rsp, 10h
__text:0000000100009578                 mov     [rbp+var_8], rdi
__text:000000010000957C                 mov     rdi, [rbp+var_8]
__text:0000000100009580                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::~__tree()
__text:0000000100009585                 add     rsp, 10h
__text:0000000100009589                 pop     rbp
__text:000000010000958A                 retn
__text:000000010000958A __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED1Ev endp
__text:000000010000958A
__text:000000010000958A ; ---------------------------------------------------------------------------
__text:000000010000958B                 align 10h
__text:0000000100009590
__text:0000000100009590 ; =============== S U B R O U T I N E =======================================
__text:0000000100009590
__text:0000000100009590 ; Attributes: bp-based frame
__text:0000000100009590
__text:0000000100009590 ; std::__1::__tree<std::__1::pair<int, int>, std::__1::less<std::__1::pair<int, int>>, std::__1::allocator<std::__1::pair<int, int>>>::~__tree()
__text:0000000100009590 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev proc near
__text:0000000100009590                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev_ptr↓o
__text:0000000100009590
__text:0000000100009590 var_38          = qword ptr -38h
__text:0000000100009590 var_30          = qword ptr -30h
__text:0000000100009590 var_28          = qword ptr -28h
__text:0000000100009590 var_20          = qword ptr -20h
__text:0000000100009590 var_18          = qword ptr -18h
__text:0000000100009590 var_10          = qword ptr -10h
__text:0000000100009590 var_8           = qword ptr -8
__text:0000000100009590
__text:0000000100009590                 push    rbp
__text:0000000100009591                 mov     rbp, rsp
__text:0000000100009594                 sub     rsp, 40h
__text:0000000100009598                 mov     [rbp+var_38], rdi
__text:000000010000959C                 mov     rdi, [rbp+var_38]
__text:00000001000095A0                 mov     [rbp+var_30], rdi
__text:00000001000095A4                 mov     rax, [rbp+var_30]
__text:00000001000095A8                 mov     [rbp+var_28], rax
__text:00000001000095AC                 mov     rax, [rbp+var_28]
__text:00000001000095B0                 add     rax, 8
__text:00000001000095B6                 mov     [rbp+var_20], rax
__text:00000001000095BA                 mov     rax, [rbp+var_20]
__text:00000001000095BE                 mov     [rbp+var_18], rax
__text:00000001000095C2                 mov     rax, [rbp+var_18]
__text:00000001000095C6                 mov     [rbp+var_10], rax
__text:00000001000095CA                 mov     rax, [rbp+var_10]
__text:00000001000095CE                 mov     [rbp+var_8], rax
__text:00000001000095D2                 mov     rax, [rbp+var_8]
__text:00000001000095D6                 mov     rax, [rax]
__text:00000001000095D9                 mov     rsi, rax
__text:00000001000095DC                 call    j___ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::pair<int,int>,std::__1::less<std::__1::pair<int,int>>,std::__1::allocator<std::__1::pair<int,int>>>::destroy(std::__1::__tree_node<std::__1::pair<int,int>,void *> *)
__text:00000001000095E1                 add     rsp, 40h
__text:00000001000095E5                 pop     rbp
__text:00000001000095E6                 retn
__text:00000001000095E6 __ZNSt3__16__treeINS_4pairIiiEENS_4lessIS2_EENS_9allocatorIS2_EEED2Ev endp
__text:00000001000095E6
__text:00000001000095E6 ; ---------------------------------------------------------------------------
__text:00000001000095E7                 align 10h
__text:00000001000095F0
__text:00000001000095F0 ; =============== S U B R O U T I N E =======================================
__text:00000001000095F0
__text:00000001000095F0 ; Attributes: bp-based frame
__text:00000001000095F0
__text:00000001000095F0 ; std::__1::map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<int const, int>>>::~map()
__text:00000001000095F0 __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEED2Ev proc near
__text:00000001000095F0                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEED2Ev_ptr↓o
__text:00000001000095F0
__text:00000001000095F0 var_8           = qword ptr -8
__text:00000001000095F0
__text:00000001000095F0                 push    rbp
__text:00000001000095F1                 mov     rbp, rsp
__text:00000001000095F4                 sub     rsp, 10h
__text:00000001000095F8                 mov     [rbp+var_8], rdi
__text:00000001000095FC                 mov     rdi, [rbp+var_8]
__text:0000000100009600                 call    j___ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEED1Ev ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::~__tree()
__text:0000000100009605                 add     rsp, 10h
__text:0000000100009609                 pop     rbp
__text:000000010000960A                 retn
__text:000000010000960A __ZNSt3__13mapIiiNS_4lessIiEENS_9allocatorINS_4pairIKiiEEEEED2Ev endp
__text:000000010000960A
__text:000000010000960A ; ---------------------------------------------------------------------------
__text:000000010000960B                 align 10h
__text:0000000100009610
__text:0000000100009610 ; =============== S U B R O U T I N E =======================================
__text:0000000100009610
__text:0000000100009610 ; Attributes: bp-based frame
__text:0000000100009610
__text:0000000100009610 ; std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>>::~__tree()
__text:0000000100009610 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEED1Ev proc near
__text:0000000100009610                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEED1Ev_ptr↓o
__text:0000000100009610
__text:0000000100009610 var_8           = qword ptr -8
__text:0000000100009610
__text:0000000100009610                 push    rbp
__text:0000000100009611                 mov     rbp, rsp
__text:0000000100009614                 sub     rsp, 10h
__text:0000000100009618                 mov     [rbp+var_8], rdi
__text:000000010000961C                 mov     rdi, [rbp+var_8]
__text:0000000100009620                 call    j___ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEED2Ev ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::~__tree()
__text:0000000100009625                 add     rsp, 10h
__text:0000000100009629                 pop     rbp
__text:000000010000962A                 retn
__text:000000010000962A __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEED1Ev endp
__text:000000010000962A
__text:000000010000962A ; ---------------------------------------------------------------------------
__text:000000010000962B                 align 10h
__text:0000000100009630
__text:0000000100009630 ; =============== S U B R O U T I N E =======================================
__text:0000000100009630
__text:0000000100009630 ; Attributes: bp-based frame
__text:0000000100009630
__text:0000000100009630 ; std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>>::~__tree()
__text:0000000100009630 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEED2Ev proc near
__text:0000000100009630                                         ; DATA XREF: __la_symbol_ptr:__ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEED2Ev_ptr↓o
__text:0000000100009630
__text:0000000100009630 var_38          = qword ptr -38h
__text:0000000100009630 var_30          = qword ptr -30h
__text:0000000100009630 var_28          = qword ptr -28h
__text:0000000100009630 var_20          = qword ptr -20h
__text:0000000100009630 var_18          = qword ptr -18h
__text:0000000100009630 var_10          = qword ptr -10h
__text:0000000100009630 var_8           = qword ptr -8
__text:0000000100009630
__text:0000000100009630                 push    rbp
__text:0000000100009631                 mov     rbp, rsp
__text:0000000100009634                 sub     rsp, 40h
__text:0000000100009638                 mov     [rbp+var_38], rdi
__text:000000010000963C                 mov     rdi, [rbp+var_38]
__text:0000000100009640                 mov     [rbp+var_30], rdi
__text:0000000100009644                 mov     rax, [rbp+var_30]
__text:0000000100009648                 mov     [rbp+var_28], rax
__text:000000010000964C                 mov     rax, [rbp+var_28]
__text:0000000100009650                 add     rax, 8
__text:0000000100009656                 mov     [rbp+var_20], rax
__text:000000010000965A                 mov     rax, [rbp+var_20]
__text:000000010000965E                 mov     [rbp+var_18], rax
__text:0000000100009662                 mov     rax, [rbp+var_18]
__text:0000000100009666                 mov     [rbp+var_10], rax
__text:000000010000966A                 mov     rax, [rbp+var_10]
__text:000000010000966E                 mov     [rbp+var_8], rax
__text:0000000100009672                 mov     rax, [rbp+var_8]
__text:0000000100009676                 mov     rax, [rax]
__text:0000000100009679                 mov     rsi, rax
__text:000000010000967C                 call    j___ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int,int>,void *> *)
__text:0000000100009681                 add     rsp, 40h
__text:0000000100009685                 pop     rbp
__text:0000000100009686                 retn
__text:0000000100009686 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEED2Ev endp
__text:0000000100009686
__text:0000000100009686 ; ---------------------------------------------------------------------------
__text:0000000100009687                 align 10h
__text:0000000100009690
__text:0000000100009690 ; =============== S U B R O U T I N E =======================================
__text:0000000100009690
__text:0000000100009690 ; Attributes: bp-based frame
__text:0000000100009690
__text:0000000100009690 ; std::__1::__tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int, int>, void *> *)
__text:0000000100009690 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE proc near
__text:0000000100009690                                         ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int,int>,void *> *)+C9↓p
__text:0000000100009690                                         ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int,int>,void *> *)+E3↓p
__text:0000000100009690                                         ; DATA XREF: ...
__text:0000000100009690
__text:0000000100009690 var_F8          = qword ptr -0F8h
__text:0000000100009690 var_F0          = qword ptr -0F0h
__text:0000000100009690 var_E8          = qword ptr -0E8h
__text:0000000100009690 var_E0          = qword ptr -0E0h
__text:0000000100009690 var_D8          = qword ptr -0D8h
__text:0000000100009690 var_C0          = qword ptr -0C0h
__text:0000000100009690 var_B8          = qword ptr -0B8h
__text:0000000100009690 var_B0          = qword ptr -0B0h
__text:0000000100009690 var_A8          = qword ptr -0A8h
__text:0000000100009690 var_A0          = qword ptr -0A0h
__text:0000000100009690 var_98          = qword ptr -98h
__text:0000000100009690 var_90          = qword ptr -90h
__text:0000000100009690 var_88          = qword ptr -88h
__text:0000000100009690 var_80          = qword ptr -80h
__text:0000000100009690 var_78          = qword ptr -78h
__text:0000000100009690 var_70          = qword ptr -70h
__text:0000000100009690 var_68          = qword ptr -68h
__text:0000000100009690 var_60          = qword ptr -60h
__text:0000000100009690 var_58          = qword ptr -58h
__text:0000000100009690 var_40          = qword ptr -40h
__text:0000000100009690 var_38          = qword ptr -38h
__text:0000000100009690 var_30          = qword ptr -30h
__text:0000000100009690 var_28          = qword ptr -28h
__text:0000000100009690 var_20          = qword ptr -20h
__text:0000000100009690 var_18          = qword ptr -18h
__text:0000000100009690 var_10          = qword ptr -10h
__text:0000000100009690 var_8           = qword ptr -8
__text:0000000100009690
__text:0000000100009690                 push    rbp
__text:0000000100009691                 mov     rbp, rsp
__text:0000000100009694                 sub     rsp, 100h
__text:000000010000969B                 lea     rax, [rbp+var_B0]
__text:00000001000096A2                 mov     [rbp+var_B8], rdi
__text:00000001000096A9                 mov     [rbp+var_C0], rsi
__text:00000001000096B0                 mov     rsi, [rbp+var_B8]
__text:00000001000096B7                 mov     rdi, [rbp+var_C0]
__text:00000001000096BE                 mov     [rbp+var_A0], rax
__text:00000001000096C5                 mov     [rbp+var_A8], 0FFFFFFFFFFFFFFFFh
__text:00000001000096D0                 mov     rax, [rbp+var_A0]
__text:00000001000096D7                 mov     rcx, [rbp+var_A8]
__text:00000001000096DE                 mov     [rbp+var_90], rax
__text:00000001000096E5                 mov     [rbp+var_98], rcx
__text:00000001000096EC                 mov     rax, [rbp+var_90]
__text:00000001000096F3                 mov     qword ptr [rax], 0
__text:00000001000096FA                 mov     rax, [rbp+var_B0]
__text:0000000100009701                 mov     [rbp+var_E8], rdi
__text:0000000100009708                 mov     [rbp+var_F0], rsi
__text:000000010000970F                 mov     [rbp+var_F8], rax
__text:0000000100009716                 lea     rax, [rbp+var_D8]
__text:000000010000971D                 mov     rcx, [rbp+var_F8]
__text:0000000100009724                 mov     [rbp+var_D8], rcx
__text:000000010000972B                 mov     [rbp+var_88], rax
__text:0000000100009732                 mov     rax, [rbp+var_E8]
__text:0000000100009739                 cmp     rax, 0
__text:000000010000973F                 jz      loc_10000981C
__text:0000000100009745                 mov     rax, [rbp+var_C0]
__text:000000010000974C                 mov     rax, [rax]
__text:000000010000974F                 mov     rdi, [rbp+var_F0]
__text:0000000100009756                 mov     rsi, rax
__text:0000000100009759                 call    __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int,int>,void *> *)
__text:000000010000975E                 mov     rax, [rbp+var_C0]
__text:0000000100009765                 mov     rax, [rax+8]
__text:0000000100009769                 mov     rdi, [rbp+var_F0]
__text:0000000100009770                 mov     rsi, rax
__text:0000000100009773                 call    __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE ; std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int,int>,void *> *)
__text:0000000100009778                 mov     rax, [rbp+var_F0]
__text:000000010000977F                 mov     [rbp+var_18], rax
__text:0000000100009783                 mov     rsi, [rbp+var_18]
__text:0000000100009787                 add     rsi, 8
__text:000000010000978E                 mov     [rbp+var_10], rsi
__text:0000000100009792                 mov     rsi, [rbp+var_10]
__text:0000000100009796                 mov     [rbp+var_8], rsi
__text:000000010000979A                 mov     rsi, [rbp+var_8]
__text:000000010000979E                 mov     [rbp+var_E0], rsi
__text:00000001000097A5                 mov     rsi, [rbp+var_E0]
__text:00000001000097AC                 mov     rdi, [rbp+var_C0]
__text:00000001000097B3                 add     rdi, 1Ch
__text:00000001000097BA                 mov     [rbp+var_20], rdi
__text:00000001000097BE                 mov     rdi, [rbp+var_20]
__text:00000001000097C2                 mov     [rbp+var_38], rsi
__text:00000001000097C6                 mov     [rbp+var_40], rdi
__text:00000001000097CA                 mov     rsi, [rbp+var_38]
__text:00000001000097CE                 mov     rdi, [rbp+var_40]
__text:00000001000097D2                 mov     [rbp+var_28], rsi
__text:00000001000097D6                 mov     [rbp+var_30], rdi
__text:00000001000097DA                 mov     rax, [rbp+var_E0]
__text:00000001000097E1                 mov     rcx, [rbp+var_C0]
__text:00000001000097E8                 mov     [rbp+var_70], rax
__text:00000001000097EC                 mov     [rbp+var_78], rcx
__text:00000001000097F0                 mov     [rbp+var_80], 1
__text:00000001000097F8                 mov     rax, [rbp+var_70]
__text:00000001000097FC                 mov     rcx, [rbp+var_78]
__text:0000000100009800                 mov     rdx, [rbp+var_80]
__text:0000000100009804                 mov     [rbp+var_58], rax
__text:0000000100009808                 mov     [rbp+var_60], rcx
__text:000000010000980C                 mov     [rbp+var_68], rdx
__text:0000000100009810                 mov     rax, [rbp+var_60]
__text:0000000100009814                 mov     rdi, rax        ; void *
__text:0000000100009817                 call    __ZdlPv         ; operator delete(void *)
__text:000000010000981C
__text:000000010000981C loc_10000981C:                          ; CODE XREF: std::__1::__tree<std::__1::__value_type<int,int>,std::__1::__map_value_compare<int,std::__1::__value_type<int,int>,std::__1::less<int>,true>,std::__1::allocator<std::__1::__value_type<int,int>>>::destroy(std::__1::__tree_node<std::__1::__value_type<int,int>,void *> *)+AF↑j
__text:000000010000981C                 add     rsp, 100h
__text:0000000100009823                 pop     rbp
__text:0000000100009824                 retn
__text:0000000100009824 __ZNSt3__16__treeINS_12__value_typeIiiEENS_19__map_value_compareIiS2_NS_4lessIiEELb1EEENS_9allocatorIS2_EEE7destroyEPNS_11__tree_nodeIS2_PvEE endp
__text:0000000100009824
__text:0000000100009824 __text          ends
__text:0000000100009824