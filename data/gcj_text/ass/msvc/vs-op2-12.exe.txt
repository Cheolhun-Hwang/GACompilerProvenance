.text:00401000 ; =============== S U B R O U T I N E =======================================
.text:00401000
.text:00401000 ; Attributes: bp-based frame
.text:00401000
.text:00401000 ; int __cdecl main(int argc, const char **argv, const char **envp)
.text:00401000 _main           proc near               ; CODE XREF: ___tmainCRTStartup+11D↓p
.text:00401000
.text:00401000 var_C           = dword ptr -0Ch
.text:00401000 var_8           = dword ptr -8
.text:00401000 var_4           = dword ptr -4
.text:00401000 argc            = dword ptr  8
.text:00401000 argv            = dword ptr  0Ch
.text:00401000 envp            = dword ptr  10h
.text:00401000
.text:00401000                 push    ebp
.text:00401001                 mov     ebp, esp
.text:00401003                 sub     esp, 0Ch
.text:00401006                 push    edi
.text:00401007                 lea     eax, [ebp+var_C]
.text:0040100A                 push    eax
.text:0040100B                 push    offset Format   ; "%d"
.text:00401010                 call    ds:scanf
.text:00401016                 mov     edi, 1
.text:0040101B                 add     esp, 8
.text:0040101E                 mov     [ebp+var_8], edi
.text:00401021                 cmp     [ebp+var_C], edi
.text:00401024                 jl      loc_401121
.text:0040102A                 push    ebx
.text:0040102B                 push    esi
.text:0040102C                 lea     esp, [esp+0]
.text:00401030
.text:00401030 loc_401030:                             ; CODE XREF: _main+119↓j
.text:00401030                 push    offset dword_403370
.text:00401035                 push    offset dword_403378
.text:0040103A                 push    offset aDD      ; "%d%d"
.text:0040103F                 call    ds:scanf
.text:00401045                 mov     edx, dword_403378
.text:0040104B                 add     esp, 0Ch
.text:0040104E                 mov     esi, 1
.text:00401053                 cmp     edx, 0Ah
.text:00401056                 jl      short loc_40106B
.text:00401058                 mov     eax, 0Ah
.text:0040105D                 lea     ecx, [ecx+0]
.text:00401060
.text:00401060 loc_401060:                             ; CODE XREF: _main+69↓j
.text:00401060                 mov     esi, eax
.text:00401062                 lea     eax, [esi+esi*4]
.text:00401065                 add     eax, eax
.text:00401067                 cmp     eax, edx
.text:00401069                 jle     short loc_401060
.text:0040106B
.text:0040106B loc_40106B:                             ; CODE XREF: _main+56↑j
.text:0040106B                 mov     ebx, edx
.text:0040106D                 mov     [ebp+var_4], 0
.text:00401074                 cmp     ebx, dword_403370
.text:0040107A                 jg      loc_4010FA
.text:00401080                 jmp     short loc_401088
.text:00401082 ; ---------------------------------------------------------------------------
.text:00401082
.text:00401082 loc_401082:                             ; CODE XREF: _main+F5↓j
.text:00401082                 mov     edx, dword_403378
.text:00401088
.text:00401088 loc_401088:                             ; CODE XREF: _main+80↑j
.text:00401088                 mov     eax, dword_403374
.text:0040108D                 inc     eax
.text:0040108E                 mov     dword_403374, eax
.text:00401093                 mov     ecx, ebx
.text:00401095                 mov     edi, 0Ah
.text:0040109A                 jmp     short loc_4010AB
.text:0040109A ; ---------------------------------------------------------------------------
.text:0040109C                 align 10h
.text:004010A0
.text:004010A0 loc_4010A0:                             ; CODE XREF: _main+EC↓j
.text:004010A0                 mov     edx, dword_403378
.text:004010A6                 mov     eax, dword_403374
.text:004010AB
.text:004010AB loc_4010AB:                             ; CODE XREF: _main+9A↑j
.text:004010AB                 cmp     ecx, edx
.text:004010AD                 jl      short loc_4010CE
.text:004010AF                 cmp     ecx, dword_403370
.text:004010B5                 jg      short loc_4010CE
.text:004010B7                 cmp     ecx, ebx
.text:004010B9                 jz      short loc_4010CE
.text:004010BB                 cmp     dword_403380[ecx*4], eax
.text:004010C2                 jz      short loc_4010CE
.text:004010C4                 inc     [ebp+var_4]
.text:004010C7                 mov     dword_403380[ecx*4], eax
.text:004010CE
.text:004010CE loc_4010CE:                             ; CODE XREF: _main+AD↑j
.text:004010CE                                         ; _main+B5↑j ...
.text:004010CE                 mov     eax, 66666667h
.text:004010D3                 imul    ecx
.text:004010D5                 sar     edx, 2
.text:004010D8                 mov     eax, edx
.text:004010DA                 shr     eax, 1Fh
.text:004010DD                 add     eax, edx
.text:004010DF                 lea     edx, [eax+eax*4]
.text:004010E2                 add     edx, edx
.text:004010E4                 sub     ecx, edx
.text:004010E6                 imul    ecx, esi
.text:004010E9                 add     ecx, eax
.text:004010EB                 dec     edi
.text:004010EC                 jnz     short loc_4010A0
.text:004010EE                 inc     ebx
.text:004010EF                 cmp     ebx, dword_403370
.text:004010F5                 jle     short loc_401082
.text:004010F7                 mov     edi, [ebp+var_8]
.text:004010FA
.text:004010FA loc_4010FA:                             ; CODE XREF: _main+7A↑j
.text:004010FA                 mov     eax, [ebp+var_4]
.text:004010FD                 cdq
.text:004010FE                 sub     eax, edx
.text:00401100                 sar     eax, 1
.text:00401102                 push    eax
.text:00401103                 push    edi
.text:00401104                 push    offset aCaseDD  ; "Case #%d: %d\n"
.text:00401109                 call    ds:printf
.text:0040110F                 inc     edi
.text:00401110                 add     esp, 0Ch
.text:00401113                 mov     [ebp+var_8], edi
.text:00401116                 cmp     edi, [ebp+var_C]
.text:00401119                 jle     loc_401030
.text:0040111F                 pop     esi
.text:00401120                 pop     ebx
.text:00401121
.text:00401121 loc_401121:                             ; CODE XREF: _main+24↑j
.text:00401121                 xor     eax, eax
.text:00401123                 pop     edi
.text:00401124                 mov     esp, ebp
.text:00401126                 pop     ebp
.text:00401127                 retn
.text:00401127 _main           endp
.text:00401127
.text:00401128 ; [0000000F BYTES: COLLAPSED FUNCTION __security_check_cookie(x). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401137 ; [0000004B BYTES: COLLAPSED FUNCTION _pre_cpp_init. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401182 ; [00000189 BYTES: COLLAPSED FUNCTION ___tmainCRTStartup. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0040130B ; [000000BA BYTES: COLLAPSED FUNCTION _pre_c_init. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004013C5 ; [0000000A BYTES: COLLAPSED FUNCTION start. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004013CF ; [00000106 BYTES: COLLAPSED FUNCTION ___report_gsfailure. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004014D5 ; [00000042 BYTES: COLLAPSED FUNCTION __CxxUnhandledExceptionFilter(_EXCEPTION_POINTERS *). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401517
.text:00401517 ; =============== S U B R O U T I N E =======================================
.text:00401517
.text:00401517
.text:00401517 sub_401517      proc near               ; DATA XREF: .rdata:004020C0↓o
.text:00401517                 push    offset ?__CxxUnhandledExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z ; lpTopLevelExceptionFilter
.text:0040151C                 call    ds:SetUnhandledExceptionFilter
.text:00401522                 xor     eax, eax
.text:00401524                 retn
.text:00401524 sub_401517      endp
.text:00401524
.text:00401524 ; ---------------------------------------------------------------------------
.text:00401525                 align 2
.text:00401526 ; [00000006 BYTES: COLLAPSED FUNCTION _amsg_exit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0040152C ; [000000A1 BYTES: COLLAPSED FUNCTION __onexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004015CD ; [00000017 BYTES: COLLAPSED FUNCTION _atexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004015E4
.text:004015E4 ; =============== S U B R O U T I N E =======================================
.text:004015E4
.text:004015E4
.text:004015E4 sub_4015E4      proc near               ; CODE XREF: _pre_c_init+81↑p
.text:004015E4                 mov     edi, edi
.text:004015E6                 push    esi
.text:004015E7                 mov     eax, offset unk_4021E8
.text:004015EC                 mov     esi, offset unk_4021E8
.text:004015F1                 push    edi
.text:004015F2                 mov     edi, eax
.text:004015F4                 cmp     eax, esi
.text:004015F6                 jnb     short loc_401607
.text:004015F8
.text:004015F8 loc_4015F8:                             ; CODE XREF: sub_4015E4+21↓j
.text:004015F8                 mov     eax, [edi]
.text:004015FA                 test    eax, eax
.text:004015FC                 jz      short loc_401600
.text:004015FE                 call    eax
.text:00401600
.text:00401600 loc_401600:                             ; CODE XREF: sub_4015E4+18↑j
.text:00401600                 add     edi, 4
.text:00401603                 cmp     edi, esi
.text:00401605                 jb      short loc_4015F8
.text:00401607
.text:00401607 loc_401607:                             ; CODE XREF: sub_4015E4+12↑j
.text:00401607                 pop     edi
.text:00401608                 pop     esi
.text:00401609                 retn
.text:00401609 sub_4015E4      endp
.text:00401609
.text:0040160A
.text:0040160A ; =============== S U B R O U T I N E =======================================
.text:0040160A
.text:0040160A
.text:0040160A ; void __cdecl sub_40160A()
.text:0040160A sub_40160A      proc near               ; DATA XREF: _pre_cpp_init↑o
.text:0040160A                 mov     edi, edi
.text:0040160C                 push    esi
.text:0040160D                 mov     eax, offset unk_4021F0
.text:00401612                 mov     esi, offset unk_4021F0
.text:00401617                 push    edi
.text:00401618                 mov     edi, eax
.text:0040161A                 cmp     eax, esi
.text:0040161C                 jnb     short loc_40162D
.text:0040161E
.text:0040161E loc_40161E:                             ; CODE XREF: sub_40160A+21↓j
.text:0040161E                 mov     eax, [edi]
.text:00401620                 test    eax, eax
.text:00401622                 jz      short loc_401626
.text:00401624                 call    eax
.text:00401626
.text:00401626 loc_401626:                             ; CODE XREF: sub_40160A+18↑j
.text:00401626                 add     edi, 4
.text:00401629                 cmp     edi, esi
.text:0040162B                 jb      short loc_40161E
.text:0040162D
.text:0040162D loc_40162D:                             ; CODE XREF: sub_40160A+12↑j
.text:0040162D                 pop     edi
.text:0040162E                 pop     esi
.text:0040162F                 retn
.text:0040162F sub_40160A      endp
.text:0040162F
.text:00401630 ; [00000006 BYTES: COLLAPSED FUNCTION _XcptFilter. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401636                 align 10h
.text:00401640 ; [00000035 BYTES: COLLAPSED FUNCTION __ValidateImageBase. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401675                 align 10h
.text:00401680 ; [00000044 BYTES: COLLAPSED FUNCTION __FindPESection. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004016C4                 align 10h
.text:004016D0 ; [000000BC BYTES: COLLAPSED FUNCTION __IsNonwritableInCurrentImage. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0040178C ; [00000006 BYTES: COLLAPSED FUNCTION _initterm. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401792 ; [00000006 BYTES: COLLAPSED FUNCTION _initterm_e. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401798                 align 10h
.text:004017A0 ; [00000045 BYTES: COLLAPSED FUNCTION __SEH_prolog4. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004017E5 ; [00000014 BYTES: COLLAPSED FUNCTION __SEH_epilog4. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004017F9 ; [00000025 BYTES: COLLAPSED FUNCTION __except_handler4. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0040181E ; [00000028 BYTES: COLLAPSED FUNCTION __setdefaultprecision. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401846
.text:00401846 ; =============== S U B R O U T I N E =======================================
.text:00401846
.text:00401846
.text:00401846 sub_401846      proc near               ; CODE XREF: _pre_c_init+86↑p
.text:00401846                                         ; DATA XREF: _pre_c_init+94↑o
.text:00401846                 xor     eax, eax
.text:00401848                 retn
.text:00401848 sub_401846      endp
.text:00401848
.text:00401849 ; [0000009B BYTES: COLLAPSED FUNCTION ___security_init_cookie. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004018E4 ; [00000006 BYTES: COLLAPSED FUNCTION _crt_debugger_hook. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004018EA ; [00000006 BYTES: COLLAPSED FUNCTION terminate(void). PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004018F0 ; [00000006 BYTES: COLLAPSED FUNCTION _unlock. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004018F6 ; [00000006 BYTES: COLLAPSED FUNCTION __dllonexit. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:004018FC ; [00000006 BYTES: COLLAPSED FUNCTION _lock. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401902 ; [00000006 BYTES: COLLAPSED FUNCTION _except_handler4_common. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401908 ; [00000006 BYTES: COLLAPSED FUNCTION _invoke_watson. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:0040190E ; [00000006 BYTES: COLLAPSED FUNCTION _controlfp_s. PRESS CTRL-NUMPAD+ TO EXPAND]
.text:00401914                 align 100h
.text:00401A00                 dd 180h dup(?)
.text:00401A00 _text           ends
.text:00401A00