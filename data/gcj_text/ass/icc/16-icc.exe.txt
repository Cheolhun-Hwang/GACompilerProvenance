.text:0000000000400DF0 ; =============== S U B R O U T I N E =======================================
.text:0000000000400DF0
.text:0000000000400DF0 ; Attributes: noreturn fuzzy-sp
.text:0000000000400DF0
.text:0000000000400DF0                 public _start
.text:0000000000400DF0 _start          proc near               ; DATA XREF: LOAD:0000000000400018↑o
.text:0000000000400DF0                 xor     ebp, ebp
.text:0000000000400DF2                 mov     r9, rdx         ; rtld_fini
.text:0000000000400DF5                 pop     rsi             ; argc
.text:0000000000400DF6                 mov     rdx, rsp        ; ubp_av
.text:0000000000400DF9                 and     rsp, 0FFFFFFFFFFFFFFF0h
.text:0000000000400DFD                 push    rax
.text:0000000000400DFE                 push    rsp             ; stack_end
.text:0000000000400DFF                 mov     r8, offset __libc_csu_fini ; fini
.text:0000000000400E06                 mov     rcx, offset __libc_csu_init ; init
.text:0000000000400E0D                 mov     rdi, offset main ; main
.text:0000000000400E14                 call    ___libc_start_main
.text:0000000000400E19                 hlt
.text:0000000000400E19 _start          endp
.text:0000000000400E19
.text:0000000000400E19 ; ---------------------------------------------------------------------------
.text:0000000000400E1A                 align 4
.text:0000000000400E1C
.text:0000000000400E1C ; =============== S U B R O U T I N E =======================================
.text:0000000000400E1C
.text:0000000000400E1C
.text:0000000000400E1C call_gmon_start proc near               ; CODE XREF: _init_proc+4↑p
.text:0000000000400E1C                 sub     rsp, 8
.text:0000000000400E20                 mov     rax, cs:__gmon_start___ptr
.text:0000000000400E27                 test    rax, rax
.text:0000000000400E2A                 jz      short loc_400E2E
.text:0000000000400E2C                 call    rax ; __gmon_start__
.text:0000000000400E2E
.text:0000000000400E2E loc_400E2E:                             ; CODE XREF: call_gmon_start+E↑j
.text:0000000000400E2E                 add     rsp, 8
.text:0000000000400E32                 retn
.text:0000000000400E32 call_gmon_start endp
.text:0000000000400E32
.text:0000000000400E32 ; ---------------------------------------------------------------------------
.text:0000000000400E33                 align 20h
.text:0000000000400E40
.text:0000000000400E40 ; =============== S U B R O U T I N E =======================================
.text:0000000000400E40
.text:0000000000400E40 ; Attributes: bp-based frame
.text:0000000000400E40
.text:0000000000400E40 __do_global_dtors_aux proc near         ; CODE XREF: _term_proc+4↓p
.text:0000000000400E40                 push    rbp
.text:0000000000400E41                 mov     rbp, rsp
.text:0000000000400E44                 push    rbx
.text:0000000000400E45                 sub     rsp, 8
.text:0000000000400E49                 cmp     cs:completed_6531, 0
.text:0000000000400E50                 jnz     short loc_400E9D
.text:0000000000400E52                 mov     ebx, offset __DTOR_END__
.text:0000000000400E57                 mov     rax, cs:dtor_idx_6533
.text:0000000000400E5E                 sub     rbx, offset __DTOR_LIST__
.text:0000000000400E65                 sar     rbx, 3
.text:0000000000400E69                 sub     rbx, 1
.text:0000000000400E6D                 cmp     rax, rbx
.text:0000000000400E70                 jnb     short loc_400E96
.text:0000000000400E72                 nop     word ptr [rax+rax+00h]
.text:0000000000400E78
.text:0000000000400E78 loc_400E78:                             ; CODE XREF: __do_global_dtors_aux+54↓j
.text:0000000000400E78                 add     rax, 1
.text:0000000000400E7C                 mov     cs:dtor_idx_6533, rax
.text:0000000000400E83                 call    ds:__DTOR_LIST__[rax*8]
.text:0000000000400E8A                 mov     rax, cs:dtor_idx_6533
.text:0000000000400E91                 cmp     rax, rbx
.text:0000000000400E94                 jb      short loc_400E78
.text:0000000000400E96
.text:0000000000400E96 loc_400E96:                             ; CODE XREF: __do_global_dtors_aux+30↑j
.text:0000000000400E96                 mov     cs:completed_6531, 1
.text:0000000000400E9D
.text:0000000000400E9D loc_400E9D:                             ; CODE XREF: __do_global_dtors_aux+10↑j
.text:0000000000400E9D                 add     rsp, 8
.text:0000000000400EA1                 pop     rbx
.text:0000000000400EA2                 pop     rbp
.text:0000000000400EA3                 retn
.text:0000000000400EA3 __do_global_dtors_aux endp
.text:0000000000400EA3
.text:0000000000400EA3 ; ---------------------------------------------------------------------------
.text:0000000000400EA4                 align 10h
.text:0000000000400EB0
.text:0000000000400EB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000400EB0
.text:0000000000400EB0 ; Attributes: bp-based frame
.text:0000000000400EB0
.text:0000000000400EB0 frame_dummy     proc near               ; CODE XREF: _init_proc+9↑p
.text:0000000000400EB0                 cmp     cs:__JCR_LIST__, 0
.text:0000000000400EB8                 push    rbp
.text:0000000000400EB9                 mov     rbp, rsp
.text:0000000000400EBC                 jz      short loc_400ED0
.text:0000000000400EBE                 mov     eax, 0
.text:0000000000400EC3                 test    rax, rax
.text:0000000000400EC6                 jz      short loc_400ED0
.text:0000000000400EC8                 pop     rbp
.text:0000000000400EC9                 mov     edi, offset __JCR_LIST__
.text:0000000000400ECE                 jmp     rax
.text:0000000000400ED0 ; ---------------------------------------------------------------------------
.text:0000000000400ED0
.text:0000000000400ED0 loc_400ED0:                             ; CODE XREF: frame_dummy+C↑j
.text:0000000000400ED0                                         ; frame_dummy+16↑j
.text:0000000000400ED0                 pop     rbp
.text:0000000000400ED1                 retn
.text:0000000000400ED1 frame_dummy     endp
.text:0000000000400ED1
.text:0000000000400ED1 ; ---------------------------------------------------------------------------
.text:0000000000400ED2                 align 20h
.text:0000000000400EE0
.text:0000000000400EE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000400EE0
.text:0000000000400EE0 ; Attributes: bp-based frame fuzzy-sp
.text:0000000000400EE0
.text:0000000000400EE0 ; int __cdecl main(int argc, const char **argv, const char **envp)
.text:0000000000400EE0                 public main
.text:0000000000400EE0 main            proc near               ; DATA XREF: _start+1D↑o
.text:0000000000400EE0
.text:0000000000400EE0 var_100         = qword ptr -100h
.text:0000000000400EE0 var_F8          = qword ptr -0F8h
.text:0000000000400EE0 var_F0          = qword ptr -0F0h
.text:0000000000400EE0 var_E8          = qword ptr -0E8h
.text:0000000000400EE0 var_E0          = qword ptr -0E0h
.text:0000000000400EE0 var_D8          = dword ptr -0D8h
.text:0000000000400EE0 var_D4          = dword ptr -0D4h
.text:0000000000400EE0 var_D0          = qword ptr -0D0h
.text:0000000000400EE0 var_C8          = qword ptr -0C8h
.text:0000000000400EE0 var_C0          = dword ptr -0C0h
.text:0000000000400EE0 var_B8          = qword ptr -0B8h
.text:0000000000400EE0 var_B0          = qword ptr -0B0h
.text:0000000000400EE0 var_A8          = qword ptr -0A8h
.text:0000000000400EE0 var_A0          = qword ptr -0A0h
.text:0000000000400EE0 var_98          = qword ptr -98h
.text:0000000000400EE0 var_90          = qword ptr -90h
.text:0000000000400EE0 var_88          = qword ptr -88h
.text:0000000000400EE0 var_80          = qword ptr -80h
.text:0000000000400EE0
.text:0000000000400EE0 ; __unwind { // ___gxx_personality_v0
.text:0000000000400EE0                 push    rbp
.text:0000000000400EE1                 mov     rbp, rsp
.text:0000000000400EE4                 and     rsp, 0FFFFFFFFFFFFFF80h
.text:0000000000400EE8                 sub     rsp, 100h
.text:0000000000400EEF                 mov     rsi, 0
.text:0000000000400EF9                 mov     edi, 3
.text:0000000000400EFE                 call    __intel_new_feature_proc_init
.text:0000000000400F03                 stmxcsr [rsp+100h+var_D8]
.text:0000000000400F08                 mov     edi, offset _ZSt3cin@@GLIBCXX_3_4
.text:0000000000400F0D                 lea     rsi, [rsp+100h+var_D4]
.text:0000000000400F12                 or      [rsp+100h+var_D8], 8040h
.text:0000000000400F1A                 ldmxcsr [rsp+100h+var_D8]
.text:0000000000400F1F                 call    __ZNSirsERi     ; std::istream::operator>>(int &)
.text:0000000000400F24                 mov     esi, 1
.text:0000000000400F29                 cmp     [rsp+100h+var_D4], 0
.text:0000000000400F2E                 jle     loc_4013EF
.text:0000000000400F34                 mov     [rsp+100h+var_E0], r12
.text:0000000000400F39                 mov     [rsp+100h+var_100], r13
.text:0000000000400F3D                 mov     [rsp+100h+var_F8], r14
.text:0000000000400F42                 mov     r14d, esi
.text:0000000000400F45                 mov     [rsp+100h+var_F0], r15
.text:0000000000400F4A                 mov     [rsp+100h+var_E8], rbx
.text:0000000000400F4F
.text:0000000000400F4F loc_400F4F:                             ; CODE XREF: main+4F1↓j
.text:0000000000400F4F                 mov     edi, offset format ; "%d"
.text:0000000000400F54                 mov     esi, offset n
.text:0000000000400F59                 xor     eax, eax
.text:0000000000400F5B                 call    _scanf
.text:0000000000400F60                 movsxd  rax, cs:n
.text:0000000000400F67                 xor     r12d, r12d
.text:0000000000400F6A                 mov     ebx, offset x
.text:0000000000400F6F                 test    rax, rax
.text:0000000000400F72                 jle     short loc_400F96
.text:0000000000400F74
.text:0000000000400F74 loc_400F74:                             ; CODE XREF: main+B4↓j
.text:0000000000400F74                 mov     edi, offset format ; "%d"
.text:0000000000400F79                 mov     rsi, rbx
.text:0000000000400F7C                 xor     eax, eax
.text:0000000000400F7E                 call    _scanf
.text:0000000000400F83                 inc     r12
.text:0000000000400F86                 add     rbx, 4
.text:0000000000400F8A                 movsxd  rax, cs:n
.text:0000000000400F91                 cmp     r12, rax
.text:0000000000400F94                 jl      short loc_400F74
.text:0000000000400F96
.text:0000000000400F96 loc_400F96:                             ; CODE XREF: main+92↑j
.text:0000000000400F96                 mov     rdx, cs:v
.text:0000000000400F9D                 xor     r13d, r13d
.text:0000000000400FA0                 mov     rdi, cs:w
.text:0000000000400FA7                 mov     rsi, rdi
.text:0000000000400FAA                 mov     cs:qword_60F6E8, rdx
.text:0000000000400FB1                 xor     r12d, r12d
.text:0000000000400FB4                 mov     cs:qword_60F700, rdi
.text:0000000000400FBB                 mov     ebx, offset y
.text:0000000000400FC0                 test    rax, rax
.text:0000000000400FC3                 jle     loc_401308
.text:0000000000400FC9                 mov     [rsp+100h+var_C0], r14d
.text:0000000000400FCE
.text:0000000000400FCE loc_400FCE:                             ; CODE XREF: main+40F↓j
.text:0000000000400FCE                 mov     edi, offset format ; "%d"
.text:0000000000400FD3                 mov     rsi, rbx
.text:0000000000400FD6                 xor     eax, eax
.text:0000000000400FD8                 call    _scanf
.text:0000000000400FDD                 cmp     ds:y[r12], 0
.text:0000000000400FE6                 jnz     loc_401161
.text:0000000000400FEC                 mov     rcx, cs:qword_60F6E8
.text:0000000000400FF3                 cmp     rcx, cs:qword_60F6F0
.text:0000000000400FFA                 jnz     loc_401142
.text:0000000000401000                 mov     rax, rcx
.text:0000000000401003                 mov     rdx, cs:v
.text:000000000040100A                 sub     rax, rdx
.text:000000000040100D                 sar     rax, 2
.text:0000000000401011                 mov     r14d, 1
.text:0000000000401017                 cmp     rax, 1
.text:000000000040101B                 cmova   r14, rax
.text:000000000040101F                 add     r14, rax
.text:0000000000401022                 cmp     r14, rax
.text:0000000000401025                 jb      short loc_401044
.text:0000000000401027                 mov     rax, 3FFFFFFFFFFFFFFFh
.text:0000000000401031                 cmp     r14, rax
.text:0000000000401034                 ja      short loc_401044
.text:0000000000401036                 test    r14, r14
.text:0000000000401039                 jnz     short loc_40104E
.text:000000000040103B                 shl     r14, 2
.text:000000000040103F                 xor     r15d, r15d
.text:0000000000401042                 jmp     short loc_401071
.text:0000000000401044 ; ---------------------------------------------------------------------------
.text:0000000000401044
.text:0000000000401044 loc_401044:                             ; CODE XREF: main+145↑j
.text:0000000000401044                                         ; main+154↑j
.text:0000000000401044                 mov     r14, 3FFFFFFFFFFFFFFFh
.text:000000000040104E
.text:000000000040104E loc_40104E:                             ; CODE XREF: main+159↑j
.text:000000000040104E                 shl     r14, 2
.text:0000000000401052                 mov     rdi, r14        ; unsigned __int64
.text:0000000000401055                 mov     [rsp+100h+var_D0], rdx
.text:000000000040105A                 mov     [rsp+100h+var_B8], rcx
.text:000000000040105F                 call    __Znwm          ; operator new(ulong)
.text:0000000000401064                 mov     rcx, [rsp+100h+var_B8]
.text:0000000000401069                 mov     r15, rax
.text:000000000040106C                 mov     rdx, [rsp+100h+var_D0]
.text:0000000000401071
.text:0000000000401071 loc_401071:                             ; CODE XREF: main+162↑j
.text:0000000000401071                 neg     rdx
.text:0000000000401074                 add     rdx, rcx
.text:0000000000401077                 and     rdx, 0FFFFFFFFFFFFFFFCh
.text:000000000040107B                 add     rdx, r15
.text:000000000040107E                 jz      short loc_401083
.text:0000000000401080                 mov     [rdx], r13d
.text:0000000000401083
.text:0000000000401083 loc_401083:                             ; CODE XREF: main+19E↑j
.text:0000000000401083                 mov     rax, rcx
.text:0000000000401086                 mov     rsi, cs:v
.text:000000000040108D                 sub     rax, rsi
.text:0000000000401090                 sar     rax, 2
.text:0000000000401094                 test    rax, rax
.text:0000000000401097                 jz      short loc_4010BD
.text:0000000000401099                 mov     rdi, r15
.text:000000000040109C                 lea     rdx, ds:0[rax*4]
.text:00000000004010A4                 mov     [rsp+100h+var_B0], rax
.text:00000000004010A9                 mov     [rsp+100h+var_B8], rcx
.text:00000000004010AE                 call    _intel_fast_memmove
.text:00000000004010B3                 mov     rcx, [rsp+100h+var_B8]
.text:00000000004010B8                 mov     rax, [rsp+100h+var_B0]
.text:00000000004010BD
.text:00000000004010BD loc_4010BD:                             ; CODE XREF: main+1B7↑j
.text:00000000004010BD                 mov     r8, cs:qword_60F6E8
.text:00000000004010C4                 lea     rax, [r15+rax*4+4]
.text:00000000004010C9                 sub     r8, rcx
.text:00000000004010CC                 sar     r8, 2
.text:00000000004010D0                 test    r8, r8
.text:00000000004010D3                 jz      short loc_4010FC
.text:00000000004010D5                 mov     rdi, rax
.text:00000000004010D8                 lea     rdx, ds:0[r8*4]
.text:00000000004010E0                 mov     rsi, rcx
.text:00000000004010E3                 mov     [rsp+100h+var_98], rax
.text:00000000004010E8                 mov     [rsp+100h+var_90], r8
.text:00000000004010ED                 call    _intel_fast_memmove
.text:00000000004010F2                 mov     r8, [rsp+100h+var_90]
.text:00000000004010F7                 mov     rax, [rsp+100h+var_98]
.text:00000000004010FC
.text:00000000004010FC loc_4010FC:                             ; CODE XREF: main+1F3↑j
.text:00000000004010FC                 mov     rdi, cs:v       ; void *
.text:0000000000401103                 test    rdi, rdi
.text:0000000000401106                 jz      short loc_401121
.text:0000000000401108                 mov     [rsp+100h+var_98], rax
.text:000000000040110D                 mov     [rsp+100h+var_90], r8
.text:0000000000401112                 call    __ZdlPv         ; operator delete(void *)
.text:0000000000401117                 mov     r8, [rsp+100h+var_90]
.text:000000000040111C                 mov     rax, [rsp+100h+var_98]
.text:0000000000401121
.text:0000000000401121 loc_401121:                             ; CODE XREF: main+226↑j
.text:0000000000401121                 add     r14, r15
.text:0000000000401124                 lea     rax, [rax+r8*4]
.text:0000000000401128                 mov     cs:v, r15
.text:000000000040112F                 mov     cs:qword_60F6E8, rax
.text:0000000000401136                 mov     cs:qword_60F6F0, r14
.text:000000000040113D                 jmp     loc_4012DA
.text:0000000000401142 ; ---------------------------------------------------------------------------
.text:0000000000401142
.text:0000000000401142 loc_401142:                             ; CODE XREF: main+11A↑j
.text:0000000000401142                 test    rcx, rcx
.text:0000000000401145                 jz      short loc_401151
.text:0000000000401147                 mov     [rcx], r13d
.text:000000000040114A                 mov     rcx, cs:qword_60F6E8
.text:0000000000401151
.text:0000000000401151 loc_401151:                             ; CODE XREF: main+265↑j
.text:0000000000401151                 add     rcx, 4
.text:0000000000401155                 mov     cs:qword_60F6E8, rcx
.text:000000000040115C                 jmp     loc_4012DA
.text:0000000000401161 ; ---------------------------------------------------------------------------
.text:0000000000401161
.text:0000000000401161 loc_401161:                             ; CODE XREF: main+106↑j
.text:0000000000401161                 mov     rcx, cs:qword_60F700
.text:0000000000401168                 cmp     rcx, cs:qword_60F708
.text:000000000040116F                 jnz     loc_4012C0
.text:0000000000401175                 mov     rax, rcx
.text:0000000000401178                 mov     rdx, cs:w
.text:000000000040117F                 sub     rax, rdx
.text:0000000000401182                 sar     rax, 2
.text:0000000000401186                 mov     r14d, 1
.text:000000000040118C                 cmp     rax, 1
.text:0000000000401190                 cmova   r14, rax
.text:0000000000401194                 add     r14, rax
.text:0000000000401197                 cmp     r14, rax
.text:000000000040119A                 jb      short loc_4011B9
.text:000000000040119C                 mov     rax, 3FFFFFFFFFFFFFFFh
.text:00000000004011A6                 cmp     r14, rax
.text:00000000004011A9                 ja      short loc_4011B9
.text:00000000004011AB                 test    r14, r14
.text:00000000004011AE                 jnz     short loc_4011C3
.text:00000000004011B0                 shl     r14, 2
.text:00000000004011B4                 xor     r15d, r15d
.text:00000000004011B7                 jmp     short loc_4011E6
.text:00000000004011B9 ; ---------------------------------------------------------------------------
.text:00000000004011B9
.text:00000000004011B9 loc_4011B9:                             ; CODE XREF: main+2BA↑j
.text:00000000004011B9                                         ; main+2C9↑j
.text:00000000004011B9                 mov     r14, 3FFFFFFFFFFFFFFFh
.text:00000000004011C3
.text:00000000004011C3 loc_4011C3:                             ; CODE XREF: main+2CE↑j
.text:00000000004011C3                 shl     r14, 2
.text:00000000004011C7                 mov     rdi, r14        ; unsigned __int64
.text:00000000004011CA                 mov     [rsp+100h+var_C8], rdx
.text:00000000004011CF                 mov     [rsp+100h+var_A8], rcx
.text:00000000004011D4                 call    __Znwm          ; operator new(ulong)
.text:00000000004011D9                 mov     rcx, [rsp+100h+var_A8]
.text:00000000004011DE                 mov     r15, rax
.text:00000000004011E1                 mov     rdx, [rsp+100h+var_C8]
.text:00000000004011E6
.text:00000000004011E6 loc_4011E6:                             ; CODE XREF: main+2D7↑j
.text:00000000004011E6                 neg     rdx
.text:00000000004011E9                 add     rdx, rcx
.text:00000000004011EC                 and     rdx, 0FFFFFFFFFFFFFFFCh
.text:00000000004011F0                 add     rdx, r15
.text:00000000004011F3                 jz      short loc_4011F8
.text:00000000004011F5                 mov     [rdx], r13d
.text:00000000004011F8
.text:00000000004011F8 loc_4011F8:                             ; CODE XREF: main+313↑j
.text:00000000004011F8                 mov     rax, rcx
.text:00000000004011FB                 mov     rsi, cs:w
.text:0000000000401202                 sub     rax, rsi
.text:0000000000401205                 sar     rax, 2
.text:0000000000401209                 test    rax, rax
.text:000000000040120C                 jz      short loc_401232
.text:000000000040120E                 mov     rdi, r15
.text:0000000000401211                 lea     rdx, ds:0[rax*4]
.text:0000000000401219                 mov     [rsp+100h+var_A0], rax
.text:000000000040121E                 mov     [rsp+100h+var_A8], rcx
.text:0000000000401223                 call    _intel_fast_memmove
.text:0000000000401228                 mov     rcx, [rsp+100h+var_A8]
.text:000000000040122D                 mov     rax, [rsp+100h+var_A0]
.text:0000000000401232
.text:0000000000401232 loc_401232:                             ; CODE XREF: main+32C↑j
.text:0000000000401232                 mov     r8, cs:qword_60F700
.text:0000000000401239                 lea     rax, [r15+rax*4+4]
.text:000000000040123E                 sub     r8, rcx
.text:0000000000401241                 sar     r8, 2
.text:0000000000401245                 test    r8, r8
.text:0000000000401248                 jz      short loc_401277
.text:000000000040124A                 mov     rdi, rax
.text:000000000040124D                 lea     rdx, ds:0[r8*4]
.text:0000000000401255                 mov     rsi, rcx
.text:0000000000401258                 mov     [rsp+100h+var_88], rax
.text:000000000040125D                 mov     [rsp+100h+var_80], r8
.text:0000000000401265                 call    _intel_fast_memmove
.text:000000000040126A                 mov     r8, [rsp+100h+var_80]
.text:0000000000401272                 mov     rax, [rsp+100h+var_88]
.text:0000000000401277
.text:0000000000401277 loc_401277:                             ; CODE XREF: main+368↑j
.text:0000000000401277                 mov     rdi, cs:w       ; void *
.text:000000000040127E                 test    rdi, rdi
.text:0000000000401281                 jz      short loc_4012A2
.text:0000000000401283                 mov     [rsp+100h+var_88], rax
.text:0000000000401288                 mov     [rsp+100h+var_80], r8
.text:0000000000401290                 call    __ZdlPv         ; operator delete(void *)
.text:0000000000401295                 mov     r8, [rsp+100h+var_80]
.text:000000000040129D                 mov     rax, [rsp+100h+var_88]
.text:00000000004012A2
.text:00000000004012A2 loc_4012A2:                             ; CODE XREF: main+3A1↑j
.text:00000000004012A2                 add     r14, r15
.text:00000000004012A5                 lea     rax, [rax+r8*4]
.text:00000000004012A9                 mov     cs:w, r15
.text:00000000004012B0                 mov     cs:qword_60F700, rax
.text:00000000004012B7                 mov     cs:qword_60F708, r14
.text:00000000004012BE                 jmp     short loc_4012DA
.text:00000000004012C0 ; ---------------------------------------------------------------------------
.text:00000000004012C0
.text:00000000004012C0 loc_4012C0:                             ; CODE XREF: main+28F↑j
.text:00000000004012C0                 test    rcx, rcx
.text:00000000004012C3                 jz      short loc_4012CF
.text:00000000004012C5                 mov     [rcx], r13d
.text:00000000004012C8                 mov     rcx, cs:qword_60F700
.text:00000000004012CF
.text:00000000004012CF loc_4012CF:                             ; CODE XREF: main+3E3↑j
.text:00000000004012CF                 add     rcx, 4
.text:00000000004012D3                 mov     cs:qword_60F700, rcx
.text:00000000004012DA
.text:00000000004012DA loc_4012DA:                             ; CODE XREF: main+25D↑j
.text:00000000004012DA                                         ; main+27C↑j ...
.text:00000000004012DA                 inc     r13
.text:00000000004012DD                 add     rbx, 4
.text:00000000004012E1                 movsxd  rax, cs:n
.text:00000000004012E8                 add     r12, 4
.text:00000000004012EC                 cmp     r13, rax
.text:00000000004012EF                 jl      loc_400FCE
.text:00000000004012F5                 mov     r14d, [rsp+100h+var_C0]
.text:00000000004012FA                 mov     rsi, cs:qword_60F700
.text:0000000000401301                 mov     rdi, cs:w
.text:0000000000401308
.text:0000000000401308 loc_401308:                             ; CODE XREF: main+E3↑j
.text:0000000000401308                 mov     edx, offset _Z2l1ii ; l1(int,int)
.text:000000000040130D                 call    _ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEPFbiiEEvT_S9_T0_ ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))
.text:0000000000401312                 mov     rdi, cs:v
.text:0000000000401319                 mov     rsi, cs:qword_60F6E8
.text:0000000000401320                 call    _ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_ ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)
.text:0000000000401325                 mov     edi, offset _ZSt4cout@@GLIBCXX_3_4
.text:000000000040132A                 mov     esi, offset aCase ; "Case #"
.text:000000000040132F                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:0000000000401334                 mov     rdi, rax
.text:0000000000401337                 mov     esi, r14d
.text:000000000040133A                 call    __ZNSolsEi      ; std::ostream::operator<<(int)
.text:000000000040133F                 mov     rdi, rax
.text:0000000000401342                 mov     esi, offset asc_409B44 ; ": "
.text:0000000000401347                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:000000000040134C                 mov     rax, cs:qword_60F700
.text:0000000000401353                 xor     r12d, r12d
.text:0000000000401356                 mov     rbx, cs:w
.text:000000000040135D                 sub     rax, rbx
.text:0000000000401360                 shr     rax, 2
.text:0000000000401364                 test    eax, eax
.text:0000000000401366                 jle     short loc_401383
.text:0000000000401368                 movsxd  r13, eax
.text:000000000040136B
.text:000000000040136B loc_40136B:                             ; CODE XREF: main+4A1↓j
.text:000000000040136B                 mov     edi, offset aD  ; "%d "
.text:0000000000401370                 xor     eax, eax
.text:0000000000401372                 mov     esi, [rbx+r12*4]
.text:0000000000401376                 call    _printf
.text:000000000040137B                 inc     r12
.text:000000000040137E                 cmp     r12, r13
.text:0000000000401381                 jl      short loc_40136B
.text:0000000000401383
.text:0000000000401383 loc_401383:                             ; CODE XREF: main+486↑j
.text:0000000000401383                 mov     rax, cs:qword_60F6E8
.text:000000000040138A                 xor     r12d, r12d
.text:000000000040138D                 mov     rbx, cs:v
.text:0000000000401394                 sub     rax, rbx
.text:0000000000401397                 shr     rax, 2
.text:000000000040139B                 test    eax, eax
.text:000000000040139D                 jle     short loc_4013BA
.text:000000000040139F                 movsxd  r13, eax
.text:00000000004013A2
.text:00000000004013A2 loc_4013A2:                             ; CODE XREF: main+4D8↓j
.text:00000000004013A2                 mov     edi, offset aD  ; "%d "
.text:00000000004013A7                 xor     eax, eax
.text:00000000004013A9                 mov     esi, [rbx+r12*4]
.text:00000000004013AD                 call    _printf
.text:00000000004013B2                 inc     r12
.text:00000000004013B5                 cmp     r12, r13
.text:00000000004013B8                 jl      short loc_4013A2
.text:00000000004013BA
.text:00000000004013BA loc_4013BA:                             ; CODE XREF: main+4BD↑j
.text:00000000004013BA                 mov     edi, offset _ZSt4cout@@GLIBCXX_3_4
.text:00000000004013BF                 mov     esi, offset __ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ ; std::endl<char,std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &)
.text:00000000004013C4                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:00000000004013C9                 inc     r14d
.text:00000000004013CC                 cmp     r14d, [rsp+100h+var_D4]
.text:00000000004013D1                 jle     loc_400F4F
.text:00000000004013D7                 mov     r12, [rsp+100h+var_E0]
.text:00000000004013DC                 mov     r13, [rsp+100h+var_100]
.text:00000000004013E0                 mov     r14, [rsp+100h+var_F8]
.text:00000000004013E5                 mov     r15, [rsp+100h+var_F0]
.text:00000000004013EA                 mov     rbx, [rsp+100h+var_E8]
.text:00000000004013EF
.text:00000000004013EF loc_4013EF:                             ; CODE XREF: main+4E↑j
.text:00000000004013EF                 xor     eax, eax
.text:00000000004013F1                 mov     rsp, rbp
.text:00000000004013F4                 pop     rbp
.text:00000000004013F5                 retn
.text:00000000004013F5 main            endp
.text:00000000004013F5
.text:00000000004013F5 ; ---------------------------------------------------------------------------
.text:00000000004013F6                 align 20h
.text:00000000004013F6 ; } // starts at 400EE0
.text:0000000000401400
.text:0000000000401400 ; =============== S U B R O U T I N E =======================================
.text:0000000000401400
.text:0000000000401400
.text:0000000000401400 ; __int64 __fastcall l1(int, int)
.text:0000000000401400                 public _Z2l1ii
.text:0000000000401400 _Z2l1ii         proc near               ; DATA XREF: main:loc_401308↑o
.text:0000000000401400 ; __unwind { // ___gxx_personality_v0
.text:0000000000401400                 movsxd  rdi, edi
.text:0000000000401403                 movsxd  rsi, esi
.text:0000000000401406                 mov     eax, ds:y[rdi*4]
.text:000000000040140D                 mov     ecx, ds:y[rsi*4]
.text:0000000000401414                 neg     eax
.text:0000000000401416                 neg     ecx
.text:0000000000401418                 add     eax, 64h ; 'd'
.text:000000000040141B                 add     ecx, 64h ; 'd'
.text:000000000040141E                 mov     r8d, ds:x[rdi*4]
.text:0000000000401426                 mov     edx, ds:x[rsi*4]
.text:000000000040142D                 imul    r9d, r8d, 64h ; 'd'
.text:0000000000401431                 imul    eax, edx
.text:0000000000401434                 imul    r10d, edx, 64h ; 'd'
.text:0000000000401438                 imul    r8d, ecx
.text:000000000040143C                 add     r9d, eax
.text:000000000040143F                 add     r10d, r8d
.text:0000000000401442                 cmp     r9d, r10d
.text:0000000000401445                 jl      short loc_40144E
.text:0000000000401447                 jnz     short loc_401454
.text:0000000000401449                 cmp     rdi, rsi
.text:000000000040144C                 jge     short loc_401454
.text:000000000040144E
.text:000000000040144E loc_40144E:                             ; CODE XREF: l1(int,int)+45↑j
.text:000000000040144E                 mov     eax, 1
.text:0000000000401453                 retn
.text:0000000000401454 ; ---------------------------------------------------------------------------
.text:0000000000401454
.text:0000000000401454 loc_401454:                             ; CODE XREF: l1(int,int)+47↑j
.text:0000000000401454                                         ; l1(int,int)+4C↑j
.text:0000000000401454                 xor     eax, eax
.text:0000000000401456                 retn
.text:0000000000401456 _Z2l1ii         endp
.text:0000000000401456
.text:0000000000401456 ; ---------------------------------------------------------------------------
.text:0000000000401457                 align 20h
.text:0000000000401457 ; } // starts at 401400
.text:0000000000401460
.text:0000000000401460 ; =============== S U B R O U T I N E =======================================
.text:0000000000401460
.text:0000000000401460
.text:0000000000401460 __sti__$E       proc near               ; CODE XREF: __libc_csu_init+59↓p
.text:0000000000401460                                         ; DATA XREF: .init_array:__init_array_start↓o
.text:0000000000401460 ; __unwind { // ___gxx_personality_v0
.text:0000000000401460                 push    rsi
.text:0000000000401461                 mov     edi, offset _ZSt8__ioinit ; this
.text:0000000000401466                 call    __ZNSt8ios_base4InitC1Ev ; std::ios_base::Init::Init(void)
.text:000000000040146B                 mov     edi, offset __ZNSt8ios_base4InitD1Ev ; lpfunc
.text:0000000000401470                 mov     esi, offset _ZSt8__ioinit ; obj
.text:0000000000401475                 mov     edx, offset __dso_handle ; lpdso_handle
.text:000000000040147A                 call    ___cxa_atexit
.text:000000000040147F                 mov     edi, offset v
.text:0000000000401484                 call    _ZNSt6vectorIiSaIiEEC1Ev ; std::vector<int,std::allocator<int>>::vector(void)
.text:0000000000401489                 mov     edi, offset _ZNSt6vectorIiSaIiEED1Ev ; lpfunc
.text:000000000040148E                 mov     esi, offset v   ; obj
.text:0000000000401493                 mov     edx, offset __dso_handle ; lpdso_handle
.text:0000000000401498                 call    ___cxa_atexit
.text:000000000040149D                 mov     edi, offset w
.text:00000000004014A2                 call    _ZNSt6vectorIiSaIiEEC1Ev ; std::vector<int,std::allocator<int>>::vector(void)
.text:00000000004014A7                 mov     edi, offset _ZNSt6vectorIiSaIiEED1Ev ; lpfunc
.text:00000000004014AC                 mov     esi, offset w   ; obj
.text:00000000004014B1                 mov     edx, offset __dso_handle ; lpdso_handle
.text:00000000004014B6                 add     rsp, 8
.text:00000000004014BA                 jmp     ___cxa_atexit
.text:00000000004014BA __sti__$E       endp
.text:00000000004014BA
.text:00000000004014BA ; ---------------------------------------------------------------------------
.text:00000000004014BF                 align 20h
.text:00000000004014BF ; } // starts at 401460
.text:00000000004014C0
.text:00000000004014C0 ; =============== S U B R O U T I N E =======================================
.text:00000000004014C0
.text:00000000004014C0
.text:00000000004014C0 ; std::_Vector_base<int, std::allocator<int>>::_M_deallocate(int *, unsigned long)
.text:00000000004014C0                 public _ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim ; weak
.text:00000000004014C0 _ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim proc near
.text:00000000004014C0 ; __unwind { // ___gxx_personality_v0
.text:00000000004014C0                 test    rsi, rsi
.text:00000000004014C3                 jz      short locret_4014CD
.text:00000000004014C5                 mov     rdi, rsi        ; void *
.text:00000000004014C8                 jmp     __ZdlPv         ; operator delete(void *)
.text:00000000004014CD ; ---------------------------------------------------------------------------
.text:00000000004014CD
.text:00000000004014CD locret_4014CD:                          ; CODE XREF: std::_Vector_base<int,std::allocator<int>>::_M_deallocate(int *,ulong)+3↑j
.text:00000000004014CD                 retn
.text:00000000004014CD _ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim endp
.text:00000000004014CD
.text:00000000004014CD ; ---------------------------------------------------------------------------
.text:00000000004014CE                 align 10h
.text:00000000004014CE ; } // starts at 4014C0
.text:00000000004014D0
.text:00000000004014D0 ; =============== S U B R O U T I N E =======================================
.text:00000000004014D0
.text:00000000004014D0
.text:00000000004014D0 ; std::_Vector_base<int, std::allocator<int>>::_M_get_Tp_allocator(void)
.text:00000000004014D0                 public _ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv ; weak
.text:00000000004014D0 _ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv proc near
.text:00000000004014D0 ; __unwind { // ___gxx_personality_v0
.text:00000000004014D0                 mov     rax, rdi
.text:00000000004014D3                 retn
.text:00000000004014D3 _ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv endp
.text:00000000004014D3
.text:00000000004014D3 ; ---------------------------------------------------------------------------
.text:00000000004014D4                 align 20h
.text:00000000004014D4 ; } // starts at 4014D0
.text:00000000004014E0
.text:00000000004014E0 ; =============== S U B R O U T I N E =======================================
.text:00000000004014E0
.text:00000000004014E0
.text:00000000004014E0 ; std::char_traits<char>::length(char const*)
.text:00000000004014E0                 public _ZNSt11char_traitsIcE6lengthEPKc ; weak
.text:00000000004014E0 _ZNSt11char_traitsIcE6lengthEPKc proc near
.text:00000000004014E0 ; __unwind { // ___gxx_personality_v0
.text:00000000004014E0                 push    rsi
.text:00000000004014E1                 mov     rdx, rdi
.text:00000000004014E4                 mov     rcx, rdx
.text:00000000004014E7                 and     rdx, 0FFFFFFFFFFFFFFF0h
.text:00000000004014EB                 pxor    xmm0, xmm0
.text:00000000004014EF                 pcmpeqb xmm0, xmmword ptr [rdx]
.text:00000000004014F3                 pmovmskb eax, xmm0
.text:00000000004014F7                 and     ecx, 0Fh
.text:00000000004014FA                 shr     eax, cl
.text:00000000004014FC                 bsf     eax, eax
.text:00000000004014FF                 jnz     short loc_40150C
.text:0000000000401501                 mov     rax, rdx
.text:0000000000401504                 add     rdx, rcx
.text:0000000000401507                 call    __intel_sse2_strlen
.text:000000000040150C
.text:000000000040150C loc_40150C:                             ; CODE XREF: std::char_traits<char>::length(char const*)+1F↑j
.text:000000000040150C                 pop     rcx
.text:000000000040150D                 retn
.text:000000000040150D _ZNSt11char_traitsIcE6lengthEPKc endp
.text:000000000040150D
.text:000000000040150D ; ---------------------------------------------------------------------------
.text:000000000040150E                 align 10h
.text:000000000040150E ; } // starts at 4014E0
.text:0000000000401510
.text:0000000000401510 ; =============== S U B R O U T I N E =======================================
.text:0000000000401510
.text:0000000000401510
.text:0000000000401510 ; void std::sort<__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, __gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>)
.text:0000000000401510                 public _ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_ ; weak
.text:0000000000401510 _ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_ proc near
.text:0000000000401510                                         ; CODE XREF: main+440↑p
.text:0000000000401510
.text:0000000000401510 var_28          = qword ptr -28h
.text:0000000000401510 var_20          = qword ptr -20h
.text:0000000000401510 var_18          = qword ptr -18h
.text:0000000000401510 var_10          = qword ptr -10h
.text:0000000000401510 var_8           = qword ptr -8
.text:0000000000401510
.text:0000000000401510 ; __unwind { // ___gxx_personality_v0
.text:0000000000401510                 sub     rsp, 28h
.text:0000000000401514                 mov     rax, rdi
.text:0000000000401517                 mov     [rsp+28h+var_10], rax
.text:000000000040151C                 cmp     rax, rsi
.text:000000000040151F                 mov     [rsp+28h+var_8], rsi
.text:0000000000401524                 jnz     short loc_40152B
.text:0000000000401526
.text:0000000000401526 loc_401526:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+1F7↓j
.text:0000000000401526                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+233↓j ...
.text:0000000000401526                 add     rsp, 28h
.text:000000000040152A                 retn
.text:000000000040152B ; ---------------------------------------------------------------------------
.text:000000000040152B
.text:000000000040152B loc_40152B:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+14↑j
.text:000000000040152B                 mov     rdx, rsi
.text:000000000040152E                 sub     rdx, rax
.text:0000000000401531                 mov     rcx, rdx
.text:0000000000401534                 sar     rcx, 2
.text:0000000000401538                 sar     rdx, 22h
.text:000000000040153C                 bsr     edi, ecx
.text:000000000040153F                 bsr     r8d, edx
.text:0000000000401543                 neg     edi
.text:0000000000401545                 neg     r8d
.text:0000000000401548                 add     edi, 3Fh ; '?'
.text:000000000040154B                 add     r8d, 1Fh
.text:000000000040154F                 test    edx, edx
.text:0000000000401551                 cmovz   r8d, edi
.text:0000000000401555                 movsxd  rdx, r8d
.text:0000000000401558                 add     rdx, rdx
.text:000000000040155B                 neg     rdx
.text:000000000040155E                 add     rdx, 7Eh ; '~'
.text:0000000000401562                 cmp     rcx, 10h
.text:0000000000401566                 jle     loc_401649
.text:000000000040156C                 mov     [rsp+28h+var_18], rbp
.text:0000000000401571                 mov     rbp, rdx
.text:0000000000401574
.text:0000000000401574 loc_401574:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+129↓j
.text:0000000000401574                 test    rbp, rbp
.text:0000000000401577                 jz      loc_4017E7
.text:000000000040157D                 mov     r10, rsi
.text:0000000000401580                 dec     rbp
.text:0000000000401583                 sub     r10, rax
.text:0000000000401586                 sar     r10, 2
.text:000000000040158A                 mov     rcx, r10
.text:000000000040158D                 shr     rcx, 3Fh
.text:0000000000401591                 add     r10, rcx
.text:0000000000401594                 sar     r10, 1
.text:0000000000401597                 mov     ecx, [rax]
.text:0000000000401599                 mov     [rsp+28h+var_28], rsi
.text:000000000040159D                 mov     r9d, [rax+r10*4]
.text:00000000004015A1                 cmp     ecx, r9d
.text:00000000004015A4                 jge     short loc_4015BB
.text:00000000004015A6                 mov     edi, [rsi-4]
.text:00000000004015A9                 cmp     r9d, edi
.text:00000000004015AC                 jl      short loc_4015D0
.text:00000000004015AE                 cmp     ecx, edi
.text:00000000004015B0                 jge     short loc_4015D9
.text:00000000004015B2                 mov     [rax], edi
.text:00000000004015B4                 mov     [rsi-4], ecx
.text:00000000004015B7                 mov     ecx, [rax]
.text:00000000004015B9                 jmp     short loc_4015D9
.text:00000000004015BB ; ---------------------------------------------------------------------------
.text:00000000004015BB
.text:00000000004015BB loc_4015BB:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+94↑j
.text:00000000004015BB                 mov     edi, [rsi-4]
.text:00000000004015BE                 cmp     ecx, edi
.text:00000000004015C0                 jl      short loc_4015D9
.text:00000000004015C2                 cmp     r9d, edi
.text:00000000004015C5                 jge     short loc_4015D0
.text:00000000004015C7                 mov     [rax], edi
.text:00000000004015C9                 mov     [rsi-4], ecx
.text:00000000004015CC                 mov     ecx, [rax]
.text:00000000004015CE                 jmp     short loc_4015D9
.text:00000000004015D0 ; ---------------------------------------------------------------------------
.text:00000000004015D0
.text:00000000004015D0 loc_4015D0:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+9C↑j
.text:00000000004015D0                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+B5↑j
.text:00000000004015D0                 mov     [rax], r9d
.text:00000000004015D3                 mov     [rax+r10*4], ecx
.text:00000000004015D7                 mov     ecx, [rax]
.text:00000000004015D9
.text:00000000004015D9 loc_4015D9:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+A0↑j
.text:00000000004015D9                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+A9↑j ...
.text:00000000004015D9                 lea     rdi, [rax+4]
.text:00000000004015DD                 jmp     short loc_4015EB
.text:00000000004015DF ; ---------------------------------------------------------------------------
.text:00000000004015DF
.text:00000000004015DF loc_4015DF:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+FE↓j
.text:00000000004015DF                 mov     [rdi], r10d
.text:00000000004015E2                 add     rdi, 4
.text:00000000004015E6                 mov     [rsi], r9d
.text:00000000004015E9                 mov     ecx, [rax]
.text:00000000004015EB
.text:00000000004015EB loc_4015EB:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+CD↑j
.text:00000000004015EB                 mov     r9d, [rdi]
.text:00000000004015EE                 cmp     r9d, ecx
.text:00000000004015F1                 jge     short loc_4015FF
.text:00000000004015F3
.text:00000000004015F3 loc_4015F3:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+ED↓j
.text:00000000004015F3                 add     rdi, 4
.text:00000000004015F7                 mov     r9d, [rdi]
.text:00000000004015FA                 cmp     r9d, ecx
.text:00000000004015FD                 jl      short loc_4015F3
.text:00000000004015FF
.text:00000000004015FF loc_4015FF:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+E1↑j
.text:00000000004015FF                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+F9↓j
.text:00000000004015FF                 add     rsi, 0FFFFFFFFFFFFFFFCh
.text:0000000000401603                 mov     r10d, [rsi]
.text:0000000000401606                 cmp     ecx, r10d
.text:0000000000401609                 jl      short loc_4015FF
.text:000000000040160B                 cmp     rdi, rsi
.text:000000000040160E                 jb      short loc_4015DF
.text:0000000000401610                 mov     rdx, rbp
.text:0000000000401613                 mov     rsi, [rsp+28h+var_28]
.text:0000000000401617                 mov     [rsp+28h+var_20], rdi
.text:000000000040161C                 call    _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElEvT_S7_T0_ ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)
.text:0000000000401621                 mov     rsi, [rsp+28h+var_20]
.text:0000000000401626                 mov     rcx, rsi
.text:0000000000401629                 mov     rax, [rsp+28h+var_10]
.text:000000000040162E                 sub     rcx, rax
.text:0000000000401631                 sar     rcx, 2
.text:0000000000401635                 cmp     rcx, 10h
.text:0000000000401639                 jg      loc_401574
.text:000000000040163F                 mov     rbp, [rsp+28h+var_18]
.text:0000000000401644                 mov     rsi, [rsp+28h+var_8]
.text:0000000000401649
.text:0000000000401649 loc_401649:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+56↑j
.text:0000000000401649                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+3F4↓j ...
.text:0000000000401649                 mov     rdx, rsi
.text:000000000040164C                 sub     rdx, rax
.text:000000000040164F                 sar     rdx, 2
.text:0000000000401653                 cmp     rdx, 10h
.text:0000000000401657                 jle     loc_401748
.text:000000000040165D                 lea     r8, [rax+40h]
.text:0000000000401661                 lea     rcx, [rax+4]
.text:0000000000401665                 cmp     rcx, r8
.text:0000000000401668                 jz      loc_401704
.text:000000000040166E                 mov     [rsp+28h+var_28], r12
.text:0000000000401672                 mov     rsi, rax
.text:0000000000401675                 mov     [rsp+28h+var_20], rbx
.text:000000000040167A                 mov     rbx, rcx
.text:000000000040167D                 mov     [rsp+28h+var_18], rbp
.text:0000000000401682                 mov     r12, r8
.text:0000000000401685
.text:0000000000401685 loc_401685:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+1D8↓j
.text:0000000000401685                 mov     ebp, [rbx]
.text:0000000000401687                 cmp     ebp, [rsi]
.text:0000000000401689                 jge     short loc_4016B7
.text:000000000040168B                 mov     rdx, rbx
.text:000000000040168E                 sub     rdx, rsi
.text:0000000000401691                 sar     rdx, 2
.text:0000000000401695                 test    rdx, rdx
.text:0000000000401698                 jz      short loc_4016B3
.text:000000000040169A                 shl     rdx, 2
.text:000000000040169E                 mov     r9, rdx
.text:00000000004016A1                 neg     r9
.text:00000000004016A4                 lea     rdi, [rbx+r9+4]
.text:00000000004016A9                 call    _intel_fast_memmove
.text:00000000004016AE                 mov     rsi, [rsp+28h+var_10]
.text:00000000004016B3
.text:00000000004016B3 loc_4016B3:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+188↑j
.text:00000000004016B3                 mov     [rsi], ebp
.text:00000000004016B5                 jmp     short loc_4016E1
.text:00000000004016B7 ; ---------------------------------------------------------------------------
.text:00000000004016B7
.text:00000000004016B7 loc_4016B7:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+179↑j
.text:00000000004016B7                 mov     edx, [rbx-4]
.text:00000000004016BA                 mov     r10, rbx
.text:00000000004016BD                 cmp     ebp, edx
.text:00000000004016BF                 lea     r9, [rbx-8]
.text:00000000004016C3                 lea     rdi, [rbx-4]
.text:00000000004016C7                 jge     short loc_4016DE
.text:00000000004016C9
.text:00000000004016C9 loc_4016C9:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+1CC↓j
.text:00000000004016C9                 mov     [r10], edx
.text:00000000004016CC                 mov     r10, rdi
.text:00000000004016CF                 mov     edx, [r9]
.text:00000000004016D2                 add     r9, 0FFFFFFFFFFFFFFFCh
.text:00000000004016D6                 add     rdi, 0FFFFFFFFFFFFFFFCh
.text:00000000004016DA                 cmp     ebp, edx
.text:00000000004016DC                 jl      short loc_4016C9
.text:00000000004016DE
.text:00000000004016DE loc_4016DE:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+1B7↑j
.text:00000000004016DE                 mov     [r10], ebp
.text:00000000004016E1
.text:00000000004016E1 loc_4016E1:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+1A5↑j
.text:00000000004016E1                 add     rbx, 4
.text:00000000004016E5                 cmp     rbx, r12
.text:00000000004016E8                 jnz     short loc_401685
.text:00000000004016EA                 mov     rax, rsi
.text:00000000004016ED                 mov     r12, [rsp+28h+var_28]
.text:00000000004016F1                 lea     r8, [rax+40h]
.text:00000000004016F5                 mov     rbx, [rsp+28h+var_20]
.text:00000000004016FA                 mov     rbp, [rsp+28h+var_18]
.text:00000000004016FF                 mov     rsi, [rsp+28h+var_8]
.text:0000000000401704
.text:0000000000401704 loc_401704:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+158↑j
.text:0000000000401704                 cmp     r8, rsi
.text:0000000000401707                 jz      loc_401526
.text:000000000040170D
.text:000000000040170D loc_40170D:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+231↓j
.text:000000000040170D                 mov     edi, [r8]
.text:0000000000401710                 mov     r9, r8
.text:0000000000401713                 mov     eax, [r8-4]
.text:0000000000401717                 lea     rcx, [r8-8]
.text:000000000040171B                 cmp     edi, eax
.text:000000000040171D                 lea     rdx, [r8-4]
.text:0000000000401721                 jge     short loc_401737
.text:0000000000401723
.text:0000000000401723 loc_401723:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+225↓j
.text:0000000000401723                 mov     [r9], eax
.text:0000000000401726                 mov     r9, rdx
.text:0000000000401729                 mov     eax, [rcx]
.text:000000000040172B                 add     rcx, 0FFFFFFFFFFFFFFFCh
.text:000000000040172F                 add     rdx, 0FFFFFFFFFFFFFFFCh
.text:0000000000401733                 cmp     edi, eax
.text:0000000000401735                 jl      short loc_401723
.text:0000000000401737
.text:0000000000401737 loc_401737:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+211↑j
.text:0000000000401737                 add     r8, 4
.text:000000000040173B                 mov     [r9], edi
.text:000000000040173E                 cmp     r8, rsi
.text:0000000000401741                 jnz     short loc_40170D
.text:0000000000401743                 jmp     loc_401526
.text:0000000000401748 ; ---------------------------------------------------------------------------
.text:0000000000401748
.text:0000000000401748 loc_401748:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+147↑j
.text:0000000000401748                 cmp     rax, rsi
.text:000000000040174B                 jz      loc_401526
.text:0000000000401751                 lea     rcx, [rax+4]
.text:0000000000401755                 cmp     rcx, rsi
.text:0000000000401758                 jz      loc_401526
.text:000000000040175E                 mov     [rsp+28h+var_20], rbx
.text:0000000000401763                 mov     rbx, rcx
.text:0000000000401766                 mov     [rsp+28h+var_18], rbp
.text:000000000040176B
.text:000000000040176B loc_40176B:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+2C6↓j
.text:000000000040176B                 mov     ebp, [rbx]
.text:000000000040176D                 cmp     ebp, [rax]
.text:000000000040176F                 jge     short loc_4017A5
.text:0000000000401771                 mov     rdx, rbx
.text:0000000000401774                 sub     rdx, rax
.text:0000000000401777                 sar     rdx, 2
.text:000000000040177B                 test    rdx, rdx
.text:000000000040177E                 jz      short loc_4017A1
.text:0000000000401780                 shl     rdx, 2
.text:0000000000401784                 mov     rsi, rax
.text:0000000000401787                 mov     r8, rdx
.text:000000000040178A                 neg     r8
.text:000000000040178D                 lea     rdi, [rbx+r8+4]
.text:0000000000401792                 call    _intel_fast_memmove
.text:0000000000401797                 mov     rax, [rsp+28h+var_10]
.text:000000000040179C                 mov     rsi, [rsp+28h+var_8]
.text:00000000004017A1
.text:00000000004017A1 loc_4017A1:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+26E↑j
.text:00000000004017A1                 mov     [rax], ebp
.text:00000000004017A3                 jmp     short loc_4017CF
.text:00000000004017A5 ; ---------------------------------------------------------------------------
.text:00000000004017A5
.text:00000000004017A5 loc_4017A5:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+25F↑j
.text:00000000004017A5                 mov     edx, [rbx-4]
.text:00000000004017A8                 mov     r9, rbx
.text:00000000004017AB                 cmp     ebp, edx
.text:00000000004017AD                 lea     r8, [rbx-8]
.text:00000000004017B1                 lea     rdi, [rbx-4]
.text:00000000004017B5                 jge     short loc_4017CC
.text:00000000004017B7
.text:00000000004017B7 loc_4017B7:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+2BA↓j
.text:00000000004017B7                 mov     [r9], edx
.text:00000000004017BA                 mov     r9, rdi
.text:00000000004017BD                 mov     edx, [r8]
.text:00000000004017C0                 add     r8, 0FFFFFFFFFFFFFFFCh
.text:00000000004017C4                 add     rdi, 0FFFFFFFFFFFFFFFCh
.text:00000000004017C8                 cmp     ebp, edx
.text:00000000004017CA                 jl      short loc_4017B7
.text:00000000004017CC
.text:00000000004017CC loc_4017CC:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+2A5↑j
.text:00000000004017CC                 mov     [r9], ebp
.text:00000000004017CF
.text:00000000004017CF loc_4017CF:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+293↑j
.text:00000000004017CF                 add     rbx, 4
.text:00000000004017D3                 cmp     rbx, rsi
.text:00000000004017D6                 jnz     short loc_40176B
.text:00000000004017D8                 mov     rbx, [rsp+28h+var_20]
.text:00000000004017DD                 mov     rbp, [rsp+28h+var_18]
.text:00000000004017E2                 jmp     loc_401526
.text:00000000004017E7 ; ---------------------------------------------------------------------------
.text:00000000004017E7
.text:00000000004017E7 loc_4017E7:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+67↑j
.text:00000000004017E7                 mov     rdx, rsi
.text:00000000004017EA                 sub     rdx, rax
.text:00000000004017ED                 sar     rdx, 2
.text:00000000004017F1                 mov     rbp, [rsp+28h+var_18]
.text:00000000004017F6                 cmp     rdx, 2
.text:00000000004017FA                 jge     loc_401909
.text:0000000000401800
.text:0000000000401800 loc_401800:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+46D↓j
.text:0000000000401800                 mov     r10, rsi
.text:0000000000401803                 sub     r10, rax
.text:0000000000401806                 cmp     rdx, 1
.text:000000000040180A                 jle     loc_401958
.text:0000000000401810                 mov     [rsp+28h+var_20], rbx
.text:0000000000401815                 mov     r9d, 1
.text:000000000040181B                 mov     [rsp+28h+var_18], rbp
.text:0000000000401820
.text:0000000000401820 loc_401820:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+3DF↓j
.text:0000000000401820                 add     r10, 0FFFFFFFFFFFFFFFCh
.text:0000000000401824                 xor     ecx, ecx
.text:0000000000401826                 mov     r8, r10
.text:0000000000401829                 add     rsi, 0FFFFFFFFFFFFFFFCh
.text:000000000040182D                 sar     r8, 2
.text:0000000000401831                 xor     ebx, ebx
.text:0000000000401833                 test    r8, r8
.text:0000000000401836                 mov     edx, [rax]
.text:0000000000401838                 cmovle  ecx, r9d
.text:000000000040183C                 mov     edi, [rsi]
.text:000000000040183E                 mov     [rsi], edx
.text:0000000000401840                 xor     edx, edx
.text:0000000000401842                 lea     rcx, [r8+rcx-1]
.text:0000000000401847                 sar     rcx, 1
.text:000000000040184A                 test    rcx, rcx
.text:000000000040184D                 jle     short loc_401879
.text:000000000040184F
.text:000000000040184F loc_40184F:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+367↓j
.text:000000000040184F                 lea     rbp, ds:2[rdx*2]
.text:0000000000401857                 mov     r11d, [rax+rbp*4]
.text:000000000040185B                 lea     rdx, [rbp-1]
.text:000000000040185F                 cmp     r11d, [rax+rbp*4-4]
.text:0000000000401864                 jl      short loc_401869
.text:0000000000401866                 mov     rdx, rbp
.text:0000000000401869
.text:0000000000401869 loc_401869:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+354↑j
.text:0000000000401869                 mov     r11d, [rax+rdx*4]
.text:000000000040186D                 cmp     rdx, rcx
.text:0000000000401870                 mov     [rax+rbx*4], r11d
.text:0000000000401874                 mov     rbx, rdx
.text:0000000000401877                 jl      short loc_40184F
.text:0000000000401879
.text:0000000000401879 loc_401879:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+33D↑j
.text:0000000000401879                 test    r8, 1
.text:0000000000401880                 jnz     short loc_4018AA
.text:0000000000401882                 lea     rcx, [r8-2]
.text:0000000000401886                 shr     rcx, 3Fh
.text:000000000040188A                 lea     r11, [r8+rcx-2]
.text:000000000040188F                 sar     r11, 1
.text:0000000000401892                 cmp     rdx, r11
.text:0000000000401895                 jnz     short loc_4018AA
.text:0000000000401897                 lea     rcx, ds:2[rdx*2]
.text:000000000040189F                 mov     edx, [rax+rcx*4-4]
.text:00000000004018A3                 mov     [rax+rbx*4], edx
.text:00000000004018A6                 lea     rbx, [rcx-1]
.text:00000000004018AA
.text:00000000004018AA loc_4018AA:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+370↑j
.text:00000000004018AA                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+385↑j
.text:00000000004018AA                 lea     rdx, [rbx-1]
.text:00000000004018AE                 shr     rdx, 3Fh
.text:00000000004018B2                 lea     rdx, [rbx+rdx-1]
.text:00000000004018B7                 sar     rdx, 1
.text:00000000004018BA                 test    rbx, rbx
.text:00000000004018BD                 jle     short loc_4018E1
.text:00000000004018BF
.text:00000000004018BF loc_4018BF:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+3CF↓j
.text:00000000004018BF                 mov     ecx, [rax+rdx*4]
.text:00000000004018C2                 cmp     ecx, edi
.text:00000000004018C4                 jge     short loc_4018E1
.text:00000000004018C6                 mov     [rax+rbx*4], ecx
.text:00000000004018C9                 lea     rcx, [rdx-1]
.text:00000000004018CD                 shr     rcx, 3Fh
.text:00000000004018D1                 mov     rbx, rdx
.text:00000000004018D4                 lea     rdx, [rdx+rcx-1]
.text:00000000004018D9                 sar     rdx, 1
.text:00000000004018DC                 test    rbx, rbx
.text:00000000004018DF                 jg      short loc_4018BF
.text:00000000004018E1
.text:00000000004018E1 loc_4018E1:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+3AD↑j
.text:00000000004018E1                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+3B4↑j
.text:00000000004018E1                 nop     dword ptr [rax+00000000h]
.text:00000000004018E8                 mov     [rax+rbx*4], edi
.text:00000000004018EB                 cmp     r8, 1
.text:00000000004018EF                 jg      loc_401820
.text:00000000004018F5                 mov     rbx, [rsp+28h+var_20]
.text:00000000004018FA                 mov     rbp, [rsp+28h+var_18]
.text:00000000004018FF                 mov     rsi, [rsp+28h+var_8]
.text:0000000000401904                 jmp     loc_401649
.text:0000000000401909 ; ---------------------------------------------------------------------------
.text:0000000000401909
.text:0000000000401909 loc_401909:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+2EA↑j
.text:0000000000401909                 mov     rdi, [rsp+28h+var_10]
.text:000000000040190E                 lea     rcx, [rdx-2]
.text:0000000000401912                 shr     rcx, 3Fh
.text:0000000000401916                 mov     [rsp+28h+var_28], r12
.text:000000000040191A                 mov     [rsp+28h+var_20], rbx
.text:000000000040191F                 mov     rbx, rdx
.text:0000000000401922                 mov     [rsp+28h+var_18], rbp
.text:0000000000401927                 mov     rbp, rsi
.text:000000000040192A                 lea     r8, [rdx+rcx-2]
.text:000000000040192F                 sar     r8, 1
.text:0000000000401932                 mov     r12, r8
.text:0000000000401935                 jmp     short loc_40193A
.text:0000000000401937 ; ---------------------------------------------------------------------------
.text:0000000000401937
.text:0000000000401937 loc_401937:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+446↓j
.text:0000000000401937                 dec     r12
.text:000000000040193A
.text:000000000040193A loc_40193A:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+425↑j
.text:000000000040193A                 mov     rsi, r12
.text:000000000040193D                 mov     rdx, rbx
.text:0000000000401940                 mov     ecx, [rax+r12*4]
.text:0000000000401944                 call    _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliEvT_T0_S8_T1_ ; std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)
.text:0000000000401949                 mov     rax, [rsp+28h+var_10]
.text:000000000040194E                 mov     rdi, rax
.text:0000000000401951                 test    r12, r12
.text:0000000000401954                 jz      short loc_401962
.text:0000000000401956                 jmp     short loc_401937
.text:0000000000401958 ; ---------------------------------------------------------------------------
.text:0000000000401958
.text:0000000000401958 loc_401958:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+2FA↑j
.text:0000000000401958                 mov     rsi, [rsp+28h+var_8]
.text:000000000040195D                 jmp     loc_401649
.text:0000000000401962 ; ---------------------------------------------------------------------------
.text:0000000000401962
.text:0000000000401962 loc_401962:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+444↑j
.text:0000000000401962                 mov     rsi, rbp
.text:0000000000401965                 mov     rdx, rsi
.text:0000000000401968                 sub     rdx, rax
.text:000000000040196B                 mov     r12, [rsp+28h+var_28]
.text:000000000040196F                 mov     rbx, [rsp+28h+var_20]
.text:0000000000401974                 mov     rbp, [rsp+28h+var_18]
.text:0000000000401979                 sar     rdx, 2
.text:000000000040197D                 jmp     loc_401800
.text:000000000040197D _ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEEvT_S7_ endp
.text:000000000040197D
.text:000000000040197D ; ---------------------------------------------------------------------------
.text:0000000000401982                 align 10h
.text:0000000000401982 ; } // starts at 401510
.text:0000000000401990
.text:0000000000401990 ; =============== S U B R O U T I N E =======================================
.text:0000000000401990
.text:0000000000401990
.text:0000000000401990 ; void std::__adjust_heap<__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, long, int>(__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, long, long, int)
.text:0000000000401990                 public _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliEvT_T0_S8_T1_ ; weak
.text:0000000000401990 _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliEvT_T0_S8_T1_ proc near
.text:0000000000401990                                         ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+434↑p
.text:0000000000401990
.text:0000000000401990 var_8           = qword ptr -8
.text:0000000000401990
.text:0000000000401990 ; __unwind { // ___gxx_personality_v0
.text:0000000000401990                 xor     eax, eax
.text:0000000000401992                 test    rdx, rdx
.text:0000000000401995                 mov     r10, rsi
.text:0000000000401998                 mov     esi, 1
.text:000000000040199D                 mov     r9, rdi
.text:00000000004019A0                 cmovle  eax, esi
.text:00000000004019A3                 mov     r8, r10
.text:00000000004019A6                 mov     rdi, r10
.text:00000000004019A9                 lea     rax, [rdx+rax-1]
.text:00000000004019AE                 sar     rax, 1
.text:00000000004019B1                 cmp     r10, rax
.text:00000000004019B4                 jge     short loc_4019EA
.text:00000000004019B6                 mov     [rsp+var_8], rbp
.text:00000000004019BB
.text:00000000004019BB loc_4019BB:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)+53↓j
.text:00000000004019BB                 lea     r11, ds:2[rdi*2]
.text:00000000004019C3                 mov     ebp, [r9+r11*4]
.text:00000000004019C7                 lea     rdi, [r11-1]
.text:00000000004019CB                 cmp     ebp, [r9+r11*4-4]
.text:00000000004019D0                 jl      short loc_4019D5
.text:00000000004019D2                 mov     rdi, r11
.text:00000000004019D5
.text:00000000004019D5 loc_4019D5:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)+40↑j
.text:00000000004019D5                 mov     ebp, [r9+rdi*4]
.text:00000000004019D9                 cmp     rdi, rax
.text:00000000004019DC                 mov     [r9+r10*4], ebp
.text:00000000004019E0                 mov     r10, rdi
.text:00000000004019E3                 jl      short loc_4019BB
.text:00000000004019E5                 mov     rbp, [rsp+var_8]
.text:00000000004019EA
.text:00000000004019EA loc_4019EA:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)+24↑j
.text:00000000004019EA                 test    rdx, 1
.text:00000000004019F1                 jnz     short loc_401A1E
.text:00000000004019F3                 xor     eax, eax
.text:00000000004019F5                 cmp     rdx, 2
.text:00000000004019F9                 cmovl   eax, esi
.text:00000000004019FC                 lea     rdx, [rdx+rax-2]
.text:0000000000401A01                 sar     rdx, 1
.text:0000000000401A04                 cmp     rdi, rdx
.text:0000000000401A07                 jnz     short loc_401A1E
.text:0000000000401A09                 lea     rdx, ds:2[rdi*2]
.text:0000000000401A11                 mov     eax, [r9+rdx*4-4]
.text:0000000000401A16                 mov     [r9+r10*4], eax
.text:0000000000401A1A                 lea     r10, [rdx-1]
.text:0000000000401A1E
.text:0000000000401A1E loc_401A1E:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)+61↑j
.text:0000000000401A1E                                         ; std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)+77↑j
.text:0000000000401A1E                 lea     rax, [r10-1]
.text:0000000000401A22                 shr     rax, 3Fh
.text:0000000000401A26                 lea     rax, [r10+rax-1]
.text:0000000000401A2B                 sar     rax, 1
.text:0000000000401A2E                 cmp     r10, r8
.text:0000000000401A31                 jle     short loc_401A57
.text:0000000000401A33
.text:0000000000401A33 loc_401A33:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)+C5↓j
.text:0000000000401A33                 mov     edx, [r9+rax*4]
.text:0000000000401A37                 cmp     edx, ecx
.text:0000000000401A39                 jge     short loc_401A57
.text:0000000000401A3B                 mov     [r9+r10*4], edx
.text:0000000000401A3F                 lea     rdx, [rax-1]
.text:0000000000401A43                 shr     rdx, 3Fh
.text:0000000000401A47                 mov     r10, rax
.text:0000000000401A4A                 lea     rax, [rax+rdx-1]
.text:0000000000401A4F                 sar     rax, 1
.text:0000000000401A52                 cmp     r10, r8
.text:0000000000401A55                 jg      short loc_401A33
.text:0000000000401A57
.text:0000000000401A57 loc_401A57:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)+A1↑j
.text:0000000000401A57                                         ; std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int)+A9↑j
.text:0000000000401A57                 mov     [r9+r10*4], ecx
.text:0000000000401A5B                 retn
.text:0000000000401A5B _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliEvT_T0_S8_T1_ endp
.text:0000000000401A5B
.text:0000000000401A5B ; ---------------------------------------------------------------------------
.text:0000000000401A5C                 align 20h
.text:0000000000401A5C ; } // starts at 401990
.text:0000000000401A60
.text:0000000000401A60 ; =============== S U B R O U T I N E =======================================
.text:0000000000401A60
.text:0000000000401A60
.text:0000000000401A60 ; void std::__introsort_loop<__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, long>(__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, __gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, long)
.text:0000000000401A60                 public _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElEvT_S7_T0_ ; weak
.text:0000000000401A60 _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElEvT_S7_T0_ proc near
.text:0000000000401A60                                         ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>)+10C↑p
.text:0000000000401A60                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+CC↓p
.text:0000000000401A60
.text:0000000000401A60 var_28          = qword ptr -28h
.text:0000000000401A60 var_20          = qword ptr -20h
.text:0000000000401A60 var_18          = qword ptr -18h
.text:0000000000401A60
.text:0000000000401A60 ; __unwind { // ___gxx_personality_v0
.text:0000000000401A60                 push    rbp
.text:0000000000401A61                 sub     rsp, 20h
.text:0000000000401A65                 mov     r9, rdi
.text:0000000000401A68                 mov     rax, rsi
.text:0000000000401A6B                 sub     rax, r9
.text:0000000000401A6E                 sar     rax, 2
.text:0000000000401A72                 mov     [rsp+28h+var_28], r9
.text:0000000000401A76                 cmp     rax, 10h
.text:0000000000401A7A                 mov     [rsp+28h+var_20], rsi
.text:0000000000401A7F                 jle     loc_401B53
.text:0000000000401A85                 mov     rbp, rdx
.text:0000000000401A88
.text:0000000000401A88 loc_401A88:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+ED↓j
.text:0000000000401A88                 test    rbp, rbp
.text:0000000000401A8B                 jz      loc_401B59
.text:0000000000401A91                 mov     r8, rsi
.text:0000000000401A94                 dec     rbp
.text:0000000000401A97                 sub     r8, r9
.text:0000000000401A9A                 sar     r8, 2
.text:0000000000401A9E                 mov     rax, r8
.text:0000000000401AA1                 shr     rax, 3Fh
.text:0000000000401AA5                 add     r8, rax
.text:0000000000401AA8                 sar     r8, 1
.text:0000000000401AAB                 mov     eax, [r9]
.text:0000000000401AAE                 mov     edi, [r9+r8*4]
.text:0000000000401AB2                 cmp     eax, edi
.text:0000000000401AB4                 jge     short loc_401ACC
.text:0000000000401AB6                 mov     ecx, [rsi-4]
.text:0000000000401AB9                 cmp     edi, ecx
.text:0000000000401ABB                 jl      short loc_401AE2
.text:0000000000401ABD                 cmp     eax, ecx
.text:0000000000401ABF                 jge     short loc_401AEC
.text:0000000000401AC1                 mov     [r9], ecx
.text:0000000000401AC4                 mov     [rsi-4], eax
.text:0000000000401AC7                 mov     eax, [r9]
.text:0000000000401ACA                 jmp     short loc_401AEC
.text:0000000000401ACC ; ---------------------------------------------------------------------------
.text:0000000000401ACC
.text:0000000000401ACC loc_401ACC:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+54↑j
.text:0000000000401ACC                 mov     ecx, [rsi-4]
.text:0000000000401ACF                 cmp     eax, ecx
.text:0000000000401AD1                 jl      short loc_401AEC
.text:0000000000401AD3                 cmp     edi, ecx
.text:0000000000401AD5                 jge     short loc_401AE2
.text:0000000000401AD7                 mov     [r9], ecx
.text:0000000000401ADA                 mov     [rsi-4], eax
.text:0000000000401ADD                 mov     eax, [r9]
.text:0000000000401AE0                 jmp     short loc_401AEC
.text:0000000000401AE2 ; ---------------------------------------------------------------------------
.text:0000000000401AE2
.text:0000000000401AE2 loc_401AE2:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+5B↑j
.text:0000000000401AE2                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+75↑j
.text:0000000000401AE2                 mov     [r9], edi
.text:0000000000401AE5                 mov     [r9+r8*4], eax
.text:0000000000401AE9                 mov     eax, [r9]
.text:0000000000401AEC
.text:0000000000401AEC loc_401AEC:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+5F↑j
.text:0000000000401AEC                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+6A↑j ...
.text:0000000000401AEC                 lea     rdi, [r9+4]
.text:0000000000401AF0                 jmp     short loc_401AFE
.text:0000000000401AF2 ; ---------------------------------------------------------------------------
.text:0000000000401AF2
.text:0000000000401AF2 loc_401AF2:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+BD↓j
.text:0000000000401AF2                 mov     [rdi], r8d
.text:0000000000401AF5                 add     rdi, 4
.text:0000000000401AF9                 mov     [rsi], ecx
.text:0000000000401AFB                 mov     eax, [r9]
.text:0000000000401AFE
.text:0000000000401AFE loc_401AFE:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+90↑j
.text:0000000000401AFE                 mov     ecx, [rdi]
.text:0000000000401B00                 cmp     ecx, eax
.text:0000000000401B02                 jge     short loc_401B0E
.text:0000000000401B04
.text:0000000000401B04 loc_401B04:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+AC↓j
.text:0000000000401B04                 add     rdi, 4
.text:0000000000401B08                 mov     ecx, [rdi]
.text:0000000000401B0A                 cmp     ecx, eax
.text:0000000000401B0C                 jl      short loc_401B04
.text:0000000000401B0E
.text:0000000000401B0E loc_401B0E:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+A2↑j
.text:0000000000401B0E                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+B8↓j
.text:0000000000401B0E                 add     rsi, 0FFFFFFFFFFFFFFFCh
.text:0000000000401B12                 mov     r8d, [rsi]
.text:0000000000401B15                 cmp     eax, r8d
.text:0000000000401B18                 jl      short loc_401B0E
.text:0000000000401B1A                 cmp     rdi, rsi
.text:0000000000401B1D                 jb      short loc_401AF2
.text:0000000000401B1F                 mov     rdx, rbp
.text:0000000000401B22                 mov     rsi, [rsp+28h+var_20]
.text:0000000000401B27                 mov     [rsp+28h+var_18], rdi
.text:0000000000401B2C                 call    _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElEvT_S7_T0_ ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)
.text:0000000000401B31                 mov     rsi, [rsp+28h+var_18]
.text:0000000000401B36                 mov     rax, rsi
.text:0000000000401B39                 mov     r9, [rsp+28h+var_28]
.text:0000000000401B3D                 sub     rax, r9
.text:0000000000401B40                 sar     rax, 2
.text:0000000000401B44                 mov     [rsp+28h+var_20], rsi
.text:0000000000401B49                 cmp     rax, 10h
.text:0000000000401B4D                 jg      loc_401A88
.text:0000000000401B53
.text:0000000000401B53 loc_401B53:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+1F↑j
.text:0000000000401B53                 add     rsp, 20h
.text:0000000000401B57                 pop     rbp
.text:0000000000401B58                 retn
.text:0000000000401B59 ; ---------------------------------------------------------------------------
.text:0000000000401B59
.text:0000000000401B59 loc_401B59:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+2B↑j
.text:0000000000401B59                 mov     r8, rsi
.text:0000000000401B5C                 sub     r8, r9
.text:0000000000401B5F                 sar     r8, 2
.text:0000000000401B63                 cmp     r8, 2
.text:0000000000401B67                 jge     loc_401C6D
.text:0000000000401B6D
.text:0000000000401B6D loc_401B6D:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+2F2↓j
.text:0000000000401B6D                 mov     rax, rsi
.text:0000000000401B70                 sub     rax, r9
.text:0000000000401B73                 cmp     r8, 1
.text:0000000000401B77                 jle     loc_401C67
.text:0000000000401B7D                 mov     [rsp+28h+var_20], rbx
.text:0000000000401B82                 mov     r8d, 1
.text:0000000000401B88
.text:0000000000401B88 loc_401B88:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+1FC↓j
.text:0000000000401B88                 add     rax, 0FFFFFFFFFFFFFFFCh
.text:0000000000401B8C                 xor     edx, edx
.text:0000000000401B8E                 mov     rbp, rax
.text:0000000000401B91                 add     rsi, 0FFFFFFFFFFFFFFFCh
.text:0000000000401B95                 sar     rbp, 2
.text:0000000000401B99                 xor     ebx, ebx
.text:0000000000401B9B                 test    rbp, rbp
.text:0000000000401B9E                 mov     ecx, [r9]
.text:0000000000401BA1                 cmovle  edx, r8d
.text:0000000000401BA5                 mov     edi, [rsi]
.text:0000000000401BA7                 mov     [rsi], ecx
.text:0000000000401BA9                 xor     ecx, ecx
.text:0000000000401BAB                 lea     rdx, [rbp+rdx-1]
.text:0000000000401BB0                 sar     rdx, 1
.text:0000000000401BB3                 test    rdx, rdx
.text:0000000000401BB6                 jle     short loc_401BE2
.text:0000000000401BB8
.text:0000000000401BB8 loc_401BB8:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+180↓j
.text:0000000000401BB8                 lea     r11, ds:2[rcx*2]
.text:0000000000401BC0                 mov     r10d, [r9+r11*4]
.text:0000000000401BC4                 lea     rcx, [r11-1]
.text:0000000000401BC8                 cmp     r10d, [r9+r11*4-4]
.text:0000000000401BCD                 jl      short loc_401BD2
.text:0000000000401BCF                 mov     rcx, r11
.text:0000000000401BD2
.text:0000000000401BD2 loc_401BD2:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+16D↑j
.text:0000000000401BD2                 mov     r10d, [r9+rcx*4]
.text:0000000000401BD6                 cmp     rcx, rdx
.text:0000000000401BD9                 mov     [r9+rbx*4], r10d
.text:0000000000401BDD                 mov     rbx, rcx
.text:0000000000401BE0                 jl      short loc_401BB8
.text:0000000000401BE2
.text:0000000000401BE2 loc_401BE2:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+156↑j
.text:0000000000401BE2                 test    rbp, 1
.text:0000000000401BE9                 jnz     short loc_401C15
.text:0000000000401BEB                 lea     rdx, [rbp-2]
.text:0000000000401BEF                 shr     rdx, 3Fh
.text:0000000000401BF3                 lea     r10, [rbp+rdx-2]
.text:0000000000401BF8                 sar     r10, 1
.text:0000000000401BFB                 cmp     rcx, r10
.text:0000000000401BFE                 jnz     short loc_401C15
.text:0000000000401C00                 lea     rcx, ds:2[rcx*2]
.text:0000000000401C08                 mov     edx, [r9+rcx*4-4]
.text:0000000000401C0D                 mov     [r9+rbx*4], edx
.text:0000000000401C11                 lea     rbx, [rcx-1]
.text:0000000000401C15
.text:0000000000401C15 loc_401C15:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+189↑j
.text:0000000000401C15                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+19E↑j
.text:0000000000401C15                 lea     rdx, [rbx-1]
.text:0000000000401C19                 shr     rdx, 3Fh
.text:0000000000401C1D                 lea     rdx, [rbx+rdx-1]
.text:0000000000401C22                 sar     rdx, 1
.text:0000000000401C25                 test    rbx, rbx
.text:0000000000401C28                 jle     short loc_401C4E
.text:0000000000401C2A
.text:0000000000401C2A loc_401C2A:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+1EC↓j
.text:0000000000401C2A                 mov     ecx, [r9+rdx*4]
.text:0000000000401C2E                 cmp     ecx, edi
.text:0000000000401C30                 jge     short loc_401C4E
.text:0000000000401C32                 mov     [r9+rbx*4], ecx
.text:0000000000401C36                 lea     rcx, [rdx-1]
.text:0000000000401C3A                 shr     rcx, 3Fh
.text:0000000000401C3E                 mov     rbx, rdx
.text:0000000000401C41                 lea     rdx, [rdx+rcx-1]
.text:0000000000401C46                 sar     rdx, 1
.text:0000000000401C49                 test    rbx, rbx
.text:0000000000401C4C                 jg      short loc_401C2A
.text:0000000000401C4E
.text:0000000000401C4E loc_401C4E:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+1C8↑j
.text:0000000000401C4E                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+1D0↑j
.text:0000000000401C4E                 nop     word ptr [rax+rax+00h]
.text:0000000000401C54                 mov     [r9+rbx*4], edi
.text:0000000000401C58                 cmp     rbp, 1
.text:0000000000401C5C                 jg      loc_401B88
.text:0000000000401C62                 mov     rbx, [rsp+28h+var_20]
.text:0000000000401C67
.text:0000000000401C67 loc_401C67:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+117↑j
.text:0000000000401C67                 add     rsp, 20h
.text:0000000000401C6B                 pop     rbp
.text:0000000000401C6C                 retn
.text:0000000000401C6D ; ---------------------------------------------------------------------------
.text:0000000000401C6D
.text:0000000000401C6D loc_401C6D:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+107↑j
.text:0000000000401C6D                 mov     eax, 1
.text:0000000000401C72                 xor     edx, edx
.text:0000000000401C74                 test    r8, r8
.text:0000000000401C77                 lea     rdi, [r8-2]
.text:0000000000401C7B                 cmovle  edx, eax
.text:0000000000401C7E                 mov     rcx, r8
.text:0000000000401C81                 shr     rdi, 3Fh
.text:0000000000401C85                 and     rcx, 1
.text:0000000000401C89                 mov     [rsp+28h+var_28], r15
.text:0000000000401C8D                 mov     [rsp+28h+var_20], rbx
.text:0000000000401C92                 lea     rdi, [r8+rdi-2]
.text:0000000000401C97                 sar     rdi, 1
.text:0000000000401C9A                 lea     rdx, [r8+rdx-1]
.text:0000000000401C9F                 sar     rdx, 1
.text:0000000000401CA2                 mov     rax, rdi
.text:0000000000401CA5                 jmp     short loc_401CAA
.text:0000000000401CA7 ; ---------------------------------------------------------------------------
.text:0000000000401CA7
.text:0000000000401CA7 loc_401CA7:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+2E3↓j
.text:0000000000401CA7                 dec     rdi
.text:0000000000401CAA
.text:0000000000401CAA loc_401CAA:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+245↑j
.text:0000000000401CAA                 mov     r10d, [r9+rdi*4]
.text:0000000000401CAE                 mov     rbp, rdi
.text:0000000000401CB1                 mov     rbx, rdi
.text:0000000000401CB4                 cmp     rdi, rdx
.text:0000000000401CB7                 jge     short loc_401CE3
.text:0000000000401CB9
.text:0000000000401CB9 loc_401CB9:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+281↓j
.text:0000000000401CB9                 lea     r15, ds:2[rbx*2]
.text:0000000000401CC1                 mov     r11d, [r9+r15*4]
.text:0000000000401CC5                 lea     rbx, [r15-1]
.text:0000000000401CC9                 cmp     r11d, [r9+r15*4-4]
.text:0000000000401CCE                 jl      short loc_401CD3
.text:0000000000401CD0                 mov     rbx, r15
.text:0000000000401CD3
.text:0000000000401CD3 loc_401CD3:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+26E↑j
.text:0000000000401CD3                 mov     r11d, [r9+rbx*4]
.text:0000000000401CD7                 cmp     rbx, rdx
.text:0000000000401CDA                 mov     [r9+rbp*4], r11d
.text:0000000000401CDE                 mov     rbp, rbx
.text:0000000000401CE1                 jl      short loc_401CB9
.text:0000000000401CE3
.text:0000000000401CE3 loc_401CE3:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+257↑j
.text:0000000000401CE3                 test    rcx, rcx
.text:0000000000401CE6                 jnz     short loc_401D02
.text:0000000000401CE8                 cmp     rbx, rax
.text:0000000000401CEB                 jnz     short loc_401D02
.text:0000000000401CED                 lea     r11, ds:2[rbx*2]
.text:0000000000401CF5                 mov     ebx, [r9+r11*4-4]
.text:0000000000401CFA                 mov     [r9+rbp*4], ebx
.text:0000000000401CFE                 lea     rbp, [r11-1]
.text:0000000000401D02
.text:0000000000401D02 loc_401D02:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+286↑j
.text:0000000000401D02                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+28B↑j
.text:0000000000401D02                 lea     rbx, [rbp-1]
.text:0000000000401D06                 shr     rbx, 3Fh
.text:0000000000401D0A                 lea     rbx, [rbp+rbx-1]
.text:0000000000401D0F                 sar     rbx, 1
.text:0000000000401D12                 cmp     rbp, rdi
.text:0000000000401D15                 jle     short loc_401D3C
.text:0000000000401D17
.text:0000000000401D17 loc_401D17:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+2DA↓j
.text:0000000000401D17                 mov     r11d, [r9+rbx*4]
.text:0000000000401D1B                 cmp     r11d, r10d
.text:0000000000401D1E                 jge     short loc_401D3C
.text:0000000000401D20                 mov     [r9+rbp*4], r11d
.text:0000000000401D24                 lea     r11, [rbx-1]
.text:0000000000401D28                 shr     r11, 3Fh
.text:0000000000401D2C                 mov     rbp, rbx
.text:0000000000401D2F                 lea     rbx, [rbx+r11-1]
.text:0000000000401D34                 sar     rbx, 1
.text:0000000000401D37                 cmp     rbp, rdi
.text:0000000000401D3A                 jg      short loc_401D17
.text:0000000000401D3C
.text:0000000000401D3C loc_401D3C:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+2B5↑j
.text:0000000000401D3C                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long)+2BE↑j
.text:0000000000401D3C                 mov     [r9+rbp*4], r10d
.text:0000000000401D40                 test    rdi, rdi
.text:0000000000401D43                 jnz     loc_401CA7
.text:0000000000401D49                 mov     r15, [rsp+28h+var_28]
.text:0000000000401D4D                 mov     rbx, [rsp+28h+var_20]
.text:0000000000401D52                 jmp     loc_401B6D
.text:0000000000401D52 _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElEvT_S7_T0_ endp
.text:0000000000401D52
.text:0000000000401D52 ; ---------------------------------------------------------------------------
.text:0000000000401D57                 align 20h
.text:0000000000401D57 ; } // starts at 401A60
.text:0000000000401D60
.text:0000000000401D60 ; =============== S U B R O U T I N E =======================================
.text:0000000000401D60
.text:0000000000401D60
.text:0000000000401D60 ; void std::sort<__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, bool (*)(int, int)>(__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, __gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, bool (*)(int, int))
.text:0000000000401D60                 public _ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEPFbiiEEvT_S9_T0_ ; weak
.text:0000000000401D60 _ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEPFbiiEEvT_S9_T0_ proc near
.text:0000000000401D60                                         ; CODE XREF: main+42D↑p
.text:0000000000401D60
.text:0000000000401D60 var_58          = qword ptr -58h
.text:0000000000401D60 var_50          = qword ptr -50h
.text:0000000000401D60 var_48          = qword ptr -48h
.text:0000000000401D60 var_40          = qword ptr -40h
.text:0000000000401D60 var_38          = qword ptr -38h
.text:0000000000401D60 var_30          = qword ptr -30h
.text:0000000000401D60 var_28          = qword ptr -28h
.text:0000000000401D60 var_20          = qword ptr -20h
.text:0000000000401D60 var_18          = qword ptr -18h
.text:0000000000401D60 var_10          = qword ptr -10h
.text:0000000000401D60
.text:0000000000401D60 ; __unwind { // ___gxx_personality_v0
.text:0000000000401D60                 sub     rsp, 58h
.text:0000000000401D64                 mov     rcx, rdi
.text:0000000000401D67                 mov     [rsp+58h+var_10], rcx
.text:0000000000401D6C                 cmp     rcx, rsi
.text:0000000000401D6F                 mov     [rsp+58h+var_18], rsi
.text:0000000000401D74                 jnz     short loc_401D7B
.text:0000000000401D76
.text:0000000000401D76 loc_401D76:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+2F7↓j
.text:0000000000401D76                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+373↓j ...
.text:0000000000401D76                 add     rsp, 58h
.text:0000000000401D7A                 retn
.text:0000000000401D7B ; ---------------------------------------------------------------------------
.text:0000000000401D7B
.text:0000000000401D7B loc_401D7B:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+14↑j
.text:0000000000401D7B                 mov     r8, rsi
.text:0000000000401D7E                 sub     r8, rcx
.text:0000000000401D81                 mov     rax, r8
.text:0000000000401D84                 sar     rax, 2
.text:0000000000401D88                 sar     r8, 22h
.text:0000000000401D8C                 bsr     edi, eax
.text:0000000000401D8F                 bsr     r9d, r8d
.text:0000000000401D93                 neg     edi
.text:0000000000401D95                 neg     r9d
.text:0000000000401D98                 add     edi, 3Fh ; '?'
.text:0000000000401D9B                 add     r9d, 1Fh
.text:0000000000401D9F                 test    r8d, r8d
.text:0000000000401DA2                 cmovz   r9d, edi
.text:0000000000401DA6                 movsxd  r8, r9d
.text:0000000000401DA9                 add     r8, r8
.text:0000000000401DAC                 neg     r8
.text:0000000000401DAF                 add     r8, 7Eh ; '~'
.text:0000000000401DB3                 cmp     rax, 10h
.text:0000000000401DB7                 jle     loc_401F53
.text:0000000000401DBD                 mov     [rsp+58h+var_50], r13
.text:0000000000401DC2                 mov     r13, r8
.text:0000000000401DC5                 mov     [rsp+58h+var_48], r14
.text:0000000000401DCA                 mov     r14, rdx
.text:0000000000401DCD                 mov     [rsp+58h+var_40], r15
.text:0000000000401DD2                 mov     r15, rsi
.text:0000000000401DD5                 mov     [rsp+58h+var_38], rbx
.text:0000000000401DDA                 mov     rbx, rcx
.text:0000000000401DDD                 mov     [rsp+58h+var_30], rbp
.text:0000000000401DE2
.text:0000000000401DE2 loc_401DE2:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+1C9↓j
.text:0000000000401DE2                 test    r13, r13
.text:0000000000401DE5                 jz      loc_4021B3
.text:0000000000401DEB                 mov     rbp, r15
.text:0000000000401DEE                 dec     r13
.text:0000000000401DF1                 sub     rbp, rbx
.text:0000000000401DF4                 sar     rbp, 2
.text:0000000000401DF8                 mov     rax, rbp
.text:0000000000401DFB                 shr     rax, 3Fh
.text:0000000000401DFF                 add     rbp, rax
.text:0000000000401E02                 sar     rbp, 1
.text:0000000000401E05                 mov     edi, [rbx]
.text:0000000000401E07                 mov     [rsp+58h+var_28], r15
.text:0000000000401E0C                 mov     esi, [rbx+rbp*4]
.text:0000000000401E0F                 call    r14
.text:0000000000401E12                 test    al, al
.text:0000000000401E14                 jz      short loc_401E5E
.text:0000000000401E16                 mov     edi, [rbx+rbp*4]
.text:0000000000401E19                 mov     esi, [r15-4]
.text:0000000000401E1D                 call    r14
.text:0000000000401E20                 test    al, al
.text:0000000000401E22                 jz      short loc_401E37
.text:0000000000401E24                 mov     rax, [rsp+58h+var_10]
.text:0000000000401E29                 mov     edi, [rbx+rbp*4]
.text:0000000000401E2C                 mov     r10d, [rax]
.text:0000000000401E2F                 mov     [rax], edi
.text:0000000000401E31                 mov     [rbx+rbp*4], r10d
.text:0000000000401E35                 jmp     short loc_401EA7
.text:0000000000401E37 ; ---------------------------------------------------------------------------
.text:0000000000401E37
.text:0000000000401E37 loc_401E37:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+C2↑j
.text:0000000000401E37                 mov     rax, [rsp+58h+var_10]
.text:0000000000401E3C                 mov     esi, [r15-4]
.text:0000000000401E40                 mov     edi, [rax]
.text:0000000000401E42                 call    r14
.text:0000000000401E45                 mov     ebx, eax
.text:0000000000401E47                 mov     rax, [rsp+58h+var_10]
.text:0000000000401E4C                 test    bl, bl
.text:0000000000401E4E                 jz      short loc_401EA7
.text:0000000000401E50                 mov     ebx, [r15-4]
.text:0000000000401E54                 mov     ebp, [rax]
.text:0000000000401E56                 mov     [rax], ebx
.text:0000000000401E58                 mov     [r15-4], ebp
.text:0000000000401E5C                 jmp     short loc_401EA7
.text:0000000000401E5E ; ---------------------------------------------------------------------------
.text:0000000000401E5E
.text:0000000000401E5E loc_401E5E:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+B4↑j
.text:0000000000401E5E                 mov     rax, [rsp+58h+var_10]
.text:0000000000401E63                 mov     esi, [r15-4]
.text:0000000000401E67                 mov     edi, [rax]
.text:0000000000401E69                 call    r14
.text:0000000000401E6C                 test    al, al
.text:0000000000401E6E                 jnz     short loc_401EA2
.text:0000000000401E70                 mov     edi, [rbx+rbp*4]
.text:0000000000401E73                 mov     esi, [r15-4]
.text:0000000000401E77                 call    r14
.text:0000000000401E7A                 mov     edi, eax
.text:0000000000401E7C                 mov     rax, [rsp+58h+var_10]
.text:0000000000401E81                 test    dil, dil
.text:0000000000401E84                 jz      short loc_401E94
.text:0000000000401E86                 mov     ebx, [r15-4]
.text:0000000000401E8A                 mov     ebp, [rax]
.text:0000000000401E8C                 mov     [rax], ebx
.text:0000000000401E8E                 mov     [r15-4], ebp
.text:0000000000401E92                 jmp     short loc_401EA7
.text:0000000000401E94 ; ---------------------------------------------------------------------------
.text:0000000000401E94
.text:0000000000401E94 loc_401E94:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+124↑j
.text:0000000000401E94                 mov     edi, [rbx+rbp*4]
.text:0000000000401E97                 mov     r10d, [rax]
.text:0000000000401E9A                 mov     [rax], edi
.text:0000000000401E9C                 mov     [rbx+rbp*4], r10d
.text:0000000000401EA0                 jmp     short loc_401EA7
.text:0000000000401EA2 ; ---------------------------------------------------------------------------
.text:0000000000401EA2
.text:0000000000401EA2 loc_401EA2:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+10E↑j
.text:0000000000401EA2                 mov     rax, [rsp+58h+var_10]
.text:0000000000401EA7
.text:0000000000401EA7 loc_401EA7:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+D5↑j
.text:0000000000401EA7                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+EE↑j ...
.text:0000000000401EA7                 lea     rbx, [rax+4]
.text:0000000000401EAB                 jmp     short loc_401EC0
.text:0000000000401EAD ; ---------------------------------------------------------------------------
.text:0000000000401EAD
.text:0000000000401EAD loc_401EAD:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+197↓j
.text:0000000000401EAD                 mov     eax, [r15]
.text:0000000000401EB0                 mov     ebp, [rbx]
.text:0000000000401EB2                 mov     [rbx], eax
.text:0000000000401EB4                 add     rbx, 4
.text:0000000000401EB8                 mov     [r15], ebp
.text:0000000000401EBB                 mov     rax, [rsp+58h+var_10]
.text:0000000000401EC0
.text:0000000000401EC0 loc_401EC0:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+14B↑j
.text:0000000000401EC0                 mov     edi, [rbx]
.text:0000000000401EC2                 mov     esi, [rax]
.text:0000000000401EC4                 call    r14
.text:0000000000401EC7                 test    al, al
.text:0000000000401EC9                 jz      short loc_401EDF
.text:0000000000401ECB
.text:0000000000401ECB loc_401ECB:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+17D↓j
.text:0000000000401ECB                 add     rbx, 4
.text:0000000000401ECF                 mov     rax, [rsp+58h+var_10]
.text:0000000000401ED4                 mov     edi, [rbx]
.text:0000000000401ED6                 mov     esi, [rax]
.text:0000000000401ED8                 call    r14
.text:0000000000401EDB                 test    al, al
.text:0000000000401EDD                 jnz     short loc_401ECB
.text:0000000000401EDF
.text:0000000000401EDF loc_401EDF:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+169↑j
.text:0000000000401EDF                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+192↓j
.text:0000000000401EDF                 add     r15, 0FFFFFFFFFFFFFFFCh
.text:0000000000401EE3                 mov     rax, [rsp+58h+var_10]
.text:0000000000401EE8                 mov     edi, [rax]
.text:0000000000401EEA                 mov     esi, [r15]
.text:0000000000401EED                 call    r14
.text:0000000000401EF0                 test    al, al
.text:0000000000401EF2                 jnz     short loc_401EDF
.text:0000000000401EF4                 cmp     rbx, r15
.text:0000000000401EF7                 jb      short loc_401EAD
.text:0000000000401EF9                 mov     rdi, rbx
.text:0000000000401EFC                 mov     rdx, r13
.text:0000000000401EFF                 mov     rcx, r14
.text:0000000000401F02                 mov     rsi, [rsp+58h+var_28]
.text:0000000000401F07                 mov     [rsp+58h+var_20], rbx
.text:0000000000401F0C                 call    _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElPFbiiEEvT_S9_T0_T1_ ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))
.text:0000000000401F11                 mov     r15, [rsp+58h+var_20]
.text:0000000000401F16                 mov     rax, r15
.text:0000000000401F19                 mov     rbx, [rsp+58h+var_10]
.text:0000000000401F1E                 sub     rax, rbx
.text:0000000000401F21                 sar     rax, 2
.text:0000000000401F25                 cmp     rax, 10h
.text:0000000000401F29                 jg      loc_401DE2
.text:0000000000401F2F                 mov     r13, [rsp+58h+var_50]
.text:0000000000401F34                 mov     rcx, rbx
.text:0000000000401F37                 mov     r15, [rsp+58h+var_40]
.text:0000000000401F3C                 mov     rdx, r14
.text:0000000000401F3F                 mov     r14, [rsp+58h+var_48]
.text:0000000000401F44                 mov     rbx, [rsp+58h+var_38]
.text:0000000000401F49                 mov     rbp, [rsp+58h+var_30]
.text:0000000000401F4E                 mov     rsi, [rsp+58h+var_18]
.text:0000000000401F53
.text:0000000000401F53 loc_401F53:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+57↑j
.text:0000000000401F53                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+5ED↓j ...
.text:0000000000401F53                 mov     rax, rsi
.text:0000000000401F56                 sub     rax, rcx
.text:0000000000401F59                 sar     rax, 2
.text:0000000000401F5D                 cmp     rax, 10h
.text:0000000000401F61                 jle     loc_4020D8
.text:0000000000401F67                 lea     r9, [rcx+40h]
.text:0000000000401F6B                 lea     r8, [rcx+4]
.text:0000000000401F6F                 cmp     r8, r9
.text:0000000000401F72                 jz      loc_402054
.text:0000000000401F78                 mov     [rsp+58h+var_58], r12
.text:0000000000401F7C                 mov     [rsp+58h+var_50], r13
.text:0000000000401F81                 mov     [rsp+58h+var_48], r14
.text:0000000000401F86                 mov     r14, rdx
.text:0000000000401F89                 mov     [rsp+58h+var_40], r15
.text:0000000000401F8E                 mov     [rsp+58h+var_38], rbx
.text:0000000000401F93                 mov     rbx, r8
.text:0000000000401F96                 mov     [rsp+58h+var_30], rbp
.text:0000000000401F9B                 mov     rbp, r9
.text:0000000000401F9E
.text:0000000000401F9E loc_401F9E:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+2C5↓j
.text:0000000000401F9E                 mov     edi, [rbx]
.text:0000000000401FA0                 mov     esi, [rcx]
.text:0000000000401FA2                 call    r14
.text:0000000000401FA5                 test    al, al
.text:0000000000401FA7                 jz      short loc_401FE1
.text:0000000000401FA9                 mov     rdx, rbx
.text:0000000000401FAC                 mov     rcx, [rsp+58h+var_10]
.text:0000000000401FB1                 sub     rdx, rcx
.text:0000000000401FB4                 sar     rdx, 2
.text:0000000000401FB8                 mov     r12d, [rbx]
.text:0000000000401FBB                 test    rdx, rdx
.text:0000000000401FBE                 jz      short loc_401FDC
.text:0000000000401FC0                 shl     rdx, 2
.text:0000000000401FC4                 mov     rsi, rcx
.text:0000000000401FC7                 mov     rax, rdx
.text:0000000000401FCA                 neg     rax
.text:0000000000401FCD                 lea     rdi, [rbx+rax+4]
.text:0000000000401FD2                 call    _intel_fast_memmove
.text:0000000000401FD7                 mov     rcx, [rsp+58h+var_10]
.text:0000000000401FDC
.text:0000000000401FDC loc_401FDC:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+25E↑j
.text:0000000000401FDC                 mov     [rcx], r12d
.text:0000000000401FDF                 jmp     short loc_40201E
.text:0000000000401FE1 ; ---------------------------------------------------------------------------
.text:0000000000401FE1
.text:0000000000401FE1 loc_401FE1:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+247↑j
.text:0000000000401FE1                 mov     r15d, [rbx]
.text:0000000000401FE4                 mov     edi, r15d
.text:0000000000401FE7                 mov     esi, [rbx-4]
.text:0000000000401FEA                 mov     r13, rbx
.text:0000000000401FED                 lea     r12, [rbx-4]
.text:0000000000401FF1                 call    r14
.text:0000000000401FF4                 test    al, al
.text:0000000000401FF6                 jz      short loc_402015
.text:0000000000401FF8
.text:0000000000401FF8 loc_401FF8:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+2B3↓j
.text:0000000000401FF8                 mov     eax, [r12]
.text:0000000000401FFC                 mov     edi, r15d
.text:0000000000401FFF                 mov     [r13+0], eax
.text:0000000000402003                 mov     r13, r12
.text:0000000000402006                 add     r12, 0FFFFFFFFFFFFFFFCh
.text:000000000040200A                 mov     esi, [r12]
.text:000000000040200E                 call    r14
.text:0000000000402011                 test    al, al
.text:0000000000402013                 jnz     short loc_401FF8
.text:0000000000402015
.text:0000000000402015 loc_402015:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+296↑j
.text:0000000000402015                 mov     [r13+0], r15d
.text:0000000000402019                 mov     rcx, [rsp+58h+var_10]
.text:000000000040201E
.text:000000000040201E loc_40201E:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+27F↑j
.text:000000000040201E                 add     rbx, 4
.text:0000000000402022                 cmp     rbx, rbp
.text:0000000000402025                 jnz     loc_401F9E
.text:000000000040202B                 mov     r12, [rsp+58h+var_58]
.text:000000000040202F                 mov     rdx, r14
.text:0000000000402032                 mov     r13, [rsp+58h+var_50]
.text:0000000000402037                 lea     r9, [rcx+40h]
.text:000000000040203B                 mov     r14, [rsp+58h+var_48]
.text:0000000000402040                 mov     r15, [rsp+58h+var_40]
.text:0000000000402045                 mov     rbx, [rsp+58h+var_38]
.text:000000000040204A                 mov     rbp, [rsp+58h+var_30]
.text:000000000040204F                 mov     rsi, [rsp+58h+var_18]
.text:0000000000402054
.text:0000000000402054 loc_402054:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+212↑j
.text:0000000000402054                 cmp     r9, rsi
.text:0000000000402057                 jz      loc_401D76
.text:000000000040205D                 mov     [rsp+58h+var_50], r13
.text:0000000000402062                 mov     [rsp+58h+var_48], r14
.text:0000000000402067                 mov     r14, rdx
.text:000000000040206A                 mov     [rsp+58h+var_40], r15
.text:000000000040206F                 mov     [rsp+58h+var_38], rbx
.text:0000000000402074                 mov     [rsp+58h+var_30], rbp
.text:0000000000402079                 mov     rbp, r9
.text:000000000040207C
.text:000000000040207C loc_40207C:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+358↓j
.text:000000000040207C                 mov     r13d, [rbp+0]
.text:0000000000402080                 mov     edi, r13d
.text:0000000000402083                 mov     esi, [rbp-4]
.text:0000000000402086                 mov     r15, rbp
.text:0000000000402089                 lea     rbx, [rbp-4]
.text:000000000040208D                 call    r14
.text:0000000000402090                 test    al, al
.text:0000000000402092                 jz      short loc_4020AC
.text:0000000000402094
.text:0000000000402094 loc_402094:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+34A↓j
.text:0000000000402094                 mov     eax, [rbx]
.text:0000000000402096                 mov     edi, r13d
.text:0000000000402099                 mov     [r15], eax
.text:000000000040209C                 mov     r15, rbx
.text:000000000040209F                 add     rbx, 0FFFFFFFFFFFFFFFCh
.text:00000000004020A3                 mov     esi, [rbx]
.text:00000000004020A5                 call    r14
.text:00000000004020A8                 test    al, al
.text:00000000004020AA                 jnz     short loc_402094
.text:00000000004020AC
.text:00000000004020AC loc_4020AC:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+332↑j
.text:00000000004020AC                 add     rbp, 4
.text:00000000004020B0                 mov     [r15], r13d
.text:00000000004020B3                 cmp     rbp, [rsp+58h+var_18]
.text:00000000004020B8                 jnz     short loc_40207C
.text:00000000004020BA                 mov     r13, [rsp+58h+var_50]
.text:00000000004020BF                 mov     r14, [rsp+58h+var_48]
.text:00000000004020C4                 mov     r15, [rsp+58h+var_40]
.text:00000000004020C9                 mov     rbx, [rsp+58h+var_38]
.text:00000000004020CE                 mov     rbp, [rsp+58h+var_30]
.text:00000000004020D3                 jmp     loc_401D76
.text:00000000004020D8 ; ---------------------------------------------------------------------------
.text:00000000004020D8
.text:00000000004020D8 loc_4020D8:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+201↑j
.text:00000000004020D8                 cmp     rcx, rsi
.text:00000000004020DB                 jz      loc_401D76
.text:00000000004020E1                 add     rcx, 4
.text:00000000004020E5                 cmp     rcx, rsi
.text:00000000004020E8                 jz      loc_401D76
.text:00000000004020EE                 mov     [rsp+58h+var_50], r13
.text:00000000004020F3                 mov     [rsp+58h+var_48], r14
.text:00000000004020F8                 mov     r14, rdx
.text:00000000004020FB                 mov     [rsp+58h+var_40], r15
.text:0000000000402100                 mov     [rsp+58h+var_38], rbx
.text:0000000000402105                 mov     rbx, rcx
.text:0000000000402108                 mov     [rsp+58h+var_30], rbp
.text:000000000040210D
.text:000000000040210D loc_40210D:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+42F↓j
.text:000000000040210D                 mov     rax, [rsp+58h+var_10]
.text:0000000000402112                 mov     edi, [rbx]
.text:0000000000402114                 mov     esi, [rax]
.text:0000000000402116                 call    r14
.text:0000000000402119                 test    al, al
.text:000000000040211B                 jz      short loc_402150
.text:000000000040211D                 mov     rdx, rbx
.text:0000000000402120                 mov     rsi, [rsp+58h+var_10]
.text:0000000000402125                 sub     rdx, rsi
.text:0000000000402128                 sar     rdx, 2
.text:000000000040212C                 mov     ebp, [rbx]
.text:000000000040212E                 test    rdx, rdx
.text:0000000000402131                 jz      short loc_40214C
.text:0000000000402133                 shl     rdx, 2
.text:0000000000402137                 mov     rax, rdx
.text:000000000040213A                 neg     rax
.text:000000000040213D                 lea     rdi, [rbx+rax+4]
.text:0000000000402142                 call    _intel_fast_memmove
.text:0000000000402147                 mov     rsi, [rsp+58h+var_10]
.text:000000000040214C
.text:000000000040214C loc_40214C:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+3D1↑j
.text:000000000040214C                 mov     [rsi], ebp
.text:000000000040214E                 jmp     short loc_402186
.text:0000000000402150 ; ---------------------------------------------------------------------------
.text:0000000000402150
.text:0000000000402150 loc_402150:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+3BB↑j
.text:0000000000402150                 mov     r15d, [rbx]
.text:0000000000402153                 mov     edi, r15d
.text:0000000000402156                 mov     esi, [rbx-4]
.text:0000000000402159                 mov     r13, rbx
.text:000000000040215C                 lea     rbp, [rbx-4]
.text:0000000000402160                 call    r14
.text:0000000000402163                 test    al, al
.text:0000000000402165                 jz      short loc_402182
.text:0000000000402167
.text:0000000000402167 loc_402167:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+420↓j
.text:0000000000402167                 mov     eax, [rbp+0]
.text:000000000040216A                 mov     edi, r15d
.text:000000000040216D                 mov     [r13+0], eax
.text:0000000000402171                 mov     r13, rbp
.text:0000000000402174                 add     rbp, 0FFFFFFFFFFFFFFFCh
.text:0000000000402178                 mov     esi, [rbp+0]
.text:000000000040217B                 call    r14
.text:000000000040217E                 test    al, al
.text:0000000000402180                 jnz     short loc_402167
.text:0000000000402182
.text:0000000000402182 loc_402182:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+405↑j
.text:0000000000402182                 mov     [r13+0], r15d
.text:0000000000402186
.text:0000000000402186 loc_402186:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+3EE↑j
.text:0000000000402186                 add     rbx, 4
.text:000000000040218A                 cmp     rbx, [rsp+58h+var_18]
.text:000000000040218F                 jnz     loc_40210D
.text:0000000000402195                 mov     r13, [rsp+58h+var_50]
.text:000000000040219A                 mov     r14, [rsp+58h+var_48]
.text:000000000040219F                 mov     r15, [rsp+58h+var_40]
.text:00000000004021A4                 mov     rbx, [rsp+58h+var_38]
.text:00000000004021A9                 mov     rbp, [rsp+58h+var_30]
.text:00000000004021AE                 jmp     loc_401D76
.text:00000000004021B3 ; ---------------------------------------------------------------------------
.text:00000000004021B3
.text:00000000004021B3 loc_4021B3:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+85↑j
.text:00000000004021B3                 mov     rsi, r15
.text:00000000004021B6                 mov     rcx, rbx
.text:00000000004021B9                 mov     r9, rsi
.text:00000000004021BC                 mov     rdx, r14
.text:00000000004021BF                 sub     r9, rcx
.text:00000000004021C2                 sar     r9, 2
.text:00000000004021C6                 mov     r13, [rsp+58h+var_50]
.text:00000000004021CB                 cmp     r9, 2
.text:00000000004021CF                 mov     r14, [rsp+58h+var_48]
.text:00000000004021D4                 mov     r15, [rsp+58h+var_40]
.text:00000000004021D9                 mov     rbx, [rsp+58h+var_38]
.text:00000000004021DE                 mov     rbp, [rsp+58h+var_30]
.text:00000000004021E3                 jge     loc_402352
.text:00000000004021E9
.text:00000000004021E9 loc_4021E9:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+68C↓j
.text:00000000004021E9                 cmp     r9, 1
.text:00000000004021ED                 jle     loc_4023BE
.text:00000000004021F3                 mov     r8d, 1
.text:00000000004021F9                 mov     [rsp+58h+var_58], r12
.text:00000000004021FD                 mov     r12d, r8d
.text:0000000000402200                 mov     [rsp+58h+var_50], r13
.text:0000000000402205                 mov     [rsp+58h+var_48], r14
.text:000000000040220A                 mov     r14, rdx
.text:000000000040220D                 mov     [rsp+58h+var_40], r15
.text:0000000000402212                 mov     r15, rsi
.text:0000000000402215                 mov     [rsp+58h+var_38], rbx
.text:000000000040221A                 mov     [rsp+58h+var_30], rbp
.text:000000000040221F
.text:000000000040221F loc_40221F:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+5C2↓j
.text:000000000040221F                 add     r15, 0FFFFFFFFFFFFFFFCh
.text:0000000000402223                 xor     edi, edi
.text:0000000000402225                 mov     rbx, r15
.text:0000000000402228                 xor     ebp, ebp
.text:000000000040222A                 sub     rbx, rcx
.text:000000000040222D                 sar     rbx, 2
.text:0000000000402231                 test    rbx, rbx
.text:0000000000402234                 mov     eax, [rcx]
.text:0000000000402236                 cmovle  edi, r12d
.text:000000000040223A                 mov     r13d, [r15]
.text:000000000040223D                 mov     [r15], eax
.text:0000000000402240                 xor     eax, eax
.text:0000000000402242                 lea     r9, [rbx+rdi-1]
.text:0000000000402247                 sar     r9, 1
.text:000000000040224A                 test    r9, r9
.text:000000000040224D                 jle     loc_4023AC
.text:0000000000402253                 mov     [rsp+58h+var_28], r15
.text:0000000000402258                 mov     r12, r9
.text:000000000040225B
.text:000000000040225B loc_40225B:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+52D↓j
.text:000000000040225B                 lea     r15, ds:2[rax*2]
.text:0000000000402263                 mov     edi, [rcx+r15*4]
.text:0000000000402267                 mov     esi, [rcx+r15*4-4]
.text:000000000040226C                 call    r14
.text:000000000040226F                 mov     ecx, eax
.text:0000000000402271                 test    cl, cl
.text:0000000000402273                 lea     rax, [r15-1]
.text:0000000000402277                 mov     rcx, [rsp+58h+var_10]
.text:000000000040227C                 jnz     short loc_402281
.text:000000000040227E                 mov     rax, r15
.text:0000000000402281
.text:0000000000402281 loc_402281:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+51C↑j
.text:0000000000402281                 mov     edi, [rcx+rax*4]
.text:0000000000402284                 cmp     rax, r12
.text:0000000000402287                 mov     [rcx+rbp*4], edi
.text:000000000040228A                 mov     rbp, rax
.text:000000000040228D                 jl      short loc_40225B
.text:000000000040228F                 mov     r15, [rsp+58h+var_28]
.text:0000000000402294                 mov     r12d, 1
.text:000000000040229A                 test    rbx, 1
.text:00000000004022A1                 jnz     short loc_4022CB
.text:00000000004022A3
.text:00000000004022A3 loc_4022A3:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+653↓j
.text:00000000004022A3                 lea     rdi, [rbx-2]
.text:00000000004022A7                 shr     rdi, 3Fh
.text:00000000004022AB                 lea     r9, [rbx+rdi-2]
.text:00000000004022B0                 sar     r9, 1
.text:00000000004022B3                 cmp     rax, r9
.text:00000000004022B6                 jnz     short loc_4022CB
.text:00000000004022B8                 lea     rdi, ds:2[rax*2]
.text:00000000004022C0                 mov     eax, [rcx+rdi*4-4]
.text:00000000004022C4                 mov     [rcx+rbp*4], eax
.text:00000000004022C7                 lea     rbp, [rdi-1]
.text:00000000004022CB
.text:00000000004022CB loc_4022CB:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+541↑j
.text:00000000004022CB                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+556↑j ...
.text:00000000004022CB                 lea     rax, [rbp-1]
.text:00000000004022CF                 shr     rax, 3Fh
.text:00000000004022D3                 lea     rbx, [rbp+rax-1]
.text:00000000004022D8                 sar     rbx, 1
.text:00000000004022DB                 test    rbp, rbp
.text:00000000004022DE                 jle     short loc_402310
.text:00000000004022E0
.text:00000000004022E0 loc_4022E0:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+5AE↓j
.text:00000000004022E0                 mov     esi, r13d
.text:00000000004022E3                 mov     edi, [rcx+rbx*4]
.text:00000000004022E6                 call    r14
.text:00000000004022E9                 mov     rcx, [rsp+58h+var_10]
.text:00000000004022EE                 test    al, al
.text:00000000004022F0                 jz      short loc_402310
.text:00000000004022F2                 lea     rdi, [rbx-1]
.text:00000000004022F6                 shr     rdi, 3Fh
.text:00000000004022FA                 mov     eax, [rcx+rbx*4]
.text:00000000004022FD                 mov     [rcx+rbp*4], eax
.text:0000000000402300                 mov     rbp, rbx
.text:0000000000402303                 lea     rbx, [rbx+rdi-1]
.text:0000000000402308                 sar     rbx, 1
.text:000000000040230B                 test    rbp, rbp
.text:000000000040230E                 jg      short loc_4022E0
.text:0000000000402310
.text:0000000000402310 loc_402310:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+57E↑j
.text:0000000000402310                                         ; std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+590↑j
.text:0000000000402310                 mov     rax, r15
.text:0000000000402313                 sub     rax, rcx
.text:0000000000402316                 sar     rax, 2
.text:000000000040231A                 mov     [rcx+rbp*4], r13d
.text:000000000040231E                 cmp     rax, 1
.text:0000000000402322                 jg      loc_40221F
.text:0000000000402328                 mov     r12, [rsp+58h+var_58]
.text:000000000040232C                 mov     rdx, r14
.text:000000000040232F                 mov     r13, [rsp+58h+var_50]
.text:0000000000402334                 mov     r14, [rsp+58h+var_48]
.text:0000000000402339                 mov     r15, [rsp+58h+var_40]
.text:000000000040233E                 mov     rbx, [rsp+58h+var_38]
.text:0000000000402343                 mov     rbp, [rsp+58h+var_30]
.text:0000000000402348                 mov     rsi, [rsp+58h+var_18]
.text:000000000040234D                 jmp     loc_401F53
.text:0000000000402352 ; ---------------------------------------------------------------------------
.text:0000000000402352
.text:0000000000402352 loc_402352:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+483↑j
.text:0000000000402352                 mov     rdi, [rsp+58h+var_10]
.text:0000000000402357                 lea     rax, [r9-2]
.text:000000000040235B                 shr     rax, 3Fh
.text:000000000040235F                 mov     [rsp+58h+var_48], r14
.text:0000000000402364                 mov     r14, rdx
.text:0000000000402367                 mov     [rsp+58h+var_40], r15
.text:000000000040236C                 mov     r15, rsi
.text:000000000040236F                 mov     [rsp+58h+var_38], rbx
.text:0000000000402374                 mov     rbx, r9
.text:0000000000402377                 mov     [rsp+58h+var_30], rbp
.text:000000000040237C                 lea     rax, [r9+rax-2]
.text:0000000000402381                 sar     rax, 1
.text:0000000000402384                 mov     rbp, rax
.text:0000000000402387                 jmp     short loc_40238C
.text:0000000000402389 ; ---------------------------------------------------------------------------
.text:0000000000402389
.text:0000000000402389 loc_402389:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+64A↓j
.text:0000000000402389                 dec     rbp
.text:000000000040238C
.text:000000000040238C loc_40238C:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+627↑j
.text:000000000040238C                 mov     rsi, rbp
.text:000000000040238F                 mov     rdx, rbx
.text:0000000000402392                 mov     r8, r14
.text:0000000000402395                 mov     ecx, [rcx+rbp*4]
.text:0000000000402398                 call    _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliPFbiiEEvT_T0_SA_T1_T2_ ; std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))
.text:000000000040239D                 mov     rcx, [rsp+58h+var_10]
.text:00000000004023A2                 mov     rdi, rcx
.text:00000000004023A5                 test    rbp, rbp
.text:00000000004023A8                 jz      short loc_4023C8
.text:00000000004023AA                 jmp     short loc_402389
.text:00000000004023AC ; ---------------------------------------------------------------------------
.text:00000000004023AC
.text:00000000004023AC loc_4023AC:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+4ED↑j
.text:00000000004023AC                 test    rbx, 1
.text:00000000004023B3                 jz      loc_4022A3
.text:00000000004023B9                 jmp     loc_4022CB
.text:00000000004023BE ; ---------------------------------------------------------------------------
.text:00000000004023BE
.text:00000000004023BE loc_4023BE:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+48D↑j
.text:00000000004023BE                 mov     rsi, [rsp+58h+var_18]
.text:00000000004023C3                 jmp     loc_401F53
.text:00000000004023C8 ; ---------------------------------------------------------------------------
.text:00000000004023C8
.text:00000000004023C8 loc_4023C8:                             ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+648↑j
.text:00000000004023C8                 mov     rsi, r15
.text:00000000004023CB                 mov     rdx, r14
.text:00000000004023CE                 mov     r9, rsi
.text:00000000004023D1                 sub     r9, rcx
.text:00000000004023D4                 mov     r14, [rsp+58h+var_48]
.text:00000000004023D9                 mov     r15, [rsp+58h+var_40]
.text:00000000004023DE                 mov     rbx, [rsp+58h+var_38]
.text:00000000004023E3                 mov     rbp, [rsp+58h+var_30]
.text:00000000004023E8                 sar     r9, 2
.text:00000000004023EC                 jmp     loc_4021E9
.text:00000000004023EC _ZSt4sortIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEPFbiiEEvT_S9_T0_ endp
.text:00000000004023EC
.text:00000000004023EC ; ---------------------------------------------------------------------------
.text:00000000004023F1                 align 20h
.text:00000000004023F1 ; } // starts at 401D60
.text:0000000000402400
.text:0000000000402400 ; =============== S U B R O U T I N E =======================================
.text:0000000000402400
.text:0000000000402400
.text:0000000000402400 ; void std::__adjust_heap<__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, long, int, bool (*)(int, int)>(__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, long, long, int, bool (*)(int, int))
.text:0000000000402400                 public _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliPFbiiEEvT_T0_SA_T1_T2_ ; weak
.text:0000000000402400 _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliPFbiiEEvT_T0_SA_T1_T2_ proc near
.text:0000000000402400                                         ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+638↑p
.text:0000000000402400
.text:0000000000402400 var_48          = dword ptr -48h
.text:0000000000402400 var_40          = qword ptr -40h
.text:0000000000402400 var_38          = qword ptr -38h
.text:0000000000402400
.text:0000000000402400 ; __unwind { // ___gxx_personality_v0
.text:0000000000402400                 push    r12
.text:0000000000402402                 push    r13
.text:0000000000402404                 push    r14
.text:0000000000402406                 push    r15
.text:0000000000402408                 push    rbx
.text:0000000000402409                 sub     rsp, 20h
.text:000000000040240D                 xor     r11d, r11d
.text:0000000000402410                 test    rdx, rdx
.text:0000000000402413                 mov     r10, rsi
.text:0000000000402416                 mov     esi, 1
.text:000000000040241B                 mov     r9, r10
.text:000000000040241E                 cmovle  r11d, esi
.text:0000000000402422                 mov     rax, r10
.text:0000000000402425                 mov     [rsp+48h+var_38], rdi
.text:000000000040242A                 lea     r11, [rdx+r11-1]
.text:000000000040242F                 sar     r11, 1
.text:0000000000402432                 cmp     r10, r11
.text:0000000000402435                 jge     short loc_4024A3
.text:0000000000402437                 mov     [rsp+48h+var_48], ecx
.text:000000000040243A                 mov     r15, r11
.text:000000000040243D                 mov     [rsp+48h+var_40], rbp
.text:0000000000402442                 mov     rbp, rdx
.text:0000000000402445                 mov     r11, rdi
.text:0000000000402448                 mov     r13, r8
.text:000000000040244B                 mov     rbx, r9
.text:000000000040244E                 mov     r12, r10
.text:0000000000402451
.text:0000000000402451 loc_402451:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))+85↓j
.text:0000000000402451                 lea     r14, ds:2[rax*2]
.text:0000000000402459                 mov     edi, [r11+r14*4]
.text:000000000040245D                 mov     esi, [r11+r14*4-4]
.text:0000000000402462                 call    r13
.text:0000000000402465                 mov     ecx, eax
.text:0000000000402467                 test    cl, cl
.text:0000000000402469                 lea     rax, [r14-1]
.text:000000000040246D                 mov     r11, [rsp+48h+var_38]
.text:0000000000402472                 jnz     short loc_402477
.text:0000000000402474                 mov     rax, r14
.text:0000000000402477
.text:0000000000402477 loc_402477:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))+72↑j
.text:0000000000402477                 mov     esi, [r11+rax*4]
.text:000000000040247B                 cmp     rax, r15
.text:000000000040247E                 mov     [r11+r12*4], esi
.text:0000000000402482                 mov     r12, rax
.text:0000000000402485                 jl      short loc_402451
.text:0000000000402487                 mov     ecx, [rsp+48h+var_48]
.text:000000000040248A                 mov     r9, rbx
.text:000000000040248D                 mov     rdx, rbp
.text:0000000000402490                 mov     rdi, r11
.text:0000000000402493                 mov     rbp, [rsp+48h+var_40]
.text:0000000000402498                 mov     r10, r12
.text:000000000040249B                 mov     r8, r13
.text:000000000040249E                 mov     esi, 1
.text:00000000004024A3
.text:00000000004024A3 loc_4024A3:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))+35↑j
.text:00000000004024A3                 test    rdx, 1
.text:00000000004024AA                 jnz     short loc_4024D8
.text:00000000004024AC                 xor     r11d, r11d
.text:00000000004024AF                 cmp     rdx, 2
.text:00000000004024B3                 cmovl   r11d, esi
.text:00000000004024B7                 lea     rdx, [rdx+r11-2]
.text:00000000004024BC                 sar     rdx, 1
.text:00000000004024BF                 cmp     rax, rdx
.text:00000000004024C2                 jnz     short loc_4024D8
.text:00000000004024C4                 lea     rdx, ds:2[rax*2]
.text:00000000004024CC                 mov     eax, [rdi+rdx*4-4]
.text:00000000004024D0                 mov     [rdi+r10*4], eax
.text:00000000004024D4                 lea     r10, [rdx-1]
.text:00000000004024D8
.text:00000000004024D8 loc_4024D8:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))+AA↑j
.text:00000000004024D8                                         ; std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))+C2↑j
.text:00000000004024D8                 lea     rax, [r10-1]
.text:00000000004024DC                 shr     rax, 3Fh
.text:00000000004024E0                 lea     rdx, [r10+rax-1]
.text:00000000004024E5                 sar     rdx, 1
.text:00000000004024E8                 cmp     r10, r9
.text:00000000004024EB                 jle     short loc_402535
.text:00000000004024ED                 mov     r15, rdx
.text:00000000004024F0                 mov     r14d, ecx
.text:00000000004024F3                 mov     r13, r8
.text:00000000004024F6                 mov     rbx, r9
.text:00000000004024F9                 mov     r12, r10
.text:00000000004024FC
.text:00000000004024FC loc_4024FC:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))+12D↓j
.text:00000000004024FC                 mov     esi, r14d
.text:00000000004024FF                 mov     edi, [rdi+r15*4]
.text:0000000000402503                 call    r13
.text:0000000000402506                 mov     rdi, [rsp+48h+var_38]
.text:000000000040250B                 test    al, al
.text:000000000040250D                 jz      short loc_40252F
.text:000000000040250F                 mov     eax, [rdi+r15*4]
.text:0000000000402513                 mov     [rdi+r12*4], eax
.text:0000000000402517                 lea     rax, [r15-1]
.text:000000000040251B                 shr     rax, 3Fh
.text:000000000040251F                 mov     r12, r15
.text:0000000000402522                 lea     r15, [r15+rax-1]
.text:0000000000402527                 sar     r15, 1
.text:000000000040252A                 cmp     r12, rbx
.text:000000000040252D                 jg      short loc_4024FC
.text:000000000040252F
.text:000000000040252F loc_40252F:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))+10D↑j
.text:000000000040252F                 mov     r10, r12
.text:0000000000402532                 mov     ecx, r14d
.text:0000000000402535
.text:0000000000402535 loc_402535:                             ; CODE XREF: std::__adjust_heap<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,int,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,long,int,bool (*)(int,int))+EB↑j
.text:0000000000402535                 mov     [rdi+r10*4], ecx
.text:0000000000402539                 add     rsp, 20h
.text:000000000040253D                 pop     rbx
.text:000000000040253E                 pop     r15
.text:0000000000402540                 pop     r14
.text:0000000000402542                 pop     r13
.text:0000000000402544                 pop     r12
.text:0000000000402546                 retn
.text:0000000000402546 _ZSt13__adjust_heapIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEliPFbiiEEvT_T0_SA_T1_T2_ endp
.text:0000000000402546
.text:0000000000402546 ; ---------------------------------------------------------------------------
.text:0000000000402547                 align 10h
.text:0000000000402547 ; } // starts at 402400
.text:0000000000402550
.text:0000000000402550 ; =============== S U B R O U T I N E =======================================
.text:0000000000402550
.text:0000000000402550
.text:0000000000402550 ; void std::__introsort_loop<__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, long, bool (*)(int, int)>(__gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, __gnu_cxx::__normal_iterator<int *, std::vector<int, std::allocator<int>>>, long, bool (*)(int, int))
.text:0000000000402550                 public _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElPFbiiEEvT_S9_T0_T1_ ; weak
.text:0000000000402550 _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElPFbiiEEvT_S9_T0_T1_ proc near
.text:0000000000402550                                         ; CODE XREF: std::sort<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,bool (*)(int,int))+1AC↑p
.text:0000000000402550                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+16E↓p
.text:0000000000402550
.text:0000000000402550 var_58          = qword ptr -58h
.text:0000000000402550 var_50          = qword ptr -50h
.text:0000000000402550 var_48          = qword ptr -48h
.text:0000000000402550 var_40          = qword ptr -40h
.text:0000000000402550 var_38          = qword ptr -38h
.text:0000000000402550 var_30          = qword ptr -30h
.text:0000000000402550
.text:0000000000402550 ; __unwind { // ___gxx_personality_v0
.text:0000000000402550                 push    r13
.text:0000000000402552                 push    r14
.text:0000000000402554                 push    r15
.text:0000000000402556                 push    rbx
.text:0000000000402557                 push    rbp
.text:0000000000402558                 sub     rsp, 30h
.text:000000000040255C                 mov     rax, rsi
.text:000000000040255F                 sub     rax, rdi
.text:0000000000402562                 mov     r9, rcx
.text:0000000000402565                 sar     rax, 2
.text:0000000000402569                 mov     [rsp+58h+var_30], rdi
.text:000000000040256E                 cmp     rax, 10h
.text:0000000000402572                 mov     [rsp+58h+var_50], rsi
.text:0000000000402577                 jle     loc_4026E6
.text:000000000040257D                 mov     r14, rdx
.text:0000000000402580                 mov     r13, rsi
.text:0000000000402583                 mov     rbp, rdi
.text:0000000000402586                 mov     r15, r9
.text:0000000000402589
.text:0000000000402589 loc_402589:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+190↓j
.text:0000000000402589                 test    r14, r14
.text:000000000040258C                 jz      loc_4026F3
.text:0000000000402592                 mov     rbx, r13
.text:0000000000402595                 dec     r14
.text:0000000000402598                 sub     rbx, rbp
.text:000000000040259B                 sar     rbx, 2
.text:000000000040259F                 mov     rax, rbx
.text:00000000004025A2                 shr     rax, 3Fh
.text:00000000004025A6                 add     rbx, rax
.text:00000000004025A9                 sar     rbx, 1
.text:00000000004025AC                 mov     edi, [rbp+0]
.text:00000000004025AF                 mov     esi, [rbp+rbx*4+0]
.text:00000000004025B3                 call    r15
.text:00000000004025B6                 test    al, al
.text:00000000004025B8                 jz      short loc_402607
.text:00000000004025BA                 mov     edi, [rbp+rbx*4+0]
.text:00000000004025BE                 mov     esi, [r13-4]
.text:00000000004025C2                 call    r15
.text:00000000004025C5                 test    al, al
.text:00000000004025C7                 jz      short loc_4025E0
.text:00000000004025C9                 mov     rax, [rsp+58h+var_30]
.text:00000000004025CE                 mov     r10d, [rbp+rbx*4+0]
.text:00000000004025D3                 mov     r11d, [rax]
.text:00000000004025D6                 mov     [rax], r10d
.text:00000000004025D9                 mov     [rbp+rbx*4+0], r11d
.text:00000000004025DE                 jmp     short loc_402656
.text:00000000004025E0 ; ---------------------------------------------------------------------------
.text:00000000004025E0
.text:00000000004025E0 loc_4025E0:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+77↑j
.text:00000000004025E0                 mov     rax, [rsp+58h+var_30]
.text:00000000004025E5                 mov     esi, [r13-4]
.text:00000000004025E9                 mov     edi, [rax]
.text:00000000004025EB                 call    r15
.text:00000000004025EE                 mov     ebx, eax
.text:00000000004025F0                 mov     rax, [rsp+58h+var_30]
.text:00000000004025F5                 test    bl, bl
.text:00000000004025F7                 jz      short loc_402656
.text:00000000004025F9                 mov     ebx, [r13-4]
.text:00000000004025FD                 mov     ebp, [rax]
.text:00000000004025FF                 mov     [rax], ebx
.text:0000000000402601                 mov     [r13-4], ebp
.text:0000000000402605                 jmp     short loc_402656
.text:0000000000402607 ; ---------------------------------------------------------------------------
.text:0000000000402607
.text:0000000000402607 loc_402607:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+68↑j
.text:0000000000402607                 mov     rax, [rsp+58h+var_30]
.text:000000000040260C                 mov     esi, [r13-4]
.text:0000000000402610                 mov     edi, [rax]
.text:0000000000402612                 call    r15
.text:0000000000402615                 test    al, al
.text:0000000000402617                 jnz     short loc_402651
.text:0000000000402619                 mov     edi, [rbp+rbx*4+0]
.text:000000000040261D                 mov     esi, [r13-4]
.text:0000000000402621                 call    r15
.text:0000000000402624                 mov     r10d, eax
.text:0000000000402627                 mov     rax, [rsp+58h+var_30]
.text:000000000040262C                 test    r10b, r10b
.text:000000000040262F                 jz      short loc_40263F
.text:0000000000402631                 mov     ebx, [r13-4]
.text:0000000000402635                 mov     ebp, [rax]
.text:0000000000402637                 mov     [rax], ebx
.text:0000000000402639                 mov     [r13-4], ebp
.text:000000000040263D                 jmp     short loc_402656
.text:000000000040263F ; ---------------------------------------------------------------------------
.text:000000000040263F
.text:000000000040263F loc_40263F:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+DF↑j
.text:000000000040263F                 mov     r10d, [rbp+rbx*4+0]
.text:0000000000402644                 mov     r11d, [rax]
.text:0000000000402647                 mov     [rax], r10d
.text:000000000040264A                 mov     [rbp+rbx*4+0], r11d
.text:000000000040264F                 jmp     short loc_402656
.text:0000000000402651 ; ---------------------------------------------------------------------------
.text:0000000000402651
.text:0000000000402651 loc_402651:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+C7↑j
.text:0000000000402651                 mov     rax, [rsp+58h+var_30]
.text:0000000000402656
.text:0000000000402656 loc_402656:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+8E↑j
.text:0000000000402656                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+A7↑j ...
.text:0000000000402656                 lea     rbx, [rax+4]
.text:000000000040265A                 jmp     short loc_402671
.text:000000000040265C ; ---------------------------------------------------------------------------
.text:000000000040265C
.text:000000000040265C loc_40265C:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+159↓j
.text:000000000040265C                 mov     eax, [r13+0]
.text:0000000000402660                 mov     ebp, [rbx]
.text:0000000000402662                 mov     [rbx], eax
.text:0000000000402664                 add     rbx, 4
.text:0000000000402668                 mov     [r13+0], ebp
.text:000000000040266C                 mov     rax, [rsp+58h+var_30]
.text:0000000000402671
.text:0000000000402671 loc_402671:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+10A↑j
.text:0000000000402671                 mov     edi, [rbx]
.text:0000000000402673                 mov     esi, [rax]
.text:0000000000402675                 call    r15
.text:0000000000402678                 test    al, al
.text:000000000040267A                 jz      short loc_402690
.text:000000000040267C
.text:000000000040267C loc_40267C:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+13E↓j
.text:000000000040267C                 add     rbx, 4
.text:0000000000402680                 mov     rax, [rsp+58h+var_30]
.text:0000000000402685                 mov     edi, [rbx]
.text:0000000000402687                 mov     esi, [rax]
.text:0000000000402689                 call    r15
.text:000000000040268C                 test    al, al
.text:000000000040268E                 jnz     short loc_40267C
.text:0000000000402690
.text:0000000000402690 loc_402690:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+12A↑j
.text:0000000000402690                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+154↓j
.text:0000000000402690                 add     r13, 0FFFFFFFFFFFFFFFCh
.text:0000000000402694                 mov     rax, [rsp+58h+var_30]
.text:0000000000402699                 mov     edi, [rax]
.text:000000000040269B                 mov     esi, [r13+0]
.text:000000000040269F                 call    r15
.text:00000000004026A2                 test    al, al
.text:00000000004026A4                 jnz     short loc_402690
.text:00000000004026A6                 cmp     rbx, r13
.text:00000000004026A9                 jb      short loc_40265C
.text:00000000004026AB                 mov     rdi, rbx
.text:00000000004026AE                 mov     rdx, r14
.text:00000000004026B1                 mov     rcx, r15
.text:00000000004026B4                 mov     rsi, [rsp+58h+var_50]
.text:00000000004026B9                 mov     [rsp+58h+var_48], rbx
.text:00000000004026BE                 call    _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElPFbiiEEvT_S9_T0_T1_ ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))
.text:00000000004026C3                 mov     r13, [rsp+58h+var_48]
.text:00000000004026C8                 mov     rax, r13
.text:00000000004026CB                 mov     rbp, [rsp+58h+var_30]
.text:00000000004026D0                 sub     rax, rbp
.text:00000000004026D3                 sar     rax, 2
.text:00000000004026D7                 mov     [rsp+58h+var_50], r13
.text:00000000004026DC                 cmp     rax, 10h
.text:00000000004026E0                 jg      loc_402589
.text:00000000004026E6
.text:00000000004026E6 loc_4026E6:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+27↑j
.text:00000000004026E6                 add     rsp, 30h
.text:00000000004026EA                 pop     rbp
.text:00000000004026EB                 pop     rbx
.text:00000000004026EC                 pop     r15
.text:00000000004026EE                 pop     r14
.text:00000000004026F0                 pop     r13
.text:00000000004026F2                 retn
.text:00000000004026F3 ; ---------------------------------------------------------------------------
.text:00000000004026F3
.text:00000000004026F3 loc_4026F3:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+3C↑j
.text:00000000004026F3                 mov     rsi, r13
.text:00000000004026F6                 mov     rdi, rbp
.text:00000000004026F9                 mov     rax, rsi
.text:00000000004026FC                 mov     r9, r15
.text:00000000004026FF                 sub     rax, rdi
.text:0000000000402702                 sar     rax, 2
.text:0000000000402706                 cmp     rax, 2
.text:000000000040270A                 jge     loc_402855
.text:0000000000402710
.text:0000000000402710 loc_402710:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+45E↓j
.text:0000000000402710                 cmp     rax, 1
.text:0000000000402714                 jle     loc_402848
.text:000000000040271A                 mov     edx, 1
.text:000000000040271F                 mov     r8, rdi
.text:0000000000402722                 mov     [rsp+58h+var_58], r12
.text:0000000000402726                 mov     ebx, edx
.text:0000000000402728                 mov     r12, r9
.text:000000000040272B
.text:000000000040272B loc_40272B:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+2EE↓j
.text:000000000040272B                 add     rsi, 0FFFFFFFFFFFFFFFCh
.text:000000000040272F                 xor     ecx, ecx
.text:0000000000402731                 mov     r14, rsi
.text:0000000000402734                 xor     ebp, ebp
.text:0000000000402736                 sub     r14, r8
.text:0000000000402739                 sar     r14, 2
.text:000000000040273D                 test    r14, r14
.text:0000000000402740                 mov     eax, [r8]
.text:0000000000402743                 cmovle  ecx, ebx
.text:0000000000402746                 mov     r13d, [rsi]
.text:0000000000402749                 mov     [rsi], eax
.text:000000000040274B                 xor     eax, eax
.text:000000000040274D                 lea     r15, [r14+rcx-1]
.text:0000000000402752                 sar     r15, 1
.text:0000000000402755                 test    r15, r15
.text:0000000000402758                 jle     loc_402983
.text:000000000040275E                 mov     [rsp+58h+var_38], rsi
.text:0000000000402763
.text:0000000000402763 loc_402763:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+249↓j
.text:0000000000402763                 lea     rbx, ds:2[rax*2]
.text:000000000040276B                 mov     edi, [r8+rbx*4]
.text:000000000040276F                 mov     esi, [r8+rbx*4-4]
.text:0000000000402774                 call    r12
.text:0000000000402777                 mov     r8d, eax
.text:000000000040277A                 test    r8b, r8b
.text:000000000040277D                 lea     rax, [rbx-1]
.text:0000000000402781                 mov     r8, [rsp+58h+var_30]
.text:0000000000402786                 jnz     short loc_40278B
.text:0000000000402788                 mov     rax, rbx
.text:000000000040278B
.text:000000000040278B loc_40278B:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+236↑j
.text:000000000040278B                 mov     edx, [r8+rax*4]
.text:000000000040278F                 cmp     rax, r15
.text:0000000000402792                 mov     [r8+rbp*4], edx
.text:0000000000402796                 mov     rbp, rax
.text:0000000000402799                 jl      short loc_402763
.text:000000000040279B                 mov     rsi, [rsp+58h+var_38]
.text:00000000004027A0                 mov     ebx, 1
.text:00000000004027A5                 test    r14, 1
.text:00000000004027AC                 jnz     short loc_4027D8
.text:00000000004027AE
.text:00000000004027AE loc_4027AE:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+43A↓j
.text:00000000004027AE                 lea     rcx, [r14-2]
.text:00000000004027B2                 shr     rcx, 3Fh
.text:00000000004027B6                 lea     r10, [r14+rcx-2]
.text:00000000004027BB                 sar     r10, 1
.text:00000000004027BE                 cmp     rax, r10
.text:00000000004027C1                 jnz     short loc_4027D8
.text:00000000004027C3                 lea     rcx, ds:2[rax*2]
.text:00000000004027CB                 mov     eax, [r8+rcx*4-4]
.text:00000000004027D0                 mov     [r8+rbp*4], eax
.text:00000000004027D4                 lea     rbp, [rcx-1]
.text:00000000004027D8
.text:00000000004027D8 loc_4027D8:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+25C↑j
.text:00000000004027D8                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+271↑j ...
.text:00000000004027D8                 lea     rax, [rbp-1]
.text:00000000004027DC                 shr     rax, 3Fh
.text:00000000004027E0                 lea     r14, [rbp+rax-1]
.text:00000000004027E5                 sar     r14, 1
.text:00000000004027E8                 test    rbp, rbp
.text:00000000004027EB                 jle     short loc_40282C
.text:00000000004027ED                 mov     r15, r12
.text:00000000004027F0                 mov     r12, rsi
.text:00000000004027F3
.text:00000000004027F3 loc_4027F3:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+2D4↓j
.text:00000000004027F3                 mov     esi, r13d
.text:00000000004027F6                 mov     edi, [r8+r14*4]
.text:00000000004027FA                 call    r15
.text:00000000004027FD                 mov     r8, [rsp+58h+var_30]
.text:0000000000402802                 test    al, al
.text:0000000000402804                 jz      short loc_402826
.text:0000000000402806                 lea     rcx, [r14-1]
.text:000000000040280A                 shr     rcx, 3Fh
.text:000000000040280E                 mov     eax, [r8+r14*4]
.text:0000000000402812                 mov     [r8+rbp*4], eax
.text:0000000000402816                 mov     rbp, r14
.text:0000000000402819                 lea     r14, [r14+rcx-1]
.text:000000000040281E                 sar     r14, 1
.text:0000000000402821                 test    rbp, rbp
.text:0000000000402824                 jg      short loc_4027F3
.text:0000000000402826
.text:0000000000402826 loc_402826:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+2B4↑j
.text:0000000000402826                 mov     rsi, r12
.text:0000000000402829                 mov     r12, r15
.text:000000000040282C
.text:000000000040282C loc_40282C:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+29B↑j
.text:000000000040282C                 mov     rax, rsi
.text:000000000040282F                 sub     rax, r8
.text:0000000000402832                 sar     rax, 2
.text:0000000000402836                 mov     [r8+rbp*4], r13d
.text:000000000040283A                 cmp     rax, 1
.text:000000000040283E                 jg      loc_40272B
.text:0000000000402844                 mov     r12, [rsp+58h+var_58]
.text:0000000000402848
.text:0000000000402848 loc_402848:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+1C4↑j
.text:0000000000402848                 add     rsp, 30h
.text:000000000040284C                 pop     rbp
.text:000000000040284D                 pop     rbx
.text:000000000040284E                 pop     r15
.text:0000000000402850                 pop     r14
.text:0000000000402852                 pop     r13
.text:0000000000402854                 retn
.text:0000000000402855 ; ---------------------------------------------------------------------------
.text:0000000000402855
.text:0000000000402855 loc_402855:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+1BA↑j
.text:0000000000402855                 mov     edx, 1
.text:000000000040285A                 xor     r10d, r10d
.text:000000000040285D                 test    rax, rax
.text:0000000000402860                 lea     rcx, [rax-2]
.text:0000000000402864                 cmovle  r10d, edx
.text:0000000000402868                 mov     r8, rdi
.text:000000000040286B                 shr     rcx, 3Fh
.text:000000000040286F                 mov     [rsp+58h+var_38], rsi
.text:0000000000402874                 mov     [rsp+58h+var_58], r12
.text:0000000000402878                 mov     r12, r9
.text:000000000040287B                 lea     rcx, [rax+rcx-2]
.text:0000000000402880                 sar     rcx, 1
.text:0000000000402883                 lea     rdx, [rax+r10-1]
.text:0000000000402888                 mov     r10, rcx
.text:000000000040288B                 and     rax, 1
.text:000000000040288F                 sar     rdx, 1
.text:0000000000402892                 mov     rbp, rcx
.text:0000000000402895                 mov     r13, r10
.text:0000000000402898                 jmp     short loc_40289D
.text:000000000040289A ; ---------------------------------------------------------------------------
.text:000000000040289A
.text:000000000040289A loc_40289A:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+42E↓j
.text:000000000040289A                 dec     rbp
.text:000000000040289D
.text:000000000040289D loc_40289D:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+348↑j
.text:000000000040289D                 mov     r14d, [r8+rbp*4]
.text:00000000004028A1                 mov     r15, rbp
.text:00000000004028A4                 mov     r11, rbp
.text:00000000004028A7                 cmp     rbp, rdx
.text:00000000004028AA                 jge     short loc_4028FA
.text:00000000004028AC                 mov     [rsp+58h+var_50], rax
.text:00000000004028B1                 mov     rbx, rdx
.text:00000000004028B4                 mov     [rsp+58h+var_48], rbp
.text:00000000004028B9
.text:00000000004028B9 loc_4028B9:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+39B↓j
.text:00000000004028B9                 lea     rbp, ds:2[r11*2]
.text:00000000004028C1                 mov     edi, [r8+rbp*4]
.text:00000000004028C5                 mov     esi, [r8+rbp*4-4]
.text:00000000004028CA                 call    r12
.text:00000000004028CD                 test    al, al
.text:00000000004028CF                 lea     r11, [rbp-1]
.text:00000000004028D3                 mov     r8, [rsp+58h+var_30]
.text:00000000004028D8                 jnz     short loc_4028DD
.text:00000000004028DA                 mov     r11, rbp
.text:00000000004028DD
.text:00000000004028DD loc_4028DD:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+388↑j
.text:00000000004028DD                 mov     ecx, [r8+r11*4]
.text:00000000004028E1                 cmp     r11, rbx
.text:00000000004028E4                 mov     [r8+r15*4], ecx
.text:00000000004028E8                 mov     r15, r11
.text:00000000004028EB                 jl      short loc_4028B9
.text:00000000004028ED                 mov     rax, [rsp+58h+var_50]
.text:00000000004028F2                 mov     rdx, rbx
.text:00000000004028F5                 mov     rbp, [rsp+58h+var_48]
.text:00000000004028FA
.text:00000000004028FA loc_4028FA:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+35A↑j
.text:00000000004028FA                 test    rax, rax
.text:00000000004028FD                 jnz     short loc_402919
.text:00000000004028FF                 cmp     r11, r13
.text:0000000000402902                 jnz     short loc_402919
.text:0000000000402904                 lea     rcx, ds:2[r11*2]
.text:000000000040290C                 mov     r11d, [r8+rcx*4-4]
.text:0000000000402911                 mov     [r8+r15*4], r11d
.text:0000000000402915                 lea     r15, [rcx-1]
.text:0000000000402919
.text:0000000000402919 loc_402919:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+3AD↑j
.text:0000000000402919                                         ; std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+3B2↑j
.text:0000000000402919                 lea     r11, [r15-1]
.text:000000000040291D                 shr     r11, 3Fh
.text:0000000000402921                 lea     rbx, [r15+r11-1]
.text:0000000000402926                 sar     rbx, 1
.text:0000000000402929                 cmp     r15, rbp
.text:000000000040292C                 jle     short loc_402975
.text:000000000040292E                 mov     [rsp+58h+var_50], rax
.text:0000000000402933                 mov     [rsp+58h+var_40], rdx
.text:0000000000402938
.text:0000000000402938 loc_402938:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+419↓j
.text:0000000000402938                 mov     esi, r14d
.text:000000000040293B                 mov     edi, [r8+rbx*4]
.text:000000000040293F                 call    r12
.text:0000000000402942                 mov     r8, [rsp+58h+var_30]
.text:0000000000402947                 test    al, al
.text:0000000000402949                 jz      short loc_40296B
.text:000000000040294B                 lea     rdx, [rbx-1]
.text:000000000040294F                 shr     rdx, 3Fh
.text:0000000000402953                 mov     eax, [r8+rbx*4]
.text:0000000000402957                 mov     [r8+r15*4], eax
.text:000000000040295B                 mov     r15, rbx
.text:000000000040295E                 lea     rbx, [rbx+rdx-1]
.text:0000000000402963                 sar     rbx, 1
.text:0000000000402966                 cmp     r15, rbp
.text:0000000000402969                 jg      short loc_402938
.text:000000000040296B
.text:000000000040296B loc_40296B:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+3F9↑j
.text:000000000040296B                 mov     rax, [rsp+58h+var_50]
.text:0000000000402970                 mov     rdx, [rsp+58h+var_40]
.text:0000000000402975
.text:0000000000402975 loc_402975:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+3DC↑j
.text:0000000000402975                 mov     [r8+r15*4], r14d
.text:0000000000402979                 test    rbp, rbp
.text:000000000040297C                 jz      short loc_402995
.text:000000000040297E                 jmp     loc_40289A
.text:0000000000402983 ; ---------------------------------------------------------------------------
.text:0000000000402983
.text:0000000000402983 loc_402983:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+208↑j
.text:0000000000402983                 test    r14, 1
.text:000000000040298A                 jz      loc_4027AE
.text:0000000000402990                 jmp     loc_4027D8
.text:0000000000402995 ; ---------------------------------------------------------------------------
.text:0000000000402995
.text:0000000000402995 loc_402995:                             ; CODE XREF: std::__introsort_loop<__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int)>(__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,__gnu_cxx::__normal_iterator<int *,std::vector<int,std::allocator<int>>>,long,bool (*)(int,int))+42C↑j
.text:0000000000402995                 mov     rsi, [rsp+58h+var_38]
.text:000000000040299A                 mov     rdi, r8
.text:000000000040299D                 mov     rax, rsi
.text:00000000004029A0                 mov     r9, r12
.text:00000000004029A3                 sub     rax, rdi
.text:00000000004029A6                 mov     r12, [rsp+58h+var_58]
.text:00000000004029AA                 sar     rax, 2
.text:00000000004029AE                 jmp     loc_402710
.text:00000000004029AE _ZSt16__introsort_loopIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEElPFbiiEEvT_S9_T0_T1_ endp
.text:00000000004029AE
.text:00000000004029AE ; ---------------------------------------------------------------------------
.text:00000000004029B3                 align 20h
.text:00000000004029B3 ; } // starts at 402550
.text:00000000004029C0
.text:00000000004029C0 ; =============== S U B R O U T I N E =======================================
.text:00000000004029C0
.text:00000000004029C0
.text:00000000004029C0 ; void __fastcall std::vector<int,std::allocator<int>>::~vector(void *)
.text:00000000004029C0                 public _ZNSt6vectorIiSaIiEED1Ev ; weak
.text:00000000004029C0 _ZNSt6vectorIiSaIiEED1Ev proc near      ; DATA XREF: __sti__$E+29↑o
.text:00000000004029C0                                         ; __sti__$E+47↑o
.text:00000000004029C0 ; __unwind { // ___gxx_personality_v0
.text:00000000004029C0                 mov     rdi, [rdi]      ; void *
.text:00000000004029C3                 test    rdi, rdi
.text:00000000004029C6                 jz      short locret_4029CD
.text:00000000004029C8                 jmp     __ZdlPv         ; operator delete(void *)
.text:00000000004029CD ; ---------------------------------------------------------------------------
.text:00000000004029CD
.text:00000000004029CD locret_4029CD:                          ; CODE XREF: std::vector<int,std::allocator<int>>::~vector()+6↑j
.text:00000000004029CD                 retn
.text:00000000004029CD _ZNSt6vectorIiSaIiEED1Ev endp
.text:00000000004029CD
.text:00000000004029CD ; ---------------------------------------------------------------------------
.text:00000000004029CE                 align 10h
.text:00000000004029CE ; } // starts at 4029C0
.text:00000000004029D0
.text:00000000004029D0 ; =============== S U B R O U T I N E =======================================
.text:00000000004029D0
.text:00000000004029D0
.text:00000000004029D0 ; std::_Vector_base<int, std::allocator<int>>::~_Vector_base()
.text:00000000004029D0                 public _ZNSt12_Vector_baseIiSaIiEED2Ev ; weak
.text:00000000004029D0 _ZNSt12_Vector_baseIiSaIiEED2Ev proc near
.text:00000000004029D0 ; __unwind { // ___gxx_personality_v0
.text:00000000004029D0                 mov     rdi, [rdi]      ; void *
.text:00000000004029D3                 test    rdi, rdi
.text:00000000004029D6                 jz      short locret_4029DD
.text:00000000004029D8                 jmp     __ZdlPv         ; operator delete(void *)
.text:00000000004029DD ; ---------------------------------------------------------------------------
.text:00000000004029DD
.text:00000000004029DD locret_4029DD:                          ; CODE XREF: std::_Vector_base<int,std::allocator<int>>::~_Vector_base()+6↑j
.text:00000000004029DD                 retn
.text:00000000004029DD _ZNSt12_Vector_baseIiSaIiEED2Ev endp
.text:00000000004029DD
.text:00000000004029DD ; ---------------------------------------------------------------------------
.text:00000000004029DE                 align 20h
.text:00000000004029DE ; } // starts at 4029D0
.text:00000000004029E0
.text:00000000004029E0 ; =============== S U B R O U T I N E =======================================
.text:00000000004029E0
.text:00000000004029E0
.text:00000000004029E0 ; std::vector<int, std::allocator<int>>::vector(void)
.text:00000000004029E0                 public _ZNSt6vectorIiSaIiEEC1Ev ; weak
.text:00000000004029E0 _ZNSt6vectorIiSaIiEEC1Ev proc near      ; CODE XREF: __sti__$E+24↑p
.text:00000000004029E0                                         ; __sti__$E+42↑p
.text:00000000004029E0 ; __unwind { // ___gxx_personality_v0
.text:00000000004029E0                 xor     eax, eax
.text:00000000004029E2                 mov     [rdi], rax
.text:00000000004029E5                 mov     [rdi+8], rax
.text:00000000004029E9                 mov     [rdi+10h], rax
.text:00000000004029ED                 retn
.text:00000000004029ED _ZNSt6vectorIiSaIiEEC1Ev endp
.text:00000000004029ED
.text:00000000004029ED ; ---------------------------------------------------------------------------
.text:00000000004029EE                 align 10h
.text:00000000004029EE ; } // starts at 4029E0
.text:00000000004029F0
.text:00000000004029F0 ; =============== S U B R O U T I N E =======================================
.text:00000000004029F0
.text:00000000004029F0
.text:00000000004029F0 ; void *intel_fast_memmove_A(void *dest, const void *src, size_t n)
.text:00000000004029F0                 public _intel_fast_memmove_A
.text:00000000004029F0 _intel_fast_memmove_A proc near         ; CODE XREF: _intel_fast_memmove+45↓j
.text:00000000004029F0 ; __unwind {
.text:00000000004029F0                 jmp     _memmove
.text:00000000004029F0 _intel_fast_memmove_A endp
.text:00000000004029F0
.text:00000000004029F0 ; ---------------------------------------------------------------------------
.text:00000000004029F5                 align 20h
.text:00000000004029F5 ; } // starts at 4029F0
.text:0000000000402A00
.text:0000000000402A00 ; =============== S U B R O U T I N E =======================================
.text:0000000000402A00
.text:0000000000402A00
.text:0000000000402A00                 public _intel_fast_memmove_M
.text:0000000000402A00 _intel_fast_memmove_M proc near         ; CODE XREF: _intel_fast_memmove+30↓j
.text:0000000000402A00 ; __unwind {
.text:0000000000402A00                 jmp     __intel_ssse3_memmove
.text:0000000000402A00 _intel_fast_memmove_M endp
.text:0000000000402A00
.text:0000000000402A00 ; ---------------------------------------------------------------------------
.text:0000000000402A05                 align 10h
.text:0000000000402A05 ; } // starts at 402A00
.text:0000000000402A10
.text:0000000000402A10 ; =============== S U B R O U T I N E =======================================
.text:0000000000402A10
.text:0000000000402A10
.text:0000000000402A10                 public _intel_fast_memmove_P
.text:0000000000402A10 _intel_fast_memmove_P proc near         ; CODE XREF: _intel_fast_memmove+1D↓j
.text:0000000000402A10 ; __unwind {
.text:0000000000402A10                 jmp     __intel_ssse3_rep_memmove
.text:0000000000402A10 _intel_fast_memmove_P endp
.text:0000000000402A10
.text:0000000000402A10 ; ---------------------------------------------------------------------------
.text:0000000000402A15                 align 20h
.text:0000000000402A15 ; } // starts at 402A10
.text:0000000000402A20
.text:0000000000402A20 ; =============== S U B R O U T I N E =======================================
.text:0000000000402A20
.text:0000000000402A20
.text:0000000000402A20                 public _intel_fast_memmove
.text:0000000000402A20 _intel_fast_memmove proc near           ; CODE XREF: main+1CE↑p
.text:0000000000402A20                                         ; main+20D↑p ...
.text:0000000000402A20                 mov     rax, cs:__intel_cpu_feature_indicator_ptr
.text:0000000000402A27                 mov     rax, [rax]
.text:0000000000402A2A                 mov     rcx, rax
.text:0000000000402A2D                 and     rcx, 17FFh
.text:0000000000402A34                 cmp     rcx, 17FFh
.text:0000000000402A3B                 jnz     short loc_402A42
.text:0000000000402A3D                 jmp     _intel_fast_memmove_P
.text:0000000000402A42 ; ---------------------------------------------------------------------------
.text:0000000000402A42
.text:0000000000402A42 loc_402A42:                             ; CODE XREF: _intel_fast_memmove+1B↑j
.text:0000000000402A42                 and     rax, 1FFh
.text:0000000000402A48                 cmp     rax, 1FFh
.text:0000000000402A4E                 jnz     short loc_402A55
.text:0000000000402A50                 jmp     _intel_fast_memmove_M
.text:0000000000402A55 ; ---------------------------------------------------------------------------
.text:0000000000402A55
.text:0000000000402A55 loc_402A55:                             ; CODE XREF: _intel_fast_memmove+2E↑j
.text:0000000000402A55                 mov     rax, cs:__intel_cpu_feature_indicator_ptr
.text:0000000000402A5C                 test    qword ptr [rax], 1
.text:0000000000402A63                 jz      short loc_402A6A
.text:0000000000402A65                 jmp     _intel_fast_memmove_A
.text:0000000000402A6A ; ---------------------------------------------------------------------------
.text:0000000000402A6A
.text:0000000000402A6A loc_402A6A:                             ; CODE XREF: _intel_fast_memmove+43↑j
.text:0000000000402A6A                 sub     rsp, 8
.text:0000000000402A6E                 call    __intel_cpu_features_init
.text:0000000000402A73                 add     rsp, 8
.text:0000000000402A77                 jmp     short _intel_fast_memmove
.text:0000000000402A77 _intel_fast_memmove endp
.text:0000000000402A77
.text:0000000000402A77 ; ---------------------------------------------------------------------------
.text:0000000000402A79                 align 20h
.text:0000000000402A80
.text:0000000000402A80 ; =============== S U B R O U T I N E =======================================
.text:0000000000402A80
.text:0000000000402A80
.text:0000000000402A80                 public __intel_new_feature_proc_init
.text:0000000000402A80 __intel_new_feature_proc_init proc near ; CODE XREF: main+1E↑p
.text:0000000000402A80
.text:0000000000402A80 dest            = byte ptr -448h
.text:0000000000402A80 var_48          = qword ptr -48h
.text:0000000000402A80 var_40          = qword ptr -40h
.text:0000000000402A80 var_38          = qword ptr -38h
.text:0000000000402A80 var_30          = qword ptr -30h
.text:0000000000402A80 var_28          = qword ptr -28h
.text:0000000000402A80 s               = qword ptr -20h
.text:0000000000402A80
.text:0000000000402A80 ; __unwind {
.text:0000000000402A80                 push    r12
.text:0000000000402A82                 push    r13
.text:0000000000402A84                 push    r14
.text:0000000000402A86                 sub     rsp, 430h
.text:0000000000402A8D                 mov     r14, rsi
.text:0000000000402A90                 mov     rax, cs:__intel_cpu_feature_indicator_ptr
.text:0000000000402A97                 mov     r13d, edi
.text:0000000000402A9A                 mov     r12, [rax]
.text:0000000000402A9D                 test    r12, r12
.text:0000000000402AA0                 jz      loc_402DDD
.text:0000000000402AA6
.text:0000000000402AA6 loc_402AA6:                             ; CODE XREF: __intel_new_feature_proc_init+371↓j
.text:0000000000402AA6                 mov     rax, r12
.text:0000000000402AA9                 and     rax, r14
.text:0000000000402AAC                 cmp     r14, rax
.text:0000000000402AAF                 jnz     short loc_402ACC
.text:0000000000402AB1                 test    r12, 6
.text:0000000000402AB8                 jnz     loc_402D4D
.text:0000000000402ABE
.text:0000000000402ABE loc_402ABE:                             ; CODE XREF: __intel_new_feature_proc_init+2D7↓j
.text:0000000000402ABE                 add     rsp, 430h
.text:0000000000402AC5                 pop     r14
.text:0000000000402AC7                 pop     r13
.text:0000000000402AC9                 pop     r12
.text:0000000000402ACB                 retn
.text:0000000000402ACC ; ---------------------------------------------------------------------------
.text:0000000000402ACC
.text:0000000000402ACC loc_402ACC:                             ; CODE XREF: __intel_new_feature_proc_init+2F↑j
.text:0000000000402ACC                 test    r14, 1
.text:0000000000402AD3                 jnz     loc_402DC8
.text:0000000000402AD9                 not     r12
.text:0000000000402ADC                 mov     edi, 39h ; '9'  ; number
.text:0000000000402AE1                 and     r12, r14
.text:0000000000402AE4                 xor     r14d, r14d
.text:0000000000402AE7                 xor     esi, esi
.text:0000000000402AE9                 xor     eax, eax
.text:0000000000402AEB                 call    __libirc_get_msg
.text:0000000000402AF0                 xor     edx, edx
.text:0000000000402AF2                 mov     r8b, 1
.text:0000000000402AF5                 mov     [rsp+448h+dest], 0
.text:0000000000402AF9                 xor     r13d, r13d
.text:0000000000402AFC                 mov     [rsp+448h+s], rax
.text:0000000000402B04                 mov     [rsp+448h+var_28], r15
.text:0000000000402B0C                 mov     r15, r12
.text:0000000000402B0F                 mov     [rsp+448h+var_30], rbx
.text:0000000000402B17                 mov     r12b, r8b
.text:0000000000402B1A                 mov     [rsp+448h+var_38], rbp
.text:0000000000402B22                 mov     rbp, r14
.text:0000000000402B25                 mov     r14, rdx
.text:0000000000402B28
.text:0000000000402B28 loc_402B28:                             ; CODE XREF: __intel_new_feature_proc_init+1CE↓j
.text:0000000000402B28                 mov     ecx, r13d
.text:0000000000402B2B                 mov     eax, 1
.text:0000000000402B30                 shl     rax, cl
.text:0000000000402B33                 test    rax, r15
.text:0000000000402B36                 jz      loc_402C44
.text:0000000000402B3C                 cmp     r12b, 26h ; '&'
.text:0000000000402B40                 jnb     loc_402D23
.text:0000000000402B46                 movzx   ebx, r12b
.text:0000000000402B4A                 lea     rax, c_feature_names
.text:0000000000402B51                 mov     rbx, [rax+rbx*8]
.text:0000000000402B55                 test    rbx, rbx
.text:0000000000402B58                 jz      loc_402D23
.text:0000000000402B5E                 cmp     byte ptr [rbx], 0
.text:0000000000402B61                 jz      loc_402D23
.text:0000000000402B67                 cmp     [rsp+448h+dest], 0
.text:0000000000402B6B                 jz      loc_402C1F
.text:0000000000402B71                 test    rbp, rbp
.text:0000000000402B74                 jz      loc_402C1A
.text:0000000000402B7A                 mov     rdi, rbp        ; s
.text:0000000000402B7D                 call    _strlen
.text:0000000000402B82                 mov     [rsp+448h+var_40], rax
.text:0000000000402B8A                 mov     rdi, [rsp+448h+s] ; s
.text:0000000000402B92                 call    _strlen
.text:0000000000402B97                 mov     [rsp+448h+var_48], rax
.text:0000000000402B9F                 mov     rdi, rbx        ; s
.text:0000000000402BA2                 call    _strlen
.text:0000000000402BA7                 mov     r9, rax
.text:0000000000402BAA                 mov     rax, [rsp+448h+var_40]
.text:0000000000402BB2                 add     rax, r14
.text:0000000000402BB5                 add     rax, [rsp+448h+var_48]
.text:0000000000402BBD                 lea     r9, [rax+r9+2]
.text:0000000000402BC2                 cmp     r9, 400h
.text:0000000000402BC9                 jnb     loc_402D5C
.text:0000000000402BCF                 neg     r14
.text:0000000000402BD2                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000402BD6                 add     r14, 3FFh
.text:0000000000402BDD                 lea     rsi, src        ; ", "
.text:0000000000402BE4                 mov     rdx, r14        ; n
.text:0000000000402BE7                 call    _strncat
.text:0000000000402BEC                 lea     rdi, [rsp+448h+dest] ; s
.text:0000000000402BF0                 call    _strlen
.text:0000000000402BF5                 movsxd  rdx, eax
.text:0000000000402BF8                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000402BFC                 neg     rdx
.text:0000000000402BFF                 mov     rsi, rbp        ; src
.text:0000000000402C02                 add     rdx, 3FFh       ; n
.text:0000000000402C09                 call    _strncat
.text:0000000000402C0E                 lea     rdi, [rsp+448h+dest] ; s
.text:0000000000402C12                 call    _strlen
.text:0000000000402C17                 movsxd  r14, eax
.text:0000000000402C1A
.text:0000000000402C1A loc_402C1A:                             ; CODE XREF: __intel_new_feature_proc_init+F4↑j
.text:0000000000402C1A                 mov     rbp, rbx
.text:0000000000402C1D                 jmp     short loc_402C44
.text:0000000000402C1F ; ---------------------------------------------------------------------------
.text:0000000000402C1F
.text:0000000000402C1F loc_402C1F:                             ; CODE XREF: __intel_new_feature_proc_init+EB↑j
.text:0000000000402C1F                 neg     r14
.text:0000000000402C22                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000402C26                 add     r14, 3FFh
.text:0000000000402C2D                 mov     rsi, rbx        ; src
.text:0000000000402C30                 mov     rdx, r14        ; n
.text:0000000000402C33                 call    _strncat
.text:0000000000402C38                 lea     rdi, [rsp+448h+dest] ; s
.text:0000000000402C3C                 call    _strlen
.text:0000000000402C41                 movsxd  r14, eax
.text:0000000000402C44
.text:0000000000402C44 loc_402C44:                             ; CODE XREF: __intel_new_feature_proc_init+B6↑j
.text:0000000000402C44                                         ; __intel_new_feature_proc_init+19D↑j
.text:0000000000402C44                 inc     r12b
.text:0000000000402C47                 inc     r13d
.text:0000000000402C4A                 cmp     r12b, 25h ; '%'
.text:0000000000402C4E                 jle     loc_402B28
.text:0000000000402C54                 mov     rdx, r14
.text:0000000000402C57                 mov     r14, rbp
.text:0000000000402C5A                 mov     rax, [rsp+448h+s]
.text:0000000000402C62                 test    r14, r14
.text:0000000000402C65                 mov     r15, [rsp+448h+var_28]
.text:0000000000402C6D                 mov     rbx, [rsp+448h+var_30]
.text:0000000000402C75                 mov     rbp, [rsp+448h+var_38]
.text:0000000000402C7D                 jz      short loc_402CB7
.text:0000000000402C7F                 neg     rdx
.text:0000000000402C82                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000402C86                 add     rdx, 3FFh       ; n
.text:0000000000402C8D                 mov     rsi, rax        ; src
.text:0000000000402C90                 call    _strncat
.text:0000000000402C95                 lea     rdi, [rsp+448h+dest] ; s
.text:0000000000402C99                 call    _strlen
.text:0000000000402C9E                 movsxd  rdx, eax
.text:0000000000402CA1                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000402CA5                 neg     rdx
.text:0000000000402CA8                 mov     rsi, r14        ; src
.text:0000000000402CAB                 add     rdx, 3FFh       ; n
.text:0000000000402CB2                 call    _strncat
.text:0000000000402CB7
.text:0000000000402CB7 loc_402CB7:                             ; CODE XREF: __intel_new_feature_proc_init+1FD↑j
.text:0000000000402CB7                                         ; __intel_new_feature_proc_init+343↓j
.text:0000000000402CB7                 cmp     [rsp+448h+dest], 0
.text:0000000000402CBB                 jnz     short loc_402CFA
.text:0000000000402CBD                 xor     esi, esi
.text:0000000000402CBF                 mov     edi, 1
.text:0000000000402CC4                 xor     edx, edx
.text:0000000000402CC6                 xor     eax, eax
.text:0000000000402CC8                 call    __libirc_print
.text:0000000000402CCD
.text:0000000000402CCD loc_402CCD:                             ; CODE XREF: __intel_new_feature_proc_init+2CB↓j
.text:0000000000402CCD                                         ; __intel_new_feature_proc_init+358↓j
.text:0000000000402CCD                 mov     edi, 1
.text:0000000000402CD2                 mov     esi, 3Ah ; ':'
.text:0000000000402CD7                 xor     edx, edx
.text:0000000000402CD9                 xor     eax, eax
.text:0000000000402CDB                 call    __libirc_print
.text:0000000000402CE0
.text:0000000000402CE0 loc_402CE0:                             ; CODE XREF: __intel_new_feature_proc_init+2A1↓j
.text:0000000000402CE0                                         ; __intel_new_feature_proc_init+39A↓j
.text:0000000000402CE0                 xor     esi, esi
.text:0000000000402CE2                 mov     edi, 1
.text:0000000000402CE7                 xor     edx, edx
.text:0000000000402CE9                 xor     eax, eax
.text:0000000000402CEB                 call    __libirc_print
.text:0000000000402CF0                 mov     edi, 1          ; status
.text:0000000000402CF5                 call    _exit
.text:0000000000402CFA ; ---------------------------------------------------------------------------
.text:0000000000402CFA
.text:0000000000402CFA loc_402CFA:                             ; CODE XREF: __intel_new_feature_proc_init+23B↑j
.text:0000000000402CFA                 xor     esi, esi
.text:0000000000402CFC                 mov     edi, 1
.text:0000000000402D01                 xor     edx, edx
.text:0000000000402D03                 xor     eax, eax
.text:0000000000402D05                 call    __libirc_print
.text:0000000000402D0A                 mov     edi, 1
.text:0000000000402D0F                 mov     esi, 38h ; '8'
.text:0000000000402D14                 mov     edx, edi
.text:0000000000402D16                 lea     rcx, [rsp+448h+dest]
.text:0000000000402D1A                 xor     eax, eax
.text:0000000000402D1C                 call    __libirc_print
.text:0000000000402D21                 jmp     short loc_402CE0
.text:0000000000402D23 ; ---------------------------------------------------------------------------
.text:0000000000402D23
.text:0000000000402D23 loc_402D23:                             ; CODE XREF: __intel_new_feature_proc_init+C0↑j
.text:0000000000402D23                                         ; __intel_new_feature_proc_init+D8↑j ...
.text:0000000000402D23                 mov     r15, [rsp+448h+var_28]
.text:0000000000402D2B                 mov     rbx, [rsp+448h+var_30]
.text:0000000000402D33                 mov     rbp, [rsp+448h+var_38]
.text:0000000000402D3B                 xor     esi, esi
.text:0000000000402D3D                 mov     edi, 1
.text:0000000000402D42                 xor     edx, edx
.text:0000000000402D44                 xor     eax, eax
.text:0000000000402D46                 call    __libirc_print
.text:0000000000402D4B                 jmp     short loc_402CCD
.text:0000000000402D4D ; ---------------------------------------------------------------------------
.text:0000000000402D4D
.text:0000000000402D4D loc_402D4D:                             ; CODE XREF: __intel_new_feature_proc_init+38↑j
.text:0000000000402D4D                 xor     edi, edi
.text:0000000000402D4F                 mov     esi, r13d
.text:0000000000402D52                 call    __intel_proc_init_ftzdazule
.text:0000000000402D57                 jmp     loc_402ABE
.text:0000000000402D5C ; ---------------------------------------------------------------------------
.text:0000000000402D5C
.text:0000000000402D5C loc_402D5C:                             ; CODE XREF: __intel_new_feature_proc_init+149↑j
.text:0000000000402D5C                 mov     rdx, r14
.text:0000000000402D5F                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000402D63                 neg     rdx
.text:0000000000402D66                 mov     r14, rbp
.text:0000000000402D69                 mov     rax, [rsp+448h+s]
.text:0000000000402D71                 add     rdx, 3FFh       ; n
.text:0000000000402D78                 mov     rsi, rax        ; src
.text:0000000000402D7B                 mov     r15, [rsp+448h+var_28]
.text:0000000000402D83                 mov     rbx, [rsp+448h+var_30]
.text:0000000000402D8B                 mov     rbp, [rsp+448h+var_38]
.text:0000000000402D93                 call    _strncat
.text:0000000000402D98                 lea     rdi, [rsp+448h+dest] ; s
.text:0000000000402D9C                 call    _strlen
.text:0000000000402DA1                 movsxd  rdx, eax
.text:0000000000402DA4                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000402DA8                 neg     rdx
.text:0000000000402DAB                 mov     rsi, r14        ; src
.text:0000000000402DAE                 add     rdx, 3FFh       ; n
.text:0000000000402DB5                 call    _strncat
.text:0000000000402DBA                 lea     rdi, [rsp+448h+dest] ; s
.text:0000000000402DBE                 call    _strlen
.text:0000000000402DC3                 jmp     loc_402CB7
.text:0000000000402DC8 ; ---------------------------------------------------------------------------
.text:0000000000402DC8
.text:0000000000402DC8 loc_402DC8:                             ; CODE XREF: __intel_new_feature_proc_init+53↑j
.text:0000000000402DC8                 xor     esi, esi
.text:0000000000402DCA                 mov     edi, 1
.text:0000000000402DCF                 xor     edx, edx
.text:0000000000402DD1                 xor     eax, eax
.text:0000000000402DD3                 call    __libirc_print
.text:0000000000402DD8                 jmp     loc_402CCD
.text:0000000000402DDD ; ---------------------------------------------------------------------------
.text:0000000000402DDD
.text:0000000000402DDD loc_402DDD:                             ; CODE XREF: __intel_new_feature_proc_init+20↑j
.text:0000000000402DDD                 xor     eax, eax
.text:0000000000402DDF                 call    __intel_cpu_features_init
.text:0000000000402DE4                 mov     rax, cs:__intel_cpu_feature_indicator_ptr
.text:0000000000402DEB                 mov     r12, [rax]
.text:0000000000402DEE                 test    r12, r12
.text:0000000000402DF1                 jnz     loc_402AA6
.text:0000000000402DF7                 xor     esi, esi
.text:0000000000402DF9                 mov     edi, 1
.text:0000000000402DFE                 xor     edx, edx
.text:0000000000402E00                 xor     eax, eax
.text:0000000000402E02                 call    __libirc_print
.text:0000000000402E07                 mov     edi, 1
.text:0000000000402E0C                 mov     esi, 3Bh ; ';'
.text:0000000000402E11                 xor     edx, edx
.text:0000000000402E13                 xor     eax, eax
.text:0000000000402E15                 call    __libirc_print
.text:0000000000402E1A                 jmp     loc_402CE0
.text:0000000000402E1A __intel_new_feature_proc_init endp
.text:0000000000402E1A
.text:0000000000402E1A ; ---------------------------------------------------------------------------
.text:0000000000402E1F                 align 20h
.text:0000000000402E1F ; } // starts at 402A80
.text:0000000000402E20
.text:0000000000402E20 ; =============== S U B R O U T I N E =======================================
.text:0000000000402E20
.text:0000000000402E20
.text:0000000000402E20                 public __intel_sse2_strlen
.text:0000000000402E20 __intel_sse2_strlen proc near           ; CODE XREF: std::char_traits<char>::length(char const*)+27↑p
.text:0000000000402E20 ; __unwind {
.text:0000000000402E20                 pxor    xmm0, xmm0
.text:0000000000402E24
.text:0000000000402E24 loc_402E24:                             ; CODE XREF: __intel_sse2_strlen+16↓j
.text:0000000000402E24                 add     rax, 10h
.text:0000000000402E28                 movdqa  xmm1, xmmword ptr [rax]
.text:0000000000402E2C                 pcmpeqb xmm1, xmm0
.text:0000000000402E30                 pmovmskb ecx, xmm1
.text:0000000000402E34                 test    ecx, ecx
.text:0000000000402E36                 jz      short loc_402E24
.text:0000000000402E38                 bsf     ecx, ecx
.text:0000000000402E3B                 sub     rcx, rdx
.text:0000000000402E3E                 add     rax, rcx
.text:0000000000402E41                 retn
.text:0000000000402E41 __intel_sse2_strlen endp
.text:0000000000402E41
.text:0000000000402E41 ; ---------------------------------------------------------------------------
.text:0000000000402E42                 align 10h
.text:0000000000402E42 ; } // starts at 402E20
.text:0000000000402E50
.text:0000000000402E50 ; =============== S U B R O U T I N E =======================================
.text:0000000000402E50
.text:0000000000402E50
.text:0000000000402E50                 public __intel_ssse3_memmove
.text:0000000000402E50 __intel_ssse3_memmove proc near         ; CODE XREF: _intel_fast_memmove_M↑j
.text:0000000000402E50 ; __unwind {
.text:0000000000402E50                 mov     rax, rdi
.text:0000000000402E53                 cmp     rdi, rsi
.text:0000000000402E56                 jb      short loc_402E66
.text:0000000000402E58                 jz      locret_4048E8   ; jumptable 0000000000402E80 case 0
.text:0000000000402E58                                         ; jumptable 0000000000402FA6 case 16
.text:0000000000402E58                                         ; jumptable 000000000040306D case 0
.text:0000000000402E58                                         ; jumptable 000000000040316A case 0
.text:0000000000402E58                                         ; jumptable 00000000004031D4 case 16
.text:0000000000402E58                                         ; jumptable 0000000000403295 case 0
.text:0000000000402E58                                         ; jumptable 0000000000403384 case 0
.text:0000000000402E58                                         ; jumptable 000000000040574F case 0
.text:0000000000402E58                                         ; jumptable 000000000040581A case 0
.text:0000000000402E58                                         ; jumptable 0000000000405905 case 0
.text:0000000000402E58                                         ; jumptable 00000000004059C2 case 0
.text:0000000000402E58                                         ; jumptable 0000000000403430 case 0
.text:0000000000402E58                                         ; jumptable 00000000004034CE case 0
.text:0000000000402E58                                         ; jumptable 0000000000403580 case 0
.text:0000000000402E58                                         ; jumptable 000000000040361E case 0
.text:0000000000402E58                                         ; jumptable 00000000004036D0 case 0
.text:0000000000402E58                                         ; jumptable 000000000040376E case 0
.text:0000000000402E58                                         ; jumptable 0000000000403820 case 0
.text:0000000000402E58                                         ; jumptable 00000000004038BE case 0
.text:0000000000402E58                                         ; jumptable 0000000000403970 case 0
.text:0000000000402E58                                         ; jumptable 0000000000403A0E case 0
.text:0000000000402E58                                         ; jumptable 0000000000403AC0 case 0
.text:0000000000402E58                                         ; jumptable 0000000000403B5E case 0
.text:0000000000402E58                                         ; jumptable 0000000000403C10 case 0
.text:0000000000402E58                                         ; jumptable 0000000000403CAE case 0
.text:0000000000402E58                                         ; jumptable 0000000000403D65 case 0
.text:0000000000402E58                                         ; jumptable 0000000000403DFE case 0
.text:0000000000402E58                                         ; jumptable 0000000000403EB0 case 0
.text:0000000000402E58                                         ; jumptable 0000000000403F4E case 0
.text:0000000000402E58                                         ; jumptable 0000000000404000 case 0
.text:0000000000402E58                                         ; ju
.text:0000000000402E5E                 cmp     rdx, 4Fh ; 'O'
.text:0000000000402E62                 jbe     short loc_402E66
.text:0000000000402E64                 jmp     short loc_402EE0
.text:0000000000402E66 ; ---------------------------------------------------------------------------
.text:0000000000402E66
.text:0000000000402E66 loc_402E66:                             ; CODE XREF: __intel_ssse3_memmove+6↑j
.text:0000000000402E66                                         ; __intel_ssse3_memmove+12↑j
.text:0000000000402E66                 cmp     rdx, 4Fh        ; switch 80 cases
.text:0000000000402E6A                 lea     r11, jpt_402E80
.text:0000000000402E71                 ja      short def_402E80 ; jumptable 0000000000402E80 default case
.text:0000000000402E73                 movsxd  r9, ds:(jpt_402E80 - 409C60h)[r11+rdx*4]
.text:0000000000402E77                 add     rsi, rdx
.text:0000000000402E7A                 add     rdi, rdx
.text:0000000000402E7D                 add     r9, r11
.text:0000000000402E80                 jmp     r9              ; switch jump
.text:0000000000402E83 ; ---------------------------------------------------------------------------
.text:0000000000402E83                 ud2
.text:0000000000402E83 ; ---------------------------------------------------------------------------
.text:0000000000402E85                 align 10h
.text:0000000000402E90
.text:0000000000402E90 def_402E80:                             ; CODE XREF: __intel_ssse3_memmove+21↑j
.text:0000000000402E90                 movdqu  xmm0, xmmword ptr [rsi] ; jumptable 0000000000402E80 default case
.text:0000000000402E94                 mov     rcx, rdi
.text:0000000000402E97                 and     rdi, 0FFFFFFFFFFFFFFF0h
.text:0000000000402E9B                 add     rdi, 10h
.text:0000000000402E9F                 mov     r8, rcx
.text:0000000000402EA2                 sub     rcx, rdi
.text:0000000000402EA5                 add     rdx, rcx
.text:0000000000402EA8                 sub     rsi, rcx
.text:0000000000402EAB                 mov     ecx, cs:__libirc_largest_cache_size_half
.text:0000000000402EB1                 cmp     rdx, rcx
.text:0000000000402EB4                 mov     r9, rsi
.text:0000000000402EB7                 ja      loc_405660
.text:0000000000402EBD                 and     r9, 0Fh         ; switch 16 cases
.text:0000000000402EC1                 jz      short loc_402F40 ; jumptable 0000000000402ED7 case 0
.text:0000000000402EC3                 mov     ecx, cs:__libirc_data_cache_size_half
.text:0000000000402EC9                 lea     r11, jpt_402ED7
.text:0000000000402ED0                 movsxd  r9, ds:(jpt_402ED7 - 409DA0h)[r11+r9*4]
.text:0000000000402ED4                 add     r9, r11
.text:0000000000402ED7                 jmp     r9              ; switch jump
.text:0000000000402EDA ; ---------------------------------------------------------------------------
.text:0000000000402EDA                 ud2
.text:0000000000402EDA ; ---------------------------------------------------------------------------
.text:0000000000402EDC                 align 20h
.text:0000000000402EE0
.text:0000000000402EE0 loc_402EE0:                             ; CODE XREF: __intel_ssse3_memmove+14↑j
.text:0000000000402EE0                 movdqu  xmm0, xmmword ptr [rsi+rdx-10h]
.text:0000000000402EE6                 add     rsi, rdx
.text:0000000000402EE9                 lea     r8, [rdi+rdx-10h]
.text:0000000000402EEE                 add     rdi, rdx
.text:0000000000402EF1                 mov     rcx, rdi
.text:0000000000402EF4                 and     rcx, 0Fh
.text:0000000000402EF8                 xor     rdi, rcx
.text:0000000000402EFB                 sub     rdx, rcx
.text:0000000000402EFE                 sub     rsi, rcx
.text:0000000000402F01                 mov     ecx, cs:__libirc_largest_cache_size_half
.text:0000000000402F07                 cmp     rdx, rcx
.text:0000000000402F0A                 mov     r9, rsi
.text:0000000000402F0D                 ja      loc_405820
.text:0000000000402F13                 and     r9, 0Fh         ; switch 16 cases
.text:0000000000402F17                 jz      loc_403170      ; jumptable 0000000000402F31 case 0
.text:0000000000402F1D                 mov     ecx, cs:__libirc_data_cache_size_half
.text:0000000000402F23                 lea     r11, jpt_402F31
.text:0000000000402F2A                 movsxd  r9, ds:(jpt_402F31 - 409DE0h)[r11+r9*4]
.text:0000000000402F2E                 add     r9, r11
.text:0000000000402F31                 jmp     r9              ; switch jump
.text:0000000000402F34 ; ---------------------------------------------------------------------------
.text:0000000000402F34                 ud2
.text:0000000000402F34 ; ---------------------------------------------------------------------------
.text:0000000000402F36                 align 20h
.text:0000000000402F40
.text:0000000000402F40 loc_402F40:                             ; CODE XREF: __intel_ssse3_memmove+71↑j
.text:0000000000402F40                                         ; __intel_ssse3_memmove+87↑j
.text:0000000000402F40                                         ; DATA XREF: ...
.text:0000000000402F40                 sub     rdx, 10h        ; jumptable 0000000000402ED7 case 0
.text:0000000000402F44                 movdqa  xmm1, xmmword ptr [rsi]
.text:0000000000402F48                 add     rsi, 10h
.text:0000000000402F4C                 movdqa  xmmword ptr [rdi], xmm1
.text:0000000000402F50                 add     rdi, 10h
.text:0000000000402F54                 cmp     rdx, 80h
.text:0000000000402F5B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000402F60                 ja      short loc_402FB0
.text:0000000000402F62                 cmp     rdx, 40h
.text:0000000000402F66                 jb      short loc_402F92
.text:0000000000402F68
.text:0000000000402F68 def_402FA6:                             ; jumptable 0000000000402FA6 default case
.text:0000000000402F68                 movaps  xmm4, xmmword ptr [rsi]
.text:0000000000402F6B                 movaps  xmm1, xmmword ptr [rsi+10h]
.text:0000000000402F6F                 movaps  xmm2, xmmword ptr [rsi+20h]
.text:0000000000402F73                 movaps  xmm3, xmmword ptr [rsi+30h]
.text:0000000000402F77                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000402F7A                 movaps  xmmword ptr [rdi+10h], xmm1
.text:0000000000402F7E                 movaps  xmmword ptr [rdi+20h], xmm2
.text:0000000000402F82                 movaps  xmmword ptr [rdi+30h], xmm3
.text:0000000000402F86                 sub     rdx, 40h ; '@'
.text:0000000000402F8A                 add     rsi, 40h ; '@'
.text:0000000000402F8E                 add     rdi, 40h ; '@'
.text:0000000000402F92
.text:0000000000402F92 loc_402F92:                             ; CODE XREF: __intel_ssse3_memmove+116↑j
.text:0000000000402F92                 add     rsi, rdx
.text:0000000000402F95                 add     rdi, rdx
.text:0000000000402F98                 lea     r11, jpt_402E80
.text:0000000000402F9F                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4]
.text:0000000000402FA3                 add     rdx, r11
.text:0000000000402FA6                 jmp     rdx             ; switch jump
.text:0000000000402FA8 ; ---------------------------------------------------------------------------
.text:0000000000402FA8                 ud2
.text:0000000000402FA8 ; ---------------------------------------------------------------------------
.text:0000000000402FAA                 align 10h
.text:0000000000402FB0
.text:0000000000402FB0 loc_402FB0:                             ; CODE XREF: __intel_ssse3_memmove+110↑j
.text:0000000000402FB0                 mov     ecx, cs:__libirc_data_cache_size_half
.text:0000000000402FB6                 cmp     rdx, rcx
.text:0000000000402FB9                 lea     rdx, [rdx-80h]
.text:0000000000402FBD                 jnb     loc_403080
.text:0000000000402FC3
.text:0000000000402FC3 loc_402FC3:                             ; CODE XREF: __intel_ssse3_memmove+1C8↓j
.text:0000000000402FC3                 movdqa  xmm4, xmmword ptr [rsi]
.text:0000000000402FC7                 movaps  xmm1, xmmword ptr [rsi+10h]
.text:0000000000402FCB                 movaps  xmm2, xmmword ptr [rsi+20h]
.text:0000000000402FCF                 movaps  xmm3, xmmword ptr [rsi+30h]
.text:0000000000402FD3                 movdqa  xmmword ptr [rdi], xmm4
.text:0000000000402FD7                 movaps  xmmword ptr [rdi+10h], xmm1
.text:0000000000402FDB                 movaps  xmmword ptr [rdi+20h], xmm2
.text:0000000000402FDF                 movaps  xmmword ptr [rdi+30h], xmm3
.text:0000000000402FE3                 sub     rdx, 80h
.text:0000000000402FEA                 movaps  xmm4, xmmword ptr [rsi+40h]
.text:0000000000402FEE                 movaps  xmm5, xmmword ptr [rsi+50h]
.text:0000000000402FF2                 movaps  xmm6, xmmword ptr [rsi+60h]
.text:0000000000402FF6                 movaps  xmm7, xmmword ptr [rsi+70h]
.text:0000000000402FFA                 lea     rsi, [rsi+80h]
.text:0000000000403001                 movaps  xmmword ptr [rdi+40h], xmm4
.text:0000000000403005                 movaps  xmmword ptr [rdi+50h], xmm5
.text:0000000000403009                 movaps  xmmword ptr [rdi+60h], xmm6
.text:000000000040300D                 movaps  xmmword ptr [rdi+70h], xmm7
.text:0000000000403011                 lea     rdi, [rdi+80h]
.text:0000000000403018                 jnb     short loc_402FC3
.text:000000000040301A                 cmp     rdx, 0FFFFFFFFFFFFFFC0h
.text:000000000040301E                 lea     rdx, [rdx+80h]
.text:0000000000403025                 jl      short loc_403059
.text:0000000000403027                 movdqa  xmm4, xmmword ptr [rsi]
.text:000000000040302B                 sub     rdx, 40h ; '@'
.text:000000000040302F                 movdqa  xmm1, xmmword ptr [rsi+10h]
.text:0000000000403034                 movdqa  xmmword ptr [rdi], xmm4
.text:0000000000403038                 movdqa  xmmword ptr [rdi+10h], xmm1
.text:000000000040303D                 movdqa  xmm4, xmmword ptr [rsi+20h]
.text:0000000000403042                 movdqa  xmm1, xmmword ptr [rsi+30h]
.text:0000000000403047                 add     rsi, 40h ; '@'
.text:000000000040304B                 movdqa  xmmword ptr [rdi+20h], xmm4
.text:0000000000403050                 movdqa  xmmword ptr [rdi+30h], xmm1
.text:0000000000403055                 add     rdi, 40h ; '@'
.text:0000000000403059
.text:0000000000403059 loc_403059:                             ; CODE XREF: __intel_ssse3_memmove+1D5↑j
.text:0000000000403059                 add     rsi, rdx
.text:000000000040305C                 add     rdi, rdx
.text:000000000040305F                 lea     r11, jpt_402E80
.text:0000000000403066                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040306A                 add     rdx, r11
.text:000000000040306D                 jmp     rdx             ; switch jump
.text:000000000040306F ; ---------------------------------------------------------------------------
.text:000000000040306F                 ud2
.text:000000000040306F ; ---------------------------------------------------------------------------
.text:0000000000403071                 align 20h
.text:0000000000403080
.text:0000000000403080 loc_403080:                             ; CODE XREF: __intel_ssse3_memmove+16D↑j
.text:0000000000403080                                         ; __intel_ssse3_memmove+2A1↓j
.text:0000000000403080                 prefetcht0 byte ptr [rsi+1C0h]
.text:0000000000403087                 prefetcht0 byte ptr [rsi+280h]
.text:000000000040308E                 movdqa  xmm0, xmmword ptr [rsi]
.text:0000000000403092                 movdqa  xmm1, xmmword ptr [rsi+10h]
.text:0000000000403097                 movdqa  xmm2, xmmword ptr [rsi+20h]
.text:000000000040309C                 movdqa  xmm3, xmmword ptr [rsi+30h]
.text:00000000004030A1                 movdqa  xmm4, xmmword ptr [rsi+40h]
.text:00000000004030A6                 movdqa  xmm5, xmmword ptr [rsi+50h]
.text:00000000004030AB                 movdqa  xmm6, xmmword ptr [rsi+60h]
.text:00000000004030B0                 movdqa  xmm7, xmmword ptr [rsi+70h]
.text:00000000004030B5                 lea     rsi, [rsi+80h]
.text:00000000004030BC                 sub     rdx, 80h
.text:00000000004030C3                 movdqa  xmmword ptr [rdi], xmm0
.text:00000000004030C7                 movdqa  xmmword ptr [rdi+10h], xmm1
.text:00000000004030CC                 movdqa  xmmword ptr [rdi+20h], xmm2
.text:00000000004030D1                 movdqa  xmmword ptr [rdi+30h], xmm3
.text:00000000004030D6                 movdqa  xmmword ptr [rdi+40h], xmm4
.text:00000000004030DB                 movdqa  xmmword ptr [rdi+50h], xmm5
.text:00000000004030E0                 movdqa  xmmword ptr [rdi+60h], xmm6
.text:00000000004030E5                 movdqa  xmmword ptr [rdi+70h], xmm7
.text:00000000004030EA                 lea     rdi, [rdi+80h]
.text:00000000004030F1                 jnb     short loc_403080
.text:00000000004030F3                 cmp     rdx, 0FFFFFFFFFFFFFFC0h
.text:00000000004030F7                 lea     rdx, [rdx+80h]
.text:00000000004030FE                 jl      short loc_403132
.text:0000000000403100                 movdqa  xmm0, xmmword ptr [rsi]
.text:0000000000403104                 sub     rdx, 40h ; '@'
.text:0000000000403108                 movdqa  xmm1, xmmword ptr [rsi+10h]
.text:000000000040310D                 movdqa  xmmword ptr [rdi], xmm0
.text:0000000000403111                 movdqa  xmmword ptr [rdi+10h], xmm1
.text:0000000000403116                 movdqa  xmm0, xmmword ptr [rsi+20h]
.text:000000000040311B                 movdqa  xmm1, xmmword ptr [rsi+30h]
.text:0000000000403120                 add     rsi, 40h ; '@'
.text:0000000000403124                 movdqa  xmmword ptr [rdi+20h], xmm0
.text:0000000000403129                 movdqa  xmmword ptr [rdi+30h], xmm1
.text:000000000040312E                 add     rdi, 40h ; '@'
.text:0000000000403132
.text:0000000000403132 loc_403132:                             ; CODE XREF: __intel_ssse3_memmove+2AE↑j
.text:0000000000403132                 cmp     rdx, 20h        ; switch 32 cases
.text:0000000000403136                 jb      short loc_403156
.text:0000000000403138
.text:0000000000403138 def_40316A:                             ; jumptable 000000000040316A default case
.text:0000000000403138                 movdqa  xmm0, xmmword ptr [rsi]
.text:000000000040313C                 sub     rdx, 20h ; ' '
.text:0000000000403140                 movdqa  xmm1, xmmword ptr [rsi+10h]
.text:0000000000403145                 add     rsi, 20h ; ' '
.text:0000000000403149                 movdqa  xmmword ptr [rdi], xmm0
.text:000000000040314D                 movdqa  xmmword ptr [rdi+10h], xmm1
.text:0000000000403152                 add     rdi, 20h ; ' '
.text:0000000000403156
.text:0000000000403156 loc_403156:                             ; CODE XREF: __intel_ssse3_memmove+2E6↑j
.text:0000000000403156                 add     rdi, rdx
.text:0000000000403159                 add     rsi, rdx
.text:000000000040315C                 lea     r11, jpt_402E80
.text:0000000000403163                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4]
.text:0000000000403167                 add     rdx, r11
.text:000000000040316A                 jmp     rdx             ; switch jump
.text:000000000040316C ; ---------------------------------------------------------------------------
.text:000000000040316C                 ud2
.text:000000000040316C ; ---------------------------------------------------------------------------
.text:000000000040316E                 align 10h
.text:0000000000403170
.text:0000000000403170 loc_403170:                             ; CODE XREF: __intel_ssse3_memmove+C7↑j
.text:0000000000403170                                         ; __intel_ssse3_memmove+E1↑j
.text:0000000000403170                                         ; DATA XREF: ...
.text:0000000000403170                 sub     rdx, 10h        ; jumptable 0000000000402F31 case 0
.text:0000000000403174                 movdqa  xmm1, xmmword ptr [rsi-10h]
.text:0000000000403179                 sub     rsi, 10h
.text:000000000040317D                 movdqa  xmmword ptr [rdi-10h], xmm1
.text:0000000000403182                 sub     rdi, 10h
.text:0000000000403186                 cmp     rdx, 80h
.text:000000000040318D                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403192                 ja      short loc_4031E0
.text:0000000000403194                 cmp     rdx, 40h
.text:0000000000403198                 jb      short loc_4031C6
.text:000000000040319A
.text:000000000040319A def_4031D4:                             ; jumptable 00000000004031D4 default case
.text:000000000040319A                 movaps  xmm0, xmmword ptr [rsi-10h]
.text:000000000040319E                 movaps  xmm1, xmmword ptr [rsi-20h]
.text:00000000004031A2                 movaps  xmm2, xmmword ptr [rsi-30h]
.text:00000000004031A6                 movaps  xmm3, xmmword ptr [rsi-40h]
.text:00000000004031AA                 movaps  xmmword ptr [rdi-10h], xmm0
.text:00000000004031AE                 movaps  xmmword ptr [rdi-20h], xmm1
.text:00000000004031B2                 movaps  xmmword ptr [rdi-30h], xmm2
.text:00000000004031B6                 movaps  xmmword ptr [rdi-40h], xmm3
.text:00000000004031BA                 sub     rdx, 40h ; '@'
.text:00000000004031BE                 sub     rsi, 40h ; '@'
.text:00000000004031C2                 sub     rdi, 40h ; '@'
.text:00000000004031C6
.text:00000000004031C6 loc_4031C6:                             ; CODE XREF: __intel_ssse3_memmove+348↑j
.text:00000000004031C6                 lea     r11, jpt_402E80
.text:00000000004031CD                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4]
.text:00000000004031D1                 add     rdx, r11
.text:00000000004031D4                 jmp     rdx             ; switch jump
.text:00000000004031D6 ; ---------------------------------------------------------------------------
.text:00000000004031D6                 ud2
.text:00000000004031D6 ; ---------------------------------------------------------------------------
.text:00000000004031D8                 align 20h
.text:00000000004031E0
.text:00000000004031E0 loc_4031E0:                             ; CODE XREF: __intel_ssse3_memmove+342↑j
.text:00000000004031E0                 mov     ecx, cs:__libirc_data_cache_size_half
.text:00000000004031E6                 cmp     rdx, rcx
.text:00000000004031E9                 lea     rdx, [rdx-80h]
.text:00000000004031ED                 jnb     loc_4032A0
.text:00000000004031F3
.text:00000000004031F3 loc_4031F3:                             ; CODE XREF: __intel_ssse3_memmove+3F4↓j
.text:00000000004031F3                 movdqa  xmm0, xmmword ptr [rsi-10h]
.text:00000000004031F8                 movaps  xmm1, xmmword ptr [rsi-20h]
.text:00000000004031FC                 movaps  xmm2, xmmword ptr [rsi-30h]
.text:0000000000403200                 movaps  xmm3, xmmword ptr [rsi-40h]
.text:0000000000403204                 movdqa  xmmword ptr [rdi-10h], xmm0
.text:0000000000403209                 movaps  xmmword ptr [rdi-20h], xmm1
.text:000000000040320D                 movaps  xmmword ptr [rdi-30h], xmm2
.text:0000000000403211                 movaps  xmmword ptr [rdi-40h], xmm3
.text:0000000000403215                 sub     rdx, 80h
.text:000000000040321C                 movaps  xmm4, xmmword ptr [rsi-50h]
.text:0000000000403220                 movaps  xmm5, xmmword ptr [rsi-60h]
.text:0000000000403224                 movaps  xmm6, xmmword ptr [rsi-70h]
.text:0000000000403228                 movaps  xmm7, xmmword ptr [rsi-80h]
.text:000000000040322C                 lea     rsi, [rsi-80h]
.text:0000000000403230                 movaps  xmmword ptr [rdi-50h], xmm4
.text:0000000000403234                 movaps  xmmword ptr [rdi-60h], xmm5
.text:0000000000403238                 movaps  xmmword ptr [rdi-70h], xmm6
.text:000000000040323C                 movaps  xmmword ptr [rdi-80h], xmm7
.text:0000000000403240                 lea     rdi, [rdi-80h]
.text:0000000000403244                 jnb     short loc_4031F3
.text:0000000000403246                 cmp     rdx, 0FFFFFFFFFFFFFFC0h
.text:000000000040324A                 lea     rdx, [rdx+80h]
.text:0000000000403251                 jl      short loc_403287
.text:0000000000403253                 movdqa  xmm0, xmmword ptr [rsi-10h]
.text:0000000000403258                 sub     rdx, 40h ; '@'
.text:000000000040325C                 movdqa  xmm1, xmmword ptr [rsi-20h]
.text:0000000000403261                 movdqa  xmmword ptr [rdi-10h], xmm0
.text:0000000000403266                 movdqa  xmmword ptr [rdi-20h], xmm1
.text:000000000040326B                 movdqa  xmm0, xmmword ptr [rsi-30h]
.text:0000000000403270                 movdqa  xmm1, xmmword ptr [rsi-40h]
.text:0000000000403275                 sub     rsi, 40h ; '@'
.text:0000000000403279                 movdqa  xmmword ptr [rdi-30h], xmm0
.text:000000000040327E                 movdqa  xmmword ptr [rdi-40h], xmm1
.text:0000000000403283                 sub     rdi, 40h ; '@'
.text:0000000000403287
.text:0000000000403287 loc_403287:                             ; CODE XREF: __intel_ssse3_memmove+401↑j
.text:0000000000403287                 lea     r11, jpt_402E80
.text:000000000040328E                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403292                 add     rdx, r11
.text:0000000000403295                 jmp     rdx             ; switch jump
.text:0000000000403297 ; ---------------------------------------------------------------------------
.text:0000000000403297                 ud2
.text:0000000000403297 ; ---------------------------------------------------------------------------
.text:0000000000403299                 align 20h
.text:00000000004032A0
.text:00000000004032A0 loc_4032A0:                             ; CODE XREF: __intel_ssse3_memmove+39D↑j
.text:00000000004032A0                                         ; __intel_ssse3_memmove+4BD↓j
.text:00000000004032A0                 prefetcht0 byte ptr [rsi-1C0h]
.text:00000000004032A7                 prefetcht0 byte ptr [rsi-280h]
.text:00000000004032AE                 movdqa  xmm0, xmmword ptr [rsi-10h]
.text:00000000004032B3                 movdqa  xmm1, xmmword ptr [rsi-20h]
.text:00000000004032B8                 movdqa  xmm2, xmmword ptr [rsi-30h]
.text:00000000004032BD                 movdqa  xmm3, xmmword ptr [rsi-40h]
.text:00000000004032C2                 movdqa  xmm4, xmmword ptr [rsi-50h]
.text:00000000004032C7                 movdqa  xmm5, xmmword ptr [rsi-60h]
.text:00000000004032CC                 movdqa  xmm6, xmmword ptr [rsi-70h]
.text:00000000004032D1                 movdqa  xmm7, xmmword ptr [rsi-80h]
.text:00000000004032D6                 lea     rsi, [rsi-80h]
.text:00000000004032DA                 sub     rdx, 80h
.text:00000000004032E1                 movdqa  xmmword ptr [rdi-10h], xmm0
.text:00000000004032E6                 movdqa  xmmword ptr [rdi-20h], xmm1
.text:00000000004032EB                 movdqa  xmmword ptr [rdi-30h], xmm2
.text:00000000004032F0                 movdqa  xmmword ptr [rdi-40h], xmm3
.text:00000000004032F5                 movdqa  xmmword ptr [rdi-50h], xmm4
.text:00000000004032FA                 movdqa  xmmword ptr [rdi-60h], xmm5
.text:00000000004032FF                 movdqa  xmmword ptr [rdi-70h], xmm6
.text:0000000000403304                 movdqa  xmmword ptr [rdi-80h], xmm7
.text:0000000000403309                 lea     rdi, [rdi-80h]
.text:000000000040330D                 jnb     short loc_4032A0
.text:000000000040330F                 cmp     rdx, 0FFFFFFFFFFFFFFC0h
.text:0000000000403313                 lea     rdx, [rdx+80h]
.text:000000000040331A                 jl      short loc_403350
.text:000000000040331C                 movdqa  xmm0, xmmword ptr [rsi-10h]
.text:0000000000403321                 sub     rdx, 40h ; '@'
.text:0000000000403325                 movdqa  xmm1, xmmword ptr [rsi-20h]
.text:000000000040332A                 movdqa  xmmword ptr [rdi-10h], xmm0
.text:000000000040332F                 movdqa  xmmword ptr [rdi-20h], xmm1
.text:0000000000403334                 movdqa  xmm0, xmmword ptr [rsi-30h]
.text:0000000000403339                 movdqa  xmm1, xmmword ptr [rsi-40h]
.text:000000000040333E                 sub     rsi, 40h ; '@'
.text:0000000000403342                 movdqa  xmmword ptr [rdi-30h], xmm0
.text:0000000000403347                 movdqa  xmmword ptr [rdi-40h], xmm1
.text:000000000040334C                 sub     rdi, 40h ; '@'
.text:0000000000403350
.text:0000000000403350 loc_403350:                             ; CODE XREF: __intel_ssse3_memmove+4CA↑j
.text:0000000000403350                 cmp     rdx, 20h        ; switch 32 cases
.text:0000000000403354                 jb      short loc_403376
.text:0000000000403356
.text:0000000000403356 def_403384:                             ; jumptable 0000000000403384 default case
.text:0000000000403356                 movdqa  xmm0, xmmword ptr [rsi-10h]
.text:000000000040335B                 sub     rdx, 20h ; ' '
.text:000000000040335F                 movdqa  xmm1, xmmword ptr [rsi-20h]
.text:0000000000403364                 sub     rsi, 20h ; ' '
.text:0000000000403368                 movdqa  xmmword ptr [rdi-10h], xmm0
.text:000000000040336D                 movdqa  xmmword ptr [rdi-20h], xmm1
.text:0000000000403372                 sub     rdi, 20h ; ' '
.text:0000000000403376
.text:0000000000403376 loc_403376:                             ; CODE XREF: __intel_ssse3_memmove+504↑j
.text:0000000000403376                 lea     r11, jpt_402E80
.text:000000000040337D                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4]
.text:0000000000403381                 add     rdx, r11
.text:0000000000403384                 jmp     rdx             ; switch jump
.text:0000000000403386 ; ---------------------------------------------------------------------------
.text:0000000000403386                 ud2
.text:0000000000403386 ; ---------------------------------------------------------------------------
.text:0000000000403388                 align 10h
.text:0000000000403390
.text:0000000000403390 loc_403390:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000403390                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000403390                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 1
.text:0000000000403397                 cmp     rdx, rcx
.text:000000000040339A                 movaps  xmm1, xmmword ptr [rsi-1]
.text:000000000040339E                 jb      short loc_4033A7
.text:00000000004033A0                 lea     r9, [r9-7]
.text:00000000004033A7
.text:00000000004033A7 loc_4033A7:                             ; CODE XREF: __intel_ssse3_memmove+54E↑j
.text:00000000004033A7                 lea     rdx, [rdx-40h]
.text:00000000004033AB                 jmp     r9
.text:00000000004033AE ; ---------------------------------------------------------------------------
.text:00000000004033AE                 ud2
.text:00000000004033B0 ; ---------------------------------------------------------------------------
.text:00000000004033B0                 prefetchnta byte ptr [rsi+1C0h]
.text:00000000004033B7                 sub     rdx, 40h ; '@'
.text:00000000004033BB                 movaps  xmm2, xmmword ptr [rsi+0Fh]
.text:00000000004033BF                 movaps  xmm3, xmmword ptr [rsi+1Fh]
.text:00000000004033C3                 movaps  xmm4, xmmword ptr [rsi+2Fh]
.text:00000000004033C7                 movaps  xmm5, xmmword ptr [rsi+3Fh]
.text:00000000004033CB                 movdqa  xmm6, xmm5
.text:00000000004033CF                 palignr xmm5, xmm4, 1
.text:00000000004033D5                 lea     rsi, [rsi+40h]
.text:00000000004033D9                 palignr xmm4, xmm3, 1
.text:00000000004033DF                 palignr xmm3, xmm2, 1
.text:00000000004033E5                 lea     rdi, [rdi+40h]
.text:00000000004033E9                 palignr xmm2, xmm1, 1
.text:00000000004033EF                 movdqa  xmm1, xmm6
.text:00000000004033F3                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:00000000004033F8                 movaps  xmmword ptr [rdi-30h], xmm3
.text:00000000004033FC                 jb      short loc_40340B
.text:00000000004033FE                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403402                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403406                 jmp     r9
.text:0000000000403409 ; ---------------------------------------------------------------------------
.text:0000000000403409                 ud2
.text:000000000040340B ; ---------------------------------------------------------------------------
.text:000000000040340B
.text:000000000040340B loc_40340B:                             ; CODE XREF: __intel_ssse3_memmove+5AC↑j
.text:000000000040340B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:000000000040340F                 lea     rdx, [rdx+40h]
.text:0000000000403413                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403417                 add     rdi, rdx
.text:000000000040341A                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040341F                 add     rsi, rdx
.text:0000000000403422                 lea     r11, jpt_402E80
.text:0000000000403429                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040342D                 add     rdx, r11
.text:0000000000403430                 jmp     rdx             ; switch jump
.text:0000000000403432 ; ---------------------------------------------------------------------------
.text:0000000000403432                 ud2
.text:0000000000403432 ; ---------------------------------------------------------------------------
.text:0000000000403434                 align 20h
.text:0000000000403440
.text:0000000000403440 loc_403440:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000403440                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000403440                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 1
.text:0000000000403447                 cmp     rdx, rcx
.text:000000000040344A                 movaps  xmm1, xmmword ptr [rsi-1]
.text:000000000040344E                 jb      short loc_403457
.text:0000000000403450                 lea     r9, [r9-7]
.text:0000000000403457
.text:0000000000403457 loc_403457:                             ; CODE XREF: __intel_ssse3_memmove+5FE↑j
.text:0000000000403457                 lea     rdx, [rdx-40h]
.text:000000000040345B                 jmp     r9
.text:000000000040345E ; ---------------------------------------------------------------------------
.text:000000000040345E                 ud2
.text:0000000000403460 ; ---------------------------------------------------------------------------
.text:0000000000403460                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000403467                 movaps  xmm2, xmmword ptr [rsi-11h]
.text:000000000040346B                 sub     rdx, 40h ; '@'
.text:000000000040346F                 movaps  xmm3, xmmword ptr [rsi-21h]
.text:0000000000403473                 movaps  xmm4, xmmword ptr [rsi-31h]
.text:0000000000403477                 movaps  xmm5, xmmword ptr [rsi-41h]
.text:000000000040347B                 lea     rsi, [rsi-40h]
.text:000000000040347F                 palignr xmm1, xmm2, 1
.text:0000000000403485                 palignr xmm2, xmm3, 1
.text:000000000040348B                 palignr xmm3, xmm4, 1
.text:0000000000403491                 palignr xmm4, xmm5, 1
.text:0000000000403497                 movaps  xmmword ptr [rdi-10h], xmm1
.text:000000000040349B                 movaps  xmm1, xmm5
.text:000000000040349E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004034A2                 lea     rdi, [rdi-40h]
.text:00000000004034A6                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004034AA                 jb      short loc_4034B4
.text:00000000004034AC                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004034AF                 jmp     r9
.text:00000000004034B2 ; ---------------------------------------------------------------------------
.text:00000000004034B2                 ud2
.text:00000000004034B4 ; ---------------------------------------------------------------------------
.text:00000000004034B4
.text:00000000004034B4 loc_4034B4:                             ; CODE XREF: __intel_ssse3_memmove+65A↑j
.text:00000000004034B4                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004034B7                 lea     rdx, [rdx+40h]
.text:00000000004034BB                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004034C0                 lea     r11, jpt_402E80
.text:00000000004034C7                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:00000000004034CB                 add     rdx, r11
.text:00000000004034CE                 jmp     rdx             ; switch jump
.text:00000000004034D0 ; ---------------------------------------------------------------------------
.text:00000000004034D0                 ud2
.text:00000000004034D0 ; ---------------------------------------------------------------------------
.text:00000000004034D2                 align 20h
.text:00000000004034E0
.text:00000000004034E0 loc_4034E0:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:00000000004034E0                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:00000000004034E0                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 2
.text:00000000004034E7                 cmp     rdx, rcx
.text:00000000004034EA                 movaps  xmm1, xmmword ptr [rsi-2]
.text:00000000004034EE                 jb      short loc_4034F7
.text:00000000004034F0                 lea     r9, [r9-7]
.text:00000000004034F7
.text:00000000004034F7 loc_4034F7:                             ; CODE XREF: __intel_ssse3_memmove+69E↑j
.text:00000000004034F7                 lea     rdx, [rdx-40h]
.text:00000000004034FB                 jmp     r9
.text:00000000004034FE ; ---------------------------------------------------------------------------
.text:00000000004034FE                 ud2
.text:0000000000403500 ; ---------------------------------------------------------------------------
.text:0000000000403500                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000403507                 sub     rdx, 40h ; '@'
.text:000000000040350B                 movaps  xmm2, xmmword ptr [rsi+0Eh]
.text:000000000040350F                 movaps  xmm3, xmmword ptr [rsi+1Eh]
.text:0000000000403513                 movaps  xmm4, xmmword ptr [rsi+2Eh]
.text:0000000000403517                 movaps  xmm5, xmmword ptr [rsi+3Eh]
.text:000000000040351B                 movdqa  xmm6, xmm5
.text:000000000040351F                 palignr xmm5, xmm4, 2
.text:0000000000403525                 lea     rsi, [rsi+40h]
.text:0000000000403529                 palignr xmm4, xmm3, 2
.text:000000000040352F                 palignr xmm3, xmm2, 2
.text:0000000000403535                 lea     rdi, [rdi+40h]
.text:0000000000403539                 palignr xmm2, xmm1, 2
.text:000000000040353F                 movdqa  xmm1, xmm6
.text:0000000000403543                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000403548                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040354C                 jb      short loc_40355B
.text:000000000040354E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403552                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403556                 jmp     r9
.text:0000000000403559 ; ---------------------------------------------------------------------------
.text:0000000000403559                 ud2
.text:000000000040355B ; ---------------------------------------------------------------------------
.text:000000000040355B
.text:000000000040355B loc_40355B:                             ; CODE XREF: __intel_ssse3_memmove+6FC↑j
.text:000000000040355B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:000000000040355F                 lea     rdx, [rdx+40h]
.text:0000000000403563                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403567                 add     rdi, rdx
.text:000000000040356A                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040356F                 add     rsi, rdx
.text:0000000000403572                 lea     r11, jpt_402E80
.text:0000000000403579                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040357D                 add     rdx, r11
.text:0000000000403580                 jmp     rdx             ; switch jump
.text:0000000000403582 ; ---------------------------------------------------------------------------
.text:0000000000403582                 ud2
.text:0000000000403582 ; ---------------------------------------------------------------------------
.text:0000000000403584                 align 10h
.text:0000000000403590
.text:0000000000403590 loc_403590:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000403590                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000403590                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 2
.text:0000000000403597                 cmp     rdx, rcx
.text:000000000040359A                 movaps  xmm1, xmmword ptr [rsi-2]
.text:000000000040359E                 jb      short loc_4035A7
.text:00000000004035A0                 lea     r9, [r9-7]
.text:00000000004035A7
.text:00000000004035A7 loc_4035A7:                             ; CODE XREF: __intel_ssse3_memmove+74E↑j
.text:00000000004035A7                 lea     rdx, [rdx-40h]
.text:00000000004035AB                 jmp     r9
.text:00000000004035AE ; ---------------------------------------------------------------------------
.text:00000000004035AE                 ud2
.text:00000000004035B0 ; ---------------------------------------------------------------------------
.text:00000000004035B0                 prefetchnta byte ptr [rsi-1C0h]
.text:00000000004035B7                 movaps  xmm2, xmmword ptr [rsi-12h]
.text:00000000004035BB                 sub     rdx, 40h ; '@'
.text:00000000004035BF                 movaps  xmm3, xmmword ptr [rsi-22h]
.text:00000000004035C3                 movaps  xmm4, xmmword ptr [rsi-32h]
.text:00000000004035C7                 movaps  xmm5, xmmword ptr [rsi-42h]
.text:00000000004035CB                 lea     rsi, [rsi-40h]
.text:00000000004035CF                 palignr xmm1, xmm2, 2
.text:00000000004035D5                 palignr xmm2, xmm3, 2
.text:00000000004035DB                 palignr xmm3, xmm4, 2
.text:00000000004035E1                 palignr xmm4, xmm5, 2
.text:00000000004035E7                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004035EB                 movaps  xmm1, xmm5
.text:00000000004035EE                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004035F2                 lea     rdi, [rdi-40h]
.text:00000000004035F6                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004035FA                 jb      short loc_403604
.text:00000000004035FC                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004035FF                 jmp     r9
.text:0000000000403602 ; ---------------------------------------------------------------------------
.text:0000000000403602                 ud2
.text:0000000000403604 ; ---------------------------------------------------------------------------
.text:0000000000403604
.text:0000000000403604 loc_403604:                             ; CODE XREF: __intel_ssse3_memmove+7AA↑j
.text:0000000000403604                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403607                 lea     rdx, [rdx+40h]
.text:000000000040360B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403610                 lea     r11, jpt_402E80
.text:0000000000403617                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040361B                 add     rdx, r11
.text:000000000040361E                 jmp     rdx             ; switch jump
.text:0000000000403620 ; ---------------------------------------------------------------------------
.text:0000000000403620                 ud2
.text:0000000000403620 ; ---------------------------------------------------------------------------
.text:0000000000403622                 align 10h
.text:0000000000403630
.text:0000000000403630 loc_403630:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000403630                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000403630                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 3
.text:0000000000403637                 cmp     rdx, rcx
.text:000000000040363A                 movaps  xmm1, xmmword ptr [rsi-3]
.text:000000000040363E                 jb      short loc_403647
.text:0000000000403640                 lea     r9, [r9-7]
.text:0000000000403647
.text:0000000000403647 loc_403647:                             ; CODE XREF: __intel_ssse3_memmove+7EE↑j
.text:0000000000403647                 lea     rdx, [rdx-40h]
.text:000000000040364B                 jmp     r9
.text:000000000040364E ; ---------------------------------------------------------------------------
.text:000000000040364E                 ud2
.text:0000000000403650 ; ---------------------------------------------------------------------------
.text:0000000000403650                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000403657                 sub     rdx, 40h ; '@'
.text:000000000040365B                 movaps  xmm2, xmmword ptr [rsi+0Dh]
.text:000000000040365F                 movaps  xmm3, xmmword ptr [rsi+1Dh]
.text:0000000000403663                 movaps  xmm4, xmmword ptr [rsi+2Dh]
.text:0000000000403667                 movaps  xmm5, xmmword ptr [rsi+3Dh]
.text:000000000040366B                 movdqa  xmm6, xmm5
.text:000000000040366F                 palignr xmm5, xmm4, 3
.text:0000000000403675                 lea     rsi, [rsi+40h]
.text:0000000000403679                 palignr xmm4, xmm3, 3
.text:000000000040367F                 palignr xmm3, xmm2, 3
.text:0000000000403685                 lea     rdi, [rdi+40h]
.text:0000000000403689                 palignr xmm2, xmm1, 3
.text:000000000040368F                 movdqa  xmm1, xmm6
.text:0000000000403693                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000403698                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040369C                 jb      short loc_4036AB
.text:000000000040369E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:00000000004036A2                 movaps  xmmword ptr [rdi-10h], xmm5
.text:00000000004036A6                 jmp     r9
.text:00000000004036A9 ; ---------------------------------------------------------------------------
.text:00000000004036A9                 ud2
.text:00000000004036AB ; ---------------------------------------------------------------------------
.text:00000000004036AB
.text:00000000004036AB loc_4036AB:                             ; CODE XREF: __intel_ssse3_memmove+84C↑j
.text:00000000004036AB                 movaps  xmmword ptr [rdi-20h], xmm4
.text:00000000004036AF                 lea     rdx, [rdx+40h]
.text:00000000004036B3                 movaps  xmmword ptr [rdi-10h], xmm5
.text:00000000004036B7                 add     rdi, rdx
.text:00000000004036BA                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004036BF                 add     rsi, rdx
.text:00000000004036C2                 lea     r11, jpt_402E80
.text:00000000004036C9                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:00000000004036CD                 add     rdx, r11
.text:00000000004036D0                 jmp     rdx             ; switch jump
.text:00000000004036D2 ; ---------------------------------------------------------------------------
.text:00000000004036D2                 ud2
.text:00000000004036D2 ; ---------------------------------------------------------------------------
.text:00000000004036D4                 align 20h
.text:00000000004036E0
.text:00000000004036E0 loc_4036E0:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:00000000004036E0                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:00000000004036E0                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 3
.text:00000000004036E7                 cmp     rdx, rcx
.text:00000000004036EA                 movaps  xmm1, xmmword ptr [rsi-3]
.text:00000000004036EE                 jb      short loc_4036F7
.text:00000000004036F0                 lea     r9, [r9-7]
.text:00000000004036F7
.text:00000000004036F7 loc_4036F7:                             ; CODE XREF: __intel_ssse3_memmove+89E↑j
.text:00000000004036F7                 lea     rdx, [rdx-40h]
.text:00000000004036FB                 jmp     r9
.text:00000000004036FE ; ---------------------------------------------------------------------------
.text:00000000004036FE                 ud2
.text:0000000000403700 ; ---------------------------------------------------------------------------
.text:0000000000403700                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000403707                 movaps  xmm2, xmmword ptr [rsi-13h]
.text:000000000040370B                 sub     rdx, 40h ; '@'
.text:000000000040370F                 movaps  xmm3, xmmword ptr [rsi-23h]
.text:0000000000403713                 movaps  xmm4, xmmword ptr [rsi-33h]
.text:0000000000403717                 movaps  xmm5, xmmword ptr [rsi-43h]
.text:000000000040371B                 lea     rsi, [rsi-40h]
.text:000000000040371F                 palignr xmm1, xmm2, 3
.text:0000000000403725                 palignr xmm2, xmm3, 3
.text:000000000040372B                 palignr xmm3, xmm4, 3
.text:0000000000403731                 palignr xmm4, xmm5, 3
.text:0000000000403737                 movaps  xmmword ptr [rdi-10h], xmm1
.text:000000000040373B                 movaps  xmm1, xmm5
.text:000000000040373E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000403742                 lea     rdi, [rdi-40h]
.text:0000000000403746                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040374A                 jb      short loc_403754
.text:000000000040374C                 movaps  xmmword ptr [rdi], xmm4
.text:000000000040374F                 jmp     r9
.text:0000000000403752 ; ---------------------------------------------------------------------------
.text:0000000000403752                 ud2
.text:0000000000403754 ; ---------------------------------------------------------------------------
.text:0000000000403754
.text:0000000000403754 loc_403754:                             ; CODE XREF: __intel_ssse3_memmove+8FA↑j
.text:0000000000403754                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403757                 lea     rdx, [rdx+40h]
.text:000000000040375B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403760                 lea     r11, jpt_402E80
.text:0000000000403767                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040376B                 add     rdx, r11
.text:000000000040376E                 jmp     rdx             ; switch jump
.text:0000000000403770 ; ---------------------------------------------------------------------------
.text:0000000000403770                 ud2
.text:0000000000403770 ; ---------------------------------------------------------------------------
.text:0000000000403772                 align 20h
.text:0000000000403780
.text:0000000000403780 loc_403780:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000403780                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000403780                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 4
.text:0000000000403787                 cmp     rdx, rcx
.text:000000000040378A                 movaps  xmm1, xmmword ptr [rsi-4]
.text:000000000040378E                 jb      short loc_403797
.text:0000000000403790                 lea     r9, [r9-7]
.text:0000000000403797
.text:0000000000403797 loc_403797:                             ; CODE XREF: __intel_ssse3_memmove+93E↑j
.text:0000000000403797                 lea     rdx, [rdx-40h]
.text:000000000040379B                 jmp     r9
.text:000000000040379E ; ---------------------------------------------------------------------------
.text:000000000040379E                 ud2
.text:00000000004037A0 ; ---------------------------------------------------------------------------
.text:00000000004037A0                 prefetchnta byte ptr [rsi+1C0h]
.text:00000000004037A7                 sub     rdx, 40h ; '@'
.text:00000000004037AB                 movaps  xmm2, xmmword ptr [rsi+0Ch]
.text:00000000004037AF                 movaps  xmm3, xmmword ptr [rsi+1Ch]
.text:00000000004037B3                 movaps  xmm4, xmmword ptr [rsi+2Ch]
.text:00000000004037B7                 movaps  xmm5, xmmword ptr [rsi+3Ch]
.text:00000000004037BB                 movdqa  xmm6, xmm5
.text:00000000004037BF                 palignr xmm5, xmm4, 4
.text:00000000004037C5                 lea     rsi, [rsi+40h]
.text:00000000004037C9                 palignr xmm4, xmm3, 4
.text:00000000004037CF                 palignr xmm3, xmm2, 4
.text:00000000004037D5                 lea     rdi, [rdi+40h]
.text:00000000004037D9                 palignr xmm2, xmm1, 4
.text:00000000004037DF                 movdqa  xmm1, xmm6
.text:00000000004037E3                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:00000000004037E8                 movaps  xmmword ptr [rdi-30h], xmm3
.text:00000000004037EC                 jb      short loc_4037FB
.text:00000000004037EE                 movaps  xmmword ptr [rdi-20h], xmm4
.text:00000000004037F2                 movaps  xmmword ptr [rdi-10h], xmm5
.text:00000000004037F6                 jmp     r9
.text:00000000004037F9 ; ---------------------------------------------------------------------------
.text:00000000004037F9                 ud2
.text:00000000004037FB ; ---------------------------------------------------------------------------
.text:00000000004037FB
.text:00000000004037FB loc_4037FB:                             ; CODE XREF: __intel_ssse3_memmove+99C↑j
.text:00000000004037FB                 movaps  xmmword ptr [rdi-20h], xmm4
.text:00000000004037FF                 lea     rdx, [rdx+40h]
.text:0000000000403803                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403807                 add     rdi, rdx
.text:000000000040380A                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040380F                 add     rsi, rdx
.text:0000000000403812                 lea     r11, jpt_402E80
.text:0000000000403819                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040381D                 add     rdx, r11
.text:0000000000403820                 jmp     rdx             ; switch jump
.text:0000000000403822 ; ---------------------------------------------------------------------------
.text:0000000000403822                 ud2
.text:0000000000403822 ; ---------------------------------------------------------------------------
.text:0000000000403824                 align 10h
.text:0000000000403830
.text:0000000000403830 loc_403830:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000403830                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000403830                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 4
.text:0000000000403837                 cmp     rdx, rcx
.text:000000000040383A                 movaps  xmm1, xmmword ptr [rsi-4]
.text:000000000040383E                 jb      short loc_403847
.text:0000000000403840                 lea     r9, [r9-7]
.text:0000000000403847
.text:0000000000403847 loc_403847:                             ; CODE XREF: __intel_ssse3_memmove+9EE↑j
.text:0000000000403847                 lea     rdx, [rdx-40h]
.text:000000000040384B                 jmp     r9
.text:000000000040384E ; ---------------------------------------------------------------------------
.text:000000000040384E                 ud2
.text:0000000000403850 ; ---------------------------------------------------------------------------
.text:0000000000403850                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000403857                 movaps  xmm2, xmmword ptr [rsi-14h]
.text:000000000040385B                 sub     rdx, 40h ; '@'
.text:000000000040385F                 movaps  xmm3, xmmword ptr [rsi-24h]
.text:0000000000403863                 movaps  xmm4, xmmword ptr [rsi-34h]
.text:0000000000403867                 movaps  xmm5, xmmword ptr [rsi-44h]
.text:000000000040386B                 lea     rsi, [rsi-40h]
.text:000000000040386F                 palignr xmm1, xmm2, 4
.text:0000000000403875                 palignr xmm2, xmm3, 4
.text:000000000040387B                 palignr xmm3, xmm4, 4
.text:0000000000403881                 palignr xmm4, xmm5, 4
.text:0000000000403887                 movaps  xmmword ptr [rdi-10h], xmm1
.text:000000000040388B                 movaps  xmm1, xmm5
.text:000000000040388E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000403892                 lea     rdi, [rdi-40h]
.text:0000000000403896                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040389A                 jb      short loc_4038A4
.text:000000000040389C                 movaps  xmmword ptr [rdi], xmm4
.text:000000000040389F                 jmp     r9
.text:00000000004038A2 ; ---------------------------------------------------------------------------
.text:00000000004038A2                 ud2
.text:00000000004038A4 ; ---------------------------------------------------------------------------
.text:00000000004038A4
.text:00000000004038A4 loc_4038A4:                             ; CODE XREF: __intel_ssse3_memmove+A4A↑j
.text:00000000004038A4                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004038A7                 lea     rdx, [rdx+40h]
.text:00000000004038AB                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004038B0                 lea     r11, jpt_402E80
.text:00000000004038B7                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:00000000004038BB                 add     rdx, r11
.text:00000000004038BE                 jmp     rdx             ; switch jump
.text:00000000004038C0 ; ---------------------------------------------------------------------------
.text:00000000004038C0                 ud2
.text:00000000004038C0 ; ---------------------------------------------------------------------------
.text:00000000004038C2                 align 10h
.text:00000000004038D0
.text:00000000004038D0 loc_4038D0:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:00000000004038D0                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:00000000004038D0                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 5
.text:00000000004038D7                 cmp     rdx, rcx
.text:00000000004038DA                 movaps  xmm1, xmmword ptr [rsi-5]
.text:00000000004038DE                 jb      short loc_4038E7
.text:00000000004038E0                 lea     r9, [r9-7]
.text:00000000004038E7
.text:00000000004038E7 loc_4038E7:                             ; CODE XREF: __intel_ssse3_memmove+A8E↑j
.text:00000000004038E7                 lea     rdx, [rdx-40h]
.text:00000000004038EB                 jmp     r9
.text:00000000004038EE ; ---------------------------------------------------------------------------
.text:00000000004038EE                 ud2
.text:00000000004038F0 ; ---------------------------------------------------------------------------
.text:00000000004038F0                 prefetchnta byte ptr [rsi+1C0h]
.text:00000000004038F7                 sub     rdx, 40h ; '@'
.text:00000000004038FB                 movaps  xmm2, xmmword ptr [rsi+0Bh]
.text:00000000004038FF                 movaps  xmm3, xmmword ptr [rsi+1Bh]
.text:0000000000403903                 movaps  xmm4, xmmword ptr [rsi+2Bh]
.text:0000000000403907                 movaps  xmm5, xmmword ptr [rsi+3Bh]
.text:000000000040390B                 movdqa  xmm6, xmm5
.text:000000000040390F                 palignr xmm5, xmm4, 5
.text:0000000000403915                 lea     rsi, [rsi+40h]
.text:0000000000403919                 palignr xmm4, xmm3, 5
.text:000000000040391F                 palignr xmm3, xmm2, 5
.text:0000000000403925                 lea     rdi, [rdi+40h]
.text:0000000000403929                 palignr xmm2, xmm1, 5
.text:000000000040392F                 movdqa  xmm1, xmm6
.text:0000000000403933                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000403938                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040393C                 jb      short loc_40394B
.text:000000000040393E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403942                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403946                 jmp     r9
.text:0000000000403949 ; ---------------------------------------------------------------------------
.text:0000000000403949                 ud2
.text:000000000040394B ; ---------------------------------------------------------------------------
.text:000000000040394B
.text:000000000040394B loc_40394B:                             ; CODE XREF: __intel_ssse3_memmove+AEC↑j
.text:000000000040394B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:000000000040394F                 lea     rdx, [rdx+40h]
.text:0000000000403953                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403957                 add     rdi, rdx
.text:000000000040395A                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040395F                 add     rsi, rdx
.text:0000000000403962                 lea     r11, jpt_402E80
.text:0000000000403969                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040396D                 add     rdx, r11
.text:0000000000403970                 jmp     rdx             ; switch jump
.text:0000000000403972 ; ---------------------------------------------------------------------------
.text:0000000000403972                 ud2
.text:0000000000403972 ; ---------------------------------------------------------------------------
.text:0000000000403974                 align 20h
.text:0000000000403980
.text:0000000000403980 loc_403980:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000403980                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000403980                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 5
.text:0000000000403987                 cmp     rdx, rcx
.text:000000000040398A                 movaps  xmm1, xmmword ptr [rsi-5]
.text:000000000040398E                 jb      short loc_403997
.text:0000000000403990                 lea     r9, [r9-7]
.text:0000000000403997
.text:0000000000403997 loc_403997:                             ; CODE XREF: __intel_ssse3_memmove+B3E↑j
.text:0000000000403997                 lea     rdx, [rdx-40h]
.text:000000000040399B                 jmp     r9
.text:000000000040399E ; ---------------------------------------------------------------------------
.text:000000000040399E                 ud2
.text:00000000004039A0 ; ---------------------------------------------------------------------------
.text:00000000004039A0                 prefetchnta byte ptr [rsi-1C0h]
.text:00000000004039A7                 movaps  xmm2, xmmword ptr [rsi-15h]
.text:00000000004039AB                 sub     rdx, 40h ; '@'
.text:00000000004039AF                 movaps  xmm3, xmmword ptr [rsi-25h]
.text:00000000004039B3                 movaps  xmm4, xmmword ptr [rsi-35h]
.text:00000000004039B7                 movaps  xmm5, xmmword ptr [rsi-45h]
.text:00000000004039BB                 lea     rsi, [rsi-40h]
.text:00000000004039BF                 palignr xmm1, xmm2, 5
.text:00000000004039C5                 palignr xmm2, xmm3, 5
.text:00000000004039CB                 palignr xmm3, xmm4, 5
.text:00000000004039D1                 palignr xmm4, xmm5, 5
.text:00000000004039D7                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004039DB                 movaps  xmm1, xmm5
.text:00000000004039DE                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004039E2                 lea     rdi, [rdi-40h]
.text:00000000004039E6                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004039EA                 jb      short loc_4039F4
.text:00000000004039EC                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004039EF                 jmp     r9
.text:00000000004039F2 ; ---------------------------------------------------------------------------
.text:00000000004039F2                 ud2
.text:00000000004039F4 ; ---------------------------------------------------------------------------
.text:00000000004039F4
.text:00000000004039F4 loc_4039F4:                             ; CODE XREF: __intel_ssse3_memmove+B9A↑j
.text:00000000004039F4                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004039F7                 lea     rdx, [rdx+40h]
.text:00000000004039FB                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403A00                 lea     r11, jpt_402E80
.text:0000000000403A07                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403A0B                 add     rdx, r11
.text:0000000000403A0E                 jmp     rdx             ; switch jump
.text:0000000000403A10 ; ---------------------------------------------------------------------------
.text:0000000000403A10                 ud2
.text:0000000000403A10 ; ---------------------------------------------------------------------------
.text:0000000000403A12                 align 20h
.text:0000000000403A20
.text:0000000000403A20 loc_403A20:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000403A20                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000403A20                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 6
.text:0000000000403A27                 cmp     rdx, rcx
.text:0000000000403A2A                 movaps  xmm1, xmmword ptr [rsi-6]
.text:0000000000403A2E                 jb      short loc_403A37
.text:0000000000403A30                 lea     r9, [r9-7]
.text:0000000000403A37
.text:0000000000403A37 loc_403A37:                             ; CODE XREF: __intel_ssse3_memmove+BDE↑j
.text:0000000000403A37                 lea     rdx, [rdx-40h]
.text:0000000000403A3B                 jmp     r9
.text:0000000000403A3E ; ---------------------------------------------------------------------------
.text:0000000000403A3E                 ud2
.text:0000000000403A40 ; ---------------------------------------------------------------------------
.text:0000000000403A40                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000403A47                 sub     rdx, 40h ; '@'
.text:0000000000403A4B                 movaps  xmm2, xmmword ptr [rsi+0Ah]
.text:0000000000403A4F                 movaps  xmm3, xmmword ptr [rsi+1Ah]
.text:0000000000403A53                 movaps  xmm4, xmmword ptr [rsi+2Ah]
.text:0000000000403A57                 movaps  xmm5, xmmword ptr [rsi+3Ah]
.text:0000000000403A5B                 movdqa  xmm6, xmm5
.text:0000000000403A5F                 palignr xmm5, xmm4, 6
.text:0000000000403A65                 lea     rsi, [rsi+40h]
.text:0000000000403A69                 palignr xmm4, xmm3, 6
.text:0000000000403A6F                 palignr xmm3, xmm2, 6
.text:0000000000403A75                 lea     rdi, [rdi+40h]
.text:0000000000403A79                 palignr xmm2, xmm1, 6
.text:0000000000403A7F                 movdqa  xmm1, xmm6
.text:0000000000403A83                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000403A88                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000403A8C                 jb      short loc_403A9B
.text:0000000000403A8E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403A92                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403A96                 jmp     r9
.text:0000000000403A99 ; ---------------------------------------------------------------------------
.text:0000000000403A99                 ud2
.text:0000000000403A9B ; ---------------------------------------------------------------------------
.text:0000000000403A9B
.text:0000000000403A9B loc_403A9B:                             ; CODE XREF: __intel_ssse3_memmove+C3C↑j
.text:0000000000403A9B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403A9F                 lea     rdx, [rdx+40h]
.text:0000000000403AA3                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403AA7                 add     rdi, rdx
.text:0000000000403AAA                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403AAF                 add     rsi, rdx
.text:0000000000403AB2                 lea     r11, jpt_402E80
.text:0000000000403AB9                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403ABD                 add     rdx, r11
.text:0000000000403AC0                 jmp     rdx             ; switch jump
.text:0000000000403AC2 ; ---------------------------------------------------------------------------
.text:0000000000403AC2                 ud2
.text:0000000000403AC2 ; ---------------------------------------------------------------------------
.text:0000000000403AC4                 align 10h
.text:0000000000403AD0
.text:0000000000403AD0 loc_403AD0:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000403AD0                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000403AD0                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 6
.text:0000000000403AD7                 cmp     rdx, rcx
.text:0000000000403ADA                 movaps  xmm1, xmmword ptr [rsi-6]
.text:0000000000403ADE                 jb      short loc_403AE7
.text:0000000000403AE0                 lea     r9, [r9-7]
.text:0000000000403AE7
.text:0000000000403AE7 loc_403AE7:                             ; CODE XREF: __intel_ssse3_memmove+C8E↑j
.text:0000000000403AE7                 lea     rdx, [rdx-40h]
.text:0000000000403AEB                 jmp     r9
.text:0000000000403AEE ; ---------------------------------------------------------------------------
.text:0000000000403AEE                 ud2
.text:0000000000403AF0 ; ---------------------------------------------------------------------------
.text:0000000000403AF0                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000403AF7                 movaps  xmm2, xmmword ptr [rsi-16h]
.text:0000000000403AFB                 sub     rdx, 40h ; '@'
.text:0000000000403AFF                 movaps  xmm3, xmmword ptr [rsi-26h]
.text:0000000000403B03                 movaps  xmm4, xmmword ptr [rsi-36h]
.text:0000000000403B07                 movaps  xmm5, xmmword ptr [rsi-46h]
.text:0000000000403B0B                 lea     rsi, [rsi-40h]
.text:0000000000403B0F                 palignr xmm1, xmm2, 6
.text:0000000000403B15                 palignr xmm2, xmm3, 6
.text:0000000000403B1B                 palignr xmm3, xmm4, 6
.text:0000000000403B21                 palignr xmm4, xmm5, 6
.text:0000000000403B27                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000403B2B                 movaps  xmm1, xmm5
.text:0000000000403B2E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000403B32                 lea     rdi, [rdi-40h]
.text:0000000000403B36                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000403B3A                 jb      short loc_403B44
.text:0000000000403B3C                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403B3F                 jmp     r9
.text:0000000000403B42 ; ---------------------------------------------------------------------------
.text:0000000000403B42                 ud2
.text:0000000000403B44 ; ---------------------------------------------------------------------------
.text:0000000000403B44
.text:0000000000403B44 loc_403B44:                             ; CODE XREF: __intel_ssse3_memmove+CEA↑j
.text:0000000000403B44                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403B47                 lea     rdx, [rdx+40h]
.text:0000000000403B4B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403B50                 lea     r11, jpt_402E80
.text:0000000000403B57                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403B5B                 add     rdx, r11
.text:0000000000403B5E                 jmp     rdx             ; switch jump
.text:0000000000403B60 ; ---------------------------------------------------------------------------
.text:0000000000403B60                 ud2
.text:0000000000403B60 ; ---------------------------------------------------------------------------
.text:0000000000403B62                 align 10h
.text:0000000000403B70
.text:0000000000403B70 loc_403B70:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000403B70                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000403B70                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 7
.text:0000000000403B77                 cmp     rdx, rcx
.text:0000000000403B7A                 movaps  xmm1, xmmword ptr [rsi-7]
.text:0000000000403B7E                 jb      short loc_403B87
.text:0000000000403B80                 lea     r9, [r9-7]
.text:0000000000403B87
.text:0000000000403B87 loc_403B87:                             ; CODE XREF: __intel_ssse3_memmove+D2E↑j
.text:0000000000403B87                 lea     rdx, [rdx-40h]
.text:0000000000403B8B                 jmp     r9
.text:0000000000403B8E ; ---------------------------------------------------------------------------
.text:0000000000403B8E                 ud2
.text:0000000000403B90 ; ---------------------------------------------------------------------------
.text:0000000000403B90                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000403B97                 sub     rdx, 40h ; '@'
.text:0000000000403B9B                 movaps  xmm2, xmmword ptr [rsi+9]
.text:0000000000403B9F                 movaps  xmm3, xmmword ptr [rsi+19h]
.text:0000000000403BA3                 movaps  xmm4, xmmword ptr [rsi+29h]
.text:0000000000403BA7                 movaps  xmm5, xmmword ptr [rsi+39h]
.text:0000000000403BAB                 movdqa  xmm6, xmm5
.text:0000000000403BAF                 palignr xmm5, xmm4, 7
.text:0000000000403BB5                 lea     rsi, [rsi+40h]
.text:0000000000403BB9                 palignr xmm4, xmm3, 7
.text:0000000000403BBF                 palignr xmm3, xmm2, 7
.text:0000000000403BC5                 lea     rdi, [rdi+40h]
.text:0000000000403BC9                 palignr xmm2, xmm1, 7
.text:0000000000403BCF                 movdqa  xmm1, xmm6
.text:0000000000403BD3                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000403BD8                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000403BDC                 jb      short loc_403BEB
.text:0000000000403BDE                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403BE2                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403BE6                 jmp     r9
.text:0000000000403BE9 ; ---------------------------------------------------------------------------
.text:0000000000403BE9                 ud2
.text:0000000000403BEB ; ---------------------------------------------------------------------------
.text:0000000000403BEB
.text:0000000000403BEB loc_403BEB:                             ; CODE XREF: __intel_ssse3_memmove+D8C↑j
.text:0000000000403BEB                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403BEF                 lea     rdx, [rdx+40h]
.text:0000000000403BF3                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403BF7                 add     rdi, rdx
.text:0000000000403BFA                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403BFF                 add     rsi, rdx
.text:0000000000403C02                 lea     r11, jpt_402E80
.text:0000000000403C09                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403C0D                 add     rdx, r11
.text:0000000000403C10                 jmp     rdx             ; switch jump
.text:0000000000403C12 ; ---------------------------------------------------------------------------
.text:0000000000403C12                 ud2
.text:0000000000403C12 ; ---------------------------------------------------------------------------
.text:0000000000403C14                 align 20h
.text:0000000000403C20
.text:0000000000403C20 loc_403C20:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000403C20                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000403C20                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 7
.text:0000000000403C27                 cmp     rdx, rcx
.text:0000000000403C2A                 movaps  xmm1, xmmword ptr [rsi-7]
.text:0000000000403C2E                 jb      short loc_403C37
.text:0000000000403C30                 lea     r9, [r9-7]
.text:0000000000403C37
.text:0000000000403C37 loc_403C37:                             ; CODE XREF: __intel_ssse3_memmove+DDE↑j
.text:0000000000403C37                 lea     rdx, [rdx-40h]
.text:0000000000403C3B                 jmp     r9
.text:0000000000403C3E ; ---------------------------------------------------------------------------
.text:0000000000403C3E                 ud2
.text:0000000000403C40 ; ---------------------------------------------------------------------------
.text:0000000000403C40                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000403C47                 movaps  xmm2, xmmword ptr [rsi-17h]
.text:0000000000403C4B                 sub     rdx, 40h ; '@'
.text:0000000000403C4F                 movaps  xmm3, xmmword ptr [rsi-27h]
.text:0000000000403C53                 movaps  xmm4, xmmword ptr [rsi-37h]
.text:0000000000403C57                 movaps  xmm5, xmmword ptr [rsi-47h]
.text:0000000000403C5B                 lea     rsi, [rsi-40h]
.text:0000000000403C5F                 palignr xmm1, xmm2, 7
.text:0000000000403C65                 palignr xmm2, xmm3, 7
.text:0000000000403C6B                 palignr xmm3, xmm4, 7
.text:0000000000403C71                 palignr xmm4, xmm5, 7
.text:0000000000403C77                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000403C7B                 movaps  xmm1, xmm5
.text:0000000000403C7E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000403C82                 lea     rdi, [rdi-40h]
.text:0000000000403C86                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000403C8A                 jb      short loc_403C94
.text:0000000000403C8C                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403C8F                 jmp     r9
.text:0000000000403C92 ; ---------------------------------------------------------------------------
.text:0000000000403C92                 ud2
.text:0000000000403C94 ; ---------------------------------------------------------------------------
.text:0000000000403C94
.text:0000000000403C94 loc_403C94:                             ; CODE XREF: __intel_ssse3_memmove+E3A↑j
.text:0000000000403C94                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403C97                 lea     rdx, [rdx+40h]
.text:0000000000403C9B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403CA0                 lea     r11, jpt_402E80
.text:0000000000403CA7                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403CAB                 add     rdx, r11
.text:0000000000403CAE                 jmp     rdx             ; switch jump
.text:0000000000403CB0 ; ---------------------------------------------------------------------------
.text:0000000000403CB0                 ud2
.text:0000000000403CB0 ; ---------------------------------------------------------------------------
.text:0000000000403CB2                 align 20h
.text:0000000000403CC0
.text:0000000000403CC0 loc_403CC0:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000403CC0                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000403CC0                 lea     r9, [r9+25h]    ; jumptable 0000000000402ED7 case 8
.text:0000000000403CC7                 cmp     rdx, rcx
.text:0000000000403CCA                 movaps  xmm1, xmmword ptr [rsi-8]
.text:0000000000403CCE                 jb      short loc_403CD7
.text:0000000000403CD0                 lea     r9, [r9-7]
.text:0000000000403CD7
.text:0000000000403CD7 loc_403CD7:                             ; CODE XREF: __intel_ssse3_memmove+E7E↑j
.text:0000000000403CD7                 lea     rdx, [rdx-40h]
.text:0000000000403CDB                 jmp     r9
.text:0000000000403CDE ; ---------------------------------------------------------------------------
.text:0000000000403CDE                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000403CE5                 sub     rdx, 40h ; '@'
.text:0000000000403CE9                 movaps  xmm2, xmmword ptr [rsi+8]
.text:0000000000403CED                 movaps  xmm3, xmmword ptr [rsi+18h]
.text:0000000000403CF1                 movaps  xmm4, xmmword ptr [rsi+28h]
.text:0000000000403CF5                 movaps  xmm5, xmmword ptr [rsi+38h]
.text:0000000000403CF9                 movdqa  xmm6, xmm5
.text:0000000000403CFD                 palignr xmm5, xmm4, 8
.text:0000000000403D03                 lea     rsi, [rsi+40h]
.text:0000000000403D07                 palignr xmm4, xmm3, 8
.text:0000000000403D0D                 palignr xmm3, xmm2, 8
.text:0000000000403D13                 lea     rdi, [rdi+40h]
.text:0000000000403D17                 palignr xmm2, xmm1, 8
.text:0000000000403D1D                 movdqa  xmm1, xmm6
.text:0000000000403D21                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000403D26                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000403D2A                 jb      short loc_403D40
.text:0000000000403D2C                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403D30                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403D34                 jmp     r9
.text:0000000000403D37 ; ---------------------------------------------------------------------------
.text:0000000000403D37                 ud2
.text:0000000000403D37 ; ---------------------------------------------------------------------------
.text:0000000000403D39                 align 20h
.text:0000000000403D40
.text:0000000000403D40 loc_403D40:                             ; CODE XREF: __intel_ssse3_memmove+EDA↑j
.text:0000000000403D40                 lea     rdx, [rdx+40h]
.text:0000000000403D44                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403D48                 add     rsi, rdx
.text:0000000000403D4B                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403D4F                 add     rdi, rdx
.text:0000000000403D52                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403D57                 lea     r11, jpt_402E80
.text:0000000000403D5E                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403D62                 add     rdx, r11
.text:0000000000403D65                 jmp     rdx             ; switch jump
.text:0000000000403D67 ; ---------------------------------------------------------------------------
.text:0000000000403D67                 ud2
.text:0000000000403D67 ; ---------------------------------------------------------------------------
.text:0000000000403D69                 align 10h
.text:0000000000403D70
.text:0000000000403D70 loc_403D70:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000403D70                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000403D70                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 8
.text:0000000000403D77                 cmp     rdx, rcx
.text:0000000000403D7A                 movaps  xmm1, xmmword ptr [rsi-8]
.text:0000000000403D7E                 jb      short loc_403D87
.text:0000000000403D80                 lea     r9, [r9-7]
.text:0000000000403D87
.text:0000000000403D87 loc_403D87:                             ; CODE XREF: __intel_ssse3_memmove+F2E↑j
.text:0000000000403D87                 lea     rdx, [rdx-40h]
.text:0000000000403D8B                 jmp     r9
.text:0000000000403D8E ; ---------------------------------------------------------------------------
.text:0000000000403D8E                 ud2
.text:0000000000403D90 ; ---------------------------------------------------------------------------
.text:0000000000403D90                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000403D97                 movaps  xmm2, xmmword ptr [rsi-18h]
.text:0000000000403D9B                 sub     rdx, 40h ; '@'
.text:0000000000403D9F                 movaps  xmm3, xmmword ptr [rsi-28h]
.text:0000000000403DA3                 movaps  xmm4, xmmword ptr [rsi-38h]
.text:0000000000403DA7                 movaps  xmm5, xmmword ptr [rsi-48h]
.text:0000000000403DAB                 lea     rsi, [rsi-40h]
.text:0000000000403DAF                 palignr xmm1, xmm2, 8
.text:0000000000403DB5                 palignr xmm2, xmm3, 8
.text:0000000000403DBB                 palignr xmm3, xmm4, 8
.text:0000000000403DC1                 palignr xmm4, xmm5, 8
.text:0000000000403DC7                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000403DCB                 movaps  xmm1, xmm5
.text:0000000000403DCE                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000403DD2                 lea     rdi, [rdi-40h]
.text:0000000000403DD6                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000403DDA                 jb      short loc_403DE4
.text:0000000000403DDC                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403DDF                 jmp     r9
.text:0000000000403DE2 ; ---------------------------------------------------------------------------
.text:0000000000403DE2                 ud2
.text:0000000000403DE4 ; ---------------------------------------------------------------------------
.text:0000000000403DE4
.text:0000000000403DE4 loc_403DE4:                             ; CODE XREF: __intel_ssse3_memmove+F8A↑j
.text:0000000000403DE4                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403DE7                 lea     rdx, [rdx+40h]
.text:0000000000403DEB                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403DF0                 lea     r11, jpt_402E80
.text:0000000000403DF7                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403DFB                 add     rdx, r11
.text:0000000000403DFE                 jmp     rdx             ; switch jump
.text:0000000000403E00 ; ---------------------------------------------------------------------------
.text:0000000000403E00                 ud2
.text:0000000000403E00 ; ---------------------------------------------------------------------------
.text:0000000000403E02                 align 10h
.text:0000000000403E10
.text:0000000000403E10 loc_403E10:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000403E10                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000403E10                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 9
.text:0000000000403E17                 cmp     rdx, rcx
.text:0000000000403E1A                 movaps  xmm1, xmmword ptr [rsi-9]
.text:0000000000403E1E                 jb      short loc_403E27
.text:0000000000403E20                 lea     r9, [r9-7]
.text:0000000000403E27
.text:0000000000403E27 loc_403E27:                             ; CODE XREF: __intel_ssse3_memmove+FCE↑j
.text:0000000000403E27                 lea     rdx, [rdx-40h]
.text:0000000000403E2B                 jmp     r9
.text:0000000000403E2E ; ---------------------------------------------------------------------------
.text:0000000000403E2E                 ud2
.text:0000000000403E30 ; ---------------------------------------------------------------------------
.text:0000000000403E30                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000403E37                 sub     rdx, 40h ; '@'
.text:0000000000403E3B                 movaps  xmm2, xmmword ptr [rsi+7]
.text:0000000000403E3F                 movaps  xmm3, xmmword ptr [rsi+17h]
.text:0000000000403E43                 movaps  xmm4, xmmword ptr [rsi+27h]
.text:0000000000403E47                 movaps  xmm5, xmmword ptr [rsi+37h]
.text:0000000000403E4B                 movdqa  xmm6, xmm5
.text:0000000000403E4F                 palignr xmm5, xmm4, 9
.text:0000000000403E55                 lea     rsi, [rsi+40h]
.text:0000000000403E59                 palignr xmm4, xmm3, 9
.text:0000000000403E5F                 palignr xmm3, xmm2, 9
.text:0000000000403E65                 lea     rdi, [rdi+40h]
.text:0000000000403E69                 palignr xmm2, xmm1, 9
.text:0000000000403E6F                 movdqa  xmm1, xmm6
.text:0000000000403E73                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000403E78                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000403E7C                 jb      short loc_403E8B
.text:0000000000403E7E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403E82                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403E86                 jmp     r9
.text:0000000000403E89 ; ---------------------------------------------------------------------------
.text:0000000000403E89                 ud2
.text:0000000000403E8B ; ---------------------------------------------------------------------------
.text:0000000000403E8B
.text:0000000000403E8B loc_403E8B:                             ; CODE XREF: __intel_ssse3_memmove+102C↑j
.text:0000000000403E8B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403E8F                 lea     rdx, [rdx+40h]
.text:0000000000403E93                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403E97                 add     rdi, rdx
.text:0000000000403E9A                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403E9F                 add     rsi, rdx
.text:0000000000403EA2                 lea     r11, jpt_402E80
.text:0000000000403EA9                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403EAD                 add     rdx, r11
.text:0000000000403EB0                 jmp     rdx             ; switch jump
.text:0000000000403EB2 ; ---------------------------------------------------------------------------
.text:0000000000403EB2                 ud2
.text:0000000000403EB2 ; ---------------------------------------------------------------------------
.text:0000000000403EB4                 align 20h
.text:0000000000403EC0
.text:0000000000403EC0 loc_403EC0:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000403EC0                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000403EC0                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 9
.text:0000000000403EC7                 cmp     rdx, rcx
.text:0000000000403ECA                 movaps  xmm1, xmmword ptr [rsi-9]
.text:0000000000403ECE                 jb      short loc_403ED7
.text:0000000000403ED0                 lea     r9, [r9-7]
.text:0000000000403ED7
.text:0000000000403ED7 loc_403ED7:                             ; CODE XREF: __intel_ssse3_memmove+107E↑j
.text:0000000000403ED7                 lea     rdx, [rdx-40h]
.text:0000000000403EDB                 jmp     r9
.text:0000000000403EDE ; ---------------------------------------------------------------------------
.text:0000000000403EDE                 ud2
.text:0000000000403EE0 ; ---------------------------------------------------------------------------
.text:0000000000403EE0                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000403EE7                 movaps  xmm2, xmmword ptr [rsi-19h]
.text:0000000000403EEB                 sub     rdx, 40h ; '@'
.text:0000000000403EEF                 movaps  xmm3, xmmword ptr [rsi-29h]
.text:0000000000403EF3                 movaps  xmm4, xmmword ptr [rsi-39h]
.text:0000000000403EF7                 movaps  xmm5, xmmword ptr [rsi-49h]
.text:0000000000403EFB                 lea     rsi, [rsi-40h]
.text:0000000000403EFF                 palignr xmm1, xmm2, 9
.text:0000000000403F05                 palignr xmm2, xmm3, 9
.text:0000000000403F0B                 palignr xmm3, xmm4, 9
.text:0000000000403F11                 palignr xmm4, xmm5, 9
.text:0000000000403F17                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000403F1B                 movaps  xmm1, xmm5
.text:0000000000403F1E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000403F22                 lea     rdi, [rdi-40h]
.text:0000000000403F26                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000403F2A                 jb      short loc_403F34
.text:0000000000403F2C                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403F2F                 jmp     r9
.text:0000000000403F32 ; ---------------------------------------------------------------------------
.text:0000000000403F32                 ud2
.text:0000000000403F34 ; ---------------------------------------------------------------------------
.text:0000000000403F34
.text:0000000000403F34 loc_403F34:                             ; CODE XREF: __intel_ssse3_memmove+10DA↑j
.text:0000000000403F34                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000403F37                 lea     rdx, [rdx+40h]
.text:0000000000403F3B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403F40                 lea     r11, jpt_402E80
.text:0000000000403F47                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403F4B                 add     rdx, r11
.text:0000000000403F4E                 jmp     rdx             ; switch jump
.text:0000000000403F50 ; ---------------------------------------------------------------------------
.text:0000000000403F50                 ud2
.text:0000000000403F50 ; ---------------------------------------------------------------------------
.text:0000000000403F52                 align 20h
.text:0000000000403F60
.text:0000000000403F60 loc_403F60:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000403F60                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000403F60                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 10
.text:0000000000403F67                 cmp     rdx, rcx
.text:0000000000403F6A                 movaps  xmm1, xmmword ptr [rsi-0Ah]
.text:0000000000403F6E                 jb      short loc_403F77
.text:0000000000403F70                 lea     r9, [r9-7]
.text:0000000000403F77
.text:0000000000403F77 loc_403F77:                             ; CODE XREF: __intel_ssse3_memmove+111E↑j
.text:0000000000403F77                 lea     rdx, [rdx-40h]
.text:0000000000403F7B                 jmp     r9
.text:0000000000403F7E ; ---------------------------------------------------------------------------
.text:0000000000403F7E                 ud2
.text:0000000000403F80 ; ---------------------------------------------------------------------------
.text:0000000000403F80                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000403F87                 sub     rdx, 40h ; '@'
.text:0000000000403F8B                 movaps  xmm2, xmmword ptr [rsi+6]
.text:0000000000403F8F                 movaps  xmm3, xmmword ptr [rsi+16h]
.text:0000000000403F93                 movaps  xmm4, xmmword ptr [rsi+26h]
.text:0000000000403F97                 movaps  xmm5, xmmword ptr [rsi+36h]
.text:0000000000403F9B                 movdqa  xmm6, xmm5
.text:0000000000403F9F                 palignr xmm5, xmm4, 0Ah
.text:0000000000403FA5                 lea     rsi, [rsi+40h]
.text:0000000000403FA9                 palignr xmm4, xmm3, 0Ah
.text:0000000000403FAF                 palignr xmm3, xmm2, 0Ah
.text:0000000000403FB5                 lea     rdi, [rdi+40h]
.text:0000000000403FB9                 palignr xmm2, xmm1, 0Ah
.text:0000000000403FBF                 movdqa  xmm1, xmm6
.text:0000000000403FC3                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000403FC8                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000403FCC                 jb      short loc_403FDB
.text:0000000000403FCE                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403FD2                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403FD6                 jmp     r9
.text:0000000000403FD9 ; ---------------------------------------------------------------------------
.text:0000000000403FD9                 ud2
.text:0000000000403FDB ; ---------------------------------------------------------------------------
.text:0000000000403FDB
.text:0000000000403FDB loc_403FDB:                             ; CODE XREF: __intel_ssse3_memmove+117C↑j
.text:0000000000403FDB                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000403FDF                 lea     rdx, [rdx+40h]
.text:0000000000403FE3                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000403FE7                 add     rdi, rdx
.text:0000000000403FEA                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000403FEF                 add     rsi, rdx
.text:0000000000403FF2                 lea     r11, jpt_402E80
.text:0000000000403FF9                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000403FFD                 add     rdx, r11
.text:0000000000404000                 jmp     rdx             ; switch jump
.text:0000000000404002 ; ---------------------------------------------------------------------------
.text:0000000000404002                 ud2
.text:0000000000404002 ; ---------------------------------------------------------------------------
.text:0000000000404004                 align 10h
.text:0000000000404010
.text:0000000000404010 loc_404010:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000404010                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000404010                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 10
.text:0000000000404017                 cmp     rdx, rcx
.text:000000000040401A                 movaps  xmm1, xmmword ptr [rsi-0Ah]
.text:000000000040401E                 jb      short loc_404027
.text:0000000000404020                 lea     r9, [r9-7]
.text:0000000000404027
.text:0000000000404027 loc_404027:                             ; CODE XREF: __intel_ssse3_memmove+11CE↑j
.text:0000000000404027                 lea     rdx, [rdx-40h]
.text:000000000040402B                 jmp     r9
.text:000000000040402E ; ---------------------------------------------------------------------------
.text:000000000040402E                 ud2
.text:0000000000404030 ; ---------------------------------------------------------------------------
.text:0000000000404030                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000404037                 movaps  xmm2, xmmword ptr [rsi-1Ah]
.text:000000000040403B                 sub     rdx, 40h ; '@'
.text:000000000040403F                 movaps  xmm3, xmmword ptr [rsi-2Ah]
.text:0000000000404043                 movaps  xmm4, xmmword ptr [rsi-3Ah]
.text:0000000000404047                 movaps  xmm5, xmmword ptr [rsi-4Ah]
.text:000000000040404B                 lea     rsi, [rsi-40h]
.text:000000000040404F                 palignr xmm1, xmm2, 0Ah
.text:0000000000404055                 palignr xmm2, xmm3, 0Ah
.text:000000000040405B                 palignr xmm3, xmm4, 0Ah
.text:0000000000404061                 palignr xmm4, xmm5, 0Ah
.text:0000000000404067                 movaps  xmmword ptr [rdi-10h], xmm1
.text:000000000040406B                 movaps  xmm1, xmm5
.text:000000000040406E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000404072                 lea     rdi, [rdi-40h]
.text:0000000000404076                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040407A                 jb      short loc_404084
.text:000000000040407C                 movaps  xmmword ptr [rdi], xmm4
.text:000000000040407F                 jmp     r9
.text:0000000000404082 ; ---------------------------------------------------------------------------
.text:0000000000404082                 ud2
.text:0000000000404084 ; ---------------------------------------------------------------------------
.text:0000000000404084
.text:0000000000404084 loc_404084:                             ; CODE XREF: __intel_ssse3_memmove+122A↑j
.text:0000000000404084                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000404087                 lea     rdx, [rdx+40h]
.text:000000000040408B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000404090                 lea     r11, jpt_402E80
.text:0000000000404097                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040409B                 add     rdx, r11
.text:000000000040409E                 jmp     rdx             ; switch jump
.text:00000000004040A0 ; ---------------------------------------------------------------------------
.text:00000000004040A0                 ud2
.text:00000000004040A0 ; ---------------------------------------------------------------------------
.text:00000000004040A2                 align 10h
.text:00000000004040B0
.text:00000000004040B0 loc_4040B0:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:00000000004040B0                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:00000000004040B0                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 11
.text:00000000004040B7                 cmp     rdx, rcx
.text:00000000004040BA                 movaps  xmm1, xmmword ptr [rsi-0Bh]
.text:00000000004040BE                 jb      short loc_4040C7
.text:00000000004040C0                 lea     r9, [r9-7]
.text:00000000004040C7
.text:00000000004040C7 loc_4040C7:                             ; CODE XREF: __intel_ssse3_memmove+126E↑j
.text:00000000004040C7                 lea     rdx, [rdx-40h]
.text:00000000004040CB                 jmp     r9
.text:00000000004040CE ; ---------------------------------------------------------------------------
.text:00000000004040CE                 ud2
.text:00000000004040D0 ; ---------------------------------------------------------------------------
.text:00000000004040D0                 prefetchnta byte ptr [rsi+1C0h]
.text:00000000004040D7                 sub     rdx, 40h ; '@'
.text:00000000004040DB                 movaps  xmm2, xmmword ptr [rsi+5]
.text:00000000004040DF                 movaps  xmm3, xmmword ptr [rsi+15h]
.text:00000000004040E3                 movaps  xmm4, xmmword ptr [rsi+25h]
.text:00000000004040E7                 movaps  xmm5, xmmword ptr [rsi+35h]
.text:00000000004040EB                 movdqa  xmm6, xmm5
.text:00000000004040EF                 palignr xmm5, xmm4, 0Bh
.text:00000000004040F5                 lea     rsi, [rsi+40h]
.text:00000000004040F9                 palignr xmm4, xmm3, 0Bh
.text:00000000004040FF                 palignr xmm3, xmm2, 0Bh
.text:0000000000404105                 lea     rdi, [rdi+40h]
.text:0000000000404109                 palignr xmm2, xmm1, 0Bh
.text:000000000040410F                 movdqa  xmm1, xmm6
.text:0000000000404113                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000404118                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040411C                 jb      short loc_40412B
.text:000000000040411E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000404122                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000404126                 jmp     r9
.text:0000000000404129 ; ---------------------------------------------------------------------------
.text:0000000000404129                 ud2
.text:000000000040412B ; ---------------------------------------------------------------------------
.text:000000000040412B
.text:000000000040412B loc_40412B:                             ; CODE XREF: __intel_ssse3_memmove+12CC↑j
.text:000000000040412B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:000000000040412F                 lea     rdx, [rdx+40h]
.text:0000000000404133                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000404137                 add     rdi, rdx
.text:000000000040413A                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040413F                 add     rsi, rdx
.text:0000000000404142                 lea     r11, jpt_402E80
.text:0000000000404149                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040414D                 add     rdx, r11
.text:0000000000404150                 jmp     rdx             ; switch jump
.text:0000000000404152 ; ---------------------------------------------------------------------------
.text:0000000000404152                 ud2
.text:0000000000404152 ; ---------------------------------------------------------------------------
.text:0000000000404154                 align 20h
.text:0000000000404160
.text:0000000000404160 loc_404160:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000404160                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000404160                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 11
.text:0000000000404167                 cmp     rdx, rcx
.text:000000000040416A                 movaps  xmm1, xmmword ptr [rsi-0Bh]
.text:000000000040416E                 jb      short loc_404177
.text:0000000000404170                 lea     r9, [r9-7]
.text:0000000000404177
.text:0000000000404177 loc_404177:                             ; CODE XREF: __intel_ssse3_memmove+131E↑j
.text:0000000000404177                 lea     rdx, [rdx-40h]
.text:000000000040417B                 jmp     r9
.text:000000000040417E ; ---------------------------------------------------------------------------
.text:000000000040417E                 ud2
.text:0000000000404180 ; ---------------------------------------------------------------------------
.text:0000000000404180                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000404187                 movaps  xmm2, xmmword ptr [rsi-1Bh]
.text:000000000040418B                 sub     rdx, 40h ; '@'
.text:000000000040418F                 movaps  xmm3, xmmword ptr [rsi-2Bh]
.text:0000000000404193                 movaps  xmm4, xmmword ptr [rsi-3Bh]
.text:0000000000404197                 movaps  xmm5, xmmword ptr [rsi-4Bh]
.text:000000000040419B                 lea     rsi, [rsi-40h]
.text:000000000040419F                 palignr xmm1, xmm2, 0Bh
.text:00000000004041A5                 palignr xmm2, xmm3, 0Bh
.text:00000000004041AB                 palignr xmm3, xmm4, 0Bh
.text:00000000004041B1                 palignr xmm4, xmm5, 0Bh
.text:00000000004041B7                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004041BB                 movaps  xmm1, xmm5
.text:00000000004041BE                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004041C2                 lea     rdi, [rdi-40h]
.text:00000000004041C6                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004041CA                 jb      short loc_4041D4
.text:00000000004041CC                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004041CF                 jmp     r9
.text:00000000004041D2 ; ---------------------------------------------------------------------------
.text:00000000004041D2                 ud2
.text:00000000004041D4 ; ---------------------------------------------------------------------------
.text:00000000004041D4
.text:00000000004041D4 loc_4041D4:                             ; CODE XREF: __intel_ssse3_memmove+137A↑j
.text:00000000004041D4                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004041D7                 lea     rdx, [rdx+40h]
.text:00000000004041DB                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004041E0                 lea     r11, jpt_402E80
.text:00000000004041E7                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:00000000004041EB                 add     rdx, r11
.text:00000000004041EE                 jmp     rdx             ; switch jump
.text:00000000004041F0 ; ---------------------------------------------------------------------------
.text:00000000004041F0                 ud2
.text:00000000004041F0 ; ---------------------------------------------------------------------------
.text:00000000004041F2                 align 20h
.text:0000000000404200
.text:0000000000404200 loc_404200:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000404200                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000404200                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 12
.text:0000000000404207                 cmp     rdx, rcx
.text:000000000040420A                 movaps  xmm1, xmmword ptr [rsi-0Ch]
.text:000000000040420E                 jb      short loc_404217
.text:0000000000404210                 lea     r9, [r9-7]
.text:0000000000404217
.text:0000000000404217 loc_404217:                             ; CODE XREF: __intel_ssse3_memmove+13BE↑j
.text:0000000000404217                 lea     rdx, [rdx-40h]
.text:000000000040421B                 jmp     r9
.text:000000000040421E ; ---------------------------------------------------------------------------
.text:000000000040421E                 ud2
.text:0000000000404220 ; ---------------------------------------------------------------------------
.text:0000000000404220                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000404227                 sub     rdx, 40h ; '@'
.text:000000000040422B                 movaps  xmm2, xmmword ptr [rsi+4]
.text:000000000040422F                 movaps  xmm3, xmmword ptr [rsi+14h]
.text:0000000000404233                 movaps  xmm4, xmmword ptr [rsi+24h]
.text:0000000000404237                 movaps  xmm5, xmmword ptr [rsi+34h]
.text:000000000040423B                 movdqa  xmm6, xmm5
.text:000000000040423F                 palignr xmm5, xmm4, 0Ch
.text:0000000000404245                 lea     rsi, [rsi+40h]
.text:0000000000404249                 palignr xmm4, xmm3, 0Ch
.text:000000000040424F                 palignr xmm3, xmm2, 0Ch
.text:0000000000404255                 lea     rdi, [rdi+40h]
.text:0000000000404259                 palignr xmm2, xmm1, 0Ch
.text:000000000040425F                 movdqa  xmm1, xmm6
.text:0000000000404263                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000404268                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040426C                 jb      short loc_40427B
.text:000000000040426E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000404272                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000404276                 jmp     r9
.text:0000000000404279 ; ---------------------------------------------------------------------------
.text:0000000000404279                 ud2
.text:000000000040427B ; ---------------------------------------------------------------------------
.text:000000000040427B
.text:000000000040427B loc_40427B:                             ; CODE XREF: __intel_ssse3_memmove+141C↑j
.text:000000000040427B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:000000000040427F                 lea     rdx, [rdx+40h]
.text:0000000000404283                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000404287                 add     rdi, rdx
.text:000000000040428A                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040428F                 add     rsi, rdx
.text:0000000000404292                 lea     r11, jpt_402E80
.text:0000000000404299                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040429D                 add     rdx, r11
.text:00000000004042A0                 jmp     rdx             ; switch jump
.text:00000000004042A2 ; ---------------------------------------------------------------------------
.text:00000000004042A2                 ud2
.text:00000000004042A2 ; ---------------------------------------------------------------------------
.text:00000000004042A4                 align 10h
.text:00000000004042B0
.text:00000000004042B0 loc_4042B0:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:00000000004042B0                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:00000000004042B0                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 12
.text:00000000004042B7                 cmp     rdx, rcx
.text:00000000004042BA                 movaps  xmm1, xmmword ptr [rsi-0Ch]
.text:00000000004042BE                 jb      short loc_4042C7
.text:00000000004042C0                 lea     r9, [r9-7]
.text:00000000004042C7
.text:00000000004042C7 loc_4042C7:                             ; CODE XREF: __intel_ssse3_memmove+146E↑j
.text:00000000004042C7                 lea     rdx, [rdx-40h]
.text:00000000004042CB                 jmp     r9
.text:00000000004042CE ; ---------------------------------------------------------------------------
.text:00000000004042CE                 ud2
.text:00000000004042D0 ; ---------------------------------------------------------------------------
.text:00000000004042D0                 prefetchnta byte ptr [rsi-1C0h]
.text:00000000004042D7                 movaps  xmm2, xmmword ptr [rsi-1Ch]
.text:00000000004042DB                 sub     rdx, 40h ; '@'
.text:00000000004042DF                 movaps  xmm3, xmmword ptr [rsi-2Ch]
.text:00000000004042E3                 movaps  xmm4, xmmword ptr [rsi-3Ch]
.text:00000000004042E7                 movaps  xmm5, xmmword ptr [rsi-4Ch]
.text:00000000004042EB                 lea     rsi, [rsi-40h]
.text:00000000004042EF                 palignr xmm1, xmm2, 0Ch
.text:00000000004042F5                 palignr xmm2, xmm3, 0Ch
.text:00000000004042FB                 palignr xmm3, xmm4, 0Ch
.text:0000000000404301                 palignr xmm4, xmm5, 0Ch
.text:0000000000404307                 movaps  xmmword ptr [rdi-10h], xmm1
.text:000000000040430B                 movaps  xmm1, xmm5
.text:000000000040430E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000404312                 lea     rdi, [rdi-40h]
.text:0000000000404316                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040431A                 jb      short loc_404324
.text:000000000040431C                 movaps  xmmword ptr [rdi], xmm4
.text:000000000040431F                 jmp     r9
.text:0000000000404322 ; ---------------------------------------------------------------------------
.text:0000000000404322                 ud2
.text:0000000000404324 ; ---------------------------------------------------------------------------
.text:0000000000404324
.text:0000000000404324 loc_404324:                             ; CODE XREF: __intel_ssse3_memmove+14CA↑j
.text:0000000000404324                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000404327                 lea     rdx, [rdx+40h]
.text:000000000040432B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000404330                 lea     r11, jpt_402E80
.text:0000000000404337                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040433B                 add     rdx, r11
.text:000000000040433E                 jmp     rdx             ; switch jump
.text:0000000000404340 ; ---------------------------------------------------------------------------
.text:0000000000404340                 ud2
.text:0000000000404340 ; ---------------------------------------------------------------------------
.text:0000000000404342                 align 10h
.text:0000000000404350
.text:0000000000404350 loc_404350:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:0000000000404350                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:0000000000404350                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 13
.text:0000000000404357                 cmp     rdx, rcx
.text:000000000040435A                 movaps  xmm1, xmmword ptr [rsi-0Dh]
.text:000000000040435E                 jb      short loc_404367
.text:0000000000404360                 lea     r9, [r9-7]
.text:0000000000404367
.text:0000000000404367 loc_404367:                             ; CODE XREF: __intel_ssse3_memmove+150E↑j
.text:0000000000404367                 lea     rdx, [rdx-40h]
.text:000000000040436B                 jmp     r9
.text:000000000040436E ; ---------------------------------------------------------------------------
.text:000000000040436E                 ud2
.text:0000000000404370 ; ---------------------------------------------------------------------------
.text:0000000000404370                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000404377                 sub     rdx, 40h ; '@'
.text:000000000040437B                 movaps  xmm2, xmmword ptr [rsi+3]
.text:000000000040437F                 movaps  xmm3, xmmword ptr [rsi+13h]
.text:0000000000404383                 movaps  xmm4, xmmword ptr [rsi+23h]
.text:0000000000404387                 movaps  xmm5, xmmword ptr [rsi+33h]
.text:000000000040438B                 movdqa  xmm6, xmm5
.text:000000000040438F                 palignr xmm5, xmm4, 0Dh
.text:0000000000404395                 lea     rsi, [rsi+40h]
.text:0000000000404399                 palignr xmm4, xmm3, 0Dh
.text:000000000040439F                 palignr xmm3, xmm2, 0Dh
.text:00000000004043A5                 lea     rdi, [rdi+40h]
.text:00000000004043A9                 palignr xmm2, xmm1, 0Dh
.text:00000000004043AF                 movdqa  xmm1, xmm6
.text:00000000004043B3                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:00000000004043B8                 movaps  xmmword ptr [rdi-30h], xmm3
.text:00000000004043BC                 jb      short loc_4043CB
.text:00000000004043BE                 movaps  xmmword ptr [rdi-20h], xmm4
.text:00000000004043C2                 movaps  xmmword ptr [rdi-10h], xmm5
.text:00000000004043C6                 jmp     r9
.text:00000000004043C9 ; ---------------------------------------------------------------------------
.text:00000000004043C9                 ud2
.text:00000000004043CB ; ---------------------------------------------------------------------------
.text:00000000004043CB
.text:00000000004043CB loc_4043CB:                             ; CODE XREF: __intel_ssse3_memmove+156C↑j
.text:00000000004043CB                 movaps  xmmword ptr [rdi-20h], xmm4
.text:00000000004043CF                 lea     rdx, [rdx+40h]
.text:00000000004043D3                 movaps  xmmword ptr [rdi-10h], xmm5
.text:00000000004043D7                 add     rdi, rdx
.text:00000000004043DA                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004043DF                 add     rsi, rdx
.text:00000000004043E2                 lea     r11, jpt_402E80
.text:00000000004043E9                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:00000000004043ED                 add     rdx, r11
.text:00000000004043F0                 jmp     rdx             ; switch jump
.text:00000000004043F2 ; ---------------------------------------------------------------------------
.text:00000000004043F2                 ud2
.text:00000000004043F2 ; ---------------------------------------------------------------------------
.text:00000000004043F4                 align 20h
.text:0000000000404400
.text:0000000000404400 loc_404400:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000404400                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000404400                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 13
.text:0000000000404407                 cmp     rdx, rcx
.text:000000000040440A                 movaps  xmm1, xmmword ptr [rsi-0Dh]
.text:000000000040440E                 jb      short loc_404417
.text:0000000000404410                 lea     r9, [r9-7]
.text:0000000000404417
.text:0000000000404417 loc_404417:                             ; CODE XREF: __intel_ssse3_memmove+15BE↑j
.text:0000000000404417                 lea     rdx, [rdx-40h]
.text:000000000040441B                 jmp     r9
.text:000000000040441E ; ---------------------------------------------------------------------------
.text:000000000040441E                 ud2
.text:0000000000404420 ; ---------------------------------------------------------------------------
.text:0000000000404420                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000404427                 movaps  xmm2, xmmword ptr [rsi-1Dh]
.text:000000000040442B                 sub     rdx, 40h ; '@'
.text:000000000040442F                 movaps  xmm3, xmmword ptr [rsi-2Dh]
.text:0000000000404433                 movaps  xmm4, xmmword ptr [rsi-3Dh]
.text:0000000000404437                 movaps  xmm5, xmmword ptr [rsi-4Dh]
.text:000000000040443B                 lea     rsi, [rsi-40h]
.text:000000000040443F                 palignr xmm1, xmm2, 0Dh
.text:0000000000404445                 palignr xmm2, xmm3, 0Dh
.text:000000000040444B                 palignr xmm3, xmm4, 0Dh
.text:0000000000404451                 palignr xmm4, xmm5, 0Dh
.text:0000000000404457                 movaps  xmmword ptr [rdi-10h], xmm1
.text:000000000040445B                 movaps  xmm1, xmm5
.text:000000000040445E                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000404462                 lea     rdi, [rdi-40h]
.text:0000000000404466                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040446A                 jb      short loc_404474
.text:000000000040446C                 movaps  xmmword ptr [rdi], xmm4
.text:000000000040446F                 jmp     r9
.text:0000000000404472 ; ---------------------------------------------------------------------------
.text:0000000000404472                 ud2
.text:0000000000404474 ; ---------------------------------------------------------------------------
.text:0000000000404474
.text:0000000000404474 loc_404474:                             ; CODE XREF: __intel_ssse3_memmove+161A↑j
.text:0000000000404474                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000404477                 lea     rdx, [rdx+40h]
.text:000000000040447B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000404480                 lea     r11, jpt_402E80
.text:0000000000404487                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040448B                 add     rdx, r11
.text:000000000040448E                 jmp     rdx             ; switch jump
.text:0000000000404490 ; ---------------------------------------------------------------------------
.text:0000000000404490                 ud2
.text:0000000000404490 ; ---------------------------------------------------------------------------
.text:0000000000404492                 align 20h
.text:00000000004044A0
.text:00000000004044A0 loc_4044A0:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:00000000004044A0                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:00000000004044A0                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 14
.text:00000000004044A7                 cmp     rdx, rcx
.text:00000000004044AA                 movaps  xmm1, xmmword ptr [rsi-0Eh]
.text:00000000004044AE                 jb      short loc_4044B7
.text:00000000004044B0                 lea     r9, [r9-7]
.text:00000000004044B7
.text:00000000004044B7 loc_4044B7:                             ; CODE XREF: __intel_ssse3_memmove+165E↑j
.text:00000000004044B7                 lea     rdx, [rdx-40h]
.text:00000000004044BB                 jmp     r9
.text:00000000004044BE ; ---------------------------------------------------------------------------
.text:00000000004044BE                 ud2
.text:00000000004044C0 ; ---------------------------------------------------------------------------
.text:00000000004044C0                 prefetchnta byte ptr [rsi+1C0h]
.text:00000000004044C7                 sub     rdx, 40h ; '@'
.text:00000000004044CB                 movaps  xmm2, xmmword ptr [rsi+2]
.text:00000000004044CF                 movaps  xmm3, xmmword ptr [rsi+12h]
.text:00000000004044D3                 movaps  xmm4, xmmword ptr [rsi+22h]
.text:00000000004044D7                 movaps  xmm5, xmmword ptr [rsi+32h]
.text:00000000004044DB                 movdqa  xmm6, xmm5
.text:00000000004044DF                 palignr xmm5, xmm4, 0Eh
.text:00000000004044E5                 lea     rsi, [rsi+40h]
.text:00000000004044E9                 palignr xmm4, xmm3, 0Eh
.text:00000000004044EF                 palignr xmm3, xmm2, 0Eh
.text:00000000004044F5                 lea     rdi, [rdi+40h]
.text:00000000004044F9                 palignr xmm2, xmm1, 0Eh
.text:00000000004044FF                 movdqa  xmm1, xmm6
.text:0000000000404503                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000404508                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040450C                 jb      short loc_40451B
.text:000000000040450E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000404512                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000404516                 jmp     r9
.text:0000000000404519 ; ---------------------------------------------------------------------------
.text:0000000000404519                 ud2
.text:000000000040451B ; ---------------------------------------------------------------------------
.text:000000000040451B
.text:000000000040451B loc_40451B:                             ; CODE XREF: __intel_ssse3_memmove+16BC↑j
.text:000000000040451B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:000000000040451F                 lea     rdx, [rdx+40h]
.text:0000000000404523                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000404527                 add     rdi, rdx
.text:000000000040452A                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040452F                 add     rsi, rdx
.text:0000000000404532                 lea     r11, jpt_402E80
.text:0000000000404539                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040453D                 add     rdx, r11
.text:0000000000404540                 jmp     rdx             ; switch jump
.text:0000000000404542 ; ---------------------------------------------------------------------------
.text:0000000000404542                 ud2
.text:0000000000404542 ; ---------------------------------------------------------------------------
.text:0000000000404544                 align 10h
.text:0000000000404550
.text:0000000000404550 loc_404550:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:0000000000404550                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:0000000000404550                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 14
.text:0000000000404557                 cmp     rdx, rcx
.text:000000000040455A                 movaps  xmm1, xmmword ptr [rsi-0Eh]
.text:000000000040455E                 jb      short loc_404567
.text:0000000000404560                 lea     r9, [r9-7]
.text:0000000000404567
.text:0000000000404567 loc_404567:                             ; CODE XREF: __intel_ssse3_memmove+170E↑j
.text:0000000000404567                 lea     rdx, [rdx-40h]
.text:000000000040456B                 jmp     r9
.text:000000000040456E ; ---------------------------------------------------------------------------
.text:000000000040456E                 ud2
.text:0000000000404570 ; ---------------------------------------------------------------------------
.text:0000000000404570                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000404577                 movaps  xmm2, xmmword ptr [rsi-1Eh]
.text:000000000040457B                 sub     rdx, 40h ; '@'
.text:000000000040457F                 movaps  xmm3, xmmword ptr [rsi-2Eh]
.text:0000000000404583                 movaps  xmm4, xmmword ptr [rsi-3Eh]
.text:0000000000404587                 movaps  xmm5, xmmword ptr [rsi-4Eh]
.text:000000000040458B                 lea     rsi, [rsi-40h]
.text:000000000040458F                 palignr xmm1, xmm2, 0Eh
.text:0000000000404595                 palignr xmm2, xmm3, 0Eh
.text:000000000040459B                 palignr xmm3, xmm4, 0Eh
.text:00000000004045A1                 palignr xmm4, xmm5, 0Eh
.text:00000000004045A7                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004045AB                 movaps  xmm1, xmm5
.text:00000000004045AE                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004045B2                 lea     rdi, [rdi-40h]
.text:00000000004045B6                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004045BA                 jb      short loc_4045C4
.text:00000000004045BC                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004045BF                 jmp     r9
.text:00000000004045C2 ; ---------------------------------------------------------------------------
.text:00000000004045C2                 ud2
.text:00000000004045C4 ; ---------------------------------------------------------------------------
.text:00000000004045C4
.text:00000000004045C4 loc_4045C4:                             ; CODE XREF: __intel_ssse3_memmove+176A↑j
.text:00000000004045C4                 movaps  xmmword ptr [rdi], xmm4
.text:00000000004045C7                 lea     rdx, [rdx+40h]
.text:00000000004045CB                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004045D0                 lea     r11, jpt_402E80
.text:00000000004045D7                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:00000000004045DB                 add     rdx, r11
.text:00000000004045DE                 jmp     rdx             ; switch jump
.text:00000000004045E0 ; ---------------------------------------------------------------------------
.text:00000000004045E0                 ud2
.text:00000000004045E0 ; ---------------------------------------------------------------------------
.text:00000000004045E2                 align 10h
.text:00000000004045F0
.text:00000000004045F0 loc_4045F0:                             ; CODE XREF: __intel_ssse3_memmove+87↑j
.text:00000000004045F0                                         ; DATA XREF: .rodata:jpt_402ED7↓o
.text:00000000004045F0                 lea     r9, [r9+27h]    ; jumptable 0000000000402ED7 case 15
.text:00000000004045F7                 cmp     rdx, rcx
.text:00000000004045FA                 movaps  xmm1, xmmword ptr [rsi-0Fh]
.text:00000000004045FE                 jb      short loc_404607
.text:0000000000404600                 lea     r9, [r9-7]
.text:0000000000404607
.text:0000000000404607 loc_404607:                             ; CODE XREF: __intel_ssse3_memmove+17AE↑j
.text:0000000000404607                 lea     rdx, [rdx-40h]
.text:000000000040460B                 jmp     r9
.text:000000000040460E ; ---------------------------------------------------------------------------
.text:000000000040460E                 ud2
.text:0000000000404610 ; ---------------------------------------------------------------------------
.text:0000000000404610                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000404617                 sub     rdx, 40h ; '@'
.text:000000000040461B                 movaps  xmm2, xmmword ptr [rsi+1]
.text:000000000040461F                 movaps  xmm3, xmmword ptr [rsi+11h]
.text:0000000000404623                 movaps  xmm4, xmmword ptr [rsi+21h]
.text:0000000000404627                 movaps  xmm5, xmmword ptr [rsi+31h]
.text:000000000040462B                 movdqa  xmm6, xmm5
.text:000000000040462F                 palignr xmm5, xmm4, 0Fh
.text:0000000000404635                 lea     rsi, [rsi+40h]
.text:0000000000404639                 palignr xmm4, xmm3, 0Fh
.text:000000000040463F                 palignr xmm3, xmm2, 0Fh
.text:0000000000404645                 lea     rdi, [rdi+40h]
.text:0000000000404649                 palignr xmm2, xmm1, 0Fh
.text:000000000040464F                 movdqa  xmm1, xmm6
.text:0000000000404653                 movdqa  xmmword ptr [rdi-40h], xmm2
.text:0000000000404658                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040465C                 jb      short loc_40466B
.text:000000000040465E                 movaps  xmmword ptr [rdi-20h], xmm4
.text:0000000000404662                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000404666                 jmp     r9
.text:0000000000404669 ; ---------------------------------------------------------------------------
.text:0000000000404669                 ud2
.text:000000000040466B ; ---------------------------------------------------------------------------
.text:000000000040466B
.text:000000000040466B loc_40466B:                             ; CODE XREF: __intel_ssse3_memmove+180C↑j
.text:000000000040466B                 movaps  xmmword ptr [rdi-20h], xmm4
.text:000000000040466F                 lea     rdx, [rdx+40h]
.text:0000000000404673                 movaps  xmmword ptr [rdi-10h], xmm5
.text:0000000000404677                 add     rdi, rdx
.text:000000000040467A                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040467F                 add     rsi, rdx
.text:0000000000404682                 lea     r11, jpt_402E80
.text:0000000000404689                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040468D                 add     rdx, r11
.text:0000000000404690                 jmp     rdx             ; switch jump
.text:0000000000404692 ; ---------------------------------------------------------------------------
.text:0000000000404692                 ud2
.text:0000000000404692 ; ---------------------------------------------------------------------------
.text:0000000000404694                 align 20h
.text:00000000004046A0
.text:00000000004046A0 loc_4046A0:                             ; CODE XREF: __intel_ssse3_memmove+E1↑j
.text:00000000004046A0                                         ; DATA XREF: .rodata:jpt_402F31↓o
.text:00000000004046A0                 lea     r9, [r9+27h]    ; jumptable 0000000000402F31 case 15
.text:00000000004046A7                 cmp     rdx, rcx
.text:00000000004046AA                 movaps  xmm1, xmmword ptr [rsi-0Fh]
.text:00000000004046AE                 jb      short loc_4046B7
.text:00000000004046B0                 lea     r9, [r9-7]
.text:00000000004046B7
.text:00000000004046B7 loc_4046B7:                             ; CODE XREF: __intel_ssse3_memmove+185E↑j
.text:00000000004046B7                 lea     rdx, [rdx-40h]
.text:00000000004046BB                 jmp     r9
.text:00000000004046BE ; ---------------------------------------------------------------------------
.text:00000000004046BE                 ud2
.text:00000000004046C0 ; ---------------------------------------------------------------------------
.text:00000000004046C0                 prefetchnta byte ptr [rsi-1C0h]
.text:00000000004046C7                 movaps  xmm2, xmmword ptr [rsi-1Fh]
.text:00000000004046CB                 sub     rdx, 40h ; '@'
.text:00000000004046CF                 movaps  xmm3, xmmword ptr [rsi-2Fh]
.text:00000000004046D3                 movaps  xmm4, xmmword ptr [rsi-3Fh]
.text:00000000004046D7                 movaps  xmm5, xmmword ptr [rsi-4Fh]
.text:00000000004046DB                 lea     rsi, [rsi-40h]
.text:00000000004046DF                 palignr xmm1, xmm2, 0Fh
.text:00000000004046E5                 palignr xmm2, xmm3, 0Fh
.text:00000000004046EB                 palignr xmm3, xmm4, 0Fh
.text:00000000004046F1                 palignr xmm4, xmm5, 0Fh
.text:00000000004046F7                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004046FB                 movaps  xmm1, xmm5
.text:00000000004046FE                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000404702                 lea     rdi, [rdi-40h]
.text:0000000000404706                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040470A                 jb      short loc_404714
.text:000000000040470C                 movaps  xmmword ptr [rdi], xmm4
.text:000000000040470F                 jmp     r9
.text:0000000000404712 ; ---------------------------------------------------------------------------
.text:0000000000404712                 ud2
.text:0000000000404714 ; ---------------------------------------------------------------------------
.text:0000000000404714
.text:0000000000404714 loc_404714:                             ; CODE XREF: __intel_ssse3_memmove+18BA↑j
.text:0000000000404714                 movaps  xmmword ptr [rdi], xmm4
.text:0000000000404717                 lea     rdx, [rdx+40h]
.text:000000000040471B                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000404720                 lea     r11, jpt_402E80
.text:0000000000404727                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040472B                 add     rdx, r11
.text:000000000040472E                 jmp     rdx             ; switch jump
.text:0000000000404730 ; ---------------------------------------------------------------------------
.text:0000000000404730                 ud2
.text:0000000000404730 ; ---------------------------------------------------------------------------
.text:0000000000404732                 align 20h
.text:0000000000404740
.text:0000000000404740 loc_404740:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404740                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404740                 movdqu  xmm0, xmmword ptr [rsi-48h] ; jumptable 0000000000402E80 case 72
.text:0000000000404740                                         ; jumptable 000000000040306D case 72
.text:0000000000404740                                         ; jumptable 0000000000403295 case 72
.text:0000000000404740                                         ; jumptable 000000000040574F case 72
.text:0000000000404740                                         ; jumptable 000000000040581A case 72
.text:0000000000404740                                         ; jumptable 0000000000405905 case 72
.text:0000000000404740                                         ; jumptable 00000000004059C2 case 72
.text:0000000000404740                                         ; jumptable 0000000000403430 case 72
.text:0000000000404740                                         ; jumptable 00000000004034CE case 72
.text:0000000000404740                                         ; jumptable 0000000000403580 case 72
.text:0000000000404740                                         ; jumptable 000000000040361E case 72
.text:0000000000404740                                         ; jumptable 00000000004036D0 case 72
.text:0000000000404740                                         ; jumptable 000000000040376E case 72
.text:0000000000404740                                         ; jumptable 0000000000403820 case 72
.text:0000000000404740                                         ; jumptable 00000000004038BE case 72
.text:0000000000404740                                         ; jumptable 0000000000403970 case 72
.text:0000000000404740                                         ; jumptable 0000000000403A0E case 72
.text:0000000000404740                                         ; jumptable 0000000000403AC0 case 72
.text:0000000000404740                                         ; jumptable 0000000000403B5E case 72
.text:0000000000404740                                         ; jumptable 0000000000403C10 case 72
.text:0000000000404740                                         ; jumptable 0000000000403CAE case 72
.text:0000000000404740                                         ; jumptable 0000000000403D65 case 72
.text:0000000000404740                                         ; jumptable 0000000000403DFE case 72
.text:0000000000404740                                         ; jumptable 0000000000403EB0 case 72
.text:0000000000404740                                         ; jumptable 0000000000403F4E case 72
.text:0000000000404740                                         ; jumptable 0000000000404000 case 72
.text:0000000000404740                                         ; jumptable 000000000040409E case 72
.text:0000000000404740                                         ; jumptable 0000000000404150 case 72
.text:0000000000404740                                         ; jumptable 00000000004041EE case 72
.text:0000000000404740                                         ; jumptable
.text:0000000000404745                 movdqu  xmm1, xmmword ptr [rsi-38h]
.text:000000000040474A                 mov     r8, [rsi-28h]
.text:000000000040474E                 mov     r9, [rsi-20h]
.text:0000000000404752                 mov     r10, [rsi-18h]
.text:0000000000404756                 mov     r11, [rsi-10h]
.text:000000000040475A                 mov     rcx, [rsi-8]
.text:000000000040475E                 movdqu  xmmword ptr [rdi-48h], xmm0
.text:0000000000404763                 movdqu  xmmword ptr [rdi-38h], xmm1
.text:0000000000404768                 mov     [rdi-28h], r8
.text:000000000040476C                 mov     [rdi-20h], r9
.text:0000000000404770                 mov     [rdi-18h], r10
.text:0000000000404774                 mov     [rdi-10h], r11
.text:0000000000404778                 mov     [rdi-8], rcx
.text:000000000040477C                 retn
.text:000000000040477C ; ---------------------------------------------------------------------------
.text:000000000040477D                 align 20h
.text:0000000000404780
.text:0000000000404780 loc_404780:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404780                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404780                 movdqu  xmm0, xmmword ptr [rsi-40h] ; jumptable 0000000000402E80 case 64
.text:0000000000404780                                         ; jumptable 000000000040306D case 64
.text:0000000000404780                                         ; jumptable 0000000000403295 case 64
.text:0000000000404780                                         ; jumptable 000000000040574F case 64
.text:0000000000404780                                         ; jumptable 000000000040581A case 64
.text:0000000000404780                                         ; jumptable 0000000000405905 case 64
.text:0000000000404780                                         ; jumptable 00000000004059C2 case 64
.text:0000000000404780                                         ; jumptable 0000000000403430 case 64
.text:0000000000404780                                         ; jumptable 00000000004034CE case 64
.text:0000000000404780                                         ; jumptable 0000000000403580 case 64
.text:0000000000404780                                         ; jumptable 000000000040361E case 64
.text:0000000000404780                                         ; jumptable 00000000004036D0 case 64
.text:0000000000404780                                         ; jumptable 000000000040376E case 64
.text:0000000000404780                                         ; jumptable 0000000000403820 case 64
.text:0000000000404780                                         ; jumptable 00000000004038BE case 64
.text:0000000000404780                                         ; jumptable 0000000000403970 case 64
.text:0000000000404780                                         ; jumptable 0000000000403A0E case 64
.text:0000000000404780                                         ; jumptable 0000000000403AC0 case 64
.text:0000000000404780                                         ; jumptable 0000000000403B5E case 64
.text:0000000000404780                                         ; jumptable 0000000000403C10 case 64
.text:0000000000404780                                         ; jumptable 0000000000403CAE case 64
.text:0000000000404780                                         ; jumptable 0000000000403D65 case 64
.text:0000000000404780                                         ; jumptable 0000000000403DFE case 64
.text:0000000000404780                                         ; jumptable 0000000000403EB0 case 64
.text:0000000000404780                                         ; jumptable 0000000000403F4E case 64
.text:0000000000404780                                         ; jumptable 0000000000404000 case 64
.text:0000000000404780                                         ; jumptable 000000000040409E case 64
.text:0000000000404780                                         ; jumptable 0000000000404150 case 64
.text:0000000000404780                                         ; jumptable 00000000004041EE case 64
.text:0000000000404780                                         ; jumptable
.text:0000000000404785                 mov     rcx, [rsi-30h]
.text:0000000000404789                 mov     r8, [rsi-28h]
.text:000000000040478D                 mov     r9, [rsi-20h]
.text:0000000000404791                 mov     r10, [rsi-18h]
.text:0000000000404795                 mov     r11, [rsi-10h]
.text:0000000000404799                 mov     rdx, [rsi-8]
.text:000000000040479D                 movdqu  xmmword ptr [rdi-40h], xmm0
.text:00000000004047A2                 mov     [rdi-30h], rcx
.text:00000000004047A6                 mov     [rdi-28h], r8
.text:00000000004047AA                 mov     [rdi-20h], r9
.text:00000000004047AE                 mov     [rdi-18h], r10
.text:00000000004047B2                 mov     [rdi-10h], r11
.text:00000000004047B6                 mov     [rdi-8], rdx
.text:00000000004047BA                 retn
.text:00000000004047BA ; ---------------------------------------------------------------------------
.text:00000000004047BB                 align 20h
.text:00000000004047C0
.text:00000000004047C0 loc_4047C0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004047C0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004047C0                 movdqu  xmm0, xmmword ptr [rsi-38h] ; jumptable 0000000000402E80 case 56
.text:00000000004047C0                                         ; jumptable 0000000000402FA6 case 72
.text:00000000004047C0                                         ; jumptable 000000000040306D case 56
.text:00000000004047C0                                         ; jumptable 00000000004031D4 case 72
.text:00000000004047C0                                         ; jumptable 0000000000403295 case 56
.text:00000000004047C0                                         ; jumptable 000000000040574F case 56
.text:00000000004047C0                                         ; jumptable 000000000040581A case 56
.text:00000000004047C0                                         ; jumptable 0000000000405905 case 56
.text:00000000004047C0                                         ; jumptable 00000000004059C2 case 56
.text:00000000004047C0                                         ; jumptable 0000000000403430 case 56
.text:00000000004047C0                                         ; jumptable 00000000004034CE case 56
.text:00000000004047C0                                         ; jumptable 0000000000403580 case 56
.text:00000000004047C0                                         ; jumptable 000000000040361E case 56
.text:00000000004047C0                                         ; jumptable 00000000004036D0 case 56
.text:00000000004047C0                                         ; jumptable 000000000040376E case 56
.text:00000000004047C0                                         ; jumptable 0000000000403820 case 56
.text:00000000004047C0                                         ; jumptable 00000000004038BE case 56
.text:00000000004047C0                                         ; jumptable 0000000000403970 case 56
.text:00000000004047C0                                         ; jumptable 0000000000403A0E case 56
.text:00000000004047C0                                         ; jumptable 0000000000403AC0 case 56
.text:00000000004047C0                                         ; jumptable 0000000000403B5E case 56
.text:00000000004047C0                                         ; jumptable 0000000000403C10 case 56
.text:00000000004047C0                                         ; jumptable 0000000000403CAE case 56
.text:00000000004047C0                                         ; jumptable 0000000000403D65 case 56
.text:00000000004047C0                                         ; jumptable 0000000000403DFE case 56
.text:00000000004047C0                                         ; jumptable 0000000000403EB0 case 56
.text:00000000004047C0                                         ; jumptable 0000000000403F4E case 56
.text:00000000004047C0                                         ; jumptable 0000000000404000 case 56
.text:00000000004047C0                                         ; jumptable 000000000040409E case 56
.text:00000000004047C0                                         ; jumptable
.text:00000000004047C5                 mov     r8, [rsi-28h]
.text:00000000004047C9                 mov     r9, [rsi-20h]
.text:00000000004047CD                 mov     r10, [rsi-18h]
.text:00000000004047D1                 mov     r11, [rsi-10h]
.text:00000000004047D5                 mov     rcx, [rsi-8]
.text:00000000004047D9                 movdqu  xmmword ptr [rdi-38h], xmm0
.text:00000000004047DE                 mov     [rdi-28h], r8
.text:00000000004047E2                 mov     [rdi-20h], r9
.text:00000000004047E6                 mov     [rdi-18h], r10
.text:00000000004047EA                 mov     [rdi-10h], r11
.text:00000000004047EE                 mov     [rdi-8], rcx
.text:00000000004047F2                 retn
.text:00000000004047F2 ; ---------------------------------------------------------------------------
.text:00000000004047F3                 align 20h
.text:0000000000404800
.text:0000000000404800 loc_404800:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404800                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404800                 mov     rcx, [rsi-30h]  ; jumptable 0000000000402E80 case 48
.text:0000000000404800                                         ; jumptable 0000000000402FA6 case 64
.text:0000000000404800                                         ; jumptable 000000000040306D case 48
.text:0000000000404800                                         ; jumptable 00000000004031D4 case 64
.text:0000000000404800                                         ; jumptable 0000000000403295 case 48
.text:0000000000404800                                         ; jumptable 000000000040574F case 48
.text:0000000000404800                                         ; jumptable 000000000040581A case 48
.text:0000000000404800                                         ; jumptable 0000000000405905 case 48
.text:0000000000404800                                         ; jumptable 00000000004059C2 case 48
.text:0000000000404800                                         ; jumptable 0000000000403430 case 48
.text:0000000000404800                                         ; jumptable 00000000004034CE case 48
.text:0000000000404800                                         ; jumptable 0000000000403580 case 48
.text:0000000000404800                                         ; jumptable 000000000040361E case 48
.text:0000000000404800                                         ; jumptable 00000000004036D0 case 48
.text:0000000000404800                                         ; jumptable 000000000040376E case 48
.text:0000000000404800                                         ; jumptable 0000000000403820 case 48
.text:0000000000404800                                         ; jumptable 00000000004038BE case 48
.text:0000000000404800                                         ; jumptable 0000000000403970 case 48
.text:0000000000404800                                         ; jumptable 0000000000403A0E case 48
.text:0000000000404800                                         ; jumptable 0000000000403AC0 case 48
.text:0000000000404800                                         ; jumptable 0000000000403B5E case 48
.text:0000000000404800                                         ; jumptable 0000000000403C10 case 48
.text:0000000000404800                                         ; jumptable 0000000000403CAE case 48
.text:0000000000404800                                         ; jumptable 0000000000403D65 case 48
.text:0000000000404800                                         ; jumptable 0000000000403DFE case 48
.text:0000000000404800                                         ; jumptable 0000000000403EB0 case 48
.text:0000000000404800                                         ; jumptable 0000000000403F4E case 48
.text:0000000000404800                                         ; jumptable 0000000000404000 case 48
.text:0000000000404800                                         ; jumptable 000000000040409E case 48
.text:0000000000404800                                         ; jumptable
.text:0000000000404804                 mov     r8, [rsi-28h]
.text:0000000000404808                 mov     r9, [rsi-20h]
.text:000000000040480C                 mov     r10, [rsi-18h]
.text:0000000000404810                 mov     r11, [rsi-10h]
.text:0000000000404814                 mov     rdx, [rsi-8]
.text:0000000000404818                 mov     [rdi-30h], rcx
.text:000000000040481C                 mov     [rdi-28h], r8
.text:0000000000404820                 mov     [rdi-20h], r9
.text:0000000000404824                 mov     [rdi-18h], r10
.text:0000000000404828                 mov     [rdi-10h], r11
.text:000000000040482C                 mov     [rdi-8], rdx
.text:0000000000404830                 retn
.text:0000000000404830 ; ---------------------------------------------------------------------------
.text:0000000000404831                 align 20h
.text:0000000000404840
.text:0000000000404840 loc_404840:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404840                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404840                 mov     r8, [rsi-28h]   ; jumptable 0000000000402E80 case 40
.text:0000000000404840                                         ; jumptable 0000000000402FA6 case 56
.text:0000000000404840                                         ; jumptable 000000000040306D case 40
.text:0000000000404840                                         ; jumptable 00000000004031D4 case 56
.text:0000000000404840                                         ; jumptable 0000000000403295 case 40
.text:0000000000404840                                         ; jumptable 000000000040574F case 40
.text:0000000000404840                                         ; jumptable 000000000040581A case 40
.text:0000000000404840                                         ; jumptable 0000000000405905 case 40
.text:0000000000404840                                         ; jumptable 00000000004059C2 case 40
.text:0000000000404840                                         ; jumptable 0000000000403430 case 40
.text:0000000000404840                                         ; jumptable 00000000004034CE case 40
.text:0000000000404840                                         ; jumptable 0000000000403580 case 40
.text:0000000000404840                                         ; jumptable 000000000040361E case 40
.text:0000000000404840                                         ; jumptable 00000000004036D0 case 40
.text:0000000000404840                                         ; jumptable 000000000040376E case 40
.text:0000000000404840                                         ; jumptable 0000000000403820 case 40
.text:0000000000404840                                         ; jumptable 00000000004038BE case 40
.text:0000000000404840                                         ; jumptable 0000000000403970 case 40
.text:0000000000404840                                         ; jumptable 0000000000403A0E case 40
.text:0000000000404840                                         ; jumptable 0000000000403AC0 case 40
.text:0000000000404840                                         ; jumptable 0000000000403B5E case 40
.text:0000000000404840                                         ; jumptable 0000000000403C10 case 40
.text:0000000000404840                                         ; jumptable 0000000000403CAE case 40
.text:0000000000404840                                         ; jumptable 0000000000403D65 case 40
.text:0000000000404840                                         ; jumptable 0000000000403DFE case 40
.text:0000000000404840                                         ; jumptable 0000000000403EB0 case 40
.text:0000000000404840                                         ; jumptable 0000000000403F4E case 40
.text:0000000000404840                                         ; jumptable 0000000000404000 case 40
.text:0000000000404840                                         ; jumptable 000000000040409E case 40
.text:0000000000404840                                         ; jumptable
.text:0000000000404844                 mov     r9, [rsi-20h]
.text:0000000000404848                 mov     r10, [rsi-18h]
.text:000000000040484C                 mov     r11, [rsi-10h]
.text:0000000000404850                 mov     rdx, [rsi-8]
.text:0000000000404854                 mov     [rdi-28h], r8
.text:0000000000404858                 mov     [rdi-20h], r9
.text:000000000040485C                 mov     [rdi-18h], r10
.text:0000000000404860                 mov     [rdi-10h], r11
.text:0000000000404864                 mov     [rdi-8], rdx
.text:0000000000404868                 retn
.text:0000000000404868 ; ---------------------------------------------------------------------------
.text:0000000000404869                 align 10h
.text:0000000000404870
.text:0000000000404870 loc_404870:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404870                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404870                 mov     r9, [rsi-20h]   ; jumptable 0000000000402E80 case 32
.text:0000000000404870                                         ; jumptable 0000000000402FA6 case 48
.text:0000000000404870                                         ; jumptable 000000000040306D case 32
.text:0000000000404870                                         ; jumptable 00000000004031D4 case 48
.text:0000000000404870                                         ; jumptable 0000000000403295 case 32
.text:0000000000404870                                         ; jumptable 000000000040574F case 32
.text:0000000000404870                                         ; jumptable 000000000040581A case 32
.text:0000000000404870                                         ; jumptable 0000000000405905 case 32
.text:0000000000404870                                         ; jumptable 00000000004059C2 case 32
.text:0000000000404870                                         ; jumptable 0000000000403430 case 32
.text:0000000000404870                                         ; jumptable 00000000004034CE case 32
.text:0000000000404870                                         ; jumptable 0000000000403580 case 32
.text:0000000000404870                                         ; jumptable 000000000040361E case 32
.text:0000000000404870                                         ; jumptable 00000000004036D0 case 32
.text:0000000000404870                                         ; jumptable 000000000040376E case 32
.text:0000000000404870                                         ; jumptable 0000000000403820 case 32
.text:0000000000404870                                         ; jumptable 00000000004038BE case 32
.text:0000000000404870                                         ; jumptable 0000000000403970 case 32
.text:0000000000404870                                         ; jumptable 0000000000403A0E case 32
.text:0000000000404870                                         ; jumptable 0000000000403AC0 case 32
.text:0000000000404870                                         ; jumptable 0000000000403B5E case 32
.text:0000000000404870                                         ; jumptable 0000000000403C10 case 32
.text:0000000000404870                                         ; jumptable 0000000000403CAE case 32
.text:0000000000404870                                         ; jumptable 0000000000403D65 case 32
.text:0000000000404870                                         ; jumptable 0000000000403DFE case 32
.text:0000000000404870                                         ; jumptable 0000000000403EB0 case 32
.text:0000000000404870                                         ; jumptable 0000000000403F4E case 32
.text:0000000000404870                                         ; jumptable 0000000000404000 case 32
.text:0000000000404870                                         ; jumptable 000000000040409E case 32
.text:0000000000404870                                         ; jumptable
.text:0000000000404874                 mov     r10, [rsi-18h]
.text:0000000000404878                 mov     r11, [rsi-10h]
.text:000000000040487C                 mov     rdx, [rsi-8]
.text:0000000000404880                 mov     [rdi-20h], r9
.text:0000000000404884                 mov     [rdi-18h], r10
.text:0000000000404888                 mov     [rdi-10h], r11
.text:000000000040488C                 mov     [rdi-8], rdx
.text:0000000000404890                 retn
.text:0000000000404890 ; ---------------------------------------------------------------------------
.text:0000000000404891                 align 20h
.text:00000000004048A0
.text:00000000004048A0 loc_4048A0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004048A0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004048A0                 mov     r10, [rsi-18h]  ; jumptable 0000000000402E80 case 24
.text:00000000004048A0                                         ; jumptable 0000000000402FA6 case 40
.text:00000000004048A0                                         ; jumptable 000000000040306D case 24
.text:00000000004048A0                                         ; jumptable 000000000040316A case 24
.text:00000000004048A0                                         ; jumptable 00000000004031D4 case 40
.text:00000000004048A0                                         ; jumptable 0000000000403295 case 24
.text:00000000004048A0                                         ; jumptable 0000000000403384 case 24
.text:00000000004048A0                                         ; jumptable 000000000040574F case 24
.text:00000000004048A0                                         ; jumptable 000000000040581A case 24
.text:00000000004048A0                                         ; jumptable 0000000000405905 case 24
.text:00000000004048A0                                         ; jumptable 00000000004059C2 case 24
.text:00000000004048A0                                         ; jumptable 0000000000403430 case 24
.text:00000000004048A0                                         ; jumptable 00000000004034CE case 24
.text:00000000004048A0                                         ; jumptable 0000000000403580 case 24
.text:00000000004048A0                                         ; jumptable 000000000040361E case 24
.text:00000000004048A0                                         ; jumptable 00000000004036D0 case 24
.text:00000000004048A0                                         ; jumptable 000000000040376E case 24
.text:00000000004048A0                                         ; jumptable 0000000000403820 case 24
.text:00000000004048A0                                         ; jumptable 00000000004038BE case 24
.text:00000000004048A0                                         ; jumptable 0000000000403970 case 24
.text:00000000004048A0                                         ; jumptable 0000000000403A0E case 24
.text:00000000004048A0                                         ; jumptable 0000000000403AC0 case 24
.text:00000000004048A0                                         ; jumptable 0000000000403B5E case 24
.text:00000000004048A0                                         ; jumptable 0000000000403C10 case 24
.text:00000000004048A0                                         ; jumptable 0000000000403CAE case 24
.text:00000000004048A0                                         ; jumptable 0000000000403D65 case 24
.text:00000000004048A0                                         ; jumptable 0000000000403DFE case 24
.text:00000000004048A0                                         ; jumptable 0000000000403EB0 case 24
.text:00000000004048A0                                         ; jumptable 0000000000403F4E case 24
.text:00000000004048A0                                         ; jumptable
.text:00000000004048A4                 mov     r11, [rsi-10h]
.text:00000000004048A8                 mov     rdx, [rsi-8]
.text:00000000004048AC                 mov     [rdi-18h], r10
.text:00000000004048B0                 mov     [rdi-10h], r11
.text:00000000004048B4                 mov     [rdi-8], rdx
.text:00000000004048B8                 retn
.text:00000000004048B8 ; ---------------------------------------------------------------------------
.text:00000000004048B9                 align 20h
.text:00000000004048C0
.text:00000000004048C0 loc_4048C0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004048C0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004048C0                 mov     r11, [rsi-10h]  ; jumptable 0000000000402E80 case 16
.text:00000000004048C0                                         ; jumptable 0000000000402FA6 case 32
.text:00000000004048C0                                         ; jumptable 000000000040306D case 16
.text:00000000004048C0                                         ; jumptable 000000000040316A case 16
.text:00000000004048C0                                         ; jumptable 00000000004031D4 case 32
.text:00000000004048C0                                         ; jumptable 0000000000403295 case 16
.text:00000000004048C0                                         ; jumptable 0000000000403384 case 16
.text:00000000004048C0                                         ; jumptable 000000000040574F case 16
.text:00000000004048C0                                         ; jumptable 000000000040581A case 16
.text:00000000004048C0                                         ; jumptable 0000000000405905 case 16
.text:00000000004048C0                                         ; jumptable 00000000004059C2 case 16
.text:00000000004048C0                                         ; jumptable 0000000000403430 case 16
.text:00000000004048C0                                         ; jumptable 00000000004034CE case 16
.text:00000000004048C0                                         ; jumptable 0000000000403580 case 16
.text:00000000004048C0                                         ; jumptable 000000000040361E case 16
.text:00000000004048C0                                         ; jumptable 00000000004036D0 case 16
.text:00000000004048C0                                         ; jumptable 000000000040376E case 16
.text:00000000004048C0                                         ; jumptable 0000000000403820 case 16
.text:00000000004048C0                                         ; jumptable 00000000004038BE case 16
.text:00000000004048C0                                         ; jumptable 0000000000403970 case 16
.text:00000000004048C0                                         ; jumptable 0000000000403A0E case 16
.text:00000000004048C0                                         ; jumptable 0000000000403AC0 case 16
.text:00000000004048C0                                         ; jumptable 0000000000403B5E case 16
.text:00000000004048C0                                         ; jumptable 0000000000403C10 case 16
.text:00000000004048C0                                         ; jumptable 0000000000403CAE case 16
.text:00000000004048C0                                         ; jumptable 0000000000403D65 case 16
.text:00000000004048C0                                         ; jumptable 0000000000403DFE case 16
.text:00000000004048C0                                         ; jumptable 0000000000403EB0 case 16
.text:00000000004048C0                                         ; jumptable 0000000000403F4E case 16
.text:00000000004048C0                                         ; jumptable
.text:00000000004048C4                 mov     rdx, [rsi-8]
.text:00000000004048C8                 mov     [rdi-10h], r11
.text:00000000004048CC                 mov     [rdi-8], rdx
.text:00000000004048D0                 retn
.text:00000000004048D0 ; ---------------------------------------------------------------------------
.text:00000000004048D1                 align 20h
.text:00000000004048E0
.text:00000000004048E0 loc_4048E0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004048E0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004048E0                 mov     rdx, [rsi-8]    ; jumptable 0000000000402E80 case 8
.text:00000000004048E0                                         ; jumptable 0000000000402FA6 case 24
.text:00000000004048E0                                         ; jumptable 000000000040306D case 8
.text:00000000004048E0                                         ; jumptable 000000000040316A case 8
.text:00000000004048E0                                         ; jumptable 00000000004031D4 case 24
.text:00000000004048E0                                         ; jumptable 0000000000403295 case 8
.text:00000000004048E0                                         ; jumptable 0000000000403384 case 8
.text:00000000004048E0                                         ; jumptable 000000000040574F case 8
.text:00000000004048E0                                         ; jumptable 000000000040581A case 8
.text:00000000004048E0                                         ; jumptable 0000000000405905 case 8
.text:00000000004048E0                                         ; jumptable 00000000004059C2 case 8
.text:00000000004048E0                                         ; jumptable 0000000000403430 case 8
.text:00000000004048E0                                         ; jumptable 00000000004034CE case 8
.text:00000000004048E0                                         ; jumptable 0000000000403580 case 8
.text:00000000004048E0                                         ; jumptable 000000000040361E case 8
.text:00000000004048E0                                         ; jumptable 00000000004036D0 case 8
.text:00000000004048E0                                         ; jumptable 000000000040376E case 8
.text:00000000004048E0                                         ; jumptable 0000000000403820 case 8
.text:00000000004048E0                                         ; jumptable 00000000004038BE case 8
.text:00000000004048E0                                         ; jumptable 0000000000403970 case 8
.text:00000000004048E0                                         ; jumptable 0000000000403A0E case 8
.text:00000000004048E0                                         ; jumptable 0000000000403AC0 case 8
.text:00000000004048E0                                         ; jumptable 0000000000403B5E case 8
.text:00000000004048E0                                         ; jumptable 0000000000403C10 case 8
.text:00000000004048E0                                         ; jumptable 0000000000403CAE case 8
.text:00000000004048E0                                         ; jumptable 0000000000403D65 case 8
.text:00000000004048E0                                         ; jumptable 0000000000403DFE case 8
.text:00000000004048E0                                         ; jumptable 0000000000403EB0 case 8
.text:00000000004048E0                                         ; jumptable 0000000000403F4E case 8
.text:00000000004048E0                                         ; jumptable 0000000000404000 case 8
.text:00000000004048E0                                         ; ju
.text:00000000004048E4                 mov     [rdi-8], rdx
.text:00000000004048E8
.text:00000000004048E8 locret_4048E8:                          ; CODE XREF: __intel_ssse3_memmove+8↑j
.text:00000000004048E8                                         ; __intel_ssse3_memmove+30↑j ...
.text:00000000004048E8                 retn                    ; jumptable 0000000000402E80 case 0
.text:00000000004048E8                                         ; jumptable 0000000000402FA6 case 16
.text:00000000004048E8                                         ; jumptable 000000000040306D case 0
.text:00000000004048E8                                         ; jumptable 000000000040316A case 0
.text:00000000004048E8                                         ; jumptable 00000000004031D4 case 16
.text:00000000004048E8                                         ; jumptable 0000000000403295 case 0
.text:00000000004048E8                                         ; jumptable 0000000000403384 case 0
.text:00000000004048E8                                         ; jumptable 000000000040574F case 0
.text:00000000004048E8                                         ; jumptable 000000000040581A case 0
.text:00000000004048E8                                         ; jumptable 0000000000405905 case 0
.text:00000000004048E8                                         ; jumptable 00000000004059C2 case 0
.text:00000000004048E8                                         ; jumptable 0000000000403430 case 0
.text:00000000004048E8                                         ; jumptable 00000000004034CE case 0
.text:00000000004048E8                                         ; jumptable 0000000000403580 case 0
.text:00000000004048E8                                         ; jumptable 000000000040361E case 0
.text:00000000004048E8                                         ; jumptable 00000000004036D0 case 0
.text:00000000004048E8                                         ; jumptable 000000000040376E case 0
.text:00000000004048E8                                         ; jumptable 0000000000403820 case 0
.text:00000000004048E8                                         ; jumptable 00000000004038BE case 0
.text:00000000004048E8                                         ; jumptable 0000000000403970 case 0
.text:00000000004048E8                                         ; jumptable 0000000000403A0E case 0
.text:00000000004048E8                                         ; jumptable 0000000000403AC0 case 0
.text:00000000004048E8                                         ; jumptable 0000000000403B5E case 0
.text:00000000004048E8                                         ; jumptable 0000000000403C10 case 0
.text:00000000004048E8                                         ; jumptable 0000000000403CAE case 0
.text:00000000004048E8                                         ; jumptable 0000000000403D65 case 0
.text:00000000004048E8                                         ; jumptable 0000000000403DFE case 0
.text:00000000004048E8                                         ; jumptable 0000000000403EB0 case 0
.text:00000000004048E8                                         ; jumptable 0000000000403F4E case 0
.text:00000000004048E8                                         ; jumptable 0000000000404000 case 0
.text:00000000004048E8                                         ; ju
.text:00000000004048E8 ; ---------------------------------------------------------------------------
.text:00000000004048E9                 align 10h
.text:00000000004048F0
.text:00000000004048F0 loc_4048F0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004048F0                                         ; __intel_ssse3_memmove+21D↑j ...
.text:00000000004048F0                 movdqu  xmm0, xmmword ptr [rsi-49h] ; jumptable 0000000000402E80 case 73
.text:00000000004048F0                                         ; jumptable 000000000040306D case 73
.text:00000000004048F0                                         ; jumptable 0000000000403295 case 73
.text:00000000004048F0                                         ; jumptable 000000000040574F case 73
.text:00000000004048F0                                         ; jumptable 000000000040581A case 73
.text:00000000004048F0                                         ; jumptable 0000000000405905 case 73
.text:00000000004048F0                                         ; jumptable 00000000004059C2 case 73
.text:00000000004048F0                                         ; jumptable 0000000000403430 case 73
.text:00000000004048F0                                         ; jumptable 00000000004034CE case 73
.text:00000000004048F0                                         ; jumptable 0000000000403580 case 73
.text:00000000004048F0                                         ; jumptable 000000000040361E case 73
.text:00000000004048F0                                         ; jumptable 00000000004036D0 case 73
.text:00000000004048F0                                         ; jumptable 000000000040376E case 73
.text:00000000004048F0                                         ; jumptable 0000000000403820 case 73
.text:00000000004048F0                                         ; jumptable 00000000004038BE case 73
.text:00000000004048F0                                         ; jumptable 0000000000403970 case 73
.text:00000000004048F0                                         ; jumptable 0000000000403A0E case 73
.text:00000000004048F0                                         ; jumptable 0000000000403AC0 case 73
.text:00000000004048F0                                         ; jumptable 0000000000403B5E case 73
.text:00000000004048F0                                         ; jumptable 0000000000403C10 case 73
.text:00000000004048F0                                         ; jumptable 0000000000403CAE case 73
.text:00000000004048F0                                         ; jumptable 0000000000403D65 case 73
.text:00000000004048F0                                         ; jumptable 0000000000403DFE case 73
.text:00000000004048F0                                         ; jumptable 0000000000403EB0 case 73
.text:00000000004048F0                                         ; jumptable 0000000000403F4E case 73
.text:00000000004048F0                                         ; jumptable 0000000000404000 case 73
.text:00000000004048F0                                         ; jumptable 000000000040409E case 73
.text:00000000004048F0                                         ; jumptable 0000000000404150 case 73
.text:00000000004048F0                                         ; jumptable 00000000004041EE case 73
.text:00000000004048F0                                         ; jumptable
.text:00000000004048F5                 movdqu  xmm1, xmmword ptr [rsi-39h]
.text:00000000004048FA                 mov     rcx, [rsi-29h]
.text:00000000004048FE                 mov     r9, [rsi-21h]
.text:0000000000404902                 mov     r10, [rsi-19h]
.text:0000000000404906                 mov     r11, [rsi-11h]
.text:000000000040490A                 mov     r8, [rsi-9]
.text:000000000040490E                 mov     edx, [rsi-4]
.text:0000000000404911                 movdqu  xmmword ptr [rdi-49h], xmm0
.text:0000000000404916                 movdqu  xmmword ptr [rdi-39h], xmm1
.text:000000000040491B                 mov     [rdi-29h], rcx
.text:000000000040491F                 mov     [rdi-21h], r9
.text:0000000000404923                 mov     [rdi-19h], r10
.text:0000000000404927                 mov     [rdi-11h], r11
.text:000000000040492B                 mov     [rdi-9], r8
.text:000000000040492F                 mov     [rdi-4], edx
.text:0000000000404932                 retn
.text:0000000000404932 ; ---------------------------------------------------------------------------
.text:0000000000404933                 align 20h
.text:0000000000404940
.text:0000000000404940 loc_404940:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404940                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404940                 movdqu  xmm0, xmmword ptr [rsi-41h] ; jumptable 0000000000402E80 case 65
.text:0000000000404940                                         ; jumptable 000000000040306D case 65
.text:0000000000404940                                         ; jumptable 0000000000403295 case 65
.text:0000000000404940                                         ; jumptable 000000000040574F case 65
.text:0000000000404940                                         ; jumptable 000000000040581A case 65
.text:0000000000404940                                         ; jumptable 0000000000405905 case 65
.text:0000000000404940                                         ; jumptable 00000000004059C2 case 65
.text:0000000000404940                                         ; jumptable 0000000000403430 case 65
.text:0000000000404940                                         ; jumptable 00000000004034CE case 65
.text:0000000000404940                                         ; jumptable 0000000000403580 case 65
.text:0000000000404940                                         ; jumptable 000000000040361E case 65
.text:0000000000404940                                         ; jumptable 00000000004036D0 case 65
.text:0000000000404940                                         ; jumptable 000000000040376E case 65
.text:0000000000404940                                         ; jumptable 0000000000403820 case 65
.text:0000000000404940                                         ; jumptable 00000000004038BE case 65
.text:0000000000404940                                         ; jumptable 0000000000403970 case 65
.text:0000000000404940                                         ; jumptable 0000000000403A0E case 65
.text:0000000000404940                                         ; jumptable 0000000000403AC0 case 65
.text:0000000000404940                                         ; jumptable 0000000000403B5E case 65
.text:0000000000404940                                         ; jumptable 0000000000403C10 case 65
.text:0000000000404940                                         ; jumptable 0000000000403CAE case 65
.text:0000000000404940                                         ; jumptable 0000000000403D65 case 65
.text:0000000000404940                                         ; jumptable 0000000000403DFE case 65
.text:0000000000404940                                         ; jumptable 0000000000403EB0 case 65
.text:0000000000404940                                         ; jumptable 0000000000403F4E case 65
.text:0000000000404940                                         ; jumptable 0000000000404000 case 65
.text:0000000000404940                                         ; jumptable 000000000040409E case 65
.text:0000000000404940                                         ; jumptable 0000000000404150 case 65
.text:0000000000404940                                         ; jumptable 00000000004041EE case 65
.text:0000000000404940                                         ; jumptable
.text:0000000000404945                 movdqu  xmm1, xmmword ptr [rsi-31h]
.text:000000000040494A                 mov     r9, [rsi-21h]
.text:000000000040494E                 mov     r10, [rsi-19h]
.text:0000000000404952                 mov     r11, [rsi-11h]
.text:0000000000404956                 mov     rcx, [rsi-9]
.text:000000000040495A                 mov     edx, [rsi-4]
.text:000000000040495D                 movdqu  xmmword ptr [rdi-41h], xmm0
.text:0000000000404962                 movdqu  xmmword ptr [rdi-31h], xmm1
.text:0000000000404967                 mov     [rdi-21h], r9
.text:000000000040496B                 mov     [rdi-19h], r10
.text:000000000040496F                 mov     [rdi-11h], r11
.text:0000000000404973                 mov     [rdi-9], rcx
.text:0000000000404977                 mov     [rdi-4], edx
.text:000000000040497A                 retn
.text:000000000040497A ; ---------------------------------------------------------------------------
.text:000000000040497B                 align 20h
.text:0000000000404980
.text:0000000000404980 loc_404980:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404980                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404980                 movdqu  xmm0, xmmword ptr [rsi-39h] ; jumptable 0000000000402E80 case 57
.text:0000000000404980                                         ; jumptable 0000000000402FA6 case 73
.text:0000000000404980                                         ; jumptable 000000000040306D case 57
.text:0000000000404980                                         ; jumptable 00000000004031D4 case 73
.text:0000000000404980                                         ; jumptable 0000000000403295 case 57
.text:0000000000404980                                         ; jumptable 000000000040574F case 57
.text:0000000000404980                                         ; jumptable 000000000040581A case 57
.text:0000000000404980                                         ; jumptable 0000000000405905 case 57
.text:0000000000404980                                         ; jumptable 00000000004059C2 case 57
.text:0000000000404980                                         ; jumptable 0000000000403430 case 57
.text:0000000000404980                                         ; jumptable 00000000004034CE case 57
.text:0000000000404980                                         ; jumptable 0000000000403580 case 57
.text:0000000000404980                                         ; jumptable 000000000040361E case 57
.text:0000000000404980                                         ; jumptable 00000000004036D0 case 57
.text:0000000000404980                                         ; jumptable 000000000040376E case 57
.text:0000000000404980                                         ; jumptable 0000000000403820 case 57
.text:0000000000404980                                         ; jumptable 00000000004038BE case 57
.text:0000000000404980                                         ; jumptable 0000000000403970 case 57
.text:0000000000404980                                         ; jumptable 0000000000403A0E case 57
.text:0000000000404980                                         ; jumptable 0000000000403AC0 case 57
.text:0000000000404980                                         ; jumptable 0000000000403B5E case 57
.text:0000000000404980                                         ; jumptable 0000000000403C10 case 57
.text:0000000000404980                                         ; jumptable 0000000000403CAE case 57
.text:0000000000404980                                         ; jumptable 0000000000403D65 case 57
.text:0000000000404980                                         ; jumptable 0000000000403DFE case 57
.text:0000000000404980                                         ; jumptable 0000000000403EB0 case 57
.text:0000000000404980                                         ; jumptable 0000000000403F4E case 57
.text:0000000000404980                                         ; jumptable 0000000000404000 case 57
.text:0000000000404980                                         ; jumptable 000000000040409E case 57
.text:0000000000404980                                         ; jumptable
.text:0000000000404985                 mov     r8, [rsi-29h]
.text:0000000000404989                 mov     r9, [rsi-21h]
.text:000000000040498D                 mov     r10, [rsi-19h]
.text:0000000000404991                 mov     r11, [rsi-11h]
.text:0000000000404995                 mov     rcx, [rsi-9]
.text:0000000000404999                 mov     edx, [rsi-4]
.text:000000000040499C                 movdqu  xmmword ptr [rdi-39h], xmm0
.text:00000000004049A1                 mov     [rdi-29h], r8
.text:00000000004049A5                 mov     [rdi-21h], r9
.text:00000000004049A9                 mov     [rdi-19h], r10
.text:00000000004049AD                 mov     [rdi-11h], r11
.text:00000000004049B1                 mov     [rdi-9], rcx
.text:00000000004049B5                 mov     [rdi-4], edx
.text:00000000004049B8                 retn
.text:00000000004049B8 ; ---------------------------------------------------------------------------
.text:00000000004049B9                 align 20h
.text:00000000004049C0
.text:00000000004049C0 loc_4049C0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004049C0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004049C0                 movdqu  xmm0, xmmword ptr [rsi-31h] ; jumptable 0000000000402E80 case 49
.text:00000000004049C0                                         ; jumptable 0000000000402FA6 case 65
.text:00000000004049C0                                         ; jumptable 000000000040306D case 49
.text:00000000004049C0                                         ; jumptable 00000000004031D4 case 65
.text:00000000004049C0                                         ; jumptable 0000000000403295 case 49
.text:00000000004049C0                                         ; jumptable 000000000040574F case 49
.text:00000000004049C0                                         ; jumptable 000000000040581A case 49
.text:00000000004049C0                                         ; jumptable 0000000000405905 case 49
.text:00000000004049C0                                         ; jumptable 00000000004059C2 case 49
.text:00000000004049C0                                         ; jumptable 0000000000403430 case 49
.text:00000000004049C0                                         ; jumptable 00000000004034CE case 49
.text:00000000004049C0                                         ; jumptable 0000000000403580 case 49
.text:00000000004049C0                                         ; jumptable 000000000040361E case 49
.text:00000000004049C0                                         ; jumptable 00000000004036D0 case 49
.text:00000000004049C0                                         ; jumptable 000000000040376E case 49
.text:00000000004049C0                                         ; jumptable 0000000000403820 case 49
.text:00000000004049C0                                         ; jumptable 00000000004038BE case 49
.text:00000000004049C0                                         ; jumptable 0000000000403970 case 49
.text:00000000004049C0                                         ; jumptable 0000000000403A0E case 49
.text:00000000004049C0                                         ; jumptable 0000000000403AC0 case 49
.text:00000000004049C0                                         ; jumptable 0000000000403B5E case 49
.text:00000000004049C0                                         ; jumptable 0000000000403C10 case 49
.text:00000000004049C0                                         ; jumptable 0000000000403CAE case 49
.text:00000000004049C0                                         ; jumptable 0000000000403D65 case 49
.text:00000000004049C0                                         ; jumptable 0000000000403DFE case 49
.text:00000000004049C0                                         ; jumptable 0000000000403EB0 case 49
.text:00000000004049C0                                         ; jumptable 0000000000403F4E case 49
.text:00000000004049C0                                         ; jumptable 0000000000404000 case 49
.text:00000000004049C0                                         ; jumptable 000000000040409E case 49
.text:00000000004049C0                                         ; jumptable
.text:00000000004049C5                 mov     r9, [rsi-21h]
.text:00000000004049C9                 mov     r10, [rsi-19h]
.text:00000000004049CD                 mov     r11, [rsi-11h]
.text:00000000004049D1                 mov     rcx, [rsi-9]
.text:00000000004049D5                 mov     edx, [rsi-4]
.text:00000000004049D8                 movdqu  xmmword ptr [rdi-31h], xmm0
.text:00000000004049DD                 mov     [rdi-21h], r9
.text:00000000004049E1                 mov     [rdi-19h], r10
.text:00000000004049E5                 mov     [rdi-11h], r11
.text:00000000004049E9                 mov     [rdi-9], rcx
.text:00000000004049ED                 mov     [rdi-4], edx
.text:00000000004049F0                 retn
.text:00000000004049F0 ; ---------------------------------------------------------------------------
.text:00000000004049F1                 align 20h
.text:0000000000404A00
.text:0000000000404A00 loc_404A00:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404A00                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404A00                 mov     r8, [rsi-29h]   ; jumptable 0000000000402E80 case 41
.text:0000000000404A00                                         ; jumptable 0000000000402FA6 case 57
.text:0000000000404A00                                         ; jumptable 000000000040306D case 41
.text:0000000000404A00                                         ; jumptable 00000000004031D4 case 57
.text:0000000000404A00                                         ; jumptable 0000000000403295 case 41
.text:0000000000404A00                                         ; jumptable 000000000040574F case 41
.text:0000000000404A00                                         ; jumptable 000000000040581A case 41
.text:0000000000404A00                                         ; jumptable 0000000000405905 case 41
.text:0000000000404A00                                         ; jumptable 00000000004059C2 case 41
.text:0000000000404A00                                         ; jumptable 0000000000403430 case 41
.text:0000000000404A00                                         ; jumptable 00000000004034CE case 41
.text:0000000000404A00                                         ; jumptable 0000000000403580 case 41
.text:0000000000404A00                                         ; jumptable 000000000040361E case 41
.text:0000000000404A00                                         ; jumptable 00000000004036D0 case 41
.text:0000000000404A00                                         ; jumptable 000000000040376E case 41
.text:0000000000404A00                                         ; jumptable 0000000000403820 case 41
.text:0000000000404A00                                         ; jumptable 00000000004038BE case 41
.text:0000000000404A00                                         ; jumptable 0000000000403970 case 41
.text:0000000000404A00                                         ; jumptable 0000000000403A0E case 41
.text:0000000000404A00                                         ; jumptable 0000000000403AC0 case 41
.text:0000000000404A00                                         ; jumptable 0000000000403B5E case 41
.text:0000000000404A00                                         ; jumptable 0000000000403C10 case 41
.text:0000000000404A00                                         ; jumptable 0000000000403CAE case 41
.text:0000000000404A00                                         ; jumptable 0000000000403D65 case 41
.text:0000000000404A00                                         ; jumptable 0000000000403DFE case 41
.text:0000000000404A00                                         ; jumptable 0000000000403EB0 case 41
.text:0000000000404A00                                         ; jumptable 0000000000403F4E case 41
.text:0000000000404A00                                         ; jumptable 0000000000404000 case 41
.text:0000000000404A00                                         ; jumptable 000000000040409E case 41
.text:0000000000404A00                                         ; jumptable
.text:0000000000404A04                 mov     r9, [rsi-21h]
.text:0000000000404A08                 mov     r10, [rsi-19h]
.text:0000000000404A0C                 mov     r11, [rsi-11h]
.text:0000000000404A10                 mov     rcx, [rsi-9]
.text:0000000000404A14                 mov     dl, [rsi-1]
.text:0000000000404A17                 mov     [rdi-29h], r8
.text:0000000000404A1B                 mov     [rdi-21h], r9
.text:0000000000404A1F                 mov     [rdi-19h], r10
.text:0000000000404A23                 mov     [rdi-11h], r11
.text:0000000000404A27                 mov     [rdi-9], rcx
.text:0000000000404A2B                 mov     [rdi-1], dl
.text:0000000000404A2E                 retn
.text:0000000000404A2E ; ---------------------------------------------------------------------------
.text:0000000000404A2F                 align 10h
.text:0000000000404A30
.text:0000000000404A30 loc_404A30:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404A30                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404A30                 mov     r9, [rsi-21h]   ; jumptable 0000000000402E80 case 33
.text:0000000000404A30                                         ; jumptable 0000000000402FA6 case 49
.text:0000000000404A30                                         ; jumptable 000000000040306D case 33
.text:0000000000404A30                                         ; jumptable 00000000004031D4 case 49
.text:0000000000404A30                                         ; jumptable 0000000000403295 case 33
.text:0000000000404A30                                         ; jumptable 000000000040574F case 33
.text:0000000000404A30                                         ; jumptable 000000000040581A case 33
.text:0000000000404A30                                         ; jumptable 0000000000405905 case 33
.text:0000000000404A30                                         ; jumptable 00000000004059C2 case 33
.text:0000000000404A30                                         ; jumptable 0000000000403430 case 33
.text:0000000000404A30                                         ; jumptable 00000000004034CE case 33
.text:0000000000404A30                                         ; jumptable 0000000000403580 case 33
.text:0000000000404A30                                         ; jumptable 000000000040361E case 33
.text:0000000000404A30                                         ; jumptable 00000000004036D0 case 33
.text:0000000000404A30                                         ; jumptable 000000000040376E case 33
.text:0000000000404A30                                         ; jumptable 0000000000403820 case 33
.text:0000000000404A30                                         ; jumptable 00000000004038BE case 33
.text:0000000000404A30                                         ; jumptable 0000000000403970 case 33
.text:0000000000404A30                                         ; jumptable 0000000000403A0E case 33
.text:0000000000404A30                                         ; jumptable 0000000000403AC0 case 33
.text:0000000000404A30                                         ; jumptable 0000000000403B5E case 33
.text:0000000000404A30                                         ; jumptable 0000000000403C10 case 33
.text:0000000000404A30                                         ; jumptable 0000000000403CAE case 33
.text:0000000000404A30                                         ; jumptable 0000000000403D65 case 33
.text:0000000000404A30                                         ; jumptable 0000000000403DFE case 33
.text:0000000000404A30                                         ; jumptable 0000000000403EB0 case 33
.text:0000000000404A30                                         ; jumptable 0000000000403F4E case 33
.text:0000000000404A30                                         ; jumptable 0000000000404000 case 33
.text:0000000000404A30                                         ; jumptable 000000000040409E case 33
.text:0000000000404A30                                         ; jumptable
.text:0000000000404A34                 mov     r10, [rsi-19h]
.text:0000000000404A38                 mov     r11, [rsi-11h]
.text:0000000000404A3C                 mov     rcx, [rsi-9]
.text:0000000000404A40                 mov     dl, [rsi-1]
.text:0000000000404A43                 mov     [rdi-21h], r9
.text:0000000000404A47                 mov     [rdi-19h], r10
.text:0000000000404A4B                 mov     [rdi-11h], r11
.text:0000000000404A4F                 mov     [rdi-9], rcx
.text:0000000000404A53                 mov     [rdi-1], dl
.text:0000000000404A56                 retn
.text:0000000000404A56 ; ---------------------------------------------------------------------------
.text:0000000000404A57                 align 20h
.text:0000000000404A60
.text:0000000000404A60 loc_404A60:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404A60                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404A60                 mov     r10, [rsi-19h]  ; jumptable 0000000000402E80 case 25
.text:0000000000404A60                                         ; jumptable 0000000000402FA6 case 41
.text:0000000000404A60                                         ; jumptable 000000000040306D case 25
.text:0000000000404A60                                         ; jumptable 000000000040316A case 25
.text:0000000000404A60                                         ; jumptable 00000000004031D4 case 41
.text:0000000000404A60                                         ; jumptable 0000000000403295 case 25
.text:0000000000404A60                                         ; jumptable 0000000000403384 case 25
.text:0000000000404A60                                         ; jumptable 000000000040574F case 25
.text:0000000000404A60                                         ; jumptable 000000000040581A case 25
.text:0000000000404A60                                         ; jumptable 0000000000405905 case 25
.text:0000000000404A60                                         ; jumptable 00000000004059C2 case 25
.text:0000000000404A60                                         ; jumptable 0000000000403430 case 25
.text:0000000000404A60                                         ; jumptable 00000000004034CE case 25
.text:0000000000404A60                                         ; jumptable 0000000000403580 case 25
.text:0000000000404A60                                         ; jumptable 000000000040361E case 25
.text:0000000000404A60                                         ; jumptable 00000000004036D0 case 25
.text:0000000000404A60                                         ; jumptable 000000000040376E case 25
.text:0000000000404A60                                         ; jumptable 0000000000403820 case 25
.text:0000000000404A60                                         ; jumptable 00000000004038BE case 25
.text:0000000000404A60                                         ; jumptable 0000000000403970 case 25
.text:0000000000404A60                                         ; jumptable 0000000000403A0E case 25
.text:0000000000404A60                                         ; jumptable 0000000000403AC0 case 25
.text:0000000000404A60                                         ; jumptable 0000000000403B5E case 25
.text:0000000000404A60                                         ; jumptable 0000000000403C10 case 25
.text:0000000000404A60                                         ; jumptable 0000000000403CAE case 25
.text:0000000000404A60                                         ; jumptable 0000000000403D65 case 25
.text:0000000000404A60                                         ; jumptable 0000000000403DFE case 25
.text:0000000000404A60                                         ; jumptable 0000000000403EB0 case 25
.text:0000000000404A60                                         ; jumptable 0000000000403F4E case 25
.text:0000000000404A60                                         ; jumptable
.text:0000000000404A64                 mov     r11, [rsi-11h]
.text:0000000000404A68                 mov     rcx, [rsi-9]
.text:0000000000404A6C                 mov     dl, [rsi-1]
.text:0000000000404A6F                 mov     [rdi-19h], r10
.text:0000000000404A73                 mov     [rdi-11h], r11
.text:0000000000404A77                 mov     [rdi-9], rcx
.text:0000000000404A7B                 mov     [rdi-1], dl
.text:0000000000404A7E                 retn
.text:0000000000404A7E ; ---------------------------------------------------------------------------
.text:0000000000404A7F                 align 20h
.text:0000000000404A80
.text:0000000000404A80 loc_404A80:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404A80                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404A80                 mov     r11, [rsi-11h]  ; jumptable 0000000000402E80 case 17
.text:0000000000404A80                                         ; jumptable 0000000000402FA6 case 33
.text:0000000000404A80                                         ; jumptable 000000000040306D case 17
.text:0000000000404A80                                         ; jumptable 000000000040316A case 17
.text:0000000000404A80                                         ; jumptable 00000000004031D4 case 33
.text:0000000000404A80                                         ; jumptable 0000000000403295 case 17
.text:0000000000404A80                                         ; jumptable 0000000000403384 case 17
.text:0000000000404A80                                         ; jumptable 000000000040574F case 17
.text:0000000000404A80                                         ; jumptable 000000000040581A case 17
.text:0000000000404A80                                         ; jumptable 0000000000405905 case 17
.text:0000000000404A80                                         ; jumptable 00000000004059C2 case 17
.text:0000000000404A80                                         ; jumptable 0000000000403430 case 17
.text:0000000000404A80                                         ; jumptable 00000000004034CE case 17
.text:0000000000404A80                                         ; jumptable 0000000000403580 case 17
.text:0000000000404A80                                         ; jumptable 000000000040361E case 17
.text:0000000000404A80                                         ; jumptable 00000000004036D0 case 17
.text:0000000000404A80                                         ; jumptable 000000000040376E case 17
.text:0000000000404A80                                         ; jumptable 0000000000403820 case 17
.text:0000000000404A80                                         ; jumptable 00000000004038BE case 17
.text:0000000000404A80                                         ; jumptable 0000000000403970 case 17
.text:0000000000404A80                                         ; jumptable 0000000000403A0E case 17
.text:0000000000404A80                                         ; jumptable 0000000000403AC0 case 17
.text:0000000000404A80                                         ; jumptable 0000000000403B5E case 17
.text:0000000000404A80                                         ; jumptable 0000000000403C10 case 17
.text:0000000000404A80                                         ; jumptable 0000000000403CAE case 17
.text:0000000000404A80                                         ; jumptable 0000000000403D65 case 17
.text:0000000000404A80                                         ; jumptable 0000000000403DFE case 17
.text:0000000000404A80                                         ; jumptable 0000000000403EB0 case 17
.text:0000000000404A80                                         ; jumptable 0000000000403F4E case 17
.text:0000000000404A80                                         ; jumptable
.text:0000000000404A84                 mov     rcx, [rsi-9]
.text:0000000000404A88                 mov     edx, [rsi-4]
.text:0000000000404A8B                 mov     [rdi-11h], r11
.text:0000000000404A8F                 mov     [rdi-9], rcx
.text:0000000000404A93                 mov     [rdi-4], edx
.text:0000000000404A96                 retn
.text:0000000000404A96 ; ---------------------------------------------------------------------------
.text:0000000000404A97                 align 20h
.text:0000000000404AA0
.text:0000000000404AA0 loc_404AA0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404AA0                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404AA0                 mov     rcx, [rsi-9]    ; jumptable 0000000000402E80 case 9
.text:0000000000404AA0                                         ; jumptable 0000000000402FA6 case 25
.text:0000000000404AA0                                         ; jumptable 000000000040306D case 9
.text:0000000000404AA0                                         ; jumptable 000000000040316A case 9
.text:0000000000404AA0                                         ; jumptable 00000000004031D4 case 25
.text:0000000000404AA0                                         ; jumptable 0000000000403295 case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403384 case 9
.text:0000000000404AA0                                         ; jumptable 000000000040574F case 9
.text:0000000000404AA0                                         ; jumptable 000000000040581A case 9
.text:0000000000404AA0                                         ; jumptable 0000000000405905 case 9
.text:0000000000404AA0                                         ; jumptable 00000000004059C2 case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403430 case 9
.text:0000000000404AA0                                         ; jumptable 00000000004034CE case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403580 case 9
.text:0000000000404AA0                                         ; jumptable 000000000040361E case 9
.text:0000000000404AA0                                         ; jumptable 00000000004036D0 case 9
.text:0000000000404AA0                                         ; jumptable 000000000040376E case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403820 case 9
.text:0000000000404AA0                                         ; jumptable 00000000004038BE case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403970 case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403A0E case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403AC0 case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403B5E case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403C10 case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403CAE case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403D65 case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403DFE case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403EB0 case 9
.text:0000000000404AA0                                         ; jumptable 0000000000403F4E case 9
.text:0000000000404AA0                                         ; jumptable 0000000000404000 case 9
.text:0000000000404AA0                                         ; ju
.text:0000000000404AA4                 mov     edx, [rsi-4]
.text:0000000000404AA7                 mov     [rdi-9], rcx
.text:0000000000404AAB                 mov     [rdi-4], edx
.text:0000000000404AAE                 retn
.text:0000000000404AAE ; ---------------------------------------------------------------------------
.text:0000000000404AAF                 align 10h
.text:0000000000404AB0
.text:0000000000404AB0 loc_404AB0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404AB0                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404AB0                 mov     dl, [rsi-1]     ; jumptable 0000000000402E80 case 1
.text:0000000000404AB0                                         ; jumptable 0000000000402FA6 case 17
.text:0000000000404AB0                                         ; jumptable 000000000040306D case 1
.text:0000000000404AB0                                         ; jumptable 000000000040316A case 1
.text:0000000000404AB0                                         ; jumptable 00000000004031D4 case 17
.text:0000000000404AB0                                         ; jumptable 0000000000403295 case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403384 case 1
.text:0000000000404AB0                                         ; jumptable 000000000040574F case 1
.text:0000000000404AB0                                         ; jumptable 000000000040581A case 1
.text:0000000000404AB0                                         ; jumptable 0000000000405905 case 1
.text:0000000000404AB0                                         ; jumptable 00000000004059C2 case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403430 case 1
.text:0000000000404AB0                                         ; jumptable 00000000004034CE case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403580 case 1
.text:0000000000404AB0                                         ; jumptable 000000000040361E case 1
.text:0000000000404AB0                                         ; jumptable 00000000004036D0 case 1
.text:0000000000404AB0                                         ; jumptable 000000000040376E case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403820 case 1
.text:0000000000404AB0                                         ; jumptable 00000000004038BE case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403970 case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403A0E case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403AC0 case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403B5E case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403C10 case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403CAE case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403D65 case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403DFE case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403EB0 case 1
.text:0000000000404AB0                                         ; jumptable 0000000000403F4E case 1
.text:0000000000404AB0                                         ; jumptable 0000000000404000 case 1
.text:0000000000404AB0                                         ; ju
.text:0000000000404AB3                 mov     [rdi-1], dl
.text:0000000000404AB6                 retn
.text:0000000000404AB6 ; ---------------------------------------------------------------------------
.text:0000000000404AB7                 align 20h
.text:0000000000404AC0
.text:0000000000404AC0 loc_404AC0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404AC0                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404AC0                 movdqu  xmm0, xmmword ptr [rsi-4Ah] ; jumptable 0000000000402E80 case 74
.text:0000000000404AC0                                         ; jumptable 000000000040306D case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403295 case 74
.text:0000000000404AC0                                         ; jumptable 000000000040574F case 74
.text:0000000000404AC0                                         ; jumptable 000000000040581A case 74
.text:0000000000404AC0                                         ; jumptable 0000000000405905 case 74
.text:0000000000404AC0                                         ; jumptable 00000000004059C2 case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403430 case 74
.text:0000000000404AC0                                         ; jumptable 00000000004034CE case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403580 case 74
.text:0000000000404AC0                                         ; jumptable 000000000040361E case 74
.text:0000000000404AC0                                         ; jumptable 00000000004036D0 case 74
.text:0000000000404AC0                                         ; jumptable 000000000040376E case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403820 case 74
.text:0000000000404AC0                                         ; jumptable 00000000004038BE case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403970 case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403A0E case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403AC0 case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403B5E case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403C10 case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403CAE case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403D65 case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403DFE case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403EB0 case 74
.text:0000000000404AC0                                         ; jumptable 0000000000403F4E case 74
.text:0000000000404AC0                                         ; jumptable 0000000000404000 case 74
.text:0000000000404AC0                                         ; jumptable 000000000040409E case 74
.text:0000000000404AC0                                         ; jumptable 0000000000404150 case 74
.text:0000000000404AC0                                         ; jumptable 00000000004041EE case 74
.text:0000000000404AC0                                         ; jumptable
.text:0000000000404AC5                 movdqu  xmm1, xmmword ptr [rsi-3Ah]
.text:0000000000404ACA                 mov     r8, [rsi-2Ah]
.text:0000000000404ACE                 mov     r9, [rsi-22h]
.text:0000000000404AD2                 mov     r10, [rsi-1Ah]
.text:0000000000404AD6                 mov     r11, [rsi-12h]
.text:0000000000404ADA                 mov     rcx, [rsi-0Ah]
.text:0000000000404ADE                 mov     edx, [rsi-4]
.text:0000000000404AE1                 movdqu  xmmword ptr [rdi-4Ah], xmm0
.text:0000000000404AE6                 movdqu  xmmword ptr [rdi-3Ah], xmm1
.text:0000000000404AEB                 mov     [rdi-2Ah], r8
.text:0000000000404AEF                 mov     [rdi-22h], r9
.text:0000000000404AF3                 mov     [rdi-1Ah], r10
.text:0000000000404AF7                 mov     [rdi-12h], r11
.text:0000000000404AFB                 mov     [rdi-0Ah], rcx
.text:0000000000404AFF                 mov     [rdi-4], edx
.text:0000000000404B02                 retn
.text:0000000000404B02 ; ---------------------------------------------------------------------------
.text:0000000000404B03                 align 10h
.text:0000000000404B10
.text:0000000000404B10 loc_404B10:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404B10                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404B10                 movdqu  xmm0, xmmword ptr [rsi-42h] ; jumptable 0000000000402E80 case 66
.text:0000000000404B10                                         ; jumptable 000000000040306D case 66
.text:0000000000404B10                                         ; jumptable 0000000000403295 case 66
.text:0000000000404B10                                         ; jumptable 000000000040574F case 66
.text:0000000000404B10                                         ; jumptable 000000000040581A case 66
.text:0000000000404B10                                         ; jumptable 0000000000405905 case 66
.text:0000000000404B10                                         ; jumptable 00000000004059C2 case 66
.text:0000000000404B10                                         ; jumptable 0000000000403430 case 66
.text:0000000000404B10                                         ; jumptable 00000000004034CE case 66
.text:0000000000404B10                                         ; jumptable 0000000000403580 case 66
.text:0000000000404B10                                         ; jumptable 000000000040361E case 66
.text:0000000000404B10                                         ; jumptable 00000000004036D0 case 66
.text:0000000000404B10                                         ; jumptable 000000000040376E case 66
.text:0000000000404B10                                         ; jumptable 0000000000403820 case 66
.text:0000000000404B10                                         ; jumptable 00000000004038BE case 66
.text:0000000000404B10                                         ; jumptable 0000000000403970 case 66
.text:0000000000404B10                                         ; jumptable 0000000000403A0E case 66
.text:0000000000404B10                                         ; jumptable 0000000000403AC0 case 66
.text:0000000000404B10                                         ; jumptable 0000000000403B5E case 66
.text:0000000000404B10                                         ; jumptable 0000000000403C10 case 66
.text:0000000000404B10                                         ; jumptable 0000000000403CAE case 66
.text:0000000000404B10                                         ; jumptable 0000000000403D65 case 66
.text:0000000000404B10                                         ; jumptable 0000000000403DFE case 66
.text:0000000000404B10                                         ; jumptable 0000000000403EB0 case 66
.text:0000000000404B10                                         ; jumptable 0000000000403F4E case 66
.text:0000000000404B10                                         ; jumptable 0000000000404000 case 66
.text:0000000000404B10                                         ; jumptable 000000000040409E case 66
.text:0000000000404B10                                         ; jumptable 0000000000404150 case 66
.text:0000000000404B10                                         ; jumptable 00000000004041EE case 66
.text:0000000000404B10                                         ; jumptable
.text:0000000000404B15                 movdqu  xmm1, xmmword ptr [rsi-32h]
.text:0000000000404B1A                 mov     r8, [rsi-2Ah]
.text:0000000000404B1E                 mov     r9, [rsi-22h]
.text:0000000000404B22                 mov     r10, [rsi-1Ah]
.text:0000000000404B26                 mov     r11, [rsi-12h]
.text:0000000000404B2A                 mov     rcx, [rsi-0Ah]
.text:0000000000404B2E                 mov     edx, [rsi-4]
.text:0000000000404B31                 movdqu  xmmword ptr [rdi-42h], xmm0
.text:0000000000404B36                 movdqu  xmmword ptr [rdi-32h], xmm1
.text:0000000000404B3B                 mov     [rdi-2Ah], r8
.text:0000000000404B3F                 mov     [rdi-22h], r9
.text:0000000000404B43                 mov     [rdi-1Ah], r10
.text:0000000000404B47                 mov     [rdi-12h], r11
.text:0000000000404B4B                 mov     [rdi-0Ah], rcx
.text:0000000000404B4F                 mov     [rdi-4], edx
.text:0000000000404B52                 retn
.text:0000000000404B52 ; ---------------------------------------------------------------------------
.text:0000000000404B53                 align 20h
.text:0000000000404B60
.text:0000000000404B60 loc_404B60:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404B60                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404B60                 movdqu  xmm1, xmmword ptr [rsi-3Ah] ; jumptable 0000000000402E80 case 58
.text:0000000000404B60                                         ; jumptable 0000000000402FA6 case 74
.text:0000000000404B60                                         ; jumptable 000000000040306D case 58
.text:0000000000404B60                                         ; jumptable 00000000004031D4 case 74
.text:0000000000404B60                                         ; jumptable 0000000000403295 case 58
.text:0000000000404B60                                         ; jumptable 000000000040574F case 58
.text:0000000000404B60                                         ; jumptable 000000000040581A case 58
.text:0000000000404B60                                         ; jumptable 0000000000405905 case 58
.text:0000000000404B60                                         ; jumptable 00000000004059C2 case 58
.text:0000000000404B60                                         ; jumptable 0000000000403430 case 58
.text:0000000000404B60                                         ; jumptable 00000000004034CE case 58
.text:0000000000404B60                                         ; jumptable 0000000000403580 case 58
.text:0000000000404B60                                         ; jumptable 000000000040361E case 58
.text:0000000000404B60                                         ; jumptable 00000000004036D0 case 58
.text:0000000000404B60                                         ; jumptable 000000000040376E case 58
.text:0000000000404B60                                         ; jumptable 0000000000403820 case 58
.text:0000000000404B60                                         ; jumptable 00000000004038BE case 58
.text:0000000000404B60                                         ; jumptable 0000000000403970 case 58
.text:0000000000404B60                                         ; jumptable 0000000000403A0E case 58
.text:0000000000404B60                                         ; jumptable 0000000000403AC0 case 58
.text:0000000000404B60                                         ; jumptable 0000000000403B5E case 58
.text:0000000000404B60                                         ; jumptable 0000000000403C10 case 58
.text:0000000000404B60                                         ; jumptable 0000000000403CAE case 58
.text:0000000000404B60                                         ; jumptable 0000000000403D65 case 58
.text:0000000000404B60                                         ; jumptable 0000000000403DFE case 58
.text:0000000000404B60                                         ; jumptable 0000000000403EB0 case 58
.text:0000000000404B60                                         ; jumptable 0000000000403F4E case 58
.text:0000000000404B60                                         ; jumptable 0000000000404000 case 58
.text:0000000000404B60                                         ; jumptable 000000000040409E case 58
.text:0000000000404B60                                         ; jumptable
.text:0000000000404B65                 mov     r8, [rsi-2Ah]
.text:0000000000404B69                 mov     r9, [rsi-22h]
.text:0000000000404B6D                 mov     r10, [rsi-1Ah]
.text:0000000000404B71                 mov     r11, [rsi-12h]
.text:0000000000404B75                 mov     rcx, [rsi-0Ah]
.text:0000000000404B79                 mov     edx, [rsi-4]
.text:0000000000404B7C                 movdqu  xmmword ptr [rdi-3Ah], xmm1
.text:0000000000404B81                 mov     [rdi-2Ah], r8
.text:0000000000404B85                 mov     [rdi-22h], r9
.text:0000000000404B89                 mov     [rdi-1Ah], r10
.text:0000000000404B8D                 mov     [rdi-12h], r11
.text:0000000000404B91                 mov     [rdi-0Ah], rcx
.text:0000000000404B95                 mov     [rdi-4], edx
.text:0000000000404B98                 retn
.text:0000000000404B98 ; ---------------------------------------------------------------------------
.text:0000000000404B99                 align 20h
.text:0000000000404BA0
.text:0000000000404BA0 loc_404BA0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404BA0                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404BA0                 movdqu  xmm0, xmmword ptr [rsi-32h] ; jumptable 0000000000402E80 case 50
.text:0000000000404BA0                                         ; jumptable 0000000000402FA6 case 66
.text:0000000000404BA0                                         ; jumptable 000000000040306D case 50
.text:0000000000404BA0                                         ; jumptable 00000000004031D4 case 66
.text:0000000000404BA0                                         ; jumptable 0000000000403295 case 50
.text:0000000000404BA0                                         ; jumptable 000000000040574F case 50
.text:0000000000404BA0                                         ; jumptable 000000000040581A case 50
.text:0000000000404BA0                                         ; jumptable 0000000000405905 case 50
.text:0000000000404BA0                                         ; jumptable 00000000004059C2 case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403430 case 50
.text:0000000000404BA0                                         ; jumptable 00000000004034CE case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403580 case 50
.text:0000000000404BA0                                         ; jumptable 000000000040361E case 50
.text:0000000000404BA0                                         ; jumptable 00000000004036D0 case 50
.text:0000000000404BA0                                         ; jumptable 000000000040376E case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403820 case 50
.text:0000000000404BA0                                         ; jumptable 00000000004038BE case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403970 case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403A0E case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403AC0 case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403B5E case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403C10 case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403CAE case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403D65 case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403DFE case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403EB0 case 50
.text:0000000000404BA0                                         ; jumptable 0000000000403F4E case 50
.text:0000000000404BA0                                         ; jumptable 0000000000404000 case 50
.text:0000000000404BA0                                         ; jumptable 000000000040409E case 50
.text:0000000000404BA0                                         ; jumptable
.text:0000000000404BA5                 mov     r9, [rsi-22h]
.text:0000000000404BA9                 mov     r10, [rsi-1Ah]
.text:0000000000404BAD                 mov     r11, [rsi-12h]
.text:0000000000404BB1                 mov     rcx, [rsi-0Ah]
.text:0000000000404BB5                 mov     edx, [rsi-4]
.text:0000000000404BB8                 movdqu  xmmword ptr [rdi-32h], xmm0
.text:0000000000404BBD                 mov     [rdi-22h], r9
.text:0000000000404BC1                 mov     [rdi-1Ah], r10
.text:0000000000404BC5                 mov     [rdi-12h], r11
.text:0000000000404BC9                 mov     [rdi-0Ah], rcx
.text:0000000000404BCD                 mov     [rdi-4], edx
.text:0000000000404BD0                 retn
.text:0000000000404BD0 ; ---------------------------------------------------------------------------
.text:0000000000404BD1                 align 20h
.text:0000000000404BE0
.text:0000000000404BE0 loc_404BE0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404BE0                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404BE0                 mov     r8, [rsi-2Ah]   ; jumptable 0000000000402E80 case 42
.text:0000000000404BE0                                         ; jumptable 0000000000402FA6 case 58
.text:0000000000404BE0                                         ; jumptable 000000000040306D case 42
.text:0000000000404BE0                                         ; jumptable 00000000004031D4 case 58
.text:0000000000404BE0                                         ; jumptable 0000000000403295 case 42
.text:0000000000404BE0                                         ; jumptable 000000000040574F case 42
.text:0000000000404BE0                                         ; jumptable 000000000040581A case 42
.text:0000000000404BE0                                         ; jumptable 0000000000405905 case 42
.text:0000000000404BE0                                         ; jumptable 00000000004059C2 case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403430 case 42
.text:0000000000404BE0                                         ; jumptable 00000000004034CE case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403580 case 42
.text:0000000000404BE0                                         ; jumptable 000000000040361E case 42
.text:0000000000404BE0                                         ; jumptable 00000000004036D0 case 42
.text:0000000000404BE0                                         ; jumptable 000000000040376E case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403820 case 42
.text:0000000000404BE0                                         ; jumptable 00000000004038BE case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403970 case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403A0E case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403AC0 case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403B5E case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403C10 case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403CAE case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403D65 case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403DFE case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403EB0 case 42
.text:0000000000404BE0                                         ; jumptable 0000000000403F4E case 42
.text:0000000000404BE0                                         ; jumptable 0000000000404000 case 42
.text:0000000000404BE0                                         ; jumptable 000000000040409E case 42
.text:0000000000404BE0                                         ; jumptable
.text:0000000000404BE4                 mov     r9, [rsi-22h]
.text:0000000000404BE8                 mov     r10, [rsi-1Ah]
.text:0000000000404BEC                 mov     r11, [rsi-12h]
.text:0000000000404BF0                 mov     rcx, [rsi-0Ah]
.text:0000000000404BF4                 mov     edx, [rsi-4]
.text:0000000000404BF7                 mov     [rdi-2Ah], r8
.text:0000000000404BFB                 mov     [rdi-22h], r9
.text:0000000000404BFF                 mov     [rdi-1Ah], r10
.text:0000000000404C03                 mov     [rdi-12h], r11
.text:0000000000404C07                 mov     [rdi-0Ah], rcx
.text:0000000000404C0B                 mov     [rdi-4], edx
.text:0000000000404C0E                 retn
.text:0000000000404C0E ; ---------------------------------------------------------------------------
.text:0000000000404C0F                 align 10h
.text:0000000000404C10
.text:0000000000404C10 loc_404C10:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404C10                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404C10                 mov     r9, [rsi-22h]   ; jumptable 0000000000402E80 case 34
.text:0000000000404C10                                         ; jumptable 0000000000402FA6 case 50
.text:0000000000404C10                                         ; jumptable 000000000040306D case 34
.text:0000000000404C10                                         ; jumptable 00000000004031D4 case 50
.text:0000000000404C10                                         ; jumptable 0000000000403295 case 34
.text:0000000000404C10                                         ; jumptable 000000000040574F case 34
.text:0000000000404C10                                         ; jumptable 000000000040581A case 34
.text:0000000000404C10                                         ; jumptable 0000000000405905 case 34
.text:0000000000404C10                                         ; jumptable 00000000004059C2 case 34
.text:0000000000404C10                                         ; jumptable 0000000000403430 case 34
.text:0000000000404C10                                         ; jumptable 00000000004034CE case 34
.text:0000000000404C10                                         ; jumptable 0000000000403580 case 34
.text:0000000000404C10                                         ; jumptable 000000000040361E case 34
.text:0000000000404C10                                         ; jumptable 00000000004036D0 case 34
.text:0000000000404C10                                         ; jumptable 000000000040376E case 34
.text:0000000000404C10                                         ; jumptable 0000000000403820 case 34
.text:0000000000404C10                                         ; jumptable 00000000004038BE case 34
.text:0000000000404C10                                         ; jumptable 0000000000403970 case 34
.text:0000000000404C10                                         ; jumptable 0000000000403A0E case 34
.text:0000000000404C10                                         ; jumptable 0000000000403AC0 case 34
.text:0000000000404C10                                         ; jumptable 0000000000403B5E case 34
.text:0000000000404C10                                         ; jumptable 0000000000403C10 case 34
.text:0000000000404C10                                         ; jumptable 0000000000403CAE case 34
.text:0000000000404C10                                         ; jumptable 0000000000403D65 case 34
.text:0000000000404C10                                         ; jumptable 0000000000403DFE case 34
.text:0000000000404C10                                         ; jumptable 0000000000403EB0 case 34
.text:0000000000404C10                                         ; jumptable 0000000000403F4E case 34
.text:0000000000404C10                                         ; jumptable 0000000000404000 case 34
.text:0000000000404C10                                         ; jumptable 000000000040409E case 34
.text:0000000000404C10                                         ; jumptable
.text:0000000000404C14                 mov     r10, [rsi-1Ah]
.text:0000000000404C18                 mov     r11, [rsi-12h]
.text:0000000000404C1C                 mov     rcx, [rsi-0Ah]
.text:0000000000404C20                 mov     edx, [rsi-4]
.text:0000000000404C23                 mov     [rdi-22h], r9
.text:0000000000404C27                 mov     [rdi-1Ah], r10
.text:0000000000404C2B                 mov     [rdi-12h], r11
.text:0000000000404C2F                 mov     [rdi-0Ah], rcx
.text:0000000000404C33                 mov     [rdi-4], edx
.text:0000000000404C36                 retn
.text:0000000000404C36 ; ---------------------------------------------------------------------------
.text:0000000000404C37                 align 20h
.text:0000000000404C40
.text:0000000000404C40 loc_404C40:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404C40                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404C40                 mov     r10, [rsi-1Ah]  ; jumptable 0000000000402E80 case 26
.text:0000000000404C40                                         ; jumptable 0000000000402FA6 case 42
.text:0000000000404C40                                         ; jumptable 000000000040306D case 26
.text:0000000000404C40                                         ; jumptable 000000000040316A case 26
.text:0000000000404C40                                         ; jumptable 00000000004031D4 case 42
.text:0000000000404C40                                         ; jumptable 0000000000403295 case 26
.text:0000000000404C40                                         ; jumptable 0000000000403384 case 26
.text:0000000000404C40                                         ; jumptable 000000000040574F case 26
.text:0000000000404C40                                         ; jumptable 000000000040581A case 26
.text:0000000000404C40                                         ; jumptable 0000000000405905 case 26
.text:0000000000404C40                                         ; jumptable 00000000004059C2 case 26
.text:0000000000404C40                                         ; jumptable 0000000000403430 case 26
.text:0000000000404C40                                         ; jumptable 00000000004034CE case 26
.text:0000000000404C40                                         ; jumptable 0000000000403580 case 26
.text:0000000000404C40                                         ; jumptable 000000000040361E case 26
.text:0000000000404C40                                         ; jumptable 00000000004036D0 case 26
.text:0000000000404C40                                         ; jumptable 000000000040376E case 26
.text:0000000000404C40                                         ; jumptable 0000000000403820 case 26
.text:0000000000404C40                                         ; jumptable 00000000004038BE case 26
.text:0000000000404C40                                         ; jumptable 0000000000403970 case 26
.text:0000000000404C40                                         ; jumptable 0000000000403A0E case 26
.text:0000000000404C40                                         ; jumptable 0000000000403AC0 case 26
.text:0000000000404C40                                         ; jumptable 0000000000403B5E case 26
.text:0000000000404C40                                         ; jumptable 0000000000403C10 case 26
.text:0000000000404C40                                         ; jumptable 0000000000403CAE case 26
.text:0000000000404C40                                         ; jumptable 0000000000403D65 case 26
.text:0000000000404C40                                         ; jumptable 0000000000403DFE case 26
.text:0000000000404C40                                         ; jumptable 0000000000403EB0 case 26
.text:0000000000404C40                                         ; jumptable 0000000000403F4E case 26
.text:0000000000404C40                                         ; jumptable
.text:0000000000404C44                 mov     r11, [rsi-12h]
.text:0000000000404C48                 mov     rcx, [rsi-0Ah]
.text:0000000000404C4C                 mov     edx, [rsi-4]
.text:0000000000404C4F                 mov     [rdi-1Ah], r10
.text:0000000000404C53                 mov     [rdi-12h], r11
.text:0000000000404C57                 mov     [rdi-0Ah], rcx
.text:0000000000404C5B                 mov     [rdi-4], edx
.text:0000000000404C5E                 retn
.text:0000000000404C5E ; ---------------------------------------------------------------------------
.text:0000000000404C5F                 align 20h
.text:0000000000404C60
.text:0000000000404C60 loc_404C60:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404C60                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404C60                 mov     r11, [rsi-12h]  ; jumptable 0000000000402E80 case 18
.text:0000000000404C60                                         ; jumptable 0000000000402FA6 case 34
.text:0000000000404C60                                         ; jumptable 000000000040306D case 18
.text:0000000000404C60                                         ; jumptable 000000000040316A case 18
.text:0000000000404C60                                         ; jumptable 00000000004031D4 case 34
.text:0000000000404C60                                         ; jumptable 0000000000403295 case 18
.text:0000000000404C60                                         ; jumptable 0000000000403384 case 18
.text:0000000000404C60                                         ; jumptable 000000000040574F case 18
.text:0000000000404C60                                         ; jumptable 000000000040581A case 18
.text:0000000000404C60                                         ; jumptable 0000000000405905 case 18
.text:0000000000404C60                                         ; jumptable 00000000004059C2 case 18
.text:0000000000404C60                                         ; jumptable 0000000000403430 case 18
.text:0000000000404C60                                         ; jumptable 00000000004034CE case 18
.text:0000000000404C60                                         ; jumptable 0000000000403580 case 18
.text:0000000000404C60                                         ; jumptable 000000000040361E case 18
.text:0000000000404C60                                         ; jumptable 00000000004036D0 case 18
.text:0000000000404C60                                         ; jumptable 000000000040376E case 18
.text:0000000000404C60                                         ; jumptable 0000000000403820 case 18
.text:0000000000404C60                                         ; jumptable 00000000004038BE case 18
.text:0000000000404C60                                         ; jumptable 0000000000403970 case 18
.text:0000000000404C60                                         ; jumptable 0000000000403A0E case 18
.text:0000000000404C60                                         ; jumptable 0000000000403AC0 case 18
.text:0000000000404C60                                         ; jumptable 0000000000403B5E case 18
.text:0000000000404C60                                         ; jumptable 0000000000403C10 case 18
.text:0000000000404C60                                         ; jumptable 0000000000403CAE case 18
.text:0000000000404C60                                         ; jumptable 0000000000403D65 case 18
.text:0000000000404C60                                         ; jumptable 0000000000403DFE case 18
.text:0000000000404C60                                         ; jumptable 0000000000403EB0 case 18
.text:0000000000404C60                                         ; jumptable 0000000000403F4E case 18
.text:0000000000404C60                                         ; jumptable
.text:0000000000404C64                 mov     rcx, [rsi-0Ah]
.text:0000000000404C68                 mov     edx, [rsi-4]
.text:0000000000404C6B                 mov     [rdi-12h], r11
.text:0000000000404C6F                 mov     [rdi-0Ah], rcx
.text:0000000000404C73                 mov     [rdi-4], edx
.text:0000000000404C76                 retn
.text:0000000000404C76 ; ---------------------------------------------------------------------------
.text:0000000000404C77                 align 20h
.text:0000000000404C80
.text:0000000000404C80 loc_404C80:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404C80                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404C80                 mov     rcx, [rsi-0Ah]  ; jumptable 0000000000402E80 case 10
.text:0000000000404C80                                         ; jumptable 0000000000402FA6 case 26
.text:0000000000404C80                                         ; jumptable 000000000040306D case 10
.text:0000000000404C80                                         ; jumptable 000000000040316A case 10
.text:0000000000404C80                                         ; jumptable 00000000004031D4 case 26
.text:0000000000404C80                                         ; jumptable 0000000000403295 case 10
.text:0000000000404C80                                         ; jumptable 0000000000403384 case 10
.text:0000000000404C80                                         ; jumptable 000000000040574F case 10
.text:0000000000404C80                                         ; jumptable 000000000040581A case 10
.text:0000000000404C80                                         ; jumptable 0000000000405905 case 10
.text:0000000000404C80                                         ; jumptable 00000000004059C2 case 10
.text:0000000000404C80                                         ; jumptable 0000000000403430 case 10
.text:0000000000404C80                                         ; jumptable 00000000004034CE case 10
.text:0000000000404C80                                         ; jumptable 0000000000403580 case 10
.text:0000000000404C80                                         ; jumptable 000000000040361E case 10
.text:0000000000404C80                                         ; jumptable 00000000004036D0 case 10
.text:0000000000404C80                                         ; jumptable 000000000040376E case 10
.text:0000000000404C80                                         ; jumptable 0000000000403820 case 10
.text:0000000000404C80                                         ; jumptable 00000000004038BE case 10
.text:0000000000404C80                                         ; jumptable 0000000000403970 case 10
.text:0000000000404C80                                         ; jumptable 0000000000403A0E case 10
.text:0000000000404C80                                         ; jumptable 0000000000403AC0 case 10
.text:0000000000404C80                                         ; jumptable 0000000000403B5E case 10
.text:0000000000404C80                                         ; jumptable 0000000000403C10 case 10
.text:0000000000404C80                                         ; jumptable 0000000000403CAE case 10
.text:0000000000404C80                                         ; jumptable 0000000000403D65 case 10
.text:0000000000404C80                                         ; jumptable 0000000000403DFE case 10
.text:0000000000404C80                                         ; jumptable 0000000000403EB0 case 10
.text:0000000000404C80                                         ; jumptable 0000000000403F4E case 10
.text:0000000000404C80                                         ; jumptable
.text:0000000000404C84                 mov     edx, [rsi-4]
.text:0000000000404C87                 mov     [rdi-0Ah], rcx
.text:0000000000404C8B                 mov     [rdi-4], edx
.text:0000000000404C8E                 retn
.text:0000000000404C8E ; ---------------------------------------------------------------------------
.text:0000000000404C8F                 align 10h
.text:0000000000404C90
.text:0000000000404C90 loc_404C90:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404C90                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404C90                 mov     dx, [rsi-2]     ; jumptable 0000000000402E80 case 2
.text:0000000000404C90                                         ; jumptable 0000000000402FA6 case 18
.text:0000000000404C90                                         ; jumptable 000000000040306D case 2
.text:0000000000404C90                                         ; jumptable 000000000040316A case 2
.text:0000000000404C90                                         ; jumptable 00000000004031D4 case 18
.text:0000000000404C90                                         ; jumptable 0000000000403295 case 2
.text:0000000000404C90                                         ; jumptable 0000000000403384 case 2
.text:0000000000404C90                                         ; jumptable 000000000040574F case 2
.text:0000000000404C90                                         ; jumptable 000000000040581A case 2
.text:0000000000404C90                                         ; jumptable 0000000000405905 case 2
.text:0000000000404C90                                         ; jumptable 00000000004059C2 case 2
.text:0000000000404C90                                         ; jumptable 0000000000403430 case 2
.text:0000000000404C90                                         ; jumptable 00000000004034CE case 2
.text:0000000000404C90                                         ; jumptable 0000000000403580 case 2
.text:0000000000404C90                                         ; jumptable 000000000040361E case 2
.text:0000000000404C90                                         ; jumptable 00000000004036D0 case 2
.text:0000000000404C90                                         ; jumptable 000000000040376E case 2
.text:0000000000404C90                                         ; jumptable 0000000000403820 case 2
.text:0000000000404C90                                         ; jumptable 00000000004038BE case 2
.text:0000000000404C90                                         ; jumptable 0000000000403970 case 2
.text:0000000000404C90                                         ; jumptable 0000000000403A0E case 2
.text:0000000000404C90                                         ; jumptable 0000000000403AC0 case 2
.text:0000000000404C90                                         ; jumptable 0000000000403B5E case 2
.text:0000000000404C90                                         ; jumptable 0000000000403C10 case 2
.text:0000000000404C90                                         ; jumptable 0000000000403CAE case 2
.text:0000000000404C90                                         ; jumptable 0000000000403D65 case 2
.text:0000000000404C90                                         ; jumptable 0000000000403DFE case 2
.text:0000000000404C90                                         ; jumptable 0000000000403EB0 case 2
.text:0000000000404C90                                         ; jumptable 0000000000403F4E case 2
.text:0000000000404C90                                         ; jumptable 0000000000404000 case 2
.text:0000000000404C90                                         ; ju
.text:0000000000404C94                 mov     [rdi-2], dx
.text:0000000000404C98                 retn
.text:0000000000404C98 ; ---------------------------------------------------------------------------
.text:0000000000404C99                 align 20h
.text:0000000000404CA0
.text:0000000000404CA0 loc_404CA0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404CA0                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404CA0                 movdqu  xmm0, xmmword ptr [rsi-4Bh] ; jumptable 0000000000402E80 case 75
.text:0000000000404CA0                                         ; jumptable 000000000040306D case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403295 case 75
.text:0000000000404CA0                                         ; jumptable 000000000040574F case 75
.text:0000000000404CA0                                         ; jumptable 000000000040581A case 75
.text:0000000000404CA0                                         ; jumptable 0000000000405905 case 75
.text:0000000000404CA0                                         ; jumptable 00000000004059C2 case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403430 case 75
.text:0000000000404CA0                                         ; jumptable 00000000004034CE case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403580 case 75
.text:0000000000404CA0                                         ; jumptable 000000000040361E case 75
.text:0000000000404CA0                                         ; jumptable 00000000004036D0 case 75
.text:0000000000404CA0                                         ; jumptable 000000000040376E case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403820 case 75
.text:0000000000404CA0                                         ; jumptable 00000000004038BE case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403970 case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403A0E case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403AC0 case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403B5E case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403C10 case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403CAE case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403D65 case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403DFE case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403EB0 case 75
.text:0000000000404CA0                                         ; jumptable 0000000000403F4E case 75
.text:0000000000404CA0                                         ; jumptable 0000000000404000 case 75
.text:0000000000404CA0                                         ; jumptable 000000000040409E case 75
.text:0000000000404CA0                                         ; jumptable 0000000000404150 case 75
.text:0000000000404CA0                                         ; jumptable 00000000004041EE case 75
.text:0000000000404CA0                                         ; jumptable
.text:0000000000404CA5                 movdqu  xmm1, xmmword ptr [rsi-3Bh]
.text:0000000000404CAA                 mov     r8, [rsi-2Bh]
.text:0000000000404CAE                 mov     r9, [rsi-23h]
.text:0000000000404CB2                 mov     r10, [rsi-1Bh]
.text:0000000000404CB6                 mov     r11, [rsi-13h]
.text:0000000000404CBA                 mov     rcx, [rsi-0Bh]
.text:0000000000404CBE                 mov     edx, [rsi-4]
.text:0000000000404CC1                 movdqu  xmmword ptr [rdi-4Bh], xmm0
.text:0000000000404CC6                 movdqu  xmmword ptr [rdi-3Bh], xmm1
.text:0000000000404CCB                 mov     [rdi-2Bh], r8
.text:0000000000404CCF                 mov     [rdi-23h], r9
.text:0000000000404CD3                 mov     [rdi-1Bh], r10
.text:0000000000404CD7                 mov     [rdi-13h], r11
.text:0000000000404CDB                 mov     [rdi-0Bh], rcx
.text:0000000000404CDF                 mov     [rdi-4], edx
.text:0000000000404CE2                 retn
.text:0000000000404CE2 ; ---------------------------------------------------------------------------
.text:0000000000404CE3                 align 10h
.text:0000000000404CF0
.text:0000000000404CF0 loc_404CF0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404CF0                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404CF0                 movdqu  xmm0, xmmword ptr [rsi-43h] ; jumptable 0000000000402E80 case 67
.text:0000000000404CF0                                         ; jumptable 000000000040306D case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403295 case 67
.text:0000000000404CF0                                         ; jumptable 000000000040574F case 67
.text:0000000000404CF0                                         ; jumptable 000000000040581A case 67
.text:0000000000404CF0                                         ; jumptable 0000000000405905 case 67
.text:0000000000404CF0                                         ; jumptable 00000000004059C2 case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403430 case 67
.text:0000000000404CF0                                         ; jumptable 00000000004034CE case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403580 case 67
.text:0000000000404CF0                                         ; jumptable 000000000040361E case 67
.text:0000000000404CF0                                         ; jumptable 00000000004036D0 case 67
.text:0000000000404CF0                                         ; jumptable 000000000040376E case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403820 case 67
.text:0000000000404CF0                                         ; jumptable 00000000004038BE case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403970 case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403A0E case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403AC0 case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403B5E case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403C10 case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403CAE case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403D65 case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403DFE case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403EB0 case 67
.text:0000000000404CF0                                         ; jumptable 0000000000403F4E case 67
.text:0000000000404CF0                                         ; jumptable 0000000000404000 case 67
.text:0000000000404CF0                                         ; jumptable 000000000040409E case 67
.text:0000000000404CF0                                         ; jumptable 0000000000404150 case 67
.text:0000000000404CF0                                         ; jumptable 00000000004041EE case 67
.text:0000000000404CF0                                         ; jumptable
.text:0000000000404CF5                 movdqu  xmm1, xmmword ptr [rsi-3Bh]
.text:0000000000404CFA                 mov     r8, [rsi-2Bh]
.text:0000000000404CFE                 mov     r9, [rsi-23h]
.text:0000000000404D02                 mov     r10, [rsi-1Bh]
.text:0000000000404D06                 mov     r11, [rsi-13h]
.text:0000000000404D0A                 mov     rcx, [rsi-0Bh]
.text:0000000000404D0E                 mov     edx, [rsi-4]
.text:0000000000404D11                 movdqu  xmmword ptr [rdi-43h], xmm0
.text:0000000000404D16                 movdqu  xmmword ptr [rdi-3Bh], xmm1
.text:0000000000404D1B                 mov     [rdi-2Bh], r8
.text:0000000000404D1F                 mov     [rdi-23h], r9
.text:0000000000404D23                 mov     [rdi-1Bh], r10
.text:0000000000404D27                 mov     [rdi-13h], r11
.text:0000000000404D2B                 mov     [rdi-0Bh], rcx
.text:0000000000404D2F                 mov     [rdi-4], edx
.text:0000000000404D32                 retn
.text:0000000000404D32 ; ---------------------------------------------------------------------------
.text:0000000000404D33                 align 20h
.text:0000000000404D40
.text:0000000000404D40 loc_404D40:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404D40                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404D40                 movdqu  xmm0, xmmword ptr [rsi-3Bh] ; jumptable 0000000000402E80 case 59
.text:0000000000404D40                                         ; jumptable 0000000000402FA6 case 75
.text:0000000000404D40                                         ; jumptable 000000000040306D case 59
.text:0000000000404D40                                         ; jumptable 00000000004031D4 case 75
.text:0000000000404D40                                         ; jumptable 0000000000403295 case 59
.text:0000000000404D40                                         ; jumptable 000000000040574F case 59
.text:0000000000404D40                                         ; jumptable 000000000040581A case 59
.text:0000000000404D40                                         ; jumptable 0000000000405905 case 59
.text:0000000000404D40                                         ; jumptable 00000000004059C2 case 59
.text:0000000000404D40                                         ; jumptable 0000000000403430 case 59
.text:0000000000404D40                                         ; jumptable 00000000004034CE case 59
.text:0000000000404D40                                         ; jumptable 0000000000403580 case 59
.text:0000000000404D40                                         ; jumptable 000000000040361E case 59
.text:0000000000404D40                                         ; jumptable 00000000004036D0 case 59
.text:0000000000404D40                                         ; jumptable 000000000040376E case 59
.text:0000000000404D40                                         ; jumptable 0000000000403820 case 59
.text:0000000000404D40                                         ; jumptable 00000000004038BE case 59
.text:0000000000404D40                                         ; jumptable 0000000000403970 case 59
.text:0000000000404D40                                         ; jumptable 0000000000403A0E case 59
.text:0000000000404D40                                         ; jumptable 0000000000403AC0 case 59
.text:0000000000404D40                                         ; jumptable 0000000000403B5E case 59
.text:0000000000404D40                                         ; jumptable 0000000000403C10 case 59
.text:0000000000404D40                                         ; jumptable 0000000000403CAE case 59
.text:0000000000404D40                                         ; jumptable 0000000000403D65 case 59
.text:0000000000404D40                                         ; jumptable 0000000000403DFE case 59
.text:0000000000404D40                                         ; jumptable 0000000000403EB0 case 59
.text:0000000000404D40                                         ; jumptable 0000000000403F4E case 59
.text:0000000000404D40                                         ; jumptable 0000000000404000 case 59
.text:0000000000404D40                                         ; jumptable 000000000040409E case 59
.text:0000000000404D40                                         ; jumptable
.text:0000000000404D45                 mov     r8, [rsi-2Bh]
.text:0000000000404D49                 mov     r9, [rsi-23h]
.text:0000000000404D4D                 mov     r10, [rsi-1Bh]
.text:0000000000404D51                 mov     r11, [rsi-13h]
.text:0000000000404D55                 mov     rcx, [rsi-0Bh]
.text:0000000000404D59                 mov     edx, [rsi-4]
.text:0000000000404D5C                 movdqu  xmmword ptr [rdi-3Bh], xmm0
.text:0000000000404D61                 mov     [rdi-2Bh], r8
.text:0000000000404D65                 mov     [rdi-23h], r9
.text:0000000000404D69                 mov     [rdi-1Bh], r10
.text:0000000000404D6D                 mov     [rdi-13h], r11
.text:0000000000404D71                 mov     [rdi-0Bh], rcx
.text:0000000000404D75                 mov     [rdi-4], edx
.text:0000000000404D78                 retn
.text:0000000000404D78 ; ---------------------------------------------------------------------------
.text:0000000000404D79                 align 20h
.text:0000000000404D80
.text:0000000000404D80 loc_404D80:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404D80                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404D80                 movdqu  xmm0, xmmword ptr [rsi-33h] ; jumptable 0000000000402E80 case 51
.text:0000000000404D80                                         ; jumptable 0000000000402FA6 case 67
.text:0000000000404D80                                         ; jumptable 000000000040306D case 51
.text:0000000000404D80                                         ; jumptable 00000000004031D4 case 67
.text:0000000000404D80                                         ; jumptable 0000000000403295 case 51
.text:0000000000404D80                                         ; jumptable 000000000040574F case 51
.text:0000000000404D80                                         ; jumptable 000000000040581A case 51
.text:0000000000404D80                                         ; jumptable 0000000000405905 case 51
.text:0000000000404D80                                         ; jumptable 00000000004059C2 case 51
.text:0000000000404D80                                         ; jumptable 0000000000403430 case 51
.text:0000000000404D80                                         ; jumptable 00000000004034CE case 51
.text:0000000000404D80                                         ; jumptable 0000000000403580 case 51
.text:0000000000404D80                                         ; jumptable 000000000040361E case 51
.text:0000000000404D80                                         ; jumptable 00000000004036D0 case 51
.text:0000000000404D80                                         ; jumptable 000000000040376E case 51
.text:0000000000404D80                                         ; jumptable 0000000000403820 case 51
.text:0000000000404D80                                         ; jumptable 00000000004038BE case 51
.text:0000000000404D80                                         ; jumptable 0000000000403970 case 51
.text:0000000000404D80                                         ; jumptable 0000000000403A0E case 51
.text:0000000000404D80                                         ; jumptable 0000000000403AC0 case 51
.text:0000000000404D80                                         ; jumptable 0000000000403B5E case 51
.text:0000000000404D80                                         ; jumptable 0000000000403C10 case 51
.text:0000000000404D80                                         ; jumptable 0000000000403CAE case 51
.text:0000000000404D80                                         ; jumptable 0000000000403D65 case 51
.text:0000000000404D80                                         ; jumptable 0000000000403DFE case 51
.text:0000000000404D80                                         ; jumptable 0000000000403EB0 case 51
.text:0000000000404D80                                         ; jumptable 0000000000403F4E case 51
.text:0000000000404D80                                         ; jumptable 0000000000404000 case 51
.text:0000000000404D80                                         ; jumptable 000000000040409E case 51
.text:0000000000404D80                                         ; jumptable
.text:0000000000404D85                 mov     r9, [rsi-23h]
.text:0000000000404D89                 mov     r10, [rsi-1Bh]
.text:0000000000404D8D                 mov     r11, [rsi-13h]
.text:0000000000404D91                 mov     rcx, [rsi-0Bh]
.text:0000000000404D95                 mov     edx, [rsi-4]
.text:0000000000404D98                 movdqu  xmmword ptr [rdi-33h], xmm0
.text:0000000000404D9D                 mov     [rdi-23h], r9
.text:0000000000404DA1                 mov     [rdi-1Bh], r10
.text:0000000000404DA5                 mov     [rdi-13h], r11
.text:0000000000404DA9                 mov     [rdi-0Bh], rcx
.text:0000000000404DAD                 mov     [rdi-4], edx
.text:0000000000404DB0                 retn
.text:0000000000404DB0 ; ---------------------------------------------------------------------------
.text:0000000000404DB1                 align 20h
.text:0000000000404DC0
.text:0000000000404DC0 loc_404DC0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404DC0                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404DC0                 mov     r8, [rsi-2Bh]   ; jumptable 0000000000402E80 case 43
.text:0000000000404DC0                                         ; jumptable 0000000000402FA6 case 59
.text:0000000000404DC0                                         ; jumptable 000000000040306D case 43
.text:0000000000404DC0                                         ; jumptable 00000000004031D4 case 59
.text:0000000000404DC0                                         ; jumptable 0000000000403295 case 43
.text:0000000000404DC0                                         ; jumptable 000000000040574F case 43
.text:0000000000404DC0                                         ; jumptable 000000000040581A case 43
.text:0000000000404DC0                                         ; jumptable 0000000000405905 case 43
.text:0000000000404DC0                                         ; jumptable 00000000004059C2 case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403430 case 43
.text:0000000000404DC0                                         ; jumptable 00000000004034CE case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403580 case 43
.text:0000000000404DC0                                         ; jumptable 000000000040361E case 43
.text:0000000000404DC0                                         ; jumptable 00000000004036D0 case 43
.text:0000000000404DC0                                         ; jumptable 000000000040376E case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403820 case 43
.text:0000000000404DC0                                         ; jumptable 00000000004038BE case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403970 case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403A0E case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403AC0 case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403B5E case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403C10 case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403CAE case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403D65 case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403DFE case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403EB0 case 43
.text:0000000000404DC0                                         ; jumptable 0000000000403F4E case 43
.text:0000000000404DC0                                         ; jumptable 0000000000404000 case 43
.text:0000000000404DC0                                         ; jumptable 000000000040409E case 43
.text:0000000000404DC0                                         ; jumptable
.text:0000000000404DC4                 mov     r9, [rsi-23h]
.text:0000000000404DC8                 mov     r10, [rsi-1Bh]
.text:0000000000404DCC                 mov     r11, [rsi-13h]
.text:0000000000404DD0                 mov     rcx, [rsi-0Bh]
.text:0000000000404DD4                 mov     edx, [rsi-4]
.text:0000000000404DD7                 mov     [rdi-2Bh], r8
.text:0000000000404DDB                 mov     [rdi-23h], r9
.text:0000000000404DDF                 mov     [rdi-1Bh], r10
.text:0000000000404DE3                 mov     [rdi-13h], r11
.text:0000000000404DE7                 mov     [rdi-0Bh], rcx
.text:0000000000404DEB                 mov     [rdi-4], edx
.text:0000000000404DEE                 retn
.text:0000000000404DEE ; ---------------------------------------------------------------------------
.text:0000000000404DEF                 align 10h
.text:0000000000404DF0
.text:0000000000404DF0 loc_404DF0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404DF0                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404DF0                 mov     r9, [rsi-23h]   ; jumptable 0000000000402E80 case 35
.text:0000000000404DF0                                         ; jumptable 0000000000402FA6 case 51
.text:0000000000404DF0                                         ; jumptable 000000000040306D case 35
.text:0000000000404DF0                                         ; jumptable 00000000004031D4 case 51
.text:0000000000404DF0                                         ; jumptable 0000000000403295 case 35
.text:0000000000404DF0                                         ; jumptable 000000000040574F case 35
.text:0000000000404DF0                                         ; jumptable 000000000040581A case 35
.text:0000000000404DF0                                         ; jumptable 0000000000405905 case 35
.text:0000000000404DF0                                         ; jumptable 00000000004059C2 case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403430 case 35
.text:0000000000404DF0                                         ; jumptable 00000000004034CE case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403580 case 35
.text:0000000000404DF0                                         ; jumptable 000000000040361E case 35
.text:0000000000404DF0                                         ; jumptable 00000000004036D0 case 35
.text:0000000000404DF0                                         ; jumptable 000000000040376E case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403820 case 35
.text:0000000000404DF0                                         ; jumptable 00000000004038BE case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403970 case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403A0E case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403AC0 case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403B5E case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403C10 case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403CAE case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403D65 case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403DFE case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403EB0 case 35
.text:0000000000404DF0                                         ; jumptable 0000000000403F4E case 35
.text:0000000000404DF0                                         ; jumptable 0000000000404000 case 35
.text:0000000000404DF0                                         ; jumptable 000000000040409E case 35
.text:0000000000404DF0                                         ; jumptable
.text:0000000000404DF4                 mov     r10, [rsi-1Bh]
.text:0000000000404DF8                 mov     r11, [rsi-13h]
.text:0000000000404DFC                 mov     rcx, [rsi-0Bh]
.text:0000000000404E00                 mov     edx, [rsi-4]
.text:0000000000404E03                 mov     [rdi-23h], r9
.text:0000000000404E07                 mov     [rdi-1Bh], r10
.text:0000000000404E0B                 mov     [rdi-13h], r11
.text:0000000000404E0F                 mov     [rdi-0Bh], rcx
.text:0000000000404E13                 mov     [rdi-4], edx
.text:0000000000404E16                 retn
.text:0000000000404E16 ; ---------------------------------------------------------------------------
.text:0000000000404E17                 align 20h
.text:0000000000404E20
.text:0000000000404E20 loc_404E20:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404E20                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404E20                 mov     r10, [rsi-1Bh]  ; jumptable 0000000000402E80 case 27
.text:0000000000404E20                                         ; jumptable 0000000000402FA6 case 43
.text:0000000000404E20                                         ; jumptable 000000000040306D case 27
.text:0000000000404E20                                         ; jumptable 000000000040316A case 27
.text:0000000000404E20                                         ; jumptable 00000000004031D4 case 43
.text:0000000000404E20                                         ; jumptable 0000000000403295 case 27
.text:0000000000404E20                                         ; jumptable 0000000000403384 case 27
.text:0000000000404E20                                         ; jumptable 000000000040574F case 27
.text:0000000000404E20                                         ; jumptable 000000000040581A case 27
.text:0000000000404E20                                         ; jumptable 0000000000405905 case 27
.text:0000000000404E20                                         ; jumptable 00000000004059C2 case 27
.text:0000000000404E20                                         ; jumptable 0000000000403430 case 27
.text:0000000000404E20                                         ; jumptable 00000000004034CE case 27
.text:0000000000404E20                                         ; jumptable 0000000000403580 case 27
.text:0000000000404E20                                         ; jumptable 000000000040361E case 27
.text:0000000000404E20                                         ; jumptable 00000000004036D0 case 27
.text:0000000000404E20                                         ; jumptable 000000000040376E case 27
.text:0000000000404E20                                         ; jumptable 0000000000403820 case 27
.text:0000000000404E20                                         ; jumptable 00000000004038BE case 27
.text:0000000000404E20                                         ; jumptable 0000000000403970 case 27
.text:0000000000404E20                                         ; jumptable 0000000000403A0E case 27
.text:0000000000404E20                                         ; jumptable 0000000000403AC0 case 27
.text:0000000000404E20                                         ; jumptable 0000000000403B5E case 27
.text:0000000000404E20                                         ; jumptable 0000000000403C10 case 27
.text:0000000000404E20                                         ; jumptable 0000000000403CAE case 27
.text:0000000000404E20                                         ; jumptable 0000000000403D65 case 27
.text:0000000000404E20                                         ; jumptable 0000000000403DFE case 27
.text:0000000000404E20                                         ; jumptable 0000000000403EB0 case 27
.text:0000000000404E20                                         ; jumptable 0000000000403F4E case 27
.text:0000000000404E20                                         ; jumptable
.text:0000000000404E24                 mov     r11, [rsi-13h]
.text:0000000000404E28                 mov     rcx, [rsi-0Bh]
.text:0000000000404E2C                 mov     edx, [rsi-4]
.text:0000000000404E2F                 mov     [rdi-1Bh], r10
.text:0000000000404E33                 mov     [rdi-13h], r11
.text:0000000000404E37                 mov     [rdi-0Bh], rcx
.text:0000000000404E3B                 mov     [rdi-4], edx
.text:0000000000404E3E                 retn
.text:0000000000404E3E ; ---------------------------------------------------------------------------
.text:0000000000404E3F                 align 20h
.text:0000000000404E40
.text:0000000000404E40 loc_404E40:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404E40                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404E40                 mov     r11, [rsi-13h]  ; jumptable 0000000000402E80 case 19
.text:0000000000404E40                                         ; jumptable 0000000000402FA6 case 35
.text:0000000000404E40                                         ; jumptable 000000000040306D case 19
.text:0000000000404E40                                         ; jumptable 000000000040316A case 19
.text:0000000000404E40                                         ; jumptable 00000000004031D4 case 35
.text:0000000000404E40                                         ; jumptable 0000000000403295 case 19
.text:0000000000404E40                                         ; jumptable 0000000000403384 case 19
.text:0000000000404E40                                         ; jumptable 000000000040574F case 19
.text:0000000000404E40                                         ; jumptable 000000000040581A case 19
.text:0000000000404E40                                         ; jumptable 0000000000405905 case 19
.text:0000000000404E40                                         ; jumptable 00000000004059C2 case 19
.text:0000000000404E40                                         ; jumptable 0000000000403430 case 19
.text:0000000000404E40                                         ; jumptable 00000000004034CE case 19
.text:0000000000404E40                                         ; jumptable 0000000000403580 case 19
.text:0000000000404E40                                         ; jumptable 000000000040361E case 19
.text:0000000000404E40                                         ; jumptable 00000000004036D0 case 19
.text:0000000000404E40                                         ; jumptable 000000000040376E case 19
.text:0000000000404E40                                         ; jumptable 0000000000403820 case 19
.text:0000000000404E40                                         ; jumptable 00000000004038BE case 19
.text:0000000000404E40                                         ; jumptable 0000000000403970 case 19
.text:0000000000404E40                                         ; jumptable 0000000000403A0E case 19
.text:0000000000404E40                                         ; jumptable 0000000000403AC0 case 19
.text:0000000000404E40                                         ; jumptable 0000000000403B5E case 19
.text:0000000000404E40                                         ; jumptable 0000000000403C10 case 19
.text:0000000000404E40                                         ; jumptable 0000000000403CAE case 19
.text:0000000000404E40                                         ; jumptable 0000000000403D65 case 19
.text:0000000000404E40                                         ; jumptable 0000000000403DFE case 19
.text:0000000000404E40                                         ; jumptable 0000000000403EB0 case 19
.text:0000000000404E40                                         ; jumptable 0000000000403F4E case 19
.text:0000000000404E40                                         ; jumptable
.text:0000000000404E44                 mov     rcx, [rsi-0Bh]
.text:0000000000404E48                 mov     edx, [rsi-4]
.text:0000000000404E4B                 mov     [rdi-13h], r11
.text:0000000000404E4F                 mov     [rdi-0Bh], rcx
.text:0000000000404E53                 mov     [rdi-4], edx
.text:0000000000404E56                 retn
.text:0000000000404E56 ; ---------------------------------------------------------------------------
.text:0000000000404E57                 align 20h
.text:0000000000404E60
.text:0000000000404E60 loc_404E60:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404E60                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404E60                 mov     rcx, [rsi-0Bh]  ; jumptable 0000000000402E80 case 11
.text:0000000000404E60                                         ; jumptable 0000000000402FA6 case 27
.text:0000000000404E60                                         ; jumptable 000000000040306D case 11
.text:0000000000404E60                                         ; jumptable 000000000040316A case 11
.text:0000000000404E60                                         ; jumptable 00000000004031D4 case 27
.text:0000000000404E60                                         ; jumptable 0000000000403295 case 11
.text:0000000000404E60                                         ; jumptable 0000000000403384 case 11
.text:0000000000404E60                                         ; jumptable 000000000040574F case 11
.text:0000000000404E60                                         ; jumptable 000000000040581A case 11
.text:0000000000404E60                                         ; jumptable 0000000000405905 case 11
.text:0000000000404E60                                         ; jumptable 00000000004059C2 case 11
.text:0000000000404E60                                         ; jumptable 0000000000403430 case 11
.text:0000000000404E60                                         ; jumptable 00000000004034CE case 11
.text:0000000000404E60                                         ; jumptable 0000000000403580 case 11
.text:0000000000404E60                                         ; jumptable 000000000040361E case 11
.text:0000000000404E60                                         ; jumptable 00000000004036D0 case 11
.text:0000000000404E60                                         ; jumptable 000000000040376E case 11
.text:0000000000404E60                                         ; jumptable 0000000000403820 case 11
.text:0000000000404E60                                         ; jumptable 00000000004038BE case 11
.text:0000000000404E60                                         ; jumptable 0000000000403970 case 11
.text:0000000000404E60                                         ; jumptable 0000000000403A0E case 11
.text:0000000000404E60                                         ; jumptable 0000000000403AC0 case 11
.text:0000000000404E60                                         ; jumptable 0000000000403B5E case 11
.text:0000000000404E60                                         ; jumptable 0000000000403C10 case 11
.text:0000000000404E60                                         ; jumptable 0000000000403CAE case 11
.text:0000000000404E60                                         ; jumptable 0000000000403D65 case 11
.text:0000000000404E60                                         ; jumptable 0000000000403DFE case 11
.text:0000000000404E60                                         ; jumptable 0000000000403EB0 case 11
.text:0000000000404E60                                         ; jumptable 0000000000403F4E case 11
.text:0000000000404E60                                         ; jumptable
.text:0000000000404E64                 mov     edx, [rsi-4]
.text:0000000000404E67                 mov     [rdi-0Bh], rcx
.text:0000000000404E6B                 mov     [rdi-4], edx
.text:0000000000404E6E                 retn
.text:0000000000404E6E ; ---------------------------------------------------------------------------
.text:0000000000404E6F                 align 10h
.text:0000000000404E70
.text:0000000000404E70 loc_404E70:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404E70                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404E70                 mov     dx, [rsi-3]     ; jumptable 0000000000402E80 case 3
.text:0000000000404E70                                         ; jumptable 0000000000402FA6 case 19
.text:0000000000404E70                                         ; jumptable 000000000040306D case 3
.text:0000000000404E70                                         ; jumptable 000000000040316A case 3
.text:0000000000404E70                                         ; jumptable 00000000004031D4 case 19
.text:0000000000404E70                                         ; jumptable 0000000000403295 case 3
.text:0000000000404E70                                         ; jumptable 0000000000403384 case 3
.text:0000000000404E70                                         ; jumptable 000000000040574F case 3
.text:0000000000404E70                                         ; jumptable 000000000040581A case 3
.text:0000000000404E70                                         ; jumptable 0000000000405905 case 3
.text:0000000000404E70                                         ; jumptable 00000000004059C2 case 3
.text:0000000000404E70                                         ; jumptable 0000000000403430 case 3
.text:0000000000404E70                                         ; jumptable 00000000004034CE case 3
.text:0000000000404E70                                         ; jumptable 0000000000403580 case 3
.text:0000000000404E70                                         ; jumptable 000000000040361E case 3
.text:0000000000404E70                                         ; jumptable 00000000004036D0 case 3
.text:0000000000404E70                                         ; jumptable 000000000040376E case 3
.text:0000000000404E70                                         ; jumptable 0000000000403820 case 3
.text:0000000000404E70                                         ; jumptable 00000000004038BE case 3
.text:0000000000404E70                                         ; jumptable 0000000000403970 case 3
.text:0000000000404E70                                         ; jumptable 0000000000403A0E case 3
.text:0000000000404E70                                         ; jumptable 0000000000403AC0 case 3
.text:0000000000404E70                                         ; jumptable 0000000000403B5E case 3
.text:0000000000404E70                                         ; jumptable 0000000000403C10 case 3
.text:0000000000404E70                                         ; jumptable 0000000000403CAE case 3
.text:0000000000404E70                                         ; jumptable 0000000000403D65 case 3
.text:0000000000404E70                                         ; jumptable 0000000000403DFE case 3
.text:0000000000404E70                                         ; jumptable 0000000000403EB0 case 3
.text:0000000000404E70                                         ; jumptable 0000000000403F4E case 3
.text:0000000000404E70                                         ; jumptable 0000000000404000 case 3
.text:0000000000404E70                                         ; ju
.text:0000000000404E74                 mov     cx, [rsi-2]
.text:0000000000404E78                 mov     [rdi-3], dx
.text:0000000000404E7C                 mov     [rdi-2], cx
.text:0000000000404E80                 retn
.text:0000000000404E80 ; ---------------------------------------------------------------------------
.text:0000000000404E81                 align 10h
.text:0000000000404E90
.text:0000000000404E90 loc_404E90:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404E90                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404E90                 movdqu  xmm0, xmmword ptr [rsi-4Ch] ; jumptable 0000000000402E80 case 76
.text:0000000000404E90                                         ; jumptable 000000000040306D case 76
.text:0000000000404E90                                         ; jumptable 0000000000403295 case 76
.text:0000000000404E90                                         ; jumptable 000000000040574F case 76
.text:0000000000404E90                                         ; jumptable 000000000040581A case 76
.text:0000000000404E90                                         ; jumptable 0000000000405905 case 76
.text:0000000000404E90                                         ; jumptable 00000000004059C2 case 76
.text:0000000000404E90                                         ; jumptable 0000000000403430 case 76
.text:0000000000404E90                                         ; jumptable 00000000004034CE case 76
.text:0000000000404E90                                         ; jumptable 0000000000403580 case 76
.text:0000000000404E90                                         ; jumptable 000000000040361E case 76
.text:0000000000404E90                                         ; jumptable 00000000004036D0 case 76
.text:0000000000404E90                                         ; jumptable 000000000040376E case 76
.text:0000000000404E90                                         ; jumptable 0000000000403820 case 76
.text:0000000000404E90                                         ; jumptable 00000000004038BE case 76
.text:0000000000404E90                                         ; jumptable 0000000000403970 case 76
.text:0000000000404E90                                         ; jumptable 0000000000403A0E case 76
.text:0000000000404E90                                         ; jumptable 0000000000403AC0 case 76
.text:0000000000404E90                                         ; jumptable 0000000000403B5E case 76
.text:0000000000404E90                                         ; jumptable 0000000000403C10 case 76
.text:0000000000404E90                                         ; jumptable 0000000000403CAE case 76
.text:0000000000404E90                                         ; jumptable 0000000000403D65 case 76
.text:0000000000404E90                                         ; jumptable 0000000000403DFE case 76
.text:0000000000404E90                                         ; jumptable 0000000000403EB0 case 76
.text:0000000000404E90                                         ; jumptable 0000000000403F4E case 76
.text:0000000000404E90                                         ; jumptable 0000000000404000 case 76
.text:0000000000404E90                                         ; jumptable 000000000040409E case 76
.text:0000000000404E90                                         ; jumptable 0000000000404150 case 76
.text:0000000000404E90                                         ; jumptable 00000000004041EE case 76
.text:0000000000404E90                                         ; jumptable
.text:0000000000404E95                 movdqu  xmm1, xmmword ptr [rsi-3Ch]
.text:0000000000404E9A                 mov     r8, [rsi-2Ch]
.text:0000000000404E9E                 mov     r9, [rsi-24h]
.text:0000000000404EA2                 mov     r10, [rsi-1Ch]
.text:0000000000404EA6                 mov     r11, [rsi-14h]
.text:0000000000404EAA                 mov     rcx, [rsi-0Ch]
.text:0000000000404EAE                 mov     edx, [rsi-4]
.text:0000000000404EB1                 movdqu  xmmword ptr [rdi-4Ch], xmm0
.text:0000000000404EB6                 movdqu  xmmword ptr [rdi-3Ch], xmm1
.text:0000000000404EBB                 mov     [rdi-2Ch], r8
.text:0000000000404EBF                 mov     [rdi-24h], r9
.text:0000000000404EC3                 mov     [rdi-1Ch], r10
.text:0000000000404EC7                 mov     [rdi-14h], r11
.text:0000000000404ECB                 mov     [rdi-0Ch], rcx
.text:0000000000404ECF                 mov     [rdi-4], edx
.text:0000000000404ED2                 retn
.text:0000000000404ED2 ; ---------------------------------------------------------------------------
.text:0000000000404ED3                 align 20h
.text:0000000000404EE0
.text:0000000000404EE0 loc_404EE0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404EE0                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000404EE0                 movdqu  xmm0, xmmword ptr [rsi-44h] ; jumptable 0000000000402E80 case 68
.text:0000000000404EE0                                         ; jumptable 000000000040306D case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403295 case 68
.text:0000000000404EE0                                         ; jumptable 000000000040574F case 68
.text:0000000000404EE0                                         ; jumptable 000000000040581A case 68
.text:0000000000404EE0                                         ; jumptable 0000000000405905 case 68
.text:0000000000404EE0                                         ; jumptable 00000000004059C2 case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403430 case 68
.text:0000000000404EE0                                         ; jumptable 00000000004034CE case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403580 case 68
.text:0000000000404EE0                                         ; jumptable 000000000040361E case 68
.text:0000000000404EE0                                         ; jumptable 00000000004036D0 case 68
.text:0000000000404EE0                                         ; jumptable 000000000040376E case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403820 case 68
.text:0000000000404EE0                                         ; jumptable 00000000004038BE case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403970 case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403A0E case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403AC0 case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403B5E case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403C10 case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403CAE case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403D65 case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403DFE case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403EB0 case 68
.text:0000000000404EE0                                         ; jumptable 0000000000403F4E case 68
.text:0000000000404EE0                                         ; jumptable 0000000000404000 case 68
.text:0000000000404EE0                                         ; jumptable 000000000040409E case 68
.text:0000000000404EE0                                         ; jumptable 0000000000404150 case 68
.text:0000000000404EE0                                         ; jumptable 00000000004041EE case 68
.text:0000000000404EE0                                         ; jumptable
.text:0000000000404EE5                 movdqu  xmm1, xmmword ptr [rsi-34h]
.text:0000000000404EEA                 mov     r9, [rsi-24h]
.text:0000000000404EEE                 mov     r10, [rsi-1Ch]
.text:0000000000404EF2                 mov     r11, [rsi-14h]
.text:0000000000404EF6                 mov     rcx, [rsi-0Ch]
.text:0000000000404EFA                 mov     edx, [rsi-4]
.text:0000000000404EFD                 movdqu  xmmword ptr [rdi-44h], xmm0
.text:0000000000404F02                 movdqu  xmmword ptr [rdi-34h], xmm1
.text:0000000000404F07                 mov     [rdi-24h], r9
.text:0000000000404F0B                 mov     [rdi-1Ch], r10
.text:0000000000404F0F                 mov     [rdi-14h], r11
.text:0000000000404F13                 mov     [rdi-0Ch], rcx
.text:0000000000404F17                 mov     [rdi-4], edx
.text:0000000000404F1A                 retn
.text:0000000000404F1A ; ---------------------------------------------------------------------------
.text:0000000000404F1B                 align 20h
.text:0000000000404F20
.text:0000000000404F20 loc_404F20:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404F20                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404F20                 movdqu  xmm0, xmmword ptr [rsi-3Ch] ; jumptable 0000000000402E80 case 60
.text:0000000000404F20                                         ; jumptable 0000000000402FA6 case 76
.text:0000000000404F20                                         ; jumptable 000000000040306D case 60
.text:0000000000404F20                                         ; jumptable 00000000004031D4 case 76
.text:0000000000404F20                                         ; jumptable 0000000000403295 case 60
.text:0000000000404F20                                         ; jumptable 000000000040574F case 60
.text:0000000000404F20                                         ; jumptable 000000000040581A case 60
.text:0000000000404F20                                         ; jumptable 0000000000405905 case 60
.text:0000000000404F20                                         ; jumptable 00000000004059C2 case 60
.text:0000000000404F20                                         ; jumptable 0000000000403430 case 60
.text:0000000000404F20                                         ; jumptable 00000000004034CE case 60
.text:0000000000404F20                                         ; jumptable 0000000000403580 case 60
.text:0000000000404F20                                         ; jumptable 000000000040361E case 60
.text:0000000000404F20                                         ; jumptable 00000000004036D0 case 60
.text:0000000000404F20                                         ; jumptable 000000000040376E case 60
.text:0000000000404F20                                         ; jumptable 0000000000403820 case 60
.text:0000000000404F20                                         ; jumptable 00000000004038BE case 60
.text:0000000000404F20                                         ; jumptable 0000000000403970 case 60
.text:0000000000404F20                                         ; jumptable 0000000000403A0E case 60
.text:0000000000404F20                                         ; jumptable 0000000000403AC0 case 60
.text:0000000000404F20                                         ; jumptable 0000000000403B5E case 60
.text:0000000000404F20                                         ; jumptable 0000000000403C10 case 60
.text:0000000000404F20                                         ; jumptable 0000000000403CAE case 60
.text:0000000000404F20                                         ; jumptable 0000000000403D65 case 60
.text:0000000000404F20                                         ; jumptable 0000000000403DFE case 60
.text:0000000000404F20                                         ; jumptable 0000000000403EB0 case 60
.text:0000000000404F20                                         ; jumptable 0000000000403F4E case 60
.text:0000000000404F20                                         ; jumptable 0000000000404000 case 60
.text:0000000000404F20                                         ; jumptable 000000000040409E case 60
.text:0000000000404F20                                         ; jumptable
.text:0000000000404F25                 mov     r8, [rsi-2Ch]
.text:0000000000404F29                 mov     r9, [rsi-24h]
.text:0000000000404F2D                 mov     r10, [rsi-1Ch]
.text:0000000000404F31                 mov     r11, [rsi-14h]
.text:0000000000404F35                 mov     rcx, [rsi-0Ch]
.text:0000000000404F39                 mov     edx, [rsi-4]
.text:0000000000404F3C                 movdqu  xmmword ptr [rdi-3Ch], xmm0
.text:0000000000404F41                 mov     [rdi-2Ch], r8
.text:0000000000404F45                 mov     [rdi-24h], r9
.text:0000000000404F49                 mov     [rdi-1Ch], r10
.text:0000000000404F4D                 mov     [rdi-14h], r11
.text:0000000000404F51                 mov     [rdi-0Ch], rcx
.text:0000000000404F55                 mov     [rdi-4], edx
.text:0000000000404F58                 retn
.text:0000000000404F58 ; ---------------------------------------------------------------------------
.text:0000000000404F59                 align 20h
.text:0000000000404F60
.text:0000000000404F60 loc_404F60:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404F60                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404F60                 movdqu  xmm0, xmmword ptr [rsi-34h] ; jumptable 0000000000402E80 case 52
.text:0000000000404F60                                         ; jumptable 0000000000402FA6 case 68
.text:0000000000404F60                                         ; jumptable 000000000040306D case 52
.text:0000000000404F60                                         ; jumptable 00000000004031D4 case 68
.text:0000000000404F60                                         ; jumptable 0000000000403295 case 52
.text:0000000000404F60                                         ; jumptable 000000000040574F case 52
.text:0000000000404F60                                         ; jumptable 000000000040581A case 52
.text:0000000000404F60                                         ; jumptable 0000000000405905 case 52
.text:0000000000404F60                                         ; jumptable 00000000004059C2 case 52
.text:0000000000404F60                                         ; jumptable 0000000000403430 case 52
.text:0000000000404F60                                         ; jumptable 00000000004034CE case 52
.text:0000000000404F60                                         ; jumptable 0000000000403580 case 52
.text:0000000000404F60                                         ; jumptable 000000000040361E case 52
.text:0000000000404F60                                         ; jumptable 00000000004036D0 case 52
.text:0000000000404F60                                         ; jumptable 000000000040376E case 52
.text:0000000000404F60                                         ; jumptable 0000000000403820 case 52
.text:0000000000404F60                                         ; jumptable 00000000004038BE case 52
.text:0000000000404F60                                         ; jumptable 0000000000403970 case 52
.text:0000000000404F60                                         ; jumptable 0000000000403A0E case 52
.text:0000000000404F60                                         ; jumptable 0000000000403AC0 case 52
.text:0000000000404F60                                         ; jumptable 0000000000403B5E case 52
.text:0000000000404F60                                         ; jumptable 0000000000403C10 case 52
.text:0000000000404F60                                         ; jumptable 0000000000403CAE case 52
.text:0000000000404F60                                         ; jumptable 0000000000403D65 case 52
.text:0000000000404F60                                         ; jumptable 0000000000403DFE case 52
.text:0000000000404F60                                         ; jumptable 0000000000403EB0 case 52
.text:0000000000404F60                                         ; jumptable 0000000000403F4E case 52
.text:0000000000404F60                                         ; jumptable 0000000000404000 case 52
.text:0000000000404F60                                         ; jumptable 000000000040409E case 52
.text:0000000000404F60                                         ; jumptable
.text:0000000000404F65                 mov     r9, [rsi-24h]
.text:0000000000404F69                 mov     r10, [rsi-1Ch]
.text:0000000000404F6D                 mov     r11, [rsi-14h]
.text:0000000000404F71                 mov     rcx, [rsi-0Ch]
.text:0000000000404F75                 mov     edx, [rsi-4]
.text:0000000000404F78                 movdqu  xmmword ptr [rdi-34h], xmm0
.text:0000000000404F7D                 mov     [rdi-24h], r9
.text:0000000000404F81                 mov     [rdi-1Ch], r10
.text:0000000000404F85                 mov     [rdi-14h], r11
.text:0000000000404F89                 mov     [rdi-0Ch], rcx
.text:0000000000404F8D                 mov     [rdi-4], edx
.text:0000000000404F90                 retn
.text:0000000000404F90 ; ---------------------------------------------------------------------------
.text:0000000000404F91                 align 20h
.text:0000000000404FA0
.text:0000000000404FA0 loc_404FA0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404FA0                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404FA0                 mov     r8, [rsi-2Ch]   ; jumptable 0000000000402E80 case 44
.text:0000000000404FA0                                         ; jumptable 0000000000402FA6 case 60
.text:0000000000404FA0                                         ; jumptable 000000000040306D case 44
.text:0000000000404FA0                                         ; jumptable 00000000004031D4 case 60
.text:0000000000404FA0                                         ; jumptable 0000000000403295 case 44
.text:0000000000404FA0                                         ; jumptable 000000000040574F case 44
.text:0000000000404FA0                                         ; jumptable 000000000040581A case 44
.text:0000000000404FA0                                         ; jumptable 0000000000405905 case 44
.text:0000000000404FA0                                         ; jumptable 00000000004059C2 case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403430 case 44
.text:0000000000404FA0                                         ; jumptable 00000000004034CE case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403580 case 44
.text:0000000000404FA0                                         ; jumptable 000000000040361E case 44
.text:0000000000404FA0                                         ; jumptable 00000000004036D0 case 44
.text:0000000000404FA0                                         ; jumptable 000000000040376E case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403820 case 44
.text:0000000000404FA0                                         ; jumptable 00000000004038BE case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403970 case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403A0E case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403AC0 case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403B5E case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403C10 case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403CAE case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403D65 case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403DFE case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403EB0 case 44
.text:0000000000404FA0                                         ; jumptable 0000000000403F4E case 44
.text:0000000000404FA0                                         ; jumptable 0000000000404000 case 44
.text:0000000000404FA0                                         ; jumptable 000000000040409E case 44
.text:0000000000404FA0                                         ; jumptable
.text:0000000000404FA4                 mov     r9, [rsi-24h]
.text:0000000000404FA8                 mov     r10, [rsi-1Ch]
.text:0000000000404FAC                 mov     r11, [rsi-14h]
.text:0000000000404FB0                 mov     rcx, [rsi-0Ch]
.text:0000000000404FB4                 mov     edx, [rsi-4]
.text:0000000000404FB7                 mov     [rdi-2Ch], r8
.text:0000000000404FBB                 mov     [rdi-24h], r9
.text:0000000000404FBF                 mov     [rdi-1Ch], r10
.text:0000000000404FC3                 mov     [rdi-14h], r11
.text:0000000000404FC7                 mov     [rdi-0Ch], rcx
.text:0000000000404FCB                 mov     [rdi-4], edx
.text:0000000000404FCE                 retn
.text:0000000000404FCE ; ---------------------------------------------------------------------------
.text:0000000000404FCF                 align 10h
.text:0000000000404FD0
.text:0000000000404FD0 loc_404FD0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000404FD0                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000404FD0                 mov     r9, [rsi-24h]   ; jumptable 0000000000402E80 case 36
.text:0000000000404FD0                                         ; jumptable 0000000000402FA6 case 52
.text:0000000000404FD0                                         ; jumptable 000000000040306D case 36
.text:0000000000404FD0                                         ; jumptable 00000000004031D4 case 52
.text:0000000000404FD0                                         ; jumptable 0000000000403295 case 36
.text:0000000000404FD0                                         ; jumptable 000000000040574F case 36
.text:0000000000404FD0                                         ; jumptable 000000000040581A case 36
.text:0000000000404FD0                                         ; jumptable 0000000000405905 case 36
.text:0000000000404FD0                                         ; jumptable 00000000004059C2 case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403430 case 36
.text:0000000000404FD0                                         ; jumptable 00000000004034CE case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403580 case 36
.text:0000000000404FD0                                         ; jumptable 000000000040361E case 36
.text:0000000000404FD0                                         ; jumptable 00000000004036D0 case 36
.text:0000000000404FD0                                         ; jumptable 000000000040376E case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403820 case 36
.text:0000000000404FD0                                         ; jumptable 00000000004038BE case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403970 case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403A0E case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403AC0 case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403B5E case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403C10 case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403CAE case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403D65 case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403DFE case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403EB0 case 36
.text:0000000000404FD0                                         ; jumptable 0000000000403F4E case 36
.text:0000000000404FD0                                         ; jumptable 0000000000404000 case 36
.text:0000000000404FD0                                         ; jumptable 000000000040409E case 36
.text:0000000000404FD0                                         ; jumptable
.text:0000000000404FD4                 mov     r10, [rsi-1Ch]
.text:0000000000404FD8                 mov     r11, [rsi-14h]
.text:0000000000404FDC                 mov     rcx, [rsi-0Ch]
.text:0000000000404FE0                 mov     edx, [rsi-4]
.text:0000000000404FE3                 mov     [rdi-24h], r9
.text:0000000000404FE7                 mov     [rdi-1Ch], r10
.text:0000000000404FEB                 mov     [rdi-14h], r11
.text:0000000000404FEF                 mov     [rdi-0Ch], rcx
.text:0000000000404FF3                 mov     [rdi-4], edx
.text:0000000000404FF6                 retn
.text:0000000000404FF6 ; ---------------------------------------------------------------------------
.text:0000000000404FF7                 align 20h
.text:0000000000405000
.text:0000000000405000 loc_405000:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405000                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405000                 mov     r10, [rsi-1Ch]  ; jumptable 0000000000402E80 case 28
.text:0000000000405000                                         ; jumptable 0000000000402FA6 case 44
.text:0000000000405000                                         ; jumptable 000000000040306D case 28
.text:0000000000405000                                         ; jumptable 000000000040316A case 28
.text:0000000000405000                                         ; jumptable 00000000004031D4 case 44
.text:0000000000405000                                         ; jumptable 0000000000403295 case 28
.text:0000000000405000                                         ; jumptable 0000000000403384 case 28
.text:0000000000405000                                         ; jumptable 000000000040574F case 28
.text:0000000000405000                                         ; jumptable 000000000040581A case 28
.text:0000000000405000                                         ; jumptable 0000000000405905 case 28
.text:0000000000405000                                         ; jumptable 00000000004059C2 case 28
.text:0000000000405000                                         ; jumptable 0000000000403430 case 28
.text:0000000000405000                                         ; jumptable 00000000004034CE case 28
.text:0000000000405000                                         ; jumptable 0000000000403580 case 28
.text:0000000000405000                                         ; jumptable 000000000040361E case 28
.text:0000000000405000                                         ; jumptable 00000000004036D0 case 28
.text:0000000000405000                                         ; jumptable 000000000040376E case 28
.text:0000000000405000                                         ; jumptable 0000000000403820 case 28
.text:0000000000405000                                         ; jumptable 00000000004038BE case 28
.text:0000000000405000                                         ; jumptable 0000000000403970 case 28
.text:0000000000405000                                         ; jumptable 0000000000403A0E case 28
.text:0000000000405000                                         ; jumptable 0000000000403AC0 case 28
.text:0000000000405000                                         ; jumptable 0000000000403B5E case 28
.text:0000000000405000                                         ; jumptable 0000000000403C10 case 28
.text:0000000000405000                                         ; jumptable 0000000000403CAE case 28
.text:0000000000405000                                         ; jumptable 0000000000403D65 case 28
.text:0000000000405000                                         ; jumptable 0000000000403DFE case 28
.text:0000000000405000                                         ; jumptable 0000000000403EB0 case 28
.text:0000000000405000                                         ; jumptable 0000000000403F4E case 28
.text:0000000000405000                                         ; jumptable
.text:0000000000405004                 mov     r11, [rsi-14h]
.text:0000000000405008                 mov     rcx, [rsi-0Ch]
.text:000000000040500C                 mov     edx, [rsi-4]
.text:000000000040500F                 mov     [rdi-1Ch], r10
.text:0000000000405013                 mov     [rdi-14h], r11
.text:0000000000405017                 mov     [rdi-0Ch], rcx
.text:000000000040501B                 mov     [rdi-4], edx
.text:000000000040501E                 retn
.text:000000000040501E ; ---------------------------------------------------------------------------
.text:000000000040501F                 align 20h
.text:0000000000405020
.text:0000000000405020 loc_405020:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405020                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405020                 mov     r11, [rsi-14h]  ; jumptable 0000000000402E80 case 20
.text:0000000000405020                                         ; jumptable 0000000000402FA6 case 36
.text:0000000000405020                                         ; jumptable 000000000040306D case 20
.text:0000000000405020                                         ; jumptable 000000000040316A case 20
.text:0000000000405020                                         ; jumptable 00000000004031D4 case 36
.text:0000000000405020                                         ; jumptable 0000000000403295 case 20
.text:0000000000405020                                         ; jumptable 0000000000403384 case 20
.text:0000000000405020                                         ; jumptable 000000000040574F case 20
.text:0000000000405020                                         ; jumptable 000000000040581A case 20
.text:0000000000405020                                         ; jumptable 0000000000405905 case 20
.text:0000000000405020                                         ; jumptable 00000000004059C2 case 20
.text:0000000000405020                                         ; jumptable 0000000000403430 case 20
.text:0000000000405020                                         ; jumptable 00000000004034CE case 20
.text:0000000000405020                                         ; jumptable 0000000000403580 case 20
.text:0000000000405020                                         ; jumptable 000000000040361E case 20
.text:0000000000405020                                         ; jumptable 00000000004036D0 case 20
.text:0000000000405020                                         ; jumptable 000000000040376E case 20
.text:0000000000405020                                         ; jumptable 0000000000403820 case 20
.text:0000000000405020                                         ; jumptable 00000000004038BE case 20
.text:0000000000405020                                         ; jumptable 0000000000403970 case 20
.text:0000000000405020                                         ; jumptable 0000000000403A0E case 20
.text:0000000000405020                                         ; jumptable 0000000000403AC0 case 20
.text:0000000000405020                                         ; jumptable 0000000000403B5E case 20
.text:0000000000405020                                         ; jumptable 0000000000403C10 case 20
.text:0000000000405020                                         ; jumptable 0000000000403CAE case 20
.text:0000000000405020                                         ; jumptable 0000000000403D65 case 20
.text:0000000000405020                                         ; jumptable 0000000000403DFE case 20
.text:0000000000405020                                         ; jumptable 0000000000403EB0 case 20
.text:0000000000405020                                         ; jumptable 0000000000403F4E case 20
.text:0000000000405020                                         ; jumptable
.text:0000000000405024                 mov     rcx, [rsi-0Ch]
.text:0000000000405028                 mov     edx, [rsi-4]
.text:000000000040502B                 mov     [rdi-14h], r11
.text:000000000040502F                 mov     [rdi-0Ch], rcx
.text:0000000000405033                 mov     [rdi-4], edx
.text:0000000000405036                 retn
.text:0000000000405036 ; ---------------------------------------------------------------------------
.text:0000000000405037                 align 20h
.text:0000000000405040
.text:0000000000405040 loc_405040:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405040                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405040                 mov     rcx, [rsi-0Ch]  ; jumptable 0000000000402E80 case 12
.text:0000000000405040                                         ; jumptable 0000000000402FA6 case 28
.text:0000000000405040                                         ; jumptable 000000000040306D case 12
.text:0000000000405040                                         ; jumptable 000000000040316A case 12
.text:0000000000405040                                         ; jumptable 00000000004031D4 case 28
.text:0000000000405040                                         ; jumptable 0000000000403295 case 12
.text:0000000000405040                                         ; jumptable 0000000000403384 case 12
.text:0000000000405040                                         ; jumptable 000000000040574F case 12
.text:0000000000405040                                         ; jumptable 000000000040581A case 12
.text:0000000000405040                                         ; jumptable 0000000000405905 case 12
.text:0000000000405040                                         ; jumptable 00000000004059C2 case 12
.text:0000000000405040                                         ; jumptable 0000000000403430 case 12
.text:0000000000405040                                         ; jumptable 00000000004034CE case 12
.text:0000000000405040                                         ; jumptable 0000000000403580 case 12
.text:0000000000405040                                         ; jumptable 000000000040361E case 12
.text:0000000000405040                                         ; jumptable 00000000004036D0 case 12
.text:0000000000405040                                         ; jumptable 000000000040376E case 12
.text:0000000000405040                                         ; jumptable 0000000000403820 case 12
.text:0000000000405040                                         ; jumptable 00000000004038BE case 12
.text:0000000000405040                                         ; jumptable 0000000000403970 case 12
.text:0000000000405040                                         ; jumptable 0000000000403A0E case 12
.text:0000000000405040                                         ; jumptable 0000000000403AC0 case 12
.text:0000000000405040                                         ; jumptable 0000000000403B5E case 12
.text:0000000000405040                                         ; jumptable 0000000000403C10 case 12
.text:0000000000405040                                         ; jumptable 0000000000403CAE case 12
.text:0000000000405040                                         ; jumptable 0000000000403D65 case 12
.text:0000000000405040                                         ; jumptable 0000000000403DFE case 12
.text:0000000000405040                                         ; jumptable 0000000000403EB0 case 12
.text:0000000000405040                                         ; jumptable 0000000000403F4E case 12
.text:0000000000405040                                         ; jumptable
.text:0000000000405044                 mov     edx, [rsi-4]
.text:0000000000405047                 mov     [rdi-0Ch], rcx
.text:000000000040504B                 mov     [rdi-4], edx
.text:000000000040504E                 retn
.text:000000000040504E ; ---------------------------------------------------------------------------
.text:000000000040504F                 align 10h
.text:0000000000405050
.text:0000000000405050 loc_405050:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405050                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405050                 mov     edx, [rsi-4]    ; jumptable 0000000000402E80 case 4
.text:0000000000405050                                         ; jumptable 0000000000402FA6 case 20
.text:0000000000405050                                         ; jumptable 000000000040306D case 4
.text:0000000000405050                                         ; jumptable 000000000040316A case 4
.text:0000000000405050                                         ; jumptable 00000000004031D4 case 20
.text:0000000000405050                                         ; jumptable 0000000000403295 case 4
.text:0000000000405050                                         ; jumptable 0000000000403384 case 4
.text:0000000000405050                                         ; jumptable 000000000040574F case 4
.text:0000000000405050                                         ; jumptable 000000000040581A case 4
.text:0000000000405050                                         ; jumptable 0000000000405905 case 4
.text:0000000000405050                                         ; jumptable 00000000004059C2 case 4
.text:0000000000405050                                         ; jumptable 0000000000403430 case 4
.text:0000000000405050                                         ; jumptable 00000000004034CE case 4
.text:0000000000405050                                         ; jumptable 0000000000403580 case 4
.text:0000000000405050                                         ; jumptable 000000000040361E case 4
.text:0000000000405050                                         ; jumptable 00000000004036D0 case 4
.text:0000000000405050                                         ; jumptable 000000000040376E case 4
.text:0000000000405050                                         ; jumptable 0000000000403820 case 4
.text:0000000000405050                                         ; jumptable 00000000004038BE case 4
.text:0000000000405050                                         ; jumptable 0000000000403970 case 4
.text:0000000000405050                                         ; jumptable 0000000000403A0E case 4
.text:0000000000405050                                         ; jumptable 0000000000403AC0 case 4
.text:0000000000405050                                         ; jumptable 0000000000403B5E case 4
.text:0000000000405050                                         ; jumptable 0000000000403C10 case 4
.text:0000000000405050                                         ; jumptable 0000000000403CAE case 4
.text:0000000000405050                                         ; jumptable 0000000000403D65 case 4
.text:0000000000405050                                         ; jumptable 0000000000403DFE case 4
.text:0000000000405050                                         ; jumptable 0000000000403EB0 case 4
.text:0000000000405050                                         ; jumptable 0000000000403F4E case 4
.text:0000000000405050                                         ; jumptable 0000000000404000 case 4
.text:0000000000405050                                         ; ju
.text:0000000000405053                 mov     [rdi-4], edx
.text:0000000000405056                 retn
.text:0000000000405056 ; ---------------------------------------------------------------------------
.text:0000000000405057                 align 20h
.text:0000000000405060
.text:0000000000405060 loc_405060:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405060                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000405060                 movdqu  xmm0, xmmword ptr [rsi-4Dh] ; jumptable 0000000000402E80 case 77
.text:0000000000405060                                         ; jumptable 000000000040306D case 77
.text:0000000000405060                                         ; jumptable 0000000000403295 case 77
.text:0000000000405060                                         ; jumptable 000000000040574F case 77
.text:0000000000405060                                         ; jumptable 000000000040581A case 77
.text:0000000000405060                                         ; jumptable 0000000000405905 case 77
.text:0000000000405060                                         ; jumptable 00000000004059C2 case 77
.text:0000000000405060                                         ; jumptable 0000000000403430 case 77
.text:0000000000405060                                         ; jumptable 00000000004034CE case 77
.text:0000000000405060                                         ; jumptable 0000000000403580 case 77
.text:0000000000405060                                         ; jumptable 000000000040361E case 77
.text:0000000000405060                                         ; jumptable 00000000004036D0 case 77
.text:0000000000405060                                         ; jumptable 000000000040376E case 77
.text:0000000000405060                                         ; jumptable 0000000000403820 case 77
.text:0000000000405060                                         ; jumptable 00000000004038BE case 77
.text:0000000000405060                                         ; jumptable 0000000000403970 case 77
.text:0000000000405060                                         ; jumptable 0000000000403A0E case 77
.text:0000000000405060                                         ; jumptable 0000000000403AC0 case 77
.text:0000000000405060                                         ; jumptable 0000000000403B5E case 77
.text:0000000000405060                                         ; jumptable 0000000000403C10 case 77
.text:0000000000405060                                         ; jumptable 0000000000403CAE case 77
.text:0000000000405060                                         ; jumptable 0000000000403D65 case 77
.text:0000000000405060                                         ; jumptable 0000000000403DFE case 77
.text:0000000000405060                                         ; jumptable 0000000000403EB0 case 77
.text:0000000000405060                                         ; jumptable 0000000000403F4E case 77
.text:0000000000405060                                         ; jumptable 0000000000404000 case 77
.text:0000000000405060                                         ; jumptable 000000000040409E case 77
.text:0000000000405060                                         ; jumptable 0000000000404150 case 77
.text:0000000000405060                                         ; jumptable 00000000004041EE case 77
.text:0000000000405060                                         ; jumptable
.text:0000000000405065                 movdqu  xmm1, xmmword ptr [rsi-3Dh]
.text:000000000040506A                 mov     r8, [rsi-2Dh]
.text:000000000040506E                 mov     r9, [rsi-25h]
.text:0000000000405072                 mov     r10, [rsi-1Dh]
.text:0000000000405076                 mov     r11, [rsi-15h]
.text:000000000040507A                 mov     rcx, [rsi-0Dh]
.text:000000000040507E                 mov     rdx, [rsi-8]
.text:0000000000405082                 movdqu  xmmword ptr [rdi-4Dh], xmm0
.text:0000000000405087                 movdqu  xmmword ptr [rdi-3Dh], xmm1
.text:000000000040508C                 mov     [rdi-2Dh], r8
.text:0000000000405090                 mov     [rdi-25h], r9
.text:0000000000405094                 mov     [rdi-1Dh], r10
.text:0000000000405098                 mov     [rdi-15h], r11
.text:000000000040509C                 mov     [rdi-0Dh], rcx
.text:00000000004050A0                 mov     [rdi-8], rdx
.text:00000000004050A4                 retn
.text:00000000004050A4 ; ---------------------------------------------------------------------------
.text:00000000004050A5                 align 10h
.text:00000000004050B0
.text:00000000004050B0 loc_4050B0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004050B0                                         ; __intel_ssse3_memmove+21D↑j ...
.text:00000000004050B0                 movdqu  xmm0, xmmword ptr [rsi-45h] ; jumptable 0000000000402E80 case 69
.text:00000000004050B0                                         ; jumptable 000000000040306D case 69
.text:00000000004050B0                                         ; jumptable 0000000000403295 case 69
.text:00000000004050B0                                         ; jumptable 000000000040574F case 69
.text:00000000004050B0                                         ; jumptable 000000000040581A case 69
.text:00000000004050B0                                         ; jumptable 0000000000405905 case 69
.text:00000000004050B0                                         ; jumptable 00000000004059C2 case 69
.text:00000000004050B0                                         ; jumptable 0000000000403430 case 69
.text:00000000004050B0                                         ; jumptable 00000000004034CE case 69
.text:00000000004050B0                                         ; jumptable 0000000000403580 case 69
.text:00000000004050B0                                         ; jumptable 000000000040361E case 69
.text:00000000004050B0                                         ; jumptable 00000000004036D0 case 69
.text:00000000004050B0                                         ; jumptable 000000000040376E case 69
.text:00000000004050B0                                         ; jumptable 0000000000403820 case 69
.text:00000000004050B0                                         ; jumptable 00000000004038BE case 69
.text:00000000004050B0                                         ; jumptable 0000000000403970 case 69
.text:00000000004050B0                                         ; jumptable 0000000000403A0E case 69
.text:00000000004050B0                                         ; jumptable 0000000000403AC0 case 69
.text:00000000004050B0                                         ; jumptable 0000000000403B5E case 69
.text:00000000004050B0                                         ; jumptable 0000000000403C10 case 69
.text:00000000004050B0                                         ; jumptable 0000000000403CAE case 69
.text:00000000004050B0                                         ; jumptable 0000000000403D65 case 69
.text:00000000004050B0                                         ; jumptable 0000000000403DFE case 69
.text:00000000004050B0                                         ; jumptable 0000000000403EB0 case 69
.text:00000000004050B0                                         ; jumptable 0000000000403F4E case 69
.text:00000000004050B0                                         ; jumptable 0000000000404000 case 69
.text:00000000004050B0                                         ; jumptable 000000000040409E case 69
.text:00000000004050B0                                         ; jumptable 0000000000404150 case 69
.text:00000000004050B0                                         ; jumptable 00000000004041EE case 69
.text:00000000004050B0                                         ; jumptable
.text:00000000004050B5                 movdqu  xmm1, xmmword ptr [rsi-35h]
.text:00000000004050BA                 mov     r9, [rsi-25h]
.text:00000000004050BE                 mov     r10, [rsi-1Dh]
.text:00000000004050C2                 mov     r11, [rsi-15h]
.text:00000000004050C6                 mov     rcx, [rsi-0Dh]
.text:00000000004050CA                 mov     rdx, [rsi-8]
.text:00000000004050CE                 movdqu  xmmword ptr [rdi-45h], xmm0
.text:00000000004050D3                 movdqu  xmmword ptr [rdi-35h], xmm1
.text:00000000004050D8                 mov     [rdi-25h], r9
.text:00000000004050DC                 mov     [rdi-1Dh], r10
.text:00000000004050E0                 mov     [rdi-15h], r11
.text:00000000004050E4                 mov     [rdi-0Dh], rcx
.text:00000000004050E8                 mov     [rdi-8], rdx
.text:00000000004050EC                 retn
.text:00000000004050EC ; ---------------------------------------------------------------------------
.text:00000000004050ED                 align 10h
.text:00000000004050F0
.text:00000000004050F0 loc_4050F0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004050F0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004050F0                 movdqu  xmm0, xmmword ptr [rsi-3Dh] ; jumptable 0000000000402E80 case 61
.text:00000000004050F0                                         ; jumptable 0000000000402FA6 case 77
.text:00000000004050F0                                         ; jumptable 000000000040306D case 61
.text:00000000004050F0                                         ; jumptable 00000000004031D4 case 77
.text:00000000004050F0                                         ; jumptable 0000000000403295 case 61
.text:00000000004050F0                                         ; jumptable 000000000040574F case 61
.text:00000000004050F0                                         ; jumptable 000000000040581A case 61
.text:00000000004050F0                                         ; jumptable 0000000000405905 case 61
.text:00000000004050F0                                         ; jumptable 00000000004059C2 case 61
.text:00000000004050F0                                         ; jumptable 0000000000403430 case 61
.text:00000000004050F0                                         ; jumptable 00000000004034CE case 61
.text:00000000004050F0                                         ; jumptable 0000000000403580 case 61
.text:00000000004050F0                                         ; jumptable 000000000040361E case 61
.text:00000000004050F0                                         ; jumptable 00000000004036D0 case 61
.text:00000000004050F0                                         ; jumptable 000000000040376E case 61
.text:00000000004050F0                                         ; jumptable 0000000000403820 case 61
.text:00000000004050F0                                         ; jumptable 00000000004038BE case 61
.text:00000000004050F0                                         ; jumptable 0000000000403970 case 61
.text:00000000004050F0                                         ; jumptable 0000000000403A0E case 61
.text:00000000004050F0                                         ; jumptable 0000000000403AC0 case 61
.text:00000000004050F0                                         ; jumptable 0000000000403B5E case 61
.text:00000000004050F0                                         ; jumptable 0000000000403C10 case 61
.text:00000000004050F0                                         ; jumptable 0000000000403CAE case 61
.text:00000000004050F0                                         ; jumptable 0000000000403D65 case 61
.text:00000000004050F0                                         ; jumptable 0000000000403DFE case 61
.text:00000000004050F0                                         ; jumptable 0000000000403EB0 case 61
.text:00000000004050F0                                         ; jumptable 0000000000403F4E case 61
.text:00000000004050F0                                         ; jumptable 0000000000404000 case 61
.text:00000000004050F0                                         ; jumptable 000000000040409E case 61
.text:00000000004050F0                                         ; jumptable
.text:00000000004050F5                 mov     r8, [rsi-2Dh]
.text:00000000004050F9                 mov     r9, [rsi-25h]
.text:00000000004050FD                 mov     r10, [rsi-1Dh]
.text:0000000000405101                 mov     r11, [rsi-15h]
.text:0000000000405105                 mov     rcx, [rsi-0Dh]
.text:0000000000405109                 mov     rdx, [rsi-8]
.text:000000000040510D                 movdqu  xmmword ptr [rdi-3Dh], xmm0
.text:0000000000405112                 mov     [rdi-2Dh], r8
.text:0000000000405116                 mov     [rdi-25h], r9
.text:000000000040511A                 mov     [rdi-1Dh], r10
.text:000000000040511E                 mov     [rdi-15h], r11
.text:0000000000405122                 mov     [rdi-0Dh], rcx
.text:0000000000405126                 mov     [rdi-8], rdx
.text:000000000040512A                 retn
.text:000000000040512A ; ---------------------------------------------------------------------------
.text:000000000040512B                 align 10h
.text:0000000000405130
.text:0000000000405130 loc_405130:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405130                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405130                 movdqu  xmm0, xmmword ptr [rsi-35h] ; jumptable 0000000000402E80 case 53
.text:0000000000405130                                         ; jumptable 0000000000402FA6 case 69
.text:0000000000405130                                         ; jumptable 000000000040306D case 53
.text:0000000000405130                                         ; jumptable 00000000004031D4 case 69
.text:0000000000405130                                         ; jumptable 0000000000403295 case 53
.text:0000000000405130                                         ; jumptable 000000000040574F case 53
.text:0000000000405130                                         ; jumptable 000000000040581A case 53
.text:0000000000405130                                         ; jumptable 0000000000405905 case 53
.text:0000000000405130                                         ; jumptable 00000000004059C2 case 53
.text:0000000000405130                                         ; jumptable 0000000000403430 case 53
.text:0000000000405130                                         ; jumptable 00000000004034CE case 53
.text:0000000000405130                                         ; jumptable 0000000000403580 case 53
.text:0000000000405130                                         ; jumptable 000000000040361E case 53
.text:0000000000405130                                         ; jumptable 00000000004036D0 case 53
.text:0000000000405130                                         ; jumptable 000000000040376E case 53
.text:0000000000405130                                         ; jumptable 0000000000403820 case 53
.text:0000000000405130                                         ; jumptable 00000000004038BE case 53
.text:0000000000405130                                         ; jumptable 0000000000403970 case 53
.text:0000000000405130                                         ; jumptable 0000000000403A0E case 53
.text:0000000000405130                                         ; jumptable 0000000000403AC0 case 53
.text:0000000000405130                                         ; jumptable 0000000000403B5E case 53
.text:0000000000405130                                         ; jumptable 0000000000403C10 case 53
.text:0000000000405130                                         ; jumptable 0000000000403CAE case 53
.text:0000000000405130                                         ; jumptable 0000000000403D65 case 53
.text:0000000000405130                                         ; jumptable 0000000000403DFE case 53
.text:0000000000405130                                         ; jumptable 0000000000403EB0 case 53
.text:0000000000405130                                         ; jumptable 0000000000403F4E case 53
.text:0000000000405130                                         ; jumptable 0000000000404000 case 53
.text:0000000000405130                                         ; jumptable 000000000040409E case 53
.text:0000000000405130                                         ; jumptable
.text:0000000000405135                 mov     r8, [rsi-2Dh]
.text:0000000000405139                 mov     r9, [rsi-25h]
.text:000000000040513D                 mov     r10, [rsi-1Dh]
.text:0000000000405141                 mov     r11, [rsi-15h]
.text:0000000000405145                 mov     rcx, [rsi-0Dh]
.text:0000000000405149                 mov     rdx, [rsi-8]
.text:000000000040514D                 movdqu  xmmword ptr [rdi-35h], xmm0
.text:0000000000405152                 mov     [rdi-25h], r9
.text:0000000000405156                 mov     [rdi-1Dh], r10
.text:000000000040515A                 mov     [rdi-15h], r11
.text:000000000040515E                 mov     [rdi-0Dh], rcx
.text:0000000000405162                 mov     [rdi-8], rdx
.text:0000000000405166                 retn
.text:0000000000405166 ; ---------------------------------------------------------------------------
.text:0000000000405167                 align 10h
.text:0000000000405170
.text:0000000000405170 loc_405170:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405170                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405170                 mov     r8, [rsi-2Dh]   ; jumptable 0000000000402E80 case 45
.text:0000000000405170                                         ; jumptable 0000000000402FA6 case 61
.text:0000000000405170                                         ; jumptable 000000000040306D case 45
.text:0000000000405170                                         ; jumptable 00000000004031D4 case 61
.text:0000000000405170                                         ; jumptable 0000000000403295 case 45
.text:0000000000405170                                         ; jumptable 000000000040574F case 45
.text:0000000000405170                                         ; jumptable 000000000040581A case 45
.text:0000000000405170                                         ; jumptable 0000000000405905 case 45
.text:0000000000405170                                         ; jumptable 00000000004059C2 case 45
.text:0000000000405170                                         ; jumptable 0000000000403430 case 45
.text:0000000000405170                                         ; jumptable 00000000004034CE case 45
.text:0000000000405170                                         ; jumptable 0000000000403580 case 45
.text:0000000000405170                                         ; jumptable 000000000040361E case 45
.text:0000000000405170                                         ; jumptable 00000000004036D0 case 45
.text:0000000000405170                                         ; jumptable 000000000040376E case 45
.text:0000000000405170                                         ; jumptable 0000000000403820 case 45
.text:0000000000405170                                         ; jumptable 00000000004038BE case 45
.text:0000000000405170                                         ; jumptable 0000000000403970 case 45
.text:0000000000405170                                         ; jumptable 0000000000403A0E case 45
.text:0000000000405170                                         ; jumptable 0000000000403AC0 case 45
.text:0000000000405170                                         ; jumptable 0000000000403B5E case 45
.text:0000000000405170                                         ; jumptable 0000000000403C10 case 45
.text:0000000000405170                                         ; jumptable 0000000000403CAE case 45
.text:0000000000405170                                         ; jumptable 0000000000403D65 case 45
.text:0000000000405170                                         ; jumptable 0000000000403DFE case 45
.text:0000000000405170                                         ; jumptable 0000000000403EB0 case 45
.text:0000000000405170                                         ; jumptable 0000000000403F4E case 45
.text:0000000000405170                                         ; jumptable 0000000000404000 case 45
.text:0000000000405170                                         ; jumptable 000000000040409E case 45
.text:0000000000405170                                         ; jumptable
.text:0000000000405174                 mov     r9, [rsi-25h]
.text:0000000000405178                 mov     r10, [rsi-1Dh]
.text:000000000040517C                 mov     r11, [rsi-15h]
.text:0000000000405180                 mov     rcx, [rsi-0Dh]
.text:0000000000405184                 mov     rdx, [rsi-8]
.text:0000000000405188                 mov     [rdi-2Dh], r8
.text:000000000040518C                 mov     [rdi-25h], r9
.text:0000000000405190                 mov     [rdi-1Dh], r10
.text:0000000000405194                 mov     [rdi-15h], r11
.text:0000000000405198                 mov     [rdi-0Dh], rcx
.text:000000000040519C                 mov     [rdi-8], rdx
.text:00000000004051A0                 retn
.text:00000000004051A0 ; ---------------------------------------------------------------------------
.text:00000000004051A1                 align 10h
.text:00000000004051B0
.text:00000000004051B0 loc_4051B0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004051B0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004051B0                 mov     r9, [rsi-25h]   ; jumptable 0000000000402E80 case 37
.text:00000000004051B0                                         ; jumptable 0000000000402FA6 case 53
.text:00000000004051B0                                         ; jumptable 000000000040306D case 37
.text:00000000004051B0                                         ; jumptable 00000000004031D4 case 53
.text:00000000004051B0                                         ; jumptable 0000000000403295 case 37
.text:00000000004051B0                                         ; jumptable 000000000040574F case 37
.text:00000000004051B0                                         ; jumptable 000000000040581A case 37
.text:00000000004051B0                                         ; jumptable 0000000000405905 case 37
.text:00000000004051B0                                         ; jumptable 00000000004059C2 case 37
.text:00000000004051B0                                         ; jumptable 0000000000403430 case 37
.text:00000000004051B0                                         ; jumptable 00000000004034CE case 37
.text:00000000004051B0                                         ; jumptable 0000000000403580 case 37
.text:00000000004051B0                                         ; jumptable 000000000040361E case 37
.text:00000000004051B0                                         ; jumptable 00000000004036D0 case 37
.text:00000000004051B0                                         ; jumptable 000000000040376E case 37
.text:00000000004051B0                                         ; jumptable 0000000000403820 case 37
.text:00000000004051B0                                         ; jumptable 00000000004038BE case 37
.text:00000000004051B0                                         ; jumptable 0000000000403970 case 37
.text:00000000004051B0                                         ; jumptable 0000000000403A0E case 37
.text:00000000004051B0                                         ; jumptable 0000000000403AC0 case 37
.text:00000000004051B0                                         ; jumptable 0000000000403B5E case 37
.text:00000000004051B0                                         ; jumptable 0000000000403C10 case 37
.text:00000000004051B0                                         ; jumptable 0000000000403CAE case 37
.text:00000000004051B0                                         ; jumptable 0000000000403D65 case 37
.text:00000000004051B0                                         ; jumptable 0000000000403DFE case 37
.text:00000000004051B0                                         ; jumptable 0000000000403EB0 case 37
.text:00000000004051B0                                         ; jumptable 0000000000403F4E case 37
.text:00000000004051B0                                         ; jumptable 0000000000404000 case 37
.text:00000000004051B0                                         ; jumptable 000000000040409E case 37
.text:00000000004051B0                                         ; jumptable
.text:00000000004051B4                 mov     r10, [rsi-1Dh]
.text:00000000004051B8                 mov     r11, [rsi-15h]
.text:00000000004051BC                 mov     rcx, [rsi-0Dh]
.text:00000000004051C0                 mov     rdx, [rsi-8]
.text:00000000004051C4                 mov     [rdi-25h], r9
.text:00000000004051C8                 mov     [rdi-1Dh], r10
.text:00000000004051CC                 mov     [rdi-15h], r11
.text:00000000004051D0                 mov     [rdi-0Dh], rcx
.text:00000000004051D4                 mov     [rdi-8], rdx
.text:00000000004051D8                 retn
.text:00000000004051D8 ; ---------------------------------------------------------------------------
.text:00000000004051D9                 align 20h
.text:00000000004051E0
.text:00000000004051E0 loc_4051E0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004051E0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004051E0                 mov     r10, [rsi-1Dh]  ; jumptable 0000000000402E80 case 29
.text:00000000004051E0                                         ; jumptable 0000000000402FA6 case 45
.text:00000000004051E0                                         ; jumptable 000000000040306D case 29
.text:00000000004051E0                                         ; jumptable 000000000040316A case 29
.text:00000000004051E0                                         ; jumptable 00000000004031D4 case 45
.text:00000000004051E0                                         ; jumptable 0000000000403295 case 29
.text:00000000004051E0                                         ; jumptable 0000000000403384 case 29
.text:00000000004051E0                                         ; jumptable 000000000040574F case 29
.text:00000000004051E0                                         ; jumptable 000000000040581A case 29
.text:00000000004051E0                                         ; jumptable 0000000000405905 case 29
.text:00000000004051E0                                         ; jumptable 00000000004059C2 case 29
.text:00000000004051E0                                         ; jumptable 0000000000403430 case 29
.text:00000000004051E0                                         ; jumptable 00000000004034CE case 29
.text:00000000004051E0                                         ; jumptable 0000000000403580 case 29
.text:00000000004051E0                                         ; jumptable 000000000040361E case 29
.text:00000000004051E0                                         ; jumptable 00000000004036D0 case 29
.text:00000000004051E0                                         ; jumptable 000000000040376E case 29
.text:00000000004051E0                                         ; jumptable 0000000000403820 case 29
.text:00000000004051E0                                         ; jumptable 00000000004038BE case 29
.text:00000000004051E0                                         ; jumptable 0000000000403970 case 29
.text:00000000004051E0                                         ; jumptable 0000000000403A0E case 29
.text:00000000004051E0                                         ; jumptable 0000000000403AC0 case 29
.text:00000000004051E0                                         ; jumptable 0000000000403B5E case 29
.text:00000000004051E0                                         ; jumptable 0000000000403C10 case 29
.text:00000000004051E0                                         ; jumptable 0000000000403CAE case 29
.text:00000000004051E0                                         ; jumptable 0000000000403D65 case 29
.text:00000000004051E0                                         ; jumptable 0000000000403DFE case 29
.text:00000000004051E0                                         ; jumptable 0000000000403EB0 case 29
.text:00000000004051E0                                         ; jumptable 0000000000403F4E case 29
.text:00000000004051E0                                         ; jumptable
.text:00000000004051E4                 mov     r11, [rsi-15h]
.text:00000000004051E8                 mov     rcx, [rsi-0Dh]
.text:00000000004051EC                 mov     rdx, [rsi-8]
.text:00000000004051F0                 mov     [rdi-1Dh], r10
.text:00000000004051F4                 mov     [rdi-15h], r11
.text:00000000004051F8                 mov     [rdi-0Dh], rcx
.text:00000000004051FC                 mov     [rdi-8], rdx
.text:0000000000405200                 retn
.text:0000000000405200 ; ---------------------------------------------------------------------------
.text:0000000000405201                 align 10h
.text:0000000000405210
.text:0000000000405210 loc_405210:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405210                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405210                 mov     r11, [rsi-15h]  ; jumptable 0000000000402E80 case 21
.text:0000000000405210                                         ; jumptable 0000000000402FA6 case 37
.text:0000000000405210                                         ; jumptable 000000000040306D case 21
.text:0000000000405210                                         ; jumptable 000000000040316A case 21
.text:0000000000405210                                         ; jumptable 00000000004031D4 case 37
.text:0000000000405210                                         ; jumptable 0000000000403295 case 21
.text:0000000000405210                                         ; jumptable 0000000000403384 case 21
.text:0000000000405210                                         ; jumptable 000000000040574F case 21
.text:0000000000405210                                         ; jumptable 000000000040581A case 21
.text:0000000000405210                                         ; jumptable 0000000000405905 case 21
.text:0000000000405210                                         ; jumptable 00000000004059C2 case 21
.text:0000000000405210                                         ; jumptable 0000000000403430 case 21
.text:0000000000405210                                         ; jumptable 00000000004034CE case 21
.text:0000000000405210                                         ; jumptable 0000000000403580 case 21
.text:0000000000405210                                         ; jumptable 000000000040361E case 21
.text:0000000000405210                                         ; jumptable 00000000004036D0 case 21
.text:0000000000405210                                         ; jumptable 000000000040376E case 21
.text:0000000000405210                                         ; jumptable 0000000000403820 case 21
.text:0000000000405210                                         ; jumptable 00000000004038BE case 21
.text:0000000000405210                                         ; jumptable 0000000000403970 case 21
.text:0000000000405210                                         ; jumptable 0000000000403A0E case 21
.text:0000000000405210                                         ; jumptable 0000000000403AC0 case 21
.text:0000000000405210                                         ; jumptable 0000000000403B5E case 21
.text:0000000000405210                                         ; jumptable 0000000000403C10 case 21
.text:0000000000405210                                         ; jumptable 0000000000403CAE case 21
.text:0000000000405210                                         ; jumptable 0000000000403D65 case 21
.text:0000000000405210                                         ; jumptable 0000000000403DFE case 21
.text:0000000000405210                                         ; jumptable 0000000000403EB0 case 21
.text:0000000000405210                                         ; jumptable 0000000000403F4E case 21
.text:0000000000405210                                         ; jumptable
.text:0000000000405214                 mov     rcx, [rsi-0Dh]
.text:0000000000405218                 mov     rdx, [rsi-8]
.text:000000000040521C                 mov     [rdi-15h], r11
.text:0000000000405220                 mov     [rdi-0Dh], rcx
.text:0000000000405224                 mov     [rdi-8], rdx
.text:0000000000405228                 retn
.text:0000000000405228 ; ---------------------------------------------------------------------------
.text:0000000000405229                 align 10h
.text:0000000000405230
.text:0000000000405230 loc_405230:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405230                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405230                 mov     rcx, [rsi-0Dh]  ; jumptable 0000000000402E80 case 13
.text:0000000000405230                                         ; jumptable 0000000000402FA6 case 29
.text:0000000000405230                                         ; jumptable 000000000040306D case 13
.text:0000000000405230                                         ; jumptable 000000000040316A case 13
.text:0000000000405230                                         ; jumptable 00000000004031D4 case 29
.text:0000000000405230                                         ; jumptable 0000000000403295 case 13
.text:0000000000405230                                         ; jumptable 0000000000403384 case 13
.text:0000000000405230                                         ; jumptable 000000000040574F case 13
.text:0000000000405230                                         ; jumptable 000000000040581A case 13
.text:0000000000405230                                         ; jumptable 0000000000405905 case 13
.text:0000000000405230                                         ; jumptable 00000000004059C2 case 13
.text:0000000000405230                                         ; jumptable 0000000000403430 case 13
.text:0000000000405230                                         ; jumptable 00000000004034CE case 13
.text:0000000000405230                                         ; jumptable 0000000000403580 case 13
.text:0000000000405230                                         ; jumptable 000000000040361E case 13
.text:0000000000405230                                         ; jumptable 00000000004036D0 case 13
.text:0000000000405230                                         ; jumptable 000000000040376E case 13
.text:0000000000405230                                         ; jumptable 0000000000403820 case 13
.text:0000000000405230                                         ; jumptable 00000000004038BE case 13
.text:0000000000405230                                         ; jumptable 0000000000403970 case 13
.text:0000000000405230                                         ; jumptable 0000000000403A0E case 13
.text:0000000000405230                                         ; jumptable 0000000000403AC0 case 13
.text:0000000000405230                                         ; jumptable 0000000000403B5E case 13
.text:0000000000405230                                         ; jumptable 0000000000403C10 case 13
.text:0000000000405230                                         ; jumptable 0000000000403CAE case 13
.text:0000000000405230                                         ; jumptable 0000000000403D65 case 13
.text:0000000000405230                                         ; jumptable 0000000000403DFE case 13
.text:0000000000405230                                         ; jumptable 0000000000403EB0 case 13
.text:0000000000405230                                         ; jumptable 0000000000403F4E case 13
.text:0000000000405230                                         ; jumptable
.text:0000000000405234                 mov     rdx, [rsi-8]
.text:0000000000405238                 mov     [rdi-0Dh], rcx
.text:000000000040523C                 mov     [rdi-8], rdx
.text:0000000000405240                 retn
.text:0000000000405240 ; ---------------------------------------------------------------------------
.text:0000000000405241                 align 10h
.text:0000000000405250
.text:0000000000405250 loc_405250:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405250                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405250                 mov     edx, [rsi-5]    ; jumptable 0000000000402E80 case 5
.text:0000000000405250                                         ; jumptable 0000000000402FA6 case 21
.text:0000000000405250                                         ; jumptable 000000000040306D case 5
.text:0000000000405250                                         ; jumptable 000000000040316A case 5
.text:0000000000405250                                         ; jumptable 00000000004031D4 case 21
.text:0000000000405250                                         ; jumptable 0000000000403295 case 5
.text:0000000000405250                                         ; jumptable 0000000000403384 case 5
.text:0000000000405250                                         ; jumptable 000000000040574F case 5
.text:0000000000405250                                         ; jumptable 000000000040581A case 5
.text:0000000000405250                                         ; jumptable 0000000000405905 case 5
.text:0000000000405250                                         ; jumptable 00000000004059C2 case 5
.text:0000000000405250                                         ; jumptable 0000000000403430 case 5
.text:0000000000405250                                         ; jumptable 00000000004034CE case 5
.text:0000000000405250                                         ; jumptable 0000000000403580 case 5
.text:0000000000405250                                         ; jumptable 000000000040361E case 5
.text:0000000000405250                                         ; jumptable 00000000004036D0 case 5
.text:0000000000405250                                         ; jumptable 000000000040376E case 5
.text:0000000000405250                                         ; jumptable 0000000000403820 case 5
.text:0000000000405250                                         ; jumptable 00000000004038BE case 5
.text:0000000000405250                                         ; jumptable 0000000000403970 case 5
.text:0000000000405250                                         ; jumptable 0000000000403A0E case 5
.text:0000000000405250                                         ; jumptable 0000000000403AC0 case 5
.text:0000000000405250                                         ; jumptable 0000000000403B5E case 5
.text:0000000000405250                                         ; jumptable 0000000000403C10 case 5
.text:0000000000405250                                         ; jumptable 0000000000403CAE case 5
.text:0000000000405250                                         ; jumptable 0000000000403D65 case 5
.text:0000000000405250                                         ; jumptable 0000000000403DFE case 5
.text:0000000000405250                                         ; jumptable 0000000000403EB0 case 5
.text:0000000000405250                                         ; jumptable 0000000000403F4E case 5
.text:0000000000405250                                         ; jumptable 0000000000404000 case 5
.text:0000000000405250                                         ; ju
.text:0000000000405253                 mov     ecx, [rsi-4]
.text:0000000000405256                 mov     [rdi-5], edx
.text:0000000000405259                 mov     [rdi-4], ecx
.text:000000000040525C                 retn
.text:000000000040525C ; ---------------------------------------------------------------------------
.text:000000000040525D                 align 20h
.text:0000000000405260
.text:0000000000405260 loc_405260:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405260                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000405260                 movdqu  xmm0, xmmword ptr [rsi-4Eh] ; jumptable 0000000000402E80 case 78
.text:0000000000405260                                         ; jumptable 000000000040306D case 78
.text:0000000000405260                                         ; jumptable 0000000000403295 case 78
.text:0000000000405260                                         ; jumptable 000000000040574F case 78
.text:0000000000405260                                         ; jumptable 000000000040581A case 78
.text:0000000000405260                                         ; jumptable 0000000000405905 case 78
.text:0000000000405260                                         ; jumptable 00000000004059C2 case 78
.text:0000000000405260                                         ; jumptable 0000000000403430 case 78
.text:0000000000405260                                         ; jumptable 00000000004034CE case 78
.text:0000000000405260                                         ; jumptable 0000000000403580 case 78
.text:0000000000405260                                         ; jumptable 000000000040361E case 78
.text:0000000000405260                                         ; jumptable 00000000004036D0 case 78
.text:0000000000405260                                         ; jumptable 000000000040376E case 78
.text:0000000000405260                                         ; jumptable 0000000000403820 case 78
.text:0000000000405260                                         ; jumptable 00000000004038BE case 78
.text:0000000000405260                                         ; jumptable 0000000000403970 case 78
.text:0000000000405260                                         ; jumptable 0000000000403A0E case 78
.text:0000000000405260                                         ; jumptable 0000000000403AC0 case 78
.text:0000000000405260                                         ; jumptable 0000000000403B5E case 78
.text:0000000000405260                                         ; jumptable 0000000000403C10 case 78
.text:0000000000405260                                         ; jumptable 0000000000403CAE case 78
.text:0000000000405260                                         ; jumptable 0000000000403D65 case 78
.text:0000000000405260                                         ; jumptable 0000000000403DFE case 78
.text:0000000000405260                                         ; jumptable 0000000000403EB0 case 78
.text:0000000000405260                                         ; jumptable 0000000000403F4E case 78
.text:0000000000405260                                         ; jumptable 0000000000404000 case 78
.text:0000000000405260                                         ; jumptable 000000000040409E case 78
.text:0000000000405260                                         ; jumptable 0000000000404150 case 78
.text:0000000000405260                                         ; jumptable 00000000004041EE case 78
.text:0000000000405260                                         ; jumptable
.text:0000000000405265                 movdqu  xmm1, xmmword ptr [rsi-3Eh]
.text:000000000040526A                 mov     r8, [rsi-2Eh]
.text:000000000040526E                 mov     r9, [rsi-26h]
.text:0000000000405272                 mov     r10, [rsi-1Eh]
.text:0000000000405276                 mov     r11, [rsi-16h]
.text:000000000040527A                 mov     rcx, [rsi-0Eh]
.text:000000000040527E                 mov     rdx, [rsi-8]
.text:0000000000405282                 movdqu  xmmword ptr [rdi-4Eh], xmm0
.text:0000000000405287                 movdqu  xmmword ptr [rdi-3Eh], xmm1
.text:000000000040528C                 mov     [rdi-2Eh], r8
.text:0000000000405290                 mov     [rdi-26h], r9
.text:0000000000405294                 mov     [rdi-1Eh], r10
.text:0000000000405298                 mov     [rdi-16h], r11
.text:000000000040529C                 mov     [rdi-0Eh], rcx
.text:00000000004052A0                 mov     [rdi-8], rdx
.text:00000000004052A4                 retn
.text:00000000004052A4 ; ---------------------------------------------------------------------------
.text:00000000004052A5                 align 10h
.text:00000000004052B0
.text:00000000004052B0 loc_4052B0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004052B0                                         ; __intel_ssse3_memmove+21D↑j ...
.text:00000000004052B0                 movdqu  xmm0, xmmword ptr [rsi-46h] ; jumptable 0000000000402E80 case 70
.text:00000000004052B0                                         ; jumptable 000000000040306D case 70
.text:00000000004052B0                                         ; jumptable 0000000000403295 case 70
.text:00000000004052B0                                         ; jumptable 000000000040574F case 70
.text:00000000004052B0                                         ; jumptable 000000000040581A case 70
.text:00000000004052B0                                         ; jumptable 0000000000405905 case 70
.text:00000000004052B0                                         ; jumptable 00000000004059C2 case 70
.text:00000000004052B0                                         ; jumptable 0000000000403430 case 70
.text:00000000004052B0                                         ; jumptable 00000000004034CE case 70
.text:00000000004052B0                                         ; jumptable 0000000000403580 case 70
.text:00000000004052B0                                         ; jumptable 000000000040361E case 70
.text:00000000004052B0                                         ; jumptable 00000000004036D0 case 70
.text:00000000004052B0                                         ; jumptable 000000000040376E case 70
.text:00000000004052B0                                         ; jumptable 0000000000403820 case 70
.text:00000000004052B0                                         ; jumptable 00000000004038BE case 70
.text:00000000004052B0                                         ; jumptable 0000000000403970 case 70
.text:00000000004052B0                                         ; jumptable 0000000000403A0E case 70
.text:00000000004052B0                                         ; jumptable 0000000000403AC0 case 70
.text:00000000004052B0                                         ; jumptable 0000000000403B5E case 70
.text:00000000004052B0                                         ; jumptable 0000000000403C10 case 70
.text:00000000004052B0                                         ; jumptable 0000000000403CAE case 70
.text:00000000004052B0                                         ; jumptable 0000000000403D65 case 70
.text:00000000004052B0                                         ; jumptable 0000000000403DFE case 70
.text:00000000004052B0                                         ; jumptable 0000000000403EB0 case 70
.text:00000000004052B0                                         ; jumptable 0000000000403F4E case 70
.text:00000000004052B0                                         ; jumptable 0000000000404000 case 70
.text:00000000004052B0                                         ; jumptable 000000000040409E case 70
.text:00000000004052B0                                         ; jumptable 0000000000404150 case 70
.text:00000000004052B0                                         ; jumptable 00000000004041EE case 70
.text:00000000004052B0                                         ; jumptable
.text:00000000004052B5                 movdqu  xmm1, xmmword ptr [rsi-36h]
.text:00000000004052BA                 mov     r9, [rsi-26h]
.text:00000000004052BE                 mov     r10, [rsi-1Eh]
.text:00000000004052C2                 mov     r11, [rsi-16h]
.text:00000000004052C6                 mov     rcx, [rsi-0Eh]
.text:00000000004052CA                 mov     rdx, [rsi-8]
.text:00000000004052CE                 movdqu  xmmword ptr [rdi-46h], xmm0
.text:00000000004052D3                 movdqu  xmmword ptr [rdi-36h], xmm1
.text:00000000004052D8                 mov     [rdi-26h], r9
.text:00000000004052DC                 mov     [rdi-1Eh], r10
.text:00000000004052E0                 mov     [rdi-16h], r11
.text:00000000004052E4                 mov     [rdi-0Eh], rcx
.text:00000000004052E8                 mov     [rdi-8], rdx
.text:00000000004052EC                 retn
.text:00000000004052EC ; ---------------------------------------------------------------------------
.text:00000000004052ED                 align 10h
.text:00000000004052F0
.text:00000000004052F0 loc_4052F0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004052F0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004052F0                 movdqu  xmm0, xmmword ptr [rsi-3Eh] ; jumptable 0000000000402E80 case 62
.text:00000000004052F0                                         ; jumptable 0000000000402FA6 case 78
.text:00000000004052F0                                         ; jumptable 000000000040306D case 62
.text:00000000004052F0                                         ; jumptable 00000000004031D4 case 78
.text:00000000004052F0                                         ; jumptable 0000000000403295 case 62
.text:00000000004052F0                                         ; jumptable 000000000040574F case 62
.text:00000000004052F0                                         ; jumptable 000000000040581A case 62
.text:00000000004052F0                                         ; jumptable 0000000000405905 case 62
.text:00000000004052F0                                         ; jumptable 00000000004059C2 case 62
.text:00000000004052F0                                         ; jumptable 0000000000403430 case 62
.text:00000000004052F0                                         ; jumptable 00000000004034CE case 62
.text:00000000004052F0                                         ; jumptable 0000000000403580 case 62
.text:00000000004052F0                                         ; jumptable 000000000040361E case 62
.text:00000000004052F0                                         ; jumptable 00000000004036D0 case 62
.text:00000000004052F0                                         ; jumptable 000000000040376E case 62
.text:00000000004052F0                                         ; jumptable 0000000000403820 case 62
.text:00000000004052F0                                         ; jumptable 00000000004038BE case 62
.text:00000000004052F0                                         ; jumptable 0000000000403970 case 62
.text:00000000004052F0                                         ; jumptable 0000000000403A0E case 62
.text:00000000004052F0                                         ; jumptable 0000000000403AC0 case 62
.text:00000000004052F0                                         ; jumptable 0000000000403B5E case 62
.text:00000000004052F0                                         ; jumptable 0000000000403C10 case 62
.text:00000000004052F0                                         ; jumptable 0000000000403CAE case 62
.text:00000000004052F0                                         ; jumptable 0000000000403D65 case 62
.text:00000000004052F0                                         ; jumptable 0000000000403DFE case 62
.text:00000000004052F0                                         ; jumptable 0000000000403EB0 case 62
.text:00000000004052F0                                         ; jumptable 0000000000403F4E case 62
.text:00000000004052F0                                         ; jumptable 0000000000404000 case 62
.text:00000000004052F0                                         ; jumptable 000000000040409E case 62
.text:00000000004052F0                                         ; jumptable
.text:00000000004052F5                 mov     r8, [rsi-2Eh]
.text:00000000004052F9                 mov     r9, [rsi-26h]
.text:00000000004052FD                 mov     r10, [rsi-1Eh]
.text:0000000000405301                 mov     r11, [rsi-16h]
.text:0000000000405305                 mov     rcx, [rsi-0Eh]
.text:0000000000405309                 mov     rdx, [rsi-8]
.text:000000000040530D                 movdqu  xmmword ptr [rdi-3Eh], xmm0
.text:0000000000405312                 mov     [rdi-2Eh], r8
.text:0000000000405316                 mov     [rdi-26h], r9
.text:000000000040531A                 mov     [rdi-1Eh], r10
.text:000000000040531E                 mov     [rdi-16h], r11
.text:0000000000405322                 mov     [rdi-0Eh], rcx
.text:0000000000405326                 mov     [rdi-8], rdx
.text:000000000040532A                 retn
.text:000000000040532A ; ---------------------------------------------------------------------------
.text:000000000040532B                 align 10h
.text:0000000000405330
.text:0000000000405330 loc_405330:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405330                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405330                 movdqu  xmm0, xmmword ptr [rsi-36h] ; jumptable 0000000000402E80 case 54
.text:0000000000405330                                         ; jumptable 0000000000402FA6 case 70
.text:0000000000405330                                         ; jumptable 000000000040306D case 54
.text:0000000000405330                                         ; jumptable 00000000004031D4 case 70
.text:0000000000405330                                         ; jumptable 0000000000403295 case 54
.text:0000000000405330                                         ; jumptable 000000000040574F case 54
.text:0000000000405330                                         ; jumptable 000000000040581A case 54
.text:0000000000405330                                         ; jumptable 0000000000405905 case 54
.text:0000000000405330                                         ; jumptable 00000000004059C2 case 54
.text:0000000000405330                                         ; jumptable 0000000000403430 case 54
.text:0000000000405330                                         ; jumptable 00000000004034CE case 54
.text:0000000000405330                                         ; jumptable 0000000000403580 case 54
.text:0000000000405330                                         ; jumptable 000000000040361E case 54
.text:0000000000405330                                         ; jumptable 00000000004036D0 case 54
.text:0000000000405330                                         ; jumptable 000000000040376E case 54
.text:0000000000405330                                         ; jumptable 0000000000403820 case 54
.text:0000000000405330                                         ; jumptable 00000000004038BE case 54
.text:0000000000405330                                         ; jumptable 0000000000403970 case 54
.text:0000000000405330                                         ; jumptable 0000000000403A0E case 54
.text:0000000000405330                                         ; jumptable 0000000000403AC0 case 54
.text:0000000000405330                                         ; jumptable 0000000000403B5E case 54
.text:0000000000405330                                         ; jumptable 0000000000403C10 case 54
.text:0000000000405330                                         ; jumptable 0000000000403CAE case 54
.text:0000000000405330                                         ; jumptable 0000000000403D65 case 54
.text:0000000000405330                                         ; jumptable 0000000000403DFE case 54
.text:0000000000405330                                         ; jumptable 0000000000403EB0 case 54
.text:0000000000405330                                         ; jumptable 0000000000403F4E case 54
.text:0000000000405330                                         ; jumptable 0000000000404000 case 54
.text:0000000000405330                                         ; jumptable 000000000040409E case 54
.text:0000000000405330                                         ; jumptable
.text:0000000000405335                 mov     r9, [rsi-26h]
.text:0000000000405339                 mov     r10, [rsi-1Eh]
.text:000000000040533D                 mov     r11, [rsi-16h]
.text:0000000000405341                 mov     rcx, [rsi-0Eh]
.text:0000000000405345                 mov     rdx, [rsi-8]
.text:0000000000405349                 movdqu  xmmword ptr [rdi-36h], xmm0
.text:000000000040534E                 mov     [rdi-26h], r9
.text:0000000000405352                 mov     [rdi-1Eh], r10
.text:0000000000405356                 mov     [rdi-16h], r11
.text:000000000040535A                 mov     [rdi-0Eh], rcx
.text:000000000040535E                 mov     [rdi-8], rdx
.text:0000000000405362                 retn
.text:0000000000405362 ; ---------------------------------------------------------------------------
.text:0000000000405363                 align 10h
.text:0000000000405370
.text:0000000000405370 loc_405370:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405370                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405370                 mov     r8, [rsi-2Eh]   ; jumptable 0000000000402E80 case 46
.text:0000000000405370                                         ; jumptable 0000000000402FA6 case 62
.text:0000000000405370                                         ; jumptable 000000000040306D case 46
.text:0000000000405370                                         ; jumptable 00000000004031D4 case 62
.text:0000000000405370                                         ; jumptable 0000000000403295 case 46
.text:0000000000405370                                         ; jumptable 000000000040574F case 46
.text:0000000000405370                                         ; jumptable 000000000040581A case 46
.text:0000000000405370                                         ; jumptable 0000000000405905 case 46
.text:0000000000405370                                         ; jumptable 00000000004059C2 case 46
.text:0000000000405370                                         ; jumptable 0000000000403430 case 46
.text:0000000000405370                                         ; jumptable 00000000004034CE case 46
.text:0000000000405370                                         ; jumptable 0000000000403580 case 46
.text:0000000000405370                                         ; jumptable 000000000040361E case 46
.text:0000000000405370                                         ; jumptable 00000000004036D0 case 46
.text:0000000000405370                                         ; jumptable 000000000040376E case 46
.text:0000000000405370                                         ; jumptable 0000000000403820 case 46
.text:0000000000405370                                         ; jumptable 00000000004038BE case 46
.text:0000000000405370                                         ; jumptable 0000000000403970 case 46
.text:0000000000405370                                         ; jumptable 0000000000403A0E case 46
.text:0000000000405370                                         ; jumptable 0000000000403AC0 case 46
.text:0000000000405370                                         ; jumptable 0000000000403B5E case 46
.text:0000000000405370                                         ; jumptable 0000000000403C10 case 46
.text:0000000000405370                                         ; jumptable 0000000000403CAE case 46
.text:0000000000405370                                         ; jumptable 0000000000403D65 case 46
.text:0000000000405370                                         ; jumptable 0000000000403DFE case 46
.text:0000000000405370                                         ; jumptable 0000000000403EB0 case 46
.text:0000000000405370                                         ; jumptable 0000000000403F4E case 46
.text:0000000000405370                                         ; jumptable 0000000000404000 case 46
.text:0000000000405370                                         ; jumptable 000000000040409E case 46
.text:0000000000405370                                         ; jumptable
.text:0000000000405374                 mov     r9, [rsi-26h]
.text:0000000000405378                 mov     r10, [rsi-1Eh]
.text:000000000040537C                 mov     r11, [rsi-16h]
.text:0000000000405380                 mov     rcx, [rsi-0Eh]
.text:0000000000405384                 mov     rdx, [rsi-8]
.text:0000000000405388                 mov     [rdi-2Eh], r8
.text:000000000040538C                 mov     [rdi-26h], r9
.text:0000000000405390                 mov     [rdi-1Eh], r10
.text:0000000000405394                 mov     [rdi-16h], r11
.text:0000000000405398                 mov     [rdi-0Eh], rcx
.text:000000000040539C                 mov     [rdi-8], rdx
.text:00000000004053A0                 retn
.text:00000000004053A0 ; ---------------------------------------------------------------------------
.text:00000000004053A1                 align 10h
.text:00000000004053B0
.text:00000000004053B0 loc_4053B0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004053B0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004053B0                 mov     r9, [rsi-26h]   ; jumptable 0000000000402E80 case 38
.text:00000000004053B0                                         ; jumptable 0000000000402FA6 case 54
.text:00000000004053B0                                         ; jumptable 000000000040306D case 38
.text:00000000004053B0                                         ; jumptable 00000000004031D4 case 54
.text:00000000004053B0                                         ; jumptable 0000000000403295 case 38
.text:00000000004053B0                                         ; jumptable 000000000040574F case 38
.text:00000000004053B0                                         ; jumptable 000000000040581A case 38
.text:00000000004053B0                                         ; jumptable 0000000000405905 case 38
.text:00000000004053B0                                         ; jumptable 00000000004059C2 case 38
.text:00000000004053B0                                         ; jumptable 0000000000403430 case 38
.text:00000000004053B0                                         ; jumptable 00000000004034CE case 38
.text:00000000004053B0                                         ; jumptable 0000000000403580 case 38
.text:00000000004053B0                                         ; jumptable 000000000040361E case 38
.text:00000000004053B0                                         ; jumptable 00000000004036D0 case 38
.text:00000000004053B0                                         ; jumptable 000000000040376E case 38
.text:00000000004053B0                                         ; jumptable 0000000000403820 case 38
.text:00000000004053B0                                         ; jumptable 00000000004038BE case 38
.text:00000000004053B0                                         ; jumptable 0000000000403970 case 38
.text:00000000004053B0                                         ; jumptable 0000000000403A0E case 38
.text:00000000004053B0                                         ; jumptable 0000000000403AC0 case 38
.text:00000000004053B0                                         ; jumptable 0000000000403B5E case 38
.text:00000000004053B0                                         ; jumptable 0000000000403C10 case 38
.text:00000000004053B0                                         ; jumptable 0000000000403CAE case 38
.text:00000000004053B0                                         ; jumptable 0000000000403D65 case 38
.text:00000000004053B0                                         ; jumptable 0000000000403DFE case 38
.text:00000000004053B0                                         ; jumptable 0000000000403EB0 case 38
.text:00000000004053B0                                         ; jumptable 0000000000403F4E case 38
.text:00000000004053B0                                         ; jumptable 0000000000404000 case 38
.text:00000000004053B0                                         ; jumptable 000000000040409E case 38
.text:00000000004053B0                                         ; jumptable
.text:00000000004053B4                 mov     r10, [rsi-1Eh]
.text:00000000004053B8                 mov     r11, [rsi-16h]
.text:00000000004053BC                 mov     rcx, [rsi-0Eh]
.text:00000000004053C0                 mov     rdx, [rsi-8]
.text:00000000004053C4                 mov     [rdi-26h], r9
.text:00000000004053C8                 mov     [rdi-1Eh], r10
.text:00000000004053CC                 mov     [rdi-16h], r11
.text:00000000004053D0                 mov     [rdi-0Eh], rcx
.text:00000000004053D4                 mov     [rdi-8], rdx
.text:00000000004053D8                 retn
.text:00000000004053D8 ; ---------------------------------------------------------------------------
.text:00000000004053D9                 align 20h
.text:00000000004053E0
.text:00000000004053E0 loc_4053E0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004053E0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004053E0                 mov     r10, [rsi-1Eh]  ; jumptable 0000000000402E80 case 30
.text:00000000004053E0                                         ; jumptable 0000000000402FA6 case 46
.text:00000000004053E0                                         ; jumptable 000000000040306D case 30
.text:00000000004053E0                                         ; jumptable 000000000040316A case 30
.text:00000000004053E0                                         ; jumptable 00000000004031D4 case 46
.text:00000000004053E0                                         ; jumptable 0000000000403295 case 30
.text:00000000004053E0                                         ; jumptable 0000000000403384 case 30
.text:00000000004053E0                                         ; jumptable 000000000040574F case 30
.text:00000000004053E0                                         ; jumptable 000000000040581A case 30
.text:00000000004053E0                                         ; jumptable 0000000000405905 case 30
.text:00000000004053E0                                         ; jumptable 00000000004059C2 case 30
.text:00000000004053E0                                         ; jumptable 0000000000403430 case 30
.text:00000000004053E0                                         ; jumptable 00000000004034CE case 30
.text:00000000004053E0                                         ; jumptable 0000000000403580 case 30
.text:00000000004053E0                                         ; jumptable 000000000040361E case 30
.text:00000000004053E0                                         ; jumptable 00000000004036D0 case 30
.text:00000000004053E0                                         ; jumptable 000000000040376E case 30
.text:00000000004053E0                                         ; jumptable 0000000000403820 case 30
.text:00000000004053E0                                         ; jumptable 00000000004038BE case 30
.text:00000000004053E0                                         ; jumptable 0000000000403970 case 30
.text:00000000004053E0                                         ; jumptable 0000000000403A0E case 30
.text:00000000004053E0                                         ; jumptable 0000000000403AC0 case 30
.text:00000000004053E0                                         ; jumptable 0000000000403B5E case 30
.text:00000000004053E0                                         ; jumptable 0000000000403C10 case 30
.text:00000000004053E0                                         ; jumptable 0000000000403CAE case 30
.text:00000000004053E0                                         ; jumptable 0000000000403D65 case 30
.text:00000000004053E0                                         ; jumptable 0000000000403DFE case 30
.text:00000000004053E0                                         ; jumptable 0000000000403EB0 case 30
.text:00000000004053E0                                         ; jumptable 0000000000403F4E case 30
.text:00000000004053E0                                         ; jumptable
.text:00000000004053E4                 mov     r11, [rsi-16h]
.text:00000000004053E8                 mov     rcx, [rsi-0Eh]
.text:00000000004053EC                 mov     rdx, [rsi-8]
.text:00000000004053F0                 mov     [rdi-1Eh], r10
.text:00000000004053F4                 mov     [rdi-16h], r11
.text:00000000004053F8                 mov     [rdi-0Eh], rcx
.text:00000000004053FC                 mov     [rdi-8], rdx
.text:0000000000405400                 retn
.text:0000000000405400 ; ---------------------------------------------------------------------------
.text:0000000000405401                 align 10h
.text:0000000000405410
.text:0000000000405410 loc_405410:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405410                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405410                 mov     r11, [rsi-16h]  ; jumptable 0000000000402E80 case 22
.text:0000000000405410                                         ; jumptable 0000000000402FA6 case 38
.text:0000000000405410                                         ; jumptable 000000000040306D case 22
.text:0000000000405410                                         ; jumptable 000000000040316A case 22
.text:0000000000405410                                         ; jumptable 00000000004031D4 case 38
.text:0000000000405410                                         ; jumptable 0000000000403295 case 22
.text:0000000000405410                                         ; jumptable 0000000000403384 case 22
.text:0000000000405410                                         ; jumptable 000000000040574F case 22
.text:0000000000405410                                         ; jumptable 000000000040581A case 22
.text:0000000000405410                                         ; jumptable 0000000000405905 case 22
.text:0000000000405410                                         ; jumptable 00000000004059C2 case 22
.text:0000000000405410                                         ; jumptable 0000000000403430 case 22
.text:0000000000405410                                         ; jumptable 00000000004034CE case 22
.text:0000000000405410                                         ; jumptable 0000000000403580 case 22
.text:0000000000405410                                         ; jumptable 000000000040361E case 22
.text:0000000000405410                                         ; jumptable 00000000004036D0 case 22
.text:0000000000405410                                         ; jumptable 000000000040376E case 22
.text:0000000000405410                                         ; jumptable 0000000000403820 case 22
.text:0000000000405410                                         ; jumptable 00000000004038BE case 22
.text:0000000000405410                                         ; jumptable 0000000000403970 case 22
.text:0000000000405410                                         ; jumptable 0000000000403A0E case 22
.text:0000000000405410                                         ; jumptable 0000000000403AC0 case 22
.text:0000000000405410                                         ; jumptable 0000000000403B5E case 22
.text:0000000000405410                                         ; jumptable 0000000000403C10 case 22
.text:0000000000405410                                         ; jumptable 0000000000403CAE case 22
.text:0000000000405410                                         ; jumptable 0000000000403D65 case 22
.text:0000000000405410                                         ; jumptable 0000000000403DFE case 22
.text:0000000000405410                                         ; jumptable 0000000000403EB0 case 22
.text:0000000000405410                                         ; jumptable 0000000000403F4E case 22
.text:0000000000405410                                         ; jumptable
.text:0000000000405414                 mov     rcx, [rsi-0Eh]
.text:0000000000405418                 mov     rdx, [rsi-8]
.text:000000000040541C                 mov     [rdi-16h], r11
.text:0000000000405420                 mov     [rdi-0Eh], rcx
.text:0000000000405424                 mov     [rdi-8], rdx
.text:0000000000405428                 retn
.text:0000000000405428 ; ---------------------------------------------------------------------------
.text:0000000000405429                 align 10h
.text:0000000000405430
.text:0000000000405430 loc_405430:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405430                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405430                 mov     rcx, [rsi-0Eh]  ; jumptable 0000000000402E80 case 14
.text:0000000000405430                                         ; jumptable 0000000000402FA6 case 30
.text:0000000000405430                                         ; jumptable 000000000040306D case 14
.text:0000000000405430                                         ; jumptable 000000000040316A case 14
.text:0000000000405430                                         ; jumptable 00000000004031D4 case 30
.text:0000000000405430                                         ; jumptable 0000000000403295 case 14
.text:0000000000405430                                         ; jumptable 0000000000403384 case 14
.text:0000000000405430                                         ; jumptable 000000000040574F case 14
.text:0000000000405430                                         ; jumptable 000000000040581A case 14
.text:0000000000405430                                         ; jumptable 0000000000405905 case 14
.text:0000000000405430                                         ; jumptable 00000000004059C2 case 14
.text:0000000000405430                                         ; jumptable 0000000000403430 case 14
.text:0000000000405430                                         ; jumptable 00000000004034CE case 14
.text:0000000000405430                                         ; jumptable 0000000000403580 case 14
.text:0000000000405430                                         ; jumptable 000000000040361E case 14
.text:0000000000405430                                         ; jumptable 00000000004036D0 case 14
.text:0000000000405430                                         ; jumptable 000000000040376E case 14
.text:0000000000405430                                         ; jumptable 0000000000403820 case 14
.text:0000000000405430                                         ; jumptable 00000000004038BE case 14
.text:0000000000405430                                         ; jumptable 0000000000403970 case 14
.text:0000000000405430                                         ; jumptable 0000000000403A0E case 14
.text:0000000000405430                                         ; jumptable 0000000000403AC0 case 14
.text:0000000000405430                                         ; jumptable 0000000000403B5E case 14
.text:0000000000405430                                         ; jumptable 0000000000403C10 case 14
.text:0000000000405430                                         ; jumptable 0000000000403CAE case 14
.text:0000000000405430                                         ; jumptable 0000000000403D65 case 14
.text:0000000000405430                                         ; jumptable 0000000000403DFE case 14
.text:0000000000405430                                         ; jumptable 0000000000403EB0 case 14
.text:0000000000405430                                         ; jumptable 0000000000403F4E case 14
.text:0000000000405430                                         ; jumptable
.text:0000000000405434                 mov     rdx, [rsi-8]
.text:0000000000405438                 mov     [rdi-0Eh], rcx
.text:000000000040543C                 mov     [rdi-8], rdx
.text:0000000000405440                 retn
.text:0000000000405440 ; ---------------------------------------------------------------------------
.text:0000000000405441                 align 10h
.text:0000000000405450
.text:0000000000405450 loc_405450:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405450                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405450                 mov     edx, [rsi-6]    ; jumptable 0000000000402E80 case 6
.text:0000000000405450                                         ; jumptable 0000000000402FA6 case 22
.text:0000000000405450                                         ; jumptable 000000000040306D case 6
.text:0000000000405450                                         ; jumptable 000000000040316A case 6
.text:0000000000405450                                         ; jumptable 00000000004031D4 case 22
.text:0000000000405450                                         ; jumptable 0000000000403295 case 6
.text:0000000000405450                                         ; jumptable 0000000000403384 case 6
.text:0000000000405450                                         ; jumptable 000000000040574F case 6
.text:0000000000405450                                         ; jumptable 000000000040581A case 6
.text:0000000000405450                                         ; jumptable 0000000000405905 case 6
.text:0000000000405450                                         ; jumptable 00000000004059C2 case 6
.text:0000000000405450                                         ; jumptable 0000000000403430 case 6
.text:0000000000405450                                         ; jumptable 00000000004034CE case 6
.text:0000000000405450                                         ; jumptable 0000000000403580 case 6
.text:0000000000405450                                         ; jumptable 000000000040361E case 6
.text:0000000000405450                                         ; jumptable 00000000004036D0 case 6
.text:0000000000405450                                         ; jumptable 000000000040376E case 6
.text:0000000000405450                                         ; jumptable 0000000000403820 case 6
.text:0000000000405450                                         ; jumptable 00000000004038BE case 6
.text:0000000000405450                                         ; jumptable 0000000000403970 case 6
.text:0000000000405450                                         ; jumptable 0000000000403A0E case 6
.text:0000000000405450                                         ; jumptable 0000000000403AC0 case 6
.text:0000000000405450                                         ; jumptable 0000000000403B5E case 6
.text:0000000000405450                                         ; jumptable 0000000000403C10 case 6
.text:0000000000405450                                         ; jumptable 0000000000403CAE case 6
.text:0000000000405450                                         ; jumptable 0000000000403D65 case 6
.text:0000000000405450                                         ; jumptable 0000000000403DFE case 6
.text:0000000000405450                                         ; jumptable 0000000000403EB0 case 6
.text:0000000000405450                                         ; jumptable 0000000000403F4E case 6
.text:0000000000405450                                         ; jumptable 0000000000404000 case 6
.text:0000000000405450                                         ; ju
.text:0000000000405453                 mov     ecx, [rsi-4]
.text:0000000000405456                 mov     [rdi-6], edx
.text:0000000000405459                 mov     [rdi-4], ecx
.text:000000000040545C                 retn
.text:000000000040545C ; ---------------------------------------------------------------------------
.text:000000000040545D                 align 20h
.text:0000000000405460
.text:0000000000405460 loc_405460:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405460                                         ; __intel_ssse3_memmove+21D↑j ...
.text:0000000000405460                 movdqu  xmm0, xmmword ptr [rsi-4Fh] ; jumptable 0000000000402E80 case 79
.text:0000000000405460                                         ; jumptable 000000000040306D case 79
.text:0000000000405460                                         ; jumptable 0000000000403295 case 79
.text:0000000000405460                                         ; jumptable 000000000040574F case 79
.text:0000000000405460                                         ; jumptable 000000000040581A case 79
.text:0000000000405460                                         ; jumptable 0000000000405905 case 79
.text:0000000000405460                                         ; jumptable 00000000004059C2 case 79
.text:0000000000405460                                         ; jumptable 0000000000403430 case 79
.text:0000000000405460                                         ; jumptable 00000000004034CE case 79
.text:0000000000405460                                         ; jumptable 0000000000403580 case 79
.text:0000000000405460                                         ; jumptable 000000000040361E case 79
.text:0000000000405460                                         ; jumptable 00000000004036D0 case 79
.text:0000000000405460                                         ; jumptable 000000000040376E case 79
.text:0000000000405460                                         ; jumptable 0000000000403820 case 79
.text:0000000000405460                                         ; jumptable 00000000004038BE case 79
.text:0000000000405460                                         ; jumptable 0000000000403970 case 79
.text:0000000000405460                                         ; jumptable 0000000000403A0E case 79
.text:0000000000405460                                         ; jumptable 0000000000403AC0 case 79
.text:0000000000405460                                         ; jumptable 0000000000403B5E case 79
.text:0000000000405460                                         ; jumptable 0000000000403C10 case 79
.text:0000000000405460                                         ; jumptable 0000000000403CAE case 79
.text:0000000000405460                                         ; jumptable 0000000000403D65 case 79
.text:0000000000405460                                         ; jumptable 0000000000403DFE case 79
.text:0000000000405460                                         ; jumptable 0000000000403EB0 case 79
.text:0000000000405460                                         ; jumptable 0000000000403F4E case 79
.text:0000000000405460                                         ; jumptable 0000000000404000 case 79
.text:0000000000405460                                         ; jumptable 000000000040409E case 79
.text:0000000000405460                                         ; jumptable 0000000000404150 case 79
.text:0000000000405460                                         ; jumptable 00000000004041EE case 79
.text:0000000000405460                                         ; jumptable
.text:0000000000405465                 movdqu  xmm1, xmmword ptr [rsi-3Fh]
.text:000000000040546A                 mov     r8, [rsi-2Fh]
.text:000000000040546E                 mov     r9, [rsi-27h]
.text:0000000000405472                 mov     r10, [rsi-1Fh]
.text:0000000000405476                 mov     r11, [rsi-17h]
.text:000000000040547A                 mov     rcx, [rsi-0Fh]
.text:000000000040547E                 mov     rdx, [rsi-8]
.text:0000000000405482                 movdqu  xmmword ptr [rdi-4Fh], xmm0
.text:0000000000405487                 movdqu  xmmword ptr [rdi-3Fh], xmm1
.text:000000000040548C                 mov     [rdi-2Fh], r8
.text:0000000000405490                 mov     [rdi-27h], r9
.text:0000000000405494                 mov     [rdi-1Fh], r10
.text:0000000000405498                 mov     [rdi-17h], r11
.text:000000000040549C                 mov     [rdi-0Fh], rcx
.text:00000000004054A0                 mov     [rdi-8], rdx
.text:00000000004054A4                 retn
.text:00000000004054A4 ; ---------------------------------------------------------------------------
.text:00000000004054A5                 align 10h
.text:00000000004054B0
.text:00000000004054B0 loc_4054B0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004054B0                                         ; __intel_ssse3_memmove+21D↑j ...
.text:00000000004054B0                 movdqu  xmm0, xmmword ptr [rsi-47h] ; jumptable 0000000000402E80 case 71
.text:00000000004054B0                                         ; jumptable 000000000040306D case 71
.text:00000000004054B0                                         ; jumptable 0000000000403295 case 71
.text:00000000004054B0                                         ; jumptable 000000000040574F case 71
.text:00000000004054B0                                         ; jumptable 000000000040581A case 71
.text:00000000004054B0                                         ; jumptable 0000000000405905 case 71
.text:00000000004054B0                                         ; jumptable 00000000004059C2 case 71
.text:00000000004054B0                                         ; jumptable 0000000000403430 case 71
.text:00000000004054B0                                         ; jumptable 00000000004034CE case 71
.text:00000000004054B0                                         ; jumptable 0000000000403580 case 71
.text:00000000004054B0                                         ; jumptable 000000000040361E case 71
.text:00000000004054B0                                         ; jumptable 00000000004036D0 case 71
.text:00000000004054B0                                         ; jumptable 000000000040376E case 71
.text:00000000004054B0                                         ; jumptable 0000000000403820 case 71
.text:00000000004054B0                                         ; jumptable 00000000004038BE case 71
.text:00000000004054B0                                         ; jumptable 0000000000403970 case 71
.text:00000000004054B0                                         ; jumptable 0000000000403A0E case 71
.text:00000000004054B0                                         ; jumptable 0000000000403AC0 case 71
.text:00000000004054B0                                         ; jumptable 0000000000403B5E case 71
.text:00000000004054B0                                         ; jumptable 0000000000403C10 case 71
.text:00000000004054B0                                         ; jumptable 0000000000403CAE case 71
.text:00000000004054B0                                         ; jumptable 0000000000403D65 case 71
.text:00000000004054B0                                         ; jumptable 0000000000403DFE case 71
.text:00000000004054B0                                         ; jumptable 0000000000403EB0 case 71
.text:00000000004054B0                                         ; jumptable 0000000000403F4E case 71
.text:00000000004054B0                                         ; jumptable 0000000000404000 case 71
.text:00000000004054B0                                         ; jumptable 000000000040409E case 71
.text:00000000004054B0                                         ; jumptable 0000000000404150 case 71
.text:00000000004054B0                                         ; jumptable 00000000004041EE case 71
.text:00000000004054B0                                         ; jumptable
.text:00000000004054B5                 movdqu  xmm1, xmmword ptr [rsi-37h]
.text:00000000004054BA                 mov     r9, [rsi-27h]
.text:00000000004054BE                 mov     r10, [rsi-1Fh]
.text:00000000004054C2                 mov     r11, [rsi-17h]
.text:00000000004054C6                 mov     rcx, [rsi-0Fh]
.text:00000000004054CA                 mov     rdx, [rsi-8]
.text:00000000004054CE                 movdqu  xmmword ptr [rdi-47h], xmm0
.text:00000000004054D3                 movdqu  xmmword ptr [rdi-37h], xmm1
.text:00000000004054D8                 mov     [rdi-27h], r9
.text:00000000004054DC                 mov     [rdi-1Fh], r10
.text:00000000004054E0                 mov     [rdi-17h], r11
.text:00000000004054E4                 mov     [rdi-0Fh], rcx
.text:00000000004054E8                 mov     [rdi-8], rdx
.text:00000000004054EC                 retn
.text:00000000004054EC ; ---------------------------------------------------------------------------
.text:00000000004054ED                 align 10h
.text:00000000004054F0
.text:00000000004054F0 loc_4054F0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004054F0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004054F0                 movdqu  xmm0, xmmword ptr [rsi-3Fh] ; jumptable 0000000000402E80 case 63
.text:00000000004054F0                                         ; jumptable 0000000000402FA6 case 79
.text:00000000004054F0                                         ; jumptable 000000000040306D case 63
.text:00000000004054F0                                         ; jumptable 00000000004031D4 case 79
.text:00000000004054F0                                         ; jumptable 0000000000403295 case 63
.text:00000000004054F0                                         ; jumptable 000000000040574F case 63
.text:00000000004054F0                                         ; jumptable 000000000040581A case 63
.text:00000000004054F0                                         ; jumptable 0000000000405905 case 63
.text:00000000004054F0                                         ; jumptable 00000000004059C2 case 63
.text:00000000004054F0                                         ; jumptable 0000000000403430 case 63
.text:00000000004054F0                                         ; jumptable 00000000004034CE case 63
.text:00000000004054F0                                         ; jumptable 0000000000403580 case 63
.text:00000000004054F0                                         ; jumptable 000000000040361E case 63
.text:00000000004054F0                                         ; jumptable 00000000004036D0 case 63
.text:00000000004054F0                                         ; jumptable 000000000040376E case 63
.text:00000000004054F0                                         ; jumptable 0000000000403820 case 63
.text:00000000004054F0                                         ; jumptable 00000000004038BE case 63
.text:00000000004054F0                                         ; jumptable 0000000000403970 case 63
.text:00000000004054F0                                         ; jumptable 0000000000403A0E case 63
.text:00000000004054F0                                         ; jumptable 0000000000403AC0 case 63
.text:00000000004054F0                                         ; jumptable 0000000000403B5E case 63
.text:00000000004054F0                                         ; jumptable 0000000000403C10 case 63
.text:00000000004054F0                                         ; jumptable 0000000000403CAE case 63
.text:00000000004054F0                                         ; jumptable 0000000000403D65 case 63
.text:00000000004054F0                                         ; jumptable 0000000000403DFE case 63
.text:00000000004054F0                                         ; jumptable 0000000000403EB0 case 63
.text:00000000004054F0                                         ; jumptable 0000000000403F4E case 63
.text:00000000004054F0                                         ; jumptable 0000000000404000 case 63
.text:00000000004054F0                                         ; jumptable 000000000040409E case 63
.text:00000000004054F0                                         ; jumptable
.text:00000000004054F5                 mov     r8, [rsi-2Fh]
.text:00000000004054F9                 mov     r9, [rsi-27h]
.text:00000000004054FD                 mov     r10, [rsi-1Fh]
.text:0000000000405501                 mov     r11, [rsi-17h]
.text:0000000000405505                 mov     rcx, [rsi-0Fh]
.text:0000000000405509                 mov     rdx, [rsi-8]
.text:000000000040550D                 movdqu  xmmword ptr [rdi-3Fh], xmm0
.text:0000000000405512                 mov     [rdi-2Fh], r8
.text:0000000000405516                 mov     [rdi-27h], r9
.text:000000000040551A                 mov     [rdi-1Fh], r10
.text:000000000040551E                 mov     [rdi-17h], r11
.text:0000000000405522                 mov     [rdi-0Fh], rcx
.text:0000000000405526                 mov     [rdi-8], rdx
.text:000000000040552A                 retn
.text:000000000040552A ; ---------------------------------------------------------------------------
.text:000000000040552B                 align 10h
.text:0000000000405530
.text:0000000000405530 loc_405530:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405530                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405530                 movdqu  xmm0, xmmword ptr [rsi-37h] ; jumptable 0000000000402E80 case 55
.text:0000000000405530                                         ; jumptable 0000000000402FA6 case 71
.text:0000000000405530                                         ; jumptable 000000000040306D case 55
.text:0000000000405530                                         ; jumptable 00000000004031D4 case 71
.text:0000000000405530                                         ; jumptable 0000000000403295 case 55
.text:0000000000405530                                         ; jumptable 000000000040574F case 55
.text:0000000000405530                                         ; jumptable 000000000040581A case 55
.text:0000000000405530                                         ; jumptable 0000000000405905 case 55
.text:0000000000405530                                         ; jumptable 00000000004059C2 case 55
.text:0000000000405530                                         ; jumptable 0000000000403430 case 55
.text:0000000000405530                                         ; jumptable 00000000004034CE case 55
.text:0000000000405530                                         ; jumptable 0000000000403580 case 55
.text:0000000000405530                                         ; jumptable 000000000040361E case 55
.text:0000000000405530                                         ; jumptable 00000000004036D0 case 55
.text:0000000000405530                                         ; jumptable 000000000040376E case 55
.text:0000000000405530                                         ; jumptable 0000000000403820 case 55
.text:0000000000405530                                         ; jumptable 00000000004038BE case 55
.text:0000000000405530                                         ; jumptable 0000000000403970 case 55
.text:0000000000405530                                         ; jumptable 0000000000403A0E case 55
.text:0000000000405530                                         ; jumptable 0000000000403AC0 case 55
.text:0000000000405530                                         ; jumptable 0000000000403B5E case 55
.text:0000000000405530                                         ; jumptable 0000000000403C10 case 55
.text:0000000000405530                                         ; jumptable 0000000000403CAE case 55
.text:0000000000405530                                         ; jumptable 0000000000403D65 case 55
.text:0000000000405530                                         ; jumptable 0000000000403DFE case 55
.text:0000000000405530                                         ; jumptable 0000000000403EB0 case 55
.text:0000000000405530                                         ; jumptable 0000000000403F4E case 55
.text:0000000000405530                                         ; jumptable 0000000000404000 case 55
.text:0000000000405530                                         ; jumptable 000000000040409E case 55
.text:0000000000405530                                         ; jumptable
.text:0000000000405535                 mov     r9, [rsi-27h]
.text:0000000000405539                 mov     r10, [rsi-1Fh]
.text:000000000040553D                 mov     r11, [rsi-17h]
.text:0000000000405541                 mov     rcx, [rsi-0Fh]
.text:0000000000405545                 mov     rdx, [rsi-8]
.text:0000000000405549                 movdqu  xmmword ptr [rdi-37h], xmm0
.text:000000000040554E                 mov     [rdi-27h], r9
.text:0000000000405552                 mov     [rdi-1Fh], r10
.text:0000000000405556                 mov     [rdi-17h], r11
.text:000000000040555A                 mov     [rdi-0Fh], rcx
.text:000000000040555E                 mov     [rdi-8], rdx
.text:0000000000405562                 retn
.text:0000000000405562 ; ---------------------------------------------------------------------------
.text:0000000000405563                 align 10h
.text:0000000000405570
.text:0000000000405570 loc_405570:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405570                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405570                 mov     r8, [rsi-2Fh]   ; jumptable 0000000000402E80 case 47
.text:0000000000405570                                         ; jumptable 0000000000402FA6 case 63
.text:0000000000405570                                         ; jumptable 000000000040306D case 47
.text:0000000000405570                                         ; jumptable 00000000004031D4 case 63
.text:0000000000405570                                         ; jumptable 0000000000403295 case 47
.text:0000000000405570                                         ; jumptable 000000000040574F case 47
.text:0000000000405570                                         ; jumptable 000000000040581A case 47
.text:0000000000405570                                         ; jumptable 0000000000405905 case 47
.text:0000000000405570                                         ; jumptable 00000000004059C2 case 47
.text:0000000000405570                                         ; jumptable 0000000000403430 case 47
.text:0000000000405570                                         ; jumptable 00000000004034CE case 47
.text:0000000000405570                                         ; jumptable 0000000000403580 case 47
.text:0000000000405570                                         ; jumptable 000000000040361E case 47
.text:0000000000405570                                         ; jumptable 00000000004036D0 case 47
.text:0000000000405570                                         ; jumptable 000000000040376E case 47
.text:0000000000405570                                         ; jumptable 0000000000403820 case 47
.text:0000000000405570                                         ; jumptable 00000000004038BE case 47
.text:0000000000405570                                         ; jumptable 0000000000403970 case 47
.text:0000000000405570                                         ; jumptable 0000000000403A0E case 47
.text:0000000000405570                                         ; jumptable 0000000000403AC0 case 47
.text:0000000000405570                                         ; jumptable 0000000000403B5E case 47
.text:0000000000405570                                         ; jumptable 0000000000403C10 case 47
.text:0000000000405570                                         ; jumptable 0000000000403CAE case 47
.text:0000000000405570                                         ; jumptable 0000000000403D65 case 47
.text:0000000000405570                                         ; jumptable 0000000000403DFE case 47
.text:0000000000405570                                         ; jumptable 0000000000403EB0 case 47
.text:0000000000405570                                         ; jumptable 0000000000403F4E case 47
.text:0000000000405570                                         ; jumptable 0000000000404000 case 47
.text:0000000000405570                                         ; jumptable 000000000040409E case 47
.text:0000000000405570                                         ; jumptable
.text:0000000000405574                 mov     r9, [rsi-27h]
.text:0000000000405578                 mov     r10, [rsi-1Fh]
.text:000000000040557C                 mov     r11, [rsi-17h]
.text:0000000000405580                 mov     rcx, [rsi-0Fh]
.text:0000000000405584                 mov     rdx, [rsi-8]
.text:0000000000405588                 mov     [rdi-2Fh], r8
.text:000000000040558C                 mov     [rdi-27h], r9
.text:0000000000405590                 mov     [rdi-1Fh], r10
.text:0000000000405594                 mov     [rdi-17h], r11
.text:0000000000405598                 mov     [rdi-0Fh], rcx
.text:000000000040559C                 mov     [rdi-8], rdx
.text:00000000004055A0                 retn
.text:00000000004055A0 ; ---------------------------------------------------------------------------
.text:00000000004055A1                 align 10h
.text:00000000004055B0
.text:00000000004055B0 loc_4055B0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004055B0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004055B0                 mov     r9, [rsi-27h]   ; jumptable 0000000000402E80 case 39
.text:00000000004055B0                                         ; jumptable 0000000000402FA6 case 55
.text:00000000004055B0                                         ; jumptable 000000000040306D case 39
.text:00000000004055B0                                         ; jumptable 00000000004031D4 case 55
.text:00000000004055B0                                         ; jumptable 0000000000403295 case 39
.text:00000000004055B0                                         ; jumptable 000000000040574F case 39
.text:00000000004055B0                                         ; jumptable 000000000040581A case 39
.text:00000000004055B0                                         ; jumptable 0000000000405905 case 39
.text:00000000004055B0                                         ; jumptable 00000000004059C2 case 39
.text:00000000004055B0                                         ; jumptable 0000000000403430 case 39
.text:00000000004055B0                                         ; jumptable 00000000004034CE case 39
.text:00000000004055B0                                         ; jumptable 0000000000403580 case 39
.text:00000000004055B0                                         ; jumptable 000000000040361E case 39
.text:00000000004055B0                                         ; jumptable 00000000004036D0 case 39
.text:00000000004055B0                                         ; jumptable 000000000040376E case 39
.text:00000000004055B0                                         ; jumptable 0000000000403820 case 39
.text:00000000004055B0                                         ; jumptable 00000000004038BE case 39
.text:00000000004055B0                                         ; jumptable 0000000000403970 case 39
.text:00000000004055B0                                         ; jumptable 0000000000403A0E case 39
.text:00000000004055B0                                         ; jumptable 0000000000403AC0 case 39
.text:00000000004055B0                                         ; jumptable 0000000000403B5E case 39
.text:00000000004055B0                                         ; jumptable 0000000000403C10 case 39
.text:00000000004055B0                                         ; jumptable 0000000000403CAE case 39
.text:00000000004055B0                                         ; jumptable 0000000000403D65 case 39
.text:00000000004055B0                                         ; jumptable 0000000000403DFE case 39
.text:00000000004055B0                                         ; jumptable 0000000000403EB0 case 39
.text:00000000004055B0                                         ; jumptable 0000000000403F4E case 39
.text:00000000004055B0                                         ; jumptable 0000000000404000 case 39
.text:00000000004055B0                                         ; jumptable 000000000040409E case 39
.text:00000000004055B0                                         ; jumptable
.text:00000000004055B4                 mov     r10, [rsi-1Fh]
.text:00000000004055B8                 mov     r11, [rsi-17h]
.text:00000000004055BC                 mov     rcx, [rsi-0Fh]
.text:00000000004055C0                 mov     rdx, [rsi-8]
.text:00000000004055C4                 mov     [rdi-27h], r9
.text:00000000004055C8                 mov     [rdi-1Fh], r10
.text:00000000004055CC                 mov     [rdi-17h], r11
.text:00000000004055D0                 mov     [rdi-0Fh], rcx
.text:00000000004055D4                 mov     [rdi-8], rdx
.text:00000000004055D8                 retn
.text:00000000004055D8 ; ---------------------------------------------------------------------------
.text:00000000004055D9                 align 20h
.text:00000000004055E0
.text:00000000004055E0 loc_4055E0:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:00000000004055E0                                         ; __intel_ssse3_memmove+156↑j ...
.text:00000000004055E0                 mov     r10, [rsi-1Fh]  ; jumptable 0000000000402E80 case 31
.text:00000000004055E0                                         ; jumptable 0000000000402FA6 case 47
.text:00000000004055E0                                         ; jumptable 000000000040306D case 31
.text:00000000004055E0                                         ; jumptable 000000000040316A case 31
.text:00000000004055E0                                         ; jumptable 00000000004031D4 case 47
.text:00000000004055E0                                         ; jumptable 0000000000403295 case 31
.text:00000000004055E0                                         ; jumptable 0000000000403384 case 31
.text:00000000004055E0                                         ; jumptable 000000000040574F case 31
.text:00000000004055E0                                         ; jumptable 000000000040581A case 31
.text:00000000004055E0                                         ; jumptable 0000000000405905 case 31
.text:00000000004055E0                                         ; jumptable 00000000004059C2 case 31
.text:00000000004055E0                                         ; jumptable 0000000000403430 case 31
.text:00000000004055E0                                         ; jumptable 00000000004034CE case 31
.text:00000000004055E0                                         ; jumptable 0000000000403580 case 31
.text:00000000004055E0                                         ; jumptable 000000000040361E case 31
.text:00000000004055E0                                         ; jumptable 00000000004036D0 case 31
.text:00000000004055E0                                         ; jumptable 000000000040376E case 31
.text:00000000004055E0                                         ; jumptable 0000000000403820 case 31
.text:00000000004055E0                                         ; jumptable 00000000004038BE case 31
.text:00000000004055E0                                         ; jumptable 0000000000403970 case 31
.text:00000000004055E0                                         ; jumptable 0000000000403A0E case 31
.text:00000000004055E0                                         ; jumptable 0000000000403AC0 case 31
.text:00000000004055E0                                         ; jumptable 0000000000403B5E case 31
.text:00000000004055E0                                         ; jumptable 0000000000403C10 case 31
.text:00000000004055E0                                         ; jumptable 0000000000403CAE case 31
.text:00000000004055E0                                         ; jumptable 0000000000403D65 case 31
.text:00000000004055E0                                         ; jumptable 0000000000403DFE case 31
.text:00000000004055E0                                         ; jumptable 0000000000403EB0 case 31
.text:00000000004055E0                                         ; jumptable 0000000000403F4E case 31
.text:00000000004055E0                                         ; jumptable
.text:00000000004055E4                 mov     r11, [rsi-17h]
.text:00000000004055E8                 mov     rcx, [rsi-0Fh]
.text:00000000004055EC                 mov     rdx, [rsi-8]
.text:00000000004055F0                 mov     [rdi-1Fh], r10
.text:00000000004055F4                 mov     [rdi-17h], r11
.text:00000000004055F8                 mov     [rdi-0Fh], rcx
.text:00000000004055FC                 mov     [rdi-8], rdx
.text:0000000000405600                 retn
.text:0000000000405600 ; ---------------------------------------------------------------------------
.text:0000000000405601                 align 10h
.text:0000000000405610
.text:0000000000405610 loc_405610:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405610                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405610                 mov     r11, [rsi-17h]  ; jumptable 0000000000402E80 case 23
.text:0000000000405610                                         ; jumptable 0000000000402FA6 case 39
.text:0000000000405610                                         ; jumptable 000000000040306D case 23
.text:0000000000405610                                         ; jumptable 000000000040316A case 23
.text:0000000000405610                                         ; jumptable 00000000004031D4 case 39
.text:0000000000405610                                         ; jumptable 0000000000403295 case 23
.text:0000000000405610                                         ; jumptable 0000000000403384 case 23
.text:0000000000405610                                         ; jumptable 000000000040574F case 23
.text:0000000000405610                                         ; jumptable 000000000040581A case 23
.text:0000000000405610                                         ; jumptable 0000000000405905 case 23
.text:0000000000405610                                         ; jumptable 00000000004059C2 case 23
.text:0000000000405610                                         ; jumptable 0000000000403430 case 23
.text:0000000000405610                                         ; jumptable 00000000004034CE case 23
.text:0000000000405610                                         ; jumptable 0000000000403580 case 23
.text:0000000000405610                                         ; jumptable 000000000040361E case 23
.text:0000000000405610                                         ; jumptable 00000000004036D0 case 23
.text:0000000000405610                                         ; jumptable 000000000040376E case 23
.text:0000000000405610                                         ; jumptable 0000000000403820 case 23
.text:0000000000405610                                         ; jumptable 00000000004038BE case 23
.text:0000000000405610                                         ; jumptable 0000000000403970 case 23
.text:0000000000405610                                         ; jumptable 0000000000403A0E case 23
.text:0000000000405610                                         ; jumptable 0000000000403AC0 case 23
.text:0000000000405610                                         ; jumptable 0000000000403B5E case 23
.text:0000000000405610                                         ; jumptable 0000000000403C10 case 23
.text:0000000000405610                                         ; jumptable 0000000000403CAE case 23
.text:0000000000405610                                         ; jumptable 0000000000403D65 case 23
.text:0000000000405610                                         ; jumptable 0000000000403DFE case 23
.text:0000000000405610                                         ; jumptable 0000000000403EB0 case 23
.text:0000000000405610                                         ; jumptable 0000000000403F4E case 23
.text:0000000000405610                                         ; jumptable
.text:0000000000405614                 mov     rcx, [rsi-0Fh]
.text:0000000000405618                 mov     rdx, [rsi-8]
.text:000000000040561C                 mov     [rdi-17h], r11
.text:0000000000405620                 mov     [rdi-0Fh], rcx
.text:0000000000405624                 mov     [rdi-8], rdx
.text:0000000000405628                 retn
.text:0000000000405628 ; ---------------------------------------------------------------------------
.text:0000000000405629                 align 10h
.text:0000000000405630
.text:0000000000405630 loc_405630:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405630                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405630                 mov     rcx, [rsi-0Fh]  ; jumptable 0000000000402E80 case 15
.text:0000000000405630                                         ; jumptable 0000000000402FA6 case 31
.text:0000000000405630                                         ; jumptable 000000000040306D case 15
.text:0000000000405630                                         ; jumptable 000000000040316A case 15
.text:0000000000405630                                         ; jumptable 00000000004031D4 case 31
.text:0000000000405630                                         ; jumptable 0000000000403295 case 15
.text:0000000000405630                                         ; jumptable 0000000000403384 case 15
.text:0000000000405630                                         ; jumptable 000000000040574F case 15
.text:0000000000405630                                         ; jumptable 000000000040581A case 15
.text:0000000000405630                                         ; jumptable 0000000000405905 case 15
.text:0000000000405630                                         ; jumptable 00000000004059C2 case 15
.text:0000000000405630                                         ; jumptable 0000000000403430 case 15
.text:0000000000405630                                         ; jumptable 00000000004034CE case 15
.text:0000000000405630                                         ; jumptable 0000000000403580 case 15
.text:0000000000405630                                         ; jumptable 000000000040361E case 15
.text:0000000000405630                                         ; jumptable 00000000004036D0 case 15
.text:0000000000405630                                         ; jumptable 000000000040376E case 15
.text:0000000000405630                                         ; jumptable 0000000000403820 case 15
.text:0000000000405630                                         ; jumptable 00000000004038BE case 15
.text:0000000000405630                                         ; jumptable 0000000000403970 case 15
.text:0000000000405630                                         ; jumptable 0000000000403A0E case 15
.text:0000000000405630                                         ; jumptable 0000000000403AC0 case 15
.text:0000000000405630                                         ; jumptable 0000000000403B5E case 15
.text:0000000000405630                                         ; jumptable 0000000000403C10 case 15
.text:0000000000405630                                         ; jumptable 0000000000403CAE case 15
.text:0000000000405630                                         ; jumptable 0000000000403D65 case 15
.text:0000000000405630                                         ; jumptable 0000000000403DFE case 15
.text:0000000000405630                                         ; jumptable 0000000000403EB0 case 15
.text:0000000000405630                                         ; jumptable 0000000000403F4E case 15
.text:0000000000405630                                         ; jumptable
.text:0000000000405634                 mov     rdx, [rsi-8]
.text:0000000000405638                 mov     [rdi-0Fh], rcx
.text:000000000040563C                 mov     [rdi-8], rdx
.text:0000000000405640                 retn
.text:0000000000405640 ; ---------------------------------------------------------------------------
.text:0000000000405641                 align 10h
.text:0000000000405650
.text:0000000000405650 loc_405650:                             ; CODE XREF: __intel_ssse3_memmove+30↑j
.text:0000000000405650                                         ; __intel_ssse3_memmove+156↑j ...
.text:0000000000405650                 mov     edx, [rsi-7]    ; jumptable 0000000000402E80 case 7
.text:0000000000405650                                         ; jumptable 0000000000402FA6 case 23
.text:0000000000405650                                         ; jumptable 000000000040306D case 7
.text:0000000000405650                                         ; jumptable 000000000040316A case 7
.text:0000000000405650                                         ; jumptable 00000000004031D4 case 23
.text:0000000000405650                                         ; jumptable 0000000000403295 case 7
.text:0000000000405650                                         ; jumptable 0000000000403384 case 7
.text:0000000000405650                                         ; jumptable 000000000040574F case 7
.text:0000000000405650                                         ; jumptable 000000000040581A case 7
.text:0000000000405650                                         ; jumptable 0000000000405905 case 7
.text:0000000000405650                                         ; jumptable 00000000004059C2 case 7
.text:0000000000405650                                         ; jumptable 0000000000403430 case 7
.text:0000000000405650                                         ; jumptable 00000000004034CE case 7
.text:0000000000405650                                         ; jumptable 0000000000403580 case 7
.text:0000000000405650                                         ; jumptable 000000000040361E case 7
.text:0000000000405650                                         ; jumptable 00000000004036D0 case 7
.text:0000000000405650                                         ; jumptable 000000000040376E case 7
.text:0000000000405650                                         ; jumptable 0000000000403820 case 7
.text:0000000000405650                                         ; jumptable 00000000004038BE case 7
.text:0000000000405650                                         ; jumptable 0000000000403970 case 7
.text:0000000000405650                                         ; jumptable 0000000000403A0E case 7
.text:0000000000405650                                         ; jumptable 0000000000403AC0 case 7
.text:0000000000405650                                         ; jumptable 0000000000403B5E case 7
.text:0000000000405650                                         ; jumptable 0000000000403C10 case 7
.text:0000000000405650                                         ; jumptable 0000000000403CAE case 7
.text:0000000000405650                                         ; jumptable 0000000000403D65 case 7
.text:0000000000405650                                         ; jumptable 0000000000403DFE case 7
.text:0000000000405650                                         ; jumptable 0000000000403EB0 case 7
.text:0000000000405650                                         ; jumptable 0000000000403F4E case 7
.text:0000000000405650                                         ; jumptable 0000000000404000 case 7
.text:0000000000405650                                         ; ju
.text:0000000000405653                 mov     ecx, [rsi-4]
.text:0000000000405656                 mov     [rdi-7], edx
.text:0000000000405659                 mov     [rdi-4], ecx
.text:000000000040565C                 retn
.text:000000000040565C ; ---------------------------------------------------------------------------
.text:000000000040565D                 align 20h
.text:0000000000405660
.text:0000000000405660 loc_405660:                             ; CODE XREF: __intel_ssse3_memmove+67↑j
.text:0000000000405660                 movdqu  xmm1, xmmword ptr [rsi]
.text:0000000000405664                 lea     rsi, [rsi+10h]
.text:0000000000405668                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040566D                 movntdq xmmword ptr [rdi], xmm1
.text:0000000000405671                 lea     rdi, [rdi+10h]
.text:0000000000405675                 lea     rdx, [rdx-90h]
.text:000000000040567C                 mov     r9, rsi
.text:000000000040567F                 sub     r9, rdi
.text:0000000000405682                 cmp     r9, rdx
.text:0000000000405685                 jnb     short loc_405694
.text:0000000000405687                 shl     rcx, 2
.text:000000000040568B                 cmp     rdx, rcx
.text:000000000040568E                 jb      loc_405760
.text:0000000000405694
.text:0000000000405694 loc_405694:                             ; CODE XREF: __intel_ssse3_memmove+2835↑j
.text:0000000000405694                                         ; __intel_ssse3_memmove+28A7↓j
.text:0000000000405694                 movdqu  xmm0, xmmword ptr [rsi]
.text:0000000000405698                 movdqu  xmm1, xmmword ptr [rsi+10h]
.text:000000000040569D                 movdqu  xmm2, xmmword ptr [rsi+20h]
.text:00000000004056A2                 movdqu  xmm3, xmmword ptr [rsi+30h]
.text:00000000004056A7                 movdqu  xmm4, xmmword ptr [rsi+40h]
.text:00000000004056AC                 movdqu  xmm5, xmmword ptr [rsi+50h]
.text:00000000004056B1                 movdqu  xmm6, xmmword ptr [rsi+60h]
.text:00000000004056B6                 movdqu  xmm7, xmmword ptr [rsi+70h]
.text:00000000004056BB                 lea     rsi, [rsi+80h]
.text:00000000004056C2                 sub     rdx, 80h
.text:00000000004056C9                 movntdq xmmword ptr [rdi], xmm0
.text:00000000004056CD                 movntdq xmmword ptr [rdi+10h], xmm1
.text:00000000004056D2                 movntdq xmmword ptr [rdi+20h], xmm2
.text:00000000004056D7                 movntdq xmmword ptr [rdi+30h], xmm3
.text:00000000004056DC                 movntdq xmmword ptr [rdi+40h], xmm4
.text:00000000004056E1                 movntdq xmmword ptr [rdi+50h], xmm5
.text:00000000004056E6                 movntdq xmmword ptr [rdi+60h], xmm6
.text:00000000004056EB                 movntdq xmmword ptr [rdi+70h], xmm7
.text:00000000004056F0                 lea     rdi, [rdi+80h]
.text:00000000004056F7                 jnb     short loc_405694
.text:00000000004056F9                 cmp     rdx, 0FFFFFFFFFFFFFFC0h
.text:00000000004056FD                 lea     rdx, [rdx+80h]
.text:0000000000405704                 jl      short loc_405738
.text:0000000000405706                 movdqu  xmm0, xmmword ptr [rsi]
.text:000000000040570A                 movdqu  xmm1, xmmword ptr [rsi+10h]
.text:000000000040570F                 movdqu  xmm2, xmmword ptr [rsi+20h]
.text:0000000000405714                 movdqu  xmm3, xmmword ptr [rsi+30h]
.text:0000000000405719                 lea     rsi, [rsi+40h]
.text:000000000040571D                 movntdq xmmword ptr [rdi], xmm0
.text:0000000000405721                 movntdq xmmword ptr [rdi+10h], xmm1
.text:0000000000405726                 movntdq xmmword ptr [rdi+20h], xmm2
.text:000000000040572B                 movntdq xmmword ptr [rdi+30h], xmm3
.text:0000000000405730                 lea     rdi, [rdi+40h]
.text:0000000000405734                 sub     rdx, 40h ; '@'
.text:0000000000405738
.text:0000000000405738 loc_405738:                             ; CODE XREF: __intel_ssse3_memmove+28B4↑j
.text:0000000000405738                 add     rsi, rdx
.text:000000000040573B                 add     rdi, rdx
.text:000000000040573E                 sfence
.text:0000000000405741                 lea     r11, jpt_402E80
.text:0000000000405748                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:000000000040574C                 add     rdx, r11
.text:000000000040574F                 jmp     rdx             ; switch jump
.text:0000000000405751 ; ---------------------------------------------------------------------------
.text:0000000000405751                 ud2
.text:0000000000405751 ; ---------------------------------------------------------------------------
.text:0000000000405753                 align 20h
.text:0000000000405760
.text:0000000000405760 loc_405760:                             ; CODE XREF: __intel_ssse3_memmove+283E↑j
.text:0000000000405760                                         ; __intel_ssse3_memmove+2979↓j
.text:0000000000405760                 prefetcht0 byte ptr [rsi+1C0h]
.text:0000000000405767                 prefetcht0 byte ptr [rsi+200h]
.text:000000000040576E                 movdqu  xmm0, xmmword ptr [rsi]
.text:0000000000405772                 movdqu  xmm1, xmmword ptr [rsi+10h]
.text:0000000000405777                 movdqu  xmm2, xmmword ptr [rsi+20h]
.text:000000000040577C                 movdqu  xmm3, xmmword ptr [rsi+30h]
.text:0000000000405781                 movdqu  xmm4, xmmword ptr [rsi+40h]
.text:0000000000405786                 movdqu  xmm5, xmmword ptr [rsi+50h]
.text:000000000040578B                 movdqu  xmm6, xmmword ptr [rsi+60h]
.text:0000000000405790                 movdqu  xmm7, xmmword ptr [rsi+70h]
.text:0000000000405795                 lea     rsi, [rsi+80h]
.text:000000000040579C                 sub     rdx, 80h
.text:00000000004057A3                 movaps  xmmword ptr [rdi], xmm0
.text:00000000004057A6                 movaps  xmmword ptr [rdi+10h], xmm1
.text:00000000004057AA                 movaps  xmmword ptr [rdi+20h], xmm2
.text:00000000004057AE                 movaps  xmmword ptr [rdi+30h], xmm3
.text:00000000004057B2                 movaps  xmmword ptr [rdi+40h], xmm4
.text:00000000004057B6                 movaps  xmmword ptr [rdi+50h], xmm5
.text:00000000004057BA                 movaps  xmmword ptr [rdi+60h], xmm6
.text:00000000004057BE                 movaps  xmmword ptr [rdi+70h], xmm7
.text:00000000004057C2                 lea     rdi, [rdi+80h]
.text:00000000004057C9                 jnb     short loc_405760
.text:00000000004057CB                 cmp     rdx, 0FFFFFFFFFFFFFFC0h
.text:00000000004057CF                 lea     rdx, [rdx+80h]
.text:00000000004057D6                 jl      short loc_405806
.text:00000000004057D8                 movdqu  xmm0, xmmword ptr [rsi]
.text:00000000004057DC                 movdqu  xmm1, xmmword ptr [rsi+10h]
.text:00000000004057E1                 movdqu  xmm2, xmmword ptr [rsi+20h]
.text:00000000004057E6                 movdqu  xmm3, xmmword ptr [rsi+30h]
.text:00000000004057EB                 lea     rsi, [rsi+40h]
.text:00000000004057EF                 movaps  xmmword ptr [rdi], xmm0
.text:00000000004057F2                 movaps  xmmword ptr [rdi+10h], xmm1
.text:00000000004057F6                 movaps  xmmword ptr [rdi+20h], xmm2
.text:00000000004057FA                 movaps  xmmword ptr [rdi+30h], xmm3
.text:00000000004057FE                 lea     rdi, [rdi+40h]
.text:0000000000405802                 sub     rdx, 40h ; '@'
.text:0000000000405806
.text:0000000000405806 loc_405806:                             ; CODE XREF: __intel_ssse3_memmove+2986↑j
.text:0000000000405806                 add     rsi, rdx
.text:0000000000405809                 add     rdi, rdx
.text:000000000040580C                 lea     r11, jpt_402E80
.text:0000000000405813                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000405817                 add     rdx, r11
.text:000000000040581A                 jmp     rdx             ; switch jump
.text:000000000040581C ; ---------------------------------------------------------------------------
.text:000000000040581C                 ud2
.text:000000000040581C ; ---------------------------------------------------------------------------
.text:000000000040581E                 align 20h
.text:0000000000405820
.text:0000000000405820 loc_405820:                             ; CODE XREF: __intel_ssse3_memmove+BD↑j
.text:0000000000405820                 movdqu  xmm1, xmmword ptr [rsi-10h]
.text:0000000000405825                 lea     rsi, [rsi-10h]
.text:0000000000405829                 movdqu  xmmword ptr [r8], xmm0
.text:000000000040582E                 movdqa  xmmword ptr [rdi-10h], xmm1
.text:0000000000405833                 lea     rdi, [rdi-10h]
.text:0000000000405837                 lea     rdx, [rdx-90h]
.text:000000000040583E                 mov     r9, rdi
.text:0000000000405841                 sub     r9, rsi
.text:0000000000405844                 cmp     r9, rdx
.text:0000000000405847                 jnb     short loc_405852
.text:0000000000405849                 cmp     r9, rcx
.text:000000000040584C                 jb      loc_405910
.text:0000000000405852
.text:0000000000405852 loc_405852:                             ; CODE XREF: __intel_ssse3_memmove+29F7↑j
.text:0000000000405852                                         ; __intel_ssse3_memmove+2A61↓j
.text:0000000000405852                 movdqu  xmm0, xmmword ptr [rsi-10h]
.text:0000000000405857                 movdqu  xmm1, xmmword ptr [rsi-20h]
.text:000000000040585C                 movdqu  xmm2, xmmword ptr [rsi-30h]
.text:0000000000405861                 movdqu  xmm3, xmmword ptr [rsi-40h]
.text:0000000000405866                 movdqu  xmm4, xmmword ptr [rsi-50h]
.text:000000000040586B                 movdqu  xmm5, xmmword ptr [rsi-60h]
.text:0000000000405870                 movdqu  xmm6, xmmword ptr [rsi-70h]
.text:0000000000405875                 movdqu  xmm7, xmmword ptr [rsi-80h]
.text:000000000040587A                 lea     rsi, [rsi-80h]
.text:000000000040587E                 sub     rdx, 80h
.text:0000000000405885                 movntdq xmmword ptr [rdi-10h], xmm0
.text:000000000040588A                 movntdq xmmword ptr [rdi-20h], xmm1
.text:000000000040588F                 movntdq xmmword ptr [rdi-30h], xmm2
.text:0000000000405894                 movntdq xmmword ptr [rdi-40h], xmm3
.text:0000000000405899                 movntdq xmmword ptr [rdi-50h], xmm4
.text:000000000040589E                 movntdq xmmword ptr [rdi-60h], xmm5
.text:00000000004058A3                 movntdq xmmword ptr [rdi-70h], xmm6
.text:00000000004058A8                 movntdq xmmword ptr [rdi-80h], xmm7
.text:00000000004058AD                 lea     rdi, [rdi-80h]
.text:00000000004058B1                 jnb     short loc_405852
.text:00000000004058B3                 cmp     rdx, 0FFFFFFFFFFFFFFC0h
.text:00000000004058B7                 lea     rdx, [rdx+80h]
.text:00000000004058BE                 jl      short loc_4058F4
.text:00000000004058C0                 movdqu  xmm0, xmmword ptr [rsi-10h]
.text:00000000004058C5                 movdqu  xmm1, xmmword ptr [rsi-20h]
.text:00000000004058CA                 movdqu  xmm2, xmmword ptr [rsi-30h]
.text:00000000004058CF                 movdqu  xmm3, xmmword ptr [rsi-40h]
.text:00000000004058D4                 lea     rsi, [rsi-40h]
.text:00000000004058D8                 movntdq xmmword ptr [rdi-10h], xmm0
.text:00000000004058DD                 movntdq xmmword ptr [rdi-20h], xmm1
.text:00000000004058E2                 movntdq xmmword ptr [rdi-30h], xmm2
.text:00000000004058E7                 movntdq xmmword ptr [rdi-40h], xmm3
.text:00000000004058EC                 lea     rdi, [rdi-40h]
.text:00000000004058F0                 sub     rdx, 40h ; '@'
.text:00000000004058F4
.text:00000000004058F4 loc_4058F4:                             ; CODE XREF: __intel_ssse3_memmove+2A6E↑j
.text:00000000004058F4                 sfence
.text:00000000004058F7                 lea     r11, jpt_402E80
.text:00000000004058FE                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:0000000000405902                 add     rdx, r11
.text:0000000000405905                 jmp     rdx             ; switch jump
.text:0000000000405907 ; ---------------------------------------------------------------------------
.text:0000000000405907                 ud2
.text:0000000000405907 ; ---------------------------------------------------------------------------
.text:0000000000405909                 align 10h
.text:0000000000405910
.text:0000000000405910 loc_405910:                             ; CODE XREF: __intel_ssse3_memmove+29FC↑j
.text:0000000000405910                                         ; __intel_ssse3_memmove+2B25↓j
.text:0000000000405910                 prefetcht0 byte ptr [rsi-1C0h]
.text:0000000000405917                 prefetcht0 byte ptr [rsi-200h]
.text:000000000040591E                 movdqu  xmm0, xmmword ptr [rsi-10h]
.text:0000000000405923                 movdqu  xmm1, xmmword ptr [rsi-20h]
.text:0000000000405928                 movdqu  xmm2, xmmword ptr [rsi-30h]
.text:000000000040592D                 movdqu  xmm3, xmmword ptr [rsi-40h]
.text:0000000000405932                 movdqu  xmm4, xmmword ptr [rsi-50h]
.text:0000000000405937                 movdqu  xmm5, xmmword ptr [rsi-60h]
.text:000000000040593C                 movdqu  xmm6, xmmword ptr [rsi-70h]
.text:0000000000405941                 movdqu  xmm7, xmmword ptr [rsi-80h]
.text:0000000000405946                 lea     rsi, [rsi-80h]
.text:000000000040594A                 sub     rdx, 80h
.text:0000000000405951                 movaps  xmmword ptr [rdi-10h], xmm0
.text:0000000000405955                 movaps  xmmword ptr [rdi-20h], xmm1
.text:0000000000405959                 movaps  xmmword ptr [rdi-30h], xmm2
.text:000000000040595D                 movaps  xmmword ptr [rdi-40h], xmm3
.text:0000000000405961                 movaps  xmmword ptr [rdi-50h], xmm4
.text:0000000000405965                 movaps  xmmword ptr [rdi-60h], xmm5
.text:0000000000405969                 movaps  xmmword ptr [rdi-70h], xmm6
.text:000000000040596D                 movaps  xmmword ptr [rdi-80h], xmm7
.text:0000000000405971                 lea     rdi, [rdi-80h]
.text:0000000000405975                 jnb     short loc_405910
.text:0000000000405977                 cmp     rdx, 0FFFFFFFFFFFFFFC0h
.text:000000000040597B                 lea     rdx, [rdx+80h]
.text:0000000000405982                 jl      short loc_4059B4
.text:0000000000405984                 movdqu  xmm0, xmmword ptr [rsi-10h]
.text:0000000000405989                 movdqu  xmm1, xmmword ptr [rsi-20h]
.text:000000000040598E                 movdqu  xmm2, xmmword ptr [rsi-30h]
.text:0000000000405993                 movdqu  xmm3, xmmword ptr [rsi-40h]
.text:0000000000405998                 lea     rsi, [rsi-40h]
.text:000000000040599C                 movaps  xmmword ptr [rdi-10h], xmm0
.text:00000000004059A0                 movaps  xmmword ptr [rdi-20h], xmm1
.text:00000000004059A4                 movaps  xmmword ptr [rdi-30h], xmm2
.text:00000000004059A8                 movaps  xmmword ptr [rdi-40h], xmm3
.text:00000000004059AC                 lea     rdi, [rdi-40h]
.text:00000000004059B0                 sub     rdx, 40h ; '@'
.text:00000000004059B4
.text:00000000004059B4 loc_4059B4:                             ; CODE XREF: __intel_ssse3_memmove+2B32↑j
.text:00000000004059B4                 lea     r11, jpt_402E80
.text:00000000004059BB                 movsxd  rdx, ds:(jpt_402E80 - 409C60h)[r11+rdx*4] ; switch 80 cases
.text:00000000004059BF                 add     rdx, r11
.text:00000000004059C2                 jmp     rdx             ; switch jump
.text:00000000004059C2 __intel_ssse3_memmove endp
.text:00000000004059C2
.text:00000000004059C4 ; ---------------------------------------------------------------------------
.text:00000000004059C4                 ud2
.text:00000000004059C4 ; } // starts at 402E50
.text:00000000004059C4 ; ---------------------------------------------------------------------------
.text:00000000004059C6                 align 10h
.text:00000000004059D0
.text:00000000004059D0 ; =============== S U B R O U T I N E =======================================
.text:00000000004059D0
.text:00000000004059D0
.text:00000000004059D0                 public __intel_ssse3_rep_memmove
.text:00000000004059D0 __intel_ssse3_rep_memmove proc near     ; CODE XREF: _intel_fast_memmove_P↑j
.text:00000000004059D0 ; __unwind {
.text:00000000004059D0                 mov     rax, rdi
.text:00000000004059D3                 cmp     rdi, rsi
.text:00000000004059D6                 jb      short loc_4059FE
.text:00000000004059D8                 jz      locret_407E3E   ; jumptable 00000000004059FA case 0
.text:00000000004059D8                                         ; jumptable 0000000000405BF9 case 0
.text:00000000004059D8                                         ; jumptable 0000000000405D72 case 0
.text:00000000004059D8                                         ; jumptable 0000000000405EF2 case 0
.text:00000000004059D8                                         ; jumptable 0000000000406072 case 0
.text:00000000004059D8                                         ; jumptable 00000000004061F2 case 0
.text:00000000004059D8                                         ; jumptable 0000000000406372 case 0
.text:00000000004059D8                                         ; jumptable 00000000004064F2 case 0
.text:00000000004059D8                                         ; jumptable 0000000000406672 case 0
.text:00000000004059D8                                         ; jumptable 00000000004067F2 case 0
.text:00000000004059D8                                         ; jumptable 0000000000406972 case 0
.text:00000000004059D8                                         ; jumptable 0000000000406AF2 case 0
.text:00000000004059D8                                         ; jumptable 0000000000406C72 case 0
.text:00000000004059D8                                         ; jumptable 0000000000406DF2 case 0
.text:00000000004059D8                                         ; jumptable 0000000000406F72 case 0
.text:00000000004059D8                                         ; jumptable 00000000004070F2 case 0
.text:00000000004059D8                                         ; jumptable 0000000000407272 case 0
.text:00000000004059D8                                         ; jumptable 00000000004075BF case 0
.text:00000000004059DE                 cmp     rdx, 90h        ; switch 144 cases
.text:00000000004059E5                 jnb     def_4059FA      ; jumptable 00000000004059FA default case
.text:00000000004059EB                 lea     r11, jpt_4059FA
.text:00000000004059F2                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4]
.text:00000000004059F6                 lea     rdx, [r11+rdx]
.text:00000000004059FA                 jmp     rdx             ; switch jump
.text:00000000004059FC ; ---------------------------------------------------------------------------
.text:00000000004059FC                 ud2
.text:00000000004059FE ; ---------------------------------------------------------------------------
.text:00000000004059FE
.text:00000000004059FE loc_4059FE:                             ; CODE XREF: __intel_ssse3_rep_memmove+6↑j
.text:00000000004059FE                 cmp     rdx, 90h        ; switch 144 cases
.text:0000000000405A05                 jnb     short def_405A1C ; jumptable 0000000000405A1C default case
.text:0000000000405A07                 add     rsi, rdx
.text:0000000000405A0A                 add     rdi, rdx
.text:0000000000405A0D                 lea     r11, jpt_405A1C
.text:0000000000405A14                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4]
.text:0000000000405A18                 lea     rdx, [r11+rdx]
.text:0000000000405A1C                 jmp     rdx             ; switch jump
.text:0000000000405A1E ; ---------------------------------------------------------------------------
.text:0000000000405A1E                 ud2
.text:0000000000405A20 ; ---------------------------------------------------------------------------
.text:0000000000405A20
.text:0000000000405A20 def_405A1C:                             ; CODE XREF: __intel_ssse3_rep_memmove+35↑j
.text:0000000000405A20                 movdqu  xmm0, xmmword ptr [rsi] ; jumptable 0000000000405A1C default case
.text:0000000000405A24                 mov     r8, rdi
.text:0000000000405A27                 and     rdi, 0FFFFFFFFFFFFFFF0h
.text:0000000000405A2B                 add     rdi, 10h
.text:0000000000405A2F                 mov     r9, rdi
.text:0000000000405A32                 sub     r9, r8
.text:0000000000405A35                 sub     rdx, r9
.text:0000000000405A38                 add     rsi, r9
.text:0000000000405A3B                 mov     r9, rsi
.text:0000000000405A3E                 and     r9, 0Fh         ; switch 16 cases
.text:0000000000405A42                 jz      loc_405AE0      ; jumptable 0000000000405A6C case 0
.text:0000000000405A48                 mov     ecx, cs:__libirc_data_cache_size
.text:0000000000405A4E                 cmp     rdx, rcx
.text:0000000000405A51                 jnb     loc_407280
.text:0000000000405A57                 lea     r11, jpt_405A6C
.text:0000000000405A5E                 sub     rdx, 80h
.text:0000000000405A65                 movsxd  r9, ds:(jpt_405A6C - 40A2A0h)[r11+r9*4]
.text:0000000000405A69                 add     r9, r11
.text:0000000000405A6C                 jmp     r9              ; switch jump
.text:0000000000405A6F ; ---------------------------------------------------------------------------
.text:0000000000405A6F                 ud2
.text:0000000000405A6F ; ---------------------------------------------------------------------------
.text:0000000000405A71                 align 20h
.text:0000000000405A80
.text:0000000000405A80 def_4059FA:                             ; CODE XREF: __intel_ssse3_rep_memmove+15↑j
.text:0000000000405A80                 mov     ecx, cs:__libirc_data_cache_size ; jumptable 00000000004059FA default case
.text:0000000000405A86                 shl     rcx, 1
.text:0000000000405A89                 cmp     rdx, rcx
.text:0000000000405A8C                 ja      loc_407420
.text:0000000000405A92                 add     rdi, rdx
.text:0000000000405A95                 add     rsi, rdx
.text:0000000000405A98                 movdqu  xmm0, xmmword ptr [rsi-10h]
.text:0000000000405A9D                 lea     r8, [rdi-10h]
.text:0000000000405AA1                 mov     r9, rdi
.text:0000000000405AA4                 and     r9, 0Fh
.text:0000000000405AA8                 xor     rdi, r9
.text:0000000000405AAB                 sub     rsi, r9
.text:0000000000405AAE                 sub     rdx, r9
.text:0000000000405AB1                 mov     r9, rsi
.text:0000000000405AB4                 and     r9, 0Fh         ; switch 16 cases
.text:0000000000405AB8                 jz      loc_405B80      ; jumptable 0000000000405AD3 case 0
.text:0000000000405ABE                 lea     r11, jpt_405AD3
.text:0000000000405AC5                 sub     rdx, 80h
.text:0000000000405ACC                 movsxd  r9, ds:(jpt_405AD3 - 40A2E0h)[r11+r9*4]
.text:0000000000405AD0                 add     r9, r11
.text:0000000000405AD3                 jmp     r9              ; switch jump
.text:0000000000405AD6 ; ---------------------------------------------------------------------------
.text:0000000000405AD6                 ud2
.text:0000000000405AD6 ; ---------------------------------------------------------------------------
.text:0000000000405AD8                 align 20h
.text:0000000000405AE0
.text:0000000000405AE0 loc_405AE0:                             ; CODE XREF: __intel_ssse3_rep_memmove+72↑j
.text:0000000000405AE0                                         ; __intel_ssse3_rep_memmove+9C↑j
.text:0000000000405AE0                                         ; DATA XREF: ...
.text:0000000000405AE0                 mov     r9, rdx         ; jumptable 0000000000405A6C case 0
.text:0000000000405AE3                 shr     r9, 8
.text:0000000000405AE7                 add     r9, rdx
.text:0000000000405AEA                 mov     ecx, cs:__libirc_data_cache_size_half
.text:0000000000405AF0                 cmp     r9, rcx
.text:0000000000405AF3                 jnb     loc_407280
.text:0000000000405AF9                 sub     rdx, 80h
.text:0000000000405B00
.text:0000000000405B00 loc_405B00:                             ; CODE XREF: __intel_ssse3_rep_memmove+185↓j
.text:0000000000405B00                 movdqa  xmm1, xmmword ptr [rsi]
.text:0000000000405B04                 movdqa  xmmword ptr [rdi], xmm1
.text:0000000000405B08                 movaps  xmm2, xmmword ptr [rsi+10h]
.text:0000000000405B0C                 movaps  xmmword ptr [rdi+10h], xmm2
.text:0000000000405B10                 movaps  xmm3, xmmword ptr [rsi+20h]
.text:0000000000405B14                 movaps  xmmword ptr [rdi+20h], xmm3
.text:0000000000405B18                 movaps  xmm4, xmmword ptr [rsi+30h]
.text:0000000000405B1C                 movaps  xmmword ptr [rdi+30h], xmm4
.text:0000000000405B20                 movaps  xmm1, xmmword ptr [rsi+40h]
.text:0000000000405B24                 movaps  xmmword ptr [rdi+40h], xmm1
.text:0000000000405B28                 movaps  xmm2, xmmword ptr [rsi+50h]
.text:0000000000405B2C                 movaps  xmmword ptr [rdi+50h], xmm2
.text:0000000000405B30                 movaps  xmm3, xmmword ptr [rsi+60h]
.text:0000000000405B34                 movaps  xmmword ptr [rdi+60h], xmm3
.text:0000000000405B38                 movaps  xmm4, xmmword ptr [rsi+70h]
.text:0000000000405B3C                 movaps  xmmword ptr [rdi+70h], xmm4
.text:0000000000405B40                 sub     rdx, 80h
.text:0000000000405B47                 lea     rsi, [rsi+80h]
.text:0000000000405B4E                 lea     rdi, [rdi+80h]
.text:0000000000405B55                 jnb     short loc_405B00
.text:0000000000405B57                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000405B5C                 add     rdx, 80h
.text:0000000000405B63                 add     rsi, rdx
.text:0000000000405B66                 add     rdi, rdx
.text:0000000000405B69                 lea     r11, jpt_405A1C
.text:0000000000405B70                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000405B74                 lea     rdx, [r11+rdx]
.text:0000000000405B78                 jmp     rdx             ; switch jump
.text:0000000000405B7A ; ---------------------------------------------------------------------------
.text:0000000000405B7A                 ud2
.text:0000000000405B7A ; ---------------------------------------------------------------------------
.text:0000000000405B7C                 align 20h
.text:0000000000405B80
.text:0000000000405B80 loc_405B80:                             ; CODE XREF: __intel_ssse3_rep_memmove+E8↑j
.text:0000000000405B80                                         ; __intel_ssse3_rep_memmove+103↑j
.text:0000000000405B80                                         ; DATA XREF: ...
.text:0000000000405B80                 sub     rdx, 80h        ; jumptable 0000000000405AD3 case 0
.text:0000000000405B87
.text:0000000000405B87 loc_405B87:                             ; CODE XREF: __intel_ssse3_rep_memmove+206↓j
.text:0000000000405B87                 movaps  xmm1, xmmword ptr [rsi-10h]
.text:0000000000405B8B                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000405B8F                 movaps  xmm2, xmmword ptr [rsi-20h]
.text:0000000000405B93                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000405B97                 movaps  xmm3, xmmword ptr [rsi-30h]
.text:0000000000405B9B                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000405B9F                 movaps  xmm4, xmmword ptr [rsi-40h]
.text:0000000000405BA3                 movaps  xmmword ptr [rdi-40h], xmm4
.text:0000000000405BA7                 movaps  xmm5, xmmword ptr [rsi-50h]
.text:0000000000405BAB                 movaps  xmmword ptr [rdi-50h], xmm5
.text:0000000000405BAF                 movaps  xmm5, xmmword ptr [rsi-60h]
.text:0000000000405BB3                 movaps  xmmword ptr [rdi-60h], xmm5
.text:0000000000405BB7                 movaps  xmm5, xmmword ptr [rsi-70h]
.text:0000000000405BBB                 movaps  xmmword ptr [rdi-70h], xmm5
.text:0000000000405BBF                 movaps  xmm5, xmmword ptr [rsi-80h]
.text:0000000000405BC3                 movaps  xmmword ptr [rdi-80h], xmm5
.text:0000000000405BC7                 sub     rdx, 80h
.text:0000000000405BCE                 lea     rdi, [rdi-80h]
.text:0000000000405BD2                 lea     rsi, [rsi-80h]
.text:0000000000405BD6                 jnb     short loc_405B87
.text:0000000000405BD8                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000405BDD                 add     rdx, 80h
.text:0000000000405BE4                 sub     rdi, rdx
.text:0000000000405BE7                 sub     rsi, rdx
.text:0000000000405BEA                 lea     r11, jpt_4059FA
.text:0000000000405BF1                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:0000000000405BF5                 lea     rdx, [r11+rdx]
.text:0000000000405BF9                 jmp     rdx             ; switch jump
.text:0000000000405BFB ; ---------------------------------------------------------------------------
.text:0000000000405BFB                 ud2
.text:0000000000405BFB ; ---------------------------------------------------------------------------
.text:0000000000405BFD                 align 20h
.text:0000000000405C00
.text:0000000000405C00 loc_405C00:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000405C00                                         ; __intel_ssse3_rep_memmove+2BE↓j
.text:0000000000405C00                                         ; DATA XREF: ...
.text:0000000000405C00                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 1
.text:0000000000405C07                 movaps  xmm1, xmmword ptr [rsi-1]
.text:0000000000405C0B                 movaps  xmm2, xmmword ptr [rsi+0Fh]
.text:0000000000405C0F                 movaps  xmm3, xmmword ptr [rsi+1Fh]
.text:0000000000405C13                 movaps  xmm4, xmmword ptr [rsi+2Fh]
.text:0000000000405C17                 movaps  xmm5, xmmword ptr [rsi+3Fh]
.text:0000000000405C1B                 movaps  xmm6, xmmword ptr [rsi+4Fh]
.text:0000000000405C1F                 movaps  xmm7, xmmword ptr [rsi+5Fh]
.text:0000000000405C23                 movaps  xmm8, xmmword ptr [rsi+6Fh]
.text:0000000000405C28                 movaps  xmm9, xmmword ptr [rsi+7Fh]
.text:0000000000405C2D                 lea     rsi, [rsi+80h]
.text:0000000000405C34                 palignr xmm9, xmm8, 1
.text:0000000000405C3B                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000405C40                 palignr xmm8, xmm7, 1
.text:0000000000405C47                 movaps  xmmword ptr [rdi+60h], xmm8
.text:0000000000405C4C                 palignr xmm7, xmm6, 1
.text:0000000000405C52                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000405C56                 palignr xmm6, xmm5, 1
.text:0000000000405C5C                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000405C60                 palignr xmm5, xmm4, 1
.text:0000000000405C66                 movaps  xmmword ptr [rdi+30h], xmm5
.text:0000000000405C6A                 palignr xmm4, xmm3, 1
.text:0000000000405C70                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000405C74                 palignr xmm3, xmm2, 1
.text:0000000000405C7A                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000405C7E                 palignr xmm2, xmm1, 1
.text:0000000000405C84                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000405C87                 lea     rdi, [rdi+80h]
.text:0000000000405C8E                 jnb     loc_405C00      ; jumptable 0000000000405A6C case 1
.text:0000000000405C94                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000405C99                 add     rdx, 80h
.text:0000000000405CA0                 add     rdi, rdx
.text:0000000000405CA3                 add     rsi, rdx
.text:0000000000405CA6                 lea     r11, jpt_405A1C
.text:0000000000405CAD                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000405CB1                 lea     rdx, [r11+rdx]
.text:0000000000405CB5                 jmp     rdx             ; switch jump
.text:0000000000405CB7 ; ---------------------------------------------------------------------------
.text:0000000000405CB7                 ud2
.text:0000000000405CB7 ; ---------------------------------------------------------------------------
.text:0000000000405CB9                 align 20h
.text:0000000000405CC0
.text:0000000000405CC0 loc_405CC0:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000405CC0                                         ; __intel_ssse3_rep_memmove+37B↓j
.text:0000000000405CC0                                         ; DATA XREF: ...
.text:0000000000405CC0                 movaps  xmm1, xmmword ptr [rsi-1] ; jumptable 0000000000405AD3 case 1
.text:0000000000405CC4                 movaps  xmm2, xmmword ptr [rsi-11h]
.text:0000000000405CC8                 palignr xmm1, xmm2, 1
.text:0000000000405CCE                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000405CD2                 movaps  xmm3, xmmword ptr [rsi-21h]
.text:0000000000405CD6                 palignr xmm2, xmm3, 1
.text:0000000000405CDC                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000405CE0                 movaps  xmm4, xmmword ptr [rsi-31h]
.text:0000000000405CE4                 palignr xmm3, xmm4, 1
.text:0000000000405CEA                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000405CEE                 movaps  xmm5, xmmword ptr [rsi-41h]
.text:0000000000405CF2                 palignr xmm4, xmm5, 1
.text:0000000000405CF8                 movaps  xmmword ptr [rdi-40h], xmm4
.text:0000000000405CFC                 movaps  xmm6, xmmword ptr [rsi-51h]
.text:0000000000405D00                 palignr xmm5, xmm6, 1
.text:0000000000405D06                 movaps  xmmword ptr [rdi-50h], xmm5
.text:0000000000405D0A                 movaps  xmm7, xmmword ptr [rsi-61h]
.text:0000000000405D0E                 palignr xmm6, xmm7, 1
.text:0000000000405D14                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000405D18                 movaps  xmm8, xmmword ptr [rsi-71h]
.text:0000000000405D1D                 palignr xmm7, xmm8, 1
.text:0000000000405D24                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000405D28                 movaps  xmm9, xmmword ptr [rsi-81h]
.text:0000000000405D30                 palignr xmm8, xmm9, 1
.text:0000000000405D37                 movaps  xmmword ptr [rdi-80h], xmm8
.text:0000000000405D3C                 sub     rdx, 80h
.text:0000000000405D43                 lea     rdi, [rdi-80h]
.text:0000000000405D47                 lea     rsi, [rsi-80h]
.text:0000000000405D4B                 jnb     loc_405CC0      ; jumptable 0000000000405AD3 case 1
.text:0000000000405D51                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000405D56                 add     rdx, 80h
.text:0000000000405D5D                 sub     rdi, rdx
.text:0000000000405D60                 sub     rsi, rdx
.text:0000000000405D63                 lea     r11, jpt_4059FA
.text:0000000000405D6A                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:0000000000405D6E                 lea     rdx, [r11+rdx]
.text:0000000000405D72                 jmp     rdx             ; switch jump
.text:0000000000405D74 ; ---------------------------------------------------------------------------
.text:0000000000405D74                 ud2
.text:0000000000405D74 ; ---------------------------------------------------------------------------
.text:0000000000405D76                 align 20h
.text:0000000000405D80
.text:0000000000405D80 loc_405D80:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000405D80                                         ; __intel_ssse3_rep_memmove+43E↓j
.text:0000000000405D80                                         ; DATA XREF: ...
.text:0000000000405D80                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 2
.text:0000000000405D87                 movaps  xmm1, xmmword ptr [rsi-2]
.text:0000000000405D8B                 movaps  xmm2, xmmword ptr [rsi+0Eh]
.text:0000000000405D8F                 movaps  xmm3, xmmword ptr [rsi+1Eh]
.text:0000000000405D93                 movaps  xmm4, xmmword ptr [rsi+2Eh]
.text:0000000000405D97                 movaps  xmm5, xmmword ptr [rsi+3Eh]
.text:0000000000405D9B                 movaps  xmm6, xmmword ptr [rsi+4Eh]
.text:0000000000405D9F                 movaps  xmm7, xmmword ptr [rsi+5Eh]
.text:0000000000405DA3                 movaps  xmm8, xmmword ptr [rsi+6Eh]
.text:0000000000405DA8                 movaps  xmm9, xmmword ptr [rsi+7Eh]
.text:0000000000405DAD                 lea     rsi, [rsi+80h]
.text:0000000000405DB4                 palignr xmm9, xmm8, 2
.text:0000000000405DBB                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000405DC0                 palignr xmm8, xmm7, 2
.text:0000000000405DC7                 movaps  xmmword ptr [rdi+60h], xmm8
.text:0000000000405DCC                 palignr xmm7, xmm6, 2
.text:0000000000405DD2                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000405DD6                 palignr xmm6, xmm5, 2
.text:0000000000405DDC                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000405DE0                 palignr xmm5, xmm4, 2
.text:0000000000405DE6                 movaps  xmmword ptr [rdi+30h], xmm5
.text:0000000000405DEA                 palignr xmm4, xmm3, 2
.text:0000000000405DF0                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000405DF4                 palignr xmm3, xmm2, 2
.text:0000000000405DFA                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000405DFE                 palignr xmm2, xmm1, 2
.text:0000000000405E04                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000405E07                 lea     rdi, [rdi+80h]
.text:0000000000405E0E                 jnb     loc_405D80      ; jumptable 0000000000405A6C case 2
.text:0000000000405E14                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000405E19                 add     rdx, 80h
.text:0000000000405E20                 add     rdi, rdx
.text:0000000000405E23                 add     rsi, rdx
.text:0000000000405E26                 lea     r11, jpt_405A1C
.text:0000000000405E2D                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000405E31                 lea     rdx, [r11+rdx]
.text:0000000000405E35                 jmp     rdx             ; switch jump
.text:0000000000405E37 ; ---------------------------------------------------------------------------
.text:0000000000405E37                 ud2
.text:0000000000405E37 ; ---------------------------------------------------------------------------
.text:0000000000405E39                 align 20h
.text:0000000000405E40
.text:0000000000405E40 loc_405E40:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000405E40                                         ; __intel_ssse3_rep_memmove+4FB↓j
.text:0000000000405E40                                         ; DATA XREF: ...
.text:0000000000405E40                 movaps  xmm1, xmmword ptr [rsi-2] ; jumptable 0000000000405AD3 case 2
.text:0000000000405E44                 movaps  xmm2, xmmword ptr [rsi-12h]
.text:0000000000405E48                 palignr xmm1, xmm2, 2
.text:0000000000405E4E                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000405E52                 movaps  xmm3, xmmword ptr [rsi-22h]
.text:0000000000405E56                 palignr xmm2, xmm3, 2
.text:0000000000405E5C                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000405E60                 movaps  xmm4, xmmword ptr [rsi-32h]
.text:0000000000405E64                 palignr xmm3, xmm4, 2
.text:0000000000405E6A                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000405E6E                 movaps  xmm5, xmmword ptr [rsi-42h]
.text:0000000000405E72                 palignr xmm4, xmm5, 2
.text:0000000000405E78                 movaps  xmmword ptr [rdi-40h], xmm4
.text:0000000000405E7C                 movaps  xmm6, xmmword ptr [rsi-52h]
.text:0000000000405E80                 palignr xmm5, xmm6, 2
.text:0000000000405E86                 movaps  xmmword ptr [rdi-50h], xmm5
.text:0000000000405E8A                 movaps  xmm7, xmmword ptr [rsi-62h]
.text:0000000000405E8E                 palignr xmm6, xmm7, 2
.text:0000000000405E94                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000405E98                 movaps  xmm8, xmmword ptr [rsi-72h]
.text:0000000000405E9D                 palignr xmm7, xmm8, 2
.text:0000000000405EA4                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000405EA8                 movaps  xmm9, xmmword ptr [rsi-82h]
.text:0000000000405EB0                 palignr xmm8, xmm9, 2
.text:0000000000405EB7                 movaps  xmmword ptr [rdi-80h], xmm8
.text:0000000000405EBC                 sub     rdx, 80h
.text:0000000000405EC3                 lea     rdi, [rdi-80h]
.text:0000000000405EC7                 lea     rsi, [rsi-80h]
.text:0000000000405ECB                 jnb     loc_405E40      ; jumptable 0000000000405AD3 case 2
.text:0000000000405ED1                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000405ED6                 add     rdx, 80h
.text:0000000000405EDD                 sub     rdi, rdx
.text:0000000000405EE0                 sub     rsi, rdx
.text:0000000000405EE3                 lea     r11, jpt_4059FA
.text:0000000000405EEA                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:0000000000405EEE                 lea     rdx, [r11+rdx]
.text:0000000000405EF2                 jmp     rdx             ; switch jump
.text:0000000000405EF4 ; ---------------------------------------------------------------------------
.text:0000000000405EF4                 ud2
.text:0000000000405EF4 ; ---------------------------------------------------------------------------
.text:0000000000405EF6                 align 20h
.text:0000000000405F00
.text:0000000000405F00 loc_405F00:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000405F00                                         ; __intel_ssse3_rep_memmove+5BE↓j
.text:0000000000405F00                                         ; DATA XREF: ...
.text:0000000000405F00                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 3
.text:0000000000405F07                 movaps  xmm1, xmmword ptr [rsi-3]
.text:0000000000405F0B                 movaps  xmm2, xmmword ptr [rsi+0Dh]
.text:0000000000405F0F                 movaps  xmm3, xmmword ptr [rsi+1Dh]
.text:0000000000405F13                 movaps  xmm4, xmmword ptr [rsi+2Dh]
.text:0000000000405F17                 movaps  xmm5, xmmword ptr [rsi+3Dh]
.text:0000000000405F1B                 movaps  xmm6, xmmword ptr [rsi+4Dh]
.text:0000000000405F1F                 movaps  xmm7, xmmword ptr [rsi+5Dh]
.text:0000000000405F23                 movaps  xmm8, xmmword ptr [rsi+6Dh]
.text:0000000000405F28                 movaps  xmm9, xmmword ptr [rsi+7Dh]
.text:0000000000405F2D                 lea     rsi, [rsi+80h]
.text:0000000000405F34                 palignr xmm9, xmm8, 3
.text:0000000000405F3B                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000405F40                 palignr xmm8, xmm7, 3
.text:0000000000405F47                 movaps  xmmword ptr [rdi+60h], xmm8
.text:0000000000405F4C                 palignr xmm7, xmm6, 3
.text:0000000000405F52                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000405F56                 palignr xmm6, xmm5, 3
.text:0000000000405F5C                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000405F60                 palignr xmm5, xmm4, 3
.text:0000000000405F66                 movaps  xmmword ptr [rdi+30h], xmm5
.text:0000000000405F6A                 palignr xmm4, xmm3, 3
.text:0000000000405F70                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000405F74                 palignr xmm3, xmm2, 3
.text:0000000000405F7A                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000405F7E                 palignr xmm2, xmm1, 3
.text:0000000000405F84                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000405F87                 lea     rdi, [rdi+80h]
.text:0000000000405F8E                 jnb     loc_405F00      ; jumptable 0000000000405A6C case 3
.text:0000000000405F94                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000405F99                 add     rdx, 80h
.text:0000000000405FA0                 add     rdi, rdx
.text:0000000000405FA3                 add     rsi, rdx
.text:0000000000405FA6                 lea     r11, jpt_405A1C
.text:0000000000405FAD                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000405FB1                 lea     rdx, [r11+rdx]
.text:0000000000405FB5                 jmp     rdx             ; switch jump
.text:0000000000405FB7 ; ---------------------------------------------------------------------------
.text:0000000000405FB7                 ud2
.text:0000000000405FB7 ; ---------------------------------------------------------------------------
.text:0000000000405FB9                 align 20h
.text:0000000000405FC0
.text:0000000000405FC0 loc_405FC0:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000405FC0                                         ; __intel_ssse3_rep_memmove+67B↓j
.text:0000000000405FC0                                         ; DATA XREF: ...
.text:0000000000405FC0                 movaps  xmm1, xmmword ptr [rsi-3] ; jumptable 0000000000405AD3 case 3
.text:0000000000405FC4                 movaps  xmm2, xmmword ptr [rsi-13h]
.text:0000000000405FC8                 palignr xmm1, xmm2, 3
.text:0000000000405FCE                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000405FD2                 movaps  xmm3, xmmword ptr [rsi-23h]
.text:0000000000405FD6                 palignr xmm2, xmm3, 3
.text:0000000000405FDC                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000405FE0                 movaps  xmm4, xmmword ptr [rsi-33h]
.text:0000000000405FE4                 palignr xmm3, xmm4, 3
.text:0000000000405FEA                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000405FEE                 movaps  xmm5, xmmword ptr [rsi-43h]
.text:0000000000405FF2                 palignr xmm4, xmm5, 3
.text:0000000000405FF8                 movaps  xmmword ptr [rdi-40h], xmm4
.text:0000000000405FFC                 movaps  xmm6, xmmword ptr [rsi-53h]
.text:0000000000406000                 palignr xmm5, xmm6, 3
.text:0000000000406006                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040600A                 movaps  xmm7, xmmword ptr [rsi-63h]
.text:000000000040600E                 palignr xmm6, xmm7, 3
.text:0000000000406014                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406018                 movaps  xmm8, xmmword ptr [rsi-73h]
.text:000000000040601D                 palignr xmm7, xmm8, 3
.text:0000000000406024                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000406028                 movaps  xmm9, xmmword ptr [rsi-83h]
.text:0000000000406030                 palignr xmm8, xmm9, 3
.text:0000000000406037                 movaps  xmmword ptr [rdi-80h], xmm8
.text:000000000040603C                 sub     rdx, 80h
.text:0000000000406043                 lea     rdi, [rdi-80h]
.text:0000000000406047                 lea     rsi, [rsi-80h]
.text:000000000040604B                 jnb     loc_405FC0      ; jumptable 0000000000405AD3 case 3
.text:0000000000406051                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406056                 add     rdx, 80h
.text:000000000040605D                 sub     rdi, rdx
.text:0000000000406060                 sub     rsi, rdx
.text:0000000000406063                 lea     r11, jpt_4059FA
.text:000000000040606A                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:000000000040606E                 lea     rdx, [r11+rdx]
.text:0000000000406072                 jmp     rdx             ; switch jump
.text:0000000000406074 ; ---------------------------------------------------------------------------
.text:0000000000406074                 ud2
.text:0000000000406074 ; ---------------------------------------------------------------------------
.text:0000000000406076                 align 20h
.text:0000000000406080
.text:0000000000406080 loc_406080:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406080                                         ; __intel_ssse3_rep_memmove+73E↓j
.text:0000000000406080                                         ; DATA XREF: ...
.text:0000000000406080                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 4
.text:0000000000406087                 movaps  xmm1, xmmword ptr [rsi-4]
.text:000000000040608B                 movaps  xmm2, xmmword ptr [rsi+0Ch]
.text:000000000040608F                 movaps  xmm3, xmmword ptr [rsi+1Ch]
.text:0000000000406093                 movaps  xmm4, xmmword ptr [rsi+2Ch]
.text:0000000000406097                 movaps  xmm5, xmmword ptr [rsi+3Ch]
.text:000000000040609B                 movaps  xmm6, xmmword ptr [rsi+4Ch]
.text:000000000040609F                 movaps  xmm7, xmmword ptr [rsi+5Ch]
.text:00000000004060A3                 movaps  xmm8, xmmword ptr [rsi+6Ch]
.text:00000000004060A8                 movaps  xmm9, xmmword ptr [rsi+7Ch]
.text:00000000004060AD                 lea     rsi, [rsi+80h]
.text:00000000004060B4                 palignr xmm9, xmm8, 4
.text:00000000004060BB                 movaps  xmmword ptr [rdi+70h], xmm9
.text:00000000004060C0                 palignr xmm8, xmm7, 4
.text:00000000004060C7                 movaps  xmmword ptr [rdi+60h], xmm8
.text:00000000004060CC                 palignr xmm7, xmm6, 4
.text:00000000004060D2                 movaps  xmmword ptr [rdi+50h], xmm7
.text:00000000004060D6                 palignr xmm6, xmm5, 4
.text:00000000004060DC                 movaps  xmmword ptr [rdi+40h], xmm6
.text:00000000004060E0                 palignr xmm5, xmm4, 4
.text:00000000004060E6                 movaps  xmmword ptr [rdi+30h], xmm5
.text:00000000004060EA                 palignr xmm4, xmm3, 4
.text:00000000004060F0                 movaps  xmmword ptr [rdi+20h], xmm4
.text:00000000004060F4                 palignr xmm3, xmm2, 4
.text:00000000004060FA                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004060FE                 palignr xmm2, xmm1, 4
.text:0000000000406104                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406107                 lea     rdi, [rdi+80h]
.text:000000000040610E                 jnb     loc_406080      ; jumptable 0000000000405A6C case 4
.text:0000000000406114                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406119                 add     rdx, 80h
.text:0000000000406120                 add     rdi, rdx
.text:0000000000406123                 add     rsi, rdx
.text:0000000000406126                 lea     r11, jpt_405A1C
.text:000000000040612D                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406131                 lea     rdx, [r11+rdx]
.text:0000000000406135                 jmp     rdx             ; switch jump
.text:0000000000406137 ; ---------------------------------------------------------------------------
.text:0000000000406137                 ud2
.text:0000000000406137 ; ---------------------------------------------------------------------------
.text:0000000000406139                 align 20h
.text:0000000000406140
.text:0000000000406140 loc_406140:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000406140                                         ; __intel_ssse3_rep_memmove+7FB↓j
.text:0000000000406140                                         ; DATA XREF: ...
.text:0000000000406140                 movaps  xmm1, xmmword ptr [rsi-4] ; jumptable 0000000000405AD3 case 4
.text:0000000000406144                 movaps  xmm2, xmmword ptr [rsi-14h]
.text:0000000000406148                 palignr xmm1, xmm2, 4
.text:000000000040614E                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000406152                 movaps  xmm3, xmmword ptr [rsi-24h]
.text:0000000000406156                 palignr xmm2, xmm3, 4
.text:000000000040615C                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000406160                 movaps  xmm4, xmmword ptr [rsi-34h]
.text:0000000000406164                 palignr xmm3, xmm4, 4
.text:000000000040616A                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040616E                 movaps  xmm5, xmmword ptr [rsi-44h]
.text:0000000000406172                 palignr xmm4, xmm5, 4
.text:0000000000406178                 movaps  xmmword ptr [rdi-40h], xmm4
.text:000000000040617C                 movaps  xmm6, xmmword ptr [rsi-54h]
.text:0000000000406180                 palignr xmm5, xmm6, 4
.text:0000000000406186                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040618A                 movaps  xmm7, xmmword ptr [rsi-64h]
.text:000000000040618E                 palignr xmm6, xmm7, 4
.text:0000000000406194                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406198                 movaps  xmm8, xmmword ptr [rsi-74h]
.text:000000000040619D                 palignr xmm7, xmm8, 4
.text:00000000004061A4                 movaps  xmmword ptr [rdi-70h], xmm7
.text:00000000004061A8                 movaps  xmm9, xmmword ptr [rsi-84h]
.text:00000000004061B0                 palignr xmm8, xmm9, 4
.text:00000000004061B7                 movaps  xmmword ptr [rdi-80h], xmm8
.text:00000000004061BC                 sub     rdx, 80h
.text:00000000004061C3                 lea     rdi, [rdi-80h]
.text:00000000004061C7                 lea     rsi, [rsi-80h]
.text:00000000004061CB                 jnb     loc_406140      ; jumptable 0000000000405AD3 case 4
.text:00000000004061D1                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004061D6                 add     rdx, 80h
.text:00000000004061DD                 sub     rdi, rdx
.text:00000000004061E0                 sub     rsi, rdx
.text:00000000004061E3                 lea     r11, jpt_4059FA
.text:00000000004061EA                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:00000000004061EE                 lea     rdx, [r11+rdx]
.text:00000000004061F2                 jmp     rdx             ; switch jump
.text:00000000004061F4 ; ---------------------------------------------------------------------------
.text:00000000004061F4                 ud2
.text:00000000004061F4 ; ---------------------------------------------------------------------------
.text:00000000004061F6                 align 20h
.text:0000000000406200
.text:0000000000406200 loc_406200:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406200                                         ; __intel_ssse3_rep_memmove+8BE↓j
.text:0000000000406200                                         ; DATA XREF: ...
.text:0000000000406200                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 5
.text:0000000000406207                 movaps  xmm1, xmmword ptr [rsi-5]
.text:000000000040620B                 movaps  xmm2, xmmword ptr [rsi+0Bh]
.text:000000000040620F                 movaps  xmm3, xmmword ptr [rsi+1Bh]
.text:0000000000406213                 movaps  xmm4, xmmword ptr [rsi+2Bh]
.text:0000000000406217                 movaps  xmm5, xmmword ptr [rsi+3Bh]
.text:000000000040621B                 movaps  xmm6, xmmword ptr [rsi+4Bh]
.text:000000000040621F                 movaps  xmm7, xmmword ptr [rsi+5Bh]
.text:0000000000406223                 movaps  xmm8, xmmword ptr [rsi+6Bh]
.text:0000000000406228                 movaps  xmm9, xmmword ptr [rsi+7Bh]
.text:000000000040622D                 lea     rsi, [rsi+80h]
.text:0000000000406234                 palignr xmm9, xmm8, 5
.text:000000000040623B                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000406240                 palignr xmm8, xmm7, 5
.text:0000000000406247                 movaps  xmmword ptr [rdi+60h], xmm8
.text:000000000040624C                 palignr xmm7, xmm6, 5
.text:0000000000406252                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000406256                 palignr xmm6, xmm5, 5
.text:000000000040625C                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000406260                 palignr xmm5, xmm4, 5
.text:0000000000406266                 movaps  xmmword ptr [rdi+30h], xmm5
.text:000000000040626A                 palignr xmm4, xmm3, 5
.text:0000000000406270                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000406274                 palignr xmm3, xmm2, 5
.text:000000000040627A                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040627E                 palignr xmm2, xmm1, 5
.text:0000000000406284                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406287                 lea     rdi, [rdi+80h]
.text:000000000040628E                 jnb     loc_406200      ; jumptable 0000000000405A6C case 5
.text:0000000000406294                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406299                 add     rdx, 80h
.text:00000000004062A0                 add     rdi, rdx
.text:00000000004062A3                 add     rsi, rdx
.text:00000000004062A6                 lea     r11, jpt_405A1C
.text:00000000004062AD                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:00000000004062B1                 lea     rdx, [r11+rdx]
.text:00000000004062B5                 jmp     rdx             ; switch jump
.text:00000000004062B7 ; ---------------------------------------------------------------------------
.text:00000000004062B7                 ud2
.text:00000000004062B7 ; ---------------------------------------------------------------------------
.text:00000000004062B9                 align 20h
.text:00000000004062C0
.text:00000000004062C0 loc_4062C0:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:00000000004062C0                                         ; __intel_ssse3_rep_memmove+97B↓j
.text:00000000004062C0                                         ; DATA XREF: ...
.text:00000000004062C0                 movaps  xmm1, xmmword ptr [rsi-5] ; jumptable 0000000000405AD3 case 5
.text:00000000004062C4                 movaps  xmm2, xmmword ptr [rsi-15h]
.text:00000000004062C8                 palignr xmm1, xmm2, 5
.text:00000000004062CE                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004062D2                 movaps  xmm3, xmmword ptr [rsi-25h]
.text:00000000004062D6                 palignr xmm2, xmm3, 5
.text:00000000004062DC                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004062E0                 movaps  xmm4, xmmword ptr [rsi-35h]
.text:00000000004062E4                 palignr xmm3, xmm4, 5
.text:00000000004062EA                 movaps  xmmword ptr [rdi-30h], xmm3
.text:00000000004062EE                 movaps  xmm5, xmmword ptr [rsi-45h]
.text:00000000004062F2                 palignr xmm4, xmm5, 5
.text:00000000004062F8                 movaps  xmmword ptr [rdi-40h], xmm4
.text:00000000004062FC                 movaps  xmm6, xmmword ptr [rsi-55h]
.text:0000000000406300                 palignr xmm5, xmm6, 5
.text:0000000000406306                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040630A                 movaps  xmm7, xmmword ptr [rsi-65h]
.text:000000000040630E                 palignr xmm6, xmm7, 5
.text:0000000000406314                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406318                 movaps  xmm8, xmmword ptr [rsi-75h]
.text:000000000040631D                 palignr xmm7, xmm8, 5
.text:0000000000406324                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000406328                 movaps  xmm9, xmmword ptr [rsi-85h]
.text:0000000000406330                 palignr xmm8, xmm9, 5
.text:0000000000406337                 movaps  xmmword ptr [rdi-80h], xmm8
.text:000000000040633C                 sub     rdx, 80h
.text:0000000000406343                 lea     rdi, [rdi-80h]
.text:0000000000406347                 lea     rsi, [rsi-80h]
.text:000000000040634B                 jnb     loc_4062C0      ; jumptable 0000000000405AD3 case 5
.text:0000000000406351                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406356                 add     rdx, 80h
.text:000000000040635D                 sub     rdi, rdx
.text:0000000000406360                 sub     rsi, rdx
.text:0000000000406363                 lea     r11, jpt_4059FA
.text:000000000040636A                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:000000000040636E                 lea     rdx, [r11+rdx]
.text:0000000000406372                 jmp     rdx             ; switch jump
.text:0000000000406374 ; ---------------------------------------------------------------------------
.text:0000000000406374                 ud2
.text:0000000000406374 ; ---------------------------------------------------------------------------
.text:0000000000406376                 align 20h
.text:0000000000406380
.text:0000000000406380 loc_406380:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406380                                         ; __intel_ssse3_rep_memmove+A3E↓j
.text:0000000000406380                                         ; DATA XREF: ...
.text:0000000000406380                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 6
.text:0000000000406387                 movaps  xmm1, xmmword ptr [rsi-6]
.text:000000000040638B                 movaps  xmm2, xmmword ptr [rsi+0Ah]
.text:000000000040638F                 movaps  xmm3, xmmword ptr [rsi+1Ah]
.text:0000000000406393                 movaps  xmm4, xmmword ptr [rsi+2Ah]
.text:0000000000406397                 movaps  xmm5, xmmword ptr [rsi+3Ah]
.text:000000000040639B                 movaps  xmm6, xmmword ptr [rsi+4Ah]
.text:000000000040639F                 movaps  xmm7, xmmword ptr [rsi+5Ah]
.text:00000000004063A3                 movaps  xmm8, xmmword ptr [rsi+6Ah]
.text:00000000004063A8                 movaps  xmm9, xmmword ptr [rsi+7Ah]
.text:00000000004063AD                 lea     rsi, [rsi+80h]
.text:00000000004063B4                 palignr xmm9, xmm8, 6
.text:00000000004063BB                 movaps  xmmword ptr [rdi+70h], xmm9
.text:00000000004063C0                 palignr xmm8, xmm7, 6
.text:00000000004063C7                 movaps  xmmword ptr [rdi+60h], xmm8
.text:00000000004063CC                 palignr xmm7, xmm6, 6
.text:00000000004063D2                 movaps  xmmword ptr [rdi+50h], xmm7
.text:00000000004063D6                 palignr xmm6, xmm5, 6
.text:00000000004063DC                 movaps  xmmword ptr [rdi+40h], xmm6
.text:00000000004063E0                 palignr xmm5, xmm4, 6
.text:00000000004063E6                 movaps  xmmword ptr [rdi+30h], xmm5
.text:00000000004063EA                 palignr xmm4, xmm3, 6
.text:00000000004063F0                 movaps  xmmword ptr [rdi+20h], xmm4
.text:00000000004063F4                 palignr xmm3, xmm2, 6
.text:00000000004063FA                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004063FE                 palignr xmm2, xmm1, 6
.text:0000000000406404                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406407                 lea     rdi, [rdi+80h]
.text:000000000040640E                 jnb     loc_406380      ; jumptable 0000000000405A6C case 6
.text:0000000000406414                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406419                 add     rdx, 80h
.text:0000000000406420                 add     rdi, rdx
.text:0000000000406423                 add     rsi, rdx
.text:0000000000406426                 lea     r11, jpt_405A1C
.text:000000000040642D                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406431                 lea     rdx, [r11+rdx]
.text:0000000000406435                 jmp     rdx             ; switch jump
.text:0000000000406437 ; ---------------------------------------------------------------------------
.text:0000000000406437                 ud2
.text:0000000000406437 ; ---------------------------------------------------------------------------
.text:0000000000406439                 align 20h
.text:0000000000406440
.text:0000000000406440 loc_406440:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000406440                                         ; __intel_ssse3_rep_memmove+AFB↓j
.text:0000000000406440                                         ; DATA XREF: ...
.text:0000000000406440                 movaps  xmm1, xmmword ptr [rsi-6] ; jumptable 0000000000405AD3 case 6
.text:0000000000406444                 movaps  xmm2, xmmword ptr [rsi-16h]
.text:0000000000406448                 palignr xmm1, xmm2, 6
.text:000000000040644E                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000406452                 movaps  xmm3, xmmword ptr [rsi-26h]
.text:0000000000406456                 palignr xmm2, xmm3, 6
.text:000000000040645C                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000406460                 movaps  xmm4, xmmword ptr [rsi-36h]
.text:0000000000406464                 palignr xmm3, xmm4, 6
.text:000000000040646A                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040646E                 movaps  xmm5, xmmword ptr [rsi-46h]
.text:0000000000406472                 palignr xmm4, xmm5, 6
.text:0000000000406478                 movaps  xmmword ptr [rdi-40h], xmm4
.text:000000000040647C                 movaps  xmm6, xmmword ptr [rsi-56h]
.text:0000000000406480                 palignr xmm5, xmm6, 6
.text:0000000000406486                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040648A                 movaps  xmm7, xmmword ptr [rsi-66h]
.text:000000000040648E                 palignr xmm6, xmm7, 6
.text:0000000000406494                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406498                 movaps  xmm8, xmmword ptr [rsi-76h]
.text:000000000040649D                 palignr xmm7, xmm8, 6
.text:00000000004064A4                 movaps  xmmword ptr [rdi-70h], xmm7
.text:00000000004064A8                 movaps  xmm9, xmmword ptr [rsi-86h]
.text:00000000004064B0                 palignr xmm8, xmm9, 6
.text:00000000004064B7                 movaps  xmmword ptr [rdi-80h], xmm8
.text:00000000004064BC                 sub     rdx, 80h
.text:00000000004064C3                 lea     rdi, [rdi-80h]
.text:00000000004064C7                 lea     rsi, [rsi-80h]
.text:00000000004064CB                 jnb     loc_406440      ; jumptable 0000000000405AD3 case 6
.text:00000000004064D1                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004064D6                 add     rdx, 80h
.text:00000000004064DD                 sub     rdi, rdx
.text:00000000004064E0                 sub     rsi, rdx
.text:00000000004064E3                 lea     r11, jpt_4059FA
.text:00000000004064EA                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:00000000004064EE                 lea     rdx, [r11+rdx]
.text:00000000004064F2                 jmp     rdx             ; switch jump
.text:00000000004064F4 ; ---------------------------------------------------------------------------
.text:00000000004064F4                 ud2
.text:00000000004064F4 ; ---------------------------------------------------------------------------
.text:00000000004064F6                 align 20h
.text:0000000000406500
.text:0000000000406500 loc_406500:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406500                                         ; __intel_ssse3_rep_memmove+BBE↓j
.text:0000000000406500                                         ; DATA XREF: ...
.text:0000000000406500                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 7
.text:0000000000406507                 movaps  xmm1, xmmword ptr [rsi-7]
.text:000000000040650B                 movaps  xmm2, xmmword ptr [rsi+9]
.text:000000000040650F                 movaps  xmm3, xmmword ptr [rsi+19h]
.text:0000000000406513                 movaps  xmm4, xmmword ptr [rsi+29h]
.text:0000000000406517                 movaps  xmm5, xmmword ptr [rsi+39h]
.text:000000000040651B                 movaps  xmm6, xmmword ptr [rsi+49h]
.text:000000000040651F                 movaps  xmm7, xmmword ptr [rsi+59h]
.text:0000000000406523                 movaps  xmm8, xmmword ptr [rsi+69h]
.text:0000000000406528                 movaps  xmm9, xmmword ptr [rsi+79h]
.text:000000000040652D                 lea     rsi, [rsi+80h]
.text:0000000000406534                 palignr xmm9, xmm8, 7
.text:000000000040653B                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000406540                 palignr xmm8, xmm7, 7
.text:0000000000406547                 movaps  xmmword ptr [rdi+60h], xmm8
.text:000000000040654C                 palignr xmm7, xmm6, 7
.text:0000000000406552                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000406556                 palignr xmm6, xmm5, 7
.text:000000000040655C                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000406560                 palignr xmm5, xmm4, 7
.text:0000000000406566                 movaps  xmmword ptr [rdi+30h], xmm5
.text:000000000040656A                 palignr xmm4, xmm3, 7
.text:0000000000406570                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000406574                 palignr xmm3, xmm2, 7
.text:000000000040657A                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040657E                 palignr xmm2, xmm1, 7
.text:0000000000406584                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406587                 lea     rdi, [rdi+80h]
.text:000000000040658E                 jnb     loc_406500      ; jumptable 0000000000405A6C case 7
.text:0000000000406594                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406599                 add     rdx, 80h
.text:00000000004065A0                 add     rdi, rdx
.text:00000000004065A3                 add     rsi, rdx
.text:00000000004065A6                 lea     r11, jpt_405A1C
.text:00000000004065AD                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:00000000004065B1                 lea     rdx, [r11+rdx]
.text:00000000004065B5                 jmp     rdx             ; switch jump
.text:00000000004065B7 ; ---------------------------------------------------------------------------
.text:00000000004065B7                 ud2
.text:00000000004065B7 ; ---------------------------------------------------------------------------
.text:00000000004065B9                 align 20h
.text:00000000004065C0
.text:00000000004065C0 loc_4065C0:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:00000000004065C0                                         ; __intel_ssse3_rep_memmove+C7B↓j
.text:00000000004065C0                                         ; DATA XREF: ...
.text:00000000004065C0                 movaps  xmm1, xmmword ptr [rsi-7] ; jumptable 0000000000405AD3 case 7
.text:00000000004065C4                 movaps  xmm2, xmmword ptr [rsi-17h]
.text:00000000004065C8                 palignr xmm1, xmm2, 7
.text:00000000004065CE                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004065D2                 movaps  xmm3, xmmword ptr [rsi-27h]
.text:00000000004065D6                 palignr xmm2, xmm3, 7
.text:00000000004065DC                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004065E0                 movaps  xmm4, xmmword ptr [rsi-37h]
.text:00000000004065E4                 palignr xmm3, xmm4, 7
.text:00000000004065EA                 movaps  xmmword ptr [rdi-30h], xmm3
.text:00000000004065EE                 movaps  xmm5, xmmword ptr [rsi-47h]
.text:00000000004065F2                 palignr xmm4, xmm5, 7
.text:00000000004065F8                 movaps  xmmword ptr [rdi-40h], xmm4
.text:00000000004065FC                 movaps  xmm6, xmmword ptr [rsi-57h]
.text:0000000000406600                 palignr xmm5, xmm6, 7
.text:0000000000406606                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040660A                 movaps  xmm7, xmmword ptr [rsi-67h]
.text:000000000040660E                 palignr xmm6, xmm7, 7
.text:0000000000406614                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406618                 movaps  xmm8, xmmword ptr [rsi-77h]
.text:000000000040661D                 palignr xmm7, xmm8, 7
.text:0000000000406624                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000406628                 movaps  xmm9, xmmword ptr [rsi-87h]
.text:0000000000406630                 palignr xmm8, xmm9, 7
.text:0000000000406637                 movaps  xmmword ptr [rdi-80h], xmm8
.text:000000000040663C                 sub     rdx, 80h
.text:0000000000406643                 lea     rdi, [rdi-80h]
.text:0000000000406647                 lea     rsi, [rsi-80h]
.text:000000000040664B                 jnb     loc_4065C0      ; jumptable 0000000000405AD3 case 7
.text:0000000000406651                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406656                 add     rdx, 80h
.text:000000000040665D                 sub     rdi, rdx
.text:0000000000406660                 sub     rsi, rdx
.text:0000000000406663                 lea     r11, jpt_4059FA
.text:000000000040666A                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:000000000040666E                 lea     rdx, [r11+rdx]
.text:0000000000406672                 jmp     rdx             ; switch jump
.text:0000000000406674 ; ---------------------------------------------------------------------------
.text:0000000000406674                 ud2
.text:0000000000406674 ; ---------------------------------------------------------------------------
.text:0000000000406676                 align 20h
.text:0000000000406680
.text:0000000000406680 loc_406680:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406680                                         ; __intel_ssse3_rep_memmove+D3E↓j
.text:0000000000406680                                         ; DATA XREF: ...
.text:0000000000406680                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 8
.text:0000000000406687                 movaps  xmm1, xmmword ptr [rsi-8]
.text:000000000040668B                 movaps  xmm2, xmmword ptr [rsi+8]
.text:000000000040668F                 movaps  xmm3, xmmword ptr [rsi+18h]
.text:0000000000406693                 movaps  xmm4, xmmword ptr [rsi+28h]
.text:0000000000406697                 movaps  xmm5, xmmword ptr [rsi+38h]
.text:000000000040669B                 movaps  xmm6, xmmword ptr [rsi+48h]
.text:000000000040669F                 movaps  xmm7, xmmword ptr [rsi+58h]
.text:00000000004066A3                 movaps  xmm8, xmmword ptr [rsi+68h]
.text:00000000004066A8                 movaps  xmm9, xmmword ptr [rsi+78h]
.text:00000000004066AD                 lea     rsi, [rsi+80h]
.text:00000000004066B4                 palignr xmm9, xmm8, 8
.text:00000000004066BB                 movaps  xmmword ptr [rdi+70h], xmm9
.text:00000000004066C0                 palignr xmm8, xmm7, 8
.text:00000000004066C7                 movaps  xmmword ptr [rdi+60h], xmm8
.text:00000000004066CC                 palignr xmm7, xmm6, 8
.text:00000000004066D2                 movaps  xmmword ptr [rdi+50h], xmm7
.text:00000000004066D6                 palignr xmm6, xmm5, 8
.text:00000000004066DC                 movaps  xmmword ptr [rdi+40h], xmm6
.text:00000000004066E0                 palignr xmm5, xmm4, 8
.text:00000000004066E6                 movaps  xmmword ptr [rdi+30h], xmm5
.text:00000000004066EA                 palignr xmm4, xmm3, 8
.text:00000000004066F0                 movaps  xmmword ptr [rdi+20h], xmm4
.text:00000000004066F4                 palignr xmm3, xmm2, 8
.text:00000000004066FA                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004066FE                 palignr xmm2, xmm1, 8
.text:0000000000406704                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406707                 lea     rdi, [rdi+80h]
.text:000000000040670E                 jnb     loc_406680      ; jumptable 0000000000405A6C case 8
.text:0000000000406714                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406719                 add     rdx, 80h
.text:0000000000406720                 add     rdi, rdx
.text:0000000000406723                 add     rsi, rdx
.text:0000000000406726                 lea     r11, jpt_405A1C
.text:000000000040672D                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406731                 lea     rdx, [r11+rdx]
.text:0000000000406735                 jmp     rdx             ; switch jump
.text:0000000000406737 ; ---------------------------------------------------------------------------
.text:0000000000406737                 ud2
.text:0000000000406737 ; ---------------------------------------------------------------------------
.text:0000000000406739                 align 20h
.text:0000000000406740
.text:0000000000406740 loc_406740:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000406740                                         ; __intel_ssse3_rep_memmove+DFB↓j
.text:0000000000406740                                         ; DATA XREF: ...
.text:0000000000406740                 movaps  xmm1, xmmword ptr [rsi-8] ; jumptable 0000000000405AD3 case 8
.text:0000000000406744                 movaps  xmm2, xmmword ptr [rsi-18h]
.text:0000000000406748                 palignr xmm1, xmm2, 8
.text:000000000040674E                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000406752                 movaps  xmm3, xmmword ptr [rsi-28h]
.text:0000000000406756                 palignr xmm2, xmm3, 8
.text:000000000040675C                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000406760                 movaps  xmm4, xmmword ptr [rsi-38h]
.text:0000000000406764                 palignr xmm3, xmm4, 8
.text:000000000040676A                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040676E                 movaps  xmm5, xmmword ptr [rsi-48h]
.text:0000000000406772                 palignr xmm4, xmm5, 8
.text:0000000000406778                 movaps  xmmword ptr [rdi-40h], xmm4
.text:000000000040677C                 movaps  xmm6, xmmword ptr [rsi-58h]
.text:0000000000406780                 palignr xmm5, xmm6, 8
.text:0000000000406786                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040678A                 movaps  xmm7, xmmword ptr [rsi-68h]
.text:000000000040678E                 palignr xmm6, xmm7, 8
.text:0000000000406794                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406798                 movaps  xmm8, xmmword ptr [rsi-78h]
.text:000000000040679D                 palignr xmm7, xmm8, 8
.text:00000000004067A4                 movaps  xmmword ptr [rdi-70h], xmm7
.text:00000000004067A8                 movaps  xmm9, xmmword ptr [rsi-88h]
.text:00000000004067B0                 palignr xmm8, xmm9, 8
.text:00000000004067B7                 movaps  xmmword ptr [rdi-80h], xmm8
.text:00000000004067BC                 sub     rdx, 80h
.text:00000000004067C3                 lea     rdi, [rdi-80h]
.text:00000000004067C7                 lea     rsi, [rsi-80h]
.text:00000000004067CB                 jnb     loc_406740      ; jumptable 0000000000405AD3 case 8
.text:00000000004067D1                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004067D6                 add     rdx, 80h
.text:00000000004067DD                 sub     rdi, rdx
.text:00000000004067E0                 sub     rsi, rdx
.text:00000000004067E3                 lea     r11, jpt_4059FA
.text:00000000004067EA                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:00000000004067EE                 lea     rdx, [r11+rdx]
.text:00000000004067F2                 jmp     rdx             ; switch jump
.text:00000000004067F4 ; ---------------------------------------------------------------------------
.text:00000000004067F4                 ud2
.text:00000000004067F4 ; ---------------------------------------------------------------------------
.text:00000000004067F6                 align 20h
.text:0000000000406800
.text:0000000000406800 loc_406800:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406800                                         ; __intel_ssse3_rep_memmove+EBE↓j
.text:0000000000406800                                         ; DATA XREF: ...
.text:0000000000406800                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 9
.text:0000000000406807                 movaps  xmm1, xmmword ptr [rsi-9]
.text:000000000040680B                 movaps  xmm2, xmmword ptr [rsi+7]
.text:000000000040680F                 movaps  xmm3, xmmword ptr [rsi+17h]
.text:0000000000406813                 movaps  xmm4, xmmword ptr [rsi+27h]
.text:0000000000406817                 movaps  xmm5, xmmword ptr [rsi+37h]
.text:000000000040681B                 movaps  xmm6, xmmword ptr [rsi+47h]
.text:000000000040681F                 movaps  xmm7, xmmword ptr [rsi+57h]
.text:0000000000406823                 movaps  xmm8, xmmword ptr [rsi+67h]
.text:0000000000406828                 movaps  xmm9, xmmword ptr [rsi+77h]
.text:000000000040682D                 lea     rsi, [rsi+80h]
.text:0000000000406834                 palignr xmm9, xmm8, 9
.text:000000000040683B                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000406840                 palignr xmm8, xmm7, 9
.text:0000000000406847                 movaps  xmmword ptr [rdi+60h], xmm8
.text:000000000040684C                 palignr xmm7, xmm6, 9
.text:0000000000406852                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000406856                 palignr xmm6, xmm5, 9
.text:000000000040685C                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000406860                 palignr xmm5, xmm4, 9
.text:0000000000406866                 movaps  xmmword ptr [rdi+30h], xmm5
.text:000000000040686A                 palignr xmm4, xmm3, 9
.text:0000000000406870                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000406874                 palignr xmm3, xmm2, 9
.text:000000000040687A                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040687E                 palignr xmm2, xmm1, 9
.text:0000000000406884                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406887                 lea     rdi, [rdi+80h]
.text:000000000040688E                 jnb     loc_406800      ; jumptable 0000000000405A6C case 9
.text:0000000000406894                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406899                 add     rdx, 80h
.text:00000000004068A0                 add     rdi, rdx
.text:00000000004068A3                 add     rsi, rdx
.text:00000000004068A6                 lea     r11, jpt_405A1C
.text:00000000004068AD                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:00000000004068B1                 lea     rdx, [r11+rdx]
.text:00000000004068B5                 jmp     rdx             ; switch jump
.text:00000000004068B7 ; ---------------------------------------------------------------------------
.text:00000000004068B7                 ud2
.text:00000000004068B7 ; ---------------------------------------------------------------------------
.text:00000000004068B9                 align 20h
.text:00000000004068C0
.text:00000000004068C0 loc_4068C0:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:00000000004068C0                                         ; __intel_ssse3_rep_memmove+F7B↓j
.text:00000000004068C0                                         ; DATA XREF: ...
.text:00000000004068C0                 movaps  xmm1, xmmword ptr [rsi-9] ; jumptable 0000000000405AD3 case 9
.text:00000000004068C4                 movaps  xmm2, xmmword ptr [rsi-19h]
.text:00000000004068C8                 palignr xmm1, xmm2, 9
.text:00000000004068CE                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004068D2                 movaps  xmm3, xmmword ptr [rsi-29h]
.text:00000000004068D6                 palignr xmm2, xmm3, 9
.text:00000000004068DC                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004068E0                 movaps  xmm4, xmmword ptr [rsi-39h]
.text:00000000004068E4                 palignr xmm3, xmm4, 9
.text:00000000004068EA                 movaps  xmmword ptr [rdi-30h], xmm3
.text:00000000004068EE                 movaps  xmm5, xmmword ptr [rsi-49h]
.text:00000000004068F2                 palignr xmm4, xmm5, 9
.text:00000000004068F8                 movaps  xmmword ptr [rdi-40h], xmm4
.text:00000000004068FC                 movaps  xmm6, xmmword ptr [rsi-59h]
.text:0000000000406900                 palignr xmm5, xmm6, 9
.text:0000000000406906                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040690A                 movaps  xmm7, xmmword ptr [rsi-69h]
.text:000000000040690E                 palignr xmm6, xmm7, 9
.text:0000000000406914                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406918                 movaps  xmm8, xmmword ptr [rsi-79h]
.text:000000000040691D                 palignr xmm7, xmm8, 9
.text:0000000000406924                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000406928                 movaps  xmm9, xmmword ptr [rsi-89h]
.text:0000000000406930                 palignr xmm8, xmm9, 9
.text:0000000000406937                 movaps  xmmword ptr [rdi-80h], xmm8
.text:000000000040693C                 sub     rdx, 80h
.text:0000000000406943                 lea     rdi, [rdi-80h]
.text:0000000000406947                 lea     rsi, [rsi-80h]
.text:000000000040694B                 jnb     loc_4068C0      ; jumptable 0000000000405AD3 case 9
.text:0000000000406951                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406956                 add     rdx, 80h
.text:000000000040695D                 sub     rdi, rdx
.text:0000000000406960                 sub     rsi, rdx
.text:0000000000406963                 lea     r11, jpt_4059FA
.text:000000000040696A                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:000000000040696E                 lea     rdx, [r11+rdx]
.text:0000000000406972                 jmp     rdx             ; switch jump
.text:0000000000406974 ; ---------------------------------------------------------------------------
.text:0000000000406974                 ud2
.text:0000000000406974 ; ---------------------------------------------------------------------------
.text:0000000000406976                 align 20h
.text:0000000000406980
.text:0000000000406980 loc_406980:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406980                                         ; __intel_ssse3_rep_memmove+103E↓j
.text:0000000000406980                                         ; DATA XREF: ...
.text:0000000000406980                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 10
.text:0000000000406987                 movaps  xmm1, xmmword ptr [rsi-0Ah]
.text:000000000040698B                 movaps  xmm2, xmmword ptr [rsi+6]
.text:000000000040698F                 movaps  xmm3, xmmword ptr [rsi+16h]
.text:0000000000406993                 movaps  xmm4, xmmword ptr [rsi+26h]
.text:0000000000406997                 movaps  xmm5, xmmword ptr [rsi+36h]
.text:000000000040699B                 movaps  xmm6, xmmword ptr [rsi+46h]
.text:000000000040699F                 movaps  xmm7, xmmword ptr [rsi+56h]
.text:00000000004069A3                 movaps  xmm8, xmmword ptr [rsi+66h]
.text:00000000004069A8                 movaps  xmm9, xmmword ptr [rsi+76h]
.text:00000000004069AD                 lea     rsi, [rsi+80h]
.text:00000000004069B4                 palignr xmm9, xmm8, 0Ah
.text:00000000004069BB                 movaps  xmmword ptr [rdi+70h], xmm9
.text:00000000004069C0                 palignr xmm8, xmm7, 0Ah
.text:00000000004069C7                 movaps  xmmword ptr [rdi+60h], xmm8
.text:00000000004069CC                 palignr xmm7, xmm6, 0Ah
.text:00000000004069D2                 movaps  xmmword ptr [rdi+50h], xmm7
.text:00000000004069D6                 palignr xmm6, xmm5, 0Ah
.text:00000000004069DC                 movaps  xmmword ptr [rdi+40h], xmm6
.text:00000000004069E0                 palignr xmm5, xmm4, 0Ah
.text:00000000004069E6                 movaps  xmmword ptr [rdi+30h], xmm5
.text:00000000004069EA                 palignr xmm4, xmm3, 0Ah
.text:00000000004069F0                 movaps  xmmword ptr [rdi+20h], xmm4
.text:00000000004069F4                 palignr xmm3, xmm2, 0Ah
.text:00000000004069FA                 movaps  xmmword ptr [rdi+10h], xmm3
.text:00000000004069FE                 palignr xmm2, xmm1, 0Ah
.text:0000000000406A04                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406A07                 lea     rdi, [rdi+80h]
.text:0000000000406A0E                 jnb     loc_406980      ; jumptable 0000000000405A6C case 10
.text:0000000000406A14                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406A19                 add     rdx, 80h
.text:0000000000406A20                 add     rdi, rdx
.text:0000000000406A23                 add     rsi, rdx
.text:0000000000406A26                 lea     r11, jpt_405A1C
.text:0000000000406A2D                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406A31                 lea     rdx, [r11+rdx]
.text:0000000000406A35                 jmp     rdx             ; switch jump
.text:0000000000406A37 ; ---------------------------------------------------------------------------
.text:0000000000406A37                 ud2
.text:0000000000406A37 ; ---------------------------------------------------------------------------
.text:0000000000406A39                 align 20h
.text:0000000000406A40
.text:0000000000406A40 loc_406A40:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000406A40                                         ; __intel_ssse3_rep_memmove+10FB↓j
.text:0000000000406A40                                         ; DATA XREF: ...
.text:0000000000406A40                 movaps  xmm1, xmmword ptr [rsi-0Ah] ; jumptable 0000000000405AD3 case 10
.text:0000000000406A44                 movaps  xmm2, xmmword ptr [rsi-1Ah]
.text:0000000000406A48                 palignr xmm1, xmm2, 0Ah
.text:0000000000406A4E                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000406A52                 movaps  xmm3, xmmword ptr [rsi-2Ah]
.text:0000000000406A56                 palignr xmm2, xmm3, 0Ah
.text:0000000000406A5C                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000406A60                 movaps  xmm4, xmmword ptr [rsi-3Ah]
.text:0000000000406A64                 palignr xmm3, xmm4, 0Ah
.text:0000000000406A6A                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000406A6E                 movaps  xmm5, xmmword ptr [rsi-4Ah]
.text:0000000000406A72                 palignr xmm4, xmm5, 0Ah
.text:0000000000406A78                 movaps  xmmword ptr [rdi-40h], xmm4
.text:0000000000406A7C                 movaps  xmm6, xmmword ptr [rsi-5Ah]
.text:0000000000406A80                 palignr xmm5, xmm6, 0Ah
.text:0000000000406A86                 movaps  xmmword ptr [rdi-50h], xmm5
.text:0000000000406A8A                 movaps  xmm7, xmmword ptr [rsi-6Ah]
.text:0000000000406A8E                 palignr xmm6, xmm7, 0Ah
.text:0000000000406A94                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406A98                 movaps  xmm8, xmmword ptr [rsi-7Ah]
.text:0000000000406A9D                 palignr xmm7, xmm8, 0Ah
.text:0000000000406AA4                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000406AA8                 movaps  xmm9, xmmword ptr [rsi-8Ah]
.text:0000000000406AB0                 palignr xmm8, xmm9, 0Ah
.text:0000000000406AB7                 movaps  xmmword ptr [rdi-80h], xmm8
.text:0000000000406ABC                 sub     rdx, 80h
.text:0000000000406AC3                 lea     rdi, [rdi-80h]
.text:0000000000406AC7                 lea     rsi, [rsi-80h]
.text:0000000000406ACB                 jnb     loc_406A40      ; jumptable 0000000000405AD3 case 10
.text:0000000000406AD1                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406AD6                 add     rdx, 80h
.text:0000000000406ADD                 sub     rdi, rdx
.text:0000000000406AE0                 sub     rsi, rdx
.text:0000000000406AE3                 lea     r11, jpt_4059FA
.text:0000000000406AEA                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406AEE                 lea     rdx, [r11+rdx]
.text:0000000000406AF2                 jmp     rdx             ; switch jump
.text:0000000000406AF4 ; ---------------------------------------------------------------------------
.text:0000000000406AF4                 ud2
.text:0000000000406AF4 ; ---------------------------------------------------------------------------
.text:0000000000406AF6                 align 20h
.text:0000000000406B00
.text:0000000000406B00 loc_406B00:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406B00                                         ; __intel_ssse3_rep_memmove+11BE↓j
.text:0000000000406B00                                         ; DATA XREF: ...
.text:0000000000406B00                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 11
.text:0000000000406B07                 movaps  xmm1, xmmword ptr [rsi-0Bh]
.text:0000000000406B0B                 movaps  xmm2, xmmword ptr [rsi+5]
.text:0000000000406B0F                 movaps  xmm3, xmmword ptr [rsi+15h]
.text:0000000000406B13                 movaps  xmm4, xmmword ptr [rsi+25h]
.text:0000000000406B17                 movaps  xmm5, xmmword ptr [rsi+35h]
.text:0000000000406B1B                 movaps  xmm6, xmmword ptr [rsi+45h]
.text:0000000000406B1F                 movaps  xmm7, xmmword ptr [rsi+55h]
.text:0000000000406B23                 movaps  xmm8, xmmword ptr [rsi+65h]
.text:0000000000406B28                 movaps  xmm9, xmmword ptr [rsi+75h]
.text:0000000000406B2D                 lea     rsi, [rsi+80h]
.text:0000000000406B34                 palignr xmm9, xmm8, 0Bh
.text:0000000000406B3B                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000406B40                 palignr xmm8, xmm7, 0Bh
.text:0000000000406B47                 movaps  xmmword ptr [rdi+60h], xmm8
.text:0000000000406B4C                 palignr xmm7, xmm6, 0Bh
.text:0000000000406B52                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000406B56                 palignr xmm6, xmm5, 0Bh
.text:0000000000406B5C                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000406B60                 palignr xmm5, xmm4, 0Bh
.text:0000000000406B66                 movaps  xmmword ptr [rdi+30h], xmm5
.text:0000000000406B6A                 palignr xmm4, xmm3, 0Bh
.text:0000000000406B70                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000406B74                 palignr xmm3, xmm2, 0Bh
.text:0000000000406B7A                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000406B7E                 palignr xmm2, xmm1, 0Bh
.text:0000000000406B84                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406B87                 lea     rdi, [rdi+80h]
.text:0000000000406B8E                 jnb     loc_406B00      ; jumptable 0000000000405A6C case 11
.text:0000000000406B94                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406B99                 add     rdx, 80h
.text:0000000000406BA0                 add     rdi, rdx
.text:0000000000406BA3                 add     rsi, rdx
.text:0000000000406BA6                 lea     r11, jpt_405A1C
.text:0000000000406BAD                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406BB1                 lea     rdx, [r11+rdx]
.text:0000000000406BB5                 jmp     rdx             ; switch jump
.text:0000000000406BB7 ; ---------------------------------------------------------------------------
.text:0000000000406BB7                 ud2
.text:0000000000406BB7 ; ---------------------------------------------------------------------------
.text:0000000000406BB9                 align 20h
.text:0000000000406BC0
.text:0000000000406BC0 loc_406BC0:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000406BC0                                         ; __intel_ssse3_rep_memmove+127B↓j
.text:0000000000406BC0                                         ; DATA XREF: ...
.text:0000000000406BC0                 movaps  xmm1, xmmword ptr [rsi-0Bh] ; jumptable 0000000000405AD3 case 11
.text:0000000000406BC4                 movaps  xmm2, xmmword ptr [rsi-1Bh]
.text:0000000000406BC8                 palignr xmm1, xmm2, 0Bh
.text:0000000000406BCE                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000406BD2                 movaps  xmm3, xmmword ptr [rsi-2Bh]
.text:0000000000406BD6                 palignr xmm2, xmm3, 0Bh
.text:0000000000406BDC                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000406BE0                 movaps  xmm4, xmmword ptr [rsi-3Bh]
.text:0000000000406BE4                 palignr xmm3, xmm4, 0Bh
.text:0000000000406BEA                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000406BEE                 movaps  xmm5, xmmword ptr [rsi-4Bh]
.text:0000000000406BF2                 palignr xmm4, xmm5, 0Bh
.text:0000000000406BF8                 movaps  xmmword ptr [rdi-40h], xmm4
.text:0000000000406BFC                 movaps  xmm6, xmmword ptr [rsi-5Bh]
.text:0000000000406C00                 palignr xmm5, xmm6, 0Bh
.text:0000000000406C06                 movaps  xmmword ptr [rdi-50h], xmm5
.text:0000000000406C0A                 movaps  xmm7, xmmword ptr [rsi-6Bh]
.text:0000000000406C0E                 palignr xmm6, xmm7, 0Bh
.text:0000000000406C14                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406C18                 movaps  xmm8, xmmword ptr [rsi-7Bh]
.text:0000000000406C1D                 palignr xmm7, xmm8, 0Bh
.text:0000000000406C24                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000406C28                 movaps  xmm9, xmmword ptr [rsi-8Bh]
.text:0000000000406C30                 palignr xmm8, xmm9, 0Bh
.text:0000000000406C37                 movaps  xmmword ptr [rdi-80h], xmm8
.text:0000000000406C3C                 sub     rdx, 80h
.text:0000000000406C43                 lea     rdi, [rdi-80h]
.text:0000000000406C47                 lea     rsi, [rsi-80h]
.text:0000000000406C4B                 jnb     loc_406BC0      ; jumptable 0000000000405AD3 case 11
.text:0000000000406C51                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406C56                 add     rdx, 80h
.text:0000000000406C5D                 sub     rdi, rdx
.text:0000000000406C60                 sub     rsi, rdx
.text:0000000000406C63                 lea     r11, jpt_4059FA
.text:0000000000406C6A                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406C6E                 lea     rdx, [r11+rdx]
.text:0000000000406C72                 jmp     rdx             ; switch jump
.text:0000000000406C74 ; ---------------------------------------------------------------------------
.text:0000000000406C74                 ud2
.text:0000000000406C74 ; ---------------------------------------------------------------------------
.text:0000000000406C76                 align 20h
.text:0000000000406C80
.text:0000000000406C80 loc_406C80:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406C80                                         ; __intel_ssse3_rep_memmove+133F↓j
.text:0000000000406C80                                         ; DATA XREF: ...
.text:0000000000406C80                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 12
.text:0000000000406C87                 movdqa  xmm1, xmmword ptr [rsi-0Ch]
.text:0000000000406C8C                 movaps  xmm2, xmmword ptr [rsi+4]
.text:0000000000406C90                 movaps  xmm3, xmmword ptr [rsi+14h]
.text:0000000000406C94                 movaps  xmm4, xmmword ptr [rsi+24h]
.text:0000000000406C98                 movaps  xmm5, xmmword ptr [rsi+34h]
.text:0000000000406C9C                 movaps  xmm6, xmmword ptr [rsi+44h]
.text:0000000000406CA0                 movaps  xmm7, xmmword ptr [rsi+54h]
.text:0000000000406CA4                 movaps  xmm8, xmmword ptr [rsi+64h]
.text:0000000000406CA9                 movaps  xmm9, xmmword ptr [rsi+74h]
.text:0000000000406CAE                 lea     rsi, [rsi+80h]
.text:0000000000406CB5                 palignr xmm9, xmm8, 0Ch
.text:0000000000406CBC                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000406CC1                 palignr xmm8, xmm7, 0Ch
.text:0000000000406CC8                 movaps  xmmword ptr [rdi+60h], xmm8
.text:0000000000406CCD                 palignr xmm7, xmm6, 0Ch
.text:0000000000406CD3                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000406CD7                 palignr xmm6, xmm5, 0Ch
.text:0000000000406CDD                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000406CE1                 palignr xmm5, xmm4, 0Ch
.text:0000000000406CE7                 movaps  xmmword ptr [rdi+30h], xmm5
.text:0000000000406CEB                 palignr xmm4, xmm3, 0Ch
.text:0000000000406CF1                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000406CF5                 palignr xmm3, xmm2, 0Ch
.text:0000000000406CFB                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000406CFF                 palignr xmm2, xmm1, 0Ch
.text:0000000000406D05                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406D08                 lea     rdi, [rdi+80h]
.text:0000000000406D0F                 jnb     loc_406C80      ; jumptable 0000000000405A6C case 12
.text:0000000000406D15                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406D1A                 add     rdx, 80h
.text:0000000000406D21                 add     rdi, rdx
.text:0000000000406D24                 add     rsi, rdx
.text:0000000000406D27                 lea     r11, jpt_405A1C
.text:0000000000406D2E                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406D32                 lea     rdx, [r11+rdx]
.text:0000000000406D36                 jmp     rdx             ; switch jump
.text:0000000000406D38 ; ---------------------------------------------------------------------------
.text:0000000000406D38                 ud2
.text:0000000000406D38 ; ---------------------------------------------------------------------------
.text:0000000000406D3A                 align 20h
.text:0000000000406D40
.text:0000000000406D40 loc_406D40:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000406D40                                         ; __intel_ssse3_rep_memmove+13FB↓j
.text:0000000000406D40                                         ; DATA XREF: ...
.text:0000000000406D40                 movaps  xmm1, xmmword ptr [rsi-0Ch] ; jumptable 0000000000405AD3 case 12
.text:0000000000406D44                 movaps  xmm2, xmmword ptr [rsi-1Ch]
.text:0000000000406D48                 palignr xmm1, xmm2, 0Ch
.text:0000000000406D4E                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000406D52                 movaps  xmm3, xmmword ptr [rsi-2Ch]
.text:0000000000406D56                 palignr xmm2, xmm3, 0Ch
.text:0000000000406D5C                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000406D60                 movaps  xmm4, xmmword ptr [rsi-3Ch]
.text:0000000000406D64                 palignr xmm3, xmm4, 0Ch
.text:0000000000406D6A                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000406D6E                 movaps  xmm5, xmmword ptr [rsi-4Ch]
.text:0000000000406D72                 palignr xmm4, xmm5, 0Ch
.text:0000000000406D78                 movaps  xmmword ptr [rdi-40h], xmm4
.text:0000000000406D7C                 movaps  xmm6, xmmword ptr [rsi-5Ch]
.text:0000000000406D80                 palignr xmm5, xmm6, 0Ch
.text:0000000000406D86                 movaps  xmmword ptr [rdi-50h], xmm5
.text:0000000000406D8A                 movaps  xmm7, xmmword ptr [rsi-6Ch]
.text:0000000000406D8E                 palignr xmm6, xmm7, 0Ch
.text:0000000000406D94                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406D98                 movaps  xmm8, xmmword ptr [rsi-7Ch]
.text:0000000000406D9D                 palignr xmm7, xmm8, 0Ch
.text:0000000000406DA4                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000406DA8                 movaps  xmm9, xmmword ptr [rsi-8Ch]
.text:0000000000406DB0                 palignr xmm8, xmm9, 0Ch
.text:0000000000406DB7                 movaps  xmmword ptr [rdi-80h], xmm8
.text:0000000000406DBC                 sub     rdx, 80h
.text:0000000000406DC3                 lea     rdi, [rdi-80h]
.text:0000000000406DC7                 lea     rsi, [rsi-80h]
.text:0000000000406DCB                 jnb     loc_406D40      ; jumptable 0000000000405AD3 case 12
.text:0000000000406DD1                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406DD6                 add     rdx, 80h
.text:0000000000406DDD                 sub     rdi, rdx
.text:0000000000406DE0                 sub     rsi, rdx
.text:0000000000406DE3                 lea     r11, jpt_4059FA
.text:0000000000406DEA                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406DEE                 lea     rdx, [r11+rdx]
.text:0000000000406DF2                 jmp     rdx             ; switch jump
.text:0000000000406DF4 ; ---------------------------------------------------------------------------
.text:0000000000406DF4                 ud2
.text:0000000000406DF4 ; ---------------------------------------------------------------------------
.text:0000000000406DF6                 align 20h
.text:0000000000406E00
.text:0000000000406E00 loc_406E00:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406E00                                         ; __intel_ssse3_rep_memmove+14BE↓j
.text:0000000000406E00                                         ; DATA XREF: ...
.text:0000000000406E00                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 13
.text:0000000000406E07                 movaps  xmm1, xmmword ptr [rsi-0Dh]
.text:0000000000406E0B                 movaps  xmm2, xmmword ptr [rsi+3]
.text:0000000000406E0F                 movaps  xmm3, xmmword ptr [rsi+13h]
.text:0000000000406E13                 movaps  xmm4, xmmword ptr [rsi+23h]
.text:0000000000406E17                 movaps  xmm5, xmmword ptr [rsi+33h]
.text:0000000000406E1B                 movaps  xmm6, xmmword ptr [rsi+43h]
.text:0000000000406E1F                 movaps  xmm7, xmmword ptr [rsi+53h]
.text:0000000000406E23                 movaps  xmm8, xmmword ptr [rsi+63h]
.text:0000000000406E28                 movaps  xmm9, xmmword ptr [rsi+73h]
.text:0000000000406E2D                 lea     rsi, [rsi+80h]
.text:0000000000406E34                 palignr xmm9, xmm8, 0Dh
.text:0000000000406E3B                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000406E40                 palignr xmm8, xmm7, 0Dh
.text:0000000000406E47                 movaps  xmmword ptr [rdi+60h], xmm8
.text:0000000000406E4C                 palignr xmm7, xmm6, 0Dh
.text:0000000000406E52                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000406E56                 palignr xmm6, xmm5, 0Dh
.text:0000000000406E5C                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000406E60                 palignr xmm5, xmm4, 0Dh
.text:0000000000406E66                 movaps  xmmword ptr [rdi+30h], xmm5
.text:0000000000406E6A                 palignr xmm4, xmm3, 0Dh
.text:0000000000406E70                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000406E74                 palignr xmm3, xmm2, 0Dh
.text:0000000000406E7A                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000406E7E                 palignr xmm2, xmm1, 0Dh
.text:0000000000406E84                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000406E87                 lea     rdi, [rdi+80h]
.text:0000000000406E8E                 jnb     loc_406E00      ; jumptable 0000000000405A6C case 13
.text:0000000000406E94                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406E99                 add     rdx, 80h
.text:0000000000406EA0                 add     rdi, rdx
.text:0000000000406EA3                 add     rsi, rdx
.text:0000000000406EA6                 lea     r11, jpt_405A1C
.text:0000000000406EAD                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406EB1                 lea     rdx, [r11+rdx]
.text:0000000000406EB5                 jmp     rdx             ; switch jump
.text:0000000000406EB7 ; ---------------------------------------------------------------------------
.text:0000000000406EB7                 ud2
.text:0000000000406EB7 ; ---------------------------------------------------------------------------
.text:0000000000406EB9                 align 20h
.text:0000000000406EC0
.text:0000000000406EC0 loc_406EC0:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000406EC0                                         ; __intel_ssse3_rep_memmove+157B↓j
.text:0000000000406EC0                                         ; DATA XREF: ...
.text:0000000000406EC0                 movaps  xmm1, xmmword ptr [rsi-0Dh] ; jumptable 0000000000405AD3 case 13
.text:0000000000406EC4                 movaps  xmm2, xmmword ptr [rsi-1Dh]
.text:0000000000406EC8                 palignr xmm1, xmm2, 0Dh
.text:0000000000406ECE                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000406ED2                 movaps  xmm3, xmmword ptr [rsi-2Dh]
.text:0000000000406ED6                 palignr xmm2, xmm3, 0Dh
.text:0000000000406EDC                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000406EE0                 movaps  xmm4, xmmword ptr [rsi-3Dh]
.text:0000000000406EE4                 palignr xmm3, xmm4, 0Dh
.text:0000000000406EEA                 movaps  xmmword ptr [rdi-30h], xmm3
.text:0000000000406EEE                 movaps  xmm5, xmmword ptr [rsi-4Dh]
.text:0000000000406EF2                 palignr xmm4, xmm5, 0Dh
.text:0000000000406EF8                 movaps  xmmword ptr [rdi-40h], xmm4
.text:0000000000406EFC                 movaps  xmm6, xmmword ptr [rsi-5Dh]
.text:0000000000406F00                 palignr xmm5, xmm6, 0Dh
.text:0000000000406F06                 movaps  xmmword ptr [rdi-50h], xmm5
.text:0000000000406F0A                 movaps  xmm7, xmmword ptr [rsi-6Dh]
.text:0000000000406F0E                 palignr xmm6, xmm7, 0Dh
.text:0000000000406F14                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000406F18                 movaps  xmm8, xmmword ptr [rsi-7Dh]
.text:0000000000406F1D                 palignr xmm7, xmm8, 0Dh
.text:0000000000406F24                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000406F28                 movaps  xmm9, xmmword ptr [rsi-8Dh]
.text:0000000000406F30                 palignr xmm8, xmm9, 0Dh
.text:0000000000406F37                 movaps  xmmword ptr [rdi-80h], xmm8
.text:0000000000406F3C                 sub     rdx, 80h
.text:0000000000406F43                 lea     rdi, [rdi-80h]
.text:0000000000406F47                 lea     rsi, [rsi-80h]
.text:0000000000406F4B                 jnb     loc_406EC0      ; jumptable 0000000000405AD3 case 13
.text:0000000000406F51                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000406F56                 add     rdx, 80h
.text:0000000000406F5D                 sub     rdi, rdx
.text:0000000000406F60                 sub     rsi, rdx
.text:0000000000406F63                 lea     r11, jpt_4059FA
.text:0000000000406F6A                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:0000000000406F6E                 lea     rdx, [r11+rdx]
.text:0000000000406F72                 jmp     rdx             ; switch jump
.text:0000000000406F74 ; ---------------------------------------------------------------------------
.text:0000000000406F74                 ud2
.text:0000000000406F74 ; ---------------------------------------------------------------------------
.text:0000000000406F76                 align 20h
.text:0000000000406F80
.text:0000000000406F80 loc_406F80:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000406F80                                         ; __intel_ssse3_rep_memmove+163E↓j
.text:0000000000406F80                                         ; DATA XREF: ...
.text:0000000000406F80                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 14
.text:0000000000406F87                 movaps  xmm1, xmmword ptr [rsi-0Eh]
.text:0000000000406F8B                 movaps  xmm2, xmmword ptr [rsi+2]
.text:0000000000406F8F                 movaps  xmm3, xmmword ptr [rsi+12h]
.text:0000000000406F93                 movaps  xmm4, xmmword ptr [rsi+22h]
.text:0000000000406F97                 movaps  xmm5, xmmword ptr [rsi+32h]
.text:0000000000406F9B                 movaps  xmm6, xmmword ptr [rsi+42h]
.text:0000000000406F9F                 movaps  xmm7, xmmword ptr [rsi+52h]
.text:0000000000406FA3                 movaps  xmm8, xmmword ptr [rsi+62h]
.text:0000000000406FA8                 movaps  xmm9, xmmword ptr [rsi+72h]
.text:0000000000406FAD                 lea     rsi, [rsi+80h]
.text:0000000000406FB4                 palignr xmm9, xmm8, 0Eh
.text:0000000000406FBB                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000406FC0                 palignr xmm8, xmm7, 0Eh
.text:0000000000406FC7                 movaps  xmmword ptr [rdi+60h], xmm8
.text:0000000000406FCC                 palignr xmm7, xmm6, 0Eh
.text:0000000000406FD2                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000406FD6                 palignr xmm6, xmm5, 0Eh
.text:0000000000406FDC                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000406FE0                 palignr xmm5, xmm4, 0Eh
.text:0000000000406FE6                 movaps  xmmword ptr [rdi+30h], xmm5
.text:0000000000406FEA                 palignr xmm4, xmm3, 0Eh
.text:0000000000406FF0                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000406FF4                 palignr xmm3, xmm2, 0Eh
.text:0000000000406FFA                 movaps  xmmword ptr [rdi+10h], xmm3
.text:0000000000406FFE                 palignr xmm2, xmm1, 0Eh
.text:0000000000407004                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000407007                 lea     rdi, [rdi+80h]
.text:000000000040700E                 jnb     loc_406F80      ; jumptable 0000000000405A6C case 14
.text:0000000000407014                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000407019                 add     rdx, 80h
.text:0000000000407020                 add     rdi, rdx
.text:0000000000407023                 add     rsi, rdx
.text:0000000000407026                 lea     r11, jpt_405A1C
.text:000000000040702D                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000407031                 lea     rdx, [r11+rdx]
.text:0000000000407035                 jmp     rdx             ; switch jump
.text:0000000000407037 ; ---------------------------------------------------------------------------
.text:0000000000407037                 ud2
.text:0000000000407037 ; ---------------------------------------------------------------------------
.text:0000000000407039                 align 20h
.text:0000000000407040
.text:0000000000407040 loc_407040:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:0000000000407040                                         ; __intel_ssse3_rep_memmove+16FB↓j
.text:0000000000407040                                         ; DATA XREF: ...
.text:0000000000407040                 movaps  xmm1, xmmword ptr [rsi-0Eh] ; jumptable 0000000000405AD3 case 14
.text:0000000000407044                 movaps  xmm2, xmmword ptr [rsi-1Eh]
.text:0000000000407048                 palignr xmm1, xmm2, 0Eh
.text:000000000040704E                 movaps  xmmword ptr [rdi-10h], xmm1
.text:0000000000407052                 movaps  xmm3, xmmword ptr [rsi-2Eh]
.text:0000000000407056                 palignr xmm2, xmm3, 0Eh
.text:000000000040705C                 movaps  xmmword ptr [rdi-20h], xmm2
.text:0000000000407060                 movaps  xmm4, xmmword ptr [rsi-3Eh]
.text:0000000000407064                 palignr xmm3, xmm4, 0Eh
.text:000000000040706A                 movaps  xmmword ptr [rdi-30h], xmm3
.text:000000000040706E                 movaps  xmm5, xmmword ptr [rsi-4Eh]
.text:0000000000407072                 palignr xmm4, xmm5, 0Eh
.text:0000000000407078                 movaps  xmmword ptr [rdi-40h], xmm4
.text:000000000040707C                 movaps  xmm6, xmmword ptr [rsi-5Eh]
.text:0000000000407080                 palignr xmm5, xmm6, 0Eh
.text:0000000000407086                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040708A                 movaps  xmm7, xmmword ptr [rsi-6Eh]
.text:000000000040708E                 palignr xmm6, xmm7, 0Eh
.text:0000000000407094                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000407098                 movaps  xmm8, xmmword ptr [rsi-7Eh]
.text:000000000040709D                 palignr xmm7, xmm8, 0Eh
.text:00000000004070A4                 movaps  xmmword ptr [rdi-70h], xmm7
.text:00000000004070A8                 movaps  xmm9, xmmword ptr [rsi-8Eh]
.text:00000000004070B0                 palignr xmm8, xmm9, 0Eh
.text:00000000004070B7                 movaps  xmmword ptr [rdi-80h], xmm8
.text:00000000004070BC                 sub     rdx, 80h
.text:00000000004070C3                 lea     rdi, [rdi-80h]
.text:00000000004070C7                 lea     rsi, [rsi-80h]
.text:00000000004070CB                 jnb     loc_407040      ; jumptable 0000000000405AD3 case 14
.text:00000000004070D1                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004070D6                 add     rdx, 80h
.text:00000000004070DD                 sub     rdi, rdx
.text:00000000004070E0                 sub     rsi, rdx
.text:00000000004070E3                 lea     r11, jpt_4059FA
.text:00000000004070EA                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:00000000004070EE                 lea     rdx, [r11+rdx]
.text:00000000004070F2                 jmp     rdx             ; switch jump
.text:00000000004070F4 ; ---------------------------------------------------------------------------
.text:00000000004070F4                 ud2
.text:00000000004070F4 ; ---------------------------------------------------------------------------
.text:00000000004070F6                 align 20h
.text:0000000000407100
.text:0000000000407100 loc_407100:                             ; CODE XREF: __intel_ssse3_rep_memmove+9C↑j
.text:0000000000407100                                         ; __intel_ssse3_rep_memmove+17BE↓j
.text:0000000000407100                                         ; DATA XREF: ...
.text:0000000000407100                 sub     rdx, 80h        ; jumptable 0000000000405A6C case 15
.text:0000000000407107                 movaps  xmm1, xmmword ptr [rsi-0Fh]
.text:000000000040710B                 movaps  xmm2, xmmword ptr [rsi+1]
.text:000000000040710F                 movaps  xmm3, xmmword ptr [rsi+11h]
.text:0000000000407113                 movaps  xmm4, xmmword ptr [rsi+21h]
.text:0000000000407117                 movaps  xmm5, xmmword ptr [rsi+31h]
.text:000000000040711B                 movaps  xmm6, xmmword ptr [rsi+41h]
.text:000000000040711F                 movaps  xmm7, xmmword ptr [rsi+51h]
.text:0000000000407123                 movaps  xmm8, xmmword ptr [rsi+61h]
.text:0000000000407128                 movaps  xmm9, xmmword ptr [rsi+71h]
.text:000000000040712D                 lea     rsi, [rsi+80h]
.text:0000000000407134                 palignr xmm9, xmm8, 0Fh
.text:000000000040713B                 movaps  xmmword ptr [rdi+70h], xmm9
.text:0000000000407140                 palignr xmm8, xmm7, 0Fh
.text:0000000000407147                 movaps  xmmword ptr [rdi+60h], xmm8
.text:000000000040714C                 palignr xmm7, xmm6, 0Fh
.text:0000000000407152                 movaps  xmmword ptr [rdi+50h], xmm7
.text:0000000000407156                 palignr xmm6, xmm5, 0Fh
.text:000000000040715C                 movaps  xmmword ptr [rdi+40h], xmm6
.text:0000000000407160                 palignr xmm5, xmm4, 0Fh
.text:0000000000407166                 movaps  xmmword ptr [rdi+30h], xmm5
.text:000000000040716A                 palignr xmm4, xmm3, 0Fh
.text:0000000000407170                 movaps  xmmword ptr [rdi+20h], xmm4
.text:0000000000407174                 palignr xmm3, xmm2, 0Fh
.text:000000000040717A                 movaps  xmmword ptr [rdi+10h], xmm3
.text:000000000040717E                 palignr xmm2, xmm1, 0Fh
.text:0000000000407184                 movaps  xmmword ptr [rdi], xmm2
.text:0000000000407187                 lea     rdi, [rdi+80h]
.text:000000000040718E                 jnb     loc_407100      ; jumptable 0000000000405A6C case 15
.text:0000000000407194                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000407199                 add     rdx, 80h
.text:00000000004071A0                 add     rdi, rdx
.text:00000000004071A3                 add     rsi, rdx
.text:00000000004071A6                 lea     r11, jpt_405A1C
.text:00000000004071AD                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:00000000004071B1                 lea     rdx, [r11+rdx]
.text:00000000004071B5                 jmp     rdx             ; switch jump
.text:00000000004071B7 ; ---------------------------------------------------------------------------
.text:00000000004071B7                 ud2
.text:00000000004071B7 ; ---------------------------------------------------------------------------
.text:00000000004071B9                 align 20h
.text:00000000004071C0
.text:00000000004071C0 loc_4071C0:                             ; CODE XREF: __intel_ssse3_rep_memmove+103↑j
.text:00000000004071C0                                         ; __intel_ssse3_rep_memmove+187B↓j
.text:00000000004071C0                                         ; DATA XREF: ...
.text:00000000004071C0                 movaps  xmm1, xmmword ptr [rsi-0Fh] ; jumptable 0000000000405AD3 case 15
.text:00000000004071C4                 movaps  xmm2, xmmword ptr [rsi-1Fh]
.text:00000000004071C8                 palignr xmm1, xmm2, 0Fh
.text:00000000004071CE                 movaps  xmmword ptr [rdi-10h], xmm1
.text:00000000004071D2                 movaps  xmm3, xmmword ptr [rsi-2Fh]
.text:00000000004071D6                 palignr xmm2, xmm3, 0Fh
.text:00000000004071DC                 movaps  xmmword ptr [rdi-20h], xmm2
.text:00000000004071E0                 movaps  xmm4, xmmword ptr [rsi-3Fh]
.text:00000000004071E4                 palignr xmm3, xmm4, 0Fh
.text:00000000004071EA                 movaps  xmmword ptr [rdi-30h], xmm3
.text:00000000004071EE                 movaps  xmm5, xmmword ptr [rsi-4Fh]
.text:00000000004071F2                 palignr xmm4, xmm5, 0Fh
.text:00000000004071F8                 movaps  xmmword ptr [rdi-40h], xmm4
.text:00000000004071FC                 movaps  xmm6, xmmword ptr [rsi-5Fh]
.text:0000000000407200                 palignr xmm5, xmm6, 0Fh
.text:0000000000407206                 movaps  xmmword ptr [rdi-50h], xmm5
.text:000000000040720A                 movaps  xmm7, xmmword ptr [rsi-6Fh]
.text:000000000040720E                 palignr xmm6, xmm7, 0Fh
.text:0000000000407214                 movaps  xmmword ptr [rdi-60h], xmm6
.text:0000000000407218                 movaps  xmm8, xmmword ptr [rsi-7Fh]
.text:000000000040721D                 palignr xmm7, xmm8, 0Fh
.text:0000000000407224                 movaps  xmmword ptr [rdi-70h], xmm7
.text:0000000000407228                 movaps  xmm9, xmmword ptr [rsi-8Fh]
.text:0000000000407230                 palignr xmm8, xmm9, 0Fh
.text:0000000000407237                 movaps  xmmword ptr [rdi-80h], xmm8
.text:000000000040723C                 sub     rdx, 80h
.text:0000000000407243                 lea     rdi, [rdi-80h]
.text:0000000000407247                 lea     rsi, [rsi-80h]
.text:000000000040724B                 jnb     loc_4071C0      ; jumptable 0000000000405AD3 case 15
.text:0000000000407251                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000407256                 add     rdx, 80h
.text:000000000040725D                 sub     rdi, rdx
.text:0000000000407260                 sub     rsi, rdx
.text:0000000000407263                 lea     r11, jpt_4059FA
.text:000000000040726A                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:000000000040726E                 lea     rdx, [r11+rdx]
.text:0000000000407272                 jmp     rdx             ; switch jump
.text:0000000000407274 ; ---------------------------------------------------------------------------
.text:0000000000407274                 ud2
.text:0000000000407274 ; ---------------------------------------------------------------------------
.text:0000000000407276                 align 20h
.text:0000000000407280
.text:0000000000407280 loc_407280:                             ; CODE XREF: __intel_ssse3_rep_memmove+81↑j
.text:0000000000407280                                         ; __intel_ssse3_rep_memmove+123↑j
.text:0000000000407280                 movdqu  xmm1, xmmword ptr [rsi]
.text:0000000000407284                 movdqu  xmmword ptr [r8], xmm0
.text:0000000000407289                 movdqa  xmmword ptr [rdi], xmm1
.text:000000000040728D                 sub     rdx, 10h
.text:0000000000407291                 add     rsi, 10h
.text:0000000000407295                 add     rdi, 10h
.text:0000000000407299                 mov     ecx, cs:__libirc_largest_cache_size_half
.text:000000000040729F                 mov     r9, rsi
.text:00000000004072A2                 sub     r9, rdi
.text:00000000004072A5                 cmp     r9, rdx
.text:00000000004072A8                 jnb     short loc_4072B3
.text:00000000004072AA                 cmp     r9, rcx
.text:00000000004072AD                 jbe     loc_407374
.text:00000000004072B3
.text:00000000004072B3 loc_4072B3:                             ; CODE XREF: __intel_ssse3_rep_memmove+18D8↑j
.text:00000000004072B3                 cmp     rdx, rcx
.text:00000000004072B6                 ja      short loc_4072BB
.text:00000000004072B8                 mov     rcx, rdx
.text:00000000004072BB
.text:00000000004072BB loc_4072BB:                             ; CODE XREF: __intel_ssse3_rep_memmove+18E6↑j
.text:00000000004072BB                 sub     rdx, rcx
.text:00000000004072BE                 cmp     rdx, 1000h
.text:00000000004072C5                 jbe     loc_407371
.text:00000000004072CB                 mov     r9, rcx
.text:00000000004072CE                 shl     r9, 3
.text:00000000004072D2                 cmp     rdx, r9
.text:00000000004072D5                 jbe     short loc_4072DD
.text:00000000004072D7                 add     rdx, rcx
.text:00000000004072DA                 xor     rcx, rcx
.text:00000000004072DD
.text:00000000004072DD loc_4072DD:                             ; CODE XREF: __intel_ssse3_rep_memmove+1905↑j
.text:00000000004072DD                 sub     rdx, 80h
.text:00000000004072E4
.text:00000000004072E4 loc_4072E4:                             ; CODE XREF: __intel_ssse3_rep_memmove+1988↓j
.text:00000000004072E4                 sub     rdx, 80h
.text:00000000004072EB                 prefetcht0 byte ptr [rsi+200h]
.text:00000000004072F2                 prefetcht0 byte ptr [rsi+300h]
.text:00000000004072F9                 movdqu  xmm0, xmmword ptr [rsi]
.text:00000000004072FD                 movdqu  xmm1, xmmword ptr [rsi+10h]
.text:0000000000407302                 movdqu  xmm2, xmmword ptr [rsi+20h]
.text:0000000000407307                 movdqu  xmm3, xmmword ptr [rsi+30h]
.text:000000000040730C                 movdqu  xmm4, xmmword ptr [rsi+40h]
.text:0000000000407311                 movdqu  xmm5, xmmword ptr [rsi+50h]
.text:0000000000407316                 movdqu  xmm6, xmmword ptr [rsi+60h]
.text:000000000040731B                 movdqu  xmm7, xmmword ptr [rsi+70h]
.text:0000000000407320                 lfence
.text:0000000000407323                 movntdq xmmword ptr [rdi], xmm0
.text:0000000000407327                 movntdq xmmword ptr [rdi+10h], xmm1
.text:000000000040732C                 movntdq xmmword ptr [rdi+20h], xmm2
.text:0000000000407331                 movntdq xmmword ptr [rdi+30h], xmm3
.text:0000000000407336                 movntdq xmmword ptr [rdi+40h], xmm4
.text:000000000040733B                 movntdq xmmword ptr [rdi+50h], xmm5
.text:0000000000407340                 movntdq xmmword ptr [rdi+60h], xmm6
.text:0000000000407345                 movntdq xmmword ptr [rdi+70h], xmm7
.text:000000000040734A                 lea     rsi, [rsi+80h]
.text:0000000000407351                 lea     rdi, [rdi+80h]
.text:0000000000407358                 jnb     short loc_4072E4
.text:000000000040735A                 sfence
.text:000000000040735D                 cmp     rcx, 80h
.text:0000000000407364                 jb      loc_407400
.text:000000000040736A                 add     rdx, 80h
.text:0000000000407371
.text:0000000000407371 loc_407371:                             ; CODE XREF: __intel_ssse3_rep_memmove+18F5↑j
.text:0000000000407371                 add     rdx, rcx
.text:0000000000407374
.text:0000000000407374 loc_407374:                             ; CODE XREF: __intel_ssse3_rep_memmove+18DD↑j
.text:0000000000407374                 sub     rdx, 80h
.text:000000000040737B
.text:000000000040737B loc_40737B:                             ; CODE XREF: __intel_ssse3_rep_memmove+1A2A↓j
.text:000000000040737B                 prefetchnta byte ptr [rsi+1C0h]
.text:0000000000407382                 prefetchnta byte ptr [rsi+280h]
.text:0000000000407389                 prefetchnta byte ptr [rdi+1C0h]
.text:0000000000407390                 prefetchnta byte ptr [rdi+280h]
.text:0000000000407397                 sub     rdx, 80h
.text:000000000040739E                 movdqu  xmm0, xmmword ptr [rsi]
.text:00000000004073A2                 movdqu  xmm1, xmmword ptr [rsi+10h]
.text:00000000004073A7                 movdqu  xmm2, xmmword ptr [rsi+20h]
.text:00000000004073AC                 movdqu  xmm3, xmmword ptr [rsi+30h]
.text:00000000004073B1                 movdqu  xmm4, xmmword ptr [rsi+40h]
.text:00000000004073B6                 movdqu  xmm5, xmmword ptr [rsi+50h]
.text:00000000004073BB                 movdqu  xmm6, xmmword ptr [rsi+60h]
.text:00000000004073C0                 movdqu  xmm7, xmmword ptr [rsi+70h]
.text:00000000004073C5                 movdqa  xmmword ptr [rdi], xmm0
.text:00000000004073C9                 movdqa  xmmword ptr [rdi+10h], xmm1
.text:00000000004073CE                 movdqa  xmmword ptr [rdi+20h], xmm2
.text:00000000004073D3                 movdqa  xmmword ptr [rdi+30h], xmm3
.text:00000000004073D8                 movdqa  xmmword ptr [rdi+40h], xmm4
.text:00000000004073DD                 movdqa  xmmword ptr [rdi+50h], xmm5
.text:00000000004073E2                 movdqa  xmmword ptr [rdi+60h], xmm6
.text:00000000004073E7                 movdqa  xmmword ptr [rdi+70h], xmm7
.text:00000000004073EC                 lea     rsi, [rsi+80h]
.text:00000000004073F3                 lea     rdi, [rdi+80h]
.text:00000000004073FA                 jnb     loc_40737B
.text:0000000000407400
.text:0000000000407400 loc_407400:                             ; CODE XREF: __intel_ssse3_rep_memmove+1994↑j
.text:0000000000407400                 add     rdx, 80h
.text:0000000000407407                 add     rsi, rdx
.text:000000000040740A                 add     rdi, rdx
.text:000000000040740D                 lea     r11, jpt_405A1C
.text:0000000000407414                 movsxd  rdx, ds:(jpt_405A1C - 40A060h)[r11+rdx*4] ; switch 144 cases
.text:0000000000407418                 lea     rdx, [r11+rdx]
.text:000000000040741C                 jmp     rdx             ; switch jump
.text:000000000040741E ; ---------------------------------------------------------------------------
.text:000000000040741E                 ud2
.text:0000000000407420 ; ---------------------------------------------------------------------------
.text:0000000000407420
.text:0000000000407420 loc_407420:                             ; CODE XREF: __intel_ssse3_rep_memmove+BC↑j
.text:0000000000407420                 add     rsi, rdx
.text:0000000000407423                 add     rdi, rdx
.text:0000000000407426                 movdqu  xmm0, xmmword ptr [rsi-10h]
.text:000000000040742B                 lea     r8, [rdi-10h]
.text:000000000040742F                 mov     r9, rdi
.text:0000000000407432                 and     rdi, 0FFFFFFFFFFFFFFF0h
.text:0000000000407436                 sub     r9, rdi
.text:0000000000407439                 sub     rsi, r9
.text:000000000040743C                 sub     rdx, r9
.text:000000000040743F                 mov     ecx, cs:__libirc_largest_cache_size_half
.text:0000000000407445                 mov     r9, rdi
.text:0000000000407448                 sub     r9, rsi
.text:000000000040744B                 cmp     r9, rdx
.text:000000000040744E                 jnb     short loc_407459
.text:0000000000407450                 cmp     r9, rcx
.text:0000000000407453                 jbe     loc_407518
.text:0000000000407459
.text:0000000000407459 loc_407459:                             ; CODE XREF: __intel_ssse3_rep_memmove+1A7E↑j
.text:0000000000407459                 cmp     rdx, rcx
.text:000000000040745C                 ja      short loc_407461
.text:000000000040745E                 mov     rcx, rdx
.text:0000000000407461
.text:0000000000407461 loc_407461:                             ; CODE XREF: __intel_ssse3_rep_memmove+1A8C↑j
.text:0000000000407461                 sub     rdx, rcx
.text:0000000000407464                 cmp     rdx, 1000h
.text:000000000040746B                 jbe     loc_407515
.text:0000000000407471                 mov     r9, rcx
.text:0000000000407474                 shl     r9, 3
.text:0000000000407478                 cmp     rdx, r9
.text:000000000040747B                 jbe     short loc_407483
.text:000000000040747D                 add     rdx, rcx
.text:0000000000407480                 xor     rcx, rcx
.text:0000000000407483
.text:0000000000407483 loc_407483:                             ; CODE XREF: __intel_ssse3_rep_memmove+1AAB↑j
.text:0000000000407483                 sub     rdx, 80h
.text:000000000040748A
.text:000000000040748A loc_40748A:                             ; CODE XREF: __intel_ssse3_rep_memmove+1B2C↓j
.text:000000000040748A                 sub     rdx, 80h
.text:0000000000407491                 prefetcht0 byte ptr [rsi-200h]
.text:0000000000407498                 prefetcht0 byte ptr [rsi-300h]
.text:000000000040749F                 movdqu  xmm1, xmmword ptr [rsi-10h]
.text:00000000004074A4                 movdqu  xmm2, xmmword ptr [rsi-20h]
.text:00000000004074A9                 movdqu  xmm3, xmmword ptr [rsi-30h]
.text:00000000004074AE                 movdqu  xmm4, xmmword ptr [rsi-40h]
.text:00000000004074B3                 movdqu  xmm5, xmmword ptr [rsi-50h]
.text:00000000004074B8                 movdqu  xmm6, xmmword ptr [rsi-60h]
.text:00000000004074BD                 movdqu  xmm7, xmmword ptr [rsi-70h]
.text:00000000004074C2                 movdqu  xmm8, xmmword ptr [rsi-80h]
.text:00000000004074C8                 lfence
.text:00000000004074CB                 movntdq xmmword ptr [rdi-10h], xmm1
.text:00000000004074D0                 movntdq xmmword ptr [rdi-20h], xmm2
.text:00000000004074D5                 movntdq xmmword ptr [rdi-30h], xmm3
.text:00000000004074DA                 movntdq xmmword ptr [rdi-40h], xmm4
.text:00000000004074DF                 movntdq xmmword ptr [rdi-50h], xmm5
.text:00000000004074E4                 movntdq xmmword ptr [rdi-60h], xmm6
.text:00000000004074E9                 movntdq xmmword ptr [rdi-70h], xmm7
.text:00000000004074EE                 movntdq xmmword ptr [rdi-80h], xmm8
.text:00000000004074F4                 lea     rsi, [rsi-80h]
.text:00000000004074F8                 lea     rdi, [rdi-80h]
.text:00000000004074FC                 jnb     short loc_40748A
.text:00000000004074FE                 sfence
.text:0000000000407501                 cmp     rcx, 80h
.text:0000000000407508                 jb      loc_40759E
.text:000000000040750E                 add     rdx, 80h
.text:0000000000407515
.text:0000000000407515 loc_407515:                             ; CODE XREF: __intel_ssse3_rep_memmove+1A9B↑j
.text:0000000000407515                 add     rdx, rcx
.text:0000000000407518
.text:0000000000407518 loc_407518:                             ; CODE XREF: __intel_ssse3_rep_memmove+1A83↑j
.text:0000000000407518                 sub     rdx, 80h
.text:000000000040751F
.text:000000000040751F loc_40751F:                             ; CODE XREF: __intel_ssse3_rep_memmove+1BCC↓j
.text:000000000040751F                 prefetchnta byte ptr [rsi-1C0h]
.text:0000000000407526                 prefetchnta byte ptr [rsi-280h]
.text:000000000040752D                 prefetchnta byte ptr [rdi-1C0h]
.text:0000000000407534                 prefetchnta byte ptr [rdi-280h]
.text:000000000040753B                 sub     rdx, 80h
.text:0000000000407542                 movdqu  xmm1, xmmword ptr [rsi-10h]
.text:0000000000407547                 movdqu  xmm2, xmmword ptr [rsi-20h]
.text:000000000040754C                 movdqu  xmm3, xmmword ptr [rsi-30h]
.text:0000000000407551                 movdqu  xmm4, xmmword ptr [rsi-40h]
.text:0000000000407556                 movdqu  xmm5, xmmword ptr [rsi-50h]
.text:000000000040755B                 movdqu  xmm6, xmmword ptr [rsi-60h]
.text:0000000000407560                 movdqu  xmm7, xmmword ptr [rsi-70h]
.text:0000000000407565                 movdqu  xmm8, xmmword ptr [rsi-80h]
.text:000000000040756B                 movdqa  xmmword ptr [rdi-10h], xmm1
.text:0000000000407570                 movdqa  xmmword ptr [rdi-20h], xmm2
.text:0000000000407575                 movdqa  xmmword ptr [rdi-30h], xmm3
.text:000000000040757A                 movdqa  xmmword ptr [rdi-40h], xmm4
.text:000000000040757F                 movdqa  xmmword ptr [rdi-50h], xmm5
.text:0000000000407584                 movdqa  xmmword ptr [rdi-60h], xmm6
.text:0000000000407589                 movdqa  xmmword ptr [rdi-70h], xmm7
.text:000000000040758E                 movdqa  xmmword ptr [rdi-80h], xmm8
.text:0000000000407594                 lea     rsi, [rsi-80h]
.text:0000000000407598                 lea     rdi, [rdi-80h]
.text:000000000040759C                 jnb     short loc_40751F
.text:000000000040759E
.text:000000000040759E loc_40759E:                             ; CODE XREF: __intel_ssse3_rep_memmove+1B38↑j
.text:000000000040759E                 movdqu  xmmword ptr [r8], xmm0
.text:00000000004075A3                 add     rdx, 80h
.text:00000000004075AA                 sub     rsi, rdx
.text:00000000004075AD                 sub     rdi, rdx
.text:00000000004075B0                 lea     r11, jpt_4059FA
.text:00000000004075B7                 movsxd  rdx, ds:(jpt_4059FA - 409E20h)[r11+rdx*4] ; switch 144 cases
.text:00000000004075BB                 lea     rdx, [r11+rdx]
.text:00000000004075BF                 jmp     rdx             ; switch jump
.text:00000000004075C1 ; ---------------------------------------------------------------------------
.text:00000000004075C1                 ud2
.text:00000000004075C1 ; ---------------------------------------------------------------------------
.text:00000000004075C3                 align 10h
.text:00000000004075D0
.text:00000000004075D0 loc_4075D0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004075D0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004075D0                 lddqu   xmm0, xmmword ptr [rsi-80h] ; jumptable 0000000000405A1C case 128
.text:00000000004075D0                                         ; jumptable 0000000000405B78 case 128
.text:00000000004075D0                                         ; jumptable 0000000000405CB5 case 128
.text:00000000004075D0                                         ; jumptable 0000000000405E35 case 128
.text:00000000004075D0                                         ; jumptable 0000000000405FB5 case 128
.text:00000000004075D0                                         ; jumptable 0000000000406135 case 128
.text:00000000004075D0                                         ; jumptable 00000000004062B5 case 128
.text:00000000004075D0                                         ; jumptable 0000000000406435 case 128
.text:00000000004075D0                                         ; jumptable 00000000004065B5 case 128
.text:00000000004075D0                                         ; jumptable 0000000000406735 case 128
.text:00000000004075D0                                         ; jumptable 00000000004068B5 case 128
.text:00000000004075D0                                         ; jumptable 0000000000406A35 case 128
.text:00000000004075D0                                         ; jumptable 0000000000406BB5 case 128
.text:00000000004075D0                                         ; jumptable 0000000000406D36 case 128
.text:00000000004075D0                                         ; jumptable 0000000000406EB5 case 128
.text:00000000004075D0                                         ; jumptable 0000000000407035 case 128
.text:00000000004075D0                                         ; jumptable 00000000004071B5 case 128
.text:00000000004075D0                                         ; jumptable 000000000040741C case 128
.text:00000000004075D5                 movdqu  xmmword ptr [rdi-80h], xmm0
.text:00000000004075DA
.text:00000000004075DA loc_4075DA:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004075DA                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004075DA                 lddqu   xmm0, xmmword ptr [rsi-70h] ; jumptable 0000000000405A1C case 112
.text:00000000004075DA                                         ; jumptable 0000000000405B78 case 112
.text:00000000004075DA                                         ; jumptable 0000000000405CB5 case 112
.text:00000000004075DA                                         ; jumptable 0000000000405E35 case 112
.text:00000000004075DA                                         ; jumptable 0000000000405FB5 case 112
.text:00000000004075DA                                         ; jumptable 0000000000406135 case 112
.text:00000000004075DA                                         ; jumptable 00000000004062B5 case 112
.text:00000000004075DA                                         ; jumptable 0000000000406435 case 112
.text:00000000004075DA                                         ; jumptable 00000000004065B5 case 112
.text:00000000004075DA                                         ; jumptable 0000000000406735 case 112
.text:00000000004075DA                                         ; jumptable 00000000004068B5 case 112
.text:00000000004075DA                                         ; jumptable 0000000000406A35 case 112
.text:00000000004075DA                                         ; jumptable 0000000000406BB5 case 112
.text:00000000004075DA                                         ; jumptable 0000000000406D36 case 112
.text:00000000004075DA                                         ; jumptable 0000000000406EB5 case 112
.text:00000000004075DA                                         ; jumptable 0000000000407035 case 112
.text:00000000004075DA                                         ; jumptable 00000000004071B5 case 112
.text:00000000004075DA                                         ; jumptable 000000000040741C case 112
.text:00000000004075DF                 movdqu  xmmword ptr [rdi-70h], xmm0
.text:00000000004075E4
.text:00000000004075E4 loc_4075E4:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004075E4                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004075E4                 lddqu   xmm0, xmmword ptr [rsi-60h] ; jumptable 0000000000405A1C case 96
.text:00000000004075E4                                         ; jumptable 0000000000405B78 case 96
.text:00000000004075E4                                         ; jumptable 0000000000405CB5 case 96
.text:00000000004075E4                                         ; jumptable 0000000000405E35 case 96
.text:00000000004075E4                                         ; jumptable 0000000000405FB5 case 96
.text:00000000004075E4                                         ; jumptable 0000000000406135 case 96
.text:00000000004075E4                                         ; jumptable 00000000004062B5 case 96
.text:00000000004075E4                                         ; jumptable 0000000000406435 case 96
.text:00000000004075E4                                         ; jumptable 00000000004065B5 case 96
.text:00000000004075E4                                         ; jumptable 0000000000406735 case 96
.text:00000000004075E4                                         ; jumptable 00000000004068B5 case 96
.text:00000000004075E4                                         ; jumptable 0000000000406A35 case 96
.text:00000000004075E4                                         ; jumptable 0000000000406BB5 case 96
.text:00000000004075E4                                         ; jumptable 0000000000406D36 case 96
.text:00000000004075E4                                         ; jumptable 0000000000406EB5 case 96
.text:00000000004075E4                                         ; jumptable 0000000000407035 case 96
.text:00000000004075E4                                         ; jumptable 00000000004071B5 case 96
.text:00000000004075E4                                         ; jumptable 000000000040741C case 96
.text:00000000004075E9                 movdqu  xmmword ptr [rdi-60h], xmm0
.text:00000000004075EE
.text:00000000004075EE loc_4075EE:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004075EE                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004075EE                 lddqu   xmm0, xmmword ptr [rsi-50h] ; jumptable 0000000000405A1C case 80
.text:00000000004075EE                                         ; jumptable 0000000000405B78 case 80
.text:00000000004075EE                                         ; jumptable 0000000000405CB5 case 80
.text:00000000004075EE                                         ; jumptable 0000000000405E35 case 80
.text:00000000004075EE                                         ; jumptable 0000000000405FB5 case 80
.text:00000000004075EE                                         ; jumptable 0000000000406135 case 80
.text:00000000004075EE                                         ; jumptable 00000000004062B5 case 80
.text:00000000004075EE                                         ; jumptable 0000000000406435 case 80
.text:00000000004075EE                                         ; jumptable 00000000004065B5 case 80
.text:00000000004075EE                                         ; jumptable 0000000000406735 case 80
.text:00000000004075EE                                         ; jumptable 00000000004068B5 case 80
.text:00000000004075EE                                         ; jumptable 0000000000406A35 case 80
.text:00000000004075EE                                         ; jumptable 0000000000406BB5 case 80
.text:00000000004075EE                                         ; jumptable 0000000000406D36 case 80
.text:00000000004075EE                                         ; jumptable 0000000000406EB5 case 80
.text:00000000004075EE                                         ; jumptable 0000000000407035 case 80
.text:00000000004075EE                                         ; jumptable 00000000004071B5 case 80
.text:00000000004075EE                                         ; jumptable 000000000040741C case 80
.text:00000000004075F3                 movdqu  xmmword ptr [rdi-50h], xmm0
.text:00000000004075F8
.text:00000000004075F8 loc_4075F8:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004075F8                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004075F8                 lddqu   xmm0, xmmword ptr [rsi-40h] ; jumptable 0000000000405A1C case 64
.text:00000000004075F8                                         ; jumptable 0000000000405B78 case 64
.text:00000000004075F8                                         ; jumptable 0000000000405CB5 case 64
.text:00000000004075F8                                         ; jumptable 0000000000405E35 case 64
.text:00000000004075F8                                         ; jumptable 0000000000405FB5 case 64
.text:00000000004075F8                                         ; jumptable 0000000000406135 case 64
.text:00000000004075F8                                         ; jumptable 00000000004062B5 case 64
.text:00000000004075F8                                         ; jumptable 0000000000406435 case 64
.text:00000000004075F8                                         ; jumptable 00000000004065B5 case 64
.text:00000000004075F8                                         ; jumptable 0000000000406735 case 64
.text:00000000004075F8                                         ; jumptable 00000000004068B5 case 64
.text:00000000004075F8                                         ; jumptable 0000000000406A35 case 64
.text:00000000004075F8                                         ; jumptable 0000000000406BB5 case 64
.text:00000000004075F8                                         ; jumptable 0000000000406D36 case 64
.text:00000000004075F8                                         ; jumptable 0000000000406EB5 case 64
.text:00000000004075F8                                         ; jumptable 0000000000407035 case 64
.text:00000000004075F8                                         ; jumptable 00000000004071B5 case 64
.text:00000000004075F8                                         ; jumptable 000000000040741C case 64
.text:00000000004075FD                 movdqu  xmmword ptr [rdi-40h], xmm0
.text:0000000000407602
.text:0000000000407602 loc_407602:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407602                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407602                 lddqu   xmm0, xmmword ptr [rsi-30h] ; jumptable 0000000000405A1C case 48
.text:0000000000407602                                         ; jumptable 0000000000405B78 case 48
.text:0000000000407602                                         ; jumptable 0000000000405CB5 case 48
.text:0000000000407602                                         ; jumptable 0000000000405E35 case 48
.text:0000000000407602                                         ; jumptable 0000000000405FB5 case 48
.text:0000000000407602                                         ; jumptable 0000000000406135 case 48
.text:0000000000407602                                         ; jumptable 00000000004062B5 case 48
.text:0000000000407602                                         ; jumptable 0000000000406435 case 48
.text:0000000000407602                                         ; jumptable 00000000004065B5 case 48
.text:0000000000407602                                         ; jumptable 0000000000406735 case 48
.text:0000000000407602                                         ; jumptable 00000000004068B5 case 48
.text:0000000000407602                                         ; jumptable 0000000000406A35 case 48
.text:0000000000407602                                         ; jumptable 0000000000406BB5 case 48
.text:0000000000407602                                         ; jumptable 0000000000406D36 case 48
.text:0000000000407602                                         ; jumptable 0000000000406EB5 case 48
.text:0000000000407602                                         ; jumptable 0000000000407035 case 48
.text:0000000000407602                                         ; jumptable 00000000004071B5 case 48
.text:0000000000407602                                         ; jumptable 000000000040741C case 48
.text:0000000000407607                 movdqu  xmmword ptr [rdi-30h], xmm0
.text:000000000040760C
.text:000000000040760C loc_40760C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040760C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040760C                 lddqu   xmm0, xmmword ptr [rsi-20h] ; jumptable 0000000000405A1C case 32
.text:000000000040760C                                         ; jumptable 0000000000405B78 case 32
.text:000000000040760C                                         ; jumptable 0000000000405CB5 case 32
.text:000000000040760C                                         ; jumptable 0000000000405E35 case 32
.text:000000000040760C                                         ; jumptable 0000000000405FB5 case 32
.text:000000000040760C                                         ; jumptable 0000000000406135 case 32
.text:000000000040760C                                         ; jumptable 00000000004062B5 case 32
.text:000000000040760C                                         ; jumptable 0000000000406435 case 32
.text:000000000040760C                                         ; jumptable 00000000004065B5 case 32
.text:000000000040760C                                         ; jumptable 0000000000406735 case 32
.text:000000000040760C                                         ; jumptable 00000000004068B5 case 32
.text:000000000040760C                                         ; jumptable 0000000000406A35 case 32
.text:000000000040760C                                         ; jumptable 0000000000406BB5 case 32
.text:000000000040760C                                         ; jumptable 0000000000406D36 case 32
.text:000000000040760C                                         ; jumptable 0000000000406EB5 case 32
.text:000000000040760C                                         ; jumptable 0000000000407035 case 32
.text:000000000040760C                                         ; jumptable 00000000004071B5 case 32
.text:000000000040760C                                         ; jumptable 000000000040741C case 32
.text:0000000000407611                 movdqu  xmmword ptr [rdi-20h], xmm0
.text:0000000000407616
.text:0000000000407616 loc_407616:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407616                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407616                 lddqu   xmm0, xmmword ptr [rsi-10h] ; jumptable 0000000000405A1C case 16
.text:0000000000407616                                         ; jumptable 0000000000405B78 case 16
.text:0000000000407616                                         ; jumptable 0000000000405CB5 case 16
.text:0000000000407616                                         ; jumptable 0000000000405E35 case 16
.text:0000000000407616                                         ; jumptable 0000000000405FB5 case 16
.text:0000000000407616                                         ; jumptable 0000000000406135 case 16
.text:0000000000407616                                         ; jumptable 00000000004062B5 case 16
.text:0000000000407616                                         ; jumptable 0000000000406435 case 16
.text:0000000000407616                                         ; jumptable 00000000004065B5 case 16
.text:0000000000407616                                         ; jumptable 0000000000406735 case 16
.text:0000000000407616                                         ; jumptable 00000000004068B5 case 16
.text:0000000000407616                                         ; jumptable 0000000000406A35 case 16
.text:0000000000407616                                         ; jumptable 0000000000406BB5 case 16
.text:0000000000407616                                         ; jumptable 0000000000406D36 case 16
.text:0000000000407616                                         ; jumptable 0000000000406EB5 case 16
.text:0000000000407616                                         ; jumptable 0000000000407035 case 16
.text:0000000000407616                                         ; jumptable 00000000004071B5 case 16
.text:0000000000407616                                         ; jumptable 000000000040741C case 16
.text:000000000040761B                 movdqu  xmmword ptr [rdi-10h], xmm0
.text:0000000000407620
.text:0000000000407620 locret_407620:                          ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407620                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407620                 retn                    ; jumptable 0000000000405A1C case 0
.text:0000000000407620                                         ; jumptable 0000000000405B78 case 0
.text:0000000000407620                                         ; jumptable 0000000000405CB5 case 0
.text:0000000000407620                                         ; jumptable 0000000000405E35 case 0
.text:0000000000407620                                         ; jumptable 0000000000405FB5 case 0
.text:0000000000407620                                         ; jumptable 0000000000406135 case 0
.text:0000000000407620                                         ; jumptable 00000000004062B5 case 0
.text:0000000000407620                                         ; jumptable 0000000000406435 case 0
.text:0000000000407620                                         ; jumptable 00000000004065B5 case 0
.text:0000000000407620                                         ; jumptable 0000000000406735 case 0
.text:0000000000407620                                         ; jumptable 00000000004068B5 case 0
.text:0000000000407620                                         ; jumptable 0000000000406A35 case 0
.text:0000000000407620                                         ; jumptable 0000000000406BB5 case 0
.text:0000000000407620                                         ; jumptable 0000000000406D36 case 0
.text:0000000000407620                                         ; jumptable 0000000000406EB5 case 0
.text:0000000000407620                                         ; jumptable 0000000000407035 case 0
.text:0000000000407620                                         ; jumptable 00000000004071B5 case 0
.text:0000000000407620                                         ; jumptable 000000000040741C case 0
.text:0000000000407620 ; ---------------------------------------------------------------------------
.text:0000000000407621                 align 10h
.text:0000000000407630
.text:0000000000407630 loc_407630:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407630                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407630                 lddqu   xmm0, xmmword ptr [rsi-8Fh] ; jumptable 0000000000405A1C case 143
.text:0000000000407630                                         ; jumptable 0000000000405B78 case 143
.text:0000000000407630                                         ; jumptable 0000000000405CB5 case 143
.text:0000000000407630                                         ; jumptable 0000000000405E35 case 143
.text:0000000000407630                                         ; jumptable 0000000000405FB5 case 143
.text:0000000000407630                                         ; jumptable 0000000000406135 case 143
.text:0000000000407630                                         ; jumptable 00000000004062B5 case 143
.text:0000000000407630                                         ; jumptable 0000000000406435 case 143
.text:0000000000407630                                         ; jumptable 00000000004065B5 case 143
.text:0000000000407630                                         ; jumptable 0000000000406735 case 143
.text:0000000000407630                                         ; jumptable 00000000004068B5 case 143
.text:0000000000407630                                         ; jumptable 0000000000406A35 case 143
.text:0000000000407630                                         ; jumptable 0000000000406BB5 case 143
.text:0000000000407630                                         ; jumptable 0000000000406D36 case 143
.text:0000000000407630                                         ; jumptable 0000000000406EB5 case 143
.text:0000000000407630                                         ; jumptable 0000000000407035 case 143
.text:0000000000407630                                         ; jumptable 00000000004071B5 case 143
.text:0000000000407630                                         ; jumptable 000000000040741C case 143
.text:0000000000407638                 movdqu  xmmword ptr [rdi-8Fh], xmm0
.text:0000000000407640
.text:0000000000407640 loc_407640:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407640                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407640                 lddqu   xmm0, xmmword ptr [rsi-7Fh] ; jumptable 0000000000405A1C case 127
.text:0000000000407640                                         ; jumptable 0000000000405B78 case 127
.text:0000000000407640                                         ; jumptable 0000000000405CB5 case 127
.text:0000000000407640                                         ; jumptable 0000000000405E35 case 127
.text:0000000000407640                                         ; jumptable 0000000000405FB5 case 127
.text:0000000000407640                                         ; jumptable 0000000000406135 case 127
.text:0000000000407640                                         ; jumptable 00000000004062B5 case 127
.text:0000000000407640                                         ; jumptable 0000000000406435 case 127
.text:0000000000407640                                         ; jumptable 00000000004065B5 case 127
.text:0000000000407640                                         ; jumptable 0000000000406735 case 127
.text:0000000000407640                                         ; jumptable 00000000004068B5 case 127
.text:0000000000407640                                         ; jumptable 0000000000406A35 case 127
.text:0000000000407640                                         ; jumptable 0000000000406BB5 case 127
.text:0000000000407640                                         ; jumptable 0000000000406D36 case 127
.text:0000000000407640                                         ; jumptable 0000000000406EB5 case 127
.text:0000000000407640                                         ; jumptable 0000000000407035 case 127
.text:0000000000407640                                         ; jumptable 00000000004071B5 case 127
.text:0000000000407640                                         ; jumptable 000000000040741C case 127
.text:0000000000407645                 movdqu  xmmword ptr [rdi-7Fh], xmm0
.text:000000000040764A
.text:000000000040764A loc_40764A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040764A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040764A                 lddqu   xmm0, xmmword ptr [rsi-6Fh] ; jumptable 0000000000405A1C case 111
.text:000000000040764A                                         ; jumptable 0000000000405B78 case 111
.text:000000000040764A                                         ; jumptable 0000000000405CB5 case 111
.text:000000000040764A                                         ; jumptable 0000000000405E35 case 111
.text:000000000040764A                                         ; jumptable 0000000000405FB5 case 111
.text:000000000040764A                                         ; jumptable 0000000000406135 case 111
.text:000000000040764A                                         ; jumptable 00000000004062B5 case 111
.text:000000000040764A                                         ; jumptable 0000000000406435 case 111
.text:000000000040764A                                         ; jumptable 00000000004065B5 case 111
.text:000000000040764A                                         ; jumptable 0000000000406735 case 111
.text:000000000040764A                                         ; jumptable 00000000004068B5 case 111
.text:000000000040764A                                         ; jumptable 0000000000406A35 case 111
.text:000000000040764A                                         ; jumptable 0000000000406BB5 case 111
.text:000000000040764A                                         ; jumptable 0000000000406D36 case 111
.text:000000000040764A                                         ; jumptable 0000000000406EB5 case 111
.text:000000000040764A                                         ; jumptable 0000000000407035 case 111
.text:000000000040764A                                         ; jumptable 00000000004071B5 case 111
.text:000000000040764A                                         ; jumptable 000000000040741C case 111
.text:000000000040764F                 movdqu  xmmword ptr [rdi-6Fh], xmm0
.text:0000000000407654
.text:0000000000407654 loc_407654:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407654                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407654                 lddqu   xmm0, xmmword ptr [rsi-5Fh] ; jumptable 0000000000405A1C case 95
.text:0000000000407654                                         ; jumptable 0000000000405B78 case 95
.text:0000000000407654                                         ; jumptable 0000000000405CB5 case 95
.text:0000000000407654                                         ; jumptable 0000000000405E35 case 95
.text:0000000000407654                                         ; jumptable 0000000000405FB5 case 95
.text:0000000000407654                                         ; jumptable 0000000000406135 case 95
.text:0000000000407654                                         ; jumptable 00000000004062B5 case 95
.text:0000000000407654                                         ; jumptable 0000000000406435 case 95
.text:0000000000407654                                         ; jumptable 00000000004065B5 case 95
.text:0000000000407654                                         ; jumptable 0000000000406735 case 95
.text:0000000000407654                                         ; jumptable 00000000004068B5 case 95
.text:0000000000407654                                         ; jumptable 0000000000406A35 case 95
.text:0000000000407654                                         ; jumptable 0000000000406BB5 case 95
.text:0000000000407654                                         ; jumptable 0000000000406D36 case 95
.text:0000000000407654                                         ; jumptable 0000000000406EB5 case 95
.text:0000000000407654                                         ; jumptable 0000000000407035 case 95
.text:0000000000407654                                         ; jumptable 00000000004071B5 case 95
.text:0000000000407654                                         ; jumptable 000000000040741C case 95
.text:0000000000407659                 movdqu  xmmword ptr [rdi-5Fh], xmm0
.text:000000000040765E
.text:000000000040765E loc_40765E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040765E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040765E                 lddqu   xmm0, xmmword ptr [rsi-4Fh] ; jumptable 0000000000405A1C case 79
.text:000000000040765E                                         ; jumptable 0000000000405B78 case 79
.text:000000000040765E                                         ; jumptable 0000000000405CB5 case 79
.text:000000000040765E                                         ; jumptable 0000000000405E35 case 79
.text:000000000040765E                                         ; jumptable 0000000000405FB5 case 79
.text:000000000040765E                                         ; jumptable 0000000000406135 case 79
.text:000000000040765E                                         ; jumptable 00000000004062B5 case 79
.text:000000000040765E                                         ; jumptable 0000000000406435 case 79
.text:000000000040765E                                         ; jumptable 00000000004065B5 case 79
.text:000000000040765E                                         ; jumptable 0000000000406735 case 79
.text:000000000040765E                                         ; jumptable 00000000004068B5 case 79
.text:000000000040765E                                         ; jumptable 0000000000406A35 case 79
.text:000000000040765E                                         ; jumptable 0000000000406BB5 case 79
.text:000000000040765E                                         ; jumptable 0000000000406D36 case 79
.text:000000000040765E                                         ; jumptable 0000000000406EB5 case 79
.text:000000000040765E                                         ; jumptable 0000000000407035 case 79
.text:000000000040765E                                         ; jumptable 00000000004071B5 case 79
.text:000000000040765E                                         ; jumptable 000000000040741C case 79
.text:0000000000407663                 movdqu  xmmword ptr [rdi-4Fh], xmm0
.text:0000000000407668
.text:0000000000407668 loc_407668:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407668                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407668                 lddqu   xmm0, xmmword ptr [rsi-3Fh] ; jumptable 0000000000405A1C case 63
.text:0000000000407668                                         ; jumptable 0000000000405B78 case 63
.text:0000000000407668                                         ; jumptable 0000000000405CB5 case 63
.text:0000000000407668                                         ; jumptable 0000000000405E35 case 63
.text:0000000000407668                                         ; jumptable 0000000000405FB5 case 63
.text:0000000000407668                                         ; jumptable 0000000000406135 case 63
.text:0000000000407668                                         ; jumptable 00000000004062B5 case 63
.text:0000000000407668                                         ; jumptable 0000000000406435 case 63
.text:0000000000407668                                         ; jumptable 00000000004065B5 case 63
.text:0000000000407668                                         ; jumptable 0000000000406735 case 63
.text:0000000000407668                                         ; jumptable 00000000004068B5 case 63
.text:0000000000407668                                         ; jumptable 0000000000406A35 case 63
.text:0000000000407668                                         ; jumptable 0000000000406BB5 case 63
.text:0000000000407668                                         ; jumptable 0000000000406D36 case 63
.text:0000000000407668                                         ; jumptable 0000000000406EB5 case 63
.text:0000000000407668                                         ; jumptable 0000000000407035 case 63
.text:0000000000407668                                         ; jumptable 00000000004071B5 case 63
.text:0000000000407668                                         ; jumptable 000000000040741C case 63
.text:000000000040766D                 movdqu  xmmword ptr [rdi-3Fh], xmm0
.text:0000000000407672
.text:0000000000407672 loc_407672:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407672                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407672                 lddqu   xmm0, xmmword ptr [rsi-2Fh] ; jumptable 0000000000405A1C case 47
.text:0000000000407672                                         ; jumptable 0000000000405B78 case 47
.text:0000000000407672                                         ; jumptable 0000000000405CB5 case 47
.text:0000000000407672                                         ; jumptable 0000000000405E35 case 47
.text:0000000000407672                                         ; jumptable 0000000000405FB5 case 47
.text:0000000000407672                                         ; jumptable 0000000000406135 case 47
.text:0000000000407672                                         ; jumptable 00000000004062B5 case 47
.text:0000000000407672                                         ; jumptable 0000000000406435 case 47
.text:0000000000407672                                         ; jumptable 00000000004065B5 case 47
.text:0000000000407672                                         ; jumptable 0000000000406735 case 47
.text:0000000000407672                                         ; jumptable 00000000004068B5 case 47
.text:0000000000407672                                         ; jumptable 0000000000406A35 case 47
.text:0000000000407672                                         ; jumptable 0000000000406BB5 case 47
.text:0000000000407672                                         ; jumptable 0000000000406D36 case 47
.text:0000000000407672                                         ; jumptable 0000000000406EB5 case 47
.text:0000000000407672                                         ; jumptable 0000000000407035 case 47
.text:0000000000407672                                         ; jumptable 00000000004071B5 case 47
.text:0000000000407672                                         ; jumptable 000000000040741C case 47
.text:0000000000407677                 movdqu  xmmword ptr [rdi-2Fh], xmm0
.text:000000000040767C
.text:000000000040767C loc_40767C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040767C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040767C                 lddqu   xmm0, xmmword ptr [rsi-1Fh] ; jumptable 0000000000405A1C case 31
.text:000000000040767C                                         ; jumptable 0000000000405B78 case 31
.text:000000000040767C                                         ; jumptable 0000000000405CB5 case 31
.text:000000000040767C                                         ; jumptable 0000000000405E35 case 31
.text:000000000040767C                                         ; jumptable 0000000000405FB5 case 31
.text:000000000040767C                                         ; jumptable 0000000000406135 case 31
.text:000000000040767C                                         ; jumptable 00000000004062B5 case 31
.text:000000000040767C                                         ; jumptable 0000000000406435 case 31
.text:000000000040767C                                         ; jumptable 00000000004065B5 case 31
.text:000000000040767C                                         ; jumptable 0000000000406735 case 31
.text:000000000040767C                                         ; jumptable 00000000004068B5 case 31
.text:000000000040767C                                         ; jumptable 0000000000406A35 case 31
.text:000000000040767C                                         ; jumptable 0000000000406BB5 case 31
.text:000000000040767C                                         ; jumptable 0000000000406D36 case 31
.text:000000000040767C                                         ; jumptable 0000000000406EB5 case 31
.text:000000000040767C                                         ; jumptable 0000000000407035 case 31
.text:000000000040767C                                         ; jumptable 00000000004071B5 case 31
.text:000000000040767C                                         ; jumptable 000000000040741C case 31
.text:0000000000407681                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407686                 movdqu  xmmword ptr [rdi-1Fh], xmm0
.text:000000000040768B                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407690                 retn
.text:0000000000407690 ; ---------------------------------------------------------------------------
.text:0000000000407691                 align 20h
.text:00000000004076A0
.text:00000000004076A0 loc_4076A0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004076A0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004076A0                 mov     rdx, [rsi-0Fh]  ; jumptable 0000000000405A1C case 15
.text:00000000004076A0                                         ; jumptable 0000000000405B78 case 15
.text:00000000004076A0                                         ; jumptable 0000000000405CB5 case 15
.text:00000000004076A0                                         ; jumptable 0000000000405E35 case 15
.text:00000000004076A0                                         ; jumptable 0000000000405FB5 case 15
.text:00000000004076A0                                         ; jumptable 0000000000406135 case 15
.text:00000000004076A0                                         ; jumptable 00000000004062B5 case 15
.text:00000000004076A0                                         ; jumptable 0000000000406435 case 15
.text:00000000004076A0                                         ; jumptable 00000000004065B5 case 15
.text:00000000004076A0                                         ; jumptable 0000000000406735 case 15
.text:00000000004076A0                                         ; jumptable 00000000004068B5 case 15
.text:00000000004076A0                                         ; jumptable 0000000000406A35 case 15
.text:00000000004076A0                                         ; jumptable 0000000000406BB5 case 15
.text:00000000004076A0                                         ; jumptable 0000000000406D36 case 15
.text:00000000004076A0                                         ; jumptable 0000000000406EB5 case 15
.text:00000000004076A0                                         ; jumptable 0000000000407035 case 15
.text:00000000004076A0                                         ; jumptable 00000000004071B5 case 15
.text:00000000004076A0                                         ; jumptable 000000000040741C case 15
.text:00000000004076A4                 mov     rcx, [rsi-8]
.text:00000000004076A8                 mov     [rdi-0Fh], rdx
.text:00000000004076AC                 mov     [rdi-8], rcx
.text:00000000004076B0                 retn
.text:00000000004076B0 ; ---------------------------------------------------------------------------
.text:00000000004076B1                 align 20h
.text:00000000004076C0
.text:00000000004076C0 loc_4076C0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004076C0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004076C0                 lddqu   xmm0, xmmword ptr [rsi-8Eh] ; jumptable 0000000000405A1C case 142
.text:00000000004076C0                                         ; jumptable 0000000000405B78 case 142
.text:00000000004076C0                                         ; jumptable 0000000000405CB5 case 142
.text:00000000004076C0                                         ; jumptable 0000000000405E35 case 142
.text:00000000004076C0                                         ; jumptable 0000000000405FB5 case 142
.text:00000000004076C0                                         ; jumptable 0000000000406135 case 142
.text:00000000004076C0                                         ; jumptable 00000000004062B5 case 142
.text:00000000004076C0                                         ; jumptable 0000000000406435 case 142
.text:00000000004076C0                                         ; jumptable 00000000004065B5 case 142
.text:00000000004076C0                                         ; jumptable 0000000000406735 case 142
.text:00000000004076C0                                         ; jumptable 00000000004068B5 case 142
.text:00000000004076C0                                         ; jumptable 0000000000406A35 case 142
.text:00000000004076C0                                         ; jumptable 0000000000406BB5 case 142
.text:00000000004076C0                                         ; jumptable 0000000000406D36 case 142
.text:00000000004076C0                                         ; jumptable 0000000000406EB5 case 142
.text:00000000004076C0                                         ; jumptable 0000000000407035 case 142
.text:00000000004076C0                                         ; jumptable 00000000004071B5 case 142
.text:00000000004076C0                                         ; jumptable 000000000040741C case 142
.text:00000000004076C8                 movdqu  xmmword ptr [rdi-8Eh], xmm0
.text:00000000004076D0
.text:00000000004076D0 loc_4076D0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004076D0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004076D0                 lddqu   xmm0, xmmword ptr [rsi-7Eh] ; jumptable 0000000000405A1C case 126
.text:00000000004076D0                                         ; jumptable 0000000000405B78 case 126
.text:00000000004076D0                                         ; jumptable 0000000000405CB5 case 126
.text:00000000004076D0                                         ; jumptable 0000000000405E35 case 126
.text:00000000004076D0                                         ; jumptable 0000000000405FB5 case 126
.text:00000000004076D0                                         ; jumptable 0000000000406135 case 126
.text:00000000004076D0                                         ; jumptable 00000000004062B5 case 126
.text:00000000004076D0                                         ; jumptable 0000000000406435 case 126
.text:00000000004076D0                                         ; jumptable 00000000004065B5 case 126
.text:00000000004076D0                                         ; jumptable 0000000000406735 case 126
.text:00000000004076D0                                         ; jumptable 00000000004068B5 case 126
.text:00000000004076D0                                         ; jumptable 0000000000406A35 case 126
.text:00000000004076D0                                         ; jumptable 0000000000406BB5 case 126
.text:00000000004076D0                                         ; jumptable 0000000000406D36 case 126
.text:00000000004076D0                                         ; jumptable 0000000000406EB5 case 126
.text:00000000004076D0                                         ; jumptable 0000000000407035 case 126
.text:00000000004076D0                                         ; jumptable 00000000004071B5 case 126
.text:00000000004076D0                                         ; jumptable 000000000040741C case 126
.text:00000000004076D5                 movdqu  xmmword ptr [rdi-7Eh], xmm0
.text:00000000004076DA
.text:00000000004076DA loc_4076DA:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004076DA                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004076DA                 lddqu   xmm0, xmmword ptr [rsi-6Eh] ; jumptable 0000000000405A1C case 110
.text:00000000004076DA                                         ; jumptable 0000000000405B78 case 110
.text:00000000004076DA                                         ; jumptable 0000000000405CB5 case 110
.text:00000000004076DA                                         ; jumptable 0000000000405E35 case 110
.text:00000000004076DA                                         ; jumptable 0000000000405FB5 case 110
.text:00000000004076DA                                         ; jumptable 0000000000406135 case 110
.text:00000000004076DA                                         ; jumptable 00000000004062B5 case 110
.text:00000000004076DA                                         ; jumptable 0000000000406435 case 110
.text:00000000004076DA                                         ; jumptable 00000000004065B5 case 110
.text:00000000004076DA                                         ; jumptable 0000000000406735 case 110
.text:00000000004076DA                                         ; jumptable 00000000004068B5 case 110
.text:00000000004076DA                                         ; jumptable 0000000000406A35 case 110
.text:00000000004076DA                                         ; jumptable 0000000000406BB5 case 110
.text:00000000004076DA                                         ; jumptable 0000000000406D36 case 110
.text:00000000004076DA                                         ; jumptable 0000000000406EB5 case 110
.text:00000000004076DA                                         ; jumptable 0000000000407035 case 110
.text:00000000004076DA                                         ; jumptable 00000000004071B5 case 110
.text:00000000004076DA                                         ; jumptable 000000000040741C case 110
.text:00000000004076DF                 movdqu  xmmword ptr [rdi-6Eh], xmm0
.text:00000000004076E4
.text:00000000004076E4 loc_4076E4:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004076E4                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004076E4                 lddqu   xmm0, xmmword ptr [rsi-5Eh] ; jumptable 0000000000405A1C case 94
.text:00000000004076E4                                         ; jumptable 0000000000405B78 case 94
.text:00000000004076E4                                         ; jumptable 0000000000405CB5 case 94
.text:00000000004076E4                                         ; jumptable 0000000000405E35 case 94
.text:00000000004076E4                                         ; jumptable 0000000000405FB5 case 94
.text:00000000004076E4                                         ; jumptable 0000000000406135 case 94
.text:00000000004076E4                                         ; jumptable 00000000004062B5 case 94
.text:00000000004076E4                                         ; jumptable 0000000000406435 case 94
.text:00000000004076E4                                         ; jumptable 00000000004065B5 case 94
.text:00000000004076E4                                         ; jumptable 0000000000406735 case 94
.text:00000000004076E4                                         ; jumptable 00000000004068B5 case 94
.text:00000000004076E4                                         ; jumptable 0000000000406A35 case 94
.text:00000000004076E4                                         ; jumptable 0000000000406BB5 case 94
.text:00000000004076E4                                         ; jumptable 0000000000406D36 case 94
.text:00000000004076E4                                         ; jumptable 0000000000406EB5 case 94
.text:00000000004076E4                                         ; jumptable 0000000000407035 case 94
.text:00000000004076E4                                         ; jumptable 00000000004071B5 case 94
.text:00000000004076E4                                         ; jumptable 000000000040741C case 94
.text:00000000004076E9                 movdqu  xmmword ptr [rdi-5Eh], xmm0
.text:00000000004076EE
.text:00000000004076EE loc_4076EE:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004076EE                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004076EE                 lddqu   xmm0, xmmword ptr [rsi-4Eh] ; jumptable 0000000000405A1C case 78
.text:00000000004076EE                                         ; jumptable 0000000000405B78 case 78
.text:00000000004076EE                                         ; jumptable 0000000000405CB5 case 78
.text:00000000004076EE                                         ; jumptable 0000000000405E35 case 78
.text:00000000004076EE                                         ; jumptable 0000000000405FB5 case 78
.text:00000000004076EE                                         ; jumptable 0000000000406135 case 78
.text:00000000004076EE                                         ; jumptable 00000000004062B5 case 78
.text:00000000004076EE                                         ; jumptable 0000000000406435 case 78
.text:00000000004076EE                                         ; jumptable 00000000004065B5 case 78
.text:00000000004076EE                                         ; jumptable 0000000000406735 case 78
.text:00000000004076EE                                         ; jumptable 00000000004068B5 case 78
.text:00000000004076EE                                         ; jumptable 0000000000406A35 case 78
.text:00000000004076EE                                         ; jumptable 0000000000406BB5 case 78
.text:00000000004076EE                                         ; jumptable 0000000000406D36 case 78
.text:00000000004076EE                                         ; jumptable 0000000000406EB5 case 78
.text:00000000004076EE                                         ; jumptable 0000000000407035 case 78
.text:00000000004076EE                                         ; jumptable 00000000004071B5 case 78
.text:00000000004076EE                                         ; jumptable 000000000040741C case 78
.text:00000000004076F3                 movdqu  xmmword ptr [rdi-4Eh], xmm0
.text:00000000004076F8
.text:00000000004076F8 loc_4076F8:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004076F8                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004076F8                 lddqu   xmm0, xmmword ptr [rsi-3Eh] ; jumptable 0000000000405A1C case 62
.text:00000000004076F8                                         ; jumptable 0000000000405B78 case 62
.text:00000000004076F8                                         ; jumptable 0000000000405CB5 case 62
.text:00000000004076F8                                         ; jumptable 0000000000405E35 case 62
.text:00000000004076F8                                         ; jumptable 0000000000405FB5 case 62
.text:00000000004076F8                                         ; jumptable 0000000000406135 case 62
.text:00000000004076F8                                         ; jumptable 00000000004062B5 case 62
.text:00000000004076F8                                         ; jumptable 0000000000406435 case 62
.text:00000000004076F8                                         ; jumptable 00000000004065B5 case 62
.text:00000000004076F8                                         ; jumptable 0000000000406735 case 62
.text:00000000004076F8                                         ; jumptable 00000000004068B5 case 62
.text:00000000004076F8                                         ; jumptable 0000000000406A35 case 62
.text:00000000004076F8                                         ; jumptable 0000000000406BB5 case 62
.text:00000000004076F8                                         ; jumptable 0000000000406D36 case 62
.text:00000000004076F8                                         ; jumptable 0000000000406EB5 case 62
.text:00000000004076F8                                         ; jumptable 0000000000407035 case 62
.text:00000000004076F8                                         ; jumptable 00000000004071B5 case 62
.text:00000000004076F8                                         ; jumptable 000000000040741C case 62
.text:00000000004076FD                 movdqu  xmmword ptr [rdi-3Eh], xmm0
.text:0000000000407702
.text:0000000000407702 loc_407702:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407702                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407702                 lddqu   xmm0, xmmword ptr [rsi-2Eh] ; jumptable 0000000000405A1C case 46
.text:0000000000407702                                         ; jumptable 0000000000405B78 case 46
.text:0000000000407702                                         ; jumptable 0000000000405CB5 case 46
.text:0000000000407702                                         ; jumptable 0000000000405E35 case 46
.text:0000000000407702                                         ; jumptable 0000000000405FB5 case 46
.text:0000000000407702                                         ; jumptable 0000000000406135 case 46
.text:0000000000407702                                         ; jumptable 00000000004062B5 case 46
.text:0000000000407702                                         ; jumptable 0000000000406435 case 46
.text:0000000000407702                                         ; jumptable 00000000004065B5 case 46
.text:0000000000407702                                         ; jumptable 0000000000406735 case 46
.text:0000000000407702                                         ; jumptable 00000000004068B5 case 46
.text:0000000000407702                                         ; jumptable 0000000000406A35 case 46
.text:0000000000407702                                         ; jumptable 0000000000406BB5 case 46
.text:0000000000407702                                         ; jumptable 0000000000406D36 case 46
.text:0000000000407702                                         ; jumptable 0000000000406EB5 case 46
.text:0000000000407702                                         ; jumptable 0000000000407035 case 46
.text:0000000000407702                                         ; jumptable 00000000004071B5 case 46
.text:0000000000407702                                         ; jumptable 000000000040741C case 46
.text:0000000000407707                 movdqu  xmmword ptr [rdi-2Eh], xmm0
.text:000000000040770C
.text:000000000040770C loc_40770C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040770C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040770C                 lddqu   xmm0, xmmword ptr [rsi-1Eh] ; jumptable 0000000000405A1C case 30
.text:000000000040770C                                         ; jumptable 0000000000405B78 case 30
.text:000000000040770C                                         ; jumptable 0000000000405CB5 case 30
.text:000000000040770C                                         ; jumptable 0000000000405E35 case 30
.text:000000000040770C                                         ; jumptable 0000000000405FB5 case 30
.text:000000000040770C                                         ; jumptable 0000000000406135 case 30
.text:000000000040770C                                         ; jumptable 00000000004062B5 case 30
.text:000000000040770C                                         ; jumptable 0000000000406435 case 30
.text:000000000040770C                                         ; jumptable 00000000004065B5 case 30
.text:000000000040770C                                         ; jumptable 0000000000406735 case 30
.text:000000000040770C                                         ; jumptable 00000000004068B5 case 30
.text:000000000040770C                                         ; jumptable 0000000000406A35 case 30
.text:000000000040770C                                         ; jumptable 0000000000406BB5 case 30
.text:000000000040770C                                         ; jumptable 0000000000406D36 case 30
.text:000000000040770C                                         ; jumptable 0000000000406EB5 case 30
.text:000000000040770C                                         ; jumptable 0000000000407035 case 30
.text:000000000040770C                                         ; jumptable 00000000004071B5 case 30
.text:000000000040770C                                         ; jumptable 000000000040741C case 30
.text:0000000000407711                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407716                 movdqu  xmmword ptr [rdi-1Eh], xmm0
.text:000000000040771B                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407720                 retn
.text:0000000000407720 ; ---------------------------------------------------------------------------
.text:0000000000407721                 align 10h
.text:0000000000407730
.text:0000000000407730 loc_407730:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407730                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407730                 mov     rdx, [rsi-0Eh]  ; jumptable 0000000000405A1C case 14
.text:0000000000407730                                         ; jumptable 0000000000405B78 case 14
.text:0000000000407730                                         ; jumptable 0000000000405CB5 case 14
.text:0000000000407730                                         ; jumptable 0000000000405E35 case 14
.text:0000000000407730                                         ; jumptable 0000000000405FB5 case 14
.text:0000000000407730                                         ; jumptable 0000000000406135 case 14
.text:0000000000407730                                         ; jumptable 00000000004062B5 case 14
.text:0000000000407730                                         ; jumptable 0000000000406435 case 14
.text:0000000000407730                                         ; jumptable 00000000004065B5 case 14
.text:0000000000407730                                         ; jumptable 0000000000406735 case 14
.text:0000000000407730                                         ; jumptable 00000000004068B5 case 14
.text:0000000000407730                                         ; jumptable 0000000000406A35 case 14
.text:0000000000407730                                         ; jumptable 0000000000406BB5 case 14
.text:0000000000407730                                         ; jumptable 0000000000406D36 case 14
.text:0000000000407730                                         ; jumptable 0000000000406EB5 case 14
.text:0000000000407730                                         ; jumptable 0000000000407035 case 14
.text:0000000000407730                                         ; jumptable 00000000004071B5 case 14
.text:0000000000407730                                         ; jumptable 000000000040741C case 14
.text:0000000000407734                 mov     rcx, [rsi-8]
.text:0000000000407738                 mov     [rdi-0Eh], rdx
.text:000000000040773C                 mov     [rdi-8], rcx
.text:0000000000407740                 retn
.text:0000000000407740 ; ---------------------------------------------------------------------------
.text:0000000000407741                 align 10h
.text:0000000000407750
.text:0000000000407750 loc_407750:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407750                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407750                 lddqu   xmm0, xmmword ptr [rsi-8Dh] ; jumptable 0000000000405A1C case 141
.text:0000000000407750                                         ; jumptable 0000000000405B78 case 141
.text:0000000000407750                                         ; jumptable 0000000000405CB5 case 141
.text:0000000000407750                                         ; jumptable 0000000000405E35 case 141
.text:0000000000407750                                         ; jumptable 0000000000405FB5 case 141
.text:0000000000407750                                         ; jumptable 0000000000406135 case 141
.text:0000000000407750                                         ; jumptable 00000000004062B5 case 141
.text:0000000000407750                                         ; jumptable 0000000000406435 case 141
.text:0000000000407750                                         ; jumptable 00000000004065B5 case 141
.text:0000000000407750                                         ; jumptable 0000000000406735 case 141
.text:0000000000407750                                         ; jumptable 00000000004068B5 case 141
.text:0000000000407750                                         ; jumptable 0000000000406A35 case 141
.text:0000000000407750                                         ; jumptable 0000000000406BB5 case 141
.text:0000000000407750                                         ; jumptable 0000000000406D36 case 141
.text:0000000000407750                                         ; jumptable 0000000000406EB5 case 141
.text:0000000000407750                                         ; jumptable 0000000000407035 case 141
.text:0000000000407750                                         ; jumptable 00000000004071B5 case 141
.text:0000000000407750                                         ; jumptable 000000000040741C case 141
.text:0000000000407758                 movdqu  xmmword ptr [rdi-8Dh], xmm0
.text:0000000000407760
.text:0000000000407760 loc_407760:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407760                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407760                 lddqu   xmm0, xmmword ptr [rsi-7Dh] ; jumptable 0000000000405A1C case 125
.text:0000000000407760                                         ; jumptable 0000000000405B78 case 125
.text:0000000000407760                                         ; jumptable 0000000000405CB5 case 125
.text:0000000000407760                                         ; jumptable 0000000000405E35 case 125
.text:0000000000407760                                         ; jumptable 0000000000405FB5 case 125
.text:0000000000407760                                         ; jumptable 0000000000406135 case 125
.text:0000000000407760                                         ; jumptable 00000000004062B5 case 125
.text:0000000000407760                                         ; jumptable 0000000000406435 case 125
.text:0000000000407760                                         ; jumptable 00000000004065B5 case 125
.text:0000000000407760                                         ; jumptable 0000000000406735 case 125
.text:0000000000407760                                         ; jumptable 00000000004068B5 case 125
.text:0000000000407760                                         ; jumptable 0000000000406A35 case 125
.text:0000000000407760                                         ; jumptable 0000000000406BB5 case 125
.text:0000000000407760                                         ; jumptable 0000000000406D36 case 125
.text:0000000000407760                                         ; jumptable 0000000000406EB5 case 125
.text:0000000000407760                                         ; jumptable 0000000000407035 case 125
.text:0000000000407760                                         ; jumptable 00000000004071B5 case 125
.text:0000000000407760                                         ; jumptable 000000000040741C case 125
.text:0000000000407765                 movdqu  xmmword ptr [rdi-7Dh], xmm0
.text:000000000040776A
.text:000000000040776A loc_40776A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040776A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040776A                 lddqu   xmm0, xmmword ptr [rsi-6Dh] ; jumptable 0000000000405A1C case 109
.text:000000000040776A                                         ; jumptable 0000000000405B78 case 109
.text:000000000040776A                                         ; jumptable 0000000000405CB5 case 109
.text:000000000040776A                                         ; jumptable 0000000000405E35 case 109
.text:000000000040776A                                         ; jumptable 0000000000405FB5 case 109
.text:000000000040776A                                         ; jumptable 0000000000406135 case 109
.text:000000000040776A                                         ; jumptable 00000000004062B5 case 109
.text:000000000040776A                                         ; jumptable 0000000000406435 case 109
.text:000000000040776A                                         ; jumptable 00000000004065B5 case 109
.text:000000000040776A                                         ; jumptable 0000000000406735 case 109
.text:000000000040776A                                         ; jumptable 00000000004068B5 case 109
.text:000000000040776A                                         ; jumptable 0000000000406A35 case 109
.text:000000000040776A                                         ; jumptable 0000000000406BB5 case 109
.text:000000000040776A                                         ; jumptable 0000000000406D36 case 109
.text:000000000040776A                                         ; jumptable 0000000000406EB5 case 109
.text:000000000040776A                                         ; jumptable 0000000000407035 case 109
.text:000000000040776A                                         ; jumptable 00000000004071B5 case 109
.text:000000000040776A                                         ; jumptable 000000000040741C case 109
.text:000000000040776F                 movdqu  xmmword ptr [rdi-6Dh], xmm0
.text:0000000000407774
.text:0000000000407774 loc_407774:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407774                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407774                 lddqu   xmm0, xmmword ptr [rsi-5Dh] ; jumptable 0000000000405A1C case 93
.text:0000000000407774                                         ; jumptable 0000000000405B78 case 93
.text:0000000000407774                                         ; jumptable 0000000000405CB5 case 93
.text:0000000000407774                                         ; jumptable 0000000000405E35 case 93
.text:0000000000407774                                         ; jumptable 0000000000405FB5 case 93
.text:0000000000407774                                         ; jumptable 0000000000406135 case 93
.text:0000000000407774                                         ; jumptable 00000000004062B5 case 93
.text:0000000000407774                                         ; jumptable 0000000000406435 case 93
.text:0000000000407774                                         ; jumptable 00000000004065B5 case 93
.text:0000000000407774                                         ; jumptable 0000000000406735 case 93
.text:0000000000407774                                         ; jumptable 00000000004068B5 case 93
.text:0000000000407774                                         ; jumptable 0000000000406A35 case 93
.text:0000000000407774                                         ; jumptable 0000000000406BB5 case 93
.text:0000000000407774                                         ; jumptable 0000000000406D36 case 93
.text:0000000000407774                                         ; jumptable 0000000000406EB5 case 93
.text:0000000000407774                                         ; jumptable 0000000000407035 case 93
.text:0000000000407774                                         ; jumptable 00000000004071B5 case 93
.text:0000000000407774                                         ; jumptable 000000000040741C case 93
.text:0000000000407779                 movdqu  xmmword ptr [rdi-5Dh], xmm0
.text:000000000040777E
.text:000000000040777E loc_40777E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040777E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040777E                 lddqu   xmm0, xmmword ptr [rsi-4Dh] ; jumptable 0000000000405A1C case 77
.text:000000000040777E                                         ; jumptable 0000000000405B78 case 77
.text:000000000040777E                                         ; jumptable 0000000000405CB5 case 77
.text:000000000040777E                                         ; jumptable 0000000000405E35 case 77
.text:000000000040777E                                         ; jumptable 0000000000405FB5 case 77
.text:000000000040777E                                         ; jumptable 0000000000406135 case 77
.text:000000000040777E                                         ; jumptable 00000000004062B5 case 77
.text:000000000040777E                                         ; jumptable 0000000000406435 case 77
.text:000000000040777E                                         ; jumptable 00000000004065B5 case 77
.text:000000000040777E                                         ; jumptable 0000000000406735 case 77
.text:000000000040777E                                         ; jumptable 00000000004068B5 case 77
.text:000000000040777E                                         ; jumptable 0000000000406A35 case 77
.text:000000000040777E                                         ; jumptable 0000000000406BB5 case 77
.text:000000000040777E                                         ; jumptable 0000000000406D36 case 77
.text:000000000040777E                                         ; jumptable 0000000000406EB5 case 77
.text:000000000040777E                                         ; jumptable 0000000000407035 case 77
.text:000000000040777E                                         ; jumptable 00000000004071B5 case 77
.text:000000000040777E                                         ; jumptable 000000000040741C case 77
.text:0000000000407783                 movdqu  xmmword ptr [rdi-4Dh], xmm0
.text:0000000000407788
.text:0000000000407788 loc_407788:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407788                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407788                 lddqu   xmm0, xmmword ptr [rsi-3Dh] ; jumptable 0000000000405A1C case 61
.text:0000000000407788                                         ; jumptable 0000000000405B78 case 61
.text:0000000000407788                                         ; jumptable 0000000000405CB5 case 61
.text:0000000000407788                                         ; jumptable 0000000000405E35 case 61
.text:0000000000407788                                         ; jumptable 0000000000405FB5 case 61
.text:0000000000407788                                         ; jumptable 0000000000406135 case 61
.text:0000000000407788                                         ; jumptable 00000000004062B5 case 61
.text:0000000000407788                                         ; jumptable 0000000000406435 case 61
.text:0000000000407788                                         ; jumptable 00000000004065B5 case 61
.text:0000000000407788                                         ; jumptable 0000000000406735 case 61
.text:0000000000407788                                         ; jumptable 00000000004068B5 case 61
.text:0000000000407788                                         ; jumptable 0000000000406A35 case 61
.text:0000000000407788                                         ; jumptable 0000000000406BB5 case 61
.text:0000000000407788                                         ; jumptable 0000000000406D36 case 61
.text:0000000000407788                                         ; jumptable 0000000000406EB5 case 61
.text:0000000000407788                                         ; jumptable 0000000000407035 case 61
.text:0000000000407788                                         ; jumptable 00000000004071B5 case 61
.text:0000000000407788                                         ; jumptable 000000000040741C case 61
.text:000000000040778D                 movdqu  xmmword ptr [rdi-3Dh], xmm0
.text:0000000000407792
.text:0000000000407792 loc_407792:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407792                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407792                 lddqu   xmm0, xmmword ptr [rsi-2Dh] ; jumptable 0000000000405A1C case 45
.text:0000000000407792                                         ; jumptable 0000000000405B78 case 45
.text:0000000000407792                                         ; jumptable 0000000000405CB5 case 45
.text:0000000000407792                                         ; jumptable 0000000000405E35 case 45
.text:0000000000407792                                         ; jumptable 0000000000405FB5 case 45
.text:0000000000407792                                         ; jumptable 0000000000406135 case 45
.text:0000000000407792                                         ; jumptable 00000000004062B5 case 45
.text:0000000000407792                                         ; jumptable 0000000000406435 case 45
.text:0000000000407792                                         ; jumptable 00000000004065B5 case 45
.text:0000000000407792                                         ; jumptable 0000000000406735 case 45
.text:0000000000407792                                         ; jumptable 00000000004068B5 case 45
.text:0000000000407792                                         ; jumptable 0000000000406A35 case 45
.text:0000000000407792                                         ; jumptable 0000000000406BB5 case 45
.text:0000000000407792                                         ; jumptable 0000000000406D36 case 45
.text:0000000000407792                                         ; jumptable 0000000000406EB5 case 45
.text:0000000000407792                                         ; jumptable 0000000000407035 case 45
.text:0000000000407792                                         ; jumptable 00000000004071B5 case 45
.text:0000000000407792                                         ; jumptable 000000000040741C case 45
.text:0000000000407797                 movdqu  xmmword ptr [rdi-2Dh], xmm0
.text:000000000040779C
.text:000000000040779C loc_40779C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040779C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040779C                 lddqu   xmm0, xmmword ptr [rsi-1Dh] ; jumptable 0000000000405A1C case 29
.text:000000000040779C                                         ; jumptable 0000000000405B78 case 29
.text:000000000040779C                                         ; jumptable 0000000000405CB5 case 29
.text:000000000040779C                                         ; jumptable 0000000000405E35 case 29
.text:000000000040779C                                         ; jumptable 0000000000405FB5 case 29
.text:000000000040779C                                         ; jumptable 0000000000406135 case 29
.text:000000000040779C                                         ; jumptable 00000000004062B5 case 29
.text:000000000040779C                                         ; jumptable 0000000000406435 case 29
.text:000000000040779C                                         ; jumptable 00000000004065B5 case 29
.text:000000000040779C                                         ; jumptable 0000000000406735 case 29
.text:000000000040779C                                         ; jumptable 00000000004068B5 case 29
.text:000000000040779C                                         ; jumptable 0000000000406A35 case 29
.text:000000000040779C                                         ; jumptable 0000000000406BB5 case 29
.text:000000000040779C                                         ; jumptable 0000000000406D36 case 29
.text:000000000040779C                                         ; jumptable 0000000000406EB5 case 29
.text:000000000040779C                                         ; jumptable 0000000000407035 case 29
.text:000000000040779C                                         ; jumptable 00000000004071B5 case 29
.text:000000000040779C                                         ; jumptable 000000000040741C case 29
.text:00000000004077A1                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:00000000004077A6                 movdqu  xmmword ptr [rdi-1Dh], xmm0
.text:00000000004077AB                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:00000000004077B0                 retn
.text:00000000004077B0 ; ---------------------------------------------------------------------------
.text:00000000004077B1                 align 20h
.text:00000000004077C0
.text:00000000004077C0 loc_4077C0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004077C0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004077C0                 mov     rdx, [rsi-0Dh]  ; jumptable 0000000000405A1C case 13
.text:00000000004077C0                                         ; jumptable 0000000000405B78 case 13
.text:00000000004077C0                                         ; jumptable 0000000000405CB5 case 13
.text:00000000004077C0                                         ; jumptable 0000000000405E35 case 13
.text:00000000004077C0                                         ; jumptable 0000000000405FB5 case 13
.text:00000000004077C0                                         ; jumptable 0000000000406135 case 13
.text:00000000004077C0                                         ; jumptable 00000000004062B5 case 13
.text:00000000004077C0                                         ; jumptable 0000000000406435 case 13
.text:00000000004077C0                                         ; jumptable 00000000004065B5 case 13
.text:00000000004077C0                                         ; jumptable 0000000000406735 case 13
.text:00000000004077C0                                         ; jumptable 00000000004068B5 case 13
.text:00000000004077C0                                         ; jumptable 0000000000406A35 case 13
.text:00000000004077C0                                         ; jumptable 0000000000406BB5 case 13
.text:00000000004077C0                                         ; jumptable 0000000000406D36 case 13
.text:00000000004077C0                                         ; jumptable 0000000000406EB5 case 13
.text:00000000004077C0                                         ; jumptable 0000000000407035 case 13
.text:00000000004077C0                                         ; jumptable 00000000004071B5 case 13
.text:00000000004077C0                                         ; jumptable 000000000040741C case 13
.text:00000000004077C4                 mov     rcx, [rsi-8]
.text:00000000004077C8                 mov     [rdi-0Dh], rdx
.text:00000000004077CC                 mov     [rdi-8], rcx
.text:00000000004077D0                 retn
.text:00000000004077D0 ; ---------------------------------------------------------------------------
.text:00000000004077D1                 align 20h
.text:00000000004077E0
.text:00000000004077E0 loc_4077E0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004077E0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004077E0                 lddqu   xmm0, xmmword ptr [rsi-8Ch] ; jumptable 0000000000405A1C case 140
.text:00000000004077E0                                         ; jumptable 0000000000405B78 case 140
.text:00000000004077E0                                         ; jumptable 0000000000405CB5 case 140
.text:00000000004077E0                                         ; jumptable 0000000000405E35 case 140
.text:00000000004077E0                                         ; jumptable 0000000000405FB5 case 140
.text:00000000004077E0                                         ; jumptable 0000000000406135 case 140
.text:00000000004077E0                                         ; jumptable 00000000004062B5 case 140
.text:00000000004077E0                                         ; jumptable 0000000000406435 case 140
.text:00000000004077E0                                         ; jumptable 00000000004065B5 case 140
.text:00000000004077E0                                         ; jumptable 0000000000406735 case 140
.text:00000000004077E0                                         ; jumptable 00000000004068B5 case 140
.text:00000000004077E0                                         ; jumptable 0000000000406A35 case 140
.text:00000000004077E0                                         ; jumptable 0000000000406BB5 case 140
.text:00000000004077E0                                         ; jumptable 0000000000406D36 case 140
.text:00000000004077E0                                         ; jumptable 0000000000406EB5 case 140
.text:00000000004077E0                                         ; jumptable 0000000000407035 case 140
.text:00000000004077E0                                         ; jumptable 00000000004071B5 case 140
.text:00000000004077E0                                         ; jumptable 000000000040741C case 140
.text:00000000004077E8                 movdqu  xmmword ptr [rdi-8Ch], xmm0
.text:00000000004077F0
.text:00000000004077F0 loc_4077F0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004077F0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004077F0                 lddqu   xmm0, xmmword ptr [rsi-7Ch] ; jumptable 0000000000405A1C case 124
.text:00000000004077F0                                         ; jumptable 0000000000405B78 case 124
.text:00000000004077F0                                         ; jumptable 0000000000405CB5 case 124
.text:00000000004077F0                                         ; jumptable 0000000000405E35 case 124
.text:00000000004077F0                                         ; jumptable 0000000000405FB5 case 124
.text:00000000004077F0                                         ; jumptable 0000000000406135 case 124
.text:00000000004077F0                                         ; jumptable 00000000004062B5 case 124
.text:00000000004077F0                                         ; jumptable 0000000000406435 case 124
.text:00000000004077F0                                         ; jumptable 00000000004065B5 case 124
.text:00000000004077F0                                         ; jumptable 0000000000406735 case 124
.text:00000000004077F0                                         ; jumptable 00000000004068B5 case 124
.text:00000000004077F0                                         ; jumptable 0000000000406A35 case 124
.text:00000000004077F0                                         ; jumptable 0000000000406BB5 case 124
.text:00000000004077F0                                         ; jumptable 0000000000406D36 case 124
.text:00000000004077F0                                         ; jumptable 0000000000406EB5 case 124
.text:00000000004077F0                                         ; jumptable 0000000000407035 case 124
.text:00000000004077F0                                         ; jumptable 00000000004071B5 case 124
.text:00000000004077F0                                         ; jumptable 000000000040741C case 124
.text:00000000004077F5                 movdqu  xmmword ptr [rdi-7Ch], xmm0
.text:00000000004077FA
.text:00000000004077FA loc_4077FA:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004077FA                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004077FA                 lddqu   xmm0, xmmword ptr [rsi-6Ch] ; jumptable 0000000000405A1C case 108
.text:00000000004077FA                                         ; jumptable 0000000000405B78 case 108
.text:00000000004077FA                                         ; jumptable 0000000000405CB5 case 108
.text:00000000004077FA                                         ; jumptable 0000000000405E35 case 108
.text:00000000004077FA                                         ; jumptable 0000000000405FB5 case 108
.text:00000000004077FA                                         ; jumptable 0000000000406135 case 108
.text:00000000004077FA                                         ; jumptable 00000000004062B5 case 108
.text:00000000004077FA                                         ; jumptable 0000000000406435 case 108
.text:00000000004077FA                                         ; jumptable 00000000004065B5 case 108
.text:00000000004077FA                                         ; jumptable 0000000000406735 case 108
.text:00000000004077FA                                         ; jumptable 00000000004068B5 case 108
.text:00000000004077FA                                         ; jumptable 0000000000406A35 case 108
.text:00000000004077FA                                         ; jumptable 0000000000406BB5 case 108
.text:00000000004077FA                                         ; jumptable 0000000000406D36 case 108
.text:00000000004077FA                                         ; jumptable 0000000000406EB5 case 108
.text:00000000004077FA                                         ; jumptable 0000000000407035 case 108
.text:00000000004077FA                                         ; jumptable 00000000004071B5 case 108
.text:00000000004077FA                                         ; jumptable 000000000040741C case 108
.text:00000000004077FF                 movdqu  xmmword ptr [rdi-6Ch], xmm0
.text:0000000000407804
.text:0000000000407804 loc_407804:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407804                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407804                 lddqu   xmm0, xmmword ptr [rsi-5Ch] ; jumptable 0000000000405A1C case 92
.text:0000000000407804                                         ; jumptable 0000000000405B78 case 92
.text:0000000000407804                                         ; jumptable 0000000000405CB5 case 92
.text:0000000000407804                                         ; jumptable 0000000000405E35 case 92
.text:0000000000407804                                         ; jumptable 0000000000405FB5 case 92
.text:0000000000407804                                         ; jumptable 0000000000406135 case 92
.text:0000000000407804                                         ; jumptable 00000000004062B5 case 92
.text:0000000000407804                                         ; jumptable 0000000000406435 case 92
.text:0000000000407804                                         ; jumptable 00000000004065B5 case 92
.text:0000000000407804                                         ; jumptable 0000000000406735 case 92
.text:0000000000407804                                         ; jumptable 00000000004068B5 case 92
.text:0000000000407804                                         ; jumptable 0000000000406A35 case 92
.text:0000000000407804                                         ; jumptable 0000000000406BB5 case 92
.text:0000000000407804                                         ; jumptable 0000000000406D36 case 92
.text:0000000000407804                                         ; jumptable 0000000000406EB5 case 92
.text:0000000000407804                                         ; jumptable 0000000000407035 case 92
.text:0000000000407804                                         ; jumptable 00000000004071B5 case 92
.text:0000000000407804                                         ; jumptable 000000000040741C case 92
.text:0000000000407809                 movdqu  xmmword ptr [rdi-5Ch], xmm0
.text:000000000040780E
.text:000000000040780E loc_40780E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040780E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040780E                 lddqu   xmm0, xmmword ptr [rsi-4Ch] ; jumptable 0000000000405A1C case 76
.text:000000000040780E                                         ; jumptable 0000000000405B78 case 76
.text:000000000040780E                                         ; jumptable 0000000000405CB5 case 76
.text:000000000040780E                                         ; jumptable 0000000000405E35 case 76
.text:000000000040780E                                         ; jumptable 0000000000405FB5 case 76
.text:000000000040780E                                         ; jumptable 0000000000406135 case 76
.text:000000000040780E                                         ; jumptable 00000000004062B5 case 76
.text:000000000040780E                                         ; jumptable 0000000000406435 case 76
.text:000000000040780E                                         ; jumptable 00000000004065B5 case 76
.text:000000000040780E                                         ; jumptable 0000000000406735 case 76
.text:000000000040780E                                         ; jumptable 00000000004068B5 case 76
.text:000000000040780E                                         ; jumptable 0000000000406A35 case 76
.text:000000000040780E                                         ; jumptable 0000000000406BB5 case 76
.text:000000000040780E                                         ; jumptable 0000000000406D36 case 76
.text:000000000040780E                                         ; jumptable 0000000000406EB5 case 76
.text:000000000040780E                                         ; jumptable 0000000000407035 case 76
.text:000000000040780E                                         ; jumptable 00000000004071B5 case 76
.text:000000000040780E                                         ; jumptable 000000000040741C case 76
.text:0000000000407813                 movdqu  xmmword ptr [rdi-4Ch], xmm0
.text:0000000000407818
.text:0000000000407818 loc_407818:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407818                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407818                 lddqu   xmm0, xmmword ptr [rsi-3Ch] ; jumptable 0000000000405A1C case 60
.text:0000000000407818                                         ; jumptable 0000000000405B78 case 60
.text:0000000000407818                                         ; jumptable 0000000000405CB5 case 60
.text:0000000000407818                                         ; jumptable 0000000000405E35 case 60
.text:0000000000407818                                         ; jumptable 0000000000405FB5 case 60
.text:0000000000407818                                         ; jumptable 0000000000406135 case 60
.text:0000000000407818                                         ; jumptable 00000000004062B5 case 60
.text:0000000000407818                                         ; jumptable 0000000000406435 case 60
.text:0000000000407818                                         ; jumptable 00000000004065B5 case 60
.text:0000000000407818                                         ; jumptable 0000000000406735 case 60
.text:0000000000407818                                         ; jumptable 00000000004068B5 case 60
.text:0000000000407818                                         ; jumptable 0000000000406A35 case 60
.text:0000000000407818                                         ; jumptable 0000000000406BB5 case 60
.text:0000000000407818                                         ; jumptable 0000000000406D36 case 60
.text:0000000000407818                                         ; jumptable 0000000000406EB5 case 60
.text:0000000000407818                                         ; jumptable 0000000000407035 case 60
.text:0000000000407818                                         ; jumptable 00000000004071B5 case 60
.text:0000000000407818                                         ; jumptable 000000000040741C case 60
.text:000000000040781D                 movdqu  xmmword ptr [rdi-3Ch], xmm0
.text:0000000000407822
.text:0000000000407822 loc_407822:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407822                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407822                 lddqu   xmm0, xmmword ptr [rsi-2Ch] ; jumptable 0000000000405A1C case 44
.text:0000000000407822                                         ; jumptable 0000000000405B78 case 44
.text:0000000000407822                                         ; jumptable 0000000000405CB5 case 44
.text:0000000000407822                                         ; jumptable 0000000000405E35 case 44
.text:0000000000407822                                         ; jumptable 0000000000405FB5 case 44
.text:0000000000407822                                         ; jumptable 0000000000406135 case 44
.text:0000000000407822                                         ; jumptable 00000000004062B5 case 44
.text:0000000000407822                                         ; jumptable 0000000000406435 case 44
.text:0000000000407822                                         ; jumptable 00000000004065B5 case 44
.text:0000000000407822                                         ; jumptable 0000000000406735 case 44
.text:0000000000407822                                         ; jumptable 00000000004068B5 case 44
.text:0000000000407822                                         ; jumptable 0000000000406A35 case 44
.text:0000000000407822                                         ; jumptable 0000000000406BB5 case 44
.text:0000000000407822                                         ; jumptable 0000000000406D36 case 44
.text:0000000000407822                                         ; jumptable 0000000000406EB5 case 44
.text:0000000000407822                                         ; jumptable 0000000000407035 case 44
.text:0000000000407822                                         ; jumptable 00000000004071B5 case 44
.text:0000000000407822                                         ; jumptable 000000000040741C case 44
.text:0000000000407827                 movdqu  xmmword ptr [rdi-2Ch], xmm0
.text:000000000040782C
.text:000000000040782C loc_40782C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040782C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040782C                 lddqu   xmm0, xmmword ptr [rsi-1Ch] ; jumptable 0000000000405A1C case 28
.text:000000000040782C                                         ; jumptable 0000000000405B78 case 28
.text:000000000040782C                                         ; jumptable 0000000000405CB5 case 28
.text:000000000040782C                                         ; jumptable 0000000000405E35 case 28
.text:000000000040782C                                         ; jumptable 0000000000405FB5 case 28
.text:000000000040782C                                         ; jumptable 0000000000406135 case 28
.text:000000000040782C                                         ; jumptable 00000000004062B5 case 28
.text:000000000040782C                                         ; jumptable 0000000000406435 case 28
.text:000000000040782C                                         ; jumptable 00000000004065B5 case 28
.text:000000000040782C                                         ; jumptable 0000000000406735 case 28
.text:000000000040782C                                         ; jumptable 00000000004068B5 case 28
.text:000000000040782C                                         ; jumptable 0000000000406A35 case 28
.text:000000000040782C                                         ; jumptable 0000000000406BB5 case 28
.text:000000000040782C                                         ; jumptable 0000000000406D36 case 28
.text:000000000040782C                                         ; jumptable 0000000000406EB5 case 28
.text:000000000040782C                                         ; jumptable 0000000000407035 case 28
.text:000000000040782C                                         ; jumptable 00000000004071B5 case 28
.text:000000000040782C                                         ; jumptable 000000000040741C case 28
.text:0000000000407831                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407836                 movdqu  xmmword ptr [rdi-1Ch], xmm0
.text:000000000040783B                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407840                 retn
.text:0000000000407840 ; ---------------------------------------------------------------------------
.text:0000000000407841                 align 10h
.text:0000000000407850
.text:0000000000407850 loc_407850:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407850                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407850                 mov     rdx, [rsi-0Ch]  ; jumptable 0000000000405A1C case 12
.text:0000000000407850                                         ; jumptable 0000000000405B78 case 12
.text:0000000000407850                                         ; jumptable 0000000000405CB5 case 12
.text:0000000000407850                                         ; jumptable 0000000000405E35 case 12
.text:0000000000407850                                         ; jumptable 0000000000405FB5 case 12
.text:0000000000407850                                         ; jumptable 0000000000406135 case 12
.text:0000000000407850                                         ; jumptable 00000000004062B5 case 12
.text:0000000000407850                                         ; jumptable 0000000000406435 case 12
.text:0000000000407850                                         ; jumptable 00000000004065B5 case 12
.text:0000000000407850                                         ; jumptable 0000000000406735 case 12
.text:0000000000407850                                         ; jumptable 00000000004068B5 case 12
.text:0000000000407850                                         ; jumptable 0000000000406A35 case 12
.text:0000000000407850                                         ; jumptable 0000000000406BB5 case 12
.text:0000000000407850                                         ; jumptable 0000000000406D36 case 12
.text:0000000000407850                                         ; jumptable 0000000000406EB5 case 12
.text:0000000000407850                                         ; jumptable 0000000000407035 case 12
.text:0000000000407850                                         ; jumptable 00000000004071B5 case 12
.text:0000000000407850                                         ; jumptable 000000000040741C case 12
.text:0000000000407854                 mov     ecx, [rsi-4]
.text:0000000000407857                 mov     [rdi-0Ch], rdx
.text:000000000040785B                 mov     [rdi-4], ecx
.text:000000000040785E                 retn
.text:000000000040785E ; ---------------------------------------------------------------------------
.text:000000000040785F                 align 20h
.text:0000000000407860
.text:0000000000407860 loc_407860:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407860                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407860                 lddqu   xmm0, xmmword ptr [rsi-8Bh] ; jumptable 0000000000405A1C case 139
.text:0000000000407860                                         ; jumptable 0000000000405B78 case 139
.text:0000000000407860                                         ; jumptable 0000000000405CB5 case 139
.text:0000000000407860                                         ; jumptable 0000000000405E35 case 139
.text:0000000000407860                                         ; jumptable 0000000000405FB5 case 139
.text:0000000000407860                                         ; jumptable 0000000000406135 case 139
.text:0000000000407860                                         ; jumptable 00000000004062B5 case 139
.text:0000000000407860                                         ; jumptable 0000000000406435 case 139
.text:0000000000407860                                         ; jumptable 00000000004065B5 case 139
.text:0000000000407860                                         ; jumptable 0000000000406735 case 139
.text:0000000000407860                                         ; jumptable 00000000004068B5 case 139
.text:0000000000407860                                         ; jumptable 0000000000406A35 case 139
.text:0000000000407860                                         ; jumptable 0000000000406BB5 case 139
.text:0000000000407860                                         ; jumptable 0000000000406D36 case 139
.text:0000000000407860                                         ; jumptable 0000000000406EB5 case 139
.text:0000000000407860                                         ; jumptable 0000000000407035 case 139
.text:0000000000407860                                         ; jumptable 00000000004071B5 case 139
.text:0000000000407860                                         ; jumptable 000000000040741C case 139
.text:0000000000407868                 movdqu  xmmword ptr [rdi-8Bh], xmm0
.text:0000000000407870
.text:0000000000407870 loc_407870:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407870                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407870                 lddqu   xmm0, xmmword ptr [rsi-7Bh] ; jumptable 0000000000405A1C case 123
.text:0000000000407870                                         ; jumptable 0000000000405B78 case 123
.text:0000000000407870                                         ; jumptable 0000000000405CB5 case 123
.text:0000000000407870                                         ; jumptable 0000000000405E35 case 123
.text:0000000000407870                                         ; jumptable 0000000000405FB5 case 123
.text:0000000000407870                                         ; jumptable 0000000000406135 case 123
.text:0000000000407870                                         ; jumptable 00000000004062B5 case 123
.text:0000000000407870                                         ; jumptable 0000000000406435 case 123
.text:0000000000407870                                         ; jumptable 00000000004065B5 case 123
.text:0000000000407870                                         ; jumptable 0000000000406735 case 123
.text:0000000000407870                                         ; jumptable 00000000004068B5 case 123
.text:0000000000407870                                         ; jumptable 0000000000406A35 case 123
.text:0000000000407870                                         ; jumptable 0000000000406BB5 case 123
.text:0000000000407870                                         ; jumptable 0000000000406D36 case 123
.text:0000000000407870                                         ; jumptable 0000000000406EB5 case 123
.text:0000000000407870                                         ; jumptable 0000000000407035 case 123
.text:0000000000407870                                         ; jumptable 00000000004071B5 case 123
.text:0000000000407870                                         ; jumptable 000000000040741C case 123
.text:0000000000407875                 movdqu  xmmword ptr [rdi-7Bh], xmm0
.text:000000000040787A
.text:000000000040787A loc_40787A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040787A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040787A                 lddqu   xmm0, xmmword ptr [rsi-6Bh] ; jumptable 0000000000405A1C case 107
.text:000000000040787A                                         ; jumptable 0000000000405B78 case 107
.text:000000000040787A                                         ; jumptable 0000000000405CB5 case 107
.text:000000000040787A                                         ; jumptable 0000000000405E35 case 107
.text:000000000040787A                                         ; jumptable 0000000000405FB5 case 107
.text:000000000040787A                                         ; jumptable 0000000000406135 case 107
.text:000000000040787A                                         ; jumptable 00000000004062B5 case 107
.text:000000000040787A                                         ; jumptable 0000000000406435 case 107
.text:000000000040787A                                         ; jumptable 00000000004065B5 case 107
.text:000000000040787A                                         ; jumptable 0000000000406735 case 107
.text:000000000040787A                                         ; jumptable 00000000004068B5 case 107
.text:000000000040787A                                         ; jumptable 0000000000406A35 case 107
.text:000000000040787A                                         ; jumptable 0000000000406BB5 case 107
.text:000000000040787A                                         ; jumptable 0000000000406D36 case 107
.text:000000000040787A                                         ; jumptable 0000000000406EB5 case 107
.text:000000000040787A                                         ; jumptable 0000000000407035 case 107
.text:000000000040787A                                         ; jumptable 00000000004071B5 case 107
.text:000000000040787A                                         ; jumptable 000000000040741C case 107
.text:000000000040787F                 movdqu  xmmword ptr [rdi-6Bh], xmm0
.text:0000000000407884
.text:0000000000407884 loc_407884:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407884                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407884                 lddqu   xmm0, xmmword ptr [rsi-5Bh] ; jumptable 0000000000405A1C case 91
.text:0000000000407884                                         ; jumptable 0000000000405B78 case 91
.text:0000000000407884                                         ; jumptable 0000000000405CB5 case 91
.text:0000000000407884                                         ; jumptable 0000000000405E35 case 91
.text:0000000000407884                                         ; jumptable 0000000000405FB5 case 91
.text:0000000000407884                                         ; jumptable 0000000000406135 case 91
.text:0000000000407884                                         ; jumptable 00000000004062B5 case 91
.text:0000000000407884                                         ; jumptable 0000000000406435 case 91
.text:0000000000407884                                         ; jumptable 00000000004065B5 case 91
.text:0000000000407884                                         ; jumptable 0000000000406735 case 91
.text:0000000000407884                                         ; jumptable 00000000004068B5 case 91
.text:0000000000407884                                         ; jumptable 0000000000406A35 case 91
.text:0000000000407884                                         ; jumptable 0000000000406BB5 case 91
.text:0000000000407884                                         ; jumptable 0000000000406D36 case 91
.text:0000000000407884                                         ; jumptable 0000000000406EB5 case 91
.text:0000000000407884                                         ; jumptable 0000000000407035 case 91
.text:0000000000407884                                         ; jumptable 00000000004071B5 case 91
.text:0000000000407884                                         ; jumptable 000000000040741C case 91
.text:0000000000407889                 movdqu  xmmword ptr [rdi-5Bh], xmm0
.text:000000000040788E
.text:000000000040788E loc_40788E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040788E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040788E                 lddqu   xmm0, xmmword ptr [rsi-4Bh] ; jumptable 0000000000405A1C case 75
.text:000000000040788E                                         ; jumptable 0000000000405B78 case 75
.text:000000000040788E                                         ; jumptable 0000000000405CB5 case 75
.text:000000000040788E                                         ; jumptable 0000000000405E35 case 75
.text:000000000040788E                                         ; jumptable 0000000000405FB5 case 75
.text:000000000040788E                                         ; jumptable 0000000000406135 case 75
.text:000000000040788E                                         ; jumptable 00000000004062B5 case 75
.text:000000000040788E                                         ; jumptable 0000000000406435 case 75
.text:000000000040788E                                         ; jumptable 00000000004065B5 case 75
.text:000000000040788E                                         ; jumptable 0000000000406735 case 75
.text:000000000040788E                                         ; jumptable 00000000004068B5 case 75
.text:000000000040788E                                         ; jumptable 0000000000406A35 case 75
.text:000000000040788E                                         ; jumptable 0000000000406BB5 case 75
.text:000000000040788E                                         ; jumptable 0000000000406D36 case 75
.text:000000000040788E                                         ; jumptable 0000000000406EB5 case 75
.text:000000000040788E                                         ; jumptable 0000000000407035 case 75
.text:000000000040788E                                         ; jumptable 00000000004071B5 case 75
.text:000000000040788E                                         ; jumptable 000000000040741C case 75
.text:0000000000407893                 movdqu  xmmword ptr [rdi-4Bh], xmm0
.text:0000000000407898
.text:0000000000407898 loc_407898:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407898                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407898                 lddqu   xmm0, xmmword ptr [rsi-3Bh] ; jumptable 0000000000405A1C case 59
.text:0000000000407898                                         ; jumptable 0000000000405B78 case 59
.text:0000000000407898                                         ; jumptable 0000000000405CB5 case 59
.text:0000000000407898                                         ; jumptable 0000000000405E35 case 59
.text:0000000000407898                                         ; jumptable 0000000000405FB5 case 59
.text:0000000000407898                                         ; jumptable 0000000000406135 case 59
.text:0000000000407898                                         ; jumptable 00000000004062B5 case 59
.text:0000000000407898                                         ; jumptable 0000000000406435 case 59
.text:0000000000407898                                         ; jumptable 00000000004065B5 case 59
.text:0000000000407898                                         ; jumptable 0000000000406735 case 59
.text:0000000000407898                                         ; jumptable 00000000004068B5 case 59
.text:0000000000407898                                         ; jumptable 0000000000406A35 case 59
.text:0000000000407898                                         ; jumptable 0000000000406BB5 case 59
.text:0000000000407898                                         ; jumptable 0000000000406D36 case 59
.text:0000000000407898                                         ; jumptable 0000000000406EB5 case 59
.text:0000000000407898                                         ; jumptable 0000000000407035 case 59
.text:0000000000407898                                         ; jumptable 00000000004071B5 case 59
.text:0000000000407898                                         ; jumptable 000000000040741C case 59
.text:000000000040789D                 movdqu  xmmword ptr [rdi-3Bh], xmm0
.text:00000000004078A2
.text:00000000004078A2 loc_4078A2:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004078A2                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004078A2                 lddqu   xmm0, xmmword ptr [rsi-2Bh] ; jumptable 0000000000405A1C case 43
.text:00000000004078A2                                         ; jumptable 0000000000405B78 case 43
.text:00000000004078A2                                         ; jumptable 0000000000405CB5 case 43
.text:00000000004078A2                                         ; jumptable 0000000000405E35 case 43
.text:00000000004078A2                                         ; jumptable 0000000000405FB5 case 43
.text:00000000004078A2                                         ; jumptable 0000000000406135 case 43
.text:00000000004078A2                                         ; jumptable 00000000004062B5 case 43
.text:00000000004078A2                                         ; jumptable 0000000000406435 case 43
.text:00000000004078A2                                         ; jumptable 00000000004065B5 case 43
.text:00000000004078A2                                         ; jumptable 0000000000406735 case 43
.text:00000000004078A2                                         ; jumptable 00000000004068B5 case 43
.text:00000000004078A2                                         ; jumptable 0000000000406A35 case 43
.text:00000000004078A2                                         ; jumptable 0000000000406BB5 case 43
.text:00000000004078A2                                         ; jumptable 0000000000406D36 case 43
.text:00000000004078A2                                         ; jumptable 0000000000406EB5 case 43
.text:00000000004078A2                                         ; jumptable 0000000000407035 case 43
.text:00000000004078A2                                         ; jumptable 00000000004071B5 case 43
.text:00000000004078A2                                         ; jumptable 000000000040741C case 43
.text:00000000004078A7                 movdqu  xmmword ptr [rdi-2Bh], xmm0
.text:00000000004078AC
.text:00000000004078AC loc_4078AC:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004078AC                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004078AC                 lddqu   xmm0, xmmword ptr [rsi-1Bh] ; jumptable 0000000000405A1C case 27
.text:00000000004078AC                                         ; jumptable 0000000000405B78 case 27
.text:00000000004078AC                                         ; jumptable 0000000000405CB5 case 27
.text:00000000004078AC                                         ; jumptable 0000000000405E35 case 27
.text:00000000004078AC                                         ; jumptable 0000000000405FB5 case 27
.text:00000000004078AC                                         ; jumptable 0000000000406135 case 27
.text:00000000004078AC                                         ; jumptable 00000000004062B5 case 27
.text:00000000004078AC                                         ; jumptable 0000000000406435 case 27
.text:00000000004078AC                                         ; jumptable 00000000004065B5 case 27
.text:00000000004078AC                                         ; jumptable 0000000000406735 case 27
.text:00000000004078AC                                         ; jumptable 00000000004068B5 case 27
.text:00000000004078AC                                         ; jumptable 0000000000406A35 case 27
.text:00000000004078AC                                         ; jumptable 0000000000406BB5 case 27
.text:00000000004078AC                                         ; jumptable 0000000000406D36 case 27
.text:00000000004078AC                                         ; jumptable 0000000000406EB5 case 27
.text:00000000004078AC                                         ; jumptable 0000000000407035 case 27
.text:00000000004078AC                                         ; jumptable 00000000004071B5 case 27
.text:00000000004078AC                                         ; jumptable 000000000040741C case 27
.text:00000000004078B1                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:00000000004078B6                 movdqu  xmmword ptr [rdi-1Bh], xmm0
.text:00000000004078BB                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:00000000004078C0                 retn
.text:00000000004078C0 ; ---------------------------------------------------------------------------
.text:00000000004078C1                 align 10h
.text:00000000004078D0
.text:00000000004078D0 loc_4078D0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004078D0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004078D0                 mov     rdx, [rsi-0Bh]  ; jumptable 0000000000405A1C case 11
.text:00000000004078D0                                         ; jumptable 0000000000405B78 case 11
.text:00000000004078D0                                         ; jumptable 0000000000405CB5 case 11
.text:00000000004078D0                                         ; jumptable 0000000000405E35 case 11
.text:00000000004078D0                                         ; jumptable 0000000000405FB5 case 11
.text:00000000004078D0                                         ; jumptable 0000000000406135 case 11
.text:00000000004078D0                                         ; jumptable 00000000004062B5 case 11
.text:00000000004078D0                                         ; jumptable 0000000000406435 case 11
.text:00000000004078D0                                         ; jumptable 00000000004065B5 case 11
.text:00000000004078D0                                         ; jumptable 0000000000406735 case 11
.text:00000000004078D0                                         ; jumptable 00000000004068B5 case 11
.text:00000000004078D0                                         ; jumptable 0000000000406A35 case 11
.text:00000000004078D0                                         ; jumptable 0000000000406BB5 case 11
.text:00000000004078D0                                         ; jumptable 0000000000406D36 case 11
.text:00000000004078D0                                         ; jumptable 0000000000406EB5 case 11
.text:00000000004078D0                                         ; jumptable 0000000000407035 case 11
.text:00000000004078D0                                         ; jumptable 00000000004071B5 case 11
.text:00000000004078D0                                         ; jumptable 000000000040741C case 11
.text:00000000004078D4                 mov     ecx, [rsi-4]
.text:00000000004078D7                 mov     [rdi-0Bh], rdx
.text:00000000004078DB                 mov     [rdi-4], ecx
.text:00000000004078DE                 retn
.text:00000000004078DE ; ---------------------------------------------------------------------------
.text:00000000004078DF                 align 20h
.text:00000000004078E0
.text:00000000004078E0 loc_4078E0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004078E0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004078E0                 lddqu   xmm0, xmmword ptr [rsi-8Ah] ; jumptable 0000000000405A1C case 138
.text:00000000004078E0                                         ; jumptable 0000000000405B78 case 138
.text:00000000004078E0                                         ; jumptable 0000000000405CB5 case 138
.text:00000000004078E0                                         ; jumptable 0000000000405E35 case 138
.text:00000000004078E0                                         ; jumptable 0000000000405FB5 case 138
.text:00000000004078E0                                         ; jumptable 0000000000406135 case 138
.text:00000000004078E0                                         ; jumptable 00000000004062B5 case 138
.text:00000000004078E0                                         ; jumptable 0000000000406435 case 138
.text:00000000004078E0                                         ; jumptable 00000000004065B5 case 138
.text:00000000004078E0                                         ; jumptable 0000000000406735 case 138
.text:00000000004078E0                                         ; jumptable 00000000004068B5 case 138
.text:00000000004078E0                                         ; jumptable 0000000000406A35 case 138
.text:00000000004078E0                                         ; jumptable 0000000000406BB5 case 138
.text:00000000004078E0                                         ; jumptable 0000000000406D36 case 138
.text:00000000004078E0                                         ; jumptable 0000000000406EB5 case 138
.text:00000000004078E0                                         ; jumptable 0000000000407035 case 138
.text:00000000004078E0                                         ; jumptable 00000000004071B5 case 138
.text:00000000004078E0                                         ; jumptable 000000000040741C case 138
.text:00000000004078E8                 movdqu  xmmword ptr [rdi-8Ah], xmm0
.text:00000000004078F0
.text:00000000004078F0 loc_4078F0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004078F0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004078F0                 lddqu   xmm0, xmmword ptr [rsi-7Ah] ; jumptable 0000000000405A1C case 122
.text:00000000004078F0                                         ; jumptable 0000000000405B78 case 122
.text:00000000004078F0                                         ; jumptable 0000000000405CB5 case 122
.text:00000000004078F0                                         ; jumptable 0000000000405E35 case 122
.text:00000000004078F0                                         ; jumptable 0000000000405FB5 case 122
.text:00000000004078F0                                         ; jumptable 0000000000406135 case 122
.text:00000000004078F0                                         ; jumptable 00000000004062B5 case 122
.text:00000000004078F0                                         ; jumptable 0000000000406435 case 122
.text:00000000004078F0                                         ; jumptable 00000000004065B5 case 122
.text:00000000004078F0                                         ; jumptable 0000000000406735 case 122
.text:00000000004078F0                                         ; jumptable 00000000004068B5 case 122
.text:00000000004078F0                                         ; jumptable 0000000000406A35 case 122
.text:00000000004078F0                                         ; jumptable 0000000000406BB5 case 122
.text:00000000004078F0                                         ; jumptable 0000000000406D36 case 122
.text:00000000004078F0                                         ; jumptable 0000000000406EB5 case 122
.text:00000000004078F0                                         ; jumptable 0000000000407035 case 122
.text:00000000004078F0                                         ; jumptable 00000000004071B5 case 122
.text:00000000004078F0                                         ; jumptable 000000000040741C case 122
.text:00000000004078F5                 movdqu  xmmword ptr [rdi-7Ah], xmm0
.text:00000000004078FA
.text:00000000004078FA loc_4078FA:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004078FA                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004078FA                 lddqu   xmm0, xmmword ptr [rsi-6Ah] ; jumptable 0000000000405A1C case 106
.text:00000000004078FA                                         ; jumptable 0000000000405B78 case 106
.text:00000000004078FA                                         ; jumptable 0000000000405CB5 case 106
.text:00000000004078FA                                         ; jumptable 0000000000405E35 case 106
.text:00000000004078FA                                         ; jumptable 0000000000405FB5 case 106
.text:00000000004078FA                                         ; jumptable 0000000000406135 case 106
.text:00000000004078FA                                         ; jumptable 00000000004062B5 case 106
.text:00000000004078FA                                         ; jumptable 0000000000406435 case 106
.text:00000000004078FA                                         ; jumptable 00000000004065B5 case 106
.text:00000000004078FA                                         ; jumptable 0000000000406735 case 106
.text:00000000004078FA                                         ; jumptable 00000000004068B5 case 106
.text:00000000004078FA                                         ; jumptable 0000000000406A35 case 106
.text:00000000004078FA                                         ; jumptable 0000000000406BB5 case 106
.text:00000000004078FA                                         ; jumptable 0000000000406D36 case 106
.text:00000000004078FA                                         ; jumptable 0000000000406EB5 case 106
.text:00000000004078FA                                         ; jumptable 0000000000407035 case 106
.text:00000000004078FA                                         ; jumptable 00000000004071B5 case 106
.text:00000000004078FA                                         ; jumptable 000000000040741C case 106
.text:00000000004078FF                 movdqu  xmmword ptr [rdi-6Ah], xmm0
.text:0000000000407904
.text:0000000000407904 loc_407904:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407904                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407904                 lddqu   xmm0, xmmword ptr [rsi-5Ah] ; jumptable 0000000000405A1C case 90
.text:0000000000407904                                         ; jumptable 0000000000405B78 case 90
.text:0000000000407904                                         ; jumptable 0000000000405CB5 case 90
.text:0000000000407904                                         ; jumptable 0000000000405E35 case 90
.text:0000000000407904                                         ; jumptable 0000000000405FB5 case 90
.text:0000000000407904                                         ; jumptable 0000000000406135 case 90
.text:0000000000407904                                         ; jumptable 00000000004062B5 case 90
.text:0000000000407904                                         ; jumptable 0000000000406435 case 90
.text:0000000000407904                                         ; jumptable 00000000004065B5 case 90
.text:0000000000407904                                         ; jumptable 0000000000406735 case 90
.text:0000000000407904                                         ; jumptable 00000000004068B5 case 90
.text:0000000000407904                                         ; jumptable 0000000000406A35 case 90
.text:0000000000407904                                         ; jumptable 0000000000406BB5 case 90
.text:0000000000407904                                         ; jumptable 0000000000406D36 case 90
.text:0000000000407904                                         ; jumptable 0000000000406EB5 case 90
.text:0000000000407904                                         ; jumptable 0000000000407035 case 90
.text:0000000000407904                                         ; jumptable 00000000004071B5 case 90
.text:0000000000407904                                         ; jumptable 000000000040741C case 90
.text:0000000000407909                 movdqu  xmmword ptr [rdi-5Ah], xmm0
.text:000000000040790E
.text:000000000040790E loc_40790E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040790E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040790E                 lddqu   xmm0, xmmword ptr [rsi-4Ah] ; jumptable 0000000000405A1C case 74
.text:000000000040790E                                         ; jumptable 0000000000405B78 case 74
.text:000000000040790E                                         ; jumptable 0000000000405CB5 case 74
.text:000000000040790E                                         ; jumptable 0000000000405E35 case 74
.text:000000000040790E                                         ; jumptable 0000000000405FB5 case 74
.text:000000000040790E                                         ; jumptable 0000000000406135 case 74
.text:000000000040790E                                         ; jumptable 00000000004062B5 case 74
.text:000000000040790E                                         ; jumptable 0000000000406435 case 74
.text:000000000040790E                                         ; jumptable 00000000004065B5 case 74
.text:000000000040790E                                         ; jumptable 0000000000406735 case 74
.text:000000000040790E                                         ; jumptable 00000000004068B5 case 74
.text:000000000040790E                                         ; jumptable 0000000000406A35 case 74
.text:000000000040790E                                         ; jumptable 0000000000406BB5 case 74
.text:000000000040790E                                         ; jumptable 0000000000406D36 case 74
.text:000000000040790E                                         ; jumptable 0000000000406EB5 case 74
.text:000000000040790E                                         ; jumptable 0000000000407035 case 74
.text:000000000040790E                                         ; jumptable 00000000004071B5 case 74
.text:000000000040790E                                         ; jumptable 000000000040741C case 74
.text:0000000000407913                 movdqu  xmmword ptr [rdi-4Ah], xmm0
.text:0000000000407918
.text:0000000000407918 loc_407918:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407918                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407918                 lddqu   xmm0, xmmword ptr [rsi-3Ah] ; jumptable 0000000000405A1C case 58
.text:0000000000407918                                         ; jumptable 0000000000405B78 case 58
.text:0000000000407918                                         ; jumptable 0000000000405CB5 case 58
.text:0000000000407918                                         ; jumptable 0000000000405E35 case 58
.text:0000000000407918                                         ; jumptable 0000000000405FB5 case 58
.text:0000000000407918                                         ; jumptable 0000000000406135 case 58
.text:0000000000407918                                         ; jumptable 00000000004062B5 case 58
.text:0000000000407918                                         ; jumptable 0000000000406435 case 58
.text:0000000000407918                                         ; jumptable 00000000004065B5 case 58
.text:0000000000407918                                         ; jumptable 0000000000406735 case 58
.text:0000000000407918                                         ; jumptable 00000000004068B5 case 58
.text:0000000000407918                                         ; jumptable 0000000000406A35 case 58
.text:0000000000407918                                         ; jumptable 0000000000406BB5 case 58
.text:0000000000407918                                         ; jumptable 0000000000406D36 case 58
.text:0000000000407918                                         ; jumptable 0000000000406EB5 case 58
.text:0000000000407918                                         ; jumptable 0000000000407035 case 58
.text:0000000000407918                                         ; jumptable 00000000004071B5 case 58
.text:0000000000407918                                         ; jumptable 000000000040741C case 58
.text:000000000040791D                 movdqu  xmmword ptr [rdi-3Ah], xmm0
.text:0000000000407922
.text:0000000000407922 loc_407922:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407922                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407922                 lddqu   xmm0, xmmword ptr [rsi-2Ah] ; jumptable 0000000000405A1C case 42
.text:0000000000407922                                         ; jumptable 0000000000405B78 case 42
.text:0000000000407922                                         ; jumptable 0000000000405CB5 case 42
.text:0000000000407922                                         ; jumptable 0000000000405E35 case 42
.text:0000000000407922                                         ; jumptable 0000000000405FB5 case 42
.text:0000000000407922                                         ; jumptable 0000000000406135 case 42
.text:0000000000407922                                         ; jumptable 00000000004062B5 case 42
.text:0000000000407922                                         ; jumptable 0000000000406435 case 42
.text:0000000000407922                                         ; jumptable 00000000004065B5 case 42
.text:0000000000407922                                         ; jumptable 0000000000406735 case 42
.text:0000000000407922                                         ; jumptable 00000000004068B5 case 42
.text:0000000000407922                                         ; jumptable 0000000000406A35 case 42
.text:0000000000407922                                         ; jumptable 0000000000406BB5 case 42
.text:0000000000407922                                         ; jumptable 0000000000406D36 case 42
.text:0000000000407922                                         ; jumptable 0000000000406EB5 case 42
.text:0000000000407922                                         ; jumptable 0000000000407035 case 42
.text:0000000000407922                                         ; jumptable 00000000004071B5 case 42
.text:0000000000407922                                         ; jumptable 000000000040741C case 42
.text:0000000000407927                 movdqu  xmmword ptr [rdi-2Ah], xmm0
.text:000000000040792C
.text:000000000040792C loc_40792C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040792C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040792C                 lddqu   xmm0, xmmword ptr [rsi-1Ah] ; jumptable 0000000000405A1C case 26
.text:000000000040792C                                         ; jumptable 0000000000405B78 case 26
.text:000000000040792C                                         ; jumptable 0000000000405CB5 case 26
.text:000000000040792C                                         ; jumptable 0000000000405E35 case 26
.text:000000000040792C                                         ; jumptable 0000000000405FB5 case 26
.text:000000000040792C                                         ; jumptable 0000000000406135 case 26
.text:000000000040792C                                         ; jumptable 00000000004062B5 case 26
.text:000000000040792C                                         ; jumptable 0000000000406435 case 26
.text:000000000040792C                                         ; jumptable 00000000004065B5 case 26
.text:000000000040792C                                         ; jumptable 0000000000406735 case 26
.text:000000000040792C                                         ; jumptable 00000000004068B5 case 26
.text:000000000040792C                                         ; jumptable 0000000000406A35 case 26
.text:000000000040792C                                         ; jumptable 0000000000406BB5 case 26
.text:000000000040792C                                         ; jumptable 0000000000406D36 case 26
.text:000000000040792C                                         ; jumptable 0000000000406EB5 case 26
.text:000000000040792C                                         ; jumptable 0000000000407035 case 26
.text:000000000040792C                                         ; jumptable 00000000004071B5 case 26
.text:000000000040792C                                         ; jumptable 000000000040741C case 26
.text:0000000000407931                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407936                 movdqu  xmmword ptr [rdi-1Ah], xmm0
.text:000000000040793B                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407940                 retn
.text:0000000000407940 ; ---------------------------------------------------------------------------
.text:0000000000407941                 align 10h
.text:0000000000407950
.text:0000000000407950 loc_407950:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407950                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407950                 mov     rdx, [rsi-0Ah]  ; jumptable 0000000000405A1C case 10
.text:0000000000407950                                         ; jumptable 0000000000405B78 case 10
.text:0000000000407950                                         ; jumptable 0000000000405CB5 case 10
.text:0000000000407950                                         ; jumptable 0000000000405E35 case 10
.text:0000000000407950                                         ; jumptable 0000000000405FB5 case 10
.text:0000000000407950                                         ; jumptable 0000000000406135 case 10
.text:0000000000407950                                         ; jumptable 00000000004062B5 case 10
.text:0000000000407950                                         ; jumptable 0000000000406435 case 10
.text:0000000000407950                                         ; jumptable 00000000004065B5 case 10
.text:0000000000407950                                         ; jumptable 0000000000406735 case 10
.text:0000000000407950                                         ; jumptable 00000000004068B5 case 10
.text:0000000000407950                                         ; jumptable 0000000000406A35 case 10
.text:0000000000407950                                         ; jumptable 0000000000406BB5 case 10
.text:0000000000407950                                         ; jumptable 0000000000406D36 case 10
.text:0000000000407950                                         ; jumptable 0000000000406EB5 case 10
.text:0000000000407950                                         ; jumptable 0000000000407035 case 10
.text:0000000000407950                                         ; jumptable 00000000004071B5 case 10
.text:0000000000407950                                         ; jumptable 000000000040741C case 10
.text:0000000000407954                 mov     ecx, [rsi-4]
.text:0000000000407957                 mov     [rdi-0Ah], rdx
.text:000000000040795B                 mov     [rdi-4], ecx
.text:000000000040795E                 retn
.text:000000000040795E ; ---------------------------------------------------------------------------
.text:000000000040795F                 align 20h
.text:0000000000407960
.text:0000000000407960 loc_407960:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407960                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407960                 lddqu   xmm0, xmmword ptr [rsi-89h] ; jumptable 0000000000405A1C case 137
.text:0000000000407960                                         ; jumptable 0000000000405B78 case 137
.text:0000000000407960                                         ; jumptable 0000000000405CB5 case 137
.text:0000000000407960                                         ; jumptable 0000000000405E35 case 137
.text:0000000000407960                                         ; jumptable 0000000000405FB5 case 137
.text:0000000000407960                                         ; jumptable 0000000000406135 case 137
.text:0000000000407960                                         ; jumptable 00000000004062B5 case 137
.text:0000000000407960                                         ; jumptable 0000000000406435 case 137
.text:0000000000407960                                         ; jumptable 00000000004065B5 case 137
.text:0000000000407960                                         ; jumptable 0000000000406735 case 137
.text:0000000000407960                                         ; jumptable 00000000004068B5 case 137
.text:0000000000407960                                         ; jumptable 0000000000406A35 case 137
.text:0000000000407960                                         ; jumptable 0000000000406BB5 case 137
.text:0000000000407960                                         ; jumptable 0000000000406D36 case 137
.text:0000000000407960                                         ; jumptable 0000000000406EB5 case 137
.text:0000000000407960                                         ; jumptable 0000000000407035 case 137
.text:0000000000407960                                         ; jumptable 00000000004071B5 case 137
.text:0000000000407960                                         ; jumptable 000000000040741C case 137
.text:0000000000407968                 movdqu  xmmword ptr [rdi-89h], xmm0
.text:0000000000407970
.text:0000000000407970 loc_407970:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407970                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407970                 lddqu   xmm0, xmmword ptr [rsi-79h] ; jumptable 0000000000405A1C case 121
.text:0000000000407970                                         ; jumptable 0000000000405B78 case 121
.text:0000000000407970                                         ; jumptable 0000000000405CB5 case 121
.text:0000000000407970                                         ; jumptable 0000000000405E35 case 121
.text:0000000000407970                                         ; jumptable 0000000000405FB5 case 121
.text:0000000000407970                                         ; jumptable 0000000000406135 case 121
.text:0000000000407970                                         ; jumptable 00000000004062B5 case 121
.text:0000000000407970                                         ; jumptable 0000000000406435 case 121
.text:0000000000407970                                         ; jumptable 00000000004065B5 case 121
.text:0000000000407970                                         ; jumptable 0000000000406735 case 121
.text:0000000000407970                                         ; jumptable 00000000004068B5 case 121
.text:0000000000407970                                         ; jumptable 0000000000406A35 case 121
.text:0000000000407970                                         ; jumptable 0000000000406BB5 case 121
.text:0000000000407970                                         ; jumptable 0000000000406D36 case 121
.text:0000000000407970                                         ; jumptable 0000000000406EB5 case 121
.text:0000000000407970                                         ; jumptable 0000000000407035 case 121
.text:0000000000407970                                         ; jumptable 00000000004071B5 case 121
.text:0000000000407970                                         ; jumptable 000000000040741C case 121
.text:0000000000407975                 movdqu  xmmword ptr [rdi-79h], xmm0
.text:000000000040797A
.text:000000000040797A loc_40797A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040797A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040797A                 lddqu   xmm0, xmmword ptr [rsi-69h] ; jumptable 0000000000405A1C case 105
.text:000000000040797A                                         ; jumptable 0000000000405B78 case 105
.text:000000000040797A                                         ; jumptable 0000000000405CB5 case 105
.text:000000000040797A                                         ; jumptable 0000000000405E35 case 105
.text:000000000040797A                                         ; jumptable 0000000000405FB5 case 105
.text:000000000040797A                                         ; jumptable 0000000000406135 case 105
.text:000000000040797A                                         ; jumptable 00000000004062B5 case 105
.text:000000000040797A                                         ; jumptable 0000000000406435 case 105
.text:000000000040797A                                         ; jumptable 00000000004065B5 case 105
.text:000000000040797A                                         ; jumptable 0000000000406735 case 105
.text:000000000040797A                                         ; jumptable 00000000004068B5 case 105
.text:000000000040797A                                         ; jumptable 0000000000406A35 case 105
.text:000000000040797A                                         ; jumptable 0000000000406BB5 case 105
.text:000000000040797A                                         ; jumptable 0000000000406D36 case 105
.text:000000000040797A                                         ; jumptable 0000000000406EB5 case 105
.text:000000000040797A                                         ; jumptable 0000000000407035 case 105
.text:000000000040797A                                         ; jumptable 00000000004071B5 case 105
.text:000000000040797A                                         ; jumptable 000000000040741C case 105
.text:000000000040797F                 movdqu  xmmword ptr [rdi-69h], xmm0
.text:0000000000407984
.text:0000000000407984 loc_407984:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407984                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407984                 lddqu   xmm0, xmmword ptr [rsi-59h] ; jumptable 0000000000405A1C case 89
.text:0000000000407984                                         ; jumptable 0000000000405B78 case 89
.text:0000000000407984                                         ; jumptable 0000000000405CB5 case 89
.text:0000000000407984                                         ; jumptable 0000000000405E35 case 89
.text:0000000000407984                                         ; jumptable 0000000000405FB5 case 89
.text:0000000000407984                                         ; jumptable 0000000000406135 case 89
.text:0000000000407984                                         ; jumptable 00000000004062B5 case 89
.text:0000000000407984                                         ; jumptable 0000000000406435 case 89
.text:0000000000407984                                         ; jumptable 00000000004065B5 case 89
.text:0000000000407984                                         ; jumptable 0000000000406735 case 89
.text:0000000000407984                                         ; jumptable 00000000004068B5 case 89
.text:0000000000407984                                         ; jumptable 0000000000406A35 case 89
.text:0000000000407984                                         ; jumptable 0000000000406BB5 case 89
.text:0000000000407984                                         ; jumptable 0000000000406D36 case 89
.text:0000000000407984                                         ; jumptable 0000000000406EB5 case 89
.text:0000000000407984                                         ; jumptable 0000000000407035 case 89
.text:0000000000407984                                         ; jumptable 00000000004071B5 case 89
.text:0000000000407984                                         ; jumptable 000000000040741C case 89
.text:0000000000407989                 movdqu  xmmword ptr [rdi-59h], xmm0
.text:000000000040798E
.text:000000000040798E loc_40798E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:000000000040798E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:000000000040798E                 lddqu   xmm0, xmmword ptr [rsi-49h] ; jumptable 0000000000405A1C case 73
.text:000000000040798E                                         ; jumptable 0000000000405B78 case 73
.text:000000000040798E                                         ; jumptable 0000000000405CB5 case 73
.text:000000000040798E                                         ; jumptable 0000000000405E35 case 73
.text:000000000040798E                                         ; jumptable 0000000000405FB5 case 73
.text:000000000040798E                                         ; jumptable 0000000000406135 case 73
.text:000000000040798E                                         ; jumptable 00000000004062B5 case 73
.text:000000000040798E                                         ; jumptable 0000000000406435 case 73
.text:000000000040798E                                         ; jumptable 00000000004065B5 case 73
.text:000000000040798E                                         ; jumptable 0000000000406735 case 73
.text:000000000040798E                                         ; jumptable 00000000004068B5 case 73
.text:000000000040798E                                         ; jumptable 0000000000406A35 case 73
.text:000000000040798E                                         ; jumptable 0000000000406BB5 case 73
.text:000000000040798E                                         ; jumptable 0000000000406D36 case 73
.text:000000000040798E                                         ; jumptable 0000000000406EB5 case 73
.text:000000000040798E                                         ; jumptable 0000000000407035 case 73
.text:000000000040798E                                         ; jumptable 00000000004071B5 case 73
.text:000000000040798E                                         ; jumptable 000000000040741C case 73
.text:0000000000407993                 movdqu  xmmword ptr [rdi-49h], xmm0
.text:0000000000407998
.text:0000000000407998 loc_407998:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407998                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407998                 lddqu   xmm0, xmmword ptr [rsi-39h] ; jumptable 0000000000405A1C case 57
.text:0000000000407998                                         ; jumptable 0000000000405B78 case 57
.text:0000000000407998                                         ; jumptable 0000000000405CB5 case 57
.text:0000000000407998                                         ; jumptable 0000000000405E35 case 57
.text:0000000000407998                                         ; jumptable 0000000000405FB5 case 57
.text:0000000000407998                                         ; jumptable 0000000000406135 case 57
.text:0000000000407998                                         ; jumptable 00000000004062B5 case 57
.text:0000000000407998                                         ; jumptable 0000000000406435 case 57
.text:0000000000407998                                         ; jumptable 00000000004065B5 case 57
.text:0000000000407998                                         ; jumptable 0000000000406735 case 57
.text:0000000000407998                                         ; jumptable 00000000004068B5 case 57
.text:0000000000407998                                         ; jumptable 0000000000406A35 case 57
.text:0000000000407998                                         ; jumptable 0000000000406BB5 case 57
.text:0000000000407998                                         ; jumptable 0000000000406D36 case 57
.text:0000000000407998                                         ; jumptable 0000000000406EB5 case 57
.text:0000000000407998                                         ; jumptable 0000000000407035 case 57
.text:0000000000407998                                         ; jumptable 00000000004071B5 case 57
.text:0000000000407998                                         ; jumptable 000000000040741C case 57
.text:000000000040799D                 movdqu  xmmword ptr [rdi-39h], xmm0
.text:00000000004079A2
.text:00000000004079A2 loc_4079A2:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004079A2                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004079A2                 lddqu   xmm0, xmmword ptr [rsi-29h] ; jumptable 0000000000405A1C case 41
.text:00000000004079A2                                         ; jumptable 0000000000405B78 case 41
.text:00000000004079A2                                         ; jumptable 0000000000405CB5 case 41
.text:00000000004079A2                                         ; jumptable 0000000000405E35 case 41
.text:00000000004079A2                                         ; jumptable 0000000000405FB5 case 41
.text:00000000004079A2                                         ; jumptable 0000000000406135 case 41
.text:00000000004079A2                                         ; jumptable 00000000004062B5 case 41
.text:00000000004079A2                                         ; jumptable 0000000000406435 case 41
.text:00000000004079A2                                         ; jumptable 00000000004065B5 case 41
.text:00000000004079A2                                         ; jumptable 0000000000406735 case 41
.text:00000000004079A2                                         ; jumptable 00000000004068B5 case 41
.text:00000000004079A2                                         ; jumptable 0000000000406A35 case 41
.text:00000000004079A2                                         ; jumptable 0000000000406BB5 case 41
.text:00000000004079A2                                         ; jumptable 0000000000406D36 case 41
.text:00000000004079A2                                         ; jumptable 0000000000406EB5 case 41
.text:00000000004079A2                                         ; jumptable 0000000000407035 case 41
.text:00000000004079A2                                         ; jumptable 00000000004071B5 case 41
.text:00000000004079A2                                         ; jumptable 000000000040741C case 41
.text:00000000004079A7                 movdqu  xmmword ptr [rdi-29h], xmm0
.text:00000000004079AC
.text:00000000004079AC loc_4079AC:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004079AC                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004079AC                 lddqu   xmm0, xmmword ptr [rsi-19h] ; jumptable 0000000000405A1C case 25
.text:00000000004079AC                                         ; jumptable 0000000000405B78 case 25
.text:00000000004079AC                                         ; jumptable 0000000000405CB5 case 25
.text:00000000004079AC                                         ; jumptable 0000000000405E35 case 25
.text:00000000004079AC                                         ; jumptable 0000000000405FB5 case 25
.text:00000000004079AC                                         ; jumptable 0000000000406135 case 25
.text:00000000004079AC                                         ; jumptable 00000000004062B5 case 25
.text:00000000004079AC                                         ; jumptable 0000000000406435 case 25
.text:00000000004079AC                                         ; jumptable 00000000004065B5 case 25
.text:00000000004079AC                                         ; jumptable 0000000000406735 case 25
.text:00000000004079AC                                         ; jumptable 00000000004068B5 case 25
.text:00000000004079AC                                         ; jumptable 0000000000406A35 case 25
.text:00000000004079AC                                         ; jumptable 0000000000406BB5 case 25
.text:00000000004079AC                                         ; jumptable 0000000000406D36 case 25
.text:00000000004079AC                                         ; jumptable 0000000000406EB5 case 25
.text:00000000004079AC                                         ; jumptable 0000000000407035 case 25
.text:00000000004079AC                                         ; jumptable 00000000004071B5 case 25
.text:00000000004079AC                                         ; jumptable 000000000040741C case 25
.text:00000000004079B1                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:00000000004079B6                 movdqu  xmmword ptr [rdi-19h], xmm0
.text:00000000004079BB                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:00000000004079C0                 retn
.text:00000000004079C0 ; ---------------------------------------------------------------------------
.text:00000000004079C1                 align 10h
.text:00000000004079D0
.text:00000000004079D0 loc_4079D0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004079D0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004079D0                 mov     rdx, [rsi-9]    ; jumptable 0000000000405A1C case 9
.text:00000000004079D0                                         ; jumptable 0000000000405B78 case 9
.text:00000000004079D0                                         ; jumptable 0000000000405CB5 case 9
.text:00000000004079D0                                         ; jumptable 0000000000405E35 case 9
.text:00000000004079D0                                         ; jumptable 0000000000405FB5 case 9
.text:00000000004079D0                                         ; jumptable 0000000000406135 case 9
.text:00000000004079D0                                         ; jumptable 00000000004062B5 case 9
.text:00000000004079D0                                         ; jumptable 0000000000406435 case 9
.text:00000000004079D0                                         ; jumptable 00000000004065B5 case 9
.text:00000000004079D0                                         ; jumptable 0000000000406735 case 9
.text:00000000004079D0                                         ; jumptable 00000000004068B5 case 9
.text:00000000004079D0                                         ; jumptable 0000000000406A35 case 9
.text:00000000004079D0                                         ; jumptable 0000000000406BB5 case 9
.text:00000000004079D0                                         ; jumptable 0000000000406D36 case 9
.text:00000000004079D0                                         ; jumptable 0000000000406EB5 case 9
.text:00000000004079D0                                         ; jumptable 0000000000407035 case 9
.text:00000000004079D0                                         ; jumptable 00000000004071B5 case 9
.text:00000000004079D0                                         ; jumptable 000000000040741C case 9
.text:00000000004079D4                 mov     ecx, [rsi-4]
.text:00000000004079D7                 mov     [rdi-9], rdx
.text:00000000004079DB                 mov     [rdi-4], ecx
.text:00000000004079DE                 retn
.text:00000000004079DE ; ---------------------------------------------------------------------------
.text:00000000004079DF                 align 20h
.text:00000000004079E0
.text:00000000004079E0 loc_4079E0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004079E0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004079E0                 lddqu   xmm0, xmmword ptr [rsi-88h] ; jumptable 0000000000405A1C case 136
.text:00000000004079E0                                         ; jumptable 0000000000405B78 case 136
.text:00000000004079E0                                         ; jumptable 0000000000405CB5 case 136
.text:00000000004079E0                                         ; jumptable 0000000000405E35 case 136
.text:00000000004079E0                                         ; jumptable 0000000000405FB5 case 136
.text:00000000004079E0                                         ; jumptable 0000000000406135 case 136
.text:00000000004079E0                                         ; jumptable 00000000004062B5 case 136
.text:00000000004079E0                                         ; jumptable 0000000000406435 case 136
.text:00000000004079E0                                         ; jumptable 00000000004065B5 case 136
.text:00000000004079E0                                         ; jumptable 0000000000406735 case 136
.text:00000000004079E0                                         ; jumptable 00000000004068B5 case 136
.text:00000000004079E0                                         ; jumptable 0000000000406A35 case 136
.text:00000000004079E0                                         ; jumptable 0000000000406BB5 case 136
.text:00000000004079E0                                         ; jumptable 0000000000406D36 case 136
.text:00000000004079E0                                         ; jumptable 0000000000406EB5 case 136
.text:00000000004079E0                                         ; jumptable 0000000000407035 case 136
.text:00000000004079E0                                         ; jumptable 00000000004071B5 case 136
.text:00000000004079E0                                         ; jumptable 000000000040741C case 136
.text:00000000004079E8                 movdqu  xmmword ptr [rdi-88h], xmm0
.text:00000000004079F0
.text:00000000004079F0 loc_4079F0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004079F0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004079F0                 lddqu   xmm0, xmmword ptr [rsi-78h] ; jumptable 0000000000405A1C case 120
.text:00000000004079F0                                         ; jumptable 0000000000405B78 case 120
.text:00000000004079F0                                         ; jumptable 0000000000405CB5 case 120
.text:00000000004079F0                                         ; jumptable 0000000000405E35 case 120
.text:00000000004079F0                                         ; jumptable 0000000000405FB5 case 120
.text:00000000004079F0                                         ; jumptable 0000000000406135 case 120
.text:00000000004079F0                                         ; jumptable 00000000004062B5 case 120
.text:00000000004079F0                                         ; jumptable 0000000000406435 case 120
.text:00000000004079F0                                         ; jumptable 00000000004065B5 case 120
.text:00000000004079F0                                         ; jumptable 0000000000406735 case 120
.text:00000000004079F0                                         ; jumptable 00000000004068B5 case 120
.text:00000000004079F0                                         ; jumptable 0000000000406A35 case 120
.text:00000000004079F0                                         ; jumptable 0000000000406BB5 case 120
.text:00000000004079F0                                         ; jumptable 0000000000406D36 case 120
.text:00000000004079F0                                         ; jumptable 0000000000406EB5 case 120
.text:00000000004079F0                                         ; jumptable 0000000000407035 case 120
.text:00000000004079F0                                         ; jumptable 00000000004071B5 case 120
.text:00000000004079F0                                         ; jumptable 000000000040741C case 120
.text:00000000004079F5                 movdqu  xmmword ptr [rdi-78h], xmm0
.text:00000000004079FA
.text:00000000004079FA loc_4079FA:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:00000000004079FA                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:00000000004079FA                 lddqu   xmm0, xmmword ptr [rsi-68h] ; jumptable 0000000000405A1C case 104
.text:00000000004079FA                                         ; jumptable 0000000000405B78 case 104
.text:00000000004079FA                                         ; jumptable 0000000000405CB5 case 104
.text:00000000004079FA                                         ; jumptable 0000000000405E35 case 104
.text:00000000004079FA                                         ; jumptable 0000000000405FB5 case 104
.text:00000000004079FA                                         ; jumptable 0000000000406135 case 104
.text:00000000004079FA                                         ; jumptable 00000000004062B5 case 104
.text:00000000004079FA                                         ; jumptable 0000000000406435 case 104
.text:00000000004079FA                                         ; jumptable 00000000004065B5 case 104
.text:00000000004079FA                                         ; jumptable 0000000000406735 case 104
.text:00000000004079FA                                         ; jumptable 00000000004068B5 case 104
.text:00000000004079FA                                         ; jumptable 0000000000406A35 case 104
.text:00000000004079FA                                         ; jumptable 0000000000406BB5 case 104
.text:00000000004079FA                                         ; jumptable 0000000000406D36 case 104
.text:00000000004079FA                                         ; jumptable 0000000000406EB5 case 104
.text:00000000004079FA                                         ; jumptable 0000000000407035 case 104
.text:00000000004079FA                                         ; jumptable 00000000004071B5 case 104
.text:00000000004079FA                                         ; jumptable 000000000040741C case 104
.text:00000000004079FF                 movdqu  xmmword ptr [rdi-68h], xmm0
.text:0000000000407A04
.text:0000000000407A04 loc_407A04:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A04                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A04                 lddqu   xmm0, xmmword ptr [rsi-58h] ; jumptable 0000000000405A1C case 88
.text:0000000000407A04                                         ; jumptable 0000000000405B78 case 88
.text:0000000000407A04                                         ; jumptable 0000000000405CB5 case 88
.text:0000000000407A04                                         ; jumptable 0000000000405E35 case 88
.text:0000000000407A04                                         ; jumptable 0000000000405FB5 case 88
.text:0000000000407A04                                         ; jumptable 0000000000406135 case 88
.text:0000000000407A04                                         ; jumptable 00000000004062B5 case 88
.text:0000000000407A04                                         ; jumptable 0000000000406435 case 88
.text:0000000000407A04                                         ; jumptable 00000000004065B5 case 88
.text:0000000000407A04                                         ; jumptable 0000000000406735 case 88
.text:0000000000407A04                                         ; jumptable 00000000004068B5 case 88
.text:0000000000407A04                                         ; jumptable 0000000000406A35 case 88
.text:0000000000407A04                                         ; jumptable 0000000000406BB5 case 88
.text:0000000000407A04                                         ; jumptable 0000000000406D36 case 88
.text:0000000000407A04                                         ; jumptable 0000000000406EB5 case 88
.text:0000000000407A04                                         ; jumptable 0000000000407035 case 88
.text:0000000000407A04                                         ; jumptable 00000000004071B5 case 88
.text:0000000000407A04                                         ; jumptable 000000000040741C case 88
.text:0000000000407A09                 movdqu  xmmword ptr [rdi-58h], xmm0
.text:0000000000407A0E
.text:0000000000407A0E loc_407A0E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A0E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A0E                 lddqu   xmm0, xmmword ptr [rsi-48h] ; jumptable 0000000000405A1C case 72
.text:0000000000407A0E                                         ; jumptable 0000000000405B78 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000405CB5 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000405E35 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000405FB5 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000406135 case 72
.text:0000000000407A0E                                         ; jumptable 00000000004062B5 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000406435 case 72
.text:0000000000407A0E                                         ; jumptable 00000000004065B5 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000406735 case 72
.text:0000000000407A0E                                         ; jumptable 00000000004068B5 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000406A35 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000406BB5 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000406D36 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000406EB5 case 72
.text:0000000000407A0E                                         ; jumptable 0000000000407035 case 72
.text:0000000000407A0E                                         ; jumptable 00000000004071B5 case 72
.text:0000000000407A0E                                         ; jumptable 000000000040741C case 72
.text:0000000000407A13                 movdqu  xmmword ptr [rdi-48h], xmm0
.text:0000000000407A18
.text:0000000000407A18 loc_407A18:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A18                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A18                 lddqu   xmm0, xmmword ptr [rsi-38h] ; jumptable 0000000000405A1C case 56
.text:0000000000407A18                                         ; jumptable 0000000000405B78 case 56
.text:0000000000407A18                                         ; jumptable 0000000000405CB5 case 56
.text:0000000000407A18                                         ; jumptable 0000000000405E35 case 56
.text:0000000000407A18                                         ; jumptable 0000000000405FB5 case 56
.text:0000000000407A18                                         ; jumptable 0000000000406135 case 56
.text:0000000000407A18                                         ; jumptable 00000000004062B5 case 56
.text:0000000000407A18                                         ; jumptable 0000000000406435 case 56
.text:0000000000407A18                                         ; jumptable 00000000004065B5 case 56
.text:0000000000407A18                                         ; jumptable 0000000000406735 case 56
.text:0000000000407A18                                         ; jumptable 00000000004068B5 case 56
.text:0000000000407A18                                         ; jumptable 0000000000406A35 case 56
.text:0000000000407A18                                         ; jumptable 0000000000406BB5 case 56
.text:0000000000407A18                                         ; jumptable 0000000000406D36 case 56
.text:0000000000407A18                                         ; jumptable 0000000000406EB5 case 56
.text:0000000000407A18                                         ; jumptable 0000000000407035 case 56
.text:0000000000407A18                                         ; jumptable 00000000004071B5 case 56
.text:0000000000407A18                                         ; jumptable 000000000040741C case 56
.text:0000000000407A1D                 movdqu  xmmword ptr [rdi-38h], xmm0
.text:0000000000407A22
.text:0000000000407A22 loc_407A22:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A22                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A22                 lddqu   xmm0, xmmword ptr [rsi-28h] ; jumptable 0000000000405A1C case 40
.text:0000000000407A22                                         ; jumptable 0000000000405B78 case 40
.text:0000000000407A22                                         ; jumptable 0000000000405CB5 case 40
.text:0000000000407A22                                         ; jumptable 0000000000405E35 case 40
.text:0000000000407A22                                         ; jumptable 0000000000405FB5 case 40
.text:0000000000407A22                                         ; jumptable 0000000000406135 case 40
.text:0000000000407A22                                         ; jumptable 00000000004062B5 case 40
.text:0000000000407A22                                         ; jumptable 0000000000406435 case 40
.text:0000000000407A22                                         ; jumptable 00000000004065B5 case 40
.text:0000000000407A22                                         ; jumptable 0000000000406735 case 40
.text:0000000000407A22                                         ; jumptable 00000000004068B5 case 40
.text:0000000000407A22                                         ; jumptable 0000000000406A35 case 40
.text:0000000000407A22                                         ; jumptable 0000000000406BB5 case 40
.text:0000000000407A22                                         ; jumptable 0000000000406D36 case 40
.text:0000000000407A22                                         ; jumptable 0000000000406EB5 case 40
.text:0000000000407A22                                         ; jumptable 0000000000407035 case 40
.text:0000000000407A22                                         ; jumptable 00000000004071B5 case 40
.text:0000000000407A22                                         ; jumptable 000000000040741C case 40
.text:0000000000407A27                 movdqu  xmmword ptr [rdi-28h], xmm0
.text:0000000000407A2C
.text:0000000000407A2C loc_407A2C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A2C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A2C                 lddqu   xmm0, xmmword ptr [rsi-18h] ; jumptable 0000000000405A1C case 24
.text:0000000000407A2C                                         ; jumptable 0000000000405B78 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000405CB5 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000405E35 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000405FB5 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000406135 case 24
.text:0000000000407A2C                                         ; jumptable 00000000004062B5 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000406435 case 24
.text:0000000000407A2C                                         ; jumptable 00000000004065B5 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000406735 case 24
.text:0000000000407A2C                                         ; jumptable 00000000004068B5 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000406A35 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000406BB5 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000406D36 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000406EB5 case 24
.text:0000000000407A2C                                         ; jumptable 0000000000407035 case 24
.text:0000000000407A2C                                         ; jumptable 00000000004071B5 case 24
.text:0000000000407A2C                                         ; jumptable 000000000040741C case 24
.text:0000000000407A31                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407A36                 movdqu  xmmword ptr [rdi-18h], xmm0
.text:0000000000407A3B                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407A40                 retn
.text:0000000000407A40 ; ---------------------------------------------------------------------------
.text:0000000000407A41                 align 10h
.text:0000000000407A50
.text:0000000000407A50 loc_407A50:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A50                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A50                 mov     rdx, [rsi-8]    ; jumptable 0000000000405A1C case 8
.text:0000000000407A50                                         ; jumptable 0000000000405B78 case 8
.text:0000000000407A50                                         ; jumptable 0000000000405CB5 case 8
.text:0000000000407A50                                         ; jumptable 0000000000405E35 case 8
.text:0000000000407A50                                         ; jumptable 0000000000405FB5 case 8
.text:0000000000407A50                                         ; jumptable 0000000000406135 case 8
.text:0000000000407A50                                         ; jumptable 00000000004062B5 case 8
.text:0000000000407A50                                         ; jumptable 0000000000406435 case 8
.text:0000000000407A50                                         ; jumptable 00000000004065B5 case 8
.text:0000000000407A50                                         ; jumptable 0000000000406735 case 8
.text:0000000000407A50                                         ; jumptable 00000000004068B5 case 8
.text:0000000000407A50                                         ; jumptable 0000000000406A35 case 8
.text:0000000000407A50                                         ; jumptable 0000000000406BB5 case 8
.text:0000000000407A50                                         ; jumptable 0000000000406D36 case 8
.text:0000000000407A50                                         ; jumptable 0000000000406EB5 case 8
.text:0000000000407A50                                         ; jumptable 0000000000407035 case 8
.text:0000000000407A50                                         ; jumptable 00000000004071B5 case 8
.text:0000000000407A50                                         ; jumptable 000000000040741C case 8
.text:0000000000407A54                 mov     [rdi-8], rdx
.text:0000000000407A58                 retn
.text:0000000000407A58 ; ---------------------------------------------------------------------------
.text:0000000000407A59                 align 20h
.text:0000000000407A60
.text:0000000000407A60 loc_407A60:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A60                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A60                 lddqu   xmm0, xmmword ptr [rsi-87h] ; jumptable 0000000000405A1C case 135
.text:0000000000407A60                                         ; jumptable 0000000000405B78 case 135
.text:0000000000407A60                                         ; jumptable 0000000000405CB5 case 135
.text:0000000000407A60                                         ; jumptable 0000000000405E35 case 135
.text:0000000000407A60                                         ; jumptable 0000000000405FB5 case 135
.text:0000000000407A60                                         ; jumptable 0000000000406135 case 135
.text:0000000000407A60                                         ; jumptable 00000000004062B5 case 135
.text:0000000000407A60                                         ; jumptable 0000000000406435 case 135
.text:0000000000407A60                                         ; jumptable 00000000004065B5 case 135
.text:0000000000407A60                                         ; jumptable 0000000000406735 case 135
.text:0000000000407A60                                         ; jumptable 00000000004068B5 case 135
.text:0000000000407A60                                         ; jumptable 0000000000406A35 case 135
.text:0000000000407A60                                         ; jumptable 0000000000406BB5 case 135
.text:0000000000407A60                                         ; jumptable 0000000000406D36 case 135
.text:0000000000407A60                                         ; jumptable 0000000000406EB5 case 135
.text:0000000000407A60                                         ; jumptable 0000000000407035 case 135
.text:0000000000407A60                                         ; jumptable 00000000004071B5 case 135
.text:0000000000407A60                                         ; jumptable 000000000040741C case 135
.text:0000000000407A68                 movdqu  xmmword ptr [rdi-87h], xmm0
.text:0000000000407A70
.text:0000000000407A70 loc_407A70:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A70                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A70                 lddqu   xmm0, xmmword ptr [rsi-77h] ; jumptable 0000000000405A1C case 119
.text:0000000000407A70                                         ; jumptable 0000000000405B78 case 119
.text:0000000000407A70                                         ; jumptable 0000000000405CB5 case 119
.text:0000000000407A70                                         ; jumptable 0000000000405E35 case 119
.text:0000000000407A70                                         ; jumptable 0000000000405FB5 case 119
.text:0000000000407A70                                         ; jumptable 0000000000406135 case 119
.text:0000000000407A70                                         ; jumptable 00000000004062B5 case 119
.text:0000000000407A70                                         ; jumptable 0000000000406435 case 119
.text:0000000000407A70                                         ; jumptable 00000000004065B5 case 119
.text:0000000000407A70                                         ; jumptable 0000000000406735 case 119
.text:0000000000407A70                                         ; jumptable 00000000004068B5 case 119
.text:0000000000407A70                                         ; jumptable 0000000000406A35 case 119
.text:0000000000407A70                                         ; jumptable 0000000000406BB5 case 119
.text:0000000000407A70                                         ; jumptable 0000000000406D36 case 119
.text:0000000000407A70                                         ; jumptable 0000000000406EB5 case 119
.text:0000000000407A70                                         ; jumptable 0000000000407035 case 119
.text:0000000000407A70                                         ; jumptable 00000000004071B5 case 119
.text:0000000000407A70                                         ; jumptable 000000000040741C case 119
.text:0000000000407A75                 movdqu  xmmword ptr [rdi-77h], xmm0
.text:0000000000407A7A
.text:0000000000407A7A loc_407A7A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A7A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A7A                 lddqu   xmm0, xmmword ptr [rsi-67h] ; jumptable 0000000000405A1C case 103
.text:0000000000407A7A                                         ; jumptable 0000000000405B78 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000405CB5 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000405E35 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000405FB5 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000406135 case 103
.text:0000000000407A7A                                         ; jumptable 00000000004062B5 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000406435 case 103
.text:0000000000407A7A                                         ; jumptable 00000000004065B5 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000406735 case 103
.text:0000000000407A7A                                         ; jumptable 00000000004068B5 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000406A35 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000406BB5 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000406D36 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000406EB5 case 103
.text:0000000000407A7A                                         ; jumptable 0000000000407035 case 103
.text:0000000000407A7A                                         ; jumptable 00000000004071B5 case 103
.text:0000000000407A7A                                         ; jumptable 000000000040741C case 103
.text:0000000000407A7F                 movdqu  xmmword ptr [rdi-67h], xmm0
.text:0000000000407A84
.text:0000000000407A84 loc_407A84:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A84                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A84                 lddqu   xmm0, xmmword ptr [rsi-57h] ; jumptable 0000000000405A1C case 87
.text:0000000000407A84                                         ; jumptable 0000000000405B78 case 87
.text:0000000000407A84                                         ; jumptable 0000000000405CB5 case 87
.text:0000000000407A84                                         ; jumptable 0000000000405E35 case 87
.text:0000000000407A84                                         ; jumptable 0000000000405FB5 case 87
.text:0000000000407A84                                         ; jumptable 0000000000406135 case 87
.text:0000000000407A84                                         ; jumptable 00000000004062B5 case 87
.text:0000000000407A84                                         ; jumptable 0000000000406435 case 87
.text:0000000000407A84                                         ; jumptable 00000000004065B5 case 87
.text:0000000000407A84                                         ; jumptable 0000000000406735 case 87
.text:0000000000407A84                                         ; jumptable 00000000004068B5 case 87
.text:0000000000407A84                                         ; jumptable 0000000000406A35 case 87
.text:0000000000407A84                                         ; jumptable 0000000000406BB5 case 87
.text:0000000000407A84                                         ; jumptable 0000000000406D36 case 87
.text:0000000000407A84                                         ; jumptable 0000000000406EB5 case 87
.text:0000000000407A84                                         ; jumptable 0000000000407035 case 87
.text:0000000000407A84                                         ; jumptable 00000000004071B5 case 87
.text:0000000000407A84                                         ; jumptable 000000000040741C case 87
.text:0000000000407A89                 movdqu  xmmword ptr [rdi-57h], xmm0
.text:0000000000407A8E
.text:0000000000407A8E loc_407A8E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A8E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A8E                 lddqu   xmm0, xmmword ptr [rsi-47h] ; jumptable 0000000000405A1C case 71
.text:0000000000407A8E                                         ; jumptable 0000000000405B78 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000405CB5 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000405E35 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000405FB5 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000406135 case 71
.text:0000000000407A8E                                         ; jumptable 00000000004062B5 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000406435 case 71
.text:0000000000407A8E                                         ; jumptable 00000000004065B5 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000406735 case 71
.text:0000000000407A8E                                         ; jumptable 00000000004068B5 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000406A35 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000406BB5 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000406D36 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000406EB5 case 71
.text:0000000000407A8E                                         ; jumptable 0000000000407035 case 71
.text:0000000000407A8E                                         ; jumptable 00000000004071B5 case 71
.text:0000000000407A8E                                         ; jumptable 000000000040741C case 71
.text:0000000000407A93                 movdqu  xmmword ptr [rdi-47h], xmm0
.text:0000000000407A98
.text:0000000000407A98 loc_407A98:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407A98                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407A98                 lddqu   xmm0, xmmword ptr [rsi-37h] ; jumptable 0000000000405A1C case 55
.text:0000000000407A98                                         ; jumptable 0000000000405B78 case 55
.text:0000000000407A98                                         ; jumptable 0000000000405CB5 case 55
.text:0000000000407A98                                         ; jumptable 0000000000405E35 case 55
.text:0000000000407A98                                         ; jumptable 0000000000405FB5 case 55
.text:0000000000407A98                                         ; jumptable 0000000000406135 case 55
.text:0000000000407A98                                         ; jumptable 00000000004062B5 case 55
.text:0000000000407A98                                         ; jumptable 0000000000406435 case 55
.text:0000000000407A98                                         ; jumptable 00000000004065B5 case 55
.text:0000000000407A98                                         ; jumptable 0000000000406735 case 55
.text:0000000000407A98                                         ; jumptable 00000000004068B5 case 55
.text:0000000000407A98                                         ; jumptable 0000000000406A35 case 55
.text:0000000000407A98                                         ; jumptable 0000000000406BB5 case 55
.text:0000000000407A98                                         ; jumptable 0000000000406D36 case 55
.text:0000000000407A98                                         ; jumptable 0000000000406EB5 case 55
.text:0000000000407A98                                         ; jumptable 0000000000407035 case 55
.text:0000000000407A98                                         ; jumptable 00000000004071B5 case 55
.text:0000000000407A98                                         ; jumptable 000000000040741C case 55
.text:0000000000407A9D                 movdqu  xmmword ptr [rdi-37h], xmm0
.text:0000000000407AA2
.text:0000000000407AA2 loc_407AA2:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407AA2                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407AA2                 lddqu   xmm0, xmmword ptr [rsi-27h] ; jumptable 0000000000405A1C case 39
.text:0000000000407AA2                                         ; jumptable 0000000000405B78 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000405CB5 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000405E35 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000405FB5 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000406135 case 39
.text:0000000000407AA2                                         ; jumptable 00000000004062B5 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000406435 case 39
.text:0000000000407AA2                                         ; jumptable 00000000004065B5 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000406735 case 39
.text:0000000000407AA2                                         ; jumptable 00000000004068B5 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000406A35 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000406BB5 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000406D36 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000406EB5 case 39
.text:0000000000407AA2                                         ; jumptable 0000000000407035 case 39
.text:0000000000407AA2                                         ; jumptable 00000000004071B5 case 39
.text:0000000000407AA2                                         ; jumptable 000000000040741C case 39
.text:0000000000407AA7                 movdqu  xmmword ptr [rdi-27h], xmm0
.text:0000000000407AAC
.text:0000000000407AAC loc_407AAC:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407AAC                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407AAC                 lddqu   xmm0, xmmword ptr [rsi-17h] ; jumptable 0000000000405A1C case 23
.text:0000000000407AAC                                         ; jumptable 0000000000405B78 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000405CB5 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000405E35 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000405FB5 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000406135 case 23
.text:0000000000407AAC                                         ; jumptable 00000000004062B5 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000406435 case 23
.text:0000000000407AAC                                         ; jumptable 00000000004065B5 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000406735 case 23
.text:0000000000407AAC                                         ; jumptable 00000000004068B5 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000406A35 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000406BB5 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000406D36 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000406EB5 case 23
.text:0000000000407AAC                                         ; jumptable 0000000000407035 case 23
.text:0000000000407AAC                                         ; jumptable 00000000004071B5 case 23
.text:0000000000407AAC                                         ; jumptable 000000000040741C case 23
.text:0000000000407AB1                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407AB6                 movdqu  xmmword ptr [rdi-17h], xmm0
.text:0000000000407ABB                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407AC0                 retn
.text:0000000000407AC0 ; ---------------------------------------------------------------------------
.text:0000000000407AC1                 align 10h
.text:0000000000407AD0
.text:0000000000407AD0 loc_407AD0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407AD0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407AD0                 mov     edx, [rsi-7]    ; jumptable 0000000000405A1C case 7
.text:0000000000407AD0                                         ; jumptable 0000000000405B78 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000405CB5 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000405E35 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000405FB5 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000406135 case 7
.text:0000000000407AD0                                         ; jumptable 00000000004062B5 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000406435 case 7
.text:0000000000407AD0                                         ; jumptable 00000000004065B5 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000406735 case 7
.text:0000000000407AD0                                         ; jumptable 00000000004068B5 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000406A35 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000406BB5 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000406D36 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000406EB5 case 7
.text:0000000000407AD0                                         ; jumptable 0000000000407035 case 7
.text:0000000000407AD0                                         ; jumptable 00000000004071B5 case 7
.text:0000000000407AD0                                         ; jumptable 000000000040741C case 7
.text:0000000000407AD3                 mov     ecx, [rsi-4]
.text:0000000000407AD6                 mov     [rdi-7], edx
.text:0000000000407AD9                 mov     [rdi-4], ecx
.text:0000000000407ADC                 retn
.text:0000000000407ADC ; ---------------------------------------------------------------------------
.text:0000000000407ADD                 align 20h
.text:0000000000407AE0
.text:0000000000407AE0 loc_407AE0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407AE0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407AE0                 lddqu   xmm0, xmmword ptr [rsi-86h] ; jumptable 0000000000405A1C case 134
.text:0000000000407AE0                                         ; jumptable 0000000000405B78 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000405CB5 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000405E35 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000405FB5 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000406135 case 134
.text:0000000000407AE0                                         ; jumptable 00000000004062B5 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000406435 case 134
.text:0000000000407AE0                                         ; jumptable 00000000004065B5 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000406735 case 134
.text:0000000000407AE0                                         ; jumptable 00000000004068B5 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000406A35 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000406BB5 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000406D36 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000406EB5 case 134
.text:0000000000407AE0                                         ; jumptable 0000000000407035 case 134
.text:0000000000407AE0                                         ; jumptable 00000000004071B5 case 134
.text:0000000000407AE0                                         ; jumptable 000000000040741C case 134
.text:0000000000407AE8                 movdqu  xmmword ptr [rdi-86h], xmm0
.text:0000000000407AF0
.text:0000000000407AF0 loc_407AF0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407AF0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407AF0                 lddqu   xmm0, xmmword ptr [rsi-76h] ; jumptable 0000000000405A1C case 118
.text:0000000000407AF0                                         ; jumptable 0000000000405B78 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000405CB5 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000405E35 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000405FB5 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000406135 case 118
.text:0000000000407AF0                                         ; jumptable 00000000004062B5 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000406435 case 118
.text:0000000000407AF0                                         ; jumptable 00000000004065B5 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000406735 case 118
.text:0000000000407AF0                                         ; jumptable 00000000004068B5 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000406A35 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000406BB5 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000406D36 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000406EB5 case 118
.text:0000000000407AF0                                         ; jumptable 0000000000407035 case 118
.text:0000000000407AF0                                         ; jumptable 00000000004071B5 case 118
.text:0000000000407AF0                                         ; jumptable 000000000040741C case 118
.text:0000000000407AF5                 movdqu  xmmword ptr [rdi-76h], xmm0
.text:0000000000407AFA
.text:0000000000407AFA loc_407AFA:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407AFA                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407AFA                 lddqu   xmm0, xmmword ptr [rsi-66h] ; jumptable 0000000000405A1C case 102
.text:0000000000407AFA                                         ; jumptable 0000000000405B78 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000405CB5 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000405E35 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000405FB5 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000406135 case 102
.text:0000000000407AFA                                         ; jumptable 00000000004062B5 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000406435 case 102
.text:0000000000407AFA                                         ; jumptable 00000000004065B5 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000406735 case 102
.text:0000000000407AFA                                         ; jumptable 00000000004068B5 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000406A35 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000406BB5 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000406D36 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000406EB5 case 102
.text:0000000000407AFA                                         ; jumptable 0000000000407035 case 102
.text:0000000000407AFA                                         ; jumptable 00000000004071B5 case 102
.text:0000000000407AFA                                         ; jumptable 000000000040741C case 102
.text:0000000000407AFF                 movdqu  xmmword ptr [rdi-66h], xmm0
.text:0000000000407B04
.text:0000000000407B04 loc_407B04:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B04                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B04                 lddqu   xmm0, xmmword ptr [rsi-56h] ; jumptable 0000000000405A1C case 86
.text:0000000000407B04                                         ; jumptable 0000000000405B78 case 86
.text:0000000000407B04                                         ; jumptable 0000000000405CB5 case 86
.text:0000000000407B04                                         ; jumptable 0000000000405E35 case 86
.text:0000000000407B04                                         ; jumptable 0000000000405FB5 case 86
.text:0000000000407B04                                         ; jumptable 0000000000406135 case 86
.text:0000000000407B04                                         ; jumptable 00000000004062B5 case 86
.text:0000000000407B04                                         ; jumptable 0000000000406435 case 86
.text:0000000000407B04                                         ; jumptable 00000000004065B5 case 86
.text:0000000000407B04                                         ; jumptable 0000000000406735 case 86
.text:0000000000407B04                                         ; jumptable 00000000004068B5 case 86
.text:0000000000407B04                                         ; jumptable 0000000000406A35 case 86
.text:0000000000407B04                                         ; jumptable 0000000000406BB5 case 86
.text:0000000000407B04                                         ; jumptable 0000000000406D36 case 86
.text:0000000000407B04                                         ; jumptable 0000000000406EB5 case 86
.text:0000000000407B04                                         ; jumptable 0000000000407035 case 86
.text:0000000000407B04                                         ; jumptable 00000000004071B5 case 86
.text:0000000000407B04                                         ; jumptable 000000000040741C case 86
.text:0000000000407B09                 movdqu  xmmword ptr [rdi-56h], xmm0
.text:0000000000407B0E
.text:0000000000407B0E loc_407B0E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B0E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B0E                 lddqu   xmm0, xmmword ptr [rsi-46h] ; jumptable 0000000000405A1C case 70
.text:0000000000407B0E                                         ; jumptable 0000000000405B78 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000405CB5 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000405E35 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000405FB5 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000406135 case 70
.text:0000000000407B0E                                         ; jumptable 00000000004062B5 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000406435 case 70
.text:0000000000407B0E                                         ; jumptable 00000000004065B5 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000406735 case 70
.text:0000000000407B0E                                         ; jumptable 00000000004068B5 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000406A35 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000406BB5 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000406D36 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000406EB5 case 70
.text:0000000000407B0E                                         ; jumptable 0000000000407035 case 70
.text:0000000000407B0E                                         ; jumptable 00000000004071B5 case 70
.text:0000000000407B0E                                         ; jumptable 000000000040741C case 70
.text:0000000000407B13                 movdqu  xmmword ptr [rdi-46h], xmm0
.text:0000000000407B18
.text:0000000000407B18 loc_407B18:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B18                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B18                 lddqu   xmm0, xmmword ptr [rsi-36h] ; jumptable 0000000000405A1C case 54
.text:0000000000407B18                                         ; jumptable 0000000000405B78 case 54
.text:0000000000407B18                                         ; jumptable 0000000000405CB5 case 54
.text:0000000000407B18                                         ; jumptable 0000000000405E35 case 54
.text:0000000000407B18                                         ; jumptable 0000000000405FB5 case 54
.text:0000000000407B18                                         ; jumptable 0000000000406135 case 54
.text:0000000000407B18                                         ; jumptable 00000000004062B5 case 54
.text:0000000000407B18                                         ; jumptable 0000000000406435 case 54
.text:0000000000407B18                                         ; jumptable 00000000004065B5 case 54
.text:0000000000407B18                                         ; jumptable 0000000000406735 case 54
.text:0000000000407B18                                         ; jumptable 00000000004068B5 case 54
.text:0000000000407B18                                         ; jumptable 0000000000406A35 case 54
.text:0000000000407B18                                         ; jumptable 0000000000406BB5 case 54
.text:0000000000407B18                                         ; jumptable 0000000000406D36 case 54
.text:0000000000407B18                                         ; jumptable 0000000000406EB5 case 54
.text:0000000000407B18                                         ; jumptable 0000000000407035 case 54
.text:0000000000407B18                                         ; jumptable 00000000004071B5 case 54
.text:0000000000407B18                                         ; jumptable 000000000040741C case 54
.text:0000000000407B1D                 movdqu  xmmword ptr [rdi-36h], xmm0
.text:0000000000407B22
.text:0000000000407B22 loc_407B22:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B22                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B22                 lddqu   xmm0, xmmword ptr [rsi-26h] ; jumptable 0000000000405A1C case 38
.text:0000000000407B22                                         ; jumptable 0000000000405B78 case 38
.text:0000000000407B22                                         ; jumptable 0000000000405CB5 case 38
.text:0000000000407B22                                         ; jumptable 0000000000405E35 case 38
.text:0000000000407B22                                         ; jumptable 0000000000405FB5 case 38
.text:0000000000407B22                                         ; jumptable 0000000000406135 case 38
.text:0000000000407B22                                         ; jumptable 00000000004062B5 case 38
.text:0000000000407B22                                         ; jumptable 0000000000406435 case 38
.text:0000000000407B22                                         ; jumptable 00000000004065B5 case 38
.text:0000000000407B22                                         ; jumptable 0000000000406735 case 38
.text:0000000000407B22                                         ; jumptable 00000000004068B5 case 38
.text:0000000000407B22                                         ; jumptable 0000000000406A35 case 38
.text:0000000000407B22                                         ; jumptable 0000000000406BB5 case 38
.text:0000000000407B22                                         ; jumptable 0000000000406D36 case 38
.text:0000000000407B22                                         ; jumptable 0000000000406EB5 case 38
.text:0000000000407B22                                         ; jumptable 0000000000407035 case 38
.text:0000000000407B22                                         ; jumptable 00000000004071B5 case 38
.text:0000000000407B22                                         ; jumptable 000000000040741C case 38
.text:0000000000407B27                 movdqu  xmmword ptr [rdi-26h], xmm0
.text:0000000000407B2C
.text:0000000000407B2C loc_407B2C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B2C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B2C                 lddqu   xmm0, xmmword ptr [rsi-16h] ; jumptable 0000000000405A1C case 22
.text:0000000000407B2C                                         ; jumptable 0000000000405B78 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000405CB5 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000405E35 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000405FB5 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000406135 case 22
.text:0000000000407B2C                                         ; jumptable 00000000004062B5 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000406435 case 22
.text:0000000000407B2C                                         ; jumptable 00000000004065B5 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000406735 case 22
.text:0000000000407B2C                                         ; jumptable 00000000004068B5 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000406A35 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000406BB5 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000406D36 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000406EB5 case 22
.text:0000000000407B2C                                         ; jumptable 0000000000407035 case 22
.text:0000000000407B2C                                         ; jumptable 00000000004071B5 case 22
.text:0000000000407B2C                                         ; jumptable 000000000040741C case 22
.text:0000000000407B31                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407B36                 movdqu  xmmword ptr [rdi-16h], xmm0
.text:0000000000407B3B                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407B40                 retn
.text:0000000000407B40 ; ---------------------------------------------------------------------------
.text:0000000000407B41                 align 10h
.text:0000000000407B50
.text:0000000000407B50 loc_407B50:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B50                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B50                 mov     edx, [rsi-6]    ; jumptable 0000000000405A1C case 6
.text:0000000000407B50                                         ; jumptable 0000000000405B78 case 6
.text:0000000000407B50                                         ; jumptable 0000000000405CB5 case 6
.text:0000000000407B50                                         ; jumptable 0000000000405E35 case 6
.text:0000000000407B50                                         ; jumptable 0000000000405FB5 case 6
.text:0000000000407B50                                         ; jumptable 0000000000406135 case 6
.text:0000000000407B50                                         ; jumptable 00000000004062B5 case 6
.text:0000000000407B50                                         ; jumptable 0000000000406435 case 6
.text:0000000000407B50                                         ; jumptable 00000000004065B5 case 6
.text:0000000000407B50                                         ; jumptable 0000000000406735 case 6
.text:0000000000407B50                                         ; jumptable 00000000004068B5 case 6
.text:0000000000407B50                                         ; jumptable 0000000000406A35 case 6
.text:0000000000407B50                                         ; jumptable 0000000000406BB5 case 6
.text:0000000000407B50                                         ; jumptable 0000000000406D36 case 6
.text:0000000000407B50                                         ; jumptable 0000000000406EB5 case 6
.text:0000000000407B50                                         ; jumptable 0000000000407035 case 6
.text:0000000000407B50                                         ; jumptable 00000000004071B5 case 6
.text:0000000000407B50                                         ; jumptable 000000000040741C case 6
.text:0000000000407B53                 mov     ecx, [rsi-4]
.text:0000000000407B56                 mov     [rdi-6], edx
.text:0000000000407B59                 mov     [rdi-4], ecx
.text:0000000000407B5C                 retn
.text:0000000000407B5C ; ---------------------------------------------------------------------------
.text:0000000000407B5D                 align 20h
.text:0000000000407B60
.text:0000000000407B60 loc_407B60:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B60                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B60                 lddqu   xmm0, xmmword ptr [rsi-85h] ; jumptable 0000000000405A1C case 133
.text:0000000000407B60                                         ; jumptable 0000000000405B78 case 133
.text:0000000000407B60                                         ; jumptable 0000000000405CB5 case 133
.text:0000000000407B60                                         ; jumptable 0000000000405E35 case 133
.text:0000000000407B60                                         ; jumptable 0000000000405FB5 case 133
.text:0000000000407B60                                         ; jumptable 0000000000406135 case 133
.text:0000000000407B60                                         ; jumptable 00000000004062B5 case 133
.text:0000000000407B60                                         ; jumptable 0000000000406435 case 133
.text:0000000000407B60                                         ; jumptable 00000000004065B5 case 133
.text:0000000000407B60                                         ; jumptable 0000000000406735 case 133
.text:0000000000407B60                                         ; jumptable 00000000004068B5 case 133
.text:0000000000407B60                                         ; jumptable 0000000000406A35 case 133
.text:0000000000407B60                                         ; jumptable 0000000000406BB5 case 133
.text:0000000000407B60                                         ; jumptable 0000000000406D36 case 133
.text:0000000000407B60                                         ; jumptable 0000000000406EB5 case 133
.text:0000000000407B60                                         ; jumptable 0000000000407035 case 133
.text:0000000000407B60                                         ; jumptable 00000000004071B5 case 133
.text:0000000000407B60                                         ; jumptable 000000000040741C case 133
.text:0000000000407B68                 movdqu  xmmword ptr [rdi-85h], xmm0
.text:0000000000407B70
.text:0000000000407B70 loc_407B70:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B70                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B70                 lddqu   xmm0, xmmword ptr [rsi-75h] ; jumptable 0000000000405A1C case 117
.text:0000000000407B70                                         ; jumptable 0000000000405B78 case 117
.text:0000000000407B70                                         ; jumptable 0000000000405CB5 case 117
.text:0000000000407B70                                         ; jumptable 0000000000405E35 case 117
.text:0000000000407B70                                         ; jumptable 0000000000405FB5 case 117
.text:0000000000407B70                                         ; jumptable 0000000000406135 case 117
.text:0000000000407B70                                         ; jumptable 00000000004062B5 case 117
.text:0000000000407B70                                         ; jumptable 0000000000406435 case 117
.text:0000000000407B70                                         ; jumptable 00000000004065B5 case 117
.text:0000000000407B70                                         ; jumptable 0000000000406735 case 117
.text:0000000000407B70                                         ; jumptable 00000000004068B5 case 117
.text:0000000000407B70                                         ; jumptable 0000000000406A35 case 117
.text:0000000000407B70                                         ; jumptable 0000000000406BB5 case 117
.text:0000000000407B70                                         ; jumptable 0000000000406D36 case 117
.text:0000000000407B70                                         ; jumptable 0000000000406EB5 case 117
.text:0000000000407B70                                         ; jumptable 0000000000407035 case 117
.text:0000000000407B70                                         ; jumptable 00000000004071B5 case 117
.text:0000000000407B70                                         ; jumptable 000000000040741C case 117
.text:0000000000407B75                 movdqu  xmmword ptr [rdi-75h], xmm0
.text:0000000000407B7A
.text:0000000000407B7A loc_407B7A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B7A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B7A                 lddqu   xmm0, xmmword ptr [rsi-65h] ; jumptable 0000000000405A1C case 101
.text:0000000000407B7A                                         ; jumptable 0000000000405B78 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000405CB5 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000405E35 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000405FB5 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000406135 case 101
.text:0000000000407B7A                                         ; jumptable 00000000004062B5 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000406435 case 101
.text:0000000000407B7A                                         ; jumptable 00000000004065B5 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000406735 case 101
.text:0000000000407B7A                                         ; jumptable 00000000004068B5 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000406A35 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000406BB5 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000406D36 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000406EB5 case 101
.text:0000000000407B7A                                         ; jumptable 0000000000407035 case 101
.text:0000000000407B7A                                         ; jumptable 00000000004071B5 case 101
.text:0000000000407B7A                                         ; jumptable 000000000040741C case 101
.text:0000000000407B7F                 movdqu  xmmword ptr [rdi-65h], xmm0
.text:0000000000407B84
.text:0000000000407B84 loc_407B84:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B84                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B84                 lddqu   xmm0, xmmword ptr [rsi-55h] ; jumptable 0000000000405A1C case 85
.text:0000000000407B84                                         ; jumptable 0000000000405B78 case 85
.text:0000000000407B84                                         ; jumptable 0000000000405CB5 case 85
.text:0000000000407B84                                         ; jumptable 0000000000405E35 case 85
.text:0000000000407B84                                         ; jumptable 0000000000405FB5 case 85
.text:0000000000407B84                                         ; jumptable 0000000000406135 case 85
.text:0000000000407B84                                         ; jumptable 00000000004062B5 case 85
.text:0000000000407B84                                         ; jumptable 0000000000406435 case 85
.text:0000000000407B84                                         ; jumptable 00000000004065B5 case 85
.text:0000000000407B84                                         ; jumptable 0000000000406735 case 85
.text:0000000000407B84                                         ; jumptable 00000000004068B5 case 85
.text:0000000000407B84                                         ; jumptable 0000000000406A35 case 85
.text:0000000000407B84                                         ; jumptable 0000000000406BB5 case 85
.text:0000000000407B84                                         ; jumptable 0000000000406D36 case 85
.text:0000000000407B84                                         ; jumptable 0000000000406EB5 case 85
.text:0000000000407B84                                         ; jumptable 0000000000407035 case 85
.text:0000000000407B84                                         ; jumptable 00000000004071B5 case 85
.text:0000000000407B84                                         ; jumptable 000000000040741C case 85
.text:0000000000407B89                 movdqu  xmmword ptr [rdi-55h], xmm0
.text:0000000000407B8E
.text:0000000000407B8E loc_407B8E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B8E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B8E                 lddqu   xmm0, xmmword ptr [rsi-45h] ; jumptable 0000000000405A1C case 69
.text:0000000000407B8E                                         ; jumptable 0000000000405B78 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000405CB5 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000405E35 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000405FB5 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000406135 case 69
.text:0000000000407B8E                                         ; jumptable 00000000004062B5 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000406435 case 69
.text:0000000000407B8E                                         ; jumptable 00000000004065B5 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000406735 case 69
.text:0000000000407B8E                                         ; jumptable 00000000004068B5 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000406A35 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000406BB5 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000406D36 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000406EB5 case 69
.text:0000000000407B8E                                         ; jumptable 0000000000407035 case 69
.text:0000000000407B8E                                         ; jumptable 00000000004071B5 case 69
.text:0000000000407B8E                                         ; jumptable 000000000040741C case 69
.text:0000000000407B93                 movdqu  xmmword ptr [rdi-45h], xmm0
.text:0000000000407B98
.text:0000000000407B98 loc_407B98:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407B98                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407B98                 lddqu   xmm0, xmmword ptr [rsi-35h] ; jumptable 0000000000405A1C case 53
.text:0000000000407B98                                         ; jumptable 0000000000405B78 case 53
.text:0000000000407B98                                         ; jumptable 0000000000405CB5 case 53
.text:0000000000407B98                                         ; jumptable 0000000000405E35 case 53
.text:0000000000407B98                                         ; jumptable 0000000000405FB5 case 53
.text:0000000000407B98                                         ; jumptable 0000000000406135 case 53
.text:0000000000407B98                                         ; jumptable 00000000004062B5 case 53
.text:0000000000407B98                                         ; jumptable 0000000000406435 case 53
.text:0000000000407B98                                         ; jumptable 00000000004065B5 case 53
.text:0000000000407B98                                         ; jumptable 0000000000406735 case 53
.text:0000000000407B98                                         ; jumptable 00000000004068B5 case 53
.text:0000000000407B98                                         ; jumptable 0000000000406A35 case 53
.text:0000000000407B98                                         ; jumptable 0000000000406BB5 case 53
.text:0000000000407B98                                         ; jumptable 0000000000406D36 case 53
.text:0000000000407B98                                         ; jumptable 0000000000406EB5 case 53
.text:0000000000407B98                                         ; jumptable 0000000000407035 case 53
.text:0000000000407B98                                         ; jumptable 00000000004071B5 case 53
.text:0000000000407B98                                         ; jumptable 000000000040741C case 53
.text:0000000000407B9D                 movdqu  xmmword ptr [rdi-35h], xmm0
.text:0000000000407BA2
.text:0000000000407BA2 loc_407BA2:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407BA2                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407BA2                 lddqu   xmm0, xmmword ptr [rsi-25h] ; jumptable 0000000000405A1C case 37
.text:0000000000407BA2                                         ; jumptable 0000000000405B78 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000405CB5 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000405E35 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000405FB5 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000406135 case 37
.text:0000000000407BA2                                         ; jumptable 00000000004062B5 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000406435 case 37
.text:0000000000407BA2                                         ; jumptable 00000000004065B5 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000406735 case 37
.text:0000000000407BA2                                         ; jumptable 00000000004068B5 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000406A35 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000406BB5 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000406D36 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000406EB5 case 37
.text:0000000000407BA2                                         ; jumptable 0000000000407035 case 37
.text:0000000000407BA2                                         ; jumptable 00000000004071B5 case 37
.text:0000000000407BA2                                         ; jumptable 000000000040741C case 37
.text:0000000000407BA7                 movdqu  xmmword ptr [rdi-25h], xmm0
.text:0000000000407BAC
.text:0000000000407BAC loc_407BAC:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407BAC                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407BAC                 lddqu   xmm0, xmmword ptr [rsi-15h] ; jumptable 0000000000405A1C case 21
.text:0000000000407BAC                                         ; jumptable 0000000000405B78 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000405CB5 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000405E35 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000405FB5 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000406135 case 21
.text:0000000000407BAC                                         ; jumptable 00000000004062B5 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000406435 case 21
.text:0000000000407BAC                                         ; jumptable 00000000004065B5 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000406735 case 21
.text:0000000000407BAC                                         ; jumptable 00000000004068B5 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000406A35 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000406BB5 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000406D36 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000406EB5 case 21
.text:0000000000407BAC                                         ; jumptable 0000000000407035 case 21
.text:0000000000407BAC                                         ; jumptable 00000000004071B5 case 21
.text:0000000000407BAC                                         ; jumptable 000000000040741C case 21
.text:0000000000407BB1                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407BB6                 movdqu  xmmword ptr [rdi-15h], xmm0
.text:0000000000407BBB                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407BC0                 retn
.text:0000000000407BC0 ; ---------------------------------------------------------------------------
.text:0000000000407BC1                 align 10h
.text:0000000000407BD0
.text:0000000000407BD0 loc_407BD0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407BD0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407BD0                 mov     edx, [rsi-5]    ; jumptable 0000000000405A1C case 5
.text:0000000000407BD0                                         ; jumptable 0000000000405B78 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000405CB5 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000405E35 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000405FB5 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000406135 case 5
.text:0000000000407BD0                                         ; jumptable 00000000004062B5 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000406435 case 5
.text:0000000000407BD0                                         ; jumptable 00000000004065B5 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000406735 case 5
.text:0000000000407BD0                                         ; jumptable 00000000004068B5 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000406A35 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000406BB5 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000406D36 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000406EB5 case 5
.text:0000000000407BD0                                         ; jumptable 0000000000407035 case 5
.text:0000000000407BD0                                         ; jumptable 00000000004071B5 case 5
.text:0000000000407BD0                                         ; jumptable 000000000040741C case 5
.text:0000000000407BD3                 mov     ecx, [rsi-4]
.text:0000000000407BD6                 mov     [rdi-5], edx
.text:0000000000407BD9                 mov     [rdi-4], ecx
.text:0000000000407BDC                 retn
.text:0000000000407BDC ; ---------------------------------------------------------------------------
.text:0000000000407BDD                 align 20h
.text:0000000000407BE0
.text:0000000000407BE0 loc_407BE0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407BE0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407BE0                 lddqu   xmm0, xmmword ptr [rsi-84h] ; jumptable 0000000000405A1C case 132
.text:0000000000407BE0                                         ; jumptable 0000000000405B78 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000405CB5 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000405E35 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000405FB5 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000406135 case 132
.text:0000000000407BE0                                         ; jumptable 00000000004062B5 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000406435 case 132
.text:0000000000407BE0                                         ; jumptable 00000000004065B5 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000406735 case 132
.text:0000000000407BE0                                         ; jumptable 00000000004068B5 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000406A35 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000406BB5 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000406D36 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000406EB5 case 132
.text:0000000000407BE0                                         ; jumptable 0000000000407035 case 132
.text:0000000000407BE0                                         ; jumptable 00000000004071B5 case 132
.text:0000000000407BE0                                         ; jumptable 000000000040741C case 132
.text:0000000000407BE8                 movdqu  xmmword ptr [rdi-84h], xmm0
.text:0000000000407BF0
.text:0000000000407BF0 loc_407BF0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407BF0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407BF0                 lddqu   xmm0, xmmword ptr [rsi-74h] ; jumptable 0000000000405A1C case 116
.text:0000000000407BF0                                         ; jumptable 0000000000405B78 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000405CB5 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000405E35 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000405FB5 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000406135 case 116
.text:0000000000407BF0                                         ; jumptable 00000000004062B5 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000406435 case 116
.text:0000000000407BF0                                         ; jumptable 00000000004065B5 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000406735 case 116
.text:0000000000407BF0                                         ; jumptable 00000000004068B5 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000406A35 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000406BB5 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000406D36 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000406EB5 case 116
.text:0000000000407BF0                                         ; jumptable 0000000000407035 case 116
.text:0000000000407BF0                                         ; jumptable 00000000004071B5 case 116
.text:0000000000407BF0                                         ; jumptable 000000000040741C case 116
.text:0000000000407BF5                 movdqu  xmmword ptr [rdi-74h], xmm0
.text:0000000000407BFA
.text:0000000000407BFA loc_407BFA:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407BFA                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407BFA                 lddqu   xmm0, xmmword ptr [rsi-64h] ; jumptable 0000000000405A1C case 100
.text:0000000000407BFA                                         ; jumptable 0000000000405B78 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000405CB5 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000405E35 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000405FB5 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000406135 case 100
.text:0000000000407BFA                                         ; jumptable 00000000004062B5 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000406435 case 100
.text:0000000000407BFA                                         ; jumptable 00000000004065B5 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000406735 case 100
.text:0000000000407BFA                                         ; jumptable 00000000004068B5 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000406A35 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000406BB5 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000406D36 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000406EB5 case 100
.text:0000000000407BFA                                         ; jumptable 0000000000407035 case 100
.text:0000000000407BFA                                         ; jumptable 00000000004071B5 case 100
.text:0000000000407BFA                                         ; jumptable 000000000040741C case 100
.text:0000000000407BFF                 movdqu  xmmword ptr [rdi-64h], xmm0
.text:0000000000407C04
.text:0000000000407C04 loc_407C04:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C04                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C04                 lddqu   xmm0, xmmword ptr [rsi-54h] ; jumptable 0000000000405A1C case 84
.text:0000000000407C04                                         ; jumptable 0000000000405B78 case 84
.text:0000000000407C04                                         ; jumptable 0000000000405CB5 case 84
.text:0000000000407C04                                         ; jumptable 0000000000405E35 case 84
.text:0000000000407C04                                         ; jumptable 0000000000405FB5 case 84
.text:0000000000407C04                                         ; jumptable 0000000000406135 case 84
.text:0000000000407C04                                         ; jumptable 00000000004062B5 case 84
.text:0000000000407C04                                         ; jumptable 0000000000406435 case 84
.text:0000000000407C04                                         ; jumptable 00000000004065B5 case 84
.text:0000000000407C04                                         ; jumptable 0000000000406735 case 84
.text:0000000000407C04                                         ; jumptable 00000000004068B5 case 84
.text:0000000000407C04                                         ; jumptable 0000000000406A35 case 84
.text:0000000000407C04                                         ; jumptable 0000000000406BB5 case 84
.text:0000000000407C04                                         ; jumptable 0000000000406D36 case 84
.text:0000000000407C04                                         ; jumptable 0000000000406EB5 case 84
.text:0000000000407C04                                         ; jumptable 0000000000407035 case 84
.text:0000000000407C04                                         ; jumptable 00000000004071B5 case 84
.text:0000000000407C04                                         ; jumptable 000000000040741C case 84
.text:0000000000407C09                 movdqu  xmmword ptr [rdi-54h], xmm0
.text:0000000000407C0E
.text:0000000000407C0E loc_407C0E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C0E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C0E                 lddqu   xmm0, xmmword ptr [rsi-44h] ; jumptable 0000000000405A1C case 68
.text:0000000000407C0E                                         ; jumptable 0000000000405B78 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000405CB5 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000405E35 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000405FB5 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000406135 case 68
.text:0000000000407C0E                                         ; jumptable 00000000004062B5 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000406435 case 68
.text:0000000000407C0E                                         ; jumptable 00000000004065B5 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000406735 case 68
.text:0000000000407C0E                                         ; jumptable 00000000004068B5 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000406A35 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000406BB5 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000406D36 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000406EB5 case 68
.text:0000000000407C0E                                         ; jumptable 0000000000407035 case 68
.text:0000000000407C0E                                         ; jumptable 00000000004071B5 case 68
.text:0000000000407C0E                                         ; jumptable 000000000040741C case 68
.text:0000000000407C13                 movdqu  xmmword ptr [rdi-44h], xmm0
.text:0000000000407C18
.text:0000000000407C18 loc_407C18:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C18                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C18                 lddqu   xmm0, xmmword ptr [rsi-34h] ; jumptable 0000000000405A1C case 52
.text:0000000000407C18                                         ; jumptable 0000000000405B78 case 52
.text:0000000000407C18                                         ; jumptable 0000000000405CB5 case 52
.text:0000000000407C18                                         ; jumptable 0000000000405E35 case 52
.text:0000000000407C18                                         ; jumptable 0000000000405FB5 case 52
.text:0000000000407C18                                         ; jumptable 0000000000406135 case 52
.text:0000000000407C18                                         ; jumptable 00000000004062B5 case 52
.text:0000000000407C18                                         ; jumptable 0000000000406435 case 52
.text:0000000000407C18                                         ; jumptable 00000000004065B5 case 52
.text:0000000000407C18                                         ; jumptable 0000000000406735 case 52
.text:0000000000407C18                                         ; jumptable 00000000004068B5 case 52
.text:0000000000407C18                                         ; jumptable 0000000000406A35 case 52
.text:0000000000407C18                                         ; jumptable 0000000000406BB5 case 52
.text:0000000000407C18                                         ; jumptable 0000000000406D36 case 52
.text:0000000000407C18                                         ; jumptable 0000000000406EB5 case 52
.text:0000000000407C18                                         ; jumptable 0000000000407035 case 52
.text:0000000000407C18                                         ; jumptable 00000000004071B5 case 52
.text:0000000000407C18                                         ; jumptable 000000000040741C case 52
.text:0000000000407C1D                 movdqu  xmmword ptr [rdi-34h], xmm0
.text:0000000000407C22
.text:0000000000407C22 loc_407C22:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C22                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C22                 lddqu   xmm0, xmmword ptr [rsi-24h] ; jumptable 0000000000405A1C case 36
.text:0000000000407C22                                         ; jumptable 0000000000405B78 case 36
.text:0000000000407C22                                         ; jumptable 0000000000405CB5 case 36
.text:0000000000407C22                                         ; jumptable 0000000000405E35 case 36
.text:0000000000407C22                                         ; jumptable 0000000000405FB5 case 36
.text:0000000000407C22                                         ; jumptable 0000000000406135 case 36
.text:0000000000407C22                                         ; jumptable 00000000004062B5 case 36
.text:0000000000407C22                                         ; jumptable 0000000000406435 case 36
.text:0000000000407C22                                         ; jumptable 00000000004065B5 case 36
.text:0000000000407C22                                         ; jumptable 0000000000406735 case 36
.text:0000000000407C22                                         ; jumptable 00000000004068B5 case 36
.text:0000000000407C22                                         ; jumptable 0000000000406A35 case 36
.text:0000000000407C22                                         ; jumptable 0000000000406BB5 case 36
.text:0000000000407C22                                         ; jumptable 0000000000406D36 case 36
.text:0000000000407C22                                         ; jumptable 0000000000406EB5 case 36
.text:0000000000407C22                                         ; jumptable 0000000000407035 case 36
.text:0000000000407C22                                         ; jumptable 00000000004071B5 case 36
.text:0000000000407C22                                         ; jumptable 000000000040741C case 36
.text:0000000000407C27                 movdqu  xmmword ptr [rdi-24h], xmm0
.text:0000000000407C2C
.text:0000000000407C2C loc_407C2C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C2C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C2C                 lddqu   xmm0, xmmword ptr [rsi-14h] ; jumptable 0000000000405A1C case 20
.text:0000000000407C2C                                         ; jumptable 0000000000405B78 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000405CB5 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000405E35 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000405FB5 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000406135 case 20
.text:0000000000407C2C                                         ; jumptable 00000000004062B5 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000406435 case 20
.text:0000000000407C2C                                         ; jumptable 00000000004065B5 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000406735 case 20
.text:0000000000407C2C                                         ; jumptable 00000000004068B5 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000406A35 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000406BB5 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000406D36 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000406EB5 case 20
.text:0000000000407C2C                                         ; jumptable 0000000000407035 case 20
.text:0000000000407C2C                                         ; jumptable 00000000004071B5 case 20
.text:0000000000407C2C                                         ; jumptable 000000000040741C case 20
.text:0000000000407C31                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407C36                 movdqu  xmmword ptr [rdi-14h], xmm0
.text:0000000000407C3B                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407C40                 retn
.text:0000000000407C40 ; ---------------------------------------------------------------------------
.text:0000000000407C41                 align 10h
.text:0000000000407C50
.text:0000000000407C50 loc_407C50:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C50                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C50                 mov     edx, [rsi-4]    ; jumptable 0000000000405A1C case 4
.text:0000000000407C50                                         ; jumptable 0000000000405B78 case 4
.text:0000000000407C50                                         ; jumptable 0000000000405CB5 case 4
.text:0000000000407C50                                         ; jumptable 0000000000405E35 case 4
.text:0000000000407C50                                         ; jumptable 0000000000405FB5 case 4
.text:0000000000407C50                                         ; jumptable 0000000000406135 case 4
.text:0000000000407C50                                         ; jumptable 00000000004062B5 case 4
.text:0000000000407C50                                         ; jumptable 0000000000406435 case 4
.text:0000000000407C50                                         ; jumptable 00000000004065B5 case 4
.text:0000000000407C50                                         ; jumptable 0000000000406735 case 4
.text:0000000000407C50                                         ; jumptable 00000000004068B5 case 4
.text:0000000000407C50                                         ; jumptable 0000000000406A35 case 4
.text:0000000000407C50                                         ; jumptable 0000000000406BB5 case 4
.text:0000000000407C50                                         ; jumptable 0000000000406D36 case 4
.text:0000000000407C50                                         ; jumptable 0000000000406EB5 case 4
.text:0000000000407C50                                         ; jumptable 0000000000407035 case 4
.text:0000000000407C50                                         ; jumptable 00000000004071B5 case 4
.text:0000000000407C50                                         ; jumptable 000000000040741C case 4
.text:0000000000407C53                 mov     [rdi-4], edx
.text:0000000000407C56                 retn
.text:0000000000407C56 ; ---------------------------------------------------------------------------
.text:0000000000407C57                 align 20h
.text:0000000000407C60
.text:0000000000407C60 loc_407C60:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C60                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C60                 lddqu   xmm0, xmmword ptr [rsi-83h] ; jumptable 0000000000405A1C case 131
.text:0000000000407C60                                         ; jumptable 0000000000405B78 case 131
.text:0000000000407C60                                         ; jumptable 0000000000405CB5 case 131
.text:0000000000407C60                                         ; jumptable 0000000000405E35 case 131
.text:0000000000407C60                                         ; jumptable 0000000000405FB5 case 131
.text:0000000000407C60                                         ; jumptable 0000000000406135 case 131
.text:0000000000407C60                                         ; jumptable 00000000004062B5 case 131
.text:0000000000407C60                                         ; jumptable 0000000000406435 case 131
.text:0000000000407C60                                         ; jumptable 00000000004065B5 case 131
.text:0000000000407C60                                         ; jumptable 0000000000406735 case 131
.text:0000000000407C60                                         ; jumptable 00000000004068B5 case 131
.text:0000000000407C60                                         ; jumptable 0000000000406A35 case 131
.text:0000000000407C60                                         ; jumptable 0000000000406BB5 case 131
.text:0000000000407C60                                         ; jumptable 0000000000406D36 case 131
.text:0000000000407C60                                         ; jumptable 0000000000406EB5 case 131
.text:0000000000407C60                                         ; jumptable 0000000000407035 case 131
.text:0000000000407C60                                         ; jumptable 00000000004071B5 case 131
.text:0000000000407C60                                         ; jumptable 000000000040741C case 131
.text:0000000000407C68                 movdqu  xmmword ptr [rdi-83h], xmm0
.text:0000000000407C70
.text:0000000000407C70 loc_407C70:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C70                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C70                 lddqu   xmm0, xmmword ptr [rsi-73h] ; jumptable 0000000000405A1C case 115
.text:0000000000407C70                                         ; jumptable 0000000000405B78 case 115
.text:0000000000407C70                                         ; jumptable 0000000000405CB5 case 115
.text:0000000000407C70                                         ; jumptable 0000000000405E35 case 115
.text:0000000000407C70                                         ; jumptable 0000000000405FB5 case 115
.text:0000000000407C70                                         ; jumptable 0000000000406135 case 115
.text:0000000000407C70                                         ; jumptable 00000000004062B5 case 115
.text:0000000000407C70                                         ; jumptable 0000000000406435 case 115
.text:0000000000407C70                                         ; jumptable 00000000004065B5 case 115
.text:0000000000407C70                                         ; jumptable 0000000000406735 case 115
.text:0000000000407C70                                         ; jumptable 00000000004068B5 case 115
.text:0000000000407C70                                         ; jumptable 0000000000406A35 case 115
.text:0000000000407C70                                         ; jumptable 0000000000406BB5 case 115
.text:0000000000407C70                                         ; jumptable 0000000000406D36 case 115
.text:0000000000407C70                                         ; jumptable 0000000000406EB5 case 115
.text:0000000000407C70                                         ; jumptable 0000000000407035 case 115
.text:0000000000407C70                                         ; jumptable 00000000004071B5 case 115
.text:0000000000407C70                                         ; jumptable 000000000040741C case 115
.text:0000000000407C75                 movdqu  xmmword ptr [rdi-73h], xmm0
.text:0000000000407C7A
.text:0000000000407C7A loc_407C7A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C7A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C7A                 lddqu   xmm0, xmmword ptr [rsi-63h] ; jumptable 0000000000405A1C case 99
.text:0000000000407C7A                                         ; jumptable 0000000000405B78 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000405CB5 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000405E35 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000405FB5 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000406135 case 99
.text:0000000000407C7A                                         ; jumptable 00000000004062B5 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000406435 case 99
.text:0000000000407C7A                                         ; jumptable 00000000004065B5 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000406735 case 99
.text:0000000000407C7A                                         ; jumptable 00000000004068B5 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000406A35 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000406BB5 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000406D36 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000406EB5 case 99
.text:0000000000407C7A                                         ; jumptable 0000000000407035 case 99
.text:0000000000407C7A                                         ; jumptable 00000000004071B5 case 99
.text:0000000000407C7A                                         ; jumptable 000000000040741C case 99
.text:0000000000407C7F                 movdqu  xmmword ptr [rdi-63h], xmm0
.text:0000000000407C84
.text:0000000000407C84 loc_407C84:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C84                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C84                 lddqu   xmm0, xmmword ptr [rsi-53h] ; jumptable 0000000000405A1C case 83
.text:0000000000407C84                                         ; jumptable 0000000000405B78 case 83
.text:0000000000407C84                                         ; jumptable 0000000000405CB5 case 83
.text:0000000000407C84                                         ; jumptable 0000000000405E35 case 83
.text:0000000000407C84                                         ; jumptable 0000000000405FB5 case 83
.text:0000000000407C84                                         ; jumptable 0000000000406135 case 83
.text:0000000000407C84                                         ; jumptable 00000000004062B5 case 83
.text:0000000000407C84                                         ; jumptable 0000000000406435 case 83
.text:0000000000407C84                                         ; jumptable 00000000004065B5 case 83
.text:0000000000407C84                                         ; jumptable 0000000000406735 case 83
.text:0000000000407C84                                         ; jumptable 00000000004068B5 case 83
.text:0000000000407C84                                         ; jumptable 0000000000406A35 case 83
.text:0000000000407C84                                         ; jumptable 0000000000406BB5 case 83
.text:0000000000407C84                                         ; jumptable 0000000000406D36 case 83
.text:0000000000407C84                                         ; jumptable 0000000000406EB5 case 83
.text:0000000000407C84                                         ; jumptable 0000000000407035 case 83
.text:0000000000407C84                                         ; jumptable 00000000004071B5 case 83
.text:0000000000407C84                                         ; jumptable 000000000040741C case 83
.text:0000000000407C89                 movdqu  xmmword ptr [rdi-53h], xmm0
.text:0000000000407C8E
.text:0000000000407C8E loc_407C8E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C8E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C8E                 lddqu   xmm0, xmmword ptr [rsi-43h] ; jumptable 0000000000405A1C case 67
.text:0000000000407C8E                                         ; jumptable 0000000000405B78 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000405CB5 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000405E35 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000405FB5 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000406135 case 67
.text:0000000000407C8E                                         ; jumptable 00000000004062B5 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000406435 case 67
.text:0000000000407C8E                                         ; jumptable 00000000004065B5 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000406735 case 67
.text:0000000000407C8E                                         ; jumptable 00000000004068B5 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000406A35 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000406BB5 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000406D36 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000406EB5 case 67
.text:0000000000407C8E                                         ; jumptable 0000000000407035 case 67
.text:0000000000407C8E                                         ; jumptable 00000000004071B5 case 67
.text:0000000000407C8E                                         ; jumptable 000000000040741C case 67
.text:0000000000407C93                 movdqu  xmmword ptr [rdi-43h], xmm0
.text:0000000000407C98
.text:0000000000407C98 loc_407C98:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407C98                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407C98                 lddqu   xmm0, xmmword ptr [rsi-33h] ; jumptable 0000000000405A1C case 51
.text:0000000000407C98                                         ; jumptable 0000000000405B78 case 51
.text:0000000000407C98                                         ; jumptable 0000000000405CB5 case 51
.text:0000000000407C98                                         ; jumptable 0000000000405E35 case 51
.text:0000000000407C98                                         ; jumptable 0000000000405FB5 case 51
.text:0000000000407C98                                         ; jumptable 0000000000406135 case 51
.text:0000000000407C98                                         ; jumptable 00000000004062B5 case 51
.text:0000000000407C98                                         ; jumptable 0000000000406435 case 51
.text:0000000000407C98                                         ; jumptable 00000000004065B5 case 51
.text:0000000000407C98                                         ; jumptable 0000000000406735 case 51
.text:0000000000407C98                                         ; jumptable 00000000004068B5 case 51
.text:0000000000407C98                                         ; jumptable 0000000000406A35 case 51
.text:0000000000407C98                                         ; jumptable 0000000000406BB5 case 51
.text:0000000000407C98                                         ; jumptable 0000000000406D36 case 51
.text:0000000000407C98                                         ; jumptable 0000000000406EB5 case 51
.text:0000000000407C98                                         ; jumptable 0000000000407035 case 51
.text:0000000000407C98                                         ; jumptable 00000000004071B5 case 51
.text:0000000000407C98                                         ; jumptable 000000000040741C case 51
.text:0000000000407C9D                 movdqu  xmmword ptr [rdi-33h], xmm0
.text:0000000000407CA2
.text:0000000000407CA2 loc_407CA2:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407CA2                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407CA2                 lddqu   xmm0, xmmword ptr [rsi-23h] ; jumptable 0000000000405A1C case 35
.text:0000000000407CA2                                         ; jumptable 0000000000405B78 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000405CB5 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000405E35 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000405FB5 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000406135 case 35
.text:0000000000407CA2                                         ; jumptable 00000000004062B5 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000406435 case 35
.text:0000000000407CA2                                         ; jumptable 00000000004065B5 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000406735 case 35
.text:0000000000407CA2                                         ; jumptable 00000000004068B5 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000406A35 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000406BB5 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000406D36 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000406EB5 case 35
.text:0000000000407CA2                                         ; jumptable 0000000000407035 case 35
.text:0000000000407CA2                                         ; jumptable 00000000004071B5 case 35
.text:0000000000407CA2                                         ; jumptable 000000000040741C case 35
.text:0000000000407CA7                 movdqu  xmmword ptr [rdi-23h], xmm0
.text:0000000000407CAC
.text:0000000000407CAC loc_407CAC:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407CAC                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407CAC                 lddqu   xmm0, xmmword ptr [rsi-13h] ; jumptable 0000000000405A1C case 19
.text:0000000000407CAC                                         ; jumptable 0000000000405B78 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000405CB5 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000405E35 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000405FB5 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000406135 case 19
.text:0000000000407CAC                                         ; jumptable 00000000004062B5 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000406435 case 19
.text:0000000000407CAC                                         ; jumptable 00000000004065B5 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000406735 case 19
.text:0000000000407CAC                                         ; jumptable 00000000004068B5 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000406A35 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000406BB5 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000406D36 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000406EB5 case 19
.text:0000000000407CAC                                         ; jumptable 0000000000407035 case 19
.text:0000000000407CAC                                         ; jumptable 00000000004071B5 case 19
.text:0000000000407CAC                                         ; jumptable 000000000040741C case 19
.text:0000000000407CB1                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407CB6                 movdqu  xmmword ptr [rdi-13h], xmm0
.text:0000000000407CBB                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407CC0                 retn
.text:0000000000407CC0 ; ---------------------------------------------------------------------------
.text:0000000000407CC1                 align 10h
.text:0000000000407CD0
.text:0000000000407CD0 loc_407CD0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407CD0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407CD0                 mov     dx, [rsi-3]     ; jumptable 0000000000405A1C case 3
.text:0000000000407CD0                                         ; jumptable 0000000000405B78 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000405CB5 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000405E35 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000405FB5 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000406135 case 3
.text:0000000000407CD0                                         ; jumptable 00000000004062B5 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000406435 case 3
.text:0000000000407CD0                                         ; jumptable 00000000004065B5 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000406735 case 3
.text:0000000000407CD0                                         ; jumptable 00000000004068B5 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000406A35 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000406BB5 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000406D36 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000406EB5 case 3
.text:0000000000407CD0                                         ; jumptable 0000000000407035 case 3
.text:0000000000407CD0                                         ; jumptable 00000000004071B5 case 3
.text:0000000000407CD0                                         ; jumptable 000000000040741C case 3
.text:0000000000407CD4                 mov     cx, [rsi-2]
.text:0000000000407CD8                 mov     [rdi-3], dx
.text:0000000000407CDC                 mov     [rdi-2], cx
.text:0000000000407CE0                 retn
.text:0000000000407CE0 ; ---------------------------------------------------------------------------
.text:0000000000407CE1                 align 10h
.text:0000000000407CF0
.text:0000000000407CF0 loc_407CF0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407CF0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407CF0                 lddqu   xmm0, xmmword ptr [rsi-82h] ; jumptable 0000000000405A1C case 130
.text:0000000000407CF0                                         ; jumptable 0000000000405B78 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000405CB5 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000405E35 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000405FB5 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000406135 case 130
.text:0000000000407CF0                                         ; jumptable 00000000004062B5 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000406435 case 130
.text:0000000000407CF0                                         ; jumptable 00000000004065B5 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000406735 case 130
.text:0000000000407CF0                                         ; jumptable 00000000004068B5 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000406A35 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000406BB5 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000406D36 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000406EB5 case 130
.text:0000000000407CF0                                         ; jumptable 0000000000407035 case 130
.text:0000000000407CF0                                         ; jumptable 00000000004071B5 case 130
.text:0000000000407CF0                                         ; jumptable 000000000040741C case 130
.text:0000000000407CF8                 movdqu  xmmword ptr [rdi-82h], xmm0
.text:0000000000407D00
.text:0000000000407D00 loc_407D00:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D00                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D00                 lddqu   xmm0, xmmword ptr [rsi-72h] ; jumptable 0000000000405A1C case 114
.text:0000000000407D00                                         ; jumptable 0000000000405B78 case 114
.text:0000000000407D00                                         ; jumptable 0000000000405CB5 case 114
.text:0000000000407D00                                         ; jumptable 0000000000405E35 case 114
.text:0000000000407D00                                         ; jumptable 0000000000405FB5 case 114
.text:0000000000407D00                                         ; jumptable 0000000000406135 case 114
.text:0000000000407D00                                         ; jumptable 00000000004062B5 case 114
.text:0000000000407D00                                         ; jumptable 0000000000406435 case 114
.text:0000000000407D00                                         ; jumptable 00000000004065B5 case 114
.text:0000000000407D00                                         ; jumptable 0000000000406735 case 114
.text:0000000000407D00                                         ; jumptable 00000000004068B5 case 114
.text:0000000000407D00                                         ; jumptable 0000000000406A35 case 114
.text:0000000000407D00                                         ; jumptable 0000000000406BB5 case 114
.text:0000000000407D00                                         ; jumptable 0000000000406D36 case 114
.text:0000000000407D00                                         ; jumptable 0000000000406EB5 case 114
.text:0000000000407D00                                         ; jumptable 0000000000407035 case 114
.text:0000000000407D00                                         ; jumptable 00000000004071B5 case 114
.text:0000000000407D00                                         ; jumptable 000000000040741C case 114
.text:0000000000407D05                 movdqu  xmmword ptr [rdi-72h], xmm0
.text:0000000000407D0A
.text:0000000000407D0A loc_407D0A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D0A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D0A                 lddqu   xmm0, xmmword ptr [rsi-62h] ; jumptable 0000000000405A1C case 98
.text:0000000000407D0A                                         ; jumptable 0000000000405B78 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000405CB5 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000405E35 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000405FB5 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000406135 case 98
.text:0000000000407D0A                                         ; jumptable 00000000004062B5 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000406435 case 98
.text:0000000000407D0A                                         ; jumptable 00000000004065B5 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000406735 case 98
.text:0000000000407D0A                                         ; jumptable 00000000004068B5 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000406A35 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000406BB5 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000406D36 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000406EB5 case 98
.text:0000000000407D0A                                         ; jumptable 0000000000407035 case 98
.text:0000000000407D0A                                         ; jumptable 00000000004071B5 case 98
.text:0000000000407D0A                                         ; jumptable 000000000040741C case 98
.text:0000000000407D0F                 movdqu  xmmword ptr [rdi-62h], xmm0
.text:0000000000407D14
.text:0000000000407D14 loc_407D14:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D14                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D14                 lddqu   xmm0, xmmword ptr [rsi-52h] ; jumptable 0000000000405A1C case 82
.text:0000000000407D14                                         ; jumptable 0000000000405B78 case 82
.text:0000000000407D14                                         ; jumptable 0000000000405CB5 case 82
.text:0000000000407D14                                         ; jumptable 0000000000405E35 case 82
.text:0000000000407D14                                         ; jumptable 0000000000405FB5 case 82
.text:0000000000407D14                                         ; jumptable 0000000000406135 case 82
.text:0000000000407D14                                         ; jumptable 00000000004062B5 case 82
.text:0000000000407D14                                         ; jumptable 0000000000406435 case 82
.text:0000000000407D14                                         ; jumptable 00000000004065B5 case 82
.text:0000000000407D14                                         ; jumptable 0000000000406735 case 82
.text:0000000000407D14                                         ; jumptable 00000000004068B5 case 82
.text:0000000000407D14                                         ; jumptable 0000000000406A35 case 82
.text:0000000000407D14                                         ; jumptable 0000000000406BB5 case 82
.text:0000000000407D14                                         ; jumptable 0000000000406D36 case 82
.text:0000000000407D14                                         ; jumptable 0000000000406EB5 case 82
.text:0000000000407D14                                         ; jumptable 0000000000407035 case 82
.text:0000000000407D14                                         ; jumptable 00000000004071B5 case 82
.text:0000000000407D14                                         ; jumptable 000000000040741C case 82
.text:0000000000407D19                 movdqu  xmmword ptr [rdi-52h], xmm0
.text:0000000000407D1E
.text:0000000000407D1E loc_407D1E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D1E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D1E                 lddqu   xmm0, xmmword ptr [rsi-42h] ; jumptable 0000000000405A1C case 66
.text:0000000000407D1E                                         ; jumptable 0000000000405B78 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000405CB5 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000405E35 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000405FB5 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000406135 case 66
.text:0000000000407D1E                                         ; jumptable 00000000004062B5 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000406435 case 66
.text:0000000000407D1E                                         ; jumptable 00000000004065B5 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000406735 case 66
.text:0000000000407D1E                                         ; jumptable 00000000004068B5 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000406A35 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000406BB5 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000406D36 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000406EB5 case 66
.text:0000000000407D1E                                         ; jumptable 0000000000407035 case 66
.text:0000000000407D1E                                         ; jumptable 00000000004071B5 case 66
.text:0000000000407D1E                                         ; jumptable 000000000040741C case 66
.text:0000000000407D23                 movdqu  xmmword ptr [rdi-42h], xmm0
.text:0000000000407D28
.text:0000000000407D28 loc_407D28:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D28                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D28                 lddqu   xmm0, xmmword ptr [rsi-32h] ; jumptable 0000000000405A1C case 50
.text:0000000000407D28                                         ; jumptable 0000000000405B78 case 50
.text:0000000000407D28                                         ; jumptable 0000000000405CB5 case 50
.text:0000000000407D28                                         ; jumptable 0000000000405E35 case 50
.text:0000000000407D28                                         ; jumptable 0000000000405FB5 case 50
.text:0000000000407D28                                         ; jumptable 0000000000406135 case 50
.text:0000000000407D28                                         ; jumptable 00000000004062B5 case 50
.text:0000000000407D28                                         ; jumptable 0000000000406435 case 50
.text:0000000000407D28                                         ; jumptable 00000000004065B5 case 50
.text:0000000000407D28                                         ; jumptable 0000000000406735 case 50
.text:0000000000407D28                                         ; jumptable 00000000004068B5 case 50
.text:0000000000407D28                                         ; jumptable 0000000000406A35 case 50
.text:0000000000407D28                                         ; jumptable 0000000000406BB5 case 50
.text:0000000000407D28                                         ; jumptable 0000000000406D36 case 50
.text:0000000000407D28                                         ; jumptable 0000000000406EB5 case 50
.text:0000000000407D28                                         ; jumptable 0000000000407035 case 50
.text:0000000000407D28                                         ; jumptable 00000000004071B5 case 50
.text:0000000000407D28                                         ; jumptable 000000000040741C case 50
.text:0000000000407D2D                 movdqu  xmmword ptr [rdi-32h], xmm0
.text:0000000000407D32
.text:0000000000407D32 loc_407D32:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D32                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D32                 lddqu   xmm0, xmmword ptr [rsi-22h] ; jumptable 0000000000405A1C case 34
.text:0000000000407D32                                         ; jumptable 0000000000405B78 case 34
.text:0000000000407D32                                         ; jumptable 0000000000405CB5 case 34
.text:0000000000407D32                                         ; jumptable 0000000000405E35 case 34
.text:0000000000407D32                                         ; jumptable 0000000000405FB5 case 34
.text:0000000000407D32                                         ; jumptable 0000000000406135 case 34
.text:0000000000407D32                                         ; jumptable 00000000004062B5 case 34
.text:0000000000407D32                                         ; jumptable 0000000000406435 case 34
.text:0000000000407D32                                         ; jumptable 00000000004065B5 case 34
.text:0000000000407D32                                         ; jumptable 0000000000406735 case 34
.text:0000000000407D32                                         ; jumptable 00000000004068B5 case 34
.text:0000000000407D32                                         ; jumptable 0000000000406A35 case 34
.text:0000000000407D32                                         ; jumptable 0000000000406BB5 case 34
.text:0000000000407D32                                         ; jumptable 0000000000406D36 case 34
.text:0000000000407D32                                         ; jumptable 0000000000406EB5 case 34
.text:0000000000407D32                                         ; jumptable 0000000000407035 case 34
.text:0000000000407D32                                         ; jumptable 00000000004071B5 case 34
.text:0000000000407D32                                         ; jumptable 000000000040741C case 34
.text:0000000000407D37                 movdqu  xmmword ptr [rdi-22h], xmm0
.text:0000000000407D3C
.text:0000000000407D3C loc_407D3C:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D3C                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D3C                 lddqu   xmm0, xmmword ptr [rsi-12h] ; jumptable 0000000000405A1C case 18
.text:0000000000407D3C                                         ; jumptable 0000000000405B78 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000405CB5 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000405E35 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000405FB5 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000406135 case 18
.text:0000000000407D3C                                         ; jumptable 00000000004062B5 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000406435 case 18
.text:0000000000407D3C                                         ; jumptable 00000000004065B5 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000406735 case 18
.text:0000000000407D3C                                         ; jumptable 00000000004068B5 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000406A35 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000406BB5 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000406D36 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000406EB5 case 18
.text:0000000000407D3C                                         ; jumptable 0000000000407035 case 18
.text:0000000000407D3C                                         ; jumptable 00000000004071B5 case 18
.text:0000000000407D3C                                         ; jumptable 000000000040741C case 18
.text:0000000000407D41                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407D46                 movdqu  xmmword ptr [rdi-12h], xmm0
.text:0000000000407D4B                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407D50                 retn
.text:0000000000407D50 ; ---------------------------------------------------------------------------
.text:0000000000407D51                 align 20h
.text:0000000000407D60
.text:0000000000407D60 loc_407D60:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D60                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D60                 movzx   edx, word ptr [rsi-2] ; jumptable 0000000000405A1C case 2
.text:0000000000407D60                                         ; jumptable 0000000000405B78 case 2
.text:0000000000407D60                                         ; jumptable 0000000000405CB5 case 2
.text:0000000000407D60                                         ; jumptable 0000000000405E35 case 2
.text:0000000000407D60                                         ; jumptable 0000000000405FB5 case 2
.text:0000000000407D60                                         ; jumptable 0000000000406135 case 2
.text:0000000000407D60                                         ; jumptable 00000000004062B5 case 2
.text:0000000000407D60                                         ; jumptable 0000000000406435 case 2
.text:0000000000407D60                                         ; jumptable 00000000004065B5 case 2
.text:0000000000407D60                                         ; jumptable 0000000000406735 case 2
.text:0000000000407D60                                         ; jumptable 00000000004068B5 case 2
.text:0000000000407D60                                         ; jumptable 0000000000406A35 case 2
.text:0000000000407D60                                         ; jumptable 0000000000406BB5 case 2
.text:0000000000407D60                                         ; jumptable 0000000000406D36 case 2
.text:0000000000407D60                                         ; jumptable 0000000000406EB5 case 2
.text:0000000000407D60                                         ; jumptable 0000000000407035 case 2
.text:0000000000407D60                                         ; jumptable 00000000004071B5 case 2
.text:0000000000407D60                                         ; jumptable 000000000040741C case 2
.text:0000000000407D64                 mov     [rdi-2], dx
.text:0000000000407D68                 retn
.text:0000000000407D68 ; ---------------------------------------------------------------------------
.text:0000000000407D69                 align 10h
.text:0000000000407D70
.text:0000000000407D70 loc_407D70:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D70                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D70                 lddqu   xmm0, xmmword ptr [rsi-81h] ; jumptable 0000000000405A1C case 129
.text:0000000000407D70                                         ; jumptable 0000000000405B78 case 129
.text:0000000000407D70                                         ; jumptable 0000000000405CB5 case 129
.text:0000000000407D70                                         ; jumptable 0000000000405E35 case 129
.text:0000000000407D70                                         ; jumptable 0000000000405FB5 case 129
.text:0000000000407D70                                         ; jumptable 0000000000406135 case 129
.text:0000000000407D70                                         ; jumptable 00000000004062B5 case 129
.text:0000000000407D70                                         ; jumptable 0000000000406435 case 129
.text:0000000000407D70                                         ; jumptable 00000000004065B5 case 129
.text:0000000000407D70                                         ; jumptable 0000000000406735 case 129
.text:0000000000407D70                                         ; jumptable 00000000004068B5 case 129
.text:0000000000407D70                                         ; jumptable 0000000000406A35 case 129
.text:0000000000407D70                                         ; jumptable 0000000000406BB5 case 129
.text:0000000000407D70                                         ; jumptable 0000000000406D36 case 129
.text:0000000000407D70                                         ; jumptable 0000000000406EB5 case 129
.text:0000000000407D70                                         ; jumptable 0000000000407035 case 129
.text:0000000000407D70                                         ; jumptable 00000000004071B5 case 129
.text:0000000000407D70                                         ; jumptable 000000000040741C case 129
.text:0000000000407D78                 movdqu  xmmword ptr [rdi-81h], xmm0
.text:0000000000407D80
.text:0000000000407D80 loc_407D80:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D80                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D80                 lddqu   xmm0, xmmword ptr [rsi-71h] ; jumptable 0000000000405A1C case 113
.text:0000000000407D80                                         ; jumptable 0000000000405B78 case 113
.text:0000000000407D80                                         ; jumptable 0000000000405CB5 case 113
.text:0000000000407D80                                         ; jumptable 0000000000405E35 case 113
.text:0000000000407D80                                         ; jumptable 0000000000405FB5 case 113
.text:0000000000407D80                                         ; jumptable 0000000000406135 case 113
.text:0000000000407D80                                         ; jumptable 00000000004062B5 case 113
.text:0000000000407D80                                         ; jumptable 0000000000406435 case 113
.text:0000000000407D80                                         ; jumptable 00000000004065B5 case 113
.text:0000000000407D80                                         ; jumptable 0000000000406735 case 113
.text:0000000000407D80                                         ; jumptable 00000000004068B5 case 113
.text:0000000000407D80                                         ; jumptable 0000000000406A35 case 113
.text:0000000000407D80                                         ; jumptable 0000000000406BB5 case 113
.text:0000000000407D80                                         ; jumptable 0000000000406D36 case 113
.text:0000000000407D80                                         ; jumptable 0000000000406EB5 case 113
.text:0000000000407D80                                         ; jumptable 0000000000407035 case 113
.text:0000000000407D80                                         ; jumptable 00000000004071B5 case 113
.text:0000000000407D80                                         ; jumptable 000000000040741C case 113
.text:0000000000407D85                 movdqu  xmmword ptr [rdi-71h], xmm0
.text:0000000000407D8A
.text:0000000000407D8A loc_407D8A:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D8A                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D8A                 lddqu   xmm0, xmmword ptr [rsi-61h] ; jumptable 0000000000405A1C case 97
.text:0000000000407D8A                                         ; jumptable 0000000000405B78 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000405CB5 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000405E35 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000405FB5 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000406135 case 97
.text:0000000000407D8A                                         ; jumptable 00000000004062B5 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000406435 case 97
.text:0000000000407D8A                                         ; jumptable 00000000004065B5 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000406735 case 97
.text:0000000000407D8A                                         ; jumptable 00000000004068B5 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000406A35 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000406BB5 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000406D36 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000406EB5 case 97
.text:0000000000407D8A                                         ; jumptable 0000000000407035 case 97
.text:0000000000407D8A                                         ; jumptable 00000000004071B5 case 97
.text:0000000000407D8A                                         ; jumptable 000000000040741C case 97
.text:0000000000407D8F                 movdqu  xmmword ptr [rdi-61h], xmm0
.text:0000000000407D94
.text:0000000000407D94 loc_407D94:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D94                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D94                 lddqu   xmm0, xmmword ptr [rsi-51h] ; jumptable 0000000000405A1C case 81
.text:0000000000407D94                                         ; jumptable 0000000000405B78 case 81
.text:0000000000407D94                                         ; jumptable 0000000000405CB5 case 81
.text:0000000000407D94                                         ; jumptable 0000000000405E35 case 81
.text:0000000000407D94                                         ; jumptable 0000000000405FB5 case 81
.text:0000000000407D94                                         ; jumptable 0000000000406135 case 81
.text:0000000000407D94                                         ; jumptable 00000000004062B5 case 81
.text:0000000000407D94                                         ; jumptable 0000000000406435 case 81
.text:0000000000407D94                                         ; jumptable 00000000004065B5 case 81
.text:0000000000407D94                                         ; jumptable 0000000000406735 case 81
.text:0000000000407D94                                         ; jumptable 00000000004068B5 case 81
.text:0000000000407D94                                         ; jumptable 0000000000406A35 case 81
.text:0000000000407D94                                         ; jumptable 0000000000406BB5 case 81
.text:0000000000407D94                                         ; jumptable 0000000000406D36 case 81
.text:0000000000407D94                                         ; jumptable 0000000000406EB5 case 81
.text:0000000000407D94                                         ; jumptable 0000000000407035 case 81
.text:0000000000407D94                                         ; jumptable 00000000004071B5 case 81
.text:0000000000407D94                                         ; jumptable 000000000040741C case 81
.text:0000000000407D99                 movdqu  xmmword ptr [rdi-51h], xmm0
.text:0000000000407D9E
.text:0000000000407D9E loc_407D9E:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407D9E                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407D9E                 lddqu   xmm0, xmmword ptr [rsi-41h] ; jumptable 0000000000405A1C case 65
.text:0000000000407D9E                                         ; jumptable 0000000000405B78 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000405CB5 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000405E35 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000405FB5 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000406135 case 65
.text:0000000000407D9E                                         ; jumptable 00000000004062B5 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000406435 case 65
.text:0000000000407D9E                                         ; jumptable 00000000004065B5 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000406735 case 65
.text:0000000000407D9E                                         ; jumptable 00000000004068B5 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000406A35 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000406BB5 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000406D36 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000406EB5 case 65
.text:0000000000407D9E                                         ; jumptable 0000000000407035 case 65
.text:0000000000407D9E                                         ; jumptable 00000000004071B5 case 65
.text:0000000000407D9E                                         ; jumptable 000000000040741C case 65
.text:0000000000407DA3                 movdqu  xmmword ptr [rdi-41h], xmm0
.text:0000000000407DA8
.text:0000000000407DA8 loc_407DA8:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407DA8                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407DA8                 lddqu   xmm0, xmmword ptr [rsi-31h] ; jumptable 0000000000405A1C case 49
.text:0000000000407DA8                                         ; jumptable 0000000000405B78 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000405CB5 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000405E35 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000405FB5 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000406135 case 49
.text:0000000000407DA8                                         ; jumptable 00000000004062B5 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000406435 case 49
.text:0000000000407DA8                                         ; jumptable 00000000004065B5 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000406735 case 49
.text:0000000000407DA8                                         ; jumptable 00000000004068B5 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000406A35 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000406BB5 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000406D36 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000406EB5 case 49
.text:0000000000407DA8                                         ; jumptable 0000000000407035 case 49
.text:0000000000407DA8                                         ; jumptable 00000000004071B5 case 49
.text:0000000000407DA8                                         ; jumptable 000000000040741C case 49
.text:0000000000407DAD                 movdqu  xmmword ptr [rdi-31h], xmm0
.text:0000000000407DB2
.text:0000000000407DB2 loc_407DB2:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407DB2                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407DB2                 lddqu   xmm0, xmmword ptr [rsi-21h] ; jumptable 0000000000405A1C case 33
.text:0000000000407DB2                                         ; jumptable 0000000000405B78 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000405CB5 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000405E35 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000405FB5 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000406135 case 33
.text:0000000000407DB2                                         ; jumptable 00000000004062B5 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000406435 case 33
.text:0000000000407DB2                                         ; jumptable 00000000004065B5 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000406735 case 33
.text:0000000000407DB2                                         ; jumptable 00000000004068B5 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000406A35 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000406BB5 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000406D36 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000406EB5 case 33
.text:0000000000407DB2                                         ; jumptable 0000000000407035 case 33
.text:0000000000407DB2                                         ; jumptable 00000000004071B5 case 33
.text:0000000000407DB2                                         ; jumptable 000000000040741C case 33
.text:0000000000407DB7                 movdqu  xmmword ptr [rdi-21h], xmm0
.text:0000000000407DBC
.text:0000000000407DBC loc_407DBC:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407DBC                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407DBC                 lddqu   xmm0, xmmword ptr [rsi-11h] ; jumptable 0000000000405A1C case 17
.text:0000000000407DBC                                         ; jumptable 0000000000405B78 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000405CB5 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000405E35 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000405FB5 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000406135 case 17
.text:0000000000407DBC                                         ; jumptable 00000000004062B5 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000406435 case 17
.text:0000000000407DBC                                         ; jumptable 00000000004065B5 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000406735 case 17
.text:0000000000407DBC                                         ; jumptable 00000000004068B5 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000406A35 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000406BB5 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000406D36 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000406EB5 case 17
.text:0000000000407DBC                                         ; jumptable 0000000000407035 case 17
.text:0000000000407DBC                                         ; jumptable 00000000004071B5 case 17
.text:0000000000407DBC                                         ; jumptable 000000000040741C case 17
.text:0000000000407DC1                 lddqu   xmm1, xmmword ptr [rsi-10h]
.text:0000000000407DC6                 movdqu  xmmword ptr [rdi-11h], xmm0
.text:0000000000407DCB                 movdqu  xmmword ptr [rdi-10h], xmm1
.text:0000000000407DD0                 retn
.text:0000000000407DD0 ; ---------------------------------------------------------------------------
.text:0000000000407DD1                 align 20h
.text:0000000000407DE0
.text:0000000000407DE0 loc_407DE0:                             ; CODE XREF: __intel_ssse3_rep_memmove+4C↑j
.text:0000000000407DE0                                         ; __intel_ssse3_rep_memmove+1A8↑j ...
.text:0000000000407DE0                 movzx   edx, byte ptr [rsi-1] ; jumptable 0000000000405A1C case 1
.text:0000000000407DE0                                         ; jumptable 0000000000405B78 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000405CB5 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000405E35 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000405FB5 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000406135 case 1
.text:0000000000407DE0                                         ; jumptable 00000000004062B5 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000406435 case 1
.text:0000000000407DE0                                         ; jumptable 00000000004065B5 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000406735 case 1
.text:0000000000407DE0                                         ; jumptable 00000000004068B5 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000406A35 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000406BB5 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000406D36 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000406EB5 case 1
.text:0000000000407DE0                                         ; jumptable 0000000000407035 case 1
.text:0000000000407DE0                                         ; jumptable 00000000004071B5 case 1
.text:0000000000407DE0                                         ; jumptable 000000000040741C case 1
.text:0000000000407DE4                 mov     [rdi-1], dl
.text:0000000000407DE7                 retn
.text:0000000000407DE7 ; ---------------------------------------------------------------------------
.text:0000000000407DE8                 align 10h
.text:0000000000407DF0
.text:0000000000407DF0 loc_407DF0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407DF0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407DF0                 lddqu   xmm0, xmmword ptr [rsi+70h] ; jumptable 00000000004059FA case 128
.text:0000000000407DF0                                         ; jumptable 0000000000405BF9 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000405D72 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000405EF2 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000406072 case 128
.text:0000000000407DF0                                         ; jumptable 00000000004061F2 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000406372 case 128
.text:0000000000407DF0                                         ; jumptable 00000000004064F2 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000406672 case 128
.text:0000000000407DF0                                         ; jumptable 00000000004067F2 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000406972 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000406AF2 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000406C72 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000406DF2 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000406F72 case 128
.text:0000000000407DF0                                         ; jumptable 00000000004070F2 case 128
.text:0000000000407DF0                                         ; jumptable 0000000000407272 case 128
.text:0000000000407DF0                                         ; jumptable 00000000004075BF case 128
.text:0000000000407DF5                 movdqu  xmmword ptr [rdi+70h], xmm0
.text:0000000000407DFA
.text:0000000000407DFA loc_407DFA:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407DFA                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407DFA                 lddqu   xmm0, xmmword ptr [rsi+60h] ; jumptable 00000000004059FA case 112
.text:0000000000407DFA                                         ; jumptable 0000000000405BF9 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000405D72 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000405EF2 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000406072 case 112
.text:0000000000407DFA                                         ; jumptable 00000000004061F2 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000406372 case 112
.text:0000000000407DFA                                         ; jumptable 00000000004064F2 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000406672 case 112
.text:0000000000407DFA                                         ; jumptable 00000000004067F2 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000406972 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000406AF2 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000406C72 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000406DF2 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000406F72 case 112
.text:0000000000407DFA                                         ; jumptable 00000000004070F2 case 112
.text:0000000000407DFA                                         ; jumptable 0000000000407272 case 112
.text:0000000000407DFA                                         ; jumptable 00000000004075BF case 112
.text:0000000000407DFF                 movdqu  xmmword ptr [rdi+60h], xmm0
.text:0000000000407E04
.text:0000000000407E04 loc_407E04:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E04                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E04                 lddqu   xmm0, xmmword ptr [rsi+50h] ; jumptable 00000000004059FA case 96
.text:0000000000407E04                                         ; jumptable 0000000000405BF9 case 96
.text:0000000000407E04                                         ; jumptable 0000000000405D72 case 96
.text:0000000000407E04                                         ; jumptable 0000000000405EF2 case 96
.text:0000000000407E04                                         ; jumptable 0000000000406072 case 96
.text:0000000000407E04                                         ; jumptable 00000000004061F2 case 96
.text:0000000000407E04                                         ; jumptable 0000000000406372 case 96
.text:0000000000407E04                                         ; jumptable 00000000004064F2 case 96
.text:0000000000407E04                                         ; jumptable 0000000000406672 case 96
.text:0000000000407E04                                         ; jumptable 00000000004067F2 case 96
.text:0000000000407E04                                         ; jumptable 0000000000406972 case 96
.text:0000000000407E04                                         ; jumptable 0000000000406AF2 case 96
.text:0000000000407E04                                         ; jumptable 0000000000406C72 case 96
.text:0000000000407E04                                         ; jumptable 0000000000406DF2 case 96
.text:0000000000407E04                                         ; jumptable 0000000000406F72 case 96
.text:0000000000407E04                                         ; jumptable 00000000004070F2 case 96
.text:0000000000407E04                                         ; jumptable 0000000000407272 case 96
.text:0000000000407E04                                         ; jumptable 00000000004075BF case 96
.text:0000000000407E09                 movdqu  xmmword ptr [rdi+50h], xmm0
.text:0000000000407E0E
.text:0000000000407E0E loc_407E0E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E0E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E0E                 lddqu   xmm0, xmmword ptr [rsi+40h] ; jumptable 00000000004059FA case 80
.text:0000000000407E0E                                         ; jumptable 0000000000405BF9 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000405D72 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000405EF2 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000406072 case 80
.text:0000000000407E0E                                         ; jumptable 00000000004061F2 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000406372 case 80
.text:0000000000407E0E                                         ; jumptable 00000000004064F2 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000406672 case 80
.text:0000000000407E0E                                         ; jumptable 00000000004067F2 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000406972 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000406AF2 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000406C72 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000406DF2 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000406F72 case 80
.text:0000000000407E0E                                         ; jumptable 00000000004070F2 case 80
.text:0000000000407E0E                                         ; jumptable 0000000000407272 case 80
.text:0000000000407E0E                                         ; jumptable 00000000004075BF case 80
.text:0000000000407E13                 movdqu  xmmword ptr [rdi+40h], xmm0
.text:0000000000407E18
.text:0000000000407E18 loc_407E18:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E18                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E18                 lddqu   xmm0, xmmword ptr [rsi+30h] ; jumptable 00000000004059FA case 64
.text:0000000000407E18                                         ; jumptable 0000000000405BF9 case 64
.text:0000000000407E18                                         ; jumptable 0000000000405D72 case 64
.text:0000000000407E18                                         ; jumptable 0000000000405EF2 case 64
.text:0000000000407E18                                         ; jumptable 0000000000406072 case 64
.text:0000000000407E18                                         ; jumptable 00000000004061F2 case 64
.text:0000000000407E18                                         ; jumptable 0000000000406372 case 64
.text:0000000000407E18                                         ; jumptable 00000000004064F2 case 64
.text:0000000000407E18                                         ; jumptable 0000000000406672 case 64
.text:0000000000407E18                                         ; jumptable 00000000004067F2 case 64
.text:0000000000407E18                                         ; jumptable 0000000000406972 case 64
.text:0000000000407E18                                         ; jumptable 0000000000406AF2 case 64
.text:0000000000407E18                                         ; jumptable 0000000000406C72 case 64
.text:0000000000407E18                                         ; jumptable 0000000000406DF2 case 64
.text:0000000000407E18                                         ; jumptable 0000000000406F72 case 64
.text:0000000000407E18                                         ; jumptable 00000000004070F2 case 64
.text:0000000000407E18                                         ; jumptable 0000000000407272 case 64
.text:0000000000407E18                                         ; jumptable 00000000004075BF case 64
.text:0000000000407E1D                 movdqu  xmmword ptr [rdi+30h], xmm0
.text:0000000000407E22
.text:0000000000407E22 loc_407E22:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E22                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E22                 lddqu   xmm0, xmmword ptr [rsi+20h] ; jumptable 00000000004059FA case 48
.text:0000000000407E22                                         ; jumptable 0000000000405BF9 case 48
.text:0000000000407E22                                         ; jumptable 0000000000405D72 case 48
.text:0000000000407E22                                         ; jumptable 0000000000405EF2 case 48
.text:0000000000407E22                                         ; jumptable 0000000000406072 case 48
.text:0000000000407E22                                         ; jumptable 00000000004061F2 case 48
.text:0000000000407E22                                         ; jumptable 0000000000406372 case 48
.text:0000000000407E22                                         ; jumptable 00000000004064F2 case 48
.text:0000000000407E22                                         ; jumptable 0000000000406672 case 48
.text:0000000000407E22                                         ; jumptable 00000000004067F2 case 48
.text:0000000000407E22                                         ; jumptable 0000000000406972 case 48
.text:0000000000407E22                                         ; jumptable 0000000000406AF2 case 48
.text:0000000000407E22                                         ; jumptable 0000000000406C72 case 48
.text:0000000000407E22                                         ; jumptable 0000000000406DF2 case 48
.text:0000000000407E22                                         ; jumptable 0000000000406F72 case 48
.text:0000000000407E22                                         ; jumptable 00000000004070F2 case 48
.text:0000000000407E22                                         ; jumptable 0000000000407272 case 48
.text:0000000000407E22                                         ; jumptable 00000000004075BF case 48
.text:0000000000407E27                 movdqu  xmmword ptr [rdi+20h], xmm0
.text:0000000000407E2C
.text:0000000000407E2C loc_407E2C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E2C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E2C                 lddqu   xmm0, xmmword ptr [rsi+10h] ; jumptable 00000000004059FA case 32
.text:0000000000407E2C                                         ; jumptable 0000000000405BF9 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000405D72 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000405EF2 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000406072 case 32
.text:0000000000407E2C                                         ; jumptable 00000000004061F2 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000406372 case 32
.text:0000000000407E2C                                         ; jumptable 00000000004064F2 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000406672 case 32
.text:0000000000407E2C                                         ; jumptable 00000000004067F2 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000406972 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000406AF2 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000406C72 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000406DF2 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000406F72 case 32
.text:0000000000407E2C                                         ; jumptable 00000000004070F2 case 32
.text:0000000000407E2C                                         ; jumptable 0000000000407272 case 32
.text:0000000000407E2C                                         ; jumptable 00000000004075BF case 32
.text:0000000000407E31                 movdqu  xmmword ptr [rdi+10h], xmm0
.text:0000000000407E36
.text:0000000000407E36 loc_407E36:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E36                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E36                 lddqu   xmm0, xmmword ptr [rsi] ; jumptable 00000000004059FA case 16
.text:0000000000407E36                                         ; jumptable 0000000000405BF9 case 16
.text:0000000000407E36                                         ; jumptable 0000000000405D72 case 16
.text:0000000000407E36                                         ; jumptable 0000000000405EF2 case 16
.text:0000000000407E36                                         ; jumptable 0000000000406072 case 16
.text:0000000000407E36                                         ; jumptable 00000000004061F2 case 16
.text:0000000000407E36                                         ; jumptable 0000000000406372 case 16
.text:0000000000407E36                                         ; jumptable 00000000004064F2 case 16
.text:0000000000407E36                                         ; jumptable 0000000000406672 case 16
.text:0000000000407E36                                         ; jumptable 00000000004067F2 case 16
.text:0000000000407E36                                         ; jumptable 0000000000406972 case 16
.text:0000000000407E36                                         ; jumptable 0000000000406AF2 case 16
.text:0000000000407E36                                         ; jumptable 0000000000406C72 case 16
.text:0000000000407E36                                         ; jumptable 0000000000406DF2 case 16
.text:0000000000407E36                                         ; jumptable 0000000000406F72 case 16
.text:0000000000407E36                                         ; jumptable 00000000004070F2 case 16
.text:0000000000407E36                                         ; jumptable 0000000000407272 case 16
.text:0000000000407E36                                         ; jumptable 00000000004075BF case 16
.text:0000000000407E3A                 movdqu  xmmword ptr [rdi], xmm0
.text:0000000000407E3E
.text:0000000000407E3E locret_407E3E:                          ; CODE XREF: __intel_ssse3_rep_memmove+8↑j
.text:0000000000407E3E                                         ; __intel_ssse3_rep_memmove+2A↑j ...
.text:0000000000407E3E                 retn                    ; jumptable 00000000004059FA case 0
.text:0000000000407E3E                                         ; jumptable 0000000000405BF9 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000405D72 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000405EF2 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000406072 case 0
.text:0000000000407E3E                                         ; jumptable 00000000004061F2 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000406372 case 0
.text:0000000000407E3E                                         ; jumptable 00000000004064F2 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000406672 case 0
.text:0000000000407E3E                                         ; jumptable 00000000004067F2 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000406972 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000406AF2 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000406C72 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000406DF2 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000406F72 case 0
.text:0000000000407E3E                                         ; jumptable 00000000004070F2 case 0
.text:0000000000407E3E                                         ; jumptable 0000000000407272 case 0
.text:0000000000407E3E                                         ; jumptable 00000000004075BF case 0
.text:0000000000407E3E ; ---------------------------------------------------------------------------
.text:0000000000407E3F                 align 20h
.text:0000000000407E40
.text:0000000000407E40 loc_407E40:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E40                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E40                 lddqu   xmm0, xmmword ptr [rsi+7Fh] ; jumptable 00000000004059FA case 143
.text:0000000000407E40                                         ; jumptable 0000000000405BF9 case 143
.text:0000000000407E40                                         ; jumptable 0000000000405D72 case 143
.text:0000000000407E40                                         ; jumptable 0000000000405EF2 case 143
.text:0000000000407E40                                         ; jumptable 0000000000406072 case 143
.text:0000000000407E40                                         ; jumptable 00000000004061F2 case 143
.text:0000000000407E40                                         ; jumptable 0000000000406372 case 143
.text:0000000000407E40                                         ; jumptable 00000000004064F2 case 143
.text:0000000000407E40                                         ; jumptable 0000000000406672 case 143
.text:0000000000407E40                                         ; jumptable 00000000004067F2 case 143
.text:0000000000407E40                                         ; jumptable 0000000000406972 case 143
.text:0000000000407E40                                         ; jumptable 0000000000406AF2 case 143
.text:0000000000407E40                                         ; jumptable 0000000000406C72 case 143
.text:0000000000407E40                                         ; jumptable 0000000000406DF2 case 143
.text:0000000000407E40                                         ; jumptable 0000000000406F72 case 143
.text:0000000000407E40                                         ; jumptable 00000000004070F2 case 143
.text:0000000000407E40                                         ; jumptable 0000000000407272 case 143
.text:0000000000407E40                                         ; jumptable 00000000004075BF case 143
.text:0000000000407E45                 movdqu  xmmword ptr [rdi+7Fh], xmm0
.text:0000000000407E4A
.text:0000000000407E4A loc_407E4A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E4A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E4A                 lddqu   xmm0, xmmword ptr [rsi+6Fh] ; jumptable 00000000004059FA case 127
.text:0000000000407E4A                                         ; jumptable 0000000000405BF9 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000405D72 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000405EF2 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000406072 case 127
.text:0000000000407E4A                                         ; jumptable 00000000004061F2 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000406372 case 127
.text:0000000000407E4A                                         ; jumptable 00000000004064F2 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000406672 case 127
.text:0000000000407E4A                                         ; jumptable 00000000004067F2 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000406972 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000406AF2 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000406C72 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000406DF2 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000406F72 case 127
.text:0000000000407E4A                                         ; jumptable 00000000004070F2 case 127
.text:0000000000407E4A                                         ; jumptable 0000000000407272 case 127
.text:0000000000407E4A                                         ; jumptable 00000000004075BF case 127
.text:0000000000407E4F                 movdqu  xmmword ptr [rdi+6Fh], xmm0
.text:0000000000407E54
.text:0000000000407E54 loc_407E54:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E54                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E54                 lddqu   xmm0, xmmword ptr [rsi+5Fh] ; jumptable 00000000004059FA case 111
.text:0000000000407E54                                         ; jumptable 0000000000405BF9 case 111
.text:0000000000407E54                                         ; jumptable 0000000000405D72 case 111
.text:0000000000407E54                                         ; jumptable 0000000000405EF2 case 111
.text:0000000000407E54                                         ; jumptable 0000000000406072 case 111
.text:0000000000407E54                                         ; jumptable 00000000004061F2 case 111
.text:0000000000407E54                                         ; jumptable 0000000000406372 case 111
.text:0000000000407E54                                         ; jumptable 00000000004064F2 case 111
.text:0000000000407E54                                         ; jumptable 0000000000406672 case 111
.text:0000000000407E54                                         ; jumptable 00000000004067F2 case 111
.text:0000000000407E54                                         ; jumptable 0000000000406972 case 111
.text:0000000000407E54                                         ; jumptable 0000000000406AF2 case 111
.text:0000000000407E54                                         ; jumptable 0000000000406C72 case 111
.text:0000000000407E54                                         ; jumptable 0000000000406DF2 case 111
.text:0000000000407E54                                         ; jumptable 0000000000406F72 case 111
.text:0000000000407E54                                         ; jumptable 00000000004070F2 case 111
.text:0000000000407E54                                         ; jumptable 0000000000407272 case 111
.text:0000000000407E54                                         ; jumptable 00000000004075BF case 111
.text:0000000000407E59                 movdqu  xmmword ptr [rdi+5Fh], xmm0
.text:0000000000407E5E
.text:0000000000407E5E loc_407E5E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E5E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E5E                 lddqu   xmm0, xmmword ptr [rsi+4Fh] ; jumptable 00000000004059FA case 95
.text:0000000000407E5E                                         ; jumptable 0000000000405BF9 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000405D72 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000405EF2 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000406072 case 95
.text:0000000000407E5E                                         ; jumptable 00000000004061F2 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000406372 case 95
.text:0000000000407E5E                                         ; jumptable 00000000004064F2 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000406672 case 95
.text:0000000000407E5E                                         ; jumptable 00000000004067F2 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000406972 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000406AF2 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000406C72 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000406DF2 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000406F72 case 95
.text:0000000000407E5E                                         ; jumptable 00000000004070F2 case 95
.text:0000000000407E5E                                         ; jumptable 0000000000407272 case 95
.text:0000000000407E5E                                         ; jumptable 00000000004075BF case 95
.text:0000000000407E63                 movdqu  xmmword ptr [rdi+4Fh], xmm0
.text:0000000000407E68
.text:0000000000407E68 loc_407E68:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E68                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E68                 lddqu   xmm0, xmmword ptr [rsi+3Fh] ; jumptable 00000000004059FA case 79
.text:0000000000407E68                                         ; jumptable 0000000000405BF9 case 79
.text:0000000000407E68                                         ; jumptable 0000000000405D72 case 79
.text:0000000000407E68                                         ; jumptable 0000000000405EF2 case 79
.text:0000000000407E68                                         ; jumptable 0000000000406072 case 79
.text:0000000000407E68                                         ; jumptable 00000000004061F2 case 79
.text:0000000000407E68                                         ; jumptable 0000000000406372 case 79
.text:0000000000407E68                                         ; jumptable 00000000004064F2 case 79
.text:0000000000407E68                                         ; jumptable 0000000000406672 case 79
.text:0000000000407E68                                         ; jumptable 00000000004067F2 case 79
.text:0000000000407E68                                         ; jumptable 0000000000406972 case 79
.text:0000000000407E68                                         ; jumptable 0000000000406AF2 case 79
.text:0000000000407E68                                         ; jumptable 0000000000406C72 case 79
.text:0000000000407E68                                         ; jumptable 0000000000406DF2 case 79
.text:0000000000407E68                                         ; jumptable 0000000000406F72 case 79
.text:0000000000407E68                                         ; jumptable 00000000004070F2 case 79
.text:0000000000407E68                                         ; jumptable 0000000000407272 case 79
.text:0000000000407E68                                         ; jumptable 00000000004075BF case 79
.text:0000000000407E6D                 movdqu  xmmword ptr [rdi+3Fh], xmm0
.text:0000000000407E72
.text:0000000000407E72 loc_407E72:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E72                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E72                 lddqu   xmm0, xmmword ptr [rsi+2Fh] ; jumptable 00000000004059FA case 63
.text:0000000000407E72                                         ; jumptable 0000000000405BF9 case 63
.text:0000000000407E72                                         ; jumptable 0000000000405D72 case 63
.text:0000000000407E72                                         ; jumptable 0000000000405EF2 case 63
.text:0000000000407E72                                         ; jumptable 0000000000406072 case 63
.text:0000000000407E72                                         ; jumptable 00000000004061F2 case 63
.text:0000000000407E72                                         ; jumptable 0000000000406372 case 63
.text:0000000000407E72                                         ; jumptable 00000000004064F2 case 63
.text:0000000000407E72                                         ; jumptable 0000000000406672 case 63
.text:0000000000407E72                                         ; jumptable 00000000004067F2 case 63
.text:0000000000407E72                                         ; jumptable 0000000000406972 case 63
.text:0000000000407E72                                         ; jumptable 0000000000406AF2 case 63
.text:0000000000407E72                                         ; jumptable 0000000000406C72 case 63
.text:0000000000407E72                                         ; jumptable 0000000000406DF2 case 63
.text:0000000000407E72                                         ; jumptable 0000000000406F72 case 63
.text:0000000000407E72                                         ; jumptable 00000000004070F2 case 63
.text:0000000000407E72                                         ; jumptable 0000000000407272 case 63
.text:0000000000407E72                                         ; jumptable 00000000004075BF case 63
.text:0000000000407E77                 movdqu  xmmword ptr [rdi+2Fh], xmm0
.text:0000000000407E7C
.text:0000000000407E7C loc_407E7C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E7C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E7C                 lddqu   xmm0, xmmword ptr [rsi+1Fh] ; jumptable 00000000004059FA case 47
.text:0000000000407E7C                                         ; jumptable 0000000000405BF9 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000405D72 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000405EF2 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000406072 case 47
.text:0000000000407E7C                                         ; jumptable 00000000004061F2 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000406372 case 47
.text:0000000000407E7C                                         ; jumptable 00000000004064F2 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000406672 case 47
.text:0000000000407E7C                                         ; jumptable 00000000004067F2 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000406972 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000406AF2 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000406C72 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000406DF2 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000406F72 case 47
.text:0000000000407E7C                                         ; jumptable 00000000004070F2 case 47
.text:0000000000407E7C                                         ; jumptable 0000000000407272 case 47
.text:0000000000407E7C                                         ; jumptable 00000000004075BF case 47
.text:0000000000407E81                 movdqu  xmmword ptr [rdi+1Fh], xmm0
.text:0000000000407E86
.text:0000000000407E86 loc_407E86:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407E86                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407E86                 lddqu   xmm0, xmmword ptr [rsi+0Fh] ; jumptable 00000000004059FA case 31
.text:0000000000407E86                                         ; jumptable 0000000000405BF9 case 31
.text:0000000000407E86                                         ; jumptable 0000000000405D72 case 31
.text:0000000000407E86                                         ; jumptable 0000000000405EF2 case 31
.text:0000000000407E86                                         ; jumptable 0000000000406072 case 31
.text:0000000000407E86                                         ; jumptable 00000000004061F2 case 31
.text:0000000000407E86                                         ; jumptable 0000000000406372 case 31
.text:0000000000407E86                                         ; jumptable 00000000004064F2 case 31
.text:0000000000407E86                                         ; jumptable 0000000000406672 case 31
.text:0000000000407E86                                         ; jumptable 00000000004067F2 case 31
.text:0000000000407E86                                         ; jumptable 0000000000406972 case 31
.text:0000000000407E86                                         ; jumptable 0000000000406AF2 case 31
.text:0000000000407E86                                         ; jumptable 0000000000406C72 case 31
.text:0000000000407E86                                         ; jumptable 0000000000406DF2 case 31
.text:0000000000407E86                                         ; jumptable 0000000000406F72 case 31
.text:0000000000407E86                                         ; jumptable 00000000004070F2 case 31
.text:0000000000407E86                                         ; jumptable 0000000000407272 case 31
.text:0000000000407E86                                         ; jumptable 00000000004075BF case 31
.text:0000000000407E8B                 lddqu   xmm1, xmmword ptr [rsi]
.text:0000000000407E8F                 movdqu  xmmword ptr [rdi+0Fh], xmm0
.text:0000000000407E94                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000407E98                 retn
.text:0000000000407E98 ; ---------------------------------------------------------------------------
.text:0000000000407E99                 align 20h
.text:0000000000407EA0
.text:0000000000407EA0 loc_407EA0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407EA0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407EA0                 mov     rdx, [rsi+7]    ; jumptable 00000000004059FA case 15
.text:0000000000407EA0                                         ; jumptable 0000000000405BF9 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000405D72 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000405EF2 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000406072 case 15
.text:0000000000407EA0                                         ; jumptable 00000000004061F2 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000406372 case 15
.text:0000000000407EA0                                         ; jumptable 00000000004064F2 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000406672 case 15
.text:0000000000407EA0                                         ; jumptable 00000000004067F2 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000406972 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000406AF2 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000406C72 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000406DF2 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000406F72 case 15
.text:0000000000407EA0                                         ; jumptable 00000000004070F2 case 15
.text:0000000000407EA0                                         ; jumptable 0000000000407272 case 15
.text:0000000000407EA0                                         ; jumptable 00000000004075BF case 15
.text:0000000000407EA4                 mov     rcx, [rsi]
.text:0000000000407EA7                 mov     [rdi+7], rdx
.text:0000000000407EAB                 mov     [rdi], rcx
.text:0000000000407EAE                 retn
.text:0000000000407EAE ; ---------------------------------------------------------------------------
.text:0000000000407EAF                 align 10h
.text:0000000000407EB0
.text:0000000000407EB0 loc_407EB0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407EB0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407EB0                 lddqu   xmm0, xmmword ptr [rsi+7Eh] ; jumptable 00000000004059FA case 142
.text:0000000000407EB0                                         ; jumptable 0000000000405BF9 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000405D72 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000405EF2 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000406072 case 142
.text:0000000000407EB0                                         ; jumptable 00000000004061F2 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000406372 case 142
.text:0000000000407EB0                                         ; jumptable 00000000004064F2 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000406672 case 142
.text:0000000000407EB0                                         ; jumptable 00000000004067F2 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000406972 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000406AF2 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000406C72 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000406DF2 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000406F72 case 142
.text:0000000000407EB0                                         ; jumptable 00000000004070F2 case 142
.text:0000000000407EB0                                         ; jumptable 0000000000407272 case 142
.text:0000000000407EB0                                         ; jumptable 00000000004075BF case 142
.text:0000000000407EB5                 movdqu  xmmword ptr [rdi+7Eh], xmm0
.text:0000000000407EBA
.text:0000000000407EBA loc_407EBA:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407EBA                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407EBA                 lddqu   xmm0, xmmword ptr [rsi+6Eh] ; jumptable 00000000004059FA case 126
.text:0000000000407EBA                                         ; jumptable 0000000000405BF9 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000405D72 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000405EF2 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000406072 case 126
.text:0000000000407EBA                                         ; jumptable 00000000004061F2 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000406372 case 126
.text:0000000000407EBA                                         ; jumptable 00000000004064F2 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000406672 case 126
.text:0000000000407EBA                                         ; jumptable 00000000004067F2 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000406972 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000406AF2 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000406C72 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000406DF2 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000406F72 case 126
.text:0000000000407EBA                                         ; jumptable 00000000004070F2 case 126
.text:0000000000407EBA                                         ; jumptable 0000000000407272 case 126
.text:0000000000407EBA                                         ; jumptable 00000000004075BF case 126
.text:0000000000407EBF                 movdqu  xmmword ptr [rdi+6Eh], xmm0
.text:0000000000407EC4
.text:0000000000407EC4 loc_407EC4:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407EC4                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407EC4                 lddqu   xmm0, xmmword ptr [rsi+5Eh] ; jumptable 00000000004059FA case 110
.text:0000000000407EC4                                         ; jumptable 0000000000405BF9 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000405D72 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000405EF2 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000406072 case 110
.text:0000000000407EC4                                         ; jumptable 00000000004061F2 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000406372 case 110
.text:0000000000407EC4                                         ; jumptable 00000000004064F2 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000406672 case 110
.text:0000000000407EC4                                         ; jumptable 00000000004067F2 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000406972 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000406AF2 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000406C72 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000406DF2 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000406F72 case 110
.text:0000000000407EC4                                         ; jumptable 00000000004070F2 case 110
.text:0000000000407EC4                                         ; jumptable 0000000000407272 case 110
.text:0000000000407EC4                                         ; jumptable 00000000004075BF case 110
.text:0000000000407EC9                 movdqu  xmmword ptr [rdi+5Eh], xmm0
.text:0000000000407ECE
.text:0000000000407ECE loc_407ECE:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407ECE                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407ECE                 lddqu   xmm0, xmmword ptr [rsi+4Eh] ; jumptable 00000000004059FA case 94
.text:0000000000407ECE                                         ; jumptable 0000000000405BF9 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000405D72 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000405EF2 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000406072 case 94
.text:0000000000407ECE                                         ; jumptable 00000000004061F2 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000406372 case 94
.text:0000000000407ECE                                         ; jumptable 00000000004064F2 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000406672 case 94
.text:0000000000407ECE                                         ; jumptable 00000000004067F2 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000406972 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000406AF2 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000406C72 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000406DF2 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000406F72 case 94
.text:0000000000407ECE                                         ; jumptable 00000000004070F2 case 94
.text:0000000000407ECE                                         ; jumptable 0000000000407272 case 94
.text:0000000000407ECE                                         ; jumptable 00000000004075BF case 94
.text:0000000000407ED3                 movdqu  xmmword ptr [rdi+4Eh], xmm0
.text:0000000000407ED8
.text:0000000000407ED8 loc_407ED8:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407ED8                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407ED8                 lddqu   xmm0, xmmword ptr [rsi+3Eh] ; jumptable 00000000004059FA case 78
.text:0000000000407ED8                                         ; jumptable 0000000000405BF9 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000405D72 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000405EF2 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000406072 case 78
.text:0000000000407ED8                                         ; jumptable 00000000004061F2 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000406372 case 78
.text:0000000000407ED8                                         ; jumptable 00000000004064F2 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000406672 case 78
.text:0000000000407ED8                                         ; jumptable 00000000004067F2 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000406972 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000406AF2 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000406C72 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000406DF2 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000406F72 case 78
.text:0000000000407ED8                                         ; jumptable 00000000004070F2 case 78
.text:0000000000407ED8                                         ; jumptable 0000000000407272 case 78
.text:0000000000407ED8                                         ; jumptable 00000000004075BF case 78
.text:0000000000407EDD                 movdqu  xmmword ptr [rdi+3Eh], xmm0
.text:0000000000407EE2
.text:0000000000407EE2 loc_407EE2:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407EE2                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407EE2                 lddqu   xmm0, xmmword ptr [rsi+2Eh] ; jumptable 00000000004059FA case 62
.text:0000000000407EE2                                         ; jumptable 0000000000405BF9 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000405D72 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000405EF2 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000406072 case 62
.text:0000000000407EE2                                         ; jumptable 00000000004061F2 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000406372 case 62
.text:0000000000407EE2                                         ; jumptable 00000000004064F2 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000406672 case 62
.text:0000000000407EE2                                         ; jumptable 00000000004067F2 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000406972 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000406AF2 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000406C72 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000406DF2 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000406F72 case 62
.text:0000000000407EE2                                         ; jumptable 00000000004070F2 case 62
.text:0000000000407EE2                                         ; jumptable 0000000000407272 case 62
.text:0000000000407EE2                                         ; jumptable 00000000004075BF case 62
.text:0000000000407EE7                 movdqu  xmmword ptr [rdi+2Eh], xmm0
.text:0000000000407EEC
.text:0000000000407EEC loc_407EEC:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407EEC                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407EEC                 lddqu   xmm0, xmmword ptr [rsi+1Eh] ; jumptable 00000000004059FA case 46
.text:0000000000407EEC                                         ; jumptable 0000000000405BF9 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000405D72 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000405EF2 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000406072 case 46
.text:0000000000407EEC                                         ; jumptable 00000000004061F2 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000406372 case 46
.text:0000000000407EEC                                         ; jumptable 00000000004064F2 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000406672 case 46
.text:0000000000407EEC                                         ; jumptable 00000000004067F2 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000406972 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000406AF2 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000406C72 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000406DF2 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000406F72 case 46
.text:0000000000407EEC                                         ; jumptable 00000000004070F2 case 46
.text:0000000000407EEC                                         ; jumptable 0000000000407272 case 46
.text:0000000000407EEC                                         ; jumptable 00000000004075BF case 46
.text:0000000000407EF1                 movdqu  xmmword ptr [rdi+1Eh], xmm0
.text:0000000000407EF6
.text:0000000000407EF6 loc_407EF6:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407EF6                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407EF6                 lddqu   xmm0, xmmword ptr [rsi+0Eh] ; jumptable 00000000004059FA case 30
.text:0000000000407EF6                                         ; jumptable 0000000000405BF9 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000405D72 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000405EF2 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000406072 case 30
.text:0000000000407EF6                                         ; jumptable 00000000004061F2 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000406372 case 30
.text:0000000000407EF6                                         ; jumptable 00000000004064F2 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000406672 case 30
.text:0000000000407EF6                                         ; jumptable 00000000004067F2 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000406972 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000406AF2 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000406C72 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000406DF2 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000406F72 case 30
.text:0000000000407EF6                                         ; jumptable 00000000004070F2 case 30
.text:0000000000407EF6                                         ; jumptable 0000000000407272 case 30
.text:0000000000407EF6                                         ; jumptable 00000000004075BF case 30
.text:0000000000407EFB                 lddqu   xmm1, xmmword ptr [rsi]
.text:0000000000407EFF                 movdqu  xmmword ptr [rdi+0Eh], xmm0
.text:0000000000407F04                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000407F08                 retn
.text:0000000000407F08 ; ---------------------------------------------------------------------------
.text:0000000000407F09                 align 10h
.text:0000000000407F10
.text:0000000000407F10 loc_407F10:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F10                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F10                 mov     rdx, [rsi+6]    ; jumptable 00000000004059FA case 14
.text:0000000000407F10                                         ; jumptable 0000000000405BF9 case 14
.text:0000000000407F10                                         ; jumptable 0000000000405D72 case 14
.text:0000000000407F10                                         ; jumptable 0000000000405EF2 case 14
.text:0000000000407F10                                         ; jumptable 0000000000406072 case 14
.text:0000000000407F10                                         ; jumptable 00000000004061F2 case 14
.text:0000000000407F10                                         ; jumptable 0000000000406372 case 14
.text:0000000000407F10                                         ; jumptable 00000000004064F2 case 14
.text:0000000000407F10                                         ; jumptable 0000000000406672 case 14
.text:0000000000407F10                                         ; jumptable 00000000004067F2 case 14
.text:0000000000407F10                                         ; jumptable 0000000000406972 case 14
.text:0000000000407F10                                         ; jumptable 0000000000406AF2 case 14
.text:0000000000407F10                                         ; jumptable 0000000000406C72 case 14
.text:0000000000407F10                                         ; jumptable 0000000000406DF2 case 14
.text:0000000000407F10                                         ; jumptable 0000000000406F72 case 14
.text:0000000000407F10                                         ; jumptable 00000000004070F2 case 14
.text:0000000000407F10                                         ; jumptable 0000000000407272 case 14
.text:0000000000407F10                                         ; jumptable 00000000004075BF case 14
.text:0000000000407F14                 mov     rcx, [rsi]
.text:0000000000407F17                 mov     [rdi+6], rdx
.text:0000000000407F1B                 mov     [rdi], rcx
.text:0000000000407F1E                 retn
.text:0000000000407F1E ; ---------------------------------------------------------------------------
.text:0000000000407F1F                 align 20h
.text:0000000000407F20
.text:0000000000407F20 loc_407F20:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F20                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F20                 lddqu   xmm0, xmmword ptr [rsi+7Dh] ; jumptable 00000000004059FA case 141
.text:0000000000407F20                                         ; jumptable 0000000000405BF9 case 141
.text:0000000000407F20                                         ; jumptable 0000000000405D72 case 141
.text:0000000000407F20                                         ; jumptable 0000000000405EF2 case 141
.text:0000000000407F20                                         ; jumptable 0000000000406072 case 141
.text:0000000000407F20                                         ; jumptable 00000000004061F2 case 141
.text:0000000000407F20                                         ; jumptable 0000000000406372 case 141
.text:0000000000407F20                                         ; jumptable 00000000004064F2 case 141
.text:0000000000407F20                                         ; jumptable 0000000000406672 case 141
.text:0000000000407F20                                         ; jumptable 00000000004067F2 case 141
.text:0000000000407F20                                         ; jumptable 0000000000406972 case 141
.text:0000000000407F20                                         ; jumptable 0000000000406AF2 case 141
.text:0000000000407F20                                         ; jumptable 0000000000406C72 case 141
.text:0000000000407F20                                         ; jumptable 0000000000406DF2 case 141
.text:0000000000407F20                                         ; jumptable 0000000000406F72 case 141
.text:0000000000407F20                                         ; jumptable 00000000004070F2 case 141
.text:0000000000407F20                                         ; jumptable 0000000000407272 case 141
.text:0000000000407F20                                         ; jumptable 00000000004075BF case 141
.text:0000000000407F25                 movdqu  xmmword ptr [rdi+7Dh], xmm0
.text:0000000000407F2A
.text:0000000000407F2A loc_407F2A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F2A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F2A                 lddqu   xmm0, xmmword ptr [rsi+6Dh] ; jumptable 00000000004059FA case 125
.text:0000000000407F2A                                         ; jumptable 0000000000405BF9 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000405D72 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000405EF2 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000406072 case 125
.text:0000000000407F2A                                         ; jumptable 00000000004061F2 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000406372 case 125
.text:0000000000407F2A                                         ; jumptable 00000000004064F2 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000406672 case 125
.text:0000000000407F2A                                         ; jumptable 00000000004067F2 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000406972 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000406AF2 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000406C72 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000406DF2 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000406F72 case 125
.text:0000000000407F2A                                         ; jumptable 00000000004070F2 case 125
.text:0000000000407F2A                                         ; jumptable 0000000000407272 case 125
.text:0000000000407F2A                                         ; jumptable 00000000004075BF case 125
.text:0000000000407F2F                 movdqu  xmmword ptr [rdi+6Dh], xmm0
.text:0000000000407F34
.text:0000000000407F34 loc_407F34:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F34                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F34                 lddqu   xmm0, xmmword ptr [rsi+5Dh] ; jumptable 00000000004059FA case 109
.text:0000000000407F34                                         ; jumptable 0000000000405BF9 case 109
.text:0000000000407F34                                         ; jumptable 0000000000405D72 case 109
.text:0000000000407F34                                         ; jumptable 0000000000405EF2 case 109
.text:0000000000407F34                                         ; jumptable 0000000000406072 case 109
.text:0000000000407F34                                         ; jumptable 00000000004061F2 case 109
.text:0000000000407F34                                         ; jumptable 0000000000406372 case 109
.text:0000000000407F34                                         ; jumptable 00000000004064F2 case 109
.text:0000000000407F34                                         ; jumptable 0000000000406672 case 109
.text:0000000000407F34                                         ; jumptable 00000000004067F2 case 109
.text:0000000000407F34                                         ; jumptable 0000000000406972 case 109
.text:0000000000407F34                                         ; jumptable 0000000000406AF2 case 109
.text:0000000000407F34                                         ; jumptable 0000000000406C72 case 109
.text:0000000000407F34                                         ; jumptable 0000000000406DF2 case 109
.text:0000000000407F34                                         ; jumptable 0000000000406F72 case 109
.text:0000000000407F34                                         ; jumptable 00000000004070F2 case 109
.text:0000000000407F34                                         ; jumptable 0000000000407272 case 109
.text:0000000000407F34                                         ; jumptable 00000000004075BF case 109
.text:0000000000407F39                 movdqu  xmmword ptr [rdi+5Dh], xmm0
.text:0000000000407F3E
.text:0000000000407F3E loc_407F3E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F3E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F3E                 lddqu   xmm0, xmmword ptr [rsi+4Dh] ; jumptable 00000000004059FA case 93
.text:0000000000407F3E                                         ; jumptable 0000000000405BF9 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000405D72 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000405EF2 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000406072 case 93
.text:0000000000407F3E                                         ; jumptable 00000000004061F2 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000406372 case 93
.text:0000000000407F3E                                         ; jumptable 00000000004064F2 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000406672 case 93
.text:0000000000407F3E                                         ; jumptable 00000000004067F2 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000406972 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000406AF2 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000406C72 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000406DF2 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000406F72 case 93
.text:0000000000407F3E                                         ; jumptable 00000000004070F2 case 93
.text:0000000000407F3E                                         ; jumptable 0000000000407272 case 93
.text:0000000000407F3E                                         ; jumptable 00000000004075BF case 93
.text:0000000000407F43                 movdqu  xmmword ptr [rdi+4Dh], xmm0
.text:0000000000407F48
.text:0000000000407F48 loc_407F48:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F48                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F48                 lddqu   xmm0, xmmword ptr [rsi+3Dh] ; jumptable 00000000004059FA case 77
.text:0000000000407F48                                         ; jumptable 0000000000405BF9 case 77
.text:0000000000407F48                                         ; jumptable 0000000000405D72 case 77
.text:0000000000407F48                                         ; jumptable 0000000000405EF2 case 77
.text:0000000000407F48                                         ; jumptable 0000000000406072 case 77
.text:0000000000407F48                                         ; jumptable 00000000004061F2 case 77
.text:0000000000407F48                                         ; jumptable 0000000000406372 case 77
.text:0000000000407F48                                         ; jumptable 00000000004064F2 case 77
.text:0000000000407F48                                         ; jumptable 0000000000406672 case 77
.text:0000000000407F48                                         ; jumptable 00000000004067F2 case 77
.text:0000000000407F48                                         ; jumptable 0000000000406972 case 77
.text:0000000000407F48                                         ; jumptable 0000000000406AF2 case 77
.text:0000000000407F48                                         ; jumptable 0000000000406C72 case 77
.text:0000000000407F48                                         ; jumptable 0000000000406DF2 case 77
.text:0000000000407F48                                         ; jumptable 0000000000406F72 case 77
.text:0000000000407F48                                         ; jumptable 00000000004070F2 case 77
.text:0000000000407F48                                         ; jumptable 0000000000407272 case 77
.text:0000000000407F48                                         ; jumptable 00000000004075BF case 77
.text:0000000000407F4D                 movdqu  xmmword ptr [rdi+3Dh], xmm0
.text:0000000000407F52
.text:0000000000407F52 loc_407F52:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F52                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F52                 lddqu   xmm0, xmmword ptr [rsi+2Dh] ; jumptable 00000000004059FA case 61
.text:0000000000407F52                                         ; jumptable 0000000000405BF9 case 61
.text:0000000000407F52                                         ; jumptable 0000000000405D72 case 61
.text:0000000000407F52                                         ; jumptable 0000000000405EF2 case 61
.text:0000000000407F52                                         ; jumptable 0000000000406072 case 61
.text:0000000000407F52                                         ; jumptable 00000000004061F2 case 61
.text:0000000000407F52                                         ; jumptable 0000000000406372 case 61
.text:0000000000407F52                                         ; jumptable 00000000004064F2 case 61
.text:0000000000407F52                                         ; jumptable 0000000000406672 case 61
.text:0000000000407F52                                         ; jumptable 00000000004067F2 case 61
.text:0000000000407F52                                         ; jumptable 0000000000406972 case 61
.text:0000000000407F52                                         ; jumptable 0000000000406AF2 case 61
.text:0000000000407F52                                         ; jumptable 0000000000406C72 case 61
.text:0000000000407F52                                         ; jumptable 0000000000406DF2 case 61
.text:0000000000407F52                                         ; jumptable 0000000000406F72 case 61
.text:0000000000407F52                                         ; jumptable 00000000004070F2 case 61
.text:0000000000407F52                                         ; jumptable 0000000000407272 case 61
.text:0000000000407F52                                         ; jumptable 00000000004075BF case 61
.text:0000000000407F57                 movdqu  xmmword ptr [rdi+2Dh], xmm0
.text:0000000000407F5C
.text:0000000000407F5C loc_407F5C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F5C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F5C                 lddqu   xmm0, xmmword ptr [rsi+1Dh] ; jumptable 00000000004059FA case 45
.text:0000000000407F5C                                         ; jumptable 0000000000405BF9 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000405D72 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000405EF2 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000406072 case 45
.text:0000000000407F5C                                         ; jumptable 00000000004061F2 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000406372 case 45
.text:0000000000407F5C                                         ; jumptable 00000000004064F2 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000406672 case 45
.text:0000000000407F5C                                         ; jumptable 00000000004067F2 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000406972 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000406AF2 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000406C72 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000406DF2 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000406F72 case 45
.text:0000000000407F5C                                         ; jumptable 00000000004070F2 case 45
.text:0000000000407F5C                                         ; jumptable 0000000000407272 case 45
.text:0000000000407F5C                                         ; jumptable 00000000004075BF case 45
.text:0000000000407F61                 movdqu  xmmword ptr [rdi+1Dh], xmm0
.text:0000000000407F66
.text:0000000000407F66 loc_407F66:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F66                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F66                 lddqu   xmm0, xmmword ptr [rsi+0Dh] ; jumptable 00000000004059FA case 29
.text:0000000000407F66                                         ; jumptable 0000000000405BF9 case 29
.text:0000000000407F66                                         ; jumptable 0000000000405D72 case 29
.text:0000000000407F66                                         ; jumptable 0000000000405EF2 case 29
.text:0000000000407F66                                         ; jumptable 0000000000406072 case 29
.text:0000000000407F66                                         ; jumptable 00000000004061F2 case 29
.text:0000000000407F66                                         ; jumptable 0000000000406372 case 29
.text:0000000000407F66                                         ; jumptable 00000000004064F2 case 29
.text:0000000000407F66                                         ; jumptable 0000000000406672 case 29
.text:0000000000407F66                                         ; jumptable 00000000004067F2 case 29
.text:0000000000407F66                                         ; jumptable 0000000000406972 case 29
.text:0000000000407F66                                         ; jumptable 0000000000406AF2 case 29
.text:0000000000407F66                                         ; jumptable 0000000000406C72 case 29
.text:0000000000407F66                                         ; jumptable 0000000000406DF2 case 29
.text:0000000000407F66                                         ; jumptable 0000000000406F72 case 29
.text:0000000000407F66                                         ; jumptable 00000000004070F2 case 29
.text:0000000000407F66                                         ; jumptable 0000000000407272 case 29
.text:0000000000407F66                                         ; jumptable 00000000004075BF case 29
.text:0000000000407F6B                 lddqu   xmm1, xmmword ptr [rsi]
.text:0000000000407F6F                 movdqu  xmmword ptr [rdi+0Dh], xmm0
.text:0000000000407F74                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000407F78                 retn
.text:0000000000407F78 ; ---------------------------------------------------------------------------
.text:0000000000407F79                 align 20h
.text:0000000000407F80
.text:0000000000407F80 loc_407F80:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F80                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F80                 mov     rdx, [rsi+5]    ; jumptable 00000000004059FA case 13
.text:0000000000407F80                                         ; jumptable 0000000000405BF9 case 13
.text:0000000000407F80                                         ; jumptable 0000000000405D72 case 13
.text:0000000000407F80                                         ; jumptable 0000000000405EF2 case 13
.text:0000000000407F80                                         ; jumptable 0000000000406072 case 13
.text:0000000000407F80                                         ; jumptable 00000000004061F2 case 13
.text:0000000000407F80                                         ; jumptable 0000000000406372 case 13
.text:0000000000407F80                                         ; jumptable 00000000004064F2 case 13
.text:0000000000407F80                                         ; jumptable 0000000000406672 case 13
.text:0000000000407F80                                         ; jumptable 00000000004067F2 case 13
.text:0000000000407F80                                         ; jumptable 0000000000406972 case 13
.text:0000000000407F80                                         ; jumptable 0000000000406AF2 case 13
.text:0000000000407F80                                         ; jumptable 0000000000406C72 case 13
.text:0000000000407F80                                         ; jumptable 0000000000406DF2 case 13
.text:0000000000407F80                                         ; jumptable 0000000000406F72 case 13
.text:0000000000407F80                                         ; jumptable 00000000004070F2 case 13
.text:0000000000407F80                                         ; jumptable 0000000000407272 case 13
.text:0000000000407F80                                         ; jumptable 00000000004075BF case 13
.text:0000000000407F84                 mov     rcx, [rsi]
.text:0000000000407F87                 mov     [rdi+5], rdx
.text:0000000000407F8B                 mov     [rdi], rcx
.text:0000000000407F8E                 retn
.text:0000000000407F8E ; ---------------------------------------------------------------------------
.text:0000000000407F8F                 align 10h
.text:0000000000407F90
.text:0000000000407F90 loc_407F90:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F90                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F90                 lddqu   xmm0, xmmword ptr [rsi+7Ch] ; jumptable 00000000004059FA case 140
.text:0000000000407F90                                         ; jumptable 0000000000405BF9 case 140
.text:0000000000407F90                                         ; jumptable 0000000000405D72 case 140
.text:0000000000407F90                                         ; jumptable 0000000000405EF2 case 140
.text:0000000000407F90                                         ; jumptable 0000000000406072 case 140
.text:0000000000407F90                                         ; jumptable 00000000004061F2 case 140
.text:0000000000407F90                                         ; jumptable 0000000000406372 case 140
.text:0000000000407F90                                         ; jumptable 00000000004064F2 case 140
.text:0000000000407F90                                         ; jumptable 0000000000406672 case 140
.text:0000000000407F90                                         ; jumptable 00000000004067F2 case 140
.text:0000000000407F90                                         ; jumptable 0000000000406972 case 140
.text:0000000000407F90                                         ; jumptable 0000000000406AF2 case 140
.text:0000000000407F90                                         ; jumptable 0000000000406C72 case 140
.text:0000000000407F90                                         ; jumptable 0000000000406DF2 case 140
.text:0000000000407F90                                         ; jumptable 0000000000406F72 case 140
.text:0000000000407F90                                         ; jumptable 00000000004070F2 case 140
.text:0000000000407F90                                         ; jumptable 0000000000407272 case 140
.text:0000000000407F90                                         ; jumptable 00000000004075BF case 140
.text:0000000000407F95                 movdqu  xmmword ptr [rdi+7Ch], xmm0
.text:0000000000407F9A
.text:0000000000407F9A loc_407F9A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407F9A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407F9A                 lddqu   xmm0, xmmword ptr [rsi+6Ch] ; jumptable 00000000004059FA case 124
.text:0000000000407F9A                                         ; jumptable 0000000000405BF9 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000405D72 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000405EF2 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000406072 case 124
.text:0000000000407F9A                                         ; jumptable 00000000004061F2 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000406372 case 124
.text:0000000000407F9A                                         ; jumptable 00000000004064F2 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000406672 case 124
.text:0000000000407F9A                                         ; jumptable 00000000004067F2 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000406972 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000406AF2 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000406C72 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000406DF2 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000406F72 case 124
.text:0000000000407F9A                                         ; jumptable 00000000004070F2 case 124
.text:0000000000407F9A                                         ; jumptable 0000000000407272 case 124
.text:0000000000407F9A                                         ; jumptable 00000000004075BF case 124
.text:0000000000407F9F                 movdqu  xmmword ptr [rdi+6Ch], xmm0
.text:0000000000407FA4
.text:0000000000407FA4 loc_407FA4:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407FA4                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407FA4                 lddqu   xmm0, xmmword ptr [rsi+5Ch] ; jumptable 00000000004059FA case 108
.text:0000000000407FA4                                         ; jumptable 0000000000405BF9 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000405D72 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000405EF2 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000406072 case 108
.text:0000000000407FA4                                         ; jumptable 00000000004061F2 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000406372 case 108
.text:0000000000407FA4                                         ; jumptable 00000000004064F2 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000406672 case 108
.text:0000000000407FA4                                         ; jumptable 00000000004067F2 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000406972 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000406AF2 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000406C72 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000406DF2 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000406F72 case 108
.text:0000000000407FA4                                         ; jumptable 00000000004070F2 case 108
.text:0000000000407FA4                                         ; jumptable 0000000000407272 case 108
.text:0000000000407FA4                                         ; jumptable 00000000004075BF case 108
.text:0000000000407FA9                 movdqu  xmmword ptr [rdi+5Ch], xmm0
.text:0000000000407FAE
.text:0000000000407FAE loc_407FAE:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407FAE                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407FAE                 lddqu   xmm0, xmmword ptr [rsi+4Ch] ; jumptable 00000000004059FA case 92
.text:0000000000407FAE                                         ; jumptable 0000000000405BF9 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000405D72 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000405EF2 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000406072 case 92
.text:0000000000407FAE                                         ; jumptable 00000000004061F2 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000406372 case 92
.text:0000000000407FAE                                         ; jumptable 00000000004064F2 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000406672 case 92
.text:0000000000407FAE                                         ; jumptable 00000000004067F2 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000406972 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000406AF2 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000406C72 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000406DF2 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000406F72 case 92
.text:0000000000407FAE                                         ; jumptable 00000000004070F2 case 92
.text:0000000000407FAE                                         ; jumptable 0000000000407272 case 92
.text:0000000000407FAE                                         ; jumptable 00000000004075BF case 92
.text:0000000000407FB3                 movdqu  xmmword ptr [rdi+4Ch], xmm0
.text:0000000000407FB8
.text:0000000000407FB8 loc_407FB8:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407FB8                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407FB8                 lddqu   xmm0, xmmword ptr [rsi+3Ch] ; jumptable 00000000004059FA case 76
.text:0000000000407FB8                                         ; jumptable 0000000000405BF9 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000405D72 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000405EF2 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000406072 case 76
.text:0000000000407FB8                                         ; jumptable 00000000004061F2 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000406372 case 76
.text:0000000000407FB8                                         ; jumptable 00000000004064F2 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000406672 case 76
.text:0000000000407FB8                                         ; jumptable 00000000004067F2 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000406972 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000406AF2 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000406C72 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000406DF2 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000406F72 case 76
.text:0000000000407FB8                                         ; jumptable 00000000004070F2 case 76
.text:0000000000407FB8                                         ; jumptable 0000000000407272 case 76
.text:0000000000407FB8                                         ; jumptable 00000000004075BF case 76
.text:0000000000407FBD                 movdqu  xmmword ptr [rdi+3Ch], xmm0
.text:0000000000407FC2
.text:0000000000407FC2 loc_407FC2:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407FC2                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407FC2                 lddqu   xmm0, xmmword ptr [rsi+2Ch] ; jumptable 00000000004059FA case 60
.text:0000000000407FC2                                         ; jumptable 0000000000405BF9 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000405D72 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000405EF2 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000406072 case 60
.text:0000000000407FC2                                         ; jumptable 00000000004061F2 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000406372 case 60
.text:0000000000407FC2                                         ; jumptable 00000000004064F2 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000406672 case 60
.text:0000000000407FC2                                         ; jumptable 00000000004067F2 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000406972 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000406AF2 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000406C72 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000406DF2 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000406F72 case 60
.text:0000000000407FC2                                         ; jumptable 00000000004070F2 case 60
.text:0000000000407FC2                                         ; jumptable 0000000000407272 case 60
.text:0000000000407FC2                                         ; jumptable 00000000004075BF case 60
.text:0000000000407FC7                 movdqu  xmmword ptr [rdi+2Ch], xmm0
.text:0000000000407FCC
.text:0000000000407FCC loc_407FCC:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407FCC                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407FCC                 lddqu   xmm0, xmmword ptr [rsi+1Ch] ; jumptable 00000000004059FA case 44
.text:0000000000407FCC                                         ; jumptable 0000000000405BF9 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000405D72 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000405EF2 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000406072 case 44
.text:0000000000407FCC                                         ; jumptable 00000000004061F2 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000406372 case 44
.text:0000000000407FCC                                         ; jumptable 00000000004064F2 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000406672 case 44
.text:0000000000407FCC                                         ; jumptable 00000000004067F2 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000406972 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000406AF2 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000406C72 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000406DF2 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000406F72 case 44
.text:0000000000407FCC                                         ; jumptable 00000000004070F2 case 44
.text:0000000000407FCC                                         ; jumptable 0000000000407272 case 44
.text:0000000000407FCC                                         ; jumptable 00000000004075BF case 44
.text:0000000000407FD1                 movdqu  xmmword ptr [rdi+1Ch], xmm0
.text:0000000000407FD6
.text:0000000000407FD6 loc_407FD6:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407FD6                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407FD6                 lddqu   xmm0, xmmword ptr [rsi+0Ch] ; jumptable 00000000004059FA case 28
.text:0000000000407FD6                                         ; jumptable 0000000000405BF9 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000405D72 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000405EF2 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000406072 case 28
.text:0000000000407FD6                                         ; jumptable 00000000004061F2 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000406372 case 28
.text:0000000000407FD6                                         ; jumptable 00000000004064F2 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000406672 case 28
.text:0000000000407FD6                                         ; jumptable 00000000004067F2 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000406972 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000406AF2 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000406C72 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000406DF2 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000406F72 case 28
.text:0000000000407FD6                                         ; jumptable 00000000004070F2 case 28
.text:0000000000407FD6                                         ; jumptable 0000000000407272 case 28
.text:0000000000407FD6                                         ; jumptable 00000000004075BF case 28
.text:0000000000407FDB                 lddqu   xmm1, xmmword ptr [rsi]
.text:0000000000407FDF                 movdqu  xmmword ptr [rdi+0Ch], xmm0
.text:0000000000407FE4                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000407FE8                 retn
.text:0000000000407FE8 ; ---------------------------------------------------------------------------
.text:0000000000407FE9                 align 10h
.text:0000000000407FF0
.text:0000000000407FF0 loc_407FF0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000407FF0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000407FF0                 mov     rdx, [rsi+4]    ; jumptable 00000000004059FA case 12
.text:0000000000407FF0                                         ; jumptable 0000000000405BF9 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000405D72 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000405EF2 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000406072 case 12
.text:0000000000407FF0                                         ; jumptable 00000000004061F2 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000406372 case 12
.text:0000000000407FF0                                         ; jumptable 00000000004064F2 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000406672 case 12
.text:0000000000407FF0                                         ; jumptable 00000000004067F2 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000406972 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000406AF2 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000406C72 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000406DF2 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000406F72 case 12
.text:0000000000407FF0                                         ; jumptable 00000000004070F2 case 12
.text:0000000000407FF0                                         ; jumptable 0000000000407272 case 12
.text:0000000000407FF0                                         ; jumptable 00000000004075BF case 12
.text:0000000000407FF4                 mov     rcx, [rsi]
.text:0000000000407FF7                 mov     [rdi+4], rdx
.text:0000000000407FFB                 mov     [rdi], rcx
.text:0000000000407FFE                 retn
.text:0000000000407FFE ; ---------------------------------------------------------------------------
.text:0000000000407FFF                 align 20h
.text:0000000000408000
.text:0000000000408000 loc_408000:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408000                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408000                 lddqu   xmm0, xmmword ptr [rsi+7Bh] ; jumptable 00000000004059FA case 139
.text:0000000000408000                                         ; jumptable 0000000000405BF9 case 139
.text:0000000000408000                                         ; jumptable 0000000000405D72 case 139
.text:0000000000408000                                         ; jumptable 0000000000405EF2 case 139
.text:0000000000408000                                         ; jumptable 0000000000406072 case 139
.text:0000000000408000                                         ; jumptable 00000000004061F2 case 139
.text:0000000000408000                                         ; jumptable 0000000000406372 case 139
.text:0000000000408000                                         ; jumptable 00000000004064F2 case 139
.text:0000000000408000                                         ; jumptable 0000000000406672 case 139
.text:0000000000408000                                         ; jumptable 00000000004067F2 case 139
.text:0000000000408000                                         ; jumptable 0000000000406972 case 139
.text:0000000000408000                                         ; jumptable 0000000000406AF2 case 139
.text:0000000000408000                                         ; jumptable 0000000000406C72 case 139
.text:0000000000408000                                         ; jumptable 0000000000406DF2 case 139
.text:0000000000408000                                         ; jumptable 0000000000406F72 case 139
.text:0000000000408000                                         ; jumptable 00000000004070F2 case 139
.text:0000000000408000                                         ; jumptable 0000000000407272 case 139
.text:0000000000408000                                         ; jumptable 00000000004075BF case 139
.text:0000000000408005                 movdqu  xmmword ptr [rdi+7Bh], xmm0
.text:000000000040800A
.text:000000000040800A loc_40800A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040800A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040800A                 lddqu   xmm0, xmmword ptr [rsi+6Bh] ; jumptable 00000000004059FA case 123
.text:000000000040800A                                         ; jumptable 0000000000405BF9 case 123
.text:000000000040800A                                         ; jumptable 0000000000405D72 case 123
.text:000000000040800A                                         ; jumptable 0000000000405EF2 case 123
.text:000000000040800A                                         ; jumptable 0000000000406072 case 123
.text:000000000040800A                                         ; jumptable 00000000004061F2 case 123
.text:000000000040800A                                         ; jumptable 0000000000406372 case 123
.text:000000000040800A                                         ; jumptable 00000000004064F2 case 123
.text:000000000040800A                                         ; jumptable 0000000000406672 case 123
.text:000000000040800A                                         ; jumptable 00000000004067F2 case 123
.text:000000000040800A                                         ; jumptable 0000000000406972 case 123
.text:000000000040800A                                         ; jumptable 0000000000406AF2 case 123
.text:000000000040800A                                         ; jumptable 0000000000406C72 case 123
.text:000000000040800A                                         ; jumptable 0000000000406DF2 case 123
.text:000000000040800A                                         ; jumptable 0000000000406F72 case 123
.text:000000000040800A                                         ; jumptable 00000000004070F2 case 123
.text:000000000040800A                                         ; jumptable 0000000000407272 case 123
.text:000000000040800A                                         ; jumptable 00000000004075BF case 123
.text:000000000040800F                 movdqu  xmmword ptr [rdi+6Bh], xmm0
.text:0000000000408014
.text:0000000000408014 loc_408014:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408014                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408014                 lddqu   xmm0, xmmword ptr [rsi+5Bh] ; jumptable 00000000004059FA case 107
.text:0000000000408014                                         ; jumptable 0000000000405BF9 case 107
.text:0000000000408014                                         ; jumptable 0000000000405D72 case 107
.text:0000000000408014                                         ; jumptable 0000000000405EF2 case 107
.text:0000000000408014                                         ; jumptable 0000000000406072 case 107
.text:0000000000408014                                         ; jumptable 00000000004061F2 case 107
.text:0000000000408014                                         ; jumptable 0000000000406372 case 107
.text:0000000000408014                                         ; jumptable 00000000004064F2 case 107
.text:0000000000408014                                         ; jumptable 0000000000406672 case 107
.text:0000000000408014                                         ; jumptable 00000000004067F2 case 107
.text:0000000000408014                                         ; jumptable 0000000000406972 case 107
.text:0000000000408014                                         ; jumptable 0000000000406AF2 case 107
.text:0000000000408014                                         ; jumptable 0000000000406C72 case 107
.text:0000000000408014                                         ; jumptable 0000000000406DF2 case 107
.text:0000000000408014                                         ; jumptable 0000000000406F72 case 107
.text:0000000000408014                                         ; jumptable 00000000004070F2 case 107
.text:0000000000408014                                         ; jumptable 0000000000407272 case 107
.text:0000000000408014                                         ; jumptable 00000000004075BF case 107
.text:0000000000408019                 movdqu  xmmword ptr [rdi+5Bh], xmm0
.text:000000000040801E
.text:000000000040801E loc_40801E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040801E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040801E                 lddqu   xmm0, xmmword ptr [rsi+4Bh] ; jumptable 00000000004059FA case 91
.text:000000000040801E                                         ; jumptable 0000000000405BF9 case 91
.text:000000000040801E                                         ; jumptable 0000000000405D72 case 91
.text:000000000040801E                                         ; jumptable 0000000000405EF2 case 91
.text:000000000040801E                                         ; jumptable 0000000000406072 case 91
.text:000000000040801E                                         ; jumptable 00000000004061F2 case 91
.text:000000000040801E                                         ; jumptable 0000000000406372 case 91
.text:000000000040801E                                         ; jumptable 00000000004064F2 case 91
.text:000000000040801E                                         ; jumptable 0000000000406672 case 91
.text:000000000040801E                                         ; jumptable 00000000004067F2 case 91
.text:000000000040801E                                         ; jumptable 0000000000406972 case 91
.text:000000000040801E                                         ; jumptable 0000000000406AF2 case 91
.text:000000000040801E                                         ; jumptable 0000000000406C72 case 91
.text:000000000040801E                                         ; jumptable 0000000000406DF2 case 91
.text:000000000040801E                                         ; jumptable 0000000000406F72 case 91
.text:000000000040801E                                         ; jumptable 00000000004070F2 case 91
.text:000000000040801E                                         ; jumptable 0000000000407272 case 91
.text:000000000040801E                                         ; jumptable 00000000004075BF case 91
.text:0000000000408023                 movdqu  xmmword ptr [rdi+4Bh], xmm0
.text:0000000000408028
.text:0000000000408028 loc_408028:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408028                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408028                 lddqu   xmm0, xmmword ptr [rsi+3Bh] ; jumptable 00000000004059FA case 75
.text:0000000000408028                                         ; jumptable 0000000000405BF9 case 75
.text:0000000000408028                                         ; jumptable 0000000000405D72 case 75
.text:0000000000408028                                         ; jumptable 0000000000405EF2 case 75
.text:0000000000408028                                         ; jumptable 0000000000406072 case 75
.text:0000000000408028                                         ; jumptable 00000000004061F2 case 75
.text:0000000000408028                                         ; jumptable 0000000000406372 case 75
.text:0000000000408028                                         ; jumptable 00000000004064F2 case 75
.text:0000000000408028                                         ; jumptable 0000000000406672 case 75
.text:0000000000408028                                         ; jumptable 00000000004067F2 case 75
.text:0000000000408028                                         ; jumptable 0000000000406972 case 75
.text:0000000000408028                                         ; jumptable 0000000000406AF2 case 75
.text:0000000000408028                                         ; jumptable 0000000000406C72 case 75
.text:0000000000408028                                         ; jumptable 0000000000406DF2 case 75
.text:0000000000408028                                         ; jumptable 0000000000406F72 case 75
.text:0000000000408028                                         ; jumptable 00000000004070F2 case 75
.text:0000000000408028                                         ; jumptable 0000000000407272 case 75
.text:0000000000408028                                         ; jumptable 00000000004075BF case 75
.text:000000000040802D                 movdqu  xmmword ptr [rdi+3Bh], xmm0
.text:0000000000408032
.text:0000000000408032 loc_408032:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408032                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408032                 lddqu   xmm0, xmmword ptr [rsi+2Bh] ; jumptable 00000000004059FA case 59
.text:0000000000408032                                         ; jumptable 0000000000405BF9 case 59
.text:0000000000408032                                         ; jumptable 0000000000405D72 case 59
.text:0000000000408032                                         ; jumptable 0000000000405EF2 case 59
.text:0000000000408032                                         ; jumptable 0000000000406072 case 59
.text:0000000000408032                                         ; jumptable 00000000004061F2 case 59
.text:0000000000408032                                         ; jumptable 0000000000406372 case 59
.text:0000000000408032                                         ; jumptable 00000000004064F2 case 59
.text:0000000000408032                                         ; jumptable 0000000000406672 case 59
.text:0000000000408032                                         ; jumptable 00000000004067F2 case 59
.text:0000000000408032                                         ; jumptable 0000000000406972 case 59
.text:0000000000408032                                         ; jumptable 0000000000406AF2 case 59
.text:0000000000408032                                         ; jumptable 0000000000406C72 case 59
.text:0000000000408032                                         ; jumptable 0000000000406DF2 case 59
.text:0000000000408032                                         ; jumptable 0000000000406F72 case 59
.text:0000000000408032                                         ; jumptable 00000000004070F2 case 59
.text:0000000000408032                                         ; jumptable 0000000000407272 case 59
.text:0000000000408032                                         ; jumptable 00000000004075BF case 59
.text:0000000000408037                 movdqu  xmmword ptr [rdi+2Bh], xmm0
.text:000000000040803C
.text:000000000040803C loc_40803C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040803C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040803C                 lddqu   xmm0, xmmword ptr [rsi+1Bh] ; jumptable 00000000004059FA case 43
.text:000000000040803C                                         ; jumptable 0000000000405BF9 case 43
.text:000000000040803C                                         ; jumptable 0000000000405D72 case 43
.text:000000000040803C                                         ; jumptable 0000000000405EF2 case 43
.text:000000000040803C                                         ; jumptable 0000000000406072 case 43
.text:000000000040803C                                         ; jumptable 00000000004061F2 case 43
.text:000000000040803C                                         ; jumptable 0000000000406372 case 43
.text:000000000040803C                                         ; jumptable 00000000004064F2 case 43
.text:000000000040803C                                         ; jumptable 0000000000406672 case 43
.text:000000000040803C                                         ; jumptable 00000000004067F2 case 43
.text:000000000040803C                                         ; jumptable 0000000000406972 case 43
.text:000000000040803C                                         ; jumptable 0000000000406AF2 case 43
.text:000000000040803C                                         ; jumptable 0000000000406C72 case 43
.text:000000000040803C                                         ; jumptable 0000000000406DF2 case 43
.text:000000000040803C                                         ; jumptable 0000000000406F72 case 43
.text:000000000040803C                                         ; jumptable 00000000004070F2 case 43
.text:000000000040803C                                         ; jumptable 0000000000407272 case 43
.text:000000000040803C                                         ; jumptable 00000000004075BF case 43
.text:0000000000408041                 movdqu  xmmword ptr [rdi+1Bh], xmm0
.text:0000000000408046
.text:0000000000408046 loc_408046:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408046                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408046                 lddqu   xmm0, xmmword ptr [rsi+0Bh] ; jumptable 00000000004059FA case 27
.text:0000000000408046                                         ; jumptable 0000000000405BF9 case 27
.text:0000000000408046                                         ; jumptable 0000000000405D72 case 27
.text:0000000000408046                                         ; jumptable 0000000000405EF2 case 27
.text:0000000000408046                                         ; jumptable 0000000000406072 case 27
.text:0000000000408046                                         ; jumptable 00000000004061F2 case 27
.text:0000000000408046                                         ; jumptable 0000000000406372 case 27
.text:0000000000408046                                         ; jumptable 00000000004064F2 case 27
.text:0000000000408046                                         ; jumptable 0000000000406672 case 27
.text:0000000000408046                                         ; jumptable 00000000004067F2 case 27
.text:0000000000408046                                         ; jumptable 0000000000406972 case 27
.text:0000000000408046                                         ; jumptable 0000000000406AF2 case 27
.text:0000000000408046                                         ; jumptable 0000000000406C72 case 27
.text:0000000000408046                                         ; jumptable 0000000000406DF2 case 27
.text:0000000000408046                                         ; jumptable 0000000000406F72 case 27
.text:0000000000408046                                         ; jumptable 00000000004070F2 case 27
.text:0000000000408046                                         ; jumptable 0000000000407272 case 27
.text:0000000000408046                                         ; jumptable 00000000004075BF case 27
.text:000000000040804B                 lddqu   xmm1, xmmword ptr [rsi]
.text:000000000040804F                 movdqu  xmmword ptr [rdi+0Bh], xmm0
.text:0000000000408054                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000408058                 retn
.text:0000000000408058 ; ---------------------------------------------------------------------------
.text:0000000000408059                 align 20h
.text:0000000000408060
.text:0000000000408060 loc_408060:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408060                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408060                 mov     rdx, [rsi+3]    ; jumptable 00000000004059FA case 11
.text:0000000000408060                                         ; jumptable 0000000000405BF9 case 11
.text:0000000000408060                                         ; jumptable 0000000000405D72 case 11
.text:0000000000408060                                         ; jumptable 0000000000405EF2 case 11
.text:0000000000408060                                         ; jumptable 0000000000406072 case 11
.text:0000000000408060                                         ; jumptable 00000000004061F2 case 11
.text:0000000000408060                                         ; jumptable 0000000000406372 case 11
.text:0000000000408060                                         ; jumptable 00000000004064F2 case 11
.text:0000000000408060                                         ; jumptable 0000000000406672 case 11
.text:0000000000408060                                         ; jumptable 00000000004067F2 case 11
.text:0000000000408060                                         ; jumptable 0000000000406972 case 11
.text:0000000000408060                                         ; jumptable 0000000000406AF2 case 11
.text:0000000000408060                                         ; jumptable 0000000000406C72 case 11
.text:0000000000408060                                         ; jumptable 0000000000406DF2 case 11
.text:0000000000408060                                         ; jumptable 0000000000406F72 case 11
.text:0000000000408060                                         ; jumptable 00000000004070F2 case 11
.text:0000000000408060                                         ; jumptable 0000000000407272 case 11
.text:0000000000408060                                         ; jumptable 00000000004075BF case 11
.text:0000000000408064                 mov     rcx, [rsi]
.text:0000000000408067                 mov     [rdi+3], rdx
.text:000000000040806B                 mov     [rdi], rcx
.text:000000000040806E                 retn
.text:000000000040806E ; ---------------------------------------------------------------------------
.text:000000000040806F                 align 10h
.text:0000000000408070
.text:0000000000408070 loc_408070:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408070                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408070                 lddqu   xmm0, xmmword ptr [rsi+7Ah] ; jumptable 00000000004059FA case 138
.text:0000000000408070                                         ; jumptable 0000000000405BF9 case 138
.text:0000000000408070                                         ; jumptable 0000000000405D72 case 138
.text:0000000000408070                                         ; jumptable 0000000000405EF2 case 138
.text:0000000000408070                                         ; jumptable 0000000000406072 case 138
.text:0000000000408070                                         ; jumptable 00000000004061F2 case 138
.text:0000000000408070                                         ; jumptable 0000000000406372 case 138
.text:0000000000408070                                         ; jumptable 00000000004064F2 case 138
.text:0000000000408070                                         ; jumptable 0000000000406672 case 138
.text:0000000000408070                                         ; jumptable 00000000004067F2 case 138
.text:0000000000408070                                         ; jumptable 0000000000406972 case 138
.text:0000000000408070                                         ; jumptable 0000000000406AF2 case 138
.text:0000000000408070                                         ; jumptable 0000000000406C72 case 138
.text:0000000000408070                                         ; jumptable 0000000000406DF2 case 138
.text:0000000000408070                                         ; jumptable 0000000000406F72 case 138
.text:0000000000408070                                         ; jumptable 00000000004070F2 case 138
.text:0000000000408070                                         ; jumptable 0000000000407272 case 138
.text:0000000000408070                                         ; jumptable 00000000004075BF case 138
.text:0000000000408075                 movdqu  xmmword ptr [rdi+7Ah], xmm0
.text:000000000040807A
.text:000000000040807A loc_40807A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040807A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040807A                 lddqu   xmm0, xmmword ptr [rsi+6Ah] ; jumptable 00000000004059FA case 122
.text:000000000040807A                                         ; jumptable 0000000000405BF9 case 122
.text:000000000040807A                                         ; jumptable 0000000000405D72 case 122
.text:000000000040807A                                         ; jumptable 0000000000405EF2 case 122
.text:000000000040807A                                         ; jumptable 0000000000406072 case 122
.text:000000000040807A                                         ; jumptable 00000000004061F2 case 122
.text:000000000040807A                                         ; jumptable 0000000000406372 case 122
.text:000000000040807A                                         ; jumptable 00000000004064F2 case 122
.text:000000000040807A                                         ; jumptable 0000000000406672 case 122
.text:000000000040807A                                         ; jumptable 00000000004067F2 case 122
.text:000000000040807A                                         ; jumptable 0000000000406972 case 122
.text:000000000040807A                                         ; jumptable 0000000000406AF2 case 122
.text:000000000040807A                                         ; jumptable 0000000000406C72 case 122
.text:000000000040807A                                         ; jumptable 0000000000406DF2 case 122
.text:000000000040807A                                         ; jumptable 0000000000406F72 case 122
.text:000000000040807A                                         ; jumptable 00000000004070F2 case 122
.text:000000000040807A                                         ; jumptable 0000000000407272 case 122
.text:000000000040807A                                         ; jumptable 00000000004075BF case 122
.text:000000000040807F                 movdqu  xmmword ptr [rdi+6Ah], xmm0
.text:0000000000408084
.text:0000000000408084 loc_408084:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408084                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408084                 lddqu   xmm0, xmmword ptr [rsi+5Ah] ; jumptable 00000000004059FA case 106
.text:0000000000408084                                         ; jumptable 0000000000405BF9 case 106
.text:0000000000408084                                         ; jumptable 0000000000405D72 case 106
.text:0000000000408084                                         ; jumptable 0000000000405EF2 case 106
.text:0000000000408084                                         ; jumptable 0000000000406072 case 106
.text:0000000000408084                                         ; jumptable 00000000004061F2 case 106
.text:0000000000408084                                         ; jumptable 0000000000406372 case 106
.text:0000000000408084                                         ; jumptable 00000000004064F2 case 106
.text:0000000000408084                                         ; jumptable 0000000000406672 case 106
.text:0000000000408084                                         ; jumptable 00000000004067F2 case 106
.text:0000000000408084                                         ; jumptable 0000000000406972 case 106
.text:0000000000408084                                         ; jumptable 0000000000406AF2 case 106
.text:0000000000408084                                         ; jumptable 0000000000406C72 case 106
.text:0000000000408084                                         ; jumptable 0000000000406DF2 case 106
.text:0000000000408084                                         ; jumptable 0000000000406F72 case 106
.text:0000000000408084                                         ; jumptable 00000000004070F2 case 106
.text:0000000000408084                                         ; jumptable 0000000000407272 case 106
.text:0000000000408084                                         ; jumptable 00000000004075BF case 106
.text:0000000000408089                 movdqu  xmmword ptr [rdi+5Ah], xmm0
.text:000000000040808E
.text:000000000040808E loc_40808E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040808E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040808E                 lddqu   xmm0, xmmword ptr [rsi+4Ah] ; jumptable 00000000004059FA case 90
.text:000000000040808E                                         ; jumptable 0000000000405BF9 case 90
.text:000000000040808E                                         ; jumptable 0000000000405D72 case 90
.text:000000000040808E                                         ; jumptable 0000000000405EF2 case 90
.text:000000000040808E                                         ; jumptable 0000000000406072 case 90
.text:000000000040808E                                         ; jumptable 00000000004061F2 case 90
.text:000000000040808E                                         ; jumptable 0000000000406372 case 90
.text:000000000040808E                                         ; jumptable 00000000004064F2 case 90
.text:000000000040808E                                         ; jumptable 0000000000406672 case 90
.text:000000000040808E                                         ; jumptable 00000000004067F2 case 90
.text:000000000040808E                                         ; jumptable 0000000000406972 case 90
.text:000000000040808E                                         ; jumptable 0000000000406AF2 case 90
.text:000000000040808E                                         ; jumptable 0000000000406C72 case 90
.text:000000000040808E                                         ; jumptable 0000000000406DF2 case 90
.text:000000000040808E                                         ; jumptable 0000000000406F72 case 90
.text:000000000040808E                                         ; jumptable 00000000004070F2 case 90
.text:000000000040808E                                         ; jumptable 0000000000407272 case 90
.text:000000000040808E                                         ; jumptable 00000000004075BF case 90
.text:0000000000408093                 movdqu  xmmword ptr [rdi+4Ah], xmm0
.text:0000000000408098
.text:0000000000408098 loc_408098:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408098                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408098                 lddqu   xmm0, xmmword ptr [rsi+3Ah] ; jumptable 00000000004059FA case 74
.text:0000000000408098                                         ; jumptable 0000000000405BF9 case 74
.text:0000000000408098                                         ; jumptable 0000000000405D72 case 74
.text:0000000000408098                                         ; jumptable 0000000000405EF2 case 74
.text:0000000000408098                                         ; jumptable 0000000000406072 case 74
.text:0000000000408098                                         ; jumptable 00000000004061F2 case 74
.text:0000000000408098                                         ; jumptable 0000000000406372 case 74
.text:0000000000408098                                         ; jumptable 00000000004064F2 case 74
.text:0000000000408098                                         ; jumptable 0000000000406672 case 74
.text:0000000000408098                                         ; jumptable 00000000004067F2 case 74
.text:0000000000408098                                         ; jumptable 0000000000406972 case 74
.text:0000000000408098                                         ; jumptable 0000000000406AF2 case 74
.text:0000000000408098                                         ; jumptable 0000000000406C72 case 74
.text:0000000000408098                                         ; jumptable 0000000000406DF2 case 74
.text:0000000000408098                                         ; jumptable 0000000000406F72 case 74
.text:0000000000408098                                         ; jumptable 00000000004070F2 case 74
.text:0000000000408098                                         ; jumptable 0000000000407272 case 74
.text:0000000000408098                                         ; jumptable 00000000004075BF case 74
.text:000000000040809D                 movdqu  xmmword ptr [rdi+3Ah], xmm0
.text:00000000004080A2
.text:00000000004080A2 loc_4080A2:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004080A2                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004080A2                 lddqu   xmm0, xmmword ptr [rsi+2Ah] ; jumptable 00000000004059FA case 58
.text:00000000004080A2                                         ; jumptable 0000000000405BF9 case 58
.text:00000000004080A2                                         ; jumptable 0000000000405D72 case 58
.text:00000000004080A2                                         ; jumptable 0000000000405EF2 case 58
.text:00000000004080A2                                         ; jumptable 0000000000406072 case 58
.text:00000000004080A2                                         ; jumptable 00000000004061F2 case 58
.text:00000000004080A2                                         ; jumptable 0000000000406372 case 58
.text:00000000004080A2                                         ; jumptable 00000000004064F2 case 58
.text:00000000004080A2                                         ; jumptable 0000000000406672 case 58
.text:00000000004080A2                                         ; jumptable 00000000004067F2 case 58
.text:00000000004080A2                                         ; jumptable 0000000000406972 case 58
.text:00000000004080A2                                         ; jumptable 0000000000406AF2 case 58
.text:00000000004080A2                                         ; jumptable 0000000000406C72 case 58
.text:00000000004080A2                                         ; jumptable 0000000000406DF2 case 58
.text:00000000004080A2                                         ; jumptable 0000000000406F72 case 58
.text:00000000004080A2                                         ; jumptable 00000000004070F2 case 58
.text:00000000004080A2                                         ; jumptable 0000000000407272 case 58
.text:00000000004080A2                                         ; jumptable 00000000004075BF case 58
.text:00000000004080A7                 movdqu  xmmword ptr [rdi+2Ah], xmm0
.text:00000000004080AC
.text:00000000004080AC loc_4080AC:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004080AC                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004080AC                 lddqu   xmm0, xmmword ptr [rsi+1Ah] ; jumptable 00000000004059FA case 42
.text:00000000004080AC                                         ; jumptable 0000000000405BF9 case 42
.text:00000000004080AC                                         ; jumptable 0000000000405D72 case 42
.text:00000000004080AC                                         ; jumptable 0000000000405EF2 case 42
.text:00000000004080AC                                         ; jumptable 0000000000406072 case 42
.text:00000000004080AC                                         ; jumptable 00000000004061F2 case 42
.text:00000000004080AC                                         ; jumptable 0000000000406372 case 42
.text:00000000004080AC                                         ; jumptable 00000000004064F2 case 42
.text:00000000004080AC                                         ; jumptable 0000000000406672 case 42
.text:00000000004080AC                                         ; jumptable 00000000004067F2 case 42
.text:00000000004080AC                                         ; jumptable 0000000000406972 case 42
.text:00000000004080AC                                         ; jumptable 0000000000406AF2 case 42
.text:00000000004080AC                                         ; jumptable 0000000000406C72 case 42
.text:00000000004080AC                                         ; jumptable 0000000000406DF2 case 42
.text:00000000004080AC                                         ; jumptable 0000000000406F72 case 42
.text:00000000004080AC                                         ; jumptable 00000000004070F2 case 42
.text:00000000004080AC                                         ; jumptable 0000000000407272 case 42
.text:00000000004080AC                                         ; jumptable 00000000004075BF case 42
.text:00000000004080B1                 movdqu  xmmword ptr [rdi+1Ah], xmm0
.text:00000000004080B6
.text:00000000004080B6 loc_4080B6:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004080B6                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004080B6                 lddqu   xmm0, xmmword ptr [rsi+0Ah] ; jumptable 00000000004059FA case 26
.text:00000000004080B6                                         ; jumptable 0000000000405BF9 case 26
.text:00000000004080B6                                         ; jumptable 0000000000405D72 case 26
.text:00000000004080B6                                         ; jumptable 0000000000405EF2 case 26
.text:00000000004080B6                                         ; jumptable 0000000000406072 case 26
.text:00000000004080B6                                         ; jumptable 00000000004061F2 case 26
.text:00000000004080B6                                         ; jumptable 0000000000406372 case 26
.text:00000000004080B6                                         ; jumptable 00000000004064F2 case 26
.text:00000000004080B6                                         ; jumptable 0000000000406672 case 26
.text:00000000004080B6                                         ; jumptable 00000000004067F2 case 26
.text:00000000004080B6                                         ; jumptable 0000000000406972 case 26
.text:00000000004080B6                                         ; jumptable 0000000000406AF2 case 26
.text:00000000004080B6                                         ; jumptable 0000000000406C72 case 26
.text:00000000004080B6                                         ; jumptable 0000000000406DF2 case 26
.text:00000000004080B6                                         ; jumptable 0000000000406F72 case 26
.text:00000000004080B6                                         ; jumptable 00000000004070F2 case 26
.text:00000000004080B6                                         ; jumptable 0000000000407272 case 26
.text:00000000004080B6                                         ; jumptable 00000000004075BF case 26
.text:00000000004080BB                 lddqu   xmm1, xmmword ptr [rsi]
.text:00000000004080BF                 movdqu  xmmword ptr [rdi+0Ah], xmm0
.text:00000000004080C4                 movdqu  xmmword ptr [rdi], xmm1
.text:00000000004080C8                 retn
.text:00000000004080C8 ; ---------------------------------------------------------------------------
.text:00000000004080C9                 align 10h
.text:00000000004080D0
.text:00000000004080D0 loc_4080D0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004080D0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004080D0                 mov     rdx, [rsi+2]    ; jumptable 00000000004059FA case 10
.text:00000000004080D0                                         ; jumptable 0000000000405BF9 case 10
.text:00000000004080D0                                         ; jumptable 0000000000405D72 case 10
.text:00000000004080D0                                         ; jumptable 0000000000405EF2 case 10
.text:00000000004080D0                                         ; jumptable 0000000000406072 case 10
.text:00000000004080D0                                         ; jumptable 00000000004061F2 case 10
.text:00000000004080D0                                         ; jumptable 0000000000406372 case 10
.text:00000000004080D0                                         ; jumptable 00000000004064F2 case 10
.text:00000000004080D0                                         ; jumptable 0000000000406672 case 10
.text:00000000004080D0                                         ; jumptable 00000000004067F2 case 10
.text:00000000004080D0                                         ; jumptable 0000000000406972 case 10
.text:00000000004080D0                                         ; jumptable 0000000000406AF2 case 10
.text:00000000004080D0                                         ; jumptable 0000000000406C72 case 10
.text:00000000004080D0                                         ; jumptable 0000000000406DF2 case 10
.text:00000000004080D0                                         ; jumptable 0000000000406F72 case 10
.text:00000000004080D0                                         ; jumptable 00000000004070F2 case 10
.text:00000000004080D0                                         ; jumptable 0000000000407272 case 10
.text:00000000004080D0                                         ; jumptable 00000000004075BF case 10
.text:00000000004080D4                 mov     rcx, [rsi]
.text:00000000004080D7                 mov     [rdi+2], rdx
.text:00000000004080DB                 mov     [rdi], rcx
.text:00000000004080DE                 retn
.text:00000000004080DE ; ---------------------------------------------------------------------------
.text:00000000004080DF                 align 20h
.text:00000000004080E0
.text:00000000004080E0 loc_4080E0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004080E0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004080E0                 lddqu   xmm0, xmmword ptr [rsi+79h] ; jumptable 00000000004059FA case 137
.text:00000000004080E0                                         ; jumptable 0000000000405BF9 case 137
.text:00000000004080E0                                         ; jumptable 0000000000405D72 case 137
.text:00000000004080E0                                         ; jumptable 0000000000405EF2 case 137
.text:00000000004080E0                                         ; jumptable 0000000000406072 case 137
.text:00000000004080E0                                         ; jumptable 00000000004061F2 case 137
.text:00000000004080E0                                         ; jumptable 0000000000406372 case 137
.text:00000000004080E0                                         ; jumptable 00000000004064F2 case 137
.text:00000000004080E0                                         ; jumptable 0000000000406672 case 137
.text:00000000004080E0                                         ; jumptable 00000000004067F2 case 137
.text:00000000004080E0                                         ; jumptable 0000000000406972 case 137
.text:00000000004080E0                                         ; jumptable 0000000000406AF2 case 137
.text:00000000004080E0                                         ; jumptable 0000000000406C72 case 137
.text:00000000004080E0                                         ; jumptable 0000000000406DF2 case 137
.text:00000000004080E0                                         ; jumptable 0000000000406F72 case 137
.text:00000000004080E0                                         ; jumptable 00000000004070F2 case 137
.text:00000000004080E0                                         ; jumptable 0000000000407272 case 137
.text:00000000004080E0                                         ; jumptable 00000000004075BF case 137
.text:00000000004080E5                 movdqu  xmmword ptr [rdi+79h], xmm0
.text:00000000004080EA
.text:00000000004080EA loc_4080EA:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004080EA                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004080EA                 lddqu   xmm0, xmmword ptr [rsi+69h] ; jumptable 00000000004059FA case 121
.text:00000000004080EA                                         ; jumptable 0000000000405BF9 case 121
.text:00000000004080EA                                         ; jumptable 0000000000405D72 case 121
.text:00000000004080EA                                         ; jumptable 0000000000405EF2 case 121
.text:00000000004080EA                                         ; jumptable 0000000000406072 case 121
.text:00000000004080EA                                         ; jumptable 00000000004061F2 case 121
.text:00000000004080EA                                         ; jumptable 0000000000406372 case 121
.text:00000000004080EA                                         ; jumptable 00000000004064F2 case 121
.text:00000000004080EA                                         ; jumptable 0000000000406672 case 121
.text:00000000004080EA                                         ; jumptable 00000000004067F2 case 121
.text:00000000004080EA                                         ; jumptable 0000000000406972 case 121
.text:00000000004080EA                                         ; jumptable 0000000000406AF2 case 121
.text:00000000004080EA                                         ; jumptable 0000000000406C72 case 121
.text:00000000004080EA                                         ; jumptable 0000000000406DF2 case 121
.text:00000000004080EA                                         ; jumptable 0000000000406F72 case 121
.text:00000000004080EA                                         ; jumptable 00000000004070F2 case 121
.text:00000000004080EA                                         ; jumptable 0000000000407272 case 121
.text:00000000004080EA                                         ; jumptable 00000000004075BF case 121
.text:00000000004080EF                 movdqu  xmmword ptr [rdi+69h], xmm0
.text:00000000004080F4
.text:00000000004080F4 loc_4080F4:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004080F4                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004080F4                 lddqu   xmm0, xmmword ptr [rsi+59h] ; jumptable 00000000004059FA case 105
.text:00000000004080F4                                         ; jumptable 0000000000405BF9 case 105
.text:00000000004080F4                                         ; jumptable 0000000000405D72 case 105
.text:00000000004080F4                                         ; jumptable 0000000000405EF2 case 105
.text:00000000004080F4                                         ; jumptable 0000000000406072 case 105
.text:00000000004080F4                                         ; jumptable 00000000004061F2 case 105
.text:00000000004080F4                                         ; jumptable 0000000000406372 case 105
.text:00000000004080F4                                         ; jumptable 00000000004064F2 case 105
.text:00000000004080F4                                         ; jumptable 0000000000406672 case 105
.text:00000000004080F4                                         ; jumptable 00000000004067F2 case 105
.text:00000000004080F4                                         ; jumptable 0000000000406972 case 105
.text:00000000004080F4                                         ; jumptable 0000000000406AF2 case 105
.text:00000000004080F4                                         ; jumptable 0000000000406C72 case 105
.text:00000000004080F4                                         ; jumptable 0000000000406DF2 case 105
.text:00000000004080F4                                         ; jumptable 0000000000406F72 case 105
.text:00000000004080F4                                         ; jumptable 00000000004070F2 case 105
.text:00000000004080F4                                         ; jumptable 0000000000407272 case 105
.text:00000000004080F4                                         ; jumptable 00000000004075BF case 105
.text:00000000004080F9                 movdqu  xmmword ptr [rdi+59h], xmm0
.text:00000000004080FE
.text:00000000004080FE loc_4080FE:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004080FE                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004080FE                 lddqu   xmm0, xmmword ptr [rsi+49h] ; jumptable 00000000004059FA case 89
.text:00000000004080FE                                         ; jumptable 0000000000405BF9 case 89
.text:00000000004080FE                                         ; jumptable 0000000000405D72 case 89
.text:00000000004080FE                                         ; jumptable 0000000000405EF2 case 89
.text:00000000004080FE                                         ; jumptable 0000000000406072 case 89
.text:00000000004080FE                                         ; jumptable 00000000004061F2 case 89
.text:00000000004080FE                                         ; jumptable 0000000000406372 case 89
.text:00000000004080FE                                         ; jumptable 00000000004064F2 case 89
.text:00000000004080FE                                         ; jumptable 0000000000406672 case 89
.text:00000000004080FE                                         ; jumptable 00000000004067F2 case 89
.text:00000000004080FE                                         ; jumptable 0000000000406972 case 89
.text:00000000004080FE                                         ; jumptable 0000000000406AF2 case 89
.text:00000000004080FE                                         ; jumptable 0000000000406C72 case 89
.text:00000000004080FE                                         ; jumptable 0000000000406DF2 case 89
.text:00000000004080FE                                         ; jumptable 0000000000406F72 case 89
.text:00000000004080FE                                         ; jumptable 00000000004070F2 case 89
.text:00000000004080FE                                         ; jumptable 0000000000407272 case 89
.text:00000000004080FE                                         ; jumptable 00000000004075BF case 89
.text:0000000000408103                 movdqu  xmmword ptr [rdi+49h], xmm0
.text:0000000000408108
.text:0000000000408108 loc_408108:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408108                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408108                 lddqu   xmm0, xmmword ptr [rsi+39h] ; jumptable 00000000004059FA case 73
.text:0000000000408108                                         ; jumptable 0000000000405BF9 case 73
.text:0000000000408108                                         ; jumptable 0000000000405D72 case 73
.text:0000000000408108                                         ; jumptable 0000000000405EF2 case 73
.text:0000000000408108                                         ; jumptable 0000000000406072 case 73
.text:0000000000408108                                         ; jumptable 00000000004061F2 case 73
.text:0000000000408108                                         ; jumptable 0000000000406372 case 73
.text:0000000000408108                                         ; jumptable 00000000004064F2 case 73
.text:0000000000408108                                         ; jumptable 0000000000406672 case 73
.text:0000000000408108                                         ; jumptable 00000000004067F2 case 73
.text:0000000000408108                                         ; jumptable 0000000000406972 case 73
.text:0000000000408108                                         ; jumptable 0000000000406AF2 case 73
.text:0000000000408108                                         ; jumptable 0000000000406C72 case 73
.text:0000000000408108                                         ; jumptable 0000000000406DF2 case 73
.text:0000000000408108                                         ; jumptable 0000000000406F72 case 73
.text:0000000000408108                                         ; jumptable 00000000004070F2 case 73
.text:0000000000408108                                         ; jumptable 0000000000407272 case 73
.text:0000000000408108                                         ; jumptable 00000000004075BF case 73
.text:000000000040810D                 movdqu  xmmword ptr [rdi+39h], xmm0
.text:0000000000408112
.text:0000000000408112 loc_408112:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408112                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408112                 lddqu   xmm0, xmmword ptr [rsi+29h] ; jumptable 00000000004059FA case 57
.text:0000000000408112                                         ; jumptable 0000000000405BF9 case 57
.text:0000000000408112                                         ; jumptable 0000000000405D72 case 57
.text:0000000000408112                                         ; jumptable 0000000000405EF2 case 57
.text:0000000000408112                                         ; jumptable 0000000000406072 case 57
.text:0000000000408112                                         ; jumptable 00000000004061F2 case 57
.text:0000000000408112                                         ; jumptable 0000000000406372 case 57
.text:0000000000408112                                         ; jumptable 00000000004064F2 case 57
.text:0000000000408112                                         ; jumptable 0000000000406672 case 57
.text:0000000000408112                                         ; jumptable 00000000004067F2 case 57
.text:0000000000408112                                         ; jumptable 0000000000406972 case 57
.text:0000000000408112                                         ; jumptable 0000000000406AF2 case 57
.text:0000000000408112                                         ; jumptable 0000000000406C72 case 57
.text:0000000000408112                                         ; jumptable 0000000000406DF2 case 57
.text:0000000000408112                                         ; jumptable 0000000000406F72 case 57
.text:0000000000408112                                         ; jumptable 00000000004070F2 case 57
.text:0000000000408112                                         ; jumptable 0000000000407272 case 57
.text:0000000000408112                                         ; jumptable 00000000004075BF case 57
.text:0000000000408117                 movdqu  xmmword ptr [rdi+29h], xmm0
.text:000000000040811C
.text:000000000040811C loc_40811C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040811C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040811C                 lddqu   xmm0, xmmword ptr [rsi+19h] ; jumptable 00000000004059FA case 41
.text:000000000040811C                                         ; jumptable 0000000000405BF9 case 41
.text:000000000040811C                                         ; jumptable 0000000000405D72 case 41
.text:000000000040811C                                         ; jumptable 0000000000405EF2 case 41
.text:000000000040811C                                         ; jumptable 0000000000406072 case 41
.text:000000000040811C                                         ; jumptable 00000000004061F2 case 41
.text:000000000040811C                                         ; jumptable 0000000000406372 case 41
.text:000000000040811C                                         ; jumptable 00000000004064F2 case 41
.text:000000000040811C                                         ; jumptable 0000000000406672 case 41
.text:000000000040811C                                         ; jumptable 00000000004067F2 case 41
.text:000000000040811C                                         ; jumptable 0000000000406972 case 41
.text:000000000040811C                                         ; jumptable 0000000000406AF2 case 41
.text:000000000040811C                                         ; jumptable 0000000000406C72 case 41
.text:000000000040811C                                         ; jumptable 0000000000406DF2 case 41
.text:000000000040811C                                         ; jumptable 0000000000406F72 case 41
.text:000000000040811C                                         ; jumptable 00000000004070F2 case 41
.text:000000000040811C                                         ; jumptable 0000000000407272 case 41
.text:000000000040811C                                         ; jumptable 00000000004075BF case 41
.text:0000000000408121                 movdqu  xmmword ptr [rdi+19h], xmm0
.text:0000000000408126
.text:0000000000408126 loc_408126:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408126                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408126                 lddqu   xmm0, xmmword ptr [rsi+9] ; jumptable 00000000004059FA case 25
.text:0000000000408126                                         ; jumptable 0000000000405BF9 case 25
.text:0000000000408126                                         ; jumptable 0000000000405D72 case 25
.text:0000000000408126                                         ; jumptable 0000000000405EF2 case 25
.text:0000000000408126                                         ; jumptable 0000000000406072 case 25
.text:0000000000408126                                         ; jumptable 00000000004061F2 case 25
.text:0000000000408126                                         ; jumptable 0000000000406372 case 25
.text:0000000000408126                                         ; jumptable 00000000004064F2 case 25
.text:0000000000408126                                         ; jumptable 0000000000406672 case 25
.text:0000000000408126                                         ; jumptable 00000000004067F2 case 25
.text:0000000000408126                                         ; jumptable 0000000000406972 case 25
.text:0000000000408126                                         ; jumptable 0000000000406AF2 case 25
.text:0000000000408126                                         ; jumptable 0000000000406C72 case 25
.text:0000000000408126                                         ; jumptable 0000000000406DF2 case 25
.text:0000000000408126                                         ; jumptable 0000000000406F72 case 25
.text:0000000000408126                                         ; jumptable 00000000004070F2 case 25
.text:0000000000408126                                         ; jumptable 0000000000407272 case 25
.text:0000000000408126                                         ; jumptable 00000000004075BF case 25
.text:000000000040812B                 lddqu   xmm1, xmmword ptr [rsi]
.text:000000000040812F                 movdqu  xmmword ptr [rdi+9], xmm0
.text:0000000000408134                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000408138                 retn
.text:0000000000408138 ; ---------------------------------------------------------------------------
.text:0000000000408139                 align 20h
.text:0000000000408140
.text:0000000000408140 loc_408140:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408140                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408140                 mov     rdx, [rsi+1]    ; jumptable 00000000004059FA case 9
.text:0000000000408140                                         ; jumptable 0000000000405BF9 case 9
.text:0000000000408140                                         ; jumptable 0000000000405D72 case 9
.text:0000000000408140                                         ; jumptable 0000000000405EF2 case 9
.text:0000000000408140                                         ; jumptable 0000000000406072 case 9
.text:0000000000408140                                         ; jumptable 00000000004061F2 case 9
.text:0000000000408140                                         ; jumptable 0000000000406372 case 9
.text:0000000000408140                                         ; jumptable 00000000004064F2 case 9
.text:0000000000408140                                         ; jumptable 0000000000406672 case 9
.text:0000000000408140                                         ; jumptable 00000000004067F2 case 9
.text:0000000000408140                                         ; jumptable 0000000000406972 case 9
.text:0000000000408140                                         ; jumptable 0000000000406AF2 case 9
.text:0000000000408140                                         ; jumptable 0000000000406C72 case 9
.text:0000000000408140                                         ; jumptable 0000000000406DF2 case 9
.text:0000000000408140                                         ; jumptable 0000000000406F72 case 9
.text:0000000000408140                                         ; jumptable 00000000004070F2 case 9
.text:0000000000408140                                         ; jumptable 0000000000407272 case 9
.text:0000000000408140                                         ; jumptable 00000000004075BF case 9
.text:0000000000408144                 mov     rcx, [rsi]
.text:0000000000408147                 mov     [rdi+1], rdx
.text:000000000040814B                 mov     [rdi], rcx
.text:000000000040814E                 retn
.text:000000000040814E ; ---------------------------------------------------------------------------
.text:000000000040814F                 align 10h
.text:0000000000408150
.text:0000000000408150 loc_408150:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408150                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408150                 lddqu   xmm0, xmmword ptr [rsi+78h] ; jumptable 00000000004059FA case 136
.text:0000000000408150                                         ; jumptable 0000000000405BF9 case 136
.text:0000000000408150                                         ; jumptable 0000000000405D72 case 136
.text:0000000000408150                                         ; jumptable 0000000000405EF2 case 136
.text:0000000000408150                                         ; jumptable 0000000000406072 case 136
.text:0000000000408150                                         ; jumptable 00000000004061F2 case 136
.text:0000000000408150                                         ; jumptable 0000000000406372 case 136
.text:0000000000408150                                         ; jumptable 00000000004064F2 case 136
.text:0000000000408150                                         ; jumptable 0000000000406672 case 136
.text:0000000000408150                                         ; jumptable 00000000004067F2 case 136
.text:0000000000408150                                         ; jumptable 0000000000406972 case 136
.text:0000000000408150                                         ; jumptable 0000000000406AF2 case 136
.text:0000000000408150                                         ; jumptable 0000000000406C72 case 136
.text:0000000000408150                                         ; jumptable 0000000000406DF2 case 136
.text:0000000000408150                                         ; jumptable 0000000000406F72 case 136
.text:0000000000408150                                         ; jumptable 00000000004070F2 case 136
.text:0000000000408150                                         ; jumptable 0000000000407272 case 136
.text:0000000000408150                                         ; jumptable 00000000004075BF case 136
.text:0000000000408155                 movdqu  xmmword ptr [rdi+78h], xmm0
.text:000000000040815A
.text:000000000040815A loc_40815A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040815A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040815A                 lddqu   xmm0, xmmword ptr [rsi+68h] ; jumptable 00000000004059FA case 120
.text:000000000040815A                                         ; jumptable 0000000000405BF9 case 120
.text:000000000040815A                                         ; jumptable 0000000000405D72 case 120
.text:000000000040815A                                         ; jumptable 0000000000405EF2 case 120
.text:000000000040815A                                         ; jumptable 0000000000406072 case 120
.text:000000000040815A                                         ; jumptable 00000000004061F2 case 120
.text:000000000040815A                                         ; jumptable 0000000000406372 case 120
.text:000000000040815A                                         ; jumptable 00000000004064F2 case 120
.text:000000000040815A                                         ; jumptable 0000000000406672 case 120
.text:000000000040815A                                         ; jumptable 00000000004067F2 case 120
.text:000000000040815A                                         ; jumptable 0000000000406972 case 120
.text:000000000040815A                                         ; jumptable 0000000000406AF2 case 120
.text:000000000040815A                                         ; jumptable 0000000000406C72 case 120
.text:000000000040815A                                         ; jumptable 0000000000406DF2 case 120
.text:000000000040815A                                         ; jumptable 0000000000406F72 case 120
.text:000000000040815A                                         ; jumptable 00000000004070F2 case 120
.text:000000000040815A                                         ; jumptable 0000000000407272 case 120
.text:000000000040815A                                         ; jumptable 00000000004075BF case 120
.text:000000000040815F                 movdqu  xmmword ptr [rdi+68h], xmm0
.text:0000000000408164
.text:0000000000408164 loc_408164:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408164                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408164                 lddqu   xmm0, xmmword ptr [rsi+58h] ; jumptable 00000000004059FA case 104
.text:0000000000408164                                         ; jumptable 0000000000405BF9 case 104
.text:0000000000408164                                         ; jumptable 0000000000405D72 case 104
.text:0000000000408164                                         ; jumptable 0000000000405EF2 case 104
.text:0000000000408164                                         ; jumptable 0000000000406072 case 104
.text:0000000000408164                                         ; jumptable 00000000004061F2 case 104
.text:0000000000408164                                         ; jumptable 0000000000406372 case 104
.text:0000000000408164                                         ; jumptable 00000000004064F2 case 104
.text:0000000000408164                                         ; jumptable 0000000000406672 case 104
.text:0000000000408164                                         ; jumptable 00000000004067F2 case 104
.text:0000000000408164                                         ; jumptable 0000000000406972 case 104
.text:0000000000408164                                         ; jumptable 0000000000406AF2 case 104
.text:0000000000408164                                         ; jumptable 0000000000406C72 case 104
.text:0000000000408164                                         ; jumptable 0000000000406DF2 case 104
.text:0000000000408164                                         ; jumptable 0000000000406F72 case 104
.text:0000000000408164                                         ; jumptable 00000000004070F2 case 104
.text:0000000000408164                                         ; jumptable 0000000000407272 case 104
.text:0000000000408164                                         ; jumptable 00000000004075BF case 104
.text:0000000000408169                 movdqu  xmmword ptr [rdi+58h], xmm0
.text:000000000040816E
.text:000000000040816E loc_40816E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040816E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040816E                 lddqu   xmm0, xmmword ptr [rsi+48h] ; jumptable 00000000004059FA case 88
.text:000000000040816E                                         ; jumptable 0000000000405BF9 case 88
.text:000000000040816E                                         ; jumptable 0000000000405D72 case 88
.text:000000000040816E                                         ; jumptable 0000000000405EF2 case 88
.text:000000000040816E                                         ; jumptable 0000000000406072 case 88
.text:000000000040816E                                         ; jumptable 00000000004061F2 case 88
.text:000000000040816E                                         ; jumptable 0000000000406372 case 88
.text:000000000040816E                                         ; jumptable 00000000004064F2 case 88
.text:000000000040816E                                         ; jumptable 0000000000406672 case 88
.text:000000000040816E                                         ; jumptable 00000000004067F2 case 88
.text:000000000040816E                                         ; jumptable 0000000000406972 case 88
.text:000000000040816E                                         ; jumptable 0000000000406AF2 case 88
.text:000000000040816E                                         ; jumptable 0000000000406C72 case 88
.text:000000000040816E                                         ; jumptable 0000000000406DF2 case 88
.text:000000000040816E                                         ; jumptable 0000000000406F72 case 88
.text:000000000040816E                                         ; jumptable 00000000004070F2 case 88
.text:000000000040816E                                         ; jumptable 0000000000407272 case 88
.text:000000000040816E                                         ; jumptable 00000000004075BF case 88
.text:0000000000408173                 movdqu  xmmword ptr [rdi+48h], xmm0
.text:0000000000408178
.text:0000000000408178 loc_408178:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408178                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408178                 lddqu   xmm0, xmmword ptr [rsi+38h] ; jumptable 00000000004059FA case 72
.text:0000000000408178                                         ; jumptable 0000000000405BF9 case 72
.text:0000000000408178                                         ; jumptable 0000000000405D72 case 72
.text:0000000000408178                                         ; jumptable 0000000000405EF2 case 72
.text:0000000000408178                                         ; jumptable 0000000000406072 case 72
.text:0000000000408178                                         ; jumptable 00000000004061F2 case 72
.text:0000000000408178                                         ; jumptable 0000000000406372 case 72
.text:0000000000408178                                         ; jumptable 00000000004064F2 case 72
.text:0000000000408178                                         ; jumptable 0000000000406672 case 72
.text:0000000000408178                                         ; jumptable 00000000004067F2 case 72
.text:0000000000408178                                         ; jumptable 0000000000406972 case 72
.text:0000000000408178                                         ; jumptable 0000000000406AF2 case 72
.text:0000000000408178                                         ; jumptable 0000000000406C72 case 72
.text:0000000000408178                                         ; jumptable 0000000000406DF2 case 72
.text:0000000000408178                                         ; jumptable 0000000000406F72 case 72
.text:0000000000408178                                         ; jumptable 00000000004070F2 case 72
.text:0000000000408178                                         ; jumptable 0000000000407272 case 72
.text:0000000000408178                                         ; jumptable 00000000004075BF case 72
.text:000000000040817D                 movdqu  xmmword ptr [rdi+38h], xmm0
.text:0000000000408182
.text:0000000000408182 loc_408182:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408182                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408182                 lddqu   xmm0, xmmword ptr [rsi+28h] ; jumptable 00000000004059FA case 56
.text:0000000000408182                                         ; jumptable 0000000000405BF9 case 56
.text:0000000000408182                                         ; jumptable 0000000000405D72 case 56
.text:0000000000408182                                         ; jumptable 0000000000405EF2 case 56
.text:0000000000408182                                         ; jumptable 0000000000406072 case 56
.text:0000000000408182                                         ; jumptable 00000000004061F2 case 56
.text:0000000000408182                                         ; jumptable 0000000000406372 case 56
.text:0000000000408182                                         ; jumptable 00000000004064F2 case 56
.text:0000000000408182                                         ; jumptable 0000000000406672 case 56
.text:0000000000408182                                         ; jumptable 00000000004067F2 case 56
.text:0000000000408182                                         ; jumptable 0000000000406972 case 56
.text:0000000000408182                                         ; jumptable 0000000000406AF2 case 56
.text:0000000000408182                                         ; jumptable 0000000000406C72 case 56
.text:0000000000408182                                         ; jumptable 0000000000406DF2 case 56
.text:0000000000408182                                         ; jumptable 0000000000406F72 case 56
.text:0000000000408182                                         ; jumptable 00000000004070F2 case 56
.text:0000000000408182                                         ; jumptable 0000000000407272 case 56
.text:0000000000408182                                         ; jumptable 00000000004075BF case 56
.text:0000000000408187                 movdqu  xmmword ptr [rdi+28h], xmm0
.text:000000000040818C
.text:000000000040818C loc_40818C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040818C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040818C                 lddqu   xmm0, xmmword ptr [rsi+18h] ; jumptable 00000000004059FA case 40
.text:000000000040818C                                         ; jumptable 0000000000405BF9 case 40
.text:000000000040818C                                         ; jumptable 0000000000405D72 case 40
.text:000000000040818C                                         ; jumptable 0000000000405EF2 case 40
.text:000000000040818C                                         ; jumptable 0000000000406072 case 40
.text:000000000040818C                                         ; jumptable 00000000004061F2 case 40
.text:000000000040818C                                         ; jumptable 0000000000406372 case 40
.text:000000000040818C                                         ; jumptable 00000000004064F2 case 40
.text:000000000040818C                                         ; jumptable 0000000000406672 case 40
.text:000000000040818C                                         ; jumptable 00000000004067F2 case 40
.text:000000000040818C                                         ; jumptable 0000000000406972 case 40
.text:000000000040818C                                         ; jumptable 0000000000406AF2 case 40
.text:000000000040818C                                         ; jumptable 0000000000406C72 case 40
.text:000000000040818C                                         ; jumptable 0000000000406DF2 case 40
.text:000000000040818C                                         ; jumptable 0000000000406F72 case 40
.text:000000000040818C                                         ; jumptable 00000000004070F2 case 40
.text:000000000040818C                                         ; jumptable 0000000000407272 case 40
.text:000000000040818C                                         ; jumptable 00000000004075BF case 40
.text:0000000000408191                 movdqu  xmmword ptr [rdi+18h], xmm0
.text:0000000000408196
.text:0000000000408196 loc_408196:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408196                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408196                 lddqu   xmm0, xmmword ptr [rsi+8] ; jumptable 00000000004059FA case 24
.text:0000000000408196                                         ; jumptable 0000000000405BF9 case 24
.text:0000000000408196                                         ; jumptable 0000000000405D72 case 24
.text:0000000000408196                                         ; jumptable 0000000000405EF2 case 24
.text:0000000000408196                                         ; jumptable 0000000000406072 case 24
.text:0000000000408196                                         ; jumptable 00000000004061F2 case 24
.text:0000000000408196                                         ; jumptable 0000000000406372 case 24
.text:0000000000408196                                         ; jumptable 00000000004064F2 case 24
.text:0000000000408196                                         ; jumptable 0000000000406672 case 24
.text:0000000000408196                                         ; jumptable 00000000004067F2 case 24
.text:0000000000408196                                         ; jumptable 0000000000406972 case 24
.text:0000000000408196                                         ; jumptable 0000000000406AF2 case 24
.text:0000000000408196                                         ; jumptable 0000000000406C72 case 24
.text:0000000000408196                                         ; jumptable 0000000000406DF2 case 24
.text:0000000000408196                                         ; jumptable 0000000000406F72 case 24
.text:0000000000408196                                         ; jumptable 00000000004070F2 case 24
.text:0000000000408196                                         ; jumptable 0000000000407272 case 24
.text:0000000000408196                                         ; jumptable 00000000004075BF case 24
.text:000000000040819B                 lddqu   xmm1, xmmword ptr [rsi]
.text:000000000040819F                 movdqu  xmmword ptr [rdi+8], xmm0
.text:00000000004081A4                 movdqu  xmmword ptr [rdi], xmm1
.text:00000000004081A8                 retn
.text:00000000004081A8 ; ---------------------------------------------------------------------------
.text:00000000004081A9                 align 10h
.text:00000000004081B0
.text:00000000004081B0 loc_4081B0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004081B0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004081B0                 mov     rdx, [rsi]      ; jumptable 00000000004059FA case 8
.text:00000000004081B0                                         ; jumptable 0000000000405BF9 case 8
.text:00000000004081B0                                         ; jumptable 0000000000405D72 case 8
.text:00000000004081B0                                         ; jumptable 0000000000405EF2 case 8
.text:00000000004081B0                                         ; jumptable 0000000000406072 case 8
.text:00000000004081B0                                         ; jumptable 00000000004061F2 case 8
.text:00000000004081B0                                         ; jumptable 0000000000406372 case 8
.text:00000000004081B0                                         ; jumptable 00000000004064F2 case 8
.text:00000000004081B0                                         ; jumptable 0000000000406672 case 8
.text:00000000004081B0                                         ; jumptable 00000000004067F2 case 8
.text:00000000004081B0                                         ; jumptable 0000000000406972 case 8
.text:00000000004081B0                                         ; jumptable 0000000000406AF2 case 8
.text:00000000004081B0                                         ; jumptable 0000000000406C72 case 8
.text:00000000004081B0                                         ; jumptable 0000000000406DF2 case 8
.text:00000000004081B0                                         ; jumptable 0000000000406F72 case 8
.text:00000000004081B0                                         ; jumptable 00000000004070F2 case 8
.text:00000000004081B0                                         ; jumptable 0000000000407272 case 8
.text:00000000004081B0                                         ; jumptable 00000000004075BF case 8
.text:00000000004081B3                 mov     [rdi], rdx
.text:00000000004081B6                 retn
.text:00000000004081B6 ; ---------------------------------------------------------------------------
.text:00000000004081B7                 align 20h
.text:00000000004081C0
.text:00000000004081C0 loc_4081C0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004081C0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004081C0                 lddqu   xmm0, xmmword ptr [rsi+77h] ; jumptable 00000000004059FA case 135
.text:00000000004081C0                                         ; jumptable 0000000000405BF9 case 135
.text:00000000004081C0                                         ; jumptable 0000000000405D72 case 135
.text:00000000004081C0                                         ; jumptable 0000000000405EF2 case 135
.text:00000000004081C0                                         ; jumptable 0000000000406072 case 135
.text:00000000004081C0                                         ; jumptable 00000000004061F2 case 135
.text:00000000004081C0                                         ; jumptable 0000000000406372 case 135
.text:00000000004081C0                                         ; jumptable 00000000004064F2 case 135
.text:00000000004081C0                                         ; jumptable 0000000000406672 case 135
.text:00000000004081C0                                         ; jumptable 00000000004067F2 case 135
.text:00000000004081C0                                         ; jumptable 0000000000406972 case 135
.text:00000000004081C0                                         ; jumptable 0000000000406AF2 case 135
.text:00000000004081C0                                         ; jumptable 0000000000406C72 case 135
.text:00000000004081C0                                         ; jumptable 0000000000406DF2 case 135
.text:00000000004081C0                                         ; jumptable 0000000000406F72 case 135
.text:00000000004081C0                                         ; jumptable 00000000004070F2 case 135
.text:00000000004081C0                                         ; jumptable 0000000000407272 case 135
.text:00000000004081C0                                         ; jumptable 00000000004075BF case 135
.text:00000000004081C5                 movdqu  xmmword ptr [rdi+77h], xmm0
.text:00000000004081CA
.text:00000000004081CA loc_4081CA:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004081CA                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004081CA                 lddqu   xmm0, xmmword ptr [rsi+67h] ; jumptable 00000000004059FA case 119
.text:00000000004081CA                                         ; jumptable 0000000000405BF9 case 119
.text:00000000004081CA                                         ; jumptable 0000000000405D72 case 119
.text:00000000004081CA                                         ; jumptable 0000000000405EF2 case 119
.text:00000000004081CA                                         ; jumptable 0000000000406072 case 119
.text:00000000004081CA                                         ; jumptable 00000000004061F2 case 119
.text:00000000004081CA                                         ; jumptable 0000000000406372 case 119
.text:00000000004081CA                                         ; jumptable 00000000004064F2 case 119
.text:00000000004081CA                                         ; jumptable 0000000000406672 case 119
.text:00000000004081CA                                         ; jumptable 00000000004067F2 case 119
.text:00000000004081CA                                         ; jumptable 0000000000406972 case 119
.text:00000000004081CA                                         ; jumptable 0000000000406AF2 case 119
.text:00000000004081CA                                         ; jumptable 0000000000406C72 case 119
.text:00000000004081CA                                         ; jumptable 0000000000406DF2 case 119
.text:00000000004081CA                                         ; jumptable 0000000000406F72 case 119
.text:00000000004081CA                                         ; jumptable 00000000004070F2 case 119
.text:00000000004081CA                                         ; jumptable 0000000000407272 case 119
.text:00000000004081CA                                         ; jumptable 00000000004075BF case 119
.text:00000000004081CF                 movdqu  xmmword ptr [rdi+67h], xmm0
.text:00000000004081D4
.text:00000000004081D4 loc_4081D4:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004081D4                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004081D4                 lddqu   xmm0, xmmword ptr [rsi+57h] ; jumptable 00000000004059FA case 103
.text:00000000004081D4                                         ; jumptable 0000000000405BF9 case 103
.text:00000000004081D4                                         ; jumptable 0000000000405D72 case 103
.text:00000000004081D4                                         ; jumptable 0000000000405EF2 case 103
.text:00000000004081D4                                         ; jumptable 0000000000406072 case 103
.text:00000000004081D4                                         ; jumptable 00000000004061F2 case 103
.text:00000000004081D4                                         ; jumptable 0000000000406372 case 103
.text:00000000004081D4                                         ; jumptable 00000000004064F2 case 103
.text:00000000004081D4                                         ; jumptable 0000000000406672 case 103
.text:00000000004081D4                                         ; jumptable 00000000004067F2 case 103
.text:00000000004081D4                                         ; jumptable 0000000000406972 case 103
.text:00000000004081D4                                         ; jumptable 0000000000406AF2 case 103
.text:00000000004081D4                                         ; jumptable 0000000000406C72 case 103
.text:00000000004081D4                                         ; jumptable 0000000000406DF2 case 103
.text:00000000004081D4                                         ; jumptable 0000000000406F72 case 103
.text:00000000004081D4                                         ; jumptable 00000000004070F2 case 103
.text:00000000004081D4                                         ; jumptable 0000000000407272 case 103
.text:00000000004081D4                                         ; jumptable 00000000004075BF case 103
.text:00000000004081D9                 movdqu  xmmword ptr [rdi+57h], xmm0
.text:00000000004081DE
.text:00000000004081DE loc_4081DE:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004081DE                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004081DE                 lddqu   xmm0, xmmword ptr [rsi+47h] ; jumptable 00000000004059FA case 87
.text:00000000004081DE                                         ; jumptable 0000000000405BF9 case 87
.text:00000000004081DE                                         ; jumptable 0000000000405D72 case 87
.text:00000000004081DE                                         ; jumptable 0000000000405EF2 case 87
.text:00000000004081DE                                         ; jumptable 0000000000406072 case 87
.text:00000000004081DE                                         ; jumptable 00000000004061F2 case 87
.text:00000000004081DE                                         ; jumptable 0000000000406372 case 87
.text:00000000004081DE                                         ; jumptable 00000000004064F2 case 87
.text:00000000004081DE                                         ; jumptable 0000000000406672 case 87
.text:00000000004081DE                                         ; jumptable 00000000004067F2 case 87
.text:00000000004081DE                                         ; jumptable 0000000000406972 case 87
.text:00000000004081DE                                         ; jumptable 0000000000406AF2 case 87
.text:00000000004081DE                                         ; jumptable 0000000000406C72 case 87
.text:00000000004081DE                                         ; jumptable 0000000000406DF2 case 87
.text:00000000004081DE                                         ; jumptable 0000000000406F72 case 87
.text:00000000004081DE                                         ; jumptable 00000000004070F2 case 87
.text:00000000004081DE                                         ; jumptable 0000000000407272 case 87
.text:00000000004081DE                                         ; jumptable 00000000004075BF case 87
.text:00000000004081E3                 movdqu  xmmword ptr [rdi+47h], xmm0
.text:00000000004081E8
.text:00000000004081E8 loc_4081E8:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004081E8                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004081E8                 lddqu   xmm0, xmmword ptr [rsi+37h] ; jumptable 00000000004059FA case 71
.text:00000000004081E8                                         ; jumptable 0000000000405BF9 case 71
.text:00000000004081E8                                         ; jumptable 0000000000405D72 case 71
.text:00000000004081E8                                         ; jumptable 0000000000405EF2 case 71
.text:00000000004081E8                                         ; jumptable 0000000000406072 case 71
.text:00000000004081E8                                         ; jumptable 00000000004061F2 case 71
.text:00000000004081E8                                         ; jumptable 0000000000406372 case 71
.text:00000000004081E8                                         ; jumptable 00000000004064F2 case 71
.text:00000000004081E8                                         ; jumptable 0000000000406672 case 71
.text:00000000004081E8                                         ; jumptable 00000000004067F2 case 71
.text:00000000004081E8                                         ; jumptable 0000000000406972 case 71
.text:00000000004081E8                                         ; jumptable 0000000000406AF2 case 71
.text:00000000004081E8                                         ; jumptable 0000000000406C72 case 71
.text:00000000004081E8                                         ; jumptable 0000000000406DF2 case 71
.text:00000000004081E8                                         ; jumptable 0000000000406F72 case 71
.text:00000000004081E8                                         ; jumptable 00000000004070F2 case 71
.text:00000000004081E8                                         ; jumptable 0000000000407272 case 71
.text:00000000004081E8                                         ; jumptable 00000000004075BF case 71
.text:00000000004081ED                 movdqu  xmmword ptr [rdi+37h], xmm0
.text:00000000004081F2
.text:00000000004081F2 loc_4081F2:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004081F2                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004081F2                 lddqu   xmm0, xmmword ptr [rsi+27h] ; jumptable 00000000004059FA case 55
.text:00000000004081F2                                         ; jumptable 0000000000405BF9 case 55
.text:00000000004081F2                                         ; jumptable 0000000000405D72 case 55
.text:00000000004081F2                                         ; jumptable 0000000000405EF2 case 55
.text:00000000004081F2                                         ; jumptable 0000000000406072 case 55
.text:00000000004081F2                                         ; jumptable 00000000004061F2 case 55
.text:00000000004081F2                                         ; jumptable 0000000000406372 case 55
.text:00000000004081F2                                         ; jumptable 00000000004064F2 case 55
.text:00000000004081F2                                         ; jumptable 0000000000406672 case 55
.text:00000000004081F2                                         ; jumptable 00000000004067F2 case 55
.text:00000000004081F2                                         ; jumptable 0000000000406972 case 55
.text:00000000004081F2                                         ; jumptable 0000000000406AF2 case 55
.text:00000000004081F2                                         ; jumptable 0000000000406C72 case 55
.text:00000000004081F2                                         ; jumptable 0000000000406DF2 case 55
.text:00000000004081F2                                         ; jumptable 0000000000406F72 case 55
.text:00000000004081F2                                         ; jumptable 00000000004070F2 case 55
.text:00000000004081F2                                         ; jumptable 0000000000407272 case 55
.text:00000000004081F2                                         ; jumptable 00000000004075BF case 55
.text:00000000004081F7                 movdqu  xmmword ptr [rdi+27h], xmm0
.text:00000000004081FC
.text:00000000004081FC loc_4081FC:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004081FC                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004081FC                 lddqu   xmm0, xmmword ptr [rsi+17h] ; jumptable 00000000004059FA case 39
.text:00000000004081FC                                         ; jumptable 0000000000405BF9 case 39
.text:00000000004081FC                                         ; jumptable 0000000000405D72 case 39
.text:00000000004081FC                                         ; jumptable 0000000000405EF2 case 39
.text:00000000004081FC                                         ; jumptable 0000000000406072 case 39
.text:00000000004081FC                                         ; jumptable 00000000004061F2 case 39
.text:00000000004081FC                                         ; jumptable 0000000000406372 case 39
.text:00000000004081FC                                         ; jumptable 00000000004064F2 case 39
.text:00000000004081FC                                         ; jumptable 0000000000406672 case 39
.text:00000000004081FC                                         ; jumptable 00000000004067F2 case 39
.text:00000000004081FC                                         ; jumptable 0000000000406972 case 39
.text:00000000004081FC                                         ; jumptable 0000000000406AF2 case 39
.text:00000000004081FC                                         ; jumptable 0000000000406C72 case 39
.text:00000000004081FC                                         ; jumptable 0000000000406DF2 case 39
.text:00000000004081FC                                         ; jumptable 0000000000406F72 case 39
.text:00000000004081FC                                         ; jumptable 00000000004070F2 case 39
.text:00000000004081FC                                         ; jumptable 0000000000407272 case 39
.text:00000000004081FC                                         ; jumptable 00000000004075BF case 39
.text:0000000000408201                 movdqu  xmmword ptr [rdi+17h], xmm0
.text:0000000000408206
.text:0000000000408206 loc_408206:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408206                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408206                 lddqu   xmm0, xmmword ptr [rsi+7] ; jumptable 00000000004059FA case 23
.text:0000000000408206                                         ; jumptable 0000000000405BF9 case 23
.text:0000000000408206                                         ; jumptable 0000000000405D72 case 23
.text:0000000000408206                                         ; jumptable 0000000000405EF2 case 23
.text:0000000000408206                                         ; jumptable 0000000000406072 case 23
.text:0000000000408206                                         ; jumptable 00000000004061F2 case 23
.text:0000000000408206                                         ; jumptable 0000000000406372 case 23
.text:0000000000408206                                         ; jumptable 00000000004064F2 case 23
.text:0000000000408206                                         ; jumptable 0000000000406672 case 23
.text:0000000000408206                                         ; jumptable 00000000004067F2 case 23
.text:0000000000408206                                         ; jumptable 0000000000406972 case 23
.text:0000000000408206                                         ; jumptable 0000000000406AF2 case 23
.text:0000000000408206                                         ; jumptable 0000000000406C72 case 23
.text:0000000000408206                                         ; jumptable 0000000000406DF2 case 23
.text:0000000000408206                                         ; jumptable 0000000000406F72 case 23
.text:0000000000408206                                         ; jumptable 00000000004070F2 case 23
.text:0000000000408206                                         ; jumptable 0000000000407272 case 23
.text:0000000000408206                                         ; jumptable 00000000004075BF case 23
.text:000000000040820B                 lddqu   xmm1, xmmword ptr [rsi]
.text:000000000040820F                 movdqu  xmmword ptr [rdi+7], xmm0
.text:0000000000408214                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000408218                 retn
.text:0000000000408218 ; ---------------------------------------------------------------------------
.text:0000000000408219                 align 20h
.text:0000000000408220
.text:0000000000408220 loc_408220:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408220                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408220                 mov     edx, [rsi+3]    ; jumptable 00000000004059FA case 7
.text:0000000000408220                                         ; jumptable 0000000000405BF9 case 7
.text:0000000000408220                                         ; jumptable 0000000000405D72 case 7
.text:0000000000408220                                         ; jumptable 0000000000405EF2 case 7
.text:0000000000408220                                         ; jumptable 0000000000406072 case 7
.text:0000000000408220                                         ; jumptable 00000000004061F2 case 7
.text:0000000000408220                                         ; jumptable 0000000000406372 case 7
.text:0000000000408220                                         ; jumptable 00000000004064F2 case 7
.text:0000000000408220                                         ; jumptable 0000000000406672 case 7
.text:0000000000408220                                         ; jumptable 00000000004067F2 case 7
.text:0000000000408220                                         ; jumptable 0000000000406972 case 7
.text:0000000000408220                                         ; jumptable 0000000000406AF2 case 7
.text:0000000000408220                                         ; jumptable 0000000000406C72 case 7
.text:0000000000408220                                         ; jumptable 0000000000406DF2 case 7
.text:0000000000408220                                         ; jumptable 0000000000406F72 case 7
.text:0000000000408220                                         ; jumptable 00000000004070F2 case 7
.text:0000000000408220                                         ; jumptable 0000000000407272 case 7
.text:0000000000408220                                         ; jumptable 00000000004075BF case 7
.text:0000000000408223                 mov     ecx, [rsi]
.text:0000000000408225                 mov     [rdi+3], edx
.text:0000000000408228                 mov     [rdi], ecx
.text:000000000040822A                 retn
.text:000000000040822A ; ---------------------------------------------------------------------------
.text:000000000040822B                 align 10h
.text:0000000000408230
.text:0000000000408230 loc_408230:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408230                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408230                 lddqu   xmm0, xmmword ptr [rsi+76h] ; jumptable 00000000004059FA case 134
.text:0000000000408230                                         ; jumptable 0000000000405BF9 case 134
.text:0000000000408230                                         ; jumptable 0000000000405D72 case 134
.text:0000000000408230                                         ; jumptable 0000000000405EF2 case 134
.text:0000000000408230                                         ; jumptable 0000000000406072 case 134
.text:0000000000408230                                         ; jumptable 00000000004061F2 case 134
.text:0000000000408230                                         ; jumptable 0000000000406372 case 134
.text:0000000000408230                                         ; jumptable 00000000004064F2 case 134
.text:0000000000408230                                         ; jumptable 0000000000406672 case 134
.text:0000000000408230                                         ; jumptable 00000000004067F2 case 134
.text:0000000000408230                                         ; jumptable 0000000000406972 case 134
.text:0000000000408230                                         ; jumptable 0000000000406AF2 case 134
.text:0000000000408230                                         ; jumptable 0000000000406C72 case 134
.text:0000000000408230                                         ; jumptable 0000000000406DF2 case 134
.text:0000000000408230                                         ; jumptable 0000000000406F72 case 134
.text:0000000000408230                                         ; jumptable 00000000004070F2 case 134
.text:0000000000408230                                         ; jumptable 0000000000407272 case 134
.text:0000000000408230                                         ; jumptable 00000000004075BF case 134
.text:0000000000408235                 movdqu  xmmword ptr [rdi+76h], xmm0
.text:000000000040823A
.text:000000000040823A loc_40823A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040823A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040823A                 lddqu   xmm0, xmmword ptr [rsi+66h] ; jumptable 00000000004059FA case 118
.text:000000000040823A                                         ; jumptable 0000000000405BF9 case 118
.text:000000000040823A                                         ; jumptable 0000000000405D72 case 118
.text:000000000040823A                                         ; jumptable 0000000000405EF2 case 118
.text:000000000040823A                                         ; jumptable 0000000000406072 case 118
.text:000000000040823A                                         ; jumptable 00000000004061F2 case 118
.text:000000000040823A                                         ; jumptable 0000000000406372 case 118
.text:000000000040823A                                         ; jumptable 00000000004064F2 case 118
.text:000000000040823A                                         ; jumptable 0000000000406672 case 118
.text:000000000040823A                                         ; jumptable 00000000004067F2 case 118
.text:000000000040823A                                         ; jumptable 0000000000406972 case 118
.text:000000000040823A                                         ; jumptable 0000000000406AF2 case 118
.text:000000000040823A                                         ; jumptable 0000000000406C72 case 118
.text:000000000040823A                                         ; jumptable 0000000000406DF2 case 118
.text:000000000040823A                                         ; jumptable 0000000000406F72 case 118
.text:000000000040823A                                         ; jumptable 00000000004070F2 case 118
.text:000000000040823A                                         ; jumptable 0000000000407272 case 118
.text:000000000040823A                                         ; jumptable 00000000004075BF case 118
.text:000000000040823F                 movdqu  xmmword ptr [rdi+66h], xmm0
.text:0000000000408244
.text:0000000000408244 loc_408244:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408244                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408244                 lddqu   xmm0, xmmword ptr [rsi+56h] ; jumptable 00000000004059FA case 102
.text:0000000000408244                                         ; jumptable 0000000000405BF9 case 102
.text:0000000000408244                                         ; jumptable 0000000000405D72 case 102
.text:0000000000408244                                         ; jumptable 0000000000405EF2 case 102
.text:0000000000408244                                         ; jumptable 0000000000406072 case 102
.text:0000000000408244                                         ; jumptable 00000000004061F2 case 102
.text:0000000000408244                                         ; jumptable 0000000000406372 case 102
.text:0000000000408244                                         ; jumptable 00000000004064F2 case 102
.text:0000000000408244                                         ; jumptable 0000000000406672 case 102
.text:0000000000408244                                         ; jumptable 00000000004067F2 case 102
.text:0000000000408244                                         ; jumptable 0000000000406972 case 102
.text:0000000000408244                                         ; jumptable 0000000000406AF2 case 102
.text:0000000000408244                                         ; jumptable 0000000000406C72 case 102
.text:0000000000408244                                         ; jumptable 0000000000406DF2 case 102
.text:0000000000408244                                         ; jumptable 0000000000406F72 case 102
.text:0000000000408244                                         ; jumptable 00000000004070F2 case 102
.text:0000000000408244                                         ; jumptable 0000000000407272 case 102
.text:0000000000408244                                         ; jumptable 00000000004075BF case 102
.text:0000000000408249                 movdqu  xmmword ptr [rdi+56h], xmm0
.text:000000000040824E
.text:000000000040824E loc_40824E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040824E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040824E                 lddqu   xmm0, xmmword ptr [rsi+46h] ; jumptable 00000000004059FA case 86
.text:000000000040824E                                         ; jumptable 0000000000405BF9 case 86
.text:000000000040824E                                         ; jumptable 0000000000405D72 case 86
.text:000000000040824E                                         ; jumptable 0000000000405EF2 case 86
.text:000000000040824E                                         ; jumptable 0000000000406072 case 86
.text:000000000040824E                                         ; jumptable 00000000004061F2 case 86
.text:000000000040824E                                         ; jumptable 0000000000406372 case 86
.text:000000000040824E                                         ; jumptable 00000000004064F2 case 86
.text:000000000040824E                                         ; jumptable 0000000000406672 case 86
.text:000000000040824E                                         ; jumptable 00000000004067F2 case 86
.text:000000000040824E                                         ; jumptable 0000000000406972 case 86
.text:000000000040824E                                         ; jumptable 0000000000406AF2 case 86
.text:000000000040824E                                         ; jumptable 0000000000406C72 case 86
.text:000000000040824E                                         ; jumptable 0000000000406DF2 case 86
.text:000000000040824E                                         ; jumptable 0000000000406F72 case 86
.text:000000000040824E                                         ; jumptable 00000000004070F2 case 86
.text:000000000040824E                                         ; jumptable 0000000000407272 case 86
.text:000000000040824E                                         ; jumptable 00000000004075BF case 86
.text:0000000000408253                 movdqu  xmmword ptr [rdi+46h], xmm0
.text:0000000000408258
.text:0000000000408258 loc_408258:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408258                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408258                 lddqu   xmm0, xmmword ptr [rsi+36h] ; jumptable 00000000004059FA case 70
.text:0000000000408258                                         ; jumptable 0000000000405BF9 case 70
.text:0000000000408258                                         ; jumptable 0000000000405D72 case 70
.text:0000000000408258                                         ; jumptable 0000000000405EF2 case 70
.text:0000000000408258                                         ; jumptable 0000000000406072 case 70
.text:0000000000408258                                         ; jumptable 00000000004061F2 case 70
.text:0000000000408258                                         ; jumptable 0000000000406372 case 70
.text:0000000000408258                                         ; jumptable 00000000004064F2 case 70
.text:0000000000408258                                         ; jumptable 0000000000406672 case 70
.text:0000000000408258                                         ; jumptable 00000000004067F2 case 70
.text:0000000000408258                                         ; jumptable 0000000000406972 case 70
.text:0000000000408258                                         ; jumptable 0000000000406AF2 case 70
.text:0000000000408258                                         ; jumptable 0000000000406C72 case 70
.text:0000000000408258                                         ; jumptable 0000000000406DF2 case 70
.text:0000000000408258                                         ; jumptable 0000000000406F72 case 70
.text:0000000000408258                                         ; jumptable 00000000004070F2 case 70
.text:0000000000408258                                         ; jumptable 0000000000407272 case 70
.text:0000000000408258                                         ; jumptable 00000000004075BF case 70
.text:000000000040825D                 movdqu  xmmword ptr [rdi+36h], xmm0
.text:0000000000408262
.text:0000000000408262 loc_408262:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408262                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408262                 lddqu   xmm0, xmmword ptr [rsi+26h] ; jumptable 00000000004059FA case 54
.text:0000000000408262                                         ; jumptable 0000000000405BF9 case 54
.text:0000000000408262                                         ; jumptable 0000000000405D72 case 54
.text:0000000000408262                                         ; jumptable 0000000000405EF2 case 54
.text:0000000000408262                                         ; jumptable 0000000000406072 case 54
.text:0000000000408262                                         ; jumptable 00000000004061F2 case 54
.text:0000000000408262                                         ; jumptable 0000000000406372 case 54
.text:0000000000408262                                         ; jumptable 00000000004064F2 case 54
.text:0000000000408262                                         ; jumptable 0000000000406672 case 54
.text:0000000000408262                                         ; jumptable 00000000004067F2 case 54
.text:0000000000408262                                         ; jumptable 0000000000406972 case 54
.text:0000000000408262                                         ; jumptable 0000000000406AF2 case 54
.text:0000000000408262                                         ; jumptable 0000000000406C72 case 54
.text:0000000000408262                                         ; jumptable 0000000000406DF2 case 54
.text:0000000000408262                                         ; jumptable 0000000000406F72 case 54
.text:0000000000408262                                         ; jumptable 00000000004070F2 case 54
.text:0000000000408262                                         ; jumptable 0000000000407272 case 54
.text:0000000000408262                                         ; jumptable 00000000004075BF case 54
.text:0000000000408267                 movdqu  xmmword ptr [rdi+26h], xmm0
.text:000000000040826C
.text:000000000040826C loc_40826C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040826C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040826C                 lddqu   xmm0, xmmword ptr [rsi+16h] ; jumptable 00000000004059FA case 38
.text:000000000040826C                                         ; jumptable 0000000000405BF9 case 38
.text:000000000040826C                                         ; jumptable 0000000000405D72 case 38
.text:000000000040826C                                         ; jumptable 0000000000405EF2 case 38
.text:000000000040826C                                         ; jumptable 0000000000406072 case 38
.text:000000000040826C                                         ; jumptable 00000000004061F2 case 38
.text:000000000040826C                                         ; jumptable 0000000000406372 case 38
.text:000000000040826C                                         ; jumptable 00000000004064F2 case 38
.text:000000000040826C                                         ; jumptable 0000000000406672 case 38
.text:000000000040826C                                         ; jumptable 00000000004067F2 case 38
.text:000000000040826C                                         ; jumptable 0000000000406972 case 38
.text:000000000040826C                                         ; jumptable 0000000000406AF2 case 38
.text:000000000040826C                                         ; jumptable 0000000000406C72 case 38
.text:000000000040826C                                         ; jumptable 0000000000406DF2 case 38
.text:000000000040826C                                         ; jumptable 0000000000406F72 case 38
.text:000000000040826C                                         ; jumptable 00000000004070F2 case 38
.text:000000000040826C                                         ; jumptable 0000000000407272 case 38
.text:000000000040826C                                         ; jumptable 00000000004075BF case 38
.text:0000000000408271                 movdqu  xmmword ptr [rdi+16h], xmm0
.text:0000000000408276
.text:0000000000408276 loc_408276:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408276                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408276                 lddqu   xmm0, xmmword ptr [rsi+6] ; jumptable 00000000004059FA case 22
.text:0000000000408276                                         ; jumptable 0000000000405BF9 case 22
.text:0000000000408276                                         ; jumptable 0000000000405D72 case 22
.text:0000000000408276                                         ; jumptable 0000000000405EF2 case 22
.text:0000000000408276                                         ; jumptable 0000000000406072 case 22
.text:0000000000408276                                         ; jumptable 00000000004061F2 case 22
.text:0000000000408276                                         ; jumptable 0000000000406372 case 22
.text:0000000000408276                                         ; jumptable 00000000004064F2 case 22
.text:0000000000408276                                         ; jumptable 0000000000406672 case 22
.text:0000000000408276                                         ; jumptable 00000000004067F2 case 22
.text:0000000000408276                                         ; jumptable 0000000000406972 case 22
.text:0000000000408276                                         ; jumptable 0000000000406AF2 case 22
.text:0000000000408276                                         ; jumptable 0000000000406C72 case 22
.text:0000000000408276                                         ; jumptable 0000000000406DF2 case 22
.text:0000000000408276                                         ; jumptable 0000000000406F72 case 22
.text:0000000000408276                                         ; jumptable 00000000004070F2 case 22
.text:0000000000408276                                         ; jumptable 0000000000407272 case 22
.text:0000000000408276                                         ; jumptable 00000000004075BF case 22
.text:000000000040827B                 lddqu   xmm1, xmmword ptr [rsi]
.text:000000000040827F                 movdqu  xmmword ptr [rdi+6], xmm0
.text:0000000000408284                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000408288                 retn
.text:0000000000408288 ; ---------------------------------------------------------------------------
.text:0000000000408289                 align 10h
.text:0000000000408290
.text:0000000000408290 loc_408290:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408290                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408290                 mov     edx, [rsi+2]    ; jumptable 00000000004059FA case 6
.text:0000000000408290                                         ; jumptable 0000000000405BF9 case 6
.text:0000000000408290                                         ; jumptable 0000000000405D72 case 6
.text:0000000000408290                                         ; jumptable 0000000000405EF2 case 6
.text:0000000000408290                                         ; jumptable 0000000000406072 case 6
.text:0000000000408290                                         ; jumptable 00000000004061F2 case 6
.text:0000000000408290                                         ; jumptable 0000000000406372 case 6
.text:0000000000408290                                         ; jumptable 00000000004064F2 case 6
.text:0000000000408290                                         ; jumptable 0000000000406672 case 6
.text:0000000000408290                                         ; jumptable 00000000004067F2 case 6
.text:0000000000408290                                         ; jumptable 0000000000406972 case 6
.text:0000000000408290                                         ; jumptable 0000000000406AF2 case 6
.text:0000000000408290                                         ; jumptable 0000000000406C72 case 6
.text:0000000000408290                                         ; jumptable 0000000000406DF2 case 6
.text:0000000000408290                                         ; jumptable 0000000000406F72 case 6
.text:0000000000408290                                         ; jumptable 00000000004070F2 case 6
.text:0000000000408290                                         ; jumptable 0000000000407272 case 6
.text:0000000000408290                                         ; jumptable 00000000004075BF case 6
.text:0000000000408293                 mov     ecx, [rsi]
.text:0000000000408295                 mov     [rdi+2], edx
.text:0000000000408298                 mov     [rdi], ecx
.text:000000000040829A                 retn
.text:000000000040829A ; ---------------------------------------------------------------------------
.text:000000000040829B                 align 20h
.text:00000000004082A0
.text:00000000004082A0 loc_4082A0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004082A0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004082A0                 lddqu   xmm0, xmmword ptr [rsi+75h] ; jumptable 00000000004059FA case 133
.text:00000000004082A0                                         ; jumptable 0000000000405BF9 case 133
.text:00000000004082A0                                         ; jumptable 0000000000405D72 case 133
.text:00000000004082A0                                         ; jumptable 0000000000405EF2 case 133
.text:00000000004082A0                                         ; jumptable 0000000000406072 case 133
.text:00000000004082A0                                         ; jumptable 00000000004061F2 case 133
.text:00000000004082A0                                         ; jumptable 0000000000406372 case 133
.text:00000000004082A0                                         ; jumptable 00000000004064F2 case 133
.text:00000000004082A0                                         ; jumptable 0000000000406672 case 133
.text:00000000004082A0                                         ; jumptable 00000000004067F2 case 133
.text:00000000004082A0                                         ; jumptable 0000000000406972 case 133
.text:00000000004082A0                                         ; jumptable 0000000000406AF2 case 133
.text:00000000004082A0                                         ; jumptable 0000000000406C72 case 133
.text:00000000004082A0                                         ; jumptable 0000000000406DF2 case 133
.text:00000000004082A0                                         ; jumptable 0000000000406F72 case 133
.text:00000000004082A0                                         ; jumptable 00000000004070F2 case 133
.text:00000000004082A0                                         ; jumptable 0000000000407272 case 133
.text:00000000004082A0                                         ; jumptable 00000000004075BF case 133
.text:00000000004082A5                 movdqu  xmmword ptr [rdi+75h], xmm0
.text:00000000004082AA
.text:00000000004082AA loc_4082AA:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004082AA                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004082AA                 lddqu   xmm0, xmmword ptr [rsi+65h] ; jumptable 00000000004059FA case 117
.text:00000000004082AA                                         ; jumptable 0000000000405BF9 case 117
.text:00000000004082AA                                         ; jumptable 0000000000405D72 case 117
.text:00000000004082AA                                         ; jumptable 0000000000405EF2 case 117
.text:00000000004082AA                                         ; jumptable 0000000000406072 case 117
.text:00000000004082AA                                         ; jumptable 00000000004061F2 case 117
.text:00000000004082AA                                         ; jumptable 0000000000406372 case 117
.text:00000000004082AA                                         ; jumptable 00000000004064F2 case 117
.text:00000000004082AA                                         ; jumptable 0000000000406672 case 117
.text:00000000004082AA                                         ; jumptable 00000000004067F2 case 117
.text:00000000004082AA                                         ; jumptable 0000000000406972 case 117
.text:00000000004082AA                                         ; jumptable 0000000000406AF2 case 117
.text:00000000004082AA                                         ; jumptable 0000000000406C72 case 117
.text:00000000004082AA                                         ; jumptable 0000000000406DF2 case 117
.text:00000000004082AA                                         ; jumptable 0000000000406F72 case 117
.text:00000000004082AA                                         ; jumptable 00000000004070F2 case 117
.text:00000000004082AA                                         ; jumptable 0000000000407272 case 117
.text:00000000004082AA                                         ; jumptable 00000000004075BF case 117
.text:00000000004082AF                 movdqu  xmmword ptr [rdi+65h], xmm0
.text:00000000004082B4
.text:00000000004082B4 loc_4082B4:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004082B4                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004082B4                 lddqu   xmm0, xmmword ptr [rsi+55h] ; jumptable 00000000004059FA case 101
.text:00000000004082B4                                         ; jumptable 0000000000405BF9 case 101
.text:00000000004082B4                                         ; jumptable 0000000000405D72 case 101
.text:00000000004082B4                                         ; jumptable 0000000000405EF2 case 101
.text:00000000004082B4                                         ; jumptable 0000000000406072 case 101
.text:00000000004082B4                                         ; jumptable 00000000004061F2 case 101
.text:00000000004082B4                                         ; jumptable 0000000000406372 case 101
.text:00000000004082B4                                         ; jumptable 00000000004064F2 case 101
.text:00000000004082B4                                         ; jumptable 0000000000406672 case 101
.text:00000000004082B4                                         ; jumptable 00000000004067F2 case 101
.text:00000000004082B4                                         ; jumptable 0000000000406972 case 101
.text:00000000004082B4                                         ; jumptable 0000000000406AF2 case 101
.text:00000000004082B4                                         ; jumptable 0000000000406C72 case 101
.text:00000000004082B4                                         ; jumptable 0000000000406DF2 case 101
.text:00000000004082B4                                         ; jumptable 0000000000406F72 case 101
.text:00000000004082B4                                         ; jumptable 00000000004070F2 case 101
.text:00000000004082B4                                         ; jumptable 0000000000407272 case 101
.text:00000000004082B4                                         ; jumptable 00000000004075BF case 101
.text:00000000004082B9                 movdqu  xmmword ptr [rdi+55h], xmm0
.text:00000000004082BE
.text:00000000004082BE loc_4082BE:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004082BE                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004082BE                 lddqu   xmm0, xmmword ptr [rsi+45h] ; jumptable 00000000004059FA case 85
.text:00000000004082BE                                         ; jumptable 0000000000405BF9 case 85
.text:00000000004082BE                                         ; jumptable 0000000000405D72 case 85
.text:00000000004082BE                                         ; jumptable 0000000000405EF2 case 85
.text:00000000004082BE                                         ; jumptable 0000000000406072 case 85
.text:00000000004082BE                                         ; jumptable 00000000004061F2 case 85
.text:00000000004082BE                                         ; jumptable 0000000000406372 case 85
.text:00000000004082BE                                         ; jumptable 00000000004064F2 case 85
.text:00000000004082BE                                         ; jumptable 0000000000406672 case 85
.text:00000000004082BE                                         ; jumptable 00000000004067F2 case 85
.text:00000000004082BE                                         ; jumptable 0000000000406972 case 85
.text:00000000004082BE                                         ; jumptable 0000000000406AF2 case 85
.text:00000000004082BE                                         ; jumptable 0000000000406C72 case 85
.text:00000000004082BE                                         ; jumptable 0000000000406DF2 case 85
.text:00000000004082BE                                         ; jumptable 0000000000406F72 case 85
.text:00000000004082BE                                         ; jumptable 00000000004070F2 case 85
.text:00000000004082BE                                         ; jumptable 0000000000407272 case 85
.text:00000000004082BE                                         ; jumptable 00000000004075BF case 85
.text:00000000004082C3                 movdqu  xmmword ptr [rdi+45h], xmm0
.text:00000000004082C8
.text:00000000004082C8 loc_4082C8:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004082C8                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004082C8                 lddqu   xmm0, xmmword ptr [rsi+35h] ; jumptable 00000000004059FA case 69
.text:00000000004082C8                                         ; jumptable 0000000000405BF9 case 69
.text:00000000004082C8                                         ; jumptable 0000000000405D72 case 69
.text:00000000004082C8                                         ; jumptable 0000000000405EF2 case 69
.text:00000000004082C8                                         ; jumptable 0000000000406072 case 69
.text:00000000004082C8                                         ; jumptable 00000000004061F2 case 69
.text:00000000004082C8                                         ; jumptable 0000000000406372 case 69
.text:00000000004082C8                                         ; jumptable 00000000004064F2 case 69
.text:00000000004082C8                                         ; jumptable 0000000000406672 case 69
.text:00000000004082C8                                         ; jumptable 00000000004067F2 case 69
.text:00000000004082C8                                         ; jumptable 0000000000406972 case 69
.text:00000000004082C8                                         ; jumptable 0000000000406AF2 case 69
.text:00000000004082C8                                         ; jumptable 0000000000406C72 case 69
.text:00000000004082C8                                         ; jumptable 0000000000406DF2 case 69
.text:00000000004082C8                                         ; jumptable 0000000000406F72 case 69
.text:00000000004082C8                                         ; jumptable 00000000004070F2 case 69
.text:00000000004082C8                                         ; jumptable 0000000000407272 case 69
.text:00000000004082C8                                         ; jumptable 00000000004075BF case 69
.text:00000000004082CD                 movdqu  xmmword ptr [rdi+35h], xmm0
.text:00000000004082D2
.text:00000000004082D2 loc_4082D2:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004082D2                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004082D2                 lddqu   xmm0, xmmword ptr [rsi+25h] ; jumptable 00000000004059FA case 53
.text:00000000004082D2                                         ; jumptable 0000000000405BF9 case 53
.text:00000000004082D2                                         ; jumptable 0000000000405D72 case 53
.text:00000000004082D2                                         ; jumptable 0000000000405EF2 case 53
.text:00000000004082D2                                         ; jumptable 0000000000406072 case 53
.text:00000000004082D2                                         ; jumptable 00000000004061F2 case 53
.text:00000000004082D2                                         ; jumptable 0000000000406372 case 53
.text:00000000004082D2                                         ; jumptable 00000000004064F2 case 53
.text:00000000004082D2                                         ; jumptable 0000000000406672 case 53
.text:00000000004082D2                                         ; jumptable 00000000004067F2 case 53
.text:00000000004082D2                                         ; jumptable 0000000000406972 case 53
.text:00000000004082D2                                         ; jumptable 0000000000406AF2 case 53
.text:00000000004082D2                                         ; jumptable 0000000000406C72 case 53
.text:00000000004082D2                                         ; jumptable 0000000000406DF2 case 53
.text:00000000004082D2                                         ; jumptable 0000000000406F72 case 53
.text:00000000004082D2                                         ; jumptable 00000000004070F2 case 53
.text:00000000004082D2                                         ; jumptable 0000000000407272 case 53
.text:00000000004082D2                                         ; jumptable 00000000004075BF case 53
.text:00000000004082D7                 movdqu  xmmword ptr [rdi+25h], xmm0
.text:00000000004082DC
.text:00000000004082DC loc_4082DC:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004082DC                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004082DC                 lddqu   xmm0, xmmword ptr [rsi+15h] ; jumptable 00000000004059FA case 37
.text:00000000004082DC                                         ; jumptable 0000000000405BF9 case 37
.text:00000000004082DC                                         ; jumptable 0000000000405D72 case 37
.text:00000000004082DC                                         ; jumptable 0000000000405EF2 case 37
.text:00000000004082DC                                         ; jumptable 0000000000406072 case 37
.text:00000000004082DC                                         ; jumptable 00000000004061F2 case 37
.text:00000000004082DC                                         ; jumptable 0000000000406372 case 37
.text:00000000004082DC                                         ; jumptable 00000000004064F2 case 37
.text:00000000004082DC                                         ; jumptable 0000000000406672 case 37
.text:00000000004082DC                                         ; jumptable 00000000004067F2 case 37
.text:00000000004082DC                                         ; jumptable 0000000000406972 case 37
.text:00000000004082DC                                         ; jumptable 0000000000406AF2 case 37
.text:00000000004082DC                                         ; jumptable 0000000000406C72 case 37
.text:00000000004082DC                                         ; jumptable 0000000000406DF2 case 37
.text:00000000004082DC                                         ; jumptable 0000000000406F72 case 37
.text:00000000004082DC                                         ; jumptable 00000000004070F2 case 37
.text:00000000004082DC                                         ; jumptable 0000000000407272 case 37
.text:00000000004082DC                                         ; jumptable 00000000004075BF case 37
.text:00000000004082E1                 movdqu  xmmword ptr [rdi+15h], xmm0
.text:00000000004082E6
.text:00000000004082E6 loc_4082E6:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004082E6                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004082E6                 lddqu   xmm0, xmmword ptr [rsi+5] ; jumptable 00000000004059FA case 21
.text:00000000004082E6                                         ; jumptable 0000000000405BF9 case 21
.text:00000000004082E6                                         ; jumptable 0000000000405D72 case 21
.text:00000000004082E6                                         ; jumptable 0000000000405EF2 case 21
.text:00000000004082E6                                         ; jumptable 0000000000406072 case 21
.text:00000000004082E6                                         ; jumptable 00000000004061F2 case 21
.text:00000000004082E6                                         ; jumptable 0000000000406372 case 21
.text:00000000004082E6                                         ; jumptable 00000000004064F2 case 21
.text:00000000004082E6                                         ; jumptable 0000000000406672 case 21
.text:00000000004082E6                                         ; jumptable 00000000004067F2 case 21
.text:00000000004082E6                                         ; jumptable 0000000000406972 case 21
.text:00000000004082E6                                         ; jumptable 0000000000406AF2 case 21
.text:00000000004082E6                                         ; jumptable 0000000000406C72 case 21
.text:00000000004082E6                                         ; jumptable 0000000000406DF2 case 21
.text:00000000004082E6                                         ; jumptable 0000000000406F72 case 21
.text:00000000004082E6                                         ; jumptable 00000000004070F2 case 21
.text:00000000004082E6                                         ; jumptable 0000000000407272 case 21
.text:00000000004082E6                                         ; jumptable 00000000004075BF case 21
.text:00000000004082EB                 lddqu   xmm1, xmmword ptr [rsi]
.text:00000000004082EF                 movdqu  xmmword ptr [rdi+5], xmm0
.text:00000000004082F4                 movdqu  xmmword ptr [rdi], xmm1
.text:00000000004082F8                 retn
.text:00000000004082F8 ; ---------------------------------------------------------------------------
.text:00000000004082F9                 align 20h
.text:0000000000408300
.text:0000000000408300 loc_408300:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408300                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408300                 mov     edx, [rsi+1]    ; jumptable 00000000004059FA case 5
.text:0000000000408300                                         ; jumptable 0000000000405BF9 case 5
.text:0000000000408300                                         ; jumptable 0000000000405D72 case 5
.text:0000000000408300                                         ; jumptable 0000000000405EF2 case 5
.text:0000000000408300                                         ; jumptable 0000000000406072 case 5
.text:0000000000408300                                         ; jumptable 00000000004061F2 case 5
.text:0000000000408300                                         ; jumptable 0000000000406372 case 5
.text:0000000000408300                                         ; jumptable 00000000004064F2 case 5
.text:0000000000408300                                         ; jumptable 0000000000406672 case 5
.text:0000000000408300                                         ; jumptable 00000000004067F2 case 5
.text:0000000000408300                                         ; jumptable 0000000000406972 case 5
.text:0000000000408300                                         ; jumptable 0000000000406AF2 case 5
.text:0000000000408300                                         ; jumptable 0000000000406C72 case 5
.text:0000000000408300                                         ; jumptable 0000000000406DF2 case 5
.text:0000000000408300                                         ; jumptable 0000000000406F72 case 5
.text:0000000000408300                                         ; jumptable 00000000004070F2 case 5
.text:0000000000408300                                         ; jumptable 0000000000407272 case 5
.text:0000000000408300                                         ; jumptable 00000000004075BF case 5
.text:0000000000408303                 mov     ecx, [rsi]
.text:0000000000408305                 mov     [rdi+1], edx
.text:0000000000408308                 mov     [rdi], ecx
.text:000000000040830A                 retn
.text:000000000040830A ; ---------------------------------------------------------------------------
.text:000000000040830B                 align 10h
.text:0000000000408310
.text:0000000000408310 loc_408310:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408310                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408310                 lddqu   xmm0, xmmword ptr [rsi+74h] ; jumptable 00000000004059FA case 132
.text:0000000000408310                                         ; jumptable 0000000000405BF9 case 132
.text:0000000000408310                                         ; jumptable 0000000000405D72 case 132
.text:0000000000408310                                         ; jumptable 0000000000405EF2 case 132
.text:0000000000408310                                         ; jumptable 0000000000406072 case 132
.text:0000000000408310                                         ; jumptable 00000000004061F2 case 132
.text:0000000000408310                                         ; jumptable 0000000000406372 case 132
.text:0000000000408310                                         ; jumptable 00000000004064F2 case 132
.text:0000000000408310                                         ; jumptable 0000000000406672 case 132
.text:0000000000408310                                         ; jumptable 00000000004067F2 case 132
.text:0000000000408310                                         ; jumptable 0000000000406972 case 132
.text:0000000000408310                                         ; jumptable 0000000000406AF2 case 132
.text:0000000000408310                                         ; jumptable 0000000000406C72 case 132
.text:0000000000408310                                         ; jumptable 0000000000406DF2 case 132
.text:0000000000408310                                         ; jumptable 0000000000406F72 case 132
.text:0000000000408310                                         ; jumptable 00000000004070F2 case 132
.text:0000000000408310                                         ; jumptable 0000000000407272 case 132
.text:0000000000408310                                         ; jumptable 00000000004075BF case 132
.text:0000000000408315                 movdqu  xmmword ptr [rdi+74h], xmm0
.text:000000000040831A
.text:000000000040831A loc_40831A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040831A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040831A                 lddqu   xmm0, xmmword ptr [rsi+64h] ; jumptable 00000000004059FA case 116
.text:000000000040831A                                         ; jumptable 0000000000405BF9 case 116
.text:000000000040831A                                         ; jumptable 0000000000405D72 case 116
.text:000000000040831A                                         ; jumptable 0000000000405EF2 case 116
.text:000000000040831A                                         ; jumptable 0000000000406072 case 116
.text:000000000040831A                                         ; jumptable 00000000004061F2 case 116
.text:000000000040831A                                         ; jumptable 0000000000406372 case 116
.text:000000000040831A                                         ; jumptable 00000000004064F2 case 116
.text:000000000040831A                                         ; jumptable 0000000000406672 case 116
.text:000000000040831A                                         ; jumptable 00000000004067F2 case 116
.text:000000000040831A                                         ; jumptable 0000000000406972 case 116
.text:000000000040831A                                         ; jumptable 0000000000406AF2 case 116
.text:000000000040831A                                         ; jumptable 0000000000406C72 case 116
.text:000000000040831A                                         ; jumptable 0000000000406DF2 case 116
.text:000000000040831A                                         ; jumptable 0000000000406F72 case 116
.text:000000000040831A                                         ; jumptable 00000000004070F2 case 116
.text:000000000040831A                                         ; jumptable 0000000000407272 case 116
.text:000000000040831A                                         ; jumptable 00000000004075BF case 116
.text:000000000040831F                 movdqu  xmmword ptr [rdi+64h], xmm0
.text:0000000000408324
.text:0000000000408324 loc_408324:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408324                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408324                 lddqu   xmm0, xmmword ptr [rsi+54h] ; jumptable 00000000004059FA case 100
.text:0000000000408324                                         ; jumptable 0000000000405BF9 case 100
.text:0000000000408324                                         ; jumptable 0000000000405D72 case 100
.text:0000000000408324                                         ; jumptable 0000000000405EF2 case 100
.text:0000000000408324                                         ; jumptable 0000000000406072 case 100
.text:0000000000408324                                         ; jumptable 00000000004061F2 case 100
.text:0000000000408324                                         ; jumptable 0000000000406372 case 100
.text:0000000000408324                                         ; jumptable 00000000004064F2 case 100
.text:0000000000408324                                         ; jumptable 0000000000406672 case 100
.text:0000000000408324                                         ; jumptable 00000000004067F2 case 100
.text:0000000000408324                                         ; jumptable 0000000000406972 case 100
.text:0000000000408324                                         ; jumptable 0000000000406AF2 case 100
.text:0000000000408324                                         ; jumptable 0000000000406C72 case 100
.text:0000000000408324                                         ; jumptable 0000000000406DF2 case 100
.text:0000000000408324                                         ; jumptable 0000000000406F72 case 100
.text:0000000000408324                                         ; jumptable 00000000004070F2 case 100
.text:0000000000408324                                         ; jumptable 0000000000407272 case 100
.text:0000000000408324                                         ; jumptable 00000000004075BF case 100
.text:0000000000408329                 movdqu  xmmword ptr [rdi+54h], xmm0
.text:000000000040832E
.text:000000000040832E loc_40832E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040832E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040832E                 lddqu   xmm0, xmmword ptr [rsi+44h] ; jumptable 00000000004059FA case 84
.text:000000000040832E                                         ; jumptable 0000000000405BF9 case 84
.text:000000000040832E                                         ; jumptable 0000000000405D72 case 84
.text:000000000040832E                                         ; jumptable 0000000000405EF2 case 84
.text:000000000040832E                                         ; jumptable 0000000000406072 case 84
.text:000000000040832E                                         ; jumptable 00000000004061F2 case 84
.text:000000000040832E                                         ; jumptable 0000000000406372 case 84
.text:000000000040832E                                         ; jumptable 00000000004064F2 case 84
.text:000000000040832E                                         ; jumptable 0000000000406672 case 84
.text:000000000040832E                                         ; jumptable 00000000004067F2 case 84
.text:000000000040832E                                         ; jumptable 0000000000406972 case 84
.text:000000000040832E                                         ; jumptable 0000000000406AF2 case 84
.text:000000000040832E                                         ; jumptable 0000000000406C72 case 84
.text:000000000040832E                                         ; jumptable 0000000000406DF2 case 84
.text:000000000040832E                                         ; jumptable 0000000000406F72 case 84
.text:000000000040832E                                         ; jumptable 00000000004070F2 case 84
.text:000000000040832E                                         ; jumptable 0000000000407272 case 84
.text:000000000040832E                                         ; jumptable 00000000004075BF case 84
.text:0000000000408333                 movdqu  xmmword ptr [rdi+44h], xmm0
.text:0000000000408338
.text:0000000000408338 loc_408338:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408338                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408338                 lddqu   xmm0, xmmword ptr [rsi+34h] ; jumptable 00000000004059FA case 68
.text:0000000000408338                                         ; jumptable 0000000000405BF9 case 68
.text:0000000000408338                                         ; jumptable 0000000000405D72 case 68
.text:0000000000408338                                         ; jumptable 0000000000405EF2 case 68
.text:0000000000408338                                         ; jumptable 0000000000406072 case 68
.text:0000000000408338                                         ; jumptable 00000000004061F2 case 68
.text:0000000000408338                                         ; jumptable 0000000000406372 case 68
.text:0000000000408338                                         ; jumptable 00000000004064F2 case 68
.text:0000000000408338                                         ; jumptable 0000000000406672 case 68
.text:0000000000408338                                         ; jumptable 00000000004067F2 case 68
.text:0000000000408338                                         ; jumptable 0000000000406972 case 68
.text:0000000000408338                                         ; jumptable 0000000000406AF2 case 68
.text:0000000000408338                                         ; jumptable 0000000000406C72 case 68
.text:0000000000408338                                         ; jumptable 0000000000406DF2 case 68
.text:0000000000408338                                         ; jumptable 0000000000406F72 case 68
.text:0000000000408338                                         ; jumptable 00000000004070F2 case 68
.text:0000000000408338                                         ; jumptable 0000000000407272 case 68
.text:0000000000408338                                         ; jumptable 00000000004075BF case 68
.text:000000000040833D                 movdqu  xmmword ptr [rdi+34h], xmm0
.text:0000000000408342
.text:0000000000408342 loc_408342:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408342                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408342                 lddqu   xmm0, xmmword ptr [rsi+24h] ; jumptable 00000000004059FA case 52
.text:0000000000408342                                         ; jumptable 0000000000405BF9 case 52
.text:0000000000408342                                         ; jumptable 0000000000405D72 case 52
.text:0000000000408342                                         ; jumptable 0000000000405EF2 case 52
.text:0000000000408342                                         ; jumptable 0000000000406072 case 52
.text:0000000000408342                                         ; jumptable 00000000004061F2 case 52
.text:0000000000408342                                         ; jumptable 0000000000406372 case 52
.text:0000000000408342                                         ; jumptable 00000000004064F2 case 52
.text:0000000000408342                                         ; jumptable 0000000000406672 case 52
.text:0000000000408342                                         ; jumptable 00000000004067F2 case 52
.text:0000000000408342                                         ; jumptable 0000000000406972 case 52
.text:0000000000408342                                         ; jumptable 0000000000406AF2 case 52
.text:0000000000408342                                         ; jumptable 0000000000406C72 case 52
.text:0000000000408342                                         ; jumptable 0000000000406DF2 case 52
.text:0000000000408342                                         ; jumptable 0000000000406F72 case 52
.text:0000000000408342                                         ; jumptable 00000000004070F2 case 52
.text:0000000000408342                                         ; jumptable 0000000000407272 case 52
.text:0000000000408342                                         ; jumptable 00000000004075BF case 52
.text:0000000000408347                 movdqu  xmmword ptr [rdi+24h], xmm0
.text:000000000040834C
.text:000000000040834C loc_40834C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040834C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040834C                 lddqu   xmm0, xmmword ptr [rsi+14h] ; jumptable 00000000004059FA case 36
.text:000000000040834C                                         ; jumptable 0000000000405BF9 case 36
.text:000000000040834C                                         ; jumptable 0000000000405D72 case 36
.text:000000000040834C                                         ; jumptable 0000000000405EF2 case 36
.text:000000000040834C                                         ; jumptable 0000000000406072 case 36
.text:000000000040834C                                         ; jumptable 00000000004061F2 case 36
.text:000000000040834C                                         ; jumptable 0000000000406372 case 36
.text:000000000040834C                                         ; jumptable 00000000004064F2 case 36
.text:000000000040834C                                         ; jumptable 0000000000406672 case 36
.text:000000000040834C                                         ; jumptable 00000000004067F2 case 36
.text:000000000040834C                                         ; jumptable 0000000000406972 case 36
.text:000000000040834C                                         ; jumptable 0000000000406AF2 case 36
.text:000000000040834C                                         ; jumptable 0000000000406C72 case 36
.text:000000000040834C                                         ; jumptable 0000000000406DF2 case 36
.text:000000000040834C                                         ; jumptable 0000000000406F72 case 36
.text:000000000040834C                                         ; jumptable 00000000004070F2 case 36
.text:000000000040834C                                         ; jumptable 0000000000407272 case 36
.text:000000000040834C                                         ; jumptable 00000000004075BF case 36
.text:0000000000408351                 movdqu  xmmword ptr [rdi+14h], xmm0
.text:0000000000408356
.text:0000000000408356 loc_408356:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408356                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408356                 lddqu   xmm0, xmmword ptr [rsi+4] ; jumptable 00000000004059FA case 20
.text:0000000000408356                                         ; jumptable 0000000000405BF9 case 20
.text:0000000000408356                                         ; jumptable 0000000000405D72 case 20
.text:0000000000408356                                         ; jumptable 0000000000405EF2 case 20
.text:0000000000408356                                         ; jumptable 0000000000406072 case 20
.text:0000000000408356                                         ; jumptable 00000000004061F2 case 20
.text:0000000000408356                                         ; jumptable 0000000000406372 case 20
.text:0000000000408356                                         ; jumptable 00000000004064F2 case 20
.text:0000000000408356                                         ; jumptable 0000000000406672 case 20
.text:0000000000408356                                         ; jumptable 00000000004067F2 case 20
.text:0000000000408356                                         ; jumptable 0000000000406972 case 20
.text:0000000000408356                                         ; jumptable 0000000000406AF2 case 20
.text:0000000000408356                                         ; jumptable 0000000000406C72 case 20
.text:0000000000408356                                         ; jumptable 0000000000406DF2 case 20
.text:0000000000408356                                         ; jumptable 0000000000406F72 case 20
.text:0000000000408356                                         ; jumptable 00000000004070F2 case 20
.text:0000000000408356                                         ; jumptable 0000000000407272 case 20
.text:0000000000408356                                         ; jumptable 00000000004075BF case 20
.text:000000000040835B                 lddqu   xmm1, xmmword ptr [rsi]
.text:000000000040835F                 movdqu  xmmword ptr [rdi+4], xmm0
.text:0000000000408364                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000408368                 retn
.text:0000000000408368 ; ---------------------------------------------------------------------------
.text:0000000000408369                 align 10h
.text:0000000000408370
.text:0000000000408370 loc_408370:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408370                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408370                 mov     edx, [rsi]      ; jumptable 00000000004059FA case 4
.text:0000000000408370                                         ; jumptable 0000000000405BF9 case 4
.text:0000000000408370                                         ; jumptable 0000000000405D72 case 4
.text:0000000000408370                                         ; jumptable 0000000000405EF2 case 4
.text:0000000000408370                                         ; jumptable 0000000000406072 case 4
.text:0000000000408370                                         ; jumptable 00000000004061F2 case 4
.text:0000000000408370                                         ; jumptable 0000000000406372 case 4
.text:0000000000408370                                         ; jumptable 00000000004064F2 case 4
.text:0000000000408370                                         ; jumptable 0000000000406672 case 4
.text:0000000000408370                                         ; jumptable 00000000004067F2 case 4
.text:0000000000408370                                         ; jumptable 0000000000406972 case 4
.text:0000000000408370                                         ; jumptable 0000000000406AF2 case 4
.text:0000000000408370                                         ; jumptable 0000000000406C72 case 4
.text:0000000000408370                                         ; jumptable 0000000000406DF2 case 4
.text:0000000000408370                                         ; jumptable 0000000000406F72 case 4
.text:0000000000408370                                         ; jumptable 00000000004070F2 case 4
.text:0000000000408370                                         ; jumptable 0000000000407272 case 4
.text:0000000000408370                                         ; jumptable 00000000004075BF case 4
.text:0000000000408372                 mov     [rdi], edx
.text:0000000000408374                 retn
.text:0000000000408374 ; ---------------------------------------------------------------------------
.text:0000000000408375                 align 20h
.text:0000000000408380
.text:0000000000408380 loc_408380:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408380                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408380                 lddqu   xmm0, xmmword ptr [rsi+73h] ; jumptable 00000000004059FA case 131
.text:0000000000408380                                         ; jumptable 0000000000405BF9 case 131
.text:0000000000408380                                         ; jumptable 0000000000405D72 case 131
.text:0000000000408380                                         ; jumptable 0000000000405EF2 case 131
.text:0000000000408380                                         ; jumptable 0000000000406072 case 131
.text:0000000000408380                                         ; jumptable 00000000004061F2 case 131
.text:0000000000408380                                         ; jumptable 0000000000406372 case 131
.text:0000000000408380                                         ; jumptable 00000000004064F2 case 131
.text:0000000000408380                                         ; jumptable 0000000000406672 case 131
.text:0000000000408380                                         ; jumptable 00000000004067F2 case 131
.text:0000000000408380                                         ; jumptable 0000000000406972 case 131
.text:0000000000408380                                         ; jumptable 0000000000406AF2 case 131
.text:0000000000408380                                         ; jumptable 0000000000406C72 case 131
.text:0000000000408380                                         ; jumptable 0000000000406DF2 case 131
.text:0000000000408380                                         ; jumptable 0000000000406F72 case 131
.text:0000000000408380                                         ; jumptable 00000000004070F2 case 131
.text:0000000000408380                                         ; jumptable 0000000000407272 case 131
.text:0000000000408380                                         ; jumptable 00000000004075BF case 131
.text:0000000000408385                 movdqu  xmmword ptr [rdi+73h], xmm0
.text:000000000040838A
.text:000000000040838A loc_40838A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040838A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040838A                 lddqu   xmm0, xmmword ptr [rsi+63h] ; jumptable 00000000004059FA case 115
.text:000000000040838A                                         ; jumptable 0000000000405BF9 case 115
.text:000000000040838A                                         ; jumptable 0000000000405D72 case 115
.text:000000000040838A                                         ; jumptable 0000000000405EF2 case 115
.text:000000000040838A                                         ; jumptable 0000000000406072 case 115
.text:000000000040838A                                         ; jumptable 00000000004061F2 case 115
.text:000000000040838A                                         ; jumptable 0000000000406372 case 115
.text:000000000040838A                                         ; jumptable 00000000004064F2 case 115
.text:000000000040838A                                         ; jumptable 0000000000406672 case 115
.text:000000000040838A                                         ; jumptable 00000000004067F2 case 115
.text:000000000040838A                                         ; jumptable 0000000000406972 case 115
.text:000000000040838A                                         ; jumptable 0000000000406AF2 case 115
.text:000000000040838A                                         ; jumptable 0000000000406C72 case 115
.text:000000000040838A                                         ; jumptable 0000000000406DF2 case 115
.text:000000000040838A                                         ; jumptable 0000000000406F72 case 115
.text:000000000040838A                                         ; jumptable 00000000004070F2 case 115
.text:000000000040838A                                         ; jumptable 0000000000407272 case 115
.text:000000000040838A                                         ; jumptable 00000000004075BF case 115
.text:000000000040838F                 movdqu  xmmword ptr [rdi+63h], xmm0
.text:0000000000408394
.text:0000000000408394 loc_408394:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408394                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408394                 lddqu   xmm0, xmmword ptr [rsi+53h] ; jumptable 00000000004059FA case 99
.text:0000000000408394                                         ; jumptable 0000000000405BF9 case 99
.text:0000000000408394                                         ; jumptable 0000000000405D72 case 99
.text:0000000000408394                                         ; jumptable 0000000000405EF2 case 99
.text:0000000000408394                                         ; jumptable 0000000000406072 case 99
.text:0000000000408394                                         ; jumptable 00000000004061F2 case 99
.text:0000000000408394                                         ; jumptable 0000000000406372 case 99
.text:0000000000408394                                         ; jumptable 00000000004064F2 case 99
.text:0000000000408394                                         ; jumptable 0000000000406672 case 99
.text:0000000000408394                                         ; jumptable 00000000004067F2 case 99
.text:0000000000408394                                         ; jumptable 0000000000406972 case 99
.text:0000000000408394                                         ; jumptable 0000000000406AF2 case 99
.text:0000000000408394                                         ; jumptable 0000000000406C72 case 99
.text:0000000000408394                                         ; jumptable 0000000000406DF2 case 99
.text:0000000000408394                                         ; jumptable 0000000000406F72 case 99
.text:0000000000408394                                         ; jumptable 00000000004070F2 case 99
.text:0000000000408394                                         ; jumptable 0000000000407272 case 99
.text:0000000000408394                                         ; jumptable 00000000004075BF case 99
.text:0000000000408399                 movdqu  xmmword ptr [rdi+53h], xmm0
.text:000000000040839E
.text:000000000040839E loc_40839E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040839E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040839E                 lddqu   xmm0, xmmword ptr [rsi+43h] ; jumptable 00000000004059FA case 83
.text:000000000040839E                                         ; jumptable 0000000000405BF9 case 83
.text:000000000040839E                                         ; jumptable 0000000000405D72 case 83
.text:000000000040839E                                         ; jumptable 0000000000405EF2 case 83
.text:000000000040839E                                         ; jumptable 0000000000406072 case 83
.text:000000000040839E                                         ; jumptable 00000000004061F2 case 83
.text:000000000040839E                                         ; jumptable 0000000000406372 case 83
.text:000000000040839E                                         ; jumptable 00000000004064F2 case 83
.text:000000000040839E                                         ; jumptable 0000000000406672 case 83
.text:000000000040839E                                         ; jumptable 00000000004067F2 case 83
.text:000000000040839E                                         ; jumptable 0000000000406972 case 83
.text:000000000040839E                                         ; jumptable 0000000000406AF2 case 83
.text:000000000040839E                                         ; jumptable 0000000000406C72 case 83
.text:000000000040839E                                         ; jumptable 0000000000406DF2 case 83
.text:000000000040839E                                         ; jumptable 0000000000406F72 case 83
.text:000000000040839E                                         ; jumptable 00000000004070F2 case 83
.text:000000000040839E                                         ; jumptable 0000000000407272 case 83
.text:000000000040839E                                         ; jumptable 00000000004075BF case 83
.text:00000000004083A3                 movdqu  xmmword ptr [rdi+43h], xmm0
.text:00000000004083A8
.text:00000000004083A8 loc_4083A8:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004083A8                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004083A8                 lddqu   xmm0, xmmword ptr [rsi+33h] ; jumptable 00000000004059FA case 67
.text:00000000004083A8                                         ; jumptable 0000000000405BF9 case 67
.text:00000000004083A8                                         ; jumptable 0000000000405D72 case 67
.text:00000000004083A8                                         ; jumptable 0000000000405EF2 case 67
.text:00000000004083A8                                         ; jumptable 0000000000406072 case 67
.text:00000000004083A8                                         ; jumptable 00000000004061F2 case 67
.text:00000000004083A8                                         ; jumptable 0000000000406372 case 67
.text:00000000004083A8                                         ; jumptable 00000000004064F2 case 67
.text:00000000004083A8                                         ; jumptable 0000000000406672 case 67
.text:00000000004083A8                                         ; jumptable 00000000004067F2 case 67
.text:00000000004083A8                                         ; jumptable 0000000000406972 case 67
.text:00000000004083A8                                         ; jumptable 0000000000406AF2 case 67
.text:00000000004083A8                                         ; jumptable 0000000000406C72 case 67
.text:00000000004083A8                                         ; jumptable 0000000000406DF2 case 67
.text:00000000004083A8                                         ; jumptable 0000000000406F72 case 67
.text:00000000004083A8                                         ; jumptable 00000000004070F2 case 67
.text:00000000004083A8                                         ; jumptable 0000000000407272 case 67
.text:00000000004083A8                                         ; jumptable 00000000004075BF case 67
.text:00000000004083AD                 movdqu  xmmword ptr [rdi+33h], xmm0
.text:00000000004083B2
.text:00000000004083B2 loc_4083B2:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004083B2                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004083B2                 lddqu   xmm0, xmmword ptr [rsi+23h] ; jumptable 00000000004059FA case 51
.text:00000000004083B2                                         ; jumptable 0000000000405BF9 case 51
.text:00000000004083B2                                         ; jumptable 0000000000405D72 case 51
.text:00000000004083B2                                         ; jumptable 0000000000405EF2 case 51
.text:00000000004083B2                                         ; jumptable 0000000000406072 case 51
.text:00000000004083B2                                         ; jumptable 00000000004061F2 case 51
.text:00000000004083B2                                         ; jumptable 0000000000406372 case 51
.text:00000000004083B2                                         ; jumptable 00000000004064F2 case 51
.text:00000000004083B2                                         ; jumptable 0000000000406672 case 51
.text:00000000004083B2                                         ; jumptable 00000000004067F2 case 51
.text:00000000004083B2                                         ; jumptable 0000000000406972 case 51
.text:00000000004083B2                                         ; jumptable 0000000000406AF2 case 51
.text:00000000004083B2                                         ; jumptable 0000000000406C72 case 51
.text:00000000004083B2                                         ; jumptable 0000000000406DF2 case 51
.text:00000000004083B2                                         ; jumptable 0000000000406F72 case 51
.text:00000000004083B2                                         ; jumptable 00000000004070F2 case 51
.text:00000000004083B2                                         ; jumptable 0000000000407272 case 51
.text:00000000004083B2                                         ; jumptable 00000000004075BF case 51
.text:00000000004083B7                 movdqu  xmmword ptr [rdi+23h], xmm0
.text:00000000004083BC
.text:00000000004083BC loc_4083BC:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004083BC                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004083BC                 lddqu   xmm0, xmmword ptr [rsi+13h] ; jumptable 00000000004059FA case 35
.text:00000000004083BC                                         ; jumptable 0000000000405BF9 case 35
.text:00000000004083BC                                         ; jumptable 0000000000405D72 case 35
.text:00000000004083BC                                         ; jumptable 0000000000405EF2 case 35
.text:00000000004083BC                                         ; jumptable 0000000000406072 case 35
.text:00000000004083BC                                         ; jumptable 00000000004061F2 case 35
.text:00000000004083BC                                         ; jumptable 0000000000406372 case 35
.text:00000000004083BC                                         ; jumptable 00000000004064F2 case 35
.text:00000000004083BC                                         ; jumptable 0000000000406672 case 35
.text:00000000004083BC                                         ; jumptable 00000000004067F2 case 35
.text:00000000004083BC                                         ; jumptable 0000000000406972 case 35
.text:00000000004083BC                                         ; jumptable 0000000000406AF2 case 35
.text:00000000004083BC                                         ; jumptable 0000000000406C72 case 35
.text:00000000004083BC                                         ; jumptable 0000000000406DF2 case 35
.text:00000000004083BC                                         ; jumptable 0000000000406F72 case 35
.text:00000000004083BC                                         ; jumptable 00000000004070F2 case 35
.text:00000000004083BC                                         ; jumptable 0000000000407272 case 35
.text:00000000004083BC                                         ; jumptable 00000000004075BF case 35
.text:00000000004083C1                 movdqu  xmmword ptr [rdi+13h], xmm0
.text:00000000004083C6
.text:00000000004083C6 loc_4083C6:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004083C6                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004083C6                 lddqu   xmm0, xmmword ptr [rsi+3] ; jumptable 00000000004059FA case 19
.text:00000000004083C6                                         ; jumptable 0000000000405BF9 case 19
.text:00000000004083C6                                         ; jumptable 0000000000405D72 case 19
.text:00000000004083C6                                         ; jumptable 0000000000405EF2 case 19
.text:00000000004083C6                                         ; jumptable 0000000000406072 case 19
.text:00000000004083C6                                         ; jumptable 00000000004061F2 case 19
.text:00000000004083C6                                         ; jumptable 0000000000406372 case 19
.text:00000000004083C6                                         ; jumptable 00000000004064F2 case 19
.text:00000000004083C6                                         ; jumptable 0000000000406672 case 19
.text:00000000004083C6                                         ; jumptable 00000000004067F2 case 19
.text:00000000004083C6                                         ; jumptable 0000000000406972 case 19
.text:00000000004083C6                                         ; jumptable 0000000000406AF2 case 19
.text:00000000004083C6                                         ; jumptable 0000000000406C72 case 19
.text:00000000004083C6                                         ; jumptable 0000000000406DF2 case 19
.text:00000000004083C6                                         ; jumptable 0000000000406F72 case 19
.text:00000000004083C6                                         ; jumptable 00000000004070F2 case 19
.text:00000000004083C6                                         ; jumptable 0000000000407272 case 19
.text:00000000004083C6                                         ; jumptable 00000000004075BF case 19
.text:00000000004083CB                 lddqu   xmm1, xmmword ptr [rsi]
.text:00000000004083CF                 movdqu  xmmword ptr [rdi+3], xmm0
.text:00000000004083D4                 movdqu  xmmword ptr [rdi], xmm1
.text:00000000004083D8                 retn
.text:00000000004083D8 ; ---------------------------------------------------------------------------
.text:00000000004083D9                 align 20h
.text:00000000004083E0
.text:00000000004083E0 loc_4083E0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004083E0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004083E0                 mov     dx, [rsi+1]     ; jumptable 00000000004059FA case 3
.text:00000000004083E0                                         ; jumptable 0000000000405BF9 case 3
.text:00000000004083E0                                         ; jumptable 0000000000405D72 case 3
.text:00000000004083E0                                         ; jumptable 0000000000405EF2 case 3
.text:00000000004083E0                                         ; jumptable 0000000000406072 case 3
.text:00000000004083E0                                         ; jumptable 00000000004061F2 case 3
.text:00000000004083E0                                         ; jumptable 0000000000406372 case 3
.text:00000000004083E0                                         ; jumptable 00000000004064F2 case 3
.text:00000000004083E0                                         ; jumptable 0000000000406672 case 3
.text:00000000004083E0                                         ; jumptable 00000000004067F2 case 3
.text:00000000004083E0                                         ; jumptable 0000000000406972 case 3
.text:00000000004083E0                                         ; jumptable 0000000000406AF2 case 3
.text:00000000004083E0                                         ; jumptable 0000000000406C72 case 3
.text:00000000004083E0                                         ; jumptable 0000000000406DF2 case 3
.text:00000000004083E0                                         ; jumptable 0000000000406F72 case 3
.text:00000000004083E0                                         ; jumptable 00000000004070F2 case 3
.text:00000000004083E0                                         ; jumptable 0000000000407272 case 3
.text:00000000004083E0                                         ; jumptable 00000000004075BF case 3
.text:00000000004083E4                 mov     cx, [rsi]
.text:00000000004083E7                 mov     [rdi+1], dx
.text:00000000004083EB                 mov     [rdi], cx
.text:00000000004083EE                 retn
.text:00000000004083EE ; ---------------------------------------------------------------------------
.text:00000000004083EF                 align 10h
.text:00000000004083F0
.text:00000000004083F0 loc_4083F0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004083F0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004083F0                 lddqu   xmm0, xmmword ptr [rsi+72h] ; jumptable 00000000004059FA case 130
.text:00000000004083F0                                         ; jumptable 0000000000405BF9 case 130
.text:00000000004083F0                                         ; jumptable 0000000000405D72 case 130
.text:00000000004083F0                                         ; jumptable 0000000000405EF2 case 130
.text:00000000004083F0                                         ; jumptable 0000000000406072 case 130
.text:00000000004083F0                                         ; jumptable 00000000004061F2 case 130
.text:00000000004083F0                                         ; jumptable 0000000000406372 case 130
.text:00000000004083F0                                         ; jumptable 00000000004064F2 case 130
.text:00000000004083F0                                         ; jumptable 0000000000406672 case 130
.text:00000000004083F0                                         ; jumptable 00000000004067F2 case 130
.text:00000000004083F0                                         ; jumptable 0000000000406972 case 130
.text:00000000004083F0                                         ; jumptable 0000000000406AF2 case 130
.text:00000000004083F0                                         ; jumptable 0000000000406C72 case 130
.text:00000000004083F0                                         ; jumptable 0000000000406DF2 case 130
.text:00000000004083F0                                         ; jumptable 0000000000406F72 case 130
.text:00000000004083F0                                         ; jumptable 00000000004070F2 case 130
.text:00000000004083F0                                         ; jumptable 0000000000407272 case 130
.text:00000000004083F0                                         ; jumptable 00000000004075BF case 130
.text:00000000004083F5                 movdqu  xmmword ptr [rdi+72h], xmm0
.text:00000000004083FA
.text:00000000004083FA loc_4083FA:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004083FA                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004083FA                 lddqu   xmm0, xmmword ptr [rsi+62h] ; jumptable 00000000004059FA case 114
.text:00000000004083FA                                         ; jumptable 0000000000405BF9 case 114
.text:00000000004083FA                                         ; jumptable 0000000000405D72 case 114
.text:00000000004083FA                                         ; jumptable 0000000000405EF2 case 114
.text:00000000004083FA                                         ; jumptable 0000000000406072 case 114
.text:00000000004083FA                                         ; jumptable 00000000004061F2 case 114
.text:00000000004083FA                                         ; jumptable 0000000000406372 case 114
.text:00000000004083FA                                         ; jumptable 00000000004064F2 case 114
.text:00000000004083FA                                         ; jumptable 0000000000406672 case 114
.text:00000000004083FA                                         ; jumptable 00000000004067F2 case 114
.text:00000000004083FA                                         ; jumptable 0000000000406972 case 114
.text:00000000004083FA                                         ; jumptable 0000000000406AF2 case 114
.text:00000000004083FA                                         ; jumptable 0000000000406C72 case 114
.text:00000000004083FA                                         ; jumptable 0000000000406DF2 case 114
.text:00000000004083FA                                         ; jumptable 0000000000406F72 case 114
.text:00000000004083FA                                         ; jumptable 00000000004070F2 case 114
.text:00000000004083FA                                         ; jumptable 0000000000407272 case 114
.text:00000000004083FA                                         ; jumptable 00000000004075BF case 114
.text:00000000004083FF                 movdqu  xmmword ptr [rdi+62h], xmm0
.text:0000000000408404
.text:0000000000408404 loc_408404:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408404                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408404                 lddqu   xmm0, xmmword ptr [rsi+52h] ; jumptable 00000000004059FA case 98
.text:0000000000408404                                         ; jumptable 0000000000405BF9 case 98
.text:0000000000408404                                         ; jumptable 0000000000405D72 case 98
.text:0000000000408404                                         ; jumptable 0000000000405EF2 case 98
.text:0000000000408404                                         ; jumptable 0000000000406072 case 98
.text:0000000000408404                                         ; jumptable 00000000004061F2 case 98
.text:0000000000408404                                         ; jumptable 0000000000406372 case 98
.text:0000000000408404                                         ; jumptable 00000000004064F2 case 98
.text:0000000000408404                                         ; jumptable 0000000000406672 case 98
.text:0000000000408404                                         ; jumptable 00000000004067F2 case 98
.text:0000000000408404                                         ; jumptable 0000000000406972 case 98
.text:0000000000408404                                         ; jumptable 0000000000406AF2 case 98
.text:0000000000408404                                         ; jumptable 0000000000406C72 case 98
.text:0000000000408404                                         ; jumptable 0000000000406DF2 case 98
.text:0000000000408404                                         ; jumptable 0000000000406F72 case 98
.text:0000000000408404                                         ; jumptable 00000000004070F2 case 98
.text:0000000000408404                                         ; jumptable 0000000000407272 case 98
.text:0000000000408404                                         ; jumptable 00000000004075BF case 98
.text:0000000000408409                 movdqu  xmmword ptr [rdi+52h], xmm0
.text:000000000040840E
.text:000000000040840E loc_40840E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040840E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040840E                 lddqu   xmm0, xmmword ptr [rsi+42h] ; jumptable 00000000004059FA case 82
.text:000000000040840E                                         ; jumptable 0000000000405BF9 case 82
.text:000000000040840E                                         ; jumptable 0000000000405D72 case 82
.text:000000000040840E                                         ; jumptable 0000000000405EF2 case 82
.text:000000000040840E                                         ; jumptable 0000000000406072 case 82
.text:000000000040840E                                         ; jumptable 00000000004061F2 case 82
.text:000000000040840E                                         ; jumptable 0000000000406372 case 82
.text:000000000040840E                                         ; jumptable 00000000004064F2 case 82
.text:000000000040840E                                         ; jumptable 0000000000406672 case 82
.text:000000000040840E                                         ; jumptable 00000000004067F2 case 82
.text:000000000040840E                                         ; jumptable 0000000000406972 case 82
.text:000000000040840E                                         ; jumptable 0000000000406AF2 case 82
.text:000000000040840E                                         ; jumptable 0000000000406C72 case 82
.text:000000000040840E                                         ; jumptable 0000000000406DF2 case 82
.text:000000000040840E                                         ; jumptable 0000000000406F72 case 82
.text:000000000040840E                                         ; jumptable 00000000004070F2 case 82
.text:000000000040840E                                         ; jumptable 0000000000407272 case 82
.text:000000000040840E                                         ; jumptable 00000000004075BF case 82
.text:0000000000408413                 movdqu  xmmword ptr [rdi+42h], xmm0
.text:0000000000408418
.text:0000000000408418 loc_408418:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408418                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408418                 lddqu   xmm0, xmmword ptr [rsi+32h] ; jumptable 00000000004059FA case 66
.text:0000000000408418                                         ; jumptable 0000000000405BF9 case 66
.text:0000000000408418                                         ; jumptable 0000000000405D72 case 66
.text:0000000000408418                                         ; jumptable 0000000000405EF2 case 66
.text:0000000000408418                                         ; jumptable 0000000000406072 case 66
.text:0000000000408418                                         ; jumptable 00000000004061F2 case 66
.text:0000000000408418                                         ; jumptable 0000000000406372 case 66
.text:0000000000408418                                         ; jumptable 00000000004064F2 case 66
.text:0000000000408418                                         ; jumptable 0000000000406672 case 66
.text:0000000000408418                                         ; jumptable 00000000004067F2 case 66
.text:0000000000408418                                         ; jumptable 0000000000406972 case 66
.text:0000000000408418                                         ; jumptable 0000000000406AF2 case 66
.text:0000000000408418                                         ; jumptable 0000000000406C72 case 66
.text:0000000000408418                                         ; jumptable 0000000000406DF2 case 66
.text:0000000000408418                                         ; jumptable 0000000000406F72 case 66
.text:0000000000408418                                         ; jumptable 00000000004070F2 case 66
.text:0000000000408418                                         ; jumptable 0000000000407272 case 66
.text:0000000000408418                                         ; jumptable 00000000004075BF case 66
.text:000000000040841D                 movdqu  xmmword ptr [rdi+32h], xmm0
.text:0000000000408422
.text:0000000000408422 loc_408422:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408422                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408422                 lddqu   xmm0, xmmword ptr [rsi+22h] ; jumptable 00000000004059FA case 50
.text:0000000000408422                                         ; jumptable 0000000000405BF9 case 50
.text:0000000000408422                                         ; jumptable 0000000000405D72 case 50
.text:0000000000408422                                         ; jumptable 0000000000405EF2 case 50
.text:0000000000408422                                         ; jumptable 0000000000406072 case 50
.text:0000000000408422                                         ; jumptable 00000000004061F2 case 50
.text:0000000000408422                                         ; jumptable 0000000000406372 case 50
.text:0000000000408422                                         ; jumptable 00000000004064F2 case 50
.text:0000000000408422                                         ; jumptable 0000000000406672 case 50
.text:0000000000408422                                         ; jumptable 00000000004067F2 case 50
.text:0000000000408422                                         ; jumptable 0000000000406972 case 50
.text:0000000000408422                                         ; jumptable 0000000000406AF2 case 50
.text:0000000000408422                                         ; jumptable 0000000000406C72 case 50
.text:0000000000408422                                         ; jumptable 0000000000406DF2 case 50
.text:0000000000408422                                         ; jumptable 0000000000406F72 case 50
.text:0000000000408422                                         ; jumptable 00000000004070F2 case 50
.text:0000000000408422                                         ; jumptable 0000000000407272 case 50
.text:0000000000408422                                         ; jumptable 00000000004075BF case 50
.text:0000000000408427                 movdqu  xmmword ptr [rdi+22h], xmm0
.text:000000000040842C
.text:000000000040842C loc_40842C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040842C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040842C                 lddqu   xmm0, xmmword ptr [rsi+12h] ; jumptable 00000000004059FA case 34
.text:000000000040842C                                         ; jumptable 0000000000405BF9 case 34
.text:000000000040842C                                         ; jumptable 0000000000405D72 case 34
.text:000000000040842C                                         ; jumptable 0000000000405EF2 case 34
.text:000000000040842C                                         ; jumptable 0000000000406072 case 34
.text:000000000040842C                                         ; jumptable 00000000004061F2 case 34
.text:000000000040842C                                         ; jumptable 0000000000406372 case 34
.text:000000000040842C                                         ; jumptable 00000000004064F2 case 34
.text:000000000040842C                                         ; jumptable 0000000000406672 case 34
.text:000000000040842C                                         ; jumptable 00000000004067F2 case 34
.text:000000000040842C                                         ; jumptable 0000000000406972 case 34
.text:000000000040842C                                         ; jumptable 0000000000406AF2 case 34
.text:000000000040842C                                         ; jumptable 0000000000406C72 case 34
.text:000000000040842C                                         ; jumptable 0000000000406DF2 case 34
.text:000000000040842C                                         ; jumptable 0000000000406F72 case 34
.text:000000000040842C                                         ; jumptable 00000000004070F2 case 34
.text:000000000040842C                                         ; jumptable 0000000000407272 case 34
.text:000000000040842C                                         ; jumptable 00000000004075BF case 34
.text:0000000000408431                 movdqu  xmmword ptr [rdi+12h], xmm0
.text:0000000000408436
.text:0000000000408436 loc_408436:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408436                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408436                 lddqu   xmm0, xmmword ptr [rsi+2] ; jumptable 00000000004059FA case 18
.text:0000000000408436                                         ; jumptable 0000000000405BF9 case 18
.text:0000000000408436                                         ; jumptable 0000000000405D72 case 18
.text:0000000000408436                                         ; jumptable 0000000000405EF2 case 18
.text:0000000000408436                                         ; jumptable 0000000000406072 case 18
.text:0000000000408436                                         ; jumptable 00000000004061F2 case 18
.text:0000000000408436                                         ; jumptable 0000000000406372 case 18
.text:0000000000408436                                         ; jumptable 00000000004064F2 case 18
.text:0000000000408436                                         ; jumptable 0000000000406672 case 18
.text:0000000000408436                                         ; jumptable 00000000004067F2 case 18
.text:0000000000408436                                         ; jumptable 0000000000406972 case 18
.text:0000000000408436                                         ; jumptable 0000000000406AF2 case 18
.text:0000000000408436                                         ; jumptable 0000000000406C72 case 18
.text:0000000000408436                                         ; jumptable 0000000000406DF2 case 18
.text:0000000000408436                                         ; jumptable 0000000000406F72 case 18
.text:0000000000408436                                         ; jumptable 00000000004070F2 case 18
.text:0000000000408436                                         ; jumptable 0000000000407272 case 18
.text:0000000000408436                                         ; jumptable 00000000004075BF case 18
.text:000000000040843B                 lddqu   xmm1, xmmword ptr [rsi]
.text:000000000040843F                 movdqu  xmmword ptr [rdi+2], xmm0
.text:0000000000408444                 movdqu  xmmword ptr [rdi], xmm1
.text:0000000000408448                 retn
.text:0000000000408448 ; ---------------------------------------------------------------------------
.text:0000000000408449                 align 10h
.text:0000000000408450
.text:0000000000408450 loc_408450:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408450                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408450                 movzx   edx, word ptr [rsi] ; jumptable 00000000004059FA case 2
.text:0000000000408450                                         ; jumptable 0000000000405BF9 case 2
.text:0000000000408450                                         ; jumptable 0000000000405D72 case 2
.text:0000000000408450                                         ; jumptable 0000000000405EF2 case 2
.text:0000000000408450                                         ; jumptable 0000000000406072 case 2
.text:0000000000408450                                         ; jumptable 00000000004061F2 case 2
.text:0000000000408450                                         ; jumptable 0000000000406372 case 2
.text:0000000000408450                                         ; jumptable 00000000004064F2 case 2
.text:0000000000408450                                         ; jumptable 0000000000406672 case 2
.text:0000000000408450                                         ; jumptable 00000000004067F2 case 2
.text:0000000000408450                                         ; jumptable 0000000000406972 case 2
.text:0000000000408450                                         ; jumptable 0000000000406AF2 case 2
.text:0000000000408450                                         ; jumptable 0000000000406C72 case 2
.text:0000000000408450                                         ; jumptable 0000000000406DF2 case 2
.text:0000000000408450                                         ; jumptable 0000000000406F72 case 2
.text:0000000000408450                                         ; jumptable 00000000004070F2 case 2
.text:0000000000408450                                         ; jumptable 0000000000407272 case 2
.text:0000000000408450                                         ; jumptable 00000000004075BF case 2
.text:0000000000408453                 mov     [rdi], dx
.text:0000000000408456                 retn
.text:0000000000408456 ; ---------------------------------------------------------------------------
.text:0000000000408457                 align 20h
.text:0000000000408460
.text:0000000000408460 loc_408460:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408460                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408460                 lddqu   xmm0, xmmword ptr [rsi+71h] ; jumptable 00000000004059FA case 129
.text:0000000000408460                                         ; jumptable 0000000000405BF9 case 129
.text:0000000000408460                                         ; jumptable 0000000000405D72 case 129
.text:0000000000408460                                         ; jumptable 0000000000405EF2 case 129
.text:0000000000408460                                         ; jumptable 0000000000406072 case 129
.text:0000000000408460                                         ; jumptable 00000000004061F2 case 129
.text:0000000000408460                                         ; jumptable 0000000000406372 case 129
.text:0000000000408460                                         ; jumptable 00000000004064F2 case 129
.text:0000000000408460                                         ; jumptable 0000000000406672 case 129
.text:0000000000408460                                         ; jumptable 00000000004067F2 case 129
.text:0000000000408460                                         ; jumptable 0000000000406972 case 129
.text:0000000000408460                                         ; jumptable 0000000000406AF2 case 129
.text:0000000000408460                                         ; jumptable 0000000000406C72 case 129
.text:0000000000408460                                         ; jumptable 0000000000406DF2 case 129
.text:0000000000408460                                         ; jumptable 0000000000406F72 case 129
.text:0000000000408460                                         ; jumptable 00000000004070F2 case 129
.text:0000000000408460                                         ; jumptable 0000000000407272 case 129
.text:0000000000408460                                         ; jumptable 00000000004075BF case 129
.text:0000000000408465                 movdqu  xmmword ptr [rdi+71h], xmm0
.text:000000000040846A
.text:000000000040846A loc_40846A:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040846A                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040846A                 lddqu   xmm0, xmmword ptr [rsi+61h] ; jumptable 00000000004059FA case 113
.text:000000000040846A                                         ; jumptable 0000000000405BF9 case 113
.text:000000000040846A                                         ; jumptable 0000000000405D72 case 113
.text:000000000040846A                                         ; jumptable 0000000000405EF2 case 113
.text:000000000040846A                                         ; jumptable 0000000000406072 case 113
.text:000000000040846A                                         ; jumptable 00000000004061F2 case 113
.text:000000000040846A                                         ; jumptable 0000000000406372 case 113
.text:000000000040846A                                         ; jumptable 00000000004064F2 case 113
.text:000000000040846A                                         ; jumptable 0000000000406672 case 113
.text:000000000040846A                                         ; jumptable 00000000004067F2 case 113
.text:000000000040846A                                         ; jumptable 0000000000406972 case 113
.text:000000000040846A                                         ; jumptable 0000000000406AF2 case 113
.text:000000000040846A                                         ; jumptable 0000000000406C72 case 113
.text:000000000040846A                                         ; jumptable 0000000000406DF2 case 113
.text:000000000040846A                                         ; jumptable 0000000000406F72 case 113
.text:000000000040846A                                         ; jumptable 00000000004070F2 case 113
.text:000000000040846A                                         ; jumptable 0000000000407272 case 113
.text:000000000040846A                                         ; jumptable 00000000004075BF case 113
.text:000000000040846F                 movdqu  xmmword ptr [rdi+61h], xmm0
.text:0000000000408474
.text:0000000000408474 loc_408474:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408474                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408474                 lddqu   xmm0, xmmword ptr [rsi+51h] ; jumptable 00000000004059FA case 97
.text:0000000000408474                                         ; jumptable 0000000000405BF9 case 97
.text:0000000000408474                                         ; jumptable 0000000000405D72 case 97
.text:0000000000408474                                         ; jumptable 0000000000405EF2 case 97
.text:0000000000408474                                         ; jumptable 0000000000406072 case 97
.text:0000000000408474                                         ; jumptable 00000000004061F2 case 97
.text:0000000000408474                                         ; jumptable 0000000000406372 case 97
.text:0000000000408474                                         ; jumptable 00000000004064F2 case 97
.text:0000000000408474                                         ; jumptable 0000000000406672 case 97
.text:0000000000408474                                         ; jumptable 00000000004067F2 case 97
.text:0000000000408474                                         ; jumptable 0000000000406972 case 97
.text:0000000000408474                                         ; jumptable 0000000000406AF2 case 97
.text:0000000000408474                                         ; jumptable 0000000000406C72 case 97
.text:0000000000408474                                         ; jumptable 0000000000406DF2 case 97
.text:0000000000408474                                         ; jumptable 0000000000406F72 case 97
.text:0000000000408474                                         ; jumptable 00000000004070F2 case 97
.text:0000000000408474                                         ; jumptable 0000000000407272 case 97
.text:0000000000408474                                         ; jumptable 00000000004075BF case 97
.text:0000000000408479                 movdqu  xmmword ptr [rdi+51h], xmm0
.text:000000000040847E
.text:000000000040847E loc_40847E:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040847E                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040847E                 lddqu   xmm0, xmmword ptr [rsi+41h] ; jumptable 00000000004059FA case 81
.text:000000000040847E                                         ; jumptable 0000000000405BF9 case 81
.text:000000000040847E                                         ; jumptable 0000000000405D72 case 81
.text:000000000040847E                                         ; jumptable 0000000000405EF2 case 81
.text:000000000040847E                                         ; jumptable 0000000000406072 case 81
.text:000000000040847E                                         ; jumptable 00000000004061F2 case 81
.text:000000000040847E                                         ; jumptable 0000000000406372 case 81
.text:000000000040847E                                         ; jumptable 00000000004064F2 case 81
.text:000000000040847E                                         ; jumptable 0000000000406672 case 81
.text:000000000040847E                                         ; jumptable 00000000004067F2 case 81
.text:000000000040847E                                         ; jumptable 0000000000406972 case 81
.text:000000000040847E                                         ; jumptable 0000000000406AF2 case 81
.text:000000000040847E                                         ; jumptable 0000000000406C72 case 81
.text:000000000040847E                                         ; jumptable 0000000000406DF2 case 81
.text:000000000040847E                                         ; jumptable 0000000000406F72 case 81
.text:000000000040847E                                         ; jumptable 00000000004070F2 case 81
.text:000000000040847E                                         ; jumptable 0000000000407272 case 81
.text:000000000040847E                                         ; jumptable 00000000004075BF case 81
.text:0000000000408483                 movdqu  xmmword ptr [rdi+41h], xmm0
.text:0000000000408488
.text:0000000000408488 loc_408488:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408488                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408488                 lddqu   xmm0, xmmword ptr [rsi+31h] ; jumptable 00000000004059FA case 65
.text:0000000000408488                                         ; jumptable 0000000000405BF9 case 65
.text:0000000000408488                                         ; jumptable 0000000000405D72 case 65
.text:0000000000408488                                         ; jumptable 0000000000405EF2 case 65
.text:0000000000408488                                         ; jumptable 0000000000406072 case 65
.text:0000000000408488                                         ; jumptable 00000000004061F2 case 65
.text:0000000000408488                                         ; jumptable 0000000000406372 case 65
.text:0000000000408488                                         ; jumptable 00000000004064F2 case 65
.text:0000000000408488                                         ; jumptable 0000000000406672 case 65
.text:0000000000408488                                         ; jumptable 00000000004067F2 case 65
.text:0000000000408488                                         ; jumptable 0000000000406972 case 65
.text:0000000000408488                                         ; jumptable 0000000000406AF2 case 65
.text:0000000000408488                                         ; jumptable 0000000000406C72 case 65
.text:0000000000408488                                         ; jumptable 0000000000406DF2 case 65
.text:0000000000408488                                         ; jumptable 0000000000406F72 case 65
.text:0000000000408488                                         ; jumptable 00000000004070F2 case 65
.text:0000000000408488                                         ; jumptable 0000000000407272 case 65
.text:0000000000408488                                         ; jumptable 00000000004075BF case 65
.text:000000000040848D                 movdqu  xmmword ptr [rdi+31h], xmm0
.text:0000000000408492
.text:0000000000408492 loc_408492:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:0000000000408492                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:0000000000408492                 lddqu   xmm0, xmmword ptr [rsi+21h] ; jumptable 00000000004059FA case 49
.text:0000000000408492                                         ; jumptable 0000000000405BF9 case 49
.text:0000000000408492                                         ; jumptable 0000000000405D72 case 49
.text:0000000000408492                                         ; jumptable 0000000000405EF2 case 49
.text:0000000000408492                                         ; jumptable 0000000000406072 case 49
.text:0000000000408492                                         ; jumptable 00000000004061F2 case 49
.text:0000000000408492                                         ; jumptable 0000000000406372 case 49
.text:0000000000408492                                         ; jumptable 00000000004064F2 case 49
.text:0000000000408492                                         ; jumptable 0000000000406672 case 49
.text:0000000000408492                                         ; jumptable 00000000004067F2 case 49
.text:0000000000408492                                         ; jumptable 0000000000406972 case 49
.text:0000000000408492                                         ; jumptable 0000000000406AF2 case 49
.text:0000000000408492                                         ; jumptable 0000000000406C72 case 49
.text:0000000000408492                                         ; jumptable 0000000000406DF2 case 49
.text:0000000000408492                                         ; jumptable 0000000000406F72 case 49
.text:0000000000408492                                         ; jumptable 00000000004070F2 case 49
.text:0000000000408492                                         ; jumptable 0000000000407272 case 49
.text:0000000000408492                                         ; jumptable 00000000004075BF case 49
.text:0000000000408497                 movdqu  xmmword ptr [rdi+21h], xmm0
.text:000000000040849C
.text:000000000040849C loc_40849C:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:000000000040849C                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:000000000040849C                 lddqu   xmm0, xmmword ptr [rsi+11h] ; jumptable 00000000004059FA case 33
.text:000000000040849C                                         ; jumptable 0000000000405BF9 case 33
.text:000000000040849C                                         ; jumptable 0000000000405D72 case 33
.text:000000000040849C                                         ; jumptable 0000000000405EF2 case 33
.text:000000000040849C                                         ; jumptable 0000000000406072 case 33
.text:000000000040849C                                         ; jumptable 00000000004061F2 case 33
.text:000000000040849C                                         ; jumptable 0000000000406372 case 33
.text:000000000040849C                                         ; jumptable 00000000004064F2 case 33
.text:000000000040849C                                         ; jumptable 0000000000406672 case 33
.text:000000000040849C                                         ; jumptable 00000000004067F2 case 33
.text:000000000040849C                                         ; jumptable 0000000000406972 case 33
.text:000000000040849C                                         ; jumptable 0000000000406AF2 case 33
.text:000000000040849C                                         ; jumptable 0000000000406C72 case 33
.text:000000000040849C                                         ; jumptable 0000000000406DF2 case 33
.text:000000000040849C                                         ; jumptable 0000000000406F72 case 33
.text:000000000040849C                                         ; jumptable 00000000004070F2 case 33
.text:000000000040849C                                         ; jumptable 0000000000407272 case 33
.text:000000000040849C                                         ; jumptable 00000000004075BF case 33
.text:00000000004084A1                 movdqu  xmmword ptr [rdi+11h], xmm0
.text:00000000004084A6
.text:00000000004084A6 loc_4084A6:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004084A6                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004084A6                 lddqu   xmm0, xmmword ptr [rsi+1] ; jumptable 00000000004059FA case 17
.text:00000000004084A6                                         ; jumptable 0000000000405BF9 case 17
.text:00000000004084A6                                         ; jumptable 0000000000405D72 case 17
.text:00000000004084A6                                         ; jumptable 0000000000405EF2 case 17
.text:00000000004084A6                                         ; jumptable 0000000000406072 case 17
.text:00000000004084A6                                         ; jumptable 00000000004061F2 case 17
.text:00000000004084A6                                         ; jumptable 0000000000406372 case 17
.text:00000000004084A6                                         ; jumptable 00000000004064F2 case 17
.text:00000000004084A6                                         ; jumptable 0000000000406672 case 17
.text:00000000004084A6                                         ; jumptable 00000000004067F2 case 17
.text:00000000004084A6                                         ; jumptable 0000000000406972 case 17
.text:00000000004084A6                                         ; jumptable 0000000000406AF2 case 17
.text:00000000004084A6                                         ; jumptable 0000000000406C72 case 17
.text:00000000004084A6                                         ; jumptable 0000000000406DF2 case 17
.text:00000000004084A6                                         ; jumptable 0000000000406F72 case 17
.text:00000000004084A6                                         ; jumptable 00000000004070F2 case 17
.text:00000000004084A6                                         ; jumptable 0000000000407272 case 17
.text:00000000004084A6                                         ; jumptable 00000000004075BF case 17
.text:00000000004084AB                 lddqu   xmm1, xmmword ptr [rsi]
.text:00000000004084AF                 movdqu  xmmword ptr [rdi+1], xmm0
.text:00000000004084B4                 movdqu  xmmword ptr [rdi], xmm1
.text:00000000004084B8                 retn
.text:00000000004084B8 ; ---------------------------------------------------------------------------
.text:00000000004084B9                 align 20h
.text:00000000004084C0
.text:00000000004084C0 loc_4084C0:                             ; CODE XREF: __intel_ssse3_rep_memmove+2A↑j
.text:00000000004084C0                                         ; __intel_ssse3_rep_memmove+229↑j ...
.text:00000000004084C0                 movzx   edx, byte ptr [rsi] ; jumptable 00000000004059FA case 1
.text:00000000004084C0                                         ; jumptable 0000000000405BF9 case 1
.text:00000000004084C0                                         ; jumptable 0000000000405D72 case 1
.text:00000000004084C0                                         ; jumptable 0000000000405EF2 case 1
.text:00000000004084C0                                         ; jumptable 0000000000406072 case 1
.text:00000000004084C0                                         ; jumptable 00000000004061F2 case 1
.text:00000000004084C0                                         ; jumptable 0000000000406372 case 1
.text:00000000004084C0                                         ; jumptable 00000000004064F2 case 1
.text:00000000004084C0                                         ; jumptable 0000000000406672 case 1
.text:00000000004084C0                                         ; jumptable 00000000004067F2 case 1
.text:00000000004084C0                                         ; jumptable 0000000000406972 case 1
.text:00000000004084C0                                         ; jumptable 0000000000406AF2 case 1
.text:00000000004084C0                                         ; jumptable 0000000000406C72 case 1
.text:00000000004084C0                                         ; jumptable 0000000000406DF2 case 1
.text:00000000004084C0                                         ; jumptable 0000000000406F72 case 1
.text:00000000004084C0                                         ; jumptable 00000000004070F2 case 1
.text:00000000004084C0                                         ; jumptable 0000000000407272 case 1
.text:00000000004084C0                                         ; jumptable 00000000004075BF case 1
.text:00000000004084C3                 mov     [rdi], dl
.text:00000000004084C5                 retn
.text:00000000004084C5 ; } // starts at 4059D0
.text:00000000004084C5 __intel_ssse3_rep_memmove endp
.text:00000000004084C5
.text:00000000004084C5 ; ---------------------------------------------------------------------------
.text:00000000004084C6                 align 10h
.text:00000000004084D0
.text:00000000004084D0 ; =============== S U B R O U T I N E =======================================
.text:00000000004084D0
.text:00000000004084D0
.text:00000000004084D0 ; __int64 __usercall _libirc_get_msg@<rax>(int number@<edi>, char)
.text:00000000004084D0                 public __libirc_get_msg
.text:00000000004084D0 __libirc_get_msg proc near              ; CODE XREF: __intel_new_feature_proc_init+6B↑p
.text:00000000004084D0
.text:00000000004084D0 dest            = byte ptr -168h
.text:00000000004084D0 var_E8          = byte ptr -0E8h
.text:00000000004084D0 var_D8          = qword ptr -0D8h
.text:00000000004084D0 var_D0          = qword ptr -0D0h
.text:00000000004084D0 var_C8          = qword ptr -0C8h
.text:00000000004084D0 var_C0          = qword ptr -0C0h
.text:00000000004084D0 var_39          = byte ptr -39h
.text:00000000004084D0 arg             = dword ptr -38h
.text:00000000004084D0 var_34          = dword ptr -34h
.text:00000000004084D0 var_30          = qword ptr -30h
.text:00000000004084D0 var_28          = qword ptr -28h
.text:00000000004084D0 arg_0           = byte ptr  8
.text:00000000004084D0
.text:00000000004084D0 ; __unwind {
.text:00000000004084D0                 push    r12
.text:00000000004084D2                 push    r13
.text:00000000004084D4                 push    r14
.text:00000000004084D6                 sub     rsp, 150h
.text:00000000004084DD                 mov     [rsp+168h+var_D8], rdx
.text:00000000004084E5                 mov     [rsp+168h+var_D0], rcx
.text:00000000004084ED                 mov     [rsp+168h+var_C8], r8
.text:00000000004084F5                 mov     [rsp+168h+var_C0], r9
.text:00000000004084FD                 movzx   r11d, al
.text:0000000000408501                 lea     rax, ds:0[r11*4]
.text:0000000000408509                 lea     r11, loc_40853E
.text:0000000000408510                 sub     r11, rax
.text:0000000000408513                 lea     rax, [rsp+168h+var_39]
.text:000000000040851B                 jmp     r11
.text:000000000040851E                 movaps  xmmword ptr [rax-0Fh], xmm7
.text:0000000000408522                 movaps  xmmword ptr [rax-1Fh], xmm6
.text:0000000000408526                 movaps  xmmword ptr [rax-2Fh], xmm5
.text:000000000040852A                 movaps  xmmword ptr [rax-3Fh], xmm4
.text:000000000040852E                 movaps  xmmword ptr [rax-4Fh], xmm3
.text:0000000000408532                 movaps  xmmword ptr [rax-5Fh], xmm2
.text:0000000000408536                 movaps  xmmword ptr [rax-6Fh], xmm1
.text:000000000040853A                 movaps  xmmword ptr [rax-7Fh], xmm0
.text:000000000040853E
.text:000000000040853E loc_40853E:                             ; DATA XREF: __libirc_get_msg+39↑o
.text:000000000040853E                 mov     r13d, edi
.text:0000000000408541                 mov     r14d, esi
.text:0000000000408544                 test    r13d, r13d
.text:0000000000408547                 jz      loc_4085D7
.text:000000000040854D                 cmp     cs:first_msg, 0
.text:0000000000408554                 jz      short loc_4085A4
.text:0000000000408556                 lea     rdi, cat_name   ; "irc_msg.cat"
.text:000000000040855D                 xor     esi, esi        ; flag
.text:000000000040855F                 mov     cs:first_msg, 0
.text:0000000000408569                 call    _catopen
.text:000000000040856E                 mov     cs:message_catalog, rax
.text:0000000000408575                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000408579                 jz      loc_408656
.text:000000000040857F                 mov     rdi, cs:message_catalog ; catalog
.text:0000000000408586
.text:0000000000408586 loc_408586:                             ; CODE XREF: __libirc_get_msg+212↓j
.text:0000000000408586                 movsxd  rax, r13d
.text:0000000000408589                 lea     rcx, off_60C048 ; "\n"
.text:0000000000408590                 shl     rax, 4
.text:0000000000408594                 mov     cs:use_internal_msg, 0
.text:000000000040859E                 mov     rcx, [rax+rcx]  ; string
.text:00000000004085A2                 jmp     short loc_4085C5
.text:00000000004085A4 ; ---------------------------------------------------------------------------
.text:00000000004085A4
.text:00000000004085A4 loc_4085A4:                             ; CODE XREF: __libirc_get_msg+84↑j
.text:00000000004085A4                                         ; __libirc_get_msg+218↓j
.text:00000000004085A4                 mov     edi, cs:use_internal_msg
.text:00000000004085AA                 movsxd  rax, r13d
.text:00000000004085AD                 lea     rcx, off_60C048 ; "\n"
.text:00000000004085B4                 shl     rax, 4
.text:00000000004085B8                 test    edi, edi
.text:00000000004085BA                 mov     rcx, [rax+rcx]
.text:00000000004085BE                 jnz     short loc_4085DE
.text:00000000004085C0                 jmp     loc_4086ED
.text:00000000004085C5 ; ---------------------------------------------------------------------------
.text:00000000004085C5
.text:00000000004085C5 loc_4085C5:                             ; CODE XREF: __libirc_get_msg+D2↑j
.text:00000000004085C5                                         ; __libirc_get_msg+224↓j
.text:00000000004085C5                 mov     esi, 1          ; set
.text:00000000004085CA                 mov     edx, r13d       ; number
.text:00000000004085CD                 call    _catgets
.text:00000000004085D2                 mov     rcx, rax
.text:00000000004085D5                 jmp     short loc_4085DE
.text:00000000004085D7 ; ---------------------------------------------------------------------------
.text:00000000004085D7
.text:00000000004085D7 loc_4085D7:                             ; CODE XREF: __libirc_get_msg+77↑j
.text:00000000004085D7                 lea     rcx, aCannotAllocate+34h ; ""
.text:00000000004085DE
.text:00000000004085DE loc_4085DE:                             ; CODE XREF: __libirc_get_msg+EE↑j
.text:00000000004085DE                                         ; __libirc_get_msg+105↑j
.text:00000000004085DE                 test    r14d, r14d
.text:00000000004085E1                 jle     short loc_408645
.text:00000000004085E3                 mov     [rsp+168h+arg], 10h
.text:00000000004085EE                 lea     rdx, [rsp+168h+arg_0]
.text:00000000004085F6                 mov     [rsp+168h+var_34], 30h ; '0'
.text:0000000000408601                 lea     rdi, [rsp+168h+var_E8]
.text:0000000000408609                 mov     [rsp+168h+var_30], rdx
.text:0000000000408611                 mov     [rsp+168h+var_28], rdi
.text:0000000000408619                 lea     rdi, get_msg_buf ; s
.text:0000000000408620                 mov     rsi, rcx        ; format
.text:0000000000408623                 lea     rdx, [rsp+168h+arg] ; arg
.text:000000000040862B                 call    _vsprintf
.text:0000000000408630                 lea     rax, get_msg_buf
.text:0000000000408637                 add     rsp, 150h
.text:000000000040863E                 pop     r14
.text:0000000000408640                 pop     r13
.text:0000000000408642                 pop     r12
.text:0000000000408644                 retn
.text:0000000000408645 ; ---------------------------------------------------------------------------
.text:0000000000408645
.text:0000000000408645 loc_408645:                             ; CODE XREF: __libirc_get_msg+111↑j
.text:0000000000408645                 mov     rax, rcx
.text:0000000000408648                 add     rsp, 150h
.text:000000000040864F                 pop     r14
.text:0000000000408651                 pop     r13
.text:0000000000408653                 pop     r12
.text:0000000000408655                 retn
.text:0000000000408656 ; ---------------------------------------------------------------------------
.text:0000000000408656
.text:0000000000408656 loc_408656:                             ; CODE XREF: __libirc_get_msg+A9↑j
.text:0000000000408656                 lea     rdi, name       ; "LANG"
.text:000000000040865D                 call    _getenv
.text:0000000000408662                 test    rax, rax
.text:0000000000408665                 jz      short loc_4086D7
.text:0000000000408667                 mov     rsi, rax        ; src
.text:000000000040866A                 lea     rdi, [rsp+168h+dest] ; dest
.text:000000000040866E                 mov     edx, 80h        ; n
.text:0000000000408673                 call    _strncpy
.text:0000000000408678                 mov     esi, 2Eh ; '.'  ; c
.text:000000000040867D                 lea     rdi, [rsp+168h+dest] ; s
.text:0000000000408681                 call    _strchr
.text:0000000000408686                 mov     r12, rax
.text:0000000000408689                 test    r12, r12
.text:000000000040868C                 jz      short loc_4086D7
.text:000000000040868E                 lea     rdi, name       ; "LANG"
.text:0000000000408695                 lea     rsi, [rsp+168h+dest] ; value
.text:0000000000408699                 mov     edx, 1          ; replace
.text:000000000040869E                 mov     byte ptr [r12], 0
.text:00000000004086A3                 call    _setenv
.text:00000000004086A8                 lea     rdi, cat_name   ; "irc_msg.cat"
.text:00000000004086AF                 xor     esi, esi        ; flag
.text:00000000004086B1                 call    _catopen
.text:00000000004086B6                 lea     rdi, name       ; "LANG"
.text:00000000004086BD                 lea     rsi, [rsp+168h+dest] ; value
.text:00000000004086C1                 mov     edx, 1          ; replace
.text:00000000004086C6                 mov     cs:message_catalog, rax
.text:00000000004086CD                 mov     byte ptr [r12], 2Eh ; '.'
.text:00000000004086D2                 call    _setenv
.text:00000000004086D7
.text:00000000004086D7 loc_4086D7:                             ; CODE XREF: __libirc_get_msg+195↑j
.text:00000000004086D7                                         ; __libirc_get_msg+1BC↑j
.text:00000000004086D7                 mov     rdi, cs:message_catalog
.text:00000000004086DE                 cmp     rdi, 0FFFFFFFFFFFFFFFFh
.text:00000000004086E2                 jnz     loc_408586
.text:00000000004086E8                 jmp     loc_4085A4
.text:00000000004086ED ; ---------------------------------------------------------------------------
.text:00000000004086ED
.text:00000000004086ED loc_4086ED:                             ; CODE XREF: __libirc_get_msg+F0↑j
.text:00000000004086ED                 mov     rdi, cs:message_catalog
.text:00000000004086F4                 jmp     loc_4085C5
.text:00000000004086F4 __libirc_get_msg endp
.text:00000000004086F4
.text:00000000004086F4 ; ---------------------------------------------------------------------------
.text:00000000004086F9                 align 20h
.text:00000000004086F9 ; } // starts at 4084D0
.text:0000000000408700
.text:0000000000408700 ; =============== S U B R O U T I N E =======================================
.text:0000000000408700
.text:0000000000408700
.text:0000000000408700                 public __libirc_print
.text:0000000000408700 __libirc_print  proc near               ; CODE XREF: __intel_new_feature_proc_init+248↑p
.text:0000000000408700                                         ; __intel_new_feature_proc_init+25B↑p ...
.text:0000000000408700
.text:0000000000408700 dest            = byte ptr -168h
.text:0000000000408700 var_E8          = byte ptr -0E8h
.text:0000000000408700 var_D0          = qword ptr -0D0h
.text:0000000000408700 var_C8          = qword ptr -0C8h
.text:0000000000408700 var_C0          = qword ptr -0C0h
.text:0000000000408700 var_39          = byte ptr -39h
.text:0000000000408700 arg             = dword ptr -38h
.text:0000000000408700 var_34          = dword ptr -34h
.text:0000000000408700 var_30          = qword ptr -30h
.text:0000000000408700 var_28          = qword ptr -28h
.text:0000000000408700 arg_0           = byte ptr  8
.text:0000000000408700
.text:0000000000408700 ; __unwind {
.text:0000000000408700                 push    r13
.text:0000000000408702                 push    r14
.text:0000000000408704                 push    r15
.text:0000000000408706                 push    rbx
.text:0000000000408707                 sub     rsp, 148h
.text:000000000040870E                 mov     [rsp+168h+var_D0], rcx
.text:0000000000408716                 mov     [rsp+168h+var_C8], r8
.text:000000000040871E                 mov     [rsp+168h+var_C0], r9
.text:0000000000408726                 movzx   r11d, al
.text:000000000040872A                 lea     rax, ds:0[r11*4]
.text:0000000000408732                 lea     r11, loc_408767
.text:0000000000408739                 sub     r11, rax
.text:000000000040873C                 lea     rax, [rsp+168h+var_39]
.text:0000000000408744                 jmp     r11
.text:0000000000408747                 movaps  xmmword ptr [rax-0Fh], xmm7
.text:000000000040874B                 movaps  xmmword ptr [rax-1Fh], xmm6
.text:000000000040874F                 movaps  xmmword ptr [rax-2Fh], xmm5
.text:0000000000408753                 movaps  xmmword ptr [rax-3Fh], xmm4
.text:0000000000408757                 movaps  xmmword ptr [rax-4Fh], xmm3
.text:000000000040875B                 movaps  xmmword ptr [rax-5Fh], xmm2
.text:000000000040875F                 movaps  xmmword ptr [rax-6Fh], xmm1
.text:0000000000408763                 movaps  xmmword ptr [rax-7Fh], xmm0
.text:0000000000408767
.text:0000000000408767 loc_408767:                             ; DATA XREF: __libirc_print+32↑o
.text:0000000000408767                 mov     r14d, esi
.text:000000000040876A                 mov     r15d, edx
.text:000000000040876D                 mov     r13d, edi
.text:0000000000408770                 test    r14d, r14d
.text:0000000000408773                 jnz     short loc_40879C
.text:0000000000408775                 cmp     r13d, 1
.text:0000000000408779                 jz      loc_4088AE
.text:000000000040877F                 lea     rdi, asc_40A334 ; "\n"
.text:0000000000408786                 xor     eax, eax
.text:0000000000408788                 call    _printf
.text:000000000040878D                 add     rsp, 148h
.text:0000000000408794                 pop     rbx
.text:0000000000408795                 pop     r15
.text:0000000000408797                 pop     r14
.text:0000000000408799                 pop     r13
.text:000000000040879B                 retn
.text:000000000040879C ; ---------------------------------------------------------------------------
.text:000000000040879C
.text:000000000040879C loc_40879C:                             ; CODE XREF: __libirc_print+73↑j
.text:000000000040879C                 cmp     cs:first_msg, 0
.text:00000000004087A3                 jz      short loc_4087F3
.text:00000000004087A5                 lea     rdi, cat_name   ; "irc_msg.cat"
.text:00000000004087AC                 xor     esi, esi        ; flag
.text:00000000004087AE                 mov     cs:first_msg, 0
.text:00000000004087B8                 call    _catopen
.text:00000000004087BD                 mov     cs:message_catalog, rax
.text:00000000004087C4                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:00000000004087C8                 jz      loc_4088D5
.text:00000000004087CE                 mov     rdi, cs:message_catalog ; catalog
.text:00000000004087D5
.text:00000000004087D5 loc_4087D5:                             ; CODE XREF: __libirc_print+25D↓j
.text:00000000004087D5                 movsxd  rax, r14d
.text:00000000004087D8                 lea     rcx, off_60C048 ; "\n"
.text:00000000004087DF                 shl     rax, 4
.text:00000000004087E3                 mov     cs:use_internal_msg, 0
.text:00000000004087ED                 mov     rcx, [rax+rcx]  ; string
.text:00000000004087F1                 jmp     short loc_408814
.text:00000000004087F3 ; ---------------------------------------------------------------------------
.text:00000000004087F3
.text:00000000004087F3 loc_4087F3:                             ; CODE XREF: __libirc_print+A3↑j
.text:00000000004087F3                                         ; __libirc_print+263↓j
.text:00000000004087F3                 mov     ebx, cs:use_internal_msg
.text:00000000004087F9                 movsxd  rax, r14d
.text:00000000004087FC                 lea     rcx, off_60C048 ; "\n"
.text:0000000000408803                 shl     rax, 4
.text:0000000000408807                 test    ebx, ebx
.text:0000000000408809                 mov     rcx, [rax+rcx]
.text:000000000040880D                 jnz     short loc_408824
.text:000000000040880F                 jmp     loc_4089A3
.text:0000000000408814 ; ---------------------------------------------------------------------------
.text:0000000000408814
.text:0000000000408814 loc_408814:                             ; CODE XREF: __libirc_print+F1↑j
.text:0000000000408814                                         ; __libirc_print+2AA↓j
.text:0000000000408814                 mov     esi, 1          ; set
.text:0000000000408819                 mov     edx, r14d       ; number
.text:000000000040881C                 call    _catgets
.text:0000000000408821                 mov     rcx, rax
.text:0000000000408824
.text:0000000000408824 loc_408824:                             ; CODE XREF: __libirc_print+10D↑j
.text:0000000000408824                 test    r15d, r15d
.text:0000000000408827                 jle     short loc_40887D
.text:0000000000408829                 mov     [rsp+168h+arg], 18h
.text:0000000000408834                 lea     rax, [rsp+168h+arg_0]
.text:000000000040883C                 mov     [rsp+168h+var_34], 30h ; '0'
.text:0000000000408847                 lea     rdx, [rsp+168h+var_E8]
.text:000000000040884F                 mov     [rsp+168h+var_30], rax
.text:0000000000408857                 mov     [rsp+168h+var_28], rdx
.text:000000000040885F                 lea     rdi, print_buf  ; s
.text:0000000000408866                 mov     rsi, rcx        ; format
.text:0000000000408869                 lea     rdx, [rsp+168h+arg] ; arg
.text:0000000000408871                 call    _vsprintf
.text:0000000000408876                 lea     rcx, print_buf
.text:000000000040887D
.text:000000000040887D loc_40887D:                             ; CODE XREF: __libirc_print+127↑j
.text:000000000040887D                 cmp     r13d, 1
.text:0000000000408881                 jz      loc_408968
.text:0000000000408887                 mov     rdi, rcx        ; format
.text:000000000040888A                 xor     eax, eax
.text:000000000040888C                 call    _printf
.text:0000000000408891                 lea     rdi, asc_40A334 ; "\n"
.text:0000000000408898                 xor     eax, eax
.text:000000000040889A                 call    _printf
.text:000000000040889F                 add     rsp, 148h
.text:00000000004088A6                 pop     rbx
.text:00000000004088A7                 pop     r15
.text:00000000004088A9                 pop     r14
.text:00000000004088AB                 pop     r13
.text:00000000004088AD                 retn
.text:00000000004088AE ; ---------------------------------------------------------------------------
.text:00000000004088AE
.text:00000000004088AE loc_4088AE:                             ; CODE XREF: __libirc_print+79↑j
.text:00000000004088AE                 mov     rax, cs:stderr_ptr
.text:00000000004088B5                 lea     rsi, asc_40A334 ; "\n"
.text:00000000004088BC                 mov     rdi, [rax]      ; stream
.text:00000000004088BF                 xor     eax, eax
.text:00000000004088C1                 call    _fprintf
.text:00000000004088C6                 add     rsp, 148h
.text:00000000004088CD                 pop     rbx
.text:00000000004088CE                 pop     r15
.text:00000000004088D0                 pop     r14
.text:00000000004088D2                 pop     r13
.text:00000000004088D4                 retn
.text:00000000004088D5 ; ---------------------------------------------------------------------------
.text:00000000004088D5
.text:00000000004088D5 loc_4088D5:                             ; CODE XREF: __libirc_print+C8↑j
.text:00000000004088D5                 lea     rdi, name       ; "LANG"
.text:00000000004088DC                 call    _getenv
.text:00000000004088E1                 test    rax, rax
.text:00000000004088E4                 jz      short loc_408952
.text:00000000004088E6                 mov     rsi, rax        ; src
.text:00000000004088E9                 lea     rdi, [rsp+168h+dest] ; dest
.text:00000000004088ED                 mov     edx, 80h        ; n
.text:00000000004088F2                 call    _strncpy
.text:00000000004088F7                 mov     esi, 2Eh ; '.'  ; c
.text:00000000004088FC                 lea     rdi, [rsp+168h+dest] ; s
.text:0000000000408900                 call    _strchr
.text:0000000000408905                 mov     rbx, rax
.text:0000000000408908                 test    rbx, rbx
.text:000000000040890B                 jz      short loc_408952
.text:000000000040890D                 lea     rdi, name       ; "LANG"
.text:0000000000408914                 lea     rsi, [rsp+168h+dest] ; value
.text:0000000000408918                 mov     edx, 1          ; replace
.text:000000000040891D                 mov     byte ptr [rbx], 0
.text:0000000000408920                 call    _setenv
.text:0000000000408925                 lea     rdi, cat_name   ; "irc_msg.cat"
.text:000000000040892C                 xor     esi, esi        ; flag
.text:000000000040892E                 call    _catopen
.text:0000000000408933                 lea     rdi, name       ; "LANG"
.text:000000000040893A                 lea     rsi, [rsp+168h+dest] ; value
.text:000000000040893E                 mov     edx, 1          ; replace
.text:0000000000408943                 mov     cs:message_catalog, rax
.text:000000000040894A                 mov     byte ptr [rbx], 2Eh ; '.'
.text:000000000040894D                 call    _setenv
.text:0000000000408952
.text:0000000000408952 loc_408952:                             ; CODE XREF: __libirc_print+1E4↑j
.text:0000000000408952                                         ; __libirc_print+20B↑j
.text:0000000000408952                 mov     rdi, cs:message_catalog
.text:0000000000408959                 cmp     rdi, 0FFFFFFFFFFFFFFFFh
.text:000000000040895D                 jnz     loc_4087D5
.text:0000000000408963                 jmp     loc_4087F3
.text:0000000000408968 ; ---------------------------------------------------------------------------
.text:0000000000408968
.text:0000000000408968 loc_408968:                             ; CODE XREF: __libirc_print+181↑j
.text:0000000000408968                 mov     rax, cs:stderr_ptr
.text:000000000040896F                 mov     rsi, rcx        ; format
.text:0000000000408972                 mov     rdi, [rax]      ; stream
.text:0000000000408975                 xor     eax, eax
.text:0000000000408977                 call    _fprintf
.text:000000000040897C                 mov     rax, cs:stderr_ptr
.text:0000000000408983                 lea     rsi, asc_40A334 ; "\n"
.text:000000000040898A                 mov     rdi, [rax]      ; stream
.text:000000000040898D                 xor     eax, eax
.text:000000000040898F                 call    _fprintf
.text:0000000000408994                 add     rsp, 148h
.text:000000000040899B                 pop     rbx
.text:000000000040899C                 pop     r15
.text:000000000040899E                 pop     r14
.text:00000000004089A0                 pop     r13
.text:00000000004089A2                 retn
.text:00000000004089A3 ; ---------------------------------------------------------------------------
.text:00000000004089A3
.text:00000000004089A3 loc_4089A3:                             ; CODE XREF: __libirc_print+10F↑j
.text:00000000004089A3                 mov     rdi, cs:message_catalog
.text:00000000004089AA                 jmp     loc_408814
.text:00000000004089AA __libirc_print  endp
.text:00000000004089AA
.text:00000000004089AA ; ---------------------------------------------------------------------------
.text:00000000004089AF                 align 10h
.text:00000000004089AF ; } // starts at 408700
.text:00000000004089B0
.text:00000000004089B0 ; =============== S U B R O U T I N E =======================================
.text:00000000004089B0
.text:00000000004089B0
.text:00000000004089B0                 public __intel_cpu_features_init_x
.text:00000000004089B0 __intel_cpu_features_init_x proc near
.text:00000000004089B0 ; __unwind {
.text:00000000004089B0                 push    rax
.text:00000000004089B1                 push    rdx
.text:00000000004089B2                 push    rcx
.text:00000000004089B3                 push    rsi
.text:00000000004089B4                 push    rdi
.text:00000000004089B5                 push    r8
.text:00000000004089B7                 push    r9
.text:00000000004089B9                 xor     edi, edi
.text:00000000004089BB                 call    __intel_cpu_features_init_body
.text:00000000004089C0                 pop     r9
.text:00000000004089C2                 pop     r8
.text:00000000004089C4                 pop     rdi
.text:00000000004089C5                 pop     rsi
.text:00000000004089C6                 pop     rcx
.text:00000000004089C7                 pop     rdx
.text:00000000004089C8                 pop     rax
.text:00000000004089C9                 retn
.text:00000000004089C9 __intel_cpu_features_init_x endp
.text:00000000004089C9
.text:00000000004089C9 ; ---------------------------------------------------------------------------
.text:00000000004089CA                 align 10h
.text:00000000004089CA ; } // starts at 4089B0
.text:00000000004089D0
.text:00000000004089D0 ; =============== S U B R O U T I N E =======================================
.text:00000000004089D0
.text:00000000004089D0
.text:00000000004089D0                 public __intel_cpu_features_init
.text:00000000004089D0 __intel_cpu_features_init proc near     ; CODE XREF: _intel_fast_memmove+4E↑p
.text:00000000004089D0                                         ; __intel_new_feature_proc_init+35F↑p
.text:00000000004089D0 ; __unwind {
.text:00000000004089D0                 push    rax
.text:00000000004089D1                 push    rdx
.text:00000000004089D2                 push    rcx
.text:00000000004089D3                 push    rsi
.text:00000000004089D4                 push    rdi
.text:00000000004089D5                 push    r8
.text:00000000004089D7                 push    r9
.text:00000000004089D9                 mov     edi, 1
.text:00000000004089DE                 call    __intel_cpu_features_init_body
.text:00000000004089E3                 pop     r9
.text:00000000004089E5                 pop     r8
.text:00000000004089E7                 pop     rdi
.text:00000000004089E8                 pop     rsi
.text:00000000004089E9                 pop     rcx
.text:00000000004089EA                 pop     rdx
.text:00000000004089EB                 pop     rax
.text:00000000004089EC                 retn
.text:00000000004089EC __intel_cpu_features_init endp
.text:00000000004089EC
.text:00000000004089EC ; ---------------------------------------------------------------------------
.text:00000000004089ED                 align 10h
.text:00000000004089ED ; } // starts at 4089D0
.text:00000000004089F0
.text:00000000004089F0 ; =============== S U B R O U T I N E =======================================
.text:00000000004089F0
.text:00000000004089F0
.text:00000000004089F0 __intel_cpu_features_init_body proc near
.text:00000000004089F0                                         ; CODE XREF: __intel_cpu_features_init_x+B↑p
.text:00000000004089F0                                         ; __intel_cpu_features_init+E↑p
.text:00000000004089F0
.text:00000000004089F0 var_18          = dword ptr -18h
.text:00000000004089F0 var_14          = dword ptr -14h
.text:00000000004089F0 var_10          = dword ptr -10h
.text:00000000004089F0 var_C           = dword ptr -0Ch
.text:00000000004089F0
.text:00000000004089F0 ; __unwind {
.text:00000000004089F0                 push    rbx
.text:00000000004089F1                 mov     r11d, edi
.text:00000000004089F4                 xor     eax, eax
.text:00000000004089F6                 cpuid
.text:00000000004089F8                 mov     [rsp+8+var_18], eax
.text:00000000004089FC                 mov     [rsp+8+var_14], ebx
.text:0000000000408A00                 mov     [rsp+8+var_10], ecx
.text:0000000000408A04                 mov     [rsp+8+var_C], edx
.text:0000000000408A08                 xor     sil, sil
.text:0000000000408A0B                 cmp     [rsp+8+var_18], 0
.text:0000000000408A10                 jz      loc_408D4F
.text:0000000000408A16                 cmp     r11d, 1
.text:0000000000408A1A                 jz      loc_408D5C
.text:0000000000408A20
.text:0000000000408A20 loc_408A20:                             ; CODE XREF: __intel_cpu_features_init_body+38A↓j
.text:0000000000408A20                 mov     eax, 1
.text:0000000000408A25                 cpuid
.text:0000000000408A27                 mov     r8d, edx
.text:0000000000408A2A                 mov     r9d, eax
.text:0000000000408A2D                 and     r8d, 1
.text:0000000000408A31                 mov     edi, ecx
.text:0000000000408A33                 lea     r8, ds:1[r8*2]
.text:0000000000408A3B                 mov     rax, r8
.text:0000000000408A3E                 or      rax, 4
.text:0000000000408A42                 test    edx, 8000h
.text:0000000000408A48                 cmovnz  r8, rax
.text:0000000000408A4C                 mov     rcx, r8
.text:0000000000408A4F                 or      rcx, 8
.text:0000000000408A53                 test    edx, 800000h
.text:0000000000408A59                 cmovnz  r8, rcx
.text:0000000000408A5D                 test    edx, 1000000h
.text:0000000000408A63                 jz      loc_408B54
.text:0000000000408A69                 or      r8, 10h
.text:0000000000408A6D                 mov     r10, r8
.text:0000000000408A70                 or      r10, 20h
.text:0000000000408A74                 test    edx, 2000000h
.text:0000000000408A7A                 cmovnz  r8, r10
.text:0000000000408A7E                 mov     rsi, r8
.text:0000000000408A81                 or      rsi, 40h
.text:0000000000408A85                 test    edx, 4000000h
.text:0000000000408A8B                 cmovnz  r8, rsi
.text:0000000000408A8F                 mov     r10, r8
.text:0000000000408A92                 or      r10, 80h
.text:0000000000408A99                 test    edi, 1
.text:0000000000408A9F                 cmovnz  r8, r10
.text:0000000000408AA3                 mov     rax, r8
.text:0000000000408AA6                 or      rax, 100h
.text:0000000000408AAC                 test    edi, 200h
.text:0000000000408AB2                 cmovnz  r8, rax
.text:0000000000408AB6                 mov     rbx, r8
.text:0000000000408AB9                 or      rbx, 800h
.text:0000000000408AC0                 test    edi, 400000h
.text:0000000000408AC6                 cmovnz  r8, rbx
.text:0000000000408ACA                 mov     rcx, r8
.text:0000000000408ACD                 or      rcx, 200h
.text:0000000000408AD4                 test    edi, 80000h
.text:0000000000408ADA                 cmovnz  r8, rcx
.text:0000000000408ADE                 mov     rdx, r8
.text:0000000000408AE1                 or      rdx, 400h
.text:0000000000408AE8                 test    edi, 100000h
.text:0000000000408AEE                 cmovnz  r8, rdx
.text:0000000000408AF2                 mov     r10, r8
.text:0000000000408AF5                 or      r10, 1000h
.text:0000000000408AFC                 test    edi, 800000h
.text:0000000000408B02                 cmovnz  r8, r10
.text:0000000000408B06                 mov     rsi, r8
.text:0000000000408B09                 or      rsi, 2000h
.text:0000000000408B10                 test    edi, 2
.text:0000000000408B16                 cmovnz  r8, rsi
.text:0000000000408B1A                 mov     sil, 1
.text:0000000000408B1D                 mov     rax, r8
.text:0000000000408B20                 or      rax, 4000h
.text:0000000000408B26                 test    edi, 2000000h
.text:0000000000408B2C                 cmovnz  r8, rax
.text:0000000000408B30                 mov     eax, 7
.text:0000000000408B35                 xor     ecx, ecx
.text:0000000000408B37                 cpuid
.text:0000000000408B39                 mov     r10d, ebx
.text:0000000000408B3C                 mov     rbx, 800000000h
.text:0000000000408B46                 or      rbx, r8
.text:0000000000408B49                 test    r10d, 20000000h
.text:0000000000408B50                 cmovnz  r8, rbx
.text:0000000000408B54
.text:0000000000408B54 loc_408B54:                             ; CODE XREF: __intel_cpu_features_init_body+73↑j
.text:0000000000408B54                 mov     rax, r8
.text:0000000000408B57                 or      rax, 20000h
.text:0000000000408B5D                 test    edi, 40000000h
.text:0000000000408B63                 cmovnz  r8, rax
.text:0000000000408B67                 test    sil, sil
.text:0000000000408B6A                 jnz     short loc_408B78
.text:0000000000408B6C                 mov     eax, 7
.text:0000000000408B71                 xor     ecx, ecx
.text:0000000000408B73                 cpuid
.text:0000000000408B75                 mov     r10d, ebx
.text:0000000000408B78
.text:0000000000408B78 loc_408B78:                             ; CODE XREF: __intel_cpu_features_init_body+17A↑j
.text:0000000000408B78                 mov     esi, r10d
.text:0000000000408B7B                 mov     rcx, r8
.text:0000000000408B7E                 and     esi, 108h
.text:0000000000408B84                 or      rcx, 80000h
.text:0000000000408B8B                 cmp     esi, 108h
.text:0000000000408B91                 cmovz   r8, rcx
.text:0000000000408B95                 mov     eax, 80000001h
.text:0000000000408B9A                 cpuid
.text:0000000000408B9C                 mov     rdx, r8
.text:0000000000408B9F                 or      rdx, 100000h
.text:0000000000408BA6                 test    cl, 20h
.text:0000000000408BA9                 cmovnz  r8, rdx
.text:0000000000408BAD                 mov     rcx, r8
.text:0000000000408BB0                 or      rcx, 200000h
.text:0000000000408BB7                 test    r10d, 10h
.text:0000000000408BBE                 cmovnz  r8, rcx
.text:0000000000408BC2                 mov     rbx, r8
.text:0000000000408BC5                 or      rbx, 400000h
.text:0000000000408BCC                 test    r10d, 800h
.text:0000000000408BD3                 cmovnz  r8, rbx
.text:0000000000408BD7                 mov     rsi, r8
.text:0000000000408BDA                 or      rsi, 10000000h
.text:0000000000408BE1                 test    r10d, 80000h
.text:0000000000408BE8                 cmovnz  r8, rsi
.text:0000000000408BEC                 mov     rax, r8
.text:0000000000408BEF                 or      rax, 20000000h
.text:0000000000408BF5                 test    r10d, 40000h
.text:0000000000408BFC                 cmovnz  r8, rax
.text:0000000000408C00                 test    edi, 8000000h
.text:0000000000408C06                 jz      loc_408D06
.text:0000000000408C0C                 xor     ecx, ecx
.text:0000000000408C0E                 xgetbv
.text:0000000000408C11                 or      r8, 1
.text:0000000000408C15                 mov     edx, eax
.text:0000000000408C17                 and     edx, 6
.text:0000000000408C1A                 cmp     edx, 6
.text:0000000000408C1D                 jnz     loc_408D06
.text:0000000000408C23                 mov     rdx, r8
.text:0000000000408C26                 or      rdx, 10000h
.text:0000000000408C2D                 test    edi, 10000000h
.text:0000000000408C33                 cmovnz  r8, rdx
.text:0000000000408C37                 mov     rcx, r8
.text:0000000000408C3A                 or      rcx, 8000h
.text:0000000000408C41                 test    edi, 20000000h
.text:0000000000408C47                 cmovnz  r8, rcx
.text:0000000000408C4B                 mov     rbx, r8
.text:0000000000408C4E                 or      rbx, 800000h
.text:0000000000408C55                 test    r10d, 20h
.text:0000000000408C5C                 cmovnz  r8, rbx
.text:0000000000408C60                 mov     rsi, r8
.text:0000000000408C63                 or      rsi, 40000h
.text:0000000000408C6A                 test    edi, 1000h
.text:0000000000408C70                 mov     edi, eax
.text:0000000000408C72                 cmovnz  r8, rsi
.text:0000000000408C76                 and     edi, 18h
.text:0000000000408C79                 cmp     edi, 18h
.text:0000000000408C7C                 jnz     short loc_408C9A
.text:0000000000408C7E                 or      r8, 1
.text:0000000000408C82                 mov     rdx, 1000000000h
.text:0000000000408C8C                 or      rdx, r8
.text:0000000000408C8F                 test    r10d, 4000h
.text:0000000000408C96                 cmovnz  r8, rdx
.text:0000000000408C9A
.text:0000000000408C9A loc_408C9A:                             ; CODE XREF: __intel_cpu_features_init_body+28C↑j
.text:0000000000408C9A                 and     eax, 0E0h
.text:0000000000408C9F                 cmp     eax, 0E0h
.text:0000000000408CA4                 jnz     short loc_408D06
.text:0000000000408CA6                 or      r8, 1
.text:0000000000408CAA                 mov     rdx, 400000000h
.text:0000000000408CB4                 mov     rax, r8
.text:0000000000408CB7                 mov     rcx, 100000000h
.text:0000000000408CC1                 or      rax, 8000000h
.text:0000000000408CC7                 test    r10d, 10000h
.text:0000000000408CCE                 mov     rbx, 200000000h
.text:0000000000408CD8                 cmovnz  r8, rax
.text:0000000000408CDC                 or      rdx, r8
.text:0000000000408CDF                 test    r10d, 10000000h
.text:0000000000408CE6                 cmovnz  r8, rdx
.text:0000000000408CEA                 or      rcx, r8
.text:0000000000408CED                 test    r10d, 8000000h
.text:0000000000408CF4                 cmovnz  r8, rcx
.text:0000000000408CF8                 or      rbx, r8
.text:0000000000408CFB                 test    r10d, 4000000h
.text:0000000000408D02                 cmovnz  r8, rbx
.text:0000000000408D06
.text:0000000000408D06 loc_408D06:                             ; CODE XREF: __intel_cpu_features_init_body+216↑j
.text:0000000000408D06                                         ; __intel_cpu_features_init_body+22D↑j ...
.text:0000000000408D06                 mov     eax, r9d
.text:0000000000408D09                 shr     eax, 0Ch
.text:0000000000408D0C                 shr     r9d, 4
.text:0000000000408D10                 and     eax, 0F0h
.text:0000000000408D15                 and     r9d, 0Fh
.text:0000000000408D19                 add     eax, r9d
.text:0000000000408D1C                 cmp     eax, 1Ch
.text:0000000000408D1F                 jz      short loc_408D2B
.text:0000000000408D21                 cmp     eax, 26h ; '&'
.text:0000000000408D24                 jz      short loc_408D2B
.text:0000000000408D26                 cmp     eax, 27h ; '''
.text:0000000000408D29                 jnz     short loc_408D30
.text:0000000000408D2B
.text:0000000000408D2B loc_408D2B:                             ; CODE XREF: __intel_cpu_features_init_body+32F↑j
.text:0000000000408D2B                                         ; __intel_cpu_features_init_body+334↑j
.text:0000000000408D2B                 bts     r8, 1Fh
.text:0000000000408D30
.text:0000000000408D30 loc_408D30:                             ; CODE XREF: __intel_cpu_features_init_body+339↑j
.text:0000000000408D30                 cmp     r11d, 1
.text:0000000000408D34                 jz      short loc_408D3F
.text:0000000000408D36                 mov     cs:__intel_cpu_feature_indicator_x, r8
.text:0000000000408D3D                 pop     rbx
.text:0000000000408D3E                 retn
.text:0000000000408D3F ; ---------------------------------------------------------------------------
.text:0000000000408D3F
.text:0000000000408D3F loc_408D3F:                             ; CODE XREF: __intel_cpu_features_init_body+344↑j
.text:0000000000408D3F                 mov     cs:__intel_cpu_feature_indicator, r8
.text:0000000000408D46                 mov     cs:__intel_cpu_feature_indicator_x, r8
.text:0000000000408D4D                 pop     rbx
.text:0000000000408D4E                 retn
.text:0000000000408D4F ; ---------------------------------------------------------------------------
.text:0000000000408D4F
.text:0000000000408D4F loc_408D4F:                             ; CODE XREF: __intel_cpu_features_init_body+20↑j
.text:0000000000408D4F                                         ; __intel_cpu_features_init_body+374↓j ...
.text:0000000000408D4F                 mov     cs:__intel_cpu_feature_indicator, 1
.text:0000000000408D5A                 pop     rbx
.text:0000000000408D5B                 retn
.text:0000000000408D5C ; ---------------------------------------------------------------------------
.text:0000000000408D5C
.text:0000000000408D5C loc_408D5C:                             ; CODE XREF: __intel_cpu_features_init_body+2A↑j
.text:0000000000408D5C                 cmp     [rsp+8+var_14], 756E6547h
.text:0000000000408D64                 jnz     short loc_408D4F
.text:0000000000408D66                 cmp     [rsp+8+var_C], 49656E69h
.text:0000000000408D6E                 jnz     short loc_408D4F
.text:0000000000408D70                 cmp     [rsp+8+var_10], 6C65746Eh
.text:0000000000408D78                 jnz     short loc_408D4F
.text:0000000000408D7A                 jmp     loc_408A20
.text:0000000000408D7A __intel_cpu_features_init_body endp
.text:0000000000408D7A
.text:0000000000408D7A ; ---------------------------------------------------------------------------
.text:0000000000408D7F                 align 20h
.text:0000000000408D7F ; } // starts at 4089F0
.text:0000000000408D80
.text:0000000000408D80 ; =============== S U B R O U T I N E =======================================
.text:0000000000408D80
.text:0000000000408D80 ; Attributes: bp-based frame
.text:0000000000408D80
.text:0000000000408D80                 public __cacheSize
.text:0000000000408D80 __cacheSize     proc near
.text:0000000000408D80
.text:0000000000408D80 var_150         = dword ptr -150h
.text:0000000000408D80 var_140         = qword ptr -140h
.text:0000000000408D80 var_138         = dword ptr -138h
.text:0000000000408D80 var_134         = dword ptr -134h
.text:0000000000408D80 var_130         = qword ptr -130h
.text:0000000000408D80 var_128         = byte ptr -128h
.text:0000000000408D80 var_124         = dword ptr -124h
.text:0000000000408D80 var_120         = dword ptr -120h
.text:0000000000408D80 var_A8          = qword ptr -0A8h
.text:0000000000408D80 var_A0          = byte ptr -0A0h
.text:0000000000408D80 var_9D          = byte ptr -9Dh
.text:0000000000408D80 var_60          = qword ptr -60h
.text:0000000000408D80 var_58          = qword ptr -58h
.text:0000000000408D80 var_50          = dword ptr -50h
.text:0000000000408D80 var_48          = qword ptr -48h
.text:0000000000408D80 var_40          = qword ptr -40h
.text:0000000000408D80 var_38          = qword ptr -38h
.text:0000000000408D80 var_30          = qword ptr -30h
.text:0000000000408D80 var_28          = qword ptr -28h
.text:0000000000408D80 var_20          = qword ptr -20h
.text:0000000000408D80 var_18          = dword ptr -18h
.text:0000000000408D80 var_14          = dword ptr -14h
.text:0000000000408D80 var_10          = dword ptr -10h
.text:0000000000408D80
.text:0000000000408D80 ; __unwind {
.text:0000000000408D80                 push    rbp
.text:0000000000408D81                 mov     rbp, rsp
.text:0000000000408D84                 sub     rsp, 150h
.text:0000000000408D8B                 mov     r10d, edi
.text:0000000000408D8E                 lea     eax, [r10-1]
.text:0000000000408D92                 cmp     eax, 2
.text:0000000000408D95                 ja      short loc_408DB7
.text:0000000000408D97                 lea     rsi, unk_60FB6C
.text:0000000000408D9E                 cmp     dword ptr [rsi], 0
.text:0000000000408DA1                 jz      short loc_408DBE
.text:0000000000408DA3                 lea     r9, __libirc_cache_tbl
.text:0000000000408DAA
.text:0000000000408DAA loc_408DAA:                             ; CODE XREF: __cacheSize+3DC↓j
.text:0000000000408DAA                 shl     r10d, 2
.text:0000000000408DAE                 mov     eax, [r9+r10*4]
.text:0000000000408DB2                 mov     rsp, rbp
.text:0000000000408DB5                 pop     rbp
.text:0000000000408DB6                 retn
.text:0000000000408DB7 ; ---------------------------------------------------------------------------
.text:0000000000408DB7
.text:0000000000408DB7 loc_408DB7:                             ; CODE XREF: __cacheSize+15↑j
.text:0000000000408DB7                 xor     eax, eax
.text:0000000000408DB9                 mov     rsp, rbp
.text:0000000000408DBC                 pop     rbp
.text:0000000000408DBD                 retn
.text:0000000000408DBE ; ---------------------------------------------------------------------------
.text:0000000000408DBE
.text:0000000000408DBE loc_408DBE:                             ; CODE XREF: __cacheSize+21↑j
.text:0000000000408DBE                 mov     [rbp+var_10], 0
.text:0000000000408DC5                 push    rax
.text:0000000000408DC6                 push    rcx
.text:0000000000408DC7                 pushfq
.text:0000000000408DC8                 pop     rax
.text:0000000000408DC9                 mov     ecx, eax
.text:0000000000408DCB                 xor     eax, 200000h
.text:0000000000408DD0                 push    rax
.text:0000000000408DD1                 popfq
.text:0000000000408DD2                 pushfq
.text:0000000000408DD3                 pop     rax
.text:0000000000408DD4                 cmp     eax, ecx
.text:0000000000408DD6                 jz      short loc_408DE0
.text:0000000000408DD8                 mov     [rbp+var_10], 1
.text:0000000000408DDF                 push    rcx
.text:0000000000408DE0
.text:0000000000408DE0 loc_408DE0:                             ; CODE XREF: __cacheSize+56↑j
.text:0000000000408DE0                 popfq
.text:0000000000408DE1                 pop     rcx
.text:0000000000408DE2                 pop     rax
.text:0000000000408DE3                 cmp     [rbp+var_10], 0
.text:0000000000408DE7                 jnz     short loc_408DF5
.text:0000000000408DE9                 lea     r9, __libirc_cache_tbl
.text:0000000000408DF0                 jmp     loc_409156
.text:0000000000408DF5 ; ---------------------------------------------------------------------------
.text:0000000000408DF5
.text:0000000000408DF5 loc_408DF5:                             ; CODE XREF: __cacheSize+67↑j
.text:0000000000408DF5                 mov     rax, 49656E69756E6547h
.text:0000000000408DFF                 lea     rcx, [rbp+var_18]
.text:0000000000408E03                 xor     edx, edx
.text:0000000000408E05                 mov     [rbp+var_28], rcx
.text:0000000000408E09                 mov     [rbp+var_60], rax
.text:0000000000408E0D                 mov     [rbp+var_58], 6C65746Eh
.text:0000000000408E15                 mov     [rbp+var_14], edx
.text:0000000000408E18                 mov     [rcx], edx
.text:0000000000408E1A                 mov     [rbp+var_20], rbx
.text:0000000000408E1E                 push    rax
.text:0000000000408E1F                 push    rbx
.text:0000000000408E20                 push    rcx
.text:0000000000408E21                 push    rdx
.text:0000000000408E22                 mov     eax, 0
.text:0000000000408E27                 cpuid
.text:0000000000408E29                 cmp     dword ptr [rbp+var_60], ebx
.text:0000000000408E2C                 jnz     short loc_408E45
.text:0000000000408E2E                 cmp     dword ptr [rbp+var_60+4], edx
.text:0000000000408E31                 jnz     short loc_408E45
.text:0000000000408E33                 cmp     dword ptr [rbp+var_58], ecx
.text:0000000000408E36                 jnz     short loc_408E45
.text:0000000000408E38                 mov     [rbp+var_14], 1
.text:0000000000408E3F                 mov     rdx, [rbp+var_28]
.text:0000000000408E43                 mov     [rdx], eax
.text:0000000000408E45
.text:0000000000408E45 loc_408E45:                             ; CODE XREF: __cacheSize+AC↑j
.text:0000000000408E45                                         ; __cacheSize+B1↑j ...
.text:0000000000408E45                 pop     rdx
.text:0000000000408E46                 pop     rcx
.text:0000000000408E47                 pop     rbx
.text:0000000000408E48                 pop     rax
.text:0000000000408E49                 lea     r9, __libirc_cache_tbl
.text:0000000000408E50                 lea     rdx, unk_60FB64
.text:0000000000408E57                 mov     eax, [rbp+var_14]
.text:0000000000408E5A                 mov     ecx, [rbp+var_18]
.text:0000000000408E5D                 cmp     ecx, 4
.text:0000000000408E60                 mov     rbx, [rbp+var_20]
.text:0000000000408E64                 mov     [r9], eax
.text:0000000000408E67                 mov     [rdx], ecx
.text:0000000000408E69                 jl      loc_408F8A
.text:0000000000408E6F                 mov     [rbp+var_134], 0
.text:0000000000408E79                 lea     rax, [rbp+var_128]
.text:0000000000408E80                 mov     [rbp+var_A8], rax
.text:0000000000408E87                 mov     [rbp+var_20], rbx
.text:0000000000408E8B                 push    rax
.text:0000000000408E8C                 push    rbx
.text:0000000000408E8D                 push    rcx
.text:0000000000408E8E                 push    rdx
.text:0000000000408E8F                 push    rdi
.text:0000000000408E90                 mov     r8, [rbp+var_A8]
.text:0000000000408E97                 mov     edi, 0
.text:0000000000408E9C
.text:0000000000408E9C loc_408E9C:                             ; CODE XREF: __cacheSize+147↓j
.text:0000000000408E9C                 mov     ecx, edi
.text:0000000000408E9E                 mov     eax, 4
.text:0000000000408EA3                 cpuid
.text:0000000000408EA5                 test    eax, 1Fh
.text:0000000000408EAA                 jz      short loc_408EC9
.text:0000000000408EAC                 mov     [r8], eax
.text:0000000000408EAF                 mov     [r8+4], ebx
.text:0000000000408EB3                 mov     [r8+8], ecx
.text:0000000000408EB7                 mov     [r8+0Ch], edx
.text:0000000000408EBB                 add     edi, 1
.text:0000000000408EBE                 cmp     edi, 8
.text:0000000000408EC1                 jge     short loc_408EC9
.text:0000000000408EC3                 add     r8, 10h
.text:0000000000408EC7                 jmp     short loc_408E9C
.text:0000000000408EC9 ; ---------------------------------------------------------------------------
.text:0000000000408EC9
.text:0000000000408EC9 loc_408EC9:                             ; CODE XREF: __cacheSize+12A↑j
.text:0000000000408EC9                                         ; __cacheSize+141↑j
.text:0000000000408EC9                 mov     [rbp+var_134], edi
.text:0000000000408ECF                 pop     rdi
.text:0000000000408ED0                 pop     rdx
.text:0000000000408ED1                 pop     rcx
.text:0000000000408ED2                 pop     rbx
.text:0000000000408ED3                 pop     rax
.text:0000000000408ED4                 xor     edi, edi
.text:0000000000408ED6                 movsxd  r8, [rbp+var_134]
.text:0000000000408EDD                 xor     r11d, r11d
.text:0000000000408EE0                 mov     rbx, [rbp+var_20]
.text:0000000000408EE4                 test    r8, r8
.text:0000000000408EE7                 jle     loc_408F8A
.text:0000000000408EED                 mov     [rbp+var_48], r15
.text:0000000000408EF1
.text:0000000000408EF1 loc_408EF1:                             ; CODE XREF: __cacheSize+200↓j
.text:0000000000408EF1                 mov     dl, [rbp+r11+var_128]
.text:0000000000408EF9                 mov     al, dl
.text:0000000000408EFB                 and     al, 1Dh
.text:0000000000408EFD                 cmp     al, 1
.text:0000000000408EFF                 jnz     short loc_408F76
.text:0000000000408F01                 and     dl, 0E0h
.text:0000000000408F04                 shr     dl, 5
.text:0000000000408F07                 movzx   edx, dl
.text:0000000000408F0A                 shl     rdx, 4
.text:0000000000408F0E                 mov     eax, [rbp+r11+var_124]
.text:0000000000408F16                 movzx   r15d, word ptr [rbp+r11+var_124+2]
.text:0000000000408F1F                 and     eax, 3FF000h
.text:0000000000408F24                 and     r15d, 0FFC0h
.text:0000000000408F2B                 shr     eax, 0Ch
.text:0000000000408F2E                 shr     r15d, 6
.text:0000000000408F32                 inc     eax
.text:0000000000408F34                 movzx   ecx, word ptr [rbp+r11+var_124]
.text:0000000000408F3D                 inc     r15d
.text:0000000000408F40                 and     ecx, 0FFFh
.text:0000000000408F46                 mov     [rdx+r9+0Ch], r15d
.text:0000000000408F4B                 inc     ecx
.text:0000000000408F4D                 mov     [rdx+r9+8], eax
.text:0000000000408F52                 imul    eax, r15d
.text:0000000000408F56                 mov     r15d, [rbp+r11+var_120]
.text:0000000000408F5E                 inc     r15d
.text:0000000000408F61                 imul    r15d, ecx
.text:0000000000408F65                 imul    r15d, eax
.text:0000000000408F69                 shr     r15d, 0Ah
.text:0000000000408F6D                 mov     [rdx+r9+4], ecx
.text:0000000000408F72                 mov     [rdx+r9], r15d
.text:0000000000408F76
.text:0000000000408F76 loc_408F76:                             ; CODE XREF: __cacheSize+17F↑j
.text:0000000000408F76                 inc     rdi
.text:0000000000408F79                 add     r11, 10h
.text:0000000000408F7D                 cmp     rdi, r8
.text:0000000000408F80                 jl      loc_408EF1
.text:0000000000408F86                 mov     r15, [rbp+var_48]
.text:0000000000408F8A
.text:0000000000408F8A loc_408F8A:                             ; CODE XREF: __cacheSize+E9↑j
.text:0000000000408F8A                                         ; __cacheSize+167↑j
.text:0000000000408F8A                 lea     rax, unk_60FB70
.text:0000000000408F91                 cmp     dword ptr [rax], 0
.text:0000000000408F94                 jnz     loc_409156
.text:0000000000408F9A                 cmp     [rbp+var_18], 2
.text:0000000000408F9E                 jl      loc_409156
.text:0000000000408FA4                 mov     [rbp+var_20], rbx
.text:0000000000408FA8                 lea     rdx, [rbp+var_A0]
.text:0000000000408FAF                 mov     [rbp+var_130], rdx
.text:0000000000408FB6                 mov     rdi, rax
.text:0000000000408FB9                 push    rax
.text:0000000000408FBA                 push    rbx
.text:0000000000408FBB                 push    rcx
.text:0000000000408FBC                 push    rdx
.text:0000000000408FBD                 mov     r8, [rbp+var_130]
.text:0000000000408FC4                 mov     eax, 2
.text:0000000000408FC9                 cpuid
.text:0000000000408FCB                 mov     [r8], eax
.text:0000000000408FCE                 mov     [r8+4], ebx
.text:0000000000408FD2                 mov     [r8+8], ecx
.text:0000000000408FD6                 mov     [r8+0Ch], edx
.text:0000000000408FDA                 cmp     al, 1
.text:0000000000408FDC                 jle     short loc_40902B
.text:0000000000408FDE                 cmp     al, 2
.text:0000000000408FE0                 jle     short loc_409014
.text:0000000000408FE2                 cmp     al, 3
.text:0000000000408FE4                 jle     short loc_408FFD
.text:0000000000408FE6                 mov     eax, 2
.text:0000000000408FEB                 cpuid
.text:0000000000408FED                 mov     [r8+30h], eax
.text:0000000000408FF1                 mov     [r8+34h], ebx
.text:0000000000408FF5                 mov     [r8+38h], ecx
.text:0000000000408FF9                 mov     [r8+3Ch], edx
.text:0000000000408FFD
.text:0000000000408FFD loc_408FFD:                             ; CODE XREF: __cacheSize+264↑j
.text:0000000000408FFD                 mov     eax, 2
.text:0000000000409002                 cpuid
.text:0000000000409004                 mov     [r8+20h], eax
.text:0000000000409008                 mov     [r8+24h], ebx
.text:000000000040900C                 mov     [r8+28h], ecx
.text:0000000000409010                 mov     [r8+2Ch], edx
.text:0000000000409014
.text:0000000000409014 loc_409014:                             ; CODE XREF: __cacheSize+260↑j
.text:0000000000409014                 mov     eax, 2
.text:0000000000409019                 cpuid
.text:000000000040901B                 mov     [r8+10h], eax
.text:000000000040901F                 mov     [r8+14h], ebx
.text:0000000000409023                 mov     [r8+18h], ecx
.text:0000000000409027                 mov     [r8+1Ch], edx
.text:000000000040902B
.text:000000000040902B loc_40902B:                             ; CODE XREF: __cacheSize+25C↑j
.text:000000000040902B                 pop     rdx
.text:000000000040902C                 pop     rcx
.text:000000000040902D                 pop     rbx
.text:000000000040902E                 pop     rax
.text:000000000040902F                 movzx   edx, [rbp+var_A0]
.text:0000000000409036                 mov     ecx, 10h
.text:000000000040903B                 mov     r11d, edx
.text:000000000040903E                 mov     rax, rdi
.text:0000000000409041                 shl     r11, 2
.text:0000000000409045                 cmp     edx, 4
.text:0000000000409048                 mov     rbx, [rbp+var_20]
.text:000000000040904C                 cmovg   r11, rcx
.text:0000000000409050                 xor     edi, edi
.text:0000000000409052                 test    r11, r11
.text:0000000000409055                 jle     loc_409156
.text:000000000040905B                 mov     [rbp+var_50], r10d
.text:000000000040905F                 mov     r10, rax
.text:0000000000409062                 mov     [rbp+var_20], rbx
.text:0000000000409066                 mov     [rbp+var_40], r12
.text:000000000040906A                 mov     [rbp+var_38], r13
.text:000000000040906E                 mov     [rbp+var_30], r14
.text:0000000000409072                 mov     [rbp+var_48], r15
.text:0000000000409076
.text:0000000000409076 loc_409076:                             ; CODE XREF: __cacheSize+3B1↓j
.text:0000000000409076                 test    [rbp+rdi*4+var_9D], 80h
.text:000000000040907E                 jnz     loc_409123
.text:0000000000409084                 xor     r13d, r13d
.text:0000000000409087                 lea     r12, [rbp+rdi*4+var_A0]
.text:000000000040908F
.text:000000000040908F loc_40908F:                             ; CODE XREF: __cacheSize+39D↓j
.text:000000000040908F                 movzx   r14d, byte ptr [r13+r12+0]
.text:0000000000409095                 cmp     r14, 0FFh
.text:000000000040909C                 jz      loc_4091FA
.text:00000000004090A2                 lea     r15, cpuid2_cache_tbl
.text:00000000004090A9                 mov     dl, [r15+r14*8]
.text:00000000004090AD                 and     dl, 7
.text:00000000004090B0                 movzx   esi, dl
.text:00000000004090B3                 test    rsi, rsi
.text:00000000004090B6                 jz      short loc_409116
.text:00000000004090B8                 cmp     rsi, 2
.text:00000000004090BC                 jz      loc_409161
.text:00000000004090C2
.text:00000000004090C2 loc_4090C2:                             ; CODE XREF: __cacheSize+3E5↓j
.text:00000000004090C2                                         ; __cacheSize+43A↓j ...
.text:00000000004090C2                 lea     rbx, unk_60C882
.text:00000000004090C9                 movzx   edx, word ptr [r15+r14*8]
.text:00000000004090CE                 mov     ecx, [r15+r14*8]
.text:00000000004090D2                 and     edx, 7FF8h
.text:00000000004090D8                 and     ecx, 3F8000h
.text:00000000004090DE                 lea     r15, unk_60C884
.text:00000000004090E5                 shl     rsi, 4
.text:00000000004090E9                 movzx   r8d, word ptr [rbx+r14*8]
.text:00000000004090EE                 and     r8d, 0FFC0h
.text:00000000004090F5                 mov     r14d, [r15+r14*8]
.text:00000000004090F9                 shr     edx, 3
.text:00000000004090FC                 shr     ecx, 0Fh
.text:00000000004090FF                 shr     r8d, 6
.text:0000000000409103                 mov     [rsi+r9+4], edx
.text:0000000000409108                 mov     [rsi+r9+8], ecx
.text:000000000040910D                 mov     [rsi+r9+0Ch], r8d
.text:0000000000409112                 mov     [rsi+r9], r14d
.text:0000000000409116
.text:0000000000409116 loc_409116:                             ; CODE XREF: __cacheSize+336↑j
.text:0000000000409116                 inc     r13
.text:0000000000409119                 cmp     r13, 4
.text:000000000040911D                 jl      loc_40908F
.text:0000000000409123
.text:0000000000409123 loc_409123:                             ; CODE XREF: __cacheSize+2FE↑j
.text:0000000000409123                 nop     dword ptr [rax+rax+00000000h]
.text:000000000040912B                 inc     rdi
.text:000000000040912E                 cmp     rdi, r11
.text:0000000000409131                 jl      loc_409076
.text:0000000000409137                 mov     r10d, [rbp+var_50]
.text:000000000040913B                 lea     rsi, unk_60FB6C
.text:0000000000409142                 mov     rbx, [rbp+var_20]
.text:0000000000409146                 mov     r12, [rbp+var_40]
.text:000000000040914A                 mov     r13, [rbp+var_38]
.text:000000000040914E                 mov     r14, [rbp+var_30]
.text:0000000000409152                 mov     r15, [rbp+var_48]
.text:0000000000409156
.text:0000000000409156 loc_409156:                             ; CODE XREF: __cacheSize+70↑j
.text:0000000000409156                                         ; __cacheSize+214↑j ...
.text:0000000000409156                 mov     dword ptr [rsi], 1
.text:000000000040915C                 jmp     loc_408DAA
.text:0000000000409161 ; ---------------------------------------------------------------------------
.text:0000000000409161
.text:0000000000409161 loc_409161:                             ; CODE XREF: __cacheSize+33C↑j
.text:0000000000409161                 cmp     r14, 49h ; 'I'
.text:0000000000409165                 jnz     loc_4090C2
.text:000000000040916B                 mov     [rbp+var_138], 1
.text:0000000000409175                 lea     rdx, [rbp+var_150]
.text:000000000040917C                 mov     [rbp+var_140], rdx
.text:0000000000409183                 push    rax
.text:0000000000409184                 push    rbx
.text:0000000000409185                 push    rcx
.text:0000000000409186                 push    rdx
.text:0000000000409187                 mov     r8, [rbp+var_140]
.text:000000000040918E                 mov     eax, [rbp+var_138]
.text:0000000000409194                 cpuid
.text:0000000000409196                 mov     [r8], eax
.text:0000000000409199                 mov     [r8+4], ebx
.text:000000000040919D                 mov     [r8+8], ecx
.text:00000000004091A1                 mov     [r8+0Ch], edx
.text:00000000004091A5                 pop     rdx
.text:00000000004091A6                 pop     rcx
.text:00000000004091A7                 pop     rbx
.text:00000000004091A8                 pop     rax
.text:00000000004091A9                 mov     ebx, [rbp+var_150]
.text:00000000004091AF                 mov     edx, ebx
.text:00000000004091B1                 shr     edx, 8
.text:00000000004091B4                 and     edx, 0Fh
.text:00000000004091B7                 cmp     edx, 0Fh
.text:00000000004091BA                 jnz     loc_4090C2
.text:00000000004091C0                 mov     ecx, ebx
.text:00000000004091C2                 shr     ecx, 14h
.text:00000000004091C5                 and     ecx, 0F0h
.text:00000000004091CB                 or      ecx, edx
.text:00000000004091CD                 cmp     ecx, 0Fh
.text:00000000004091D0                 jnz     loc_4090C2
.text:00000000004091D6                 mov     edx, ebx
.text:00000000004091D8                 mov     ecx, 3
.text:00000000004091DD                 shr     edx, 0Ch
.text:00000000004091E0                 shr     ebx, 4
.text:00000000004091E3                 and     edx, 0F0h
.text:00000000004091E9                 and     ebx, 0Fh
.text:00000000004091EC                 or      edx, ebx
.text:00000000004091EE                 cmp     edx, 6
.text:00000000004091F1                 cmovz   rsi, rcx
.text:00000000004091F5                 jmp     loc_4090C2
.text:00000000004091FA ; ---------------------------------------------------------------------------
.text:00000000004091FA
.text:00000000004091FA loc_4091FA:                             ; CODE XREF: __cacheSize+31C↑j
.text:00000000004091FA                 mov     rax, r10
.text:00000000004091FD                 lea     rsi, unk_60FB6C
.text:0000000000409204                 pxor    xmm0, xmm0
.text:0000000000409208                 lea     rdx, unk_60FB90
.text:000000000040920F                 movdqa  xmmword ptr [rax], xmm0
.text:0000000000409213                 lea     rax, unk_60FB80
.text:000000000040921A                 mov     r10d, [rbp+var_50]
.text:000000000040921E                 mov     rbx, [rbp+var_20]
.text:0000000000409222                 mov     r12, [rbp+var_40]
.text:0000000000409226                 mov     r13, [rbp+var_38]
.text:000000000040922A                 mov     r14, [rbp+var_30]
.text:000000000040922E                 mov     r15, [rbp+var_48]
.text:0000000000409232                 movdqa  xmmword ptr [rax], xmm0
.text:0000000000409236                 movdqa  xmmword ptr [rdx], xmm0
.text:000000000040923A                 jmp     loc_409156
.text:000000000040923A __cacheSize     endp ; sp-analysis failed
.text:000000000040923A
.text:000000000040923A ; ---------------------------------------------------------------------------
.text:000000000040923F                 align 20h
.text:000000000040923F ; } // starts at 408D80
.text:0000000000409240
.text:0000000000409240 ; =============== S U B R O U T I N E =======================================
.text:0000000000409240
.text:0000000000409240 ; Attributes: bp-based frame
.text:0000000000409240
.text:0000000000409240 __sti__$E_0     proc near               ; CODE XREF: __libc_csu_init+59↓p
.text:0000000000409240                                         ; DATA XREF: .init_array:__init_array_start↓o
.text:0000000000409240
.text:0000000000409240 var_190         = dword ptr -190h
.text:0000000000409240 var_180         = qword ptr -180h
.text:0000000000409240 var_178         = dword ptr -178h
.text:0000000000409240 var_174         = dword ptr -174h
.text:0000000000409240 var_170         = qword ptr -170h
.text:0000000000409240 var_168         = byte ptr -168h
.text:0000000000409240 var_164         = dword ptr -164h
.text:0000000000409240 var_160         = dword ptr -160h
.text:0000000000409240 var_E8          = qword ptr -0E8h
.text:0000000000409240 var_E0          = byte ptr -0E0h
.text:0000000000409240 var_DD          = byte ptr -0DDh
.text:0000000000409240 var_A0          = qword ptr -0A0h
.text:0000000000409240 var_98          = qword ptr -98h
.text:0000000000409240 var_90          = qword ptr -90h
.text:0000000000409240 var_88          = dword ptr -88h
.text:0000000000409240 var_84          = dword ptr -84h
.text:0000000000409240 var_80          = dword ptr -80h
.text:0000000000409240 var_7C          = dword ptr -7Ch
.text:0000000000409240 var_78          = qword ptr -78h
.text:0000000000409240 var_70          = qword ptr -70h
.text:0000000000409240 var_68          = qword ptr -68h
.text:0000000000409240 var_60          = qword ptr -60h
.text:0000000000409240 var_58          = qword ptr -58h
.text:0000000000409240 var_50          = dword ptr -50h
.text:0000000000409240 var_4C          = dword ptr -4Ch
.text:0000000000409240 var_48          = qword ptr -48h
.text:0000000000409240 var_40          = qword ptr -40h
.text:0000000000409240 var_38          = qword ptr -38h
.text:0000000000409240 var_30          = dword ptr -30h
.text:0000000000409240 var_2C          = dword ptr -2Ch
.text:0000000000409240 var_28          = dword ptr -28h
.text:0000000000409240 var_24          = dword ptr -24h
.text:0000000000409240 var_20          = dword ptr -20h
.text:0000000000409240 var_1C          = dword ptr -1Ch
.text:0000000000409240 var_18          = qword ptr -18h
.text:0000000000409240 var_10          = dword ptr -10h
.text:0000000000409240 var_C           = dword ptr -0Ch
.text:0000000000409240 var_8           = qword ptr -8
.text:0000000000409240
.text:0000000000409240 ; __unwind {
.text:0000000000409240                 push    rbp
.text:0000000000409241                 mov     rbp, rsp
.text:0000000000409244                 sub     rsp, 190h
.text:000000000040924B                 lea     r11, unk_60FB6C
.text:0000000000409252                 xor     r10d, r10d
.text:0000000000409255                 xor     r8d, r8d
.text:0000000000409258                 mov     [rbp+var_8], rbx
.text:000000000040925C                 xor     r9d, r9d
.text:000000000040925F                 cmp     dword ptr [r11], 0
.text:0000000000409263                 jz      loc_4094A7
.text:0000000000409269                 lea     rsi, __libirc_cache_tbl
.text:0000000000409270
.text:0000000000409270 loc_409270:                             ; CODE XREF: __sti__$E_0+63D↓j
.text:0000000000409270                 cmp     dword ptr [rsi], 0
.text:0000000000409273                 jz      loc_40936A
.text:0000000000409279                 lea     rax, unk_60FB64
.text:0000000000409280                 cmp     dword ptr [rax], 0
.text:0000000000409283                 jbe     short loc_4092B7
.text:0000000000409285                 push    rbx
.text:0000000000409286                 mov     eax, 1
.text:000000000040928B                 cpuid
.text:000000000040928D                 mov     [rbp+var_24], ebx
.text:0000000000409290                 mov     [rbp+var_1C], edx
.text:0000000000409293                 mov     [rbp+var_C], eax
.text:0000000000409296                 pop     rbx
.text:0000000000409297                 mov     r10d, [rbp+var_1C]
.text:000000000040929B                 test    r10d, 4000000h
.text:00000000004092A2                 jz      short loc_4092AC
.text:00000000004092A4                 mov     r10d, 2
.text:00000000004092AA                 jmp     short loc_4092B7
.text:00000000004092AC ; ---------------------------------------------------------------------------
.text:00000000004092AC
.text:00000000004092AC loc_4092AC:                             ; CODE XREF: __sti__$E_0+62↑j
.text:00000000004092AC                 and     r10d, 800000h
.text:00000000004092B3                 shr     r10d, 17h
.text:00000000004092B7
.text:00000000004092B7 loc_4092B7:                             ; CODE XREF: __sti__$E_0+43↑j
.text:00000000004092B7                                         ; __sti__$E_0+6A↑j
.text:00000000004092B7                 lea     rax, unk_60FB70
.text:00000000004092BE                 mov     eax, [rax]
.text:00000000004092C0                 test    eax, eax
.text:00000000004092C2                 jbe     short loc_4092DC
.text:00000000004092C4                 lea     r9, unk_60FB74
.text:00000000004092CB                 mov     r8d, eax
.text:00000000004092CE                 lea     rdx, unk_60FB78
.text:00000000004092D5                 mov     r9d, [r9]
.text:00000000004092D8                 imul    r9d, [rdx]
.text:00000000004092DC
.text:00000000004092DC loc_4092DC:                             ; CODE XREF: __sti__$E_0+82↑j
.text:00000000004092DC                 lea     rdx, unk_60FB80
.text:00000000004092E3                 mov     edx, [rdx]
.text:00000000004092E5                 cmp     edx, r8d
.text:00000000004092E8                 jbe     short loc_409302
.text:00000000004092EA                 lea     r9, unk_60FB84
.text:00000000004092F1                 mov     r8d, edx
.text:00000000004092F4                 lea     rdx, unk_60FB88
.text:00000000004092FB                 mov     r9d, [r9]
.text:00000000004092FE                 imul    r9d, [rdx]
.text:0000000000409302
.text:0000000000409302 loc_409302:                             ; CODE XREF: __sti__$E_0+A8↑j
.text:0000000000409302                 lea     rdx, unk_60FB90
.text:0000000000409309                 mov     edx, [rdx]
.text:000000000040930B                 cmp     edx, r8d
.text:000000000040930E                 jbe     short loc_409328
.text:0000000000409310                 lea     r9, unk_60FB94
.text:0000000000409317                 mov     r8d, edx
.text:000000000040931A                 lea     rdx, unk_60FB98
.text:0000000000409321                 mov     r9d, [r9]
.text:0000000000409324                 imul    r9d, [rdx]
.text:0000000000409328
.text:0000000000409328 loc_409328:                             ; CODE XREF: __sti__$E_0+CE↑j
.text:0000000000409328                 shl     r8d, 0Ah
.text:000000000040932C                 shl     eax, 0Ah
.text:000000000040932F                 mov     edx, r8d
.text:0000000000409332                 mov     ecx, eax
.text:0000000000409334                 shr     edx, 1Fh
.text:0000000000409337                 shr     ecx, 1Fh
.text:000000000040933A                 mov     cs:__libirc_largest_cache_size, r8d
.text:0000000000409341                 add     r8d, edx
.text:0000000000409344                 mov     cs:__libirc_data_cache_size, eax
.text:000000000040934A                 add     eax, ecx
.text:000000000040934C                 sar     r8d, 1
.text:000000000040934F                 sar     eax, 1
.text:0000000000409351                 mov     cs:__libirc_largest_cache_size_half, r8d
.text:0000000000409358                 mov     cs:__libirc_data_cache_size_half, eax
.text:000000000040935E                 mov     cs:__libirc_largest_cachelinesize, r9d
.text:0000000000409365                 jmp     loc_409490
.text:000000000040936A ; ---------------------------------------------------------------------------
.text:000000000040936A
.text:000000000040936A loc_40936A:                             ; CODE XREF: __sti__$E_0+33↑j
.text:000000000040936A                 xor     edx, edx
.text:000000000040936C                 mov     rax, 69746E6568747541h
.text:0000000000409376                 lea     rsi, [rbp+var_88]
.text:000000000040937D                 mov     [rbp+var_78], rax
.text:0000000000409381                 mov     dword ptr [rbp+var_70], 444D4163h
.text:0000000000409388                 mov     byte ptr [rbp+var_70+4], dl
.text:000000000040938B                 mov     [rbp+var_10], edx
.text:000000000040938E                 mov     [rbp+var_18], rsi
.text:0000000000409392                 push    rax
.text:0000000000409393                 push    rbx
.text:0000000000409394                 push    rcx
.text:0000000000409395                 push    rdx
.text:0000000000409396                 mov     r8, [rbp+var_18]
.text:000000000040939A                 mov     eax, [rbp+var_10]
.text:000000000040939D                 cpuid
.text:000000000040939F                 mov     [r8], eax
.text:00000000004093A2                 mov     [r8+4], ebx
.text:00000000004093A6                 mov     [r8+8], ecx
.text:00000000004093AA                 mov     [r8+0Ch], edx
.text:00000000004093AE                 pop     rdx
.text:00000000004093AF                 pop     rcx
.text:00000000004093B0                 pop     rbx
.text:00000000004093B1                 pop     rax
.text:00000000004093B2                 mov     eax, dword ptr [rbp+var_78]
.text:00000000004093B5                 cmp     eax, [rbp+var_84]
.text:00000000004093BB                 jnz     loc_409490
.text:00000000004093C1                 mov     eax, dword ptr [rbp+var_78+4]
.text:00000000004093C4                 cmp     eax, [rbp+var_7C]
.text:00000000004093C7                 jnz     loc_409490
.text:00000000004093CD                 mov     eax, dword ptr [rbp+var_70]
.text:00000000004093D0                 cmp     eax, [rbp+var_80]
.text:00000000004093D3                 jnz     loc_409490
.text:00000000004093D9                 mov     [rbp+var_28], 1
.text:00000000004093E0                 mov     [rbp+var_40], rsi
.text:00000000004093E4                 push    rax
.text:00000000004093E5                 push    rbx
.text:00000000004093E6                 push    rcx
.text:00000000004093E7                 push    rdx
.text:00000000004093E8                 mov     r8, [rbp+var_40]
.text:00000000004093EC                 mov     eax, [rbp+var_28]
.text:00000000004093EF                 cpuid
.text:00000000004093F1                 mov     [r8], eax
.text:00000000004093F4                 mov     [r8+4], ebx
.text:00000000004093F8                 mov     [r8+8], ecx
.text:00000000004093FC                 mov     [r8+0Ch], edx
.text:0000000000409400                 pop     rdx
.text:0000000000409401                 pop     rcx
.text:0000000000409402                 pop     rbx
.text:0000000000409403                 pop     rax
.text:0000000000409404                 mov     r10d, [rbp+var_7C]
.text:0000000000409408                 and     r10d, 800000h
.text:000000000040940F                 shr     r10d, 17h
.text:0000000000409413                 mov     [rbp+var_20], 80000000h
.text:000000000040941A                 mov     [rbp+var_38], rsi
.text:000000000040941E                 push    rax
.text:000000000040941F                 push    rbx
.text:0000000000409420                 push    rcx
.text:0000000000409421                 push    rdx
.text:0000000000409422                 mov     r8, [rbp+var_38]
.text:0000000000409426                 mov     eax, [rbp+var_20]
.text:0000000000409429                 cpuid
.text:000000000040942B                 mov     [r8], eax
.text:000000000040942E                 mov     [r8+4], ebx
.text:0000000000409432                 mov     [r8+8], ecx
.text:0000000000409436                 mov     [r8+0Ch], edx
.text:000000000040943A                 pop     rdx
.text:000000000040943B                 pop     rcx
.text:000000000040943C                 pop     rbx
.text:000000000040943D                 pop     rax
.text:000000000040943E                 cmp     [rbp+var_88], 80000006h
.text:0000000000409448                 jb      short loc_409490
.text:000000000040944A                 mov     [rbp+var_50], 80000006h
.text:0000000000409451                 mov     [rbp+var_A0], rsi
.text:0000000000409458                 push    rax
.text:0000000000409459                 push    rbx
.text:000000000040945A                 push    rcx
.text:000000000040945B                 push    rdx
.text:000000000040945C                 mov     r8, [rbp+var_A0]
.text:0000000000409463                 mov     eax, [rbp+var_50]
.text:0000000000409466                 cpuid
.text:0000000000409468                 mov     [r8], eax
.text:000000000040946B                 mov     [r8+4], ebx
.text:000000000040946F                 mov     [r8+8], ecx
.text:0000000000409473                 mov     [r8+0Ch], edx
.text:0000000000409477                 pop     rdx
.text:0000000000409478                 pop     rcx
.text:0000000000409479                 pop     rbx
.text:000000000040947A                 pop     rax
.text:000000000040947B                 movzx   eax, word ptr [rbp+var_80+2]
.text:000000000040947F                 shl     eax, 0Ah
.text:0000000000409482                 mov     cs:__libirc_largest_cache_size, eax
.text:0000000000409488                 shr     eax, 1
.text:000000000040948A                 mov     cs:__libirc_largest_cache_size_half, eax
.text:0000000000409490
.text:0000000000409490 loc_409490:                             ; CODE XREF: __sti__$E_0+125↑j
.text:0000000000409490                                         ; __sti__$E_0+17B↑j ...
.text:0000000000409490                 mov     rbx, [rbp+var_8]
.text:0000000000409494                 mov     cs:__libirc_mem_ops_method, r10d
.text:000000000040949B                 mov     cs:__libirc_tmp, r10d
.text:00000000004094A2                 mov     rsp, rbp
.text:00000000004094A5                 pop     rbp
.text:00000000004094A6                 retn
.text:00000000004094A7 ; ---------------------------------------------------------------------------
.text:00000000004094A7
.text:00000000004094A7 loc_4094A7:                             ; CODE XREF: __sti__$E_0+23↑j
.text:00000000004094A7                 mov     [rbp+var_2C], 0
.text:00000000004094AE                 push    rax
.text:00000000004094AF                 push    rcx
.text:00000000004094B0                 pushfq
.text:00000000004094B1                 pop     rax
.text:00000000004094B2                 mov     ecx, eax
.text:00000000004094B4                 xor     eax, 200000h
.text:00000000004094B9                 push    rax
.text:00000000004094BA                 popfq
.text:00000000004094BB                 pushfq
.text:00000000004094BC                 pop     rax
.text:00000000004094BD                 cmp     eax, ecx
.text:00000000004094BF                 jz      short loc_4094C9
.text:00000000004094C1                 mov     [rbp+var_2C], 1
.text:00000000004094C8                 push    rcx
.text:00000000004094C9
.text:00000000004094C9 loc_4094C9:                             ; CODE XREF: __sti__$E_0+27F↑j
.text:00000000004094C9                 popfq
.text:00000000004094CA                 pop     rcx
.text:00000000004094CB                 pop     rax
.text:00000000004094CC                 cmp     [rbp+var_2C], 0
.text:00000000004094D0                 jnz     short loc_4094DE
.text:00000000004094D2                 lea     rsi, __libirc_cache_tbl
.text:00000000004094D9                 jmp     loc_409876
.text:00000000004094DE ; ---------------------------------------------------------------------------
.text:00000000004094DE
.text:00000000004094DE loc_4094DE:                             ; CODE XREF: __sti__$E_0+290↑j
.text:00000000004094DE                 xor     edx, edx
.text:00000000004094E0                 lea     rbx, [rbp+var_4C]
.text:00000000004094E4                 mov     rax, 49656E69756E6547h
.text:00000000004094EE                 mov     [rbp+var_48], rbx
.text:00000000004094F2                 mov     [rbp+var_98], rax
.text:00000000004094F9                 mov     [rbp+var_90], 6C65746Eh
.text:0000000000409504                 mov     [rbp+var_30], edx
.text:0000000000409507                 mov     [rbx], edx
.text:0000000000409509                 push    rax
.text:000000000040950A                 push    rbx
.text:000000000040950B                 push    rcx
.text:000000000040950C                 push    rdx
.text:000000000040950D                 mov     eax, 0
.text:0000000000409512                 cpuid
.text:0000000000409514                 cmp     dword ptr [rbp+var_98], ebx
.text:000000000040951A                 jnz     short loc_409539
.text:000000000040951C                 cmp     dword ptr [rbp+var_98+4], edx
.text:0000000000409522                 jnz     short loc_409539
.text:0000000000409524                 cmp     dword ptr [rbp+var_90], ecx
.text:000000000040952A                 jnz     short loc_409539
.text:000000000040952C                 mov     [rbp+var_30], 1
.text:0000000000409533                 mov     rdx, [rbp+var_48]
.text:0000000000409537                 mov     [rdx], eax
.text:0000000000409539
.text:0000000000409539 loc_409539:                             ; CODE XREF: __sti__$E_0+2DA↑j
.text:0000000000409539                                         ; __sti__$E_0+2E2↑j ...
.text:0000000000409539                 pop     rdx
.text:000000000040953A                 pop     rcx
.text:000000000040953B                 pop     rbx
.text:000000000040953C                 pop     rax
.text:000000000040953D                 lea     rsi, __libirc_cache_tbl
.text:0000000000409544                 lea     rdx, unk_60FB64
.text:000000000040954B                 mov     eax, [rbp+var_30]
.text:000000000040954E                 mov     ecx, [rbp+var_4C]
.text:0000000000409551                 cmp     ecx, 4
.text:0000000000409554                 mov     [rsi], eax
.text:0000000000409556                 mov     [rdx], ecx
.text:0000000000409558                 jl      loc_409693
.text:000000000040955E                 mov     [rbp+var_174], 0
.text:0000000000409568                 lea     rax, [rbp+var_168]
.text:000000000040956F                 mov     [rbp+var_E8], rax
.text:0000000000409576                 mov     [rbp+var_60], r15
.text:000000000040957A                 mov     r15d, r8d
.text:000000000040957D                 push    rax
.text:000000000040957E                 push    rbx
.text:000000000040957F                 push    rcx
.text:0000000000409580                 push    rdx
.text:0000000000409581                 push    rdi
.text:0000000000409582                 mov     r8, [rbp+var_E8]
.text:0000000000409589                 mov     edi, 0
.text:000000000040958E
.text:000000000040958E loc_40958E:                             ; CODE XREF: __sti__$E_0+379↓j
.text:000000000040958E                 mov     ecx, edi
.text:0000000000409590                 mov     eax, 4
.text:0000000000409595                 cpuid
.text:0000000000409597                 test    eax, 1Fh
.text:000000000040959C                 jz      short loc_4095BB
.text:000000000040959E                 mov     [r8], eax
.text:00000000004095A1                 mov     [r8+4], ebx
.text:00000000004095A5                 mov     [r8+8], ecx
.text:00000000004095A9                 mov     [r8+0Ch], edx
.text:00000000004095AD                 add     edi, 1
.text:00000000004095B0                 cmp     edi, 8
.text:00000000004095B3                 jge     short loc_4095BB
.text:00000000004095B5                 add     r8, 10h
.text:00000000004095B9                 jmp     short loc_40958E
.text:00000000004095BB ; ---------------------------------------------------------------------------
.text:00000000004095BB
.text:00000000004095BB loc_4095BB:                             ; CODE XREF: __sti__$E_0+35C↑j
.text:00000000004095BB                                         ; __sti__$E_0+373↑j
.text:00000000004095BB                 mov     [rbp+var_174], edi
.text:00000000004095C1                 pop     rdi
.text:00000000004095C2                 pop     rdx
.text:00000000004095C3                 pop     rcx
.text:00000000004095C4                 pop     rbx
.text:00000000004095C5                 pop     rax
.text:00000000004095C6                 xor     eax, eax
.text:00000000004095C8                 mov     r8d, r15d
.text:00000000004095CB                 movsxd  rdx, [rbp+var_174]
.text:00000000004095D2                 xor     ecx, ecx
.text:00000000004095D4                 mov     r15, [rbp+var_60]
.text:00000000004095D8                 test    rdx, rdx
.text:00000000004095DB                 jle     loc_409693
.text:00000000004095E1                 mov     [rbp+var_70], r13
.text:00000000004095E5                 mov     [rbp+var_68], r14
.text:00000000004095E9                 mov     [rbp+var_60], r15
.text:00000000004095ED
.text:00000000004095ED loc_4095ED:                             ; CODE XREF: __sti__$E_0+441↓j
.text:00000000004095ED                 mov     dil, [rbp+rcx+var_168]
.text:00000000004095F5                 mov     bl, dil
.text:00000000004095F8                 and     bl, 1Dh
.text:00000000004095FB                 cmp     bl, 1
.text:00000000004095FE                 jnz     short loc_409677
.text:0000000000409600                 and     dil, 0E0h
.text:0000000000409604                 shr     dil, 5
.text:0000000000409608                 movzx   r15d, dil
.text:000000000040960C                 shl     r15, 4
.text:0000000000409610                 mov     r13d, [rbp+rcx+var_164]
.text:0000000000409618                 movzx   ebx, word ptr [rbp+rcx+var_164+2]
.text:0000000000409620                 and     r13d, 3FF000h
.text:0000000000409627                 and     ebx, 0FFC0h
.text:000000000040962D                 movzx   edi, word ptr [rbp+rcx+var_164]
.text:0000000000409635                 shr     r13d, 0Ch
.text:0000000000409639                 and     edi, 0FFFh
.text:000000000040963F                 shr     ebx, 6
.text:0000000000409642                 inc     edi
.text:0000000000409644                 mov     r14d, [rbp+rcx+var_160]
.text:000000000040964C                 inc     r13d
.text:000000000040964F                 inc     ebx
.text:0000000000409651                 inc     r14d
.text:0000000000409654                 mov     [r15+rsi+8], r13d
.text:0000000000409659                 imul    r13d, ebx
.text:000000000040965D                 imul    r14d, edi
.text:0000000000409661                 imul    r14d, r13d
.text:0000000000409665                 shr     r14d, 0Ah
.text:0000000000409669                 mov     [r15+rsi+4], edi
.text:000000000040966E                 mov     [r15+rsi+0Ch], ebx
.text:0000000000409673                 mov     [r15+rsi], r14d
.text:0000000000409677
.text:0000000000409677 loc_409677:                             ; CODE XREF: __sti__$E_0+3BE↑j
.text:0000000000409677                 inc     rax
.text:000000000040967A                 add     rcx, 10h
.text:000000000040967E                 cmp     rax, rdx
.text:0000000000409681                 jl      loc_4095ED
.text:0000000000409687                 mov     r13, [rbp+var_70]
.text:000000000040968B                 mov     r14, [rbp+var_68]
.text:000000000040968F                 mov     r15, [rbp+var_60]
.text:0000000000409693
.text:0000000000409693 loc_409693:                             ; CODE XREF: __sti__$E_0+318↑j
.text:0000000000409693                                         ; __sti__$E_0+39B↑j
.text:0000000000409693                 lea     rax, unk_60FB70
.text:000000000040969A                 cmp     dword ptr [rax], 0
.text:000000000040969D                 jnz     loc_409876
.text:00000000004096A3                 cmp     [rbp+var_4C], 2
.text:00000000004096A7                 jl      loc_409876
.text:00000000004096AD                 mov     [rbp+var_60], r15
.text:00000000004096B1                 lea     rdx, [rbp+var_E0]
.text:00000000004096B8                 mov     [rbp+var_170], rdx
.text:00000000004096BF                 mov     rdi, rax
.text:00000000004096C2                 mov     r15d, r8d
.text:00000000004096C5                 push    rax
.text:00000000004096C6                 push    rbx
.text:00000000004096C7                 push    rcx
.text:00000000004096C8                 push    rdx
.text:00000000004096C9                 mov     r8, [rbp+var_170]
.text:00000000004096D0                 mov     eax, 2
.text:00000000004096D5                 cpuid
.text:00000000004096D7                 mov     [r8], eax
.text:00000000004096DA                 mov     [r8+4], ebx
.text:00000000004096DE                 mov     [r8+8], ecx
.text:00000000004096E2                 mov     [r8+0Ch], edx
.text:00000000004096E6                 cmp     al, 1
.text:00000000004096E8                 jle     short loc_409737
.text:00000000004096EA                 cmp     al, 2
.text:00000000004096EC                 jle     short loc_409720
.text:00000000004096EE                 cmp     al, 3
.text:00000000004096F0                 jle     short loc_409709
.text:00000000004096F2                 mov     eax, 2
.text:00000000004096F7                 cpuid
.text:00000000004096F9                 mov     [r8+30h], eax
.text:00000000004096FD                 mov     [r8+34h], ebx
.text:0000000000409701                 mov     [r8+38h], ecx
.text:0000000000409705                 mov     [r8+3Ch], edx
.text:0000000000409709
.text:0000000000409709 loc_409709:                             ; CODE XREF: __sti__$E_0+4B0↑j
.text:0000000000409709                 mov     eax, 2
.text:000000000040970E                 cpuid
.text:0000000000409710                 mov     [r8+20h], eax
.text:0000000000409714                 mov     [r8+24h], ebx
.text:0000000000409718                 mov     [r8+28h], ecx
.text:000000000040971C                 mov     [r8+2Ch], edx
.text:0000000000409720
.text:0000000000409720 loc_409720:                             ; CODE XREF: __sti__$E_0+4AC↑j
.text:0000000000409720                 mov     eax, 2
.text:0000000000409725                 cpuid
.text:0000000000409727                 mov     [r8+10h], eax
.text:000000000040972B                 mov     [r8+14h], ebx
.text:000000000040972F                 mov     [r8+18h], ecx
.text:0000000000409733                 mov     [r8+1Ch], edx
.text:0000000000409737
.text:0000000000409737 loc_409737:                             ; CODE XREF: __sti__$E_0+4A8↑j
.text:0000000000409737                 pop     rdx
.text:0000000000409738                 pop     rcx
.text:0000000000409739                 pop     rbx
.text:000000000040973A                 pop     rax
.text:000000000040973B                 movzx   ecx, [rbp+var_E0]
.text:0000000000409742                 mov     ebx, 10h
.text:0000000000409747                 mov     edx, ecx
.text:0000000000409749                 mov     rax, rdi
.text:000000000040974C                 shl     rdx, 2
.text:0000000000409750                 cmp     ecx, 4
.text:0000000000409753                 mov     r8d, r15d
.text:0000000000409756                 cmovg   rdx, rbx
.text:000000000040975A                 xor     edi, edi
.text:000000000040975C                 mov     r15, [rbp+var_60]
.text:0000000000409760                 test    rdx, rdx
.text:0000000000409763                 jle     loc_409876
.text:0000000000409769                 mov     dword ptr [rbp+var_78], r10d
.text:000000000040976D                 mov     r10, rax
.text:0000000000409770                 mov     [rbp+var_80], r9d
.text:0000000000409774                 mov     [rbp+var_88], r8d
.text:000000000040977B                 mov     [rbp+var_58], r12
.text:000000000040977F                 mov     r12, rdx
.text:0000000000409782                 mov     [rbp+var_70], r13
.text:0000000000409786                 mov     [rbp+var_68], r14
.text:000000000040978A                 mov     [rbp+var_60], r15
.text:000000000040978E
.text:000000000040978E loc_40978E:                             ; CODE XREF: __sti__$E_0+60A↓j
.text:000000000040978E                 test    [rbp+rdi*4+var_DD], 80h
.text:0000000000409796                 jnz     loc_40983C
.text:000000000040979C                 xor     r13d, r13d
.text:000000000040979F                 lea     r11, [rbp+rdi*4+var_E0]
.text:00000000004097A7
.text:00000000004097A7 loc_4097A7:                             ; CODE XREF: __sti__$E_0+5F6↓j
.text:00000000004097A7                 movzx   r14d, byte ptr [r13+r11+0]
.text:00000000004097AD                 cmp     r14, 0FFh
.text:00000000004097B4                 jz      loc_409922
.text:00000000004097BA                 lea     r15, cpuid2_cache_tbl
.text:00000000004097C1                 mov     cl, [r15+r14*8]
.text:00000000004097C5                 and     cl, 7
.text:00000000004097C8                 movzx   r9d, cl
.text:00000000004097CC                 test    r9, r9
.text:00000000004097CF                 jz      short loc_40982F
.text:00000000004097D1                 cmp     r9, 2
.text:00000000004097D5                 jz      loc_409882
.text:00000000004097DB
.text:00000000004097DB loc_4097DB:                             ; CODE XREF: __sti__$E_0+646↓j
.text:00000000004097DB                                         ; __sti__$E_0+69D↓j ...
.text:00000000004097DB                 shl     r9, 4
.text:00000000004097DF                 lea     r8, unk_60C882
.text:00000000004097E6                 movzx   ecx, word ptr [r15+r14*8]
.text:00000000004097EB                 and     ecx, 7FF8h
.text:00000000004097F1                 shr     ecx, 3
.text:00000000004097F4                 mov     [r9+rsi+4], ecx
.text:00000000004097F9                 lea     rcx, unk_60C884
.text:0000000000409800                 mov     ebx, [r15+r14*8]
.text:0000000000409804                 movzx   r15d, word ptr [r8+r14*8]
.text:0000000000409809                 and     ebx, 3F8000h
.text:000000000040980F                 and     r15d, 0FFC0h
.text:0000000000409816                 mov     r14d, [rcx+r14*8]
.text:000000000040981A                 shr     ebx, 0Fh
.text:000000000040981D                 shr     r15d, 6
.text:0000000000409821                 mov     [r9+rsi+8], ebx
.text:0000000000409826                 mov     [r9+rsi+0Ch], r15d
.text:000000000040982B                 mov     [r9+rsi], r14d
.text:000000000040982F
.text:000000000040982F loc_40982F:                             ; CODE XREF: __sti__$E_0+58F↑j
.text:000000000040982F                 inc     r13
.text:0000000000409832                 cmp     r13, 4
.text:0000000000409836                 jl      loc_4097A7
.text:000000000040983C
.text:000000000040983C loc_40983C:                             ; CODE XREF: __sti__$E_0+556↑j
.text:000000000040983C                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000409844                 inc     rdi
.text:0000000000409847                 cmp     rdi, r12
.text:000000000040984A                 jl      loc_40978E
.text:0000000000409850                 mov     r10d, dword ptr [rbp+var_78]
.text:0000000000409854                 lea     r11, unk_60FB6C
.text:000000000040985B                 mov     r9d, [rbp+var_80]
.text:000000000040985F                 mov     r8d, [rbp+var_88]
.text:0000000000409866                 mov     r12, [rbp+var_58]
.text:000000000040986A                 mov     r13, [rbp+var_70]
.text:000000000040986E                 mov     r14, [rbp+var_68]
.text:0000000000409872                 mov     r15, [rbp+var_60]
.text:0000000000409876
.text:0000000000409876 loc_409876:                             ; CODE XREF: __sti__$E_0+299↑j
.text:0000000000409876                                         ; __sti__$E_0+45D↑j ...
.text:0000000000409876                 mov     dword ptr [r11], 1
.text:000000000040987D                 jmp     loc_409270
.text:0000000000409882 ; ---------------------------------------------------------------------------
.text:0000000000409882
.text:0000000000409882 loc_409882:                             ; CODE XREF: __sti__$E_0+595↑j
.text:0000000000409882                 cmp     r14, 49h ; 'I'
.text:0000000000409886                 jnz     loc_4097DB
.text:000000000040988C                 mov     [rbp+var_178], 1
.text:0000000000409896                 lea     rcx, [rbp+var_190]
.text:000000000040989D                 mov     [rbp+var_180], rcx
.text:00000000004098A4                 push    rax
.text:00000000004098A5                 push    rbx
.text:00000000004098A6                 push    rcx
.text:00000000004098A7                 push    rdx
.text:00000000004098A8                 mov     r8, [rbp+var_180]
.text:00000000004098AF                 mov     eax, [rbp+var_178]
.text:00000000004098B5                 cpuid
.text:00000000004098B7                 mov     [r8], eax
.text:00000000004098BA                 mov     [r8+4], ebx
.text:00000000004098BE                 mov     [r8+8], ecx
.text:00000000004098C2                 mov     [r8+0Ch], edx
.text:00000000004098C6                 pop     rdx
.text:00000000004098C7                 pop     rcx
.text:00000000004098C8                 pop     rbx
.text:00000000004098C9                 pop     rax
.text:00000000004098CA                 mov     r8d, [rbp+var_190]
.text:00000000004098D1                 mov     ecx, r8d
.text:00000000004098D4                 shr     ecx, 8
.text:00000000004098D7                 and     ecx, 0Fh
.text:00000000004098DA                 cmp     ecx, 0Fh
.text:00000000004098DD                 jnz     loc_4097DB
.text:00000000004098E3                 mov     ebx, r8d
.text:00000000004098E6                 shr     ebx, 14h
.text:00000000004098E9                 and     ebx, 0F0h
.text:00000000004098EF                 or      ebx, ecx
.text:00000000004098F1                 cmp     ebx, 0Fh
.text:00000000004098F4                 jnz     loc_4097DB
.text:00000000004098FA                 mov     ecx, r8d
.text:00000000004098FD                 mov     ebx, 3
.text:0000000000409902                 shr     ecx, 0Ch
.text:0000000000409905                 shr     r8d, 4
.text:0000000000409909                 and     ecx, 0F0h
.text:000000000040990F                 and     r8d, 0Fh
.text:0000000000409913                 or      ecx, r8d
.text:0000000000409916                 cmp     ecx, 6
.text:0000000000409919                 cmovz   r9, rbx
.text:000000000040991D                 jmp     loc_4097DB
.text:0000000000409922 ; ---------------------------------------------------------------------------
.text:0000000000409922
.text:0000000000409922 loc_409922:                             ; CODE XREF: __sti__$E_0+574↑j
.text:0000000000409922                 mov     rax, r10
.text:0000000000409925                 lea     r11, unk_60FB6C
.text:000000000040992C                 pxor    xmm0, xmm0
.text:0000000000409930                 lea     rdx, unk_60FB90
.text:0000000000409937                 movdqa  xmmword ptr [rax], xmm0
.text:000000000040993B                 lea     rax, unk_60FB80
.text:0000000000409942                 mov     r10d, dword ptr [rbp+var_78]
.text:0000000000409946                 mov     r9d, [rbp+var_80]
.text:000000000040994A                 mov     r8d, [rbp+var_88]
.text:0000000000409951                 mov     r12, [rbp+var_58]
.text:0000000000409955                 mov     r13, [rbp+var_70]
.text:0000000000409959                 mov     r14, [rbp+var_68]
.text:000000000040995D                 mov     r15, [rbp+var_60]
.text:0000000000409961                 movdqa  xmmword ptr [rax], xmm0
.text:0000000000409965                 movdqa  xmmword ptr [rdx], xmm0
.text:0000000000409969                 jmp     loc_409876
.text:0000000000409969 __sti__$E_0     endp ; sp-analysis failed
.text:0000000000409969
.text:0000000000409969 ; ---------------------------------------------------------------------------
.text:000000000040996E                 align 10h
.text:000000000040996E ; } // starts at 409240
.text:0000000000409970
.text:0000000000409970 ; =============== S U B R O U T I N E =======================================
.text:0000000000409970
.text:0000000000409970
.text:0000000000409970                 public __intel_proc_init_ftzdazule
.text:0000000000409970 __intel_proc_init_ftzdazule proc near   ; CODE XREF: __intel_new_feature_proc_init+2D2↑p
.text:0000000000409970
.text:0000000000409970 s               = dword ptr -218h
.text:0000000000409970 var_1FC         = dword ptr -1FCh
.text:0000000000409970
.text:0000000000409970 ; __unwind {
.text:0000000000409970                 push    r15
.text:0000000000409972                 push    rbx
.text:0000000000409973                 push    rbp
.text:0000000000409974                 sub     rsp, 200h
.text:000000000040997B                 mov     ebx, esi
.text:000000000040997D                 mov     ebp, ebx
.text:000000000040997F                 mov     r15d, ebx
.text:0000000000409982                 and     ebp, 4
.text:0000000000409985                 and     r15d, 2
.text:0000000000409989                 jz      short loc_409993
.text:000000000040998B                 test    edi, 2
.text:0000000000409991                 jz      short loc_40999F
.text:0000000000409993
.text:0000000000409993 loc_409993:                             ; CODE XREF: __intel_proc_init_ftzdazule+19↑j
.text:0000000000409993                 test    ebp, ebp
.text:0000000000409995                 jz      short loc_4099C7
.text:0000000000409997                 test    edi, 4
.text:000000000040999D                 jnz     short loc_4099C7
.text:000000000040999F
.text:000000000040999F loc_40999F:                             ; CODE XREF: __intel_proc_init_ftzdazule+21↑j
.text:000000000040999F                 xor     esi, esi        ; c
.text:00000000004099A1                 lea     rdi, [rsp+218h+s] ; s
.text:00000000004099A5                 mov     edx, 200h       ; n
.text:00000000004099AA                 call    _memset
.text:00000000004099AF                 fxsave  [rsp+218h+s]
.text:00000000004099B3                 xor     edx, edx
.text:00000000004099B5                 mov     eax, [rsp+218h+var_1FC]
.text:00000000004099B9                 test    al, 40h
.text:00000000004099BB                 cmovz   r15d, edx
.text:00000000004099BF                 test    eax, 20000h
.text:00000000004099C4                 cmovz   ebp, edx
.text:00000000004099C7
.text:00000000004099C7 loc_4099C7:                             ; CODE XREF: __intel_proc_init_ftzdazule+25↑j
.text:00000000004099C7                                         ; __intel_proc_init_ftzdazule+2D↑j
.text:00000000004099C7                 test    bl, 1
.text:00000000004099CA                 jnz     short loc_409A05
.text:00000000004099CC
.text:00000000004099CC loc_4099CC:                             ; CODE XREF: __intel_proc_init_ftzdazule+A8↓j
.text:00000000004099CC                 test    r15d, r15d
.text:00000000004099CF                 jz      short loc_4099E2
.text:00000000004099D1                 stmxcsr [rsp+218h+s]
.text:00000000004099D5                 mov     eax, [rsp+218h+s]
.text:00000000004099D8                 or      eax, 40h
.text:00000000004099DB                 mov     [rsp+218h+s], eax
.text:00000000004099DE                 ldmxcsr [rsp+218h+s]
.text:00000000004099E2
.text:00000000004099E2 loc_4099E2:                             ; CODE XREF: __intel_proc_init_ftzdazule+5F↑j
.text:00000000004099E2                 test    ebp, ebp
.text:00000000004099E4                 jz      short loc_4099F9
.text:00000000004099E6                 stmxcsr [rsp+218h+s]
.text:00000000004099EA                 mov     eax, [rsp+218h+s]
.text:00000000004099ED                 or      eax, 20000h
.text:00000000004099F2                 mov     [rsp+218h+s], eax
.text:00000000004099F5                 ldmxcsr [rsp+218h+s]
.text:00000000004099F9
.text:00000000004099F9 loc_4099F9:                             ; CODE XREF: __intel_proc_init_ftzdazule+74↑j
.text:00000000004099F9                 add     rsp, 200h
.text:0000000000409A00                 pop     rbp
.text:0000000000409A01                 pop     rbx
.text:0000000000409A02                 pop     r15
.text:0000000000409A04                 retn
.text:0000000000409A05 ; ---------------------------------------------------------------------------
.text:0000000000409A05
.text:0000000000409A05 loc_409A05:                             ; CODE XREF: __intel_proc_init_ftzdazule+5A↑j
.text:0000000000409A05                 stmxcsr [rsp+218h+s]
.text:0000000000409A09                 mov     eax, [rsp+218h+s]
.text:0000000000409A0C                 or      eax, 8000h
.text:0000000000409A11                 mov     [rsp+218h+s], eax
.text:0000000000409A14                 ldmxcsr [rsp+218h+s]
.text:0000000000409A18                 jmp     short loc_4099CC
.text:0000000000409A18 __intel_proc_init_ftzdazule endp
.text:0000000000409A18
.text:0000000000409A18 ; ---------------------------------------------------------------------------
.text:0000000000409A1A                 align 20h
.text:0000000000409A1A ; } // starts at 409970
.text:0000000000409A20
.text:0000000000409A20 ; =============== S U B R O U T I N E =======================================
.text:0000000000409A20
.text:0000000000409A20
.text:0000000000409A20 ; void _libc_csu_init(void)
.text:0000000000409A20                 public __libc_csu_init
.text:0000000000409A20 __libc_csu_init proc near               ; DATA XREF: _start+16↑o
.text:0000000000409A20
.text:0000000000409A20 var_30          = qword ptr -30h
.text:0000000000409A20 var_28          = qword ptr -28h
.text:0000000000409A20 var_20          = qword ptr -20h
.text:0000000000409A20 var_18          = qword ptr -18h
.text:0000000000409A20 var_10          = qword ptr -10h
.text:0000000000409A20 var_8           = qword ptr -8
.text:0000000000409A20
.text:0000000000409A20 ; __unwind {
.text:0000000000409A20                 mov     [rsp+var_28], rbp
.text:0000000000409A25                 mov     [rsp+var_20], r12
.text:0000000000409A2A                 lea     rbp, __CTOR_LIST__
.text:0000000000409A31                 lea     r12, __init_array_start
.text:0000000000409A38                 mov     [rsp+var_18], r13
.text:0000000000409A3D                 mov     [rsp+var_10], r14
.text:0000000000409A42                 mov     [rsp+var_8], r15
.text:0000000000409A47                 mov     [rsp+var_30], rbx
.text:0000000000409A4C                 sub     rsp, 38h
.text:0000000000409A50                 sub     rbp, r12
.text:0000000000409A53                 mov     r13d, edi
.text:0000000000409A56                 mov     r14, rsi
.text:0000000000409A59                 sar     rbp, 3
.text:0000000000409A5D                 mov     r15, rdx
.text:0000000000409A60                 call    _init_proc
.text:0000000000409A65                 test    rbp, rbp
.text:0000000000409A68                 jz      short loc_409A86
.text:0000000000409A6A                 xor     ebx, ebx
.text:0000000000409A6C                 nop     dword ptr [rax+00h]
.text:0000000000409A70
.text:0000000000409A70 loc_409A70:                             ; CODE XREF: __libc_csu_init+64↓j
.text:0000000000409A70                 mov     rdx, r15
.text:0000000000409A73                 mov     rsi, r14
.text:0000000000409A76                 mov     edi, r13d
.text:0000000000409A79                 call    ds:(__init_array_start - 60C000h)[r12+rbx*8]
.text:0000000000409A7D                 add     rbx, 1
.text:0000000000409A81                 cmp     rbx, rbp
.text:0000000000409A84                 jnz     short loc_409A70
.text:0000000000409A86
.text:0000000000409A86 loc_409A86:                             ; CODE XREF: __libc_csu_init+48↑j
.text:0000000000409A86                 mov     rbx, [rsp+38h+var_30]
.text:0000000000409A8B                 mov     rbp, [rsp+38h+var_28]
.text:0000000000409A90                 mov     r12, [rsp+38h+var_20]
.text:0000000000409A95                 mov     r13, [rsp+38h+var_18]
.text:0000000000409A9A                 mov     r14, [rsp+38h+var_10]
.text:0000000000409A9F                 mov     r15, [rsp+38h+var_8]
.text:0000000000409AA4                 add     rsp, 38h
.text:0000000000409AA8                 retn
.text:0000000000409AA8 ; } // starts at 409A20
.text:0000000000409AA8 __libc_csu_init endp
.text:0000000000409AA8
.text:0000000000409AA8 ; ---------------------------------------------------------------------------
.text:0000000000409AA9                 align 10h
.text:0000000000409AB0
.text:0000000000409AB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000409AB0
.text:0000000000409AB0
.text:0000000000409AB0 ; void _libc_csu_fini(void)
.text:0000000000409AB0                 public __libc_csu_fini
.text:0000000000409AB0 __libc_csu_fini proc near               ; DATA XREF: _start+F↑o
.text:0000000000409AB0 ; __unwind {
.text:0000000000409AB0                 rep retn
.text:0000000000409AB0 ; } // starts at 409AB0
.text:0000000000409AB0 __libc_csu_fini endp
.text:0000000000409AB0
.text:0000000000409AB0 ; ---------------------------------------------------------------------------
.text:0000000000409AB2                 align 20h
.text:0000000000409AC0
.text:0000000000409AC0 ; =============== S U B R O U T I N E =======================================
.text:0000000000409AC0
.text:0000000000409AC0 ; Attributes: bp-based frame
.text:0000000000409AC0
.text:0000000000409AC0 __do_global_ctors_aux proc near         ; CODE XREF: _init_proc+E↑p
.text:0000000000409AC0                 push    rbp
.text:0000000000409AC1                 mov     rbp, rsp
.text:0000000000409AC4                 push    rbx
.text:0000000000409AC5                 sub     rsp, 8
.text:0000000000409AC9                 mov     rax, cs:__CTOR_LIST__
.text:0000000000409AD0                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000409AD4                 jz      short loc_409AEF
.text:0000000000409AD6                 mov     ebx, offset __CTOR_LIST__
.text:0000000000409ADB                 nop     dword ptr [rax+rax+00h]
.text:0000000000409AE0
.text:0000000000409AE0 loc_409AE0:                             ; CODE XREF: __do_global_ctors_aux+2D↓j
.text:0000000000409AE0                 sub     rbx, 8
.text:0000000000409AE4                 call    rax ; __CTOR_LIST__
.text:0000000000409AE6                 mov     rax, [rbx]
.text:0000000000409AE9                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000409AED                 jnz     short loc_409AE0
.text:0000000000409AEF
.text:0000000000409AEF loc_409AEF:                             ; CODE XREF: __do_global_ctors_aux+14↑j
.text:0000000000409AEF                 add     rsp, 8
.text:0000000000409AF3                 pop     rbx
.text:0000000000409AF4                 pop     rbp
.text:0000000000409AF5                 retn
.text:0000000000409AF5 __do_global_ctors_aux endp
.text:0000000000409AF5
.text:0000000000409AF5 ; ---------------------------------------------------------------------------
.text:0000000000409AF6                 align 8
.text:0000000000409AF6 _text           ends
.text:0000000000409AF6