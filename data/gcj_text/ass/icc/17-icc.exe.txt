.text:0000000000401020 ; =============== S U B R O U T I N E =======================================
.text:0000000000401020
.text:0000000000401020 ; Attributes: noreturn fuzzy-sp
.text:0000000000401020
.text:0000000000401020                 public _start
.text:0000000000401020 _start          proc near               ; DATA XREF: LOAD:0000000000400018↑o
.text:0000000000401020                 xor     ebp, ebp
.text:0000000000401022                 mov     r9, rdx         ; rtld_fini
.text:0000000000401025                 pop     rsi             ; argc
.text:0000000000401026                 mov     rdx, rsp        ; ubp_av
.text:0000000000401029                 and     rsp, 0FFFFFFFFFFFFFFF0h
.text:000000000040102D                 push    rax
.text:000000000040102E                 push    rsp             ; stack_end
.text:000000000040102F                 mov     r8, offset __libc_csu_fini ; fini
.text:0000000000401036                 mov     rcx, offset __libc_csu_init ; init
.text:000000000040103D                 mov     rdi, offset main ; main
.text:0000000000401044                 call    ___libc_start_main
.text:0000000000401049                 hlt
.text:0000000000401049 _start          endp
.text:0000000000401049
.text:0000000000401049 ; ---------------------------------------------------------------------------
.text:000000000040104A                 align 4
.text:000000000040104C
.text:000000000040104C ; =============== S U B R O U T I N E =======================================
.text:000000000040104C
.text:000000000040104C
.text:000000000040104C call_gmon_start proc near               ; CODE XREF: _init_proc+4↑p
.text:000000000040104C                 sub     rsp, 8
.text:0000000000401050                 mov     rax, cs:__gmon_start___ptr
.text:0000000000401057                 test    rax, rax
.text:000000000040105A                 jz      short loc_40105E
.text:000000000040105C                 call    rax ; __gmon_start__
.text:000000000040105E
.text:000000000040105E loc_40105E:                             ; CODE XREF: call_gmon_start+E↑j
.text:000000000040105E                 add     rsp, 8
.text:0000000000401062                 retn
.text:0000000000401062 call_gmon_start endp
.text:0000000000401062
.text:0000000000401062 ; ---------------------------------------------------------------------------
.text:0000000000401063                 align 10h
.text:0000000000401070
.text:0000000000401070 ; =============== S U B R O U T I N E =======================================
.text:0000000000401070
.text:0000000000401070 ; Attributes: bp-based frame
.text:0000000000401070
.text:0000000000401070 __do_global_dtors_aux proc near         ; CODE XREF: _term_proc+4↓p
.text:0000000000401070                 push    rbp
.text:0000000000401071                 mov     rbp, rsp
.text:0000000000401074                 push    rbx
.text:0000000000401075                 sub     rsp, 8
.text:0000000000401079                 cmp     cs:completed_6531, 0
.text:0000000000401080                 jnz     short loc_4010CD
.text:0000000000401082                 mov     ebx, offset __DTOR_END__
.text:0000000000401087                 mov     rax, cs:dtor_idx_6533
.text:000000000040108E                 sub     rbx, offset __DTOR_LIST__
.text:0000000000401095                 sar     rbx, 3
.text:0000000000401099                 sub     rbx, 1
.text:000000000040109D                 cmp     rax, rbx
.text:00000000004010A0                 jnb     short loc_4010C6
.text:00000000004010A2                 nop     word ptr [rax+rax+00h]
.text:00000000004010A8
.text:00000000004010A8 loc_4010A8:                             ; CODE XREF: __do_global_dtors_aux+54↓j
.text:00000000004010A8                 add     rax, 1
.text:00000000004010AC                 mov     cs:dtor_idx_6533, rax
.text:00000000004010B3                 call    ds:__DTOR_LIST__[rax*8]
.text:00000000004010BA                 mov     rax, cs:dtor_idx_6533
.text:00000000004010C1                 cmp     rax, rbx
.text:00000000004010C4                 jb      short loc_4010A8
.text:00000000004010C6
.text:00000000004010C6 loc_4010C6:                             ; CODE XREF: __do_global_dtors_aux+30↑j
.text:00000000004010C6                 mov     cs:completed_6531, 1
.text:00000000004010CD
.text:00000000004010CD loc_4010CD:                             ; CODE XREF: __do_global_dtors_aux+10↑j
.text:00000000004010CD                 add     rsp, 8
.text:00000000004010D1                 pop     rbx
.text:00000000004010D2                 pop     rbp
.text:00000000004010D3                 retn
.text:00000000004010D3 __do_global_dtors_aux endp
.text:00000000004010D3
.text:00000000004010D3 ; ---------------------------------------------------------------------------
.text:00000000004010D4                 align 20h
.text:00000000004010E0
.text:00000000004010E0 ; =============== S U B R O U T I N E =======================================
.text:00000000004010E0
.text:00000000004010E0 ; Attributes: bp-based frame
.text:00000000004010E0
.text:00000000004010E0 frame_dummy     proc near               ; CODE XREF: _init_proc+9↑p
.text:00000000004010E0                 cmp     cs:__JCR_LIST__, 0
.text:00000000004010E8                 push    rbp
.text:00000000004010E9                 mov     rbp, rsp
.text:00000000004010EC                 jz      short loc_401100
.text:00000000004010EE                 mov     eax, 0
.text:00000000004010F3                 test    rax, rax
.text:00000000004010F6                 jz      short loc_401100
.text:00000000004010F8                 pop     rbp
.text:00000000004010F9                 mov     edi, offset __JCR_LIST__
.text:00000000004010FE                 jmp     rax
.text:0000000000401100 ; ---------------------------------------------------------------------------
.text:0000000000401100
.text:0000000000401100 loc_401100:                             ; CODE XREF: frame_dummy+C↑j
.text:0000000000401100                                         ; frame_dummy+16↑j
.text:0000000000401100                 pop     rbp
.text:0000000000401101                 retn
.text:0000000000401101 frame_dummy     endp
.text:0000000000401101
.text:0000000000401101 ; ---------------------------------------------------------------------------
.text:0000000000401102                 align 10h
.text:0000000000401110
.text:0000000000401110 ; =============== S U B R O U T I N E =======================================
.text:0000000000401110
.text:0000000000401110 ; Attributes: bp-based frame fuzzy-sp
.text:0000000000401110
.text:0000000000401110 ; int __cdecl main(int argc, const char **argv, const char **envp)
.text:0000000000401110                 public main
.text:0000000000401110 main            proc near               ; DATA XREF: _start+1D↑o
.text:0000000000401110
.text:0000000000401110 var_200         = qword ptr -200h
.text:0000000000401110 var_1F8         = dword ptr -1F8h
.text:0000000000401110 var_1F0         = dword ptr -1F0h
.text:0000000000401110 var_1E8         = qword ptr -1E8h
.text:0000000000401110 var_1E0         = qword ptr -1E0h
.text:0000000000401110 var_1D8         = qword ptr -1D8h
.text:0000000000401110 var_1D0         = qword ptr -1D0h
.text:0000000000401110 var_1C8         = qword ptr -1C8h
.text:0000000000401110 var_1C0         = dword ptr -1C0h
.text:0000000000401110 var_1B8         = qword ptr -1B8h
.text:0000000000401110 var_1B0         = qword ptr -1B0h
.text:0000000000401110 var_1A8         = qword ptr -1A8h
.text:0000000000401110 var_1A0         = dword ptr -1A0h
.text:0000000000401110 var_198         = dword ptr -198h
.text:0000000000401110 var_190         = dword ptr -190h
.text:0000000000401110 var_188         = dword ptr -188h
.text:0000000000401110 var_180         = dword ptr -180h
.text:0000000000401110 var_178         = dword ptr -178h
.text:0000000000401110 var_170         = qword ptr -170h
.text:0000000000401110 var_168         = dword ptr -168h
.text:0000000000401110 var_160         = dword ptr -160h
.text:0000000000401110 var_158         = qword ptr -158h
.text:0000000000401110 var_150         = dword ptr -150h
.text:0000000000401110 var_148         = dword ptr -148h
.text:0000000000401110 var_144         = dword ptr -144h
.text:0000000000401110 var_140         = dword ptr -140h
.text:0000000000401110 var_138         = qword ptr -138h
.text:0000000000401110 var_130         = qword ptr -130h
.text:0000000000401110 var_128         = dword ptr -128h
.text:0000000000401110 var_120         = dword ptr -120h
.text:0000000000401110 var_118         = dword ptr -118h
.text:0000000000401110 var_110         = xmmword ptr -110h
.text:0000000000401110 var_100         = qword ptr -100h
.text:0000000000401110 var_F8          = qword ptr -0F8h
.text:0000000000401110 var_F0          = dword ptr -0F0h
.text:0000000000401110 var_E8          = dword ptr -0E8h
.text:0000000000401110 var_E0          = dword ptr -0E0h
.text:0000000000401110 var_D8          = dword ptr -0D8h
.text:0000000000401110 var_D0          = dword ptr -0D0h
.text:0000000000401110 var_C8          = dword ptr -0C8h
.text:0000000000401110 var_C0          = dword ptr -0C0h
.text:0000000000401110 var_B8          = qword ptr -0B8h
.text:0000000000401110 var_B0          = qword ptr -0B0h
.text:0000000000401110 var_A8          = qword ptr -0A8h
.text:0000000000401110 var_A0          = qword ptr -0A0h
.text:0000000000401110 var_98          = qword ptr -98h
.text:0000000000401110 var_90          = xmmword ptr -90h
.text:0000000000401110 var_80          = dword ptr -80h
.text:0000000000401110 var_78          = dword ptr -78h
.text:0000000000401110 var_70          = dword ptr -70h
.text:0000000000401110 var_68          = dword ptr -68h
.text:0000000000401110 var_60          = dword ptr -60h
.text:0000000000401110 var_58          = qword ptr -58h
.text:0000000000401110 var_50          = qword ptr -50h
.text:0000000000401110 var_48          = qword ptr -48h
.text:0000000000401110 var_40          = qword ptr -40h
.text:0000000000401110
.text:0000000000401110 ; __unwind { // ___gxx_personality_v0
.text:0000000000401110                 push    rbp
.text:0000000000401111                 mov     rbp, rsp
.text:0000000000401114                 and     rsp, 0FFFFFFFFFFFFFF80h
.text:0000000000401118                 push    r12
.text:000000000040111A                 push    r13
.text:000000000040111C                 push    r14
.text:000000000040111E                 push    r15
.text:0000000000401120                 push    rbx
.text:0000000000401121                 sub     rsp, 1D8h
.text:0000000000401128                 mov     rsi, 0
.text:0000000000401132                 mov     edi, 3
.text:0000000000401137                 call    __intel_new_feature_proc_init
.text:000000000040113C                 stmxcsr dword ptr [rsp+200h+var_200]
.text:0000000000401140                 mov     edi, offset _ZSt3cin@@GLIBCXX_3_4
.text:0000000000401145                 lea     rsi, [rsp+200h+var_148]
.text:000000000040114D                 or      dword ptr [rsp+200h+var_200], 8040h
.text:0000000000401154                 ldmxcsr dword ptr [rsp+200h+var_200]
.text:0000000000401158                 call    __ZNSirsERi     ; std::istream::operator>>(int &)
.text:000000000040115D                 mov     esi, 1
.text:0000000000401162                 mov     r8d, esi
.text:0000000000401165                 cmp     [rsp+200h+var_148], 0
.text:000000000040116D                 jle     loc_4029FE
.text:0000000000401173                 mov     eax, 4
.text:0000000000401178                 mov     edx, 0FFFFFFFCh
.text:000000000040117D                 mov     r12d, esi
.text:0000000000401180                 mov     r13d, r8d
.text:0000000000401183                 movd    xmm0, eax
.text:0000000000401187                 movd    xmm1, edx
.text:000000000040118B                 pshufd  xmm2, xmm0, 0
.text:0000000000401190                 pshufd  xmm1, xmm1, 0
.text:0000000000401195                 pcmpeqd xmm0, xmm0
.text:0000000000401199                 movdqa  [rsp+200h+var_110], xmm1
.text:00000000004011A2                 movdqa  [rsp+200h+var_90], xmm2
.text:00000000004011AB
.text:00000000004011AB loc_4011AB:                             ; CODE XREF: main+18E8↓j
.text:00000000004011AB                 mov     edi, offset format ; "%d%d"
.text:00000000004011B0                 mov     esi, offset n
.text:00000000004011B5                 mov     edx, offset m
.text:00000000004011BA                 xor     eax, eax
.text:00000000004011BC                 call    _scanf
.text:00000000004011C1                 mov     ebx, cs:n
.text:00000000004011C7                 lea     r9d, [rbx+rbx]
.text:00000000004011CB                 cmp     r9d, 1
.text:00000000004011CF                 jle     loc_40140D
.text:00000000004011D5                 lea     r10d, [rbx+rbx-1]
.text:00000000004011DA                 cmp     r10d, 0Bh
.text:00000000004011DE                 jl      loc_402AD5
.text:00000000004011E4                 mov     ecx, ebx
.text:00000000004011E6                 lea     eax, [rbx-1]
.text:00000000004011E9                 cdq
.text:00000000004011EA                 xor     eax, edx
.text:00000000004011EC                 neg     ecx
.text:00000000004011EE                 sub     eax, edx
.text:00000000004011F0                 lea     r11d, [r10+5]
.text:00000000004011F4                 neg     eax
.text:00000000004011F6                 and     r11d, 7
.text:00000000004011FA                 add     eax, r9d
.text:00000000004011FD                 movd    xmm7, r9d
.text:0000000000401202                 dec     eax
.text:0000000000401204                 lea     r14d, [rcx+2]
.text:0000000000401208                 mov     dword ptr cs:xmmword_22B9D404, eax
.text:000000000040120E                 lea     eax, [rbx-2]
.text:0000000000401211                 cdq
.text:0000000000401212                 xor     eax, edx
.text:0000000000401214                 cmp     r14d, 1
.text:0000000000401218                 movsxd  rdi, r10d
.text:000000000040121B                 lea     r15d, [rcx+3]
.text:000000000040121F                 cmovle  r14d, r13d
.text:0000000000401223                 sub     eax, edx
.text:0000000000401225                 neg     eax
.text:0000000000401227                 cmp     r15d, 1
.text:000000000040122B                 pcmpeqd xmm13, xmm13
.text:0000000000401230                 cmovle  r15d, r13d
.text:0000000000401234                 add     eax, r9d
.text:0000000000401237                 dec     eax
.text:0000000000401239                 sub     rdi, r11
.text:000000000040123C                 mov     dword ptr cs:xmmword_22B9D404+4, eax
.text:0000000000401242                 lea     eax, [rbx-3]
.text:0000000000401245                 cdq
.text:0000000000401246                 xor     eax, edx
.text:0000000000401248                 lea     r11d, [rbx-6]
.text:000000000040124C                 sub     eax, edx
.text:000000000040124E                 lea     edx, [rbx-5]
.text:0000000000401251                 neg     eax
.text:0000000000401253                 add     eax, r9d
.text:0000000000401256                 dec     eax
.text:0000000000401258                 movd    xmm3, r11d
.text:000000000040125D                 mov     dword ptr cs:xmmword_22B9D404+8, eax
.text:0000000000401263                 lea     eax, [rcx+4]
.text:0000000000401266                 cmp     eax, 1
.text:0000000000401269                 lea     r11d, [rcx+7]
.text:000000000040126D                 movd    xmm0, edx
.text:0000000000401271                 lea     edx, [rcx+6]
.text:0000000000401274                 cmovle  eax, r13d
.text:0000000000401278                 mov     dword ptr cs:xmmword_22BA7044+8, eax
.text:000000000040127E                 lea     eax, [rbx-4]
.text:0000000000401281                 movd    xmm6, r11d
.text:0000000000401286                 movd    xmm4, edx
.text:000000000040128A                 mov     dword ptr cs:xmmword_22BA7044, r14d
.text:0000000000401291                 movd    xmm1, eax
.text:0000000000401295                 lea     eax, [rbx-7]
.text:0000000000401298                 punpcklqdq xmm1, xmm0
.text:000000000040129C                 mov     dword ptr cs:xmmword_22BA7044+4, r15d
.text:00000000004012A3                 movdqa  xmm14, [rsp+200h+var_110]
.text:00000000004012AD                 movd    xmm2, eax
.text:00000000004012B1                 lea     eax, [rcx+5]
.text:00000000004012B4                 add     ecx, 8
.text:00000000004012B7                 punpcklqdq xmm3, xmm2
.text:00000000004012BB                 movdqa  xmm15, [rsp+200h+var_90]
.text:00000000004012C5                 movd    xmm0, eax
.text:00000000004012C9                 mov     eax, 3
.text:00000000004012CE                 movd    xmm5, ecx
.text:00000000004012D2                 punpcklqdq xmm0, xmm4
.text:00000000004012D6                 punpcklqdq xmm6, xmm5
.text:00000000004012DA                 shufps  xmm1, xmm3, 88h
.text:00000000004012DE                 shufps  xmm0, xmm6, 88h
.text:00000000004012E2                 pshufd  xmm2, xmm7, 0
.text:00000000004012E7
.text:00000000004012E7 loc_4012E7:                             ; CODE XREF: main+2A6↓j
.text:00000000004012E7                 movdqa  xmm7, cs:xmmword_406140
.text:00000000004012EF                 movaps  xmm4, xmm1
.text:00000000004012F2                 pxor    xmm3, xmm3
.text:00000000004012F6                 pxor    xmm8, xmm8
.text:00000000004012FB                 movdqa  xmm6, cs:xmmword_406140
.text:0000000000401303                 pcmpgtd xmm3, xmm1
.text:0000000000401307                 paddd   xmm1, xmm14
.text:000000000040130C                 pcmpgtd xmm7, xmm0
.text:0000000000401310                 pxor    xmm6, xmm0
.text:0000000000401314                 pcmpgtd xmm8, xmm1
.text:0000000000401319                 pand    xmm7, xmm6
.text:000000000040131D                 movdqa  xmm9, xmm8
.text:0000000000401322                 movdqa  xmm12, cs:xmmword_406140
.text:000000000040132B                 pxor    xmm4, xmm3
.text:000000000040132F                 movdqa  xmm11, cs:xmmword_406140
.text:0000000000401338                 pxor    xmm7, xmm0
.text:000000000040133C                 paddd   xmm0, xmm15
.text:0000000000401341                 pxor    xmm9, xmm1
.text:0000000000401346                 psubd   xmm4, xmm3
.text:000000000040134A                 movdqa  xmm5, xmm2
.text:000000000040134E                 psubd   xmm9, xmm8
.text:0000000000401353                 movdqa  xmm10, xmm2
.text:0000000000401358                 pcmpgtd xmm12, xmm0
.text:000000000040135D                 pxor    xmm11, xmm0
.text:0000000000401362                 psubd   xmm5, xmm4
.text:0000000000401366                 psubd   xmm10, xmm9
.text:000000000040136B                 pand    xmm12, xmm11
.text:0000000000401370                 paddd   xmm5, xmm13
.text:0000000000401375                 paddd   xmm10, xmm13
.text:000000000040137A                 pxor    xmm12, xmm0
.text:000000000040137F                 movdqa  ds:xmmword_22B9D404[rax*4], xmm5
.text:0000000000401388                 paddd   xmm1, xmm14
.text:000000000040138D                 movdqa  ds:xmmword_22BA7044[rax*4], xmm7
.text:0000000000401396                 paddd   xmm0, xmm15
.text:000000000040139B                 movdqa  ds:xmmword_22B9D414[rax*4], xmm10
.text:00000000004013A5                 movdqa  ds:xmmword_22BA7054[rax*4], xmm12
.text:00000000004013AF                 add     rax, 8
.text:00000000004013B3                 cmp     rax, rdi
.text:00000000004013B6                 jb      loc_4012E7
.text:00000000004013BC
.text:00000000004013BC loc_4013BC:                             ; CODE XREF: main+19C7↓j
.text:00000000004013BC                 mov     ecx, edi
.text:00000000004013BE                 mov     eax, ecx
.text:00000000004013C0                 neg     eax
.text:00000000004013C2                 add     eax, ebx
.text:00000000004013C4                 movsxd  r11, edi
.text:00000000004013C7                 mov     edi, eax
.text:00000000004013C9                 neg     edi
.text:00000000004013CB                 cmp     ecx, r10d
.text:00000000004013CE                 jnb     short loc_40140D
.text:00000000004013D0
.text:00000000004013D0 loc_4013D0:                             ; CODE XREF: main+2FB↓j
.text:00000000004013D0                 dec     eax
.text:00000000004013D2                 lea     r15d, [rdi+2]
.text:00000000004013D6                 cdq
.text:00000000004013D7                 mov     r14d, eax
.text:00000000004013DA                 cmp     r15d, 1
.text:00000000004013DE                 cmovle  r15d, r13d
.text:00000000004013E2                 xor     r14d, edx
.text:00000000004013E5                 sub     r14d, edx
.text:00000000004013E8                 inc     ecx
.text:00000000004013EA                 neg     r14d
.text:00000000004013ED                 inc     edi
.text:00000000004013EF                 add     r14d, r9d
.text:00000000004013F2                 dec     r14d
.text:00000000004013F5                 mov     dword ptr ds:xmmword_22B9D404[r11*4], r14d
.text:00000000004013FD                 mov     dword ptr ds:xmmword_22BA7044[r11*4], r15d
.text:0000000000401405                 inc     r11
.text:0000000000401408                 cmp     ecx, r10d
.text:000000000040140B                 jb      short loc_4013D0
.text:000000000040140D
.text:000000000040140D loc_40140D:                             ; CODE XREF: main+BF↑j
.text:000000000040140D                                         ; main+2BE↑j
.text:000000000040140D                 mov     rdx, cs:u
.text:0000000000401414                 xor     r14d, r14d
.text:0000000000401417                 mov     rax, cs:v
.text:000000000040141E                 mov     cs:qword_22BBA8F8, rdx
.text:0000000000401425                 inc     cs:ct
.text:000000000040142B                 mov     edx, cs:m
.text:0000000000401431                 test    edx, edx
.text:0000000000401433                 mov     cs:qword_22BBA8E0, rax
.text:000000000040143A                 jle     loc_401A56
.text:0000000000401440                 mov     [rsp+200h+var_118], r12d
.text:0000000000401448
.text:0000000000401448 loc_401448:                             ; CODE XREF: main+92C↓j
.text:0000000000401448                 mov     edi, offset format ; "%d%d"
.text:000000000040144D                 lea     rsi, [rsp+200h+var_144]
.text:0000000000401455                 xor     eax, eax
.text:0000000000401457                 lea     rdx, [rsp+200h+var_78]
.text:000000000040145F                 call    _scanf
.text:0000000000401464                 movsxd  rax, [rsp+200h+var_144]
.text:000000000040146C                 xor     ebx, ebx
.text:000000000040146E                 imul    rdx, rax, 5DC4h
.text:0000000000401475                 movsxd  rcx, [rsp+200h+var_78]
.text:000000000040147D                 mov     ds:x[r14*4], eax
.text:0000000000401485                 mov     eax, cs:ct
.text:000000000040148B                 mov     ds:was[rdx+rcx*4], eax
.text:0000000000401492                 mov     edx, r14d
.text:0000000000401495                 mov     ds:y[r14*4], ecx
.text:000000000040149D                 mov     [rsp+200h+var_80], edx
.text:00000000004014A4                 mov     [rsp+200h+var_98], r14
.text:00000000004014AC
.text:00000000004014AC loc_4014AC:                             ; CODE XREF: main+910↓j
.text:00000000004014AC                 mov     r10d, [rsp+200h+var_144]
.text:00000000004014B4                 mov     r15d, ds:dword_406150[rbx*4]
.text:00000000004014BC                 add     r15d, r10d
.text:00000000004014BF                 movsxd  r13, r15d
.text:00000000004014C2                 imul    r11, r13, 5DC4h
.text:00000000004014C9                 mov     r9d, [rsp+200h+var_78]
.text:00000000004014D1                 mov     r12d, ds:dj[rbx*4]
.text:00000000004014D9                 add     r12d, r9d
.text:00000000004014DC                 movsxd  r14, r12d
.text:00000000004014DF                 mov     edx, ds:was[r11+r14*4]
.text:00000000004014E7                 cmp     edx, eax
.text:00000000004014E9                 jz      loc_40176E
.text:00000000004014EF                 mov     r8, cs:qword_22BBA8E0
.text:00000000004014F6                 cmp     r8, cs:qword_22BBA8E8
.text:00000000004014FD                 jnz     loc_40172F
.text:0000000000401503                 mov     rdi, r8
.text:0000000000401506                 mov     rax, 6666666666666667h
.text:0000000000401510                 mov     rsi, cs:v
.text:0000000000401517                 sub     rdi, rsi
.text:000000000040151A                 imul    rdi
.text:000000000040151D                 sar     rdx, 3
.text:0000000000401521                 mov     rcx, rdi
.text:0000000000401524                 mov     rax, 0CCCCCCCCCCCCCCCh
.text:000000000040152E                 sar     rcx, 3Fh
.text:0000000000401532                 sub     rax, rdx
.text:0000000000401535                 add     rax, rcx
.text:0000000000401538                 cmp     rax, 1
.text:000000000040153C                 jb      loc_402A15
.text:0000000000401542                 sub     rdx, rcx
.text:0000000000401545                 mov     edi, 1
.text:000000000040154A                 cmp     rdx, 1
.text:000000000040154E                 cmova   rdi, rdx
.text:0000000000401552                 add     rdi, rdx
.text:0000000000401555                 cmp     rdi, rdx
.text:0000000000401558                 jb      short loc_401582
.text:000000000040155A                 mov     rax, 0CCCCCCCCCCCCCCCh
.text:0000000000401564                 cmp     rdi, rax
.text:0000000000401567                 ja      short loc_401582
.text:0000000000401569                 test    rdi, rdi
.text:000000000040156C                 jnz     short loc_40158C
.text:000000000040156E                 xor     ecx, ecx
.text:0000000000401570                 lea     rax, [rdi+rdi*4]
.text:0000000000401574                 shl     rax, 2
.text:0000000000401578                 mov     [rsp+200h+var_A0], rax
.text:0000000000401580                 jmp     short loc_4015F4
.text:0000000000401582 ; ---------------------------------------------------------------------------
.text:0000000000401582
.text:0000000000401582 loc_401582:                             ; CODE XREF: main+448↑j
.text:0000000000401582                                         ; main+457↑j
.text:0000000000401582                 mov     rdi, 0CCCCCCCCCCCCCCCh
.text:000000000040158C
.text:000000000040158C loc_40158C:                             ; CODE XREF: main+45C↑j
.text:000000000040158C                 mov     [rsp+200h+var_100], rsi
.text:0000000000401594                 lea     rdi, [rdi+rdi*4]
.text:0000000000401598                 shl     rdi, 2          ; unsigned __int64
.text:000000000040159C                 mov     [rsp+200h+var_A0], rdi
.text:00000000004015A4                 mov     [rsp+200h+var_F8], r8
.text:00000000004015AC                 mov     [rsp+200h+var_B8], r11
.text:00000000004015B4                 mov     [rsp+200h+var_F0], r9d
.text:00000000004015BC                 mov     [rsp+200h+var_E8], r10d
.text:00000000004015C4                 call    __Znwm          ; operator new(ulong)
.text:00000000004015C9                 mov     r10d, [rsp+200h+var_E8]
.text:00000000004015D1                 mov     rcx, rax
.text:00000000004015D4                 mov     r9d, [rsp+200h+var_F0]
.text:00000000004015DC                 mov     r11, [rsp+200h+var_B8]
.text:00000000004015E4                 mov     r8, [rsp+200h+var_F8]
.text:00000000004015EC                 mov     rsi, [rsp+200h+var_100]
.text:00000000004015F4
.text:00000000004015F4 loc_4015F4:                             ; CODE XREF: main+470↑j
.text:00000000004015F4                 neg     rsi
.text:00000000004015F7                 mov     rax, 6666666666666667h
.text:0000000000401601                 add     rsi, r8
.text:0000000000401604                 imul    rsi
.text:0000000000401607                 sar     rdx, 3
.text:000000000040160B                 sar     rsi, 3Fh
.text:000000000040160F                 sub     rdx, rsi
.text:0000000000401612                 lea     rsi, [rdx+rdx*4]
.text:0000000000401616                 lea     rdx, [rcx+rsi*4]
.text:000000000040161A                 test    rdx, rdx
.text:000000000040161D                 jz      short loc_401638
.text:000000000040161F                 mov     eax, [rsp+200h+var_80]
.text:0000000000401626                 mov     [rdx], r10d
.text:0000000000401629                 mov     [rdx+4], r9d
.text:000000000040162D                 mov     [rdx+8], r15d
.text:0000000000401631                 mov     [rdx+0Ch], r12d
.text:0000000000401635                 mov     [rdx+10h], eax
.text:0000000000401638
.text:0000000000401638 loc_401638:                             ; CODE XREF: main+50D↑j
.text:0000000000401638                 mov     rax, cs:v
.text:000000000040163F                 mov     rdx, rcx
.text:0000000000401642                 cmp     rax, r8
.text:0000000000401645                 jz      short loc_401679
.text:0000000000401647
.text:0000000000401647 loc_401647:                             ; CODE XREF: main+567↓j
.text:0000000000401647                 test    rdx, rdx
.text:000000000040164A                 jz      short loc_40166C
.text:000000000040164C                 mov     esi, [rax]
.text:000000000040164E                 mov     [rdx], esi
.text:0000000000401650                 mov     edi, [rax+4]
.text:0000000000401653                 mov     [rdx+4], edi
.text:0000000000401656                 mov     r9d, [rax+8]
.text:000000000040165A                 mov     [rdx+8], r9d
.text:000000000040165E                 mov     r10d, [rax+0Ch]
.text:0000000000401662                 mov     [rdx+0Ch], r10d
.text:0000000000401666                 mov     esi, [rax+10h]
.text:0000000000401669                 mov     [rdx+10h], esi
.text:000000000040166C
.text:000000000040166C loc_40166C:                             ; CODE XREF: main+53A↑j
.text:000000000040166C                 add     rax, 14h
.text:0000000000401670                 add     rdx, 14h
.text:0000000000401674                 cmp     rax, r8
.text:0000000000401677                 jnz     short loc_401647
.text:0000000000401679
.text:0000000000401679 loc_401679:                             ; CODE XREF: main+535↑j
.text:0000000000401679                 mov     rax, cs:qword_22BBA8E0
.text:0000000000401680                 add     rdx, 14h
.text:0000000000401684                 cmp     r8, rax
.text:0000000000401687                 jz      short loc_4016BE
.text:0000000000401689
.text:0000000000401689 loc_401689:                             ; CODE XREF: main+5AC↓j
.text:0000000000401689                 test    rdx, rdx
.text:000000000040168C                 jz      short loc_4016B1
.text:000000000040168E                 mov     esi, [r8]
.text:0000000000401691                 mov     [rdx], esi
.text:0000000000401693                 mov     edi, [r8+4]
.text:0000000000401697                 mov     [rdx+4], edi
.text:000000000040169A                 mov     r9d, [r8+8]
.text:000000000040169E                 mov     [rdx+8], r9d
.text:00000000004016A2                 mov     r10d, [r8+0Ch]
.text:00000000004016A6                 mov     [rdx+0Ch], r10d
.text:00000000004016AA                 mov     esi, [r8+10h]
.text:00000000004016AE                 mov     [rdx+10h], esi
.text:00000000004016B1
.text:00000000004016B1 loc_4016B1:                             ; CODE XREF: main+57C↑j
.text:00000000004016B1                 add     r8, 14h
.text:00000000004016B5                 add     rdx, 14h
.text:00000000004016B9                 cmp     r8, rax
.text:00000000004016BC                 jnz     short loc_401689
.text:00000000004016BE
.text:00000000004016BE loc_4016BE:                             ; CODE XREF: main+577↑j
.text:00000000004016BE                 mov     rdi, cs:v       ; void *
.text:00000000004016C5                 test    rdi, rdi
.text:00000000004016C8                 jz      short loc_4016FF
.text:00000000004016CA                 mov     [rsp+200h+var_B0], rdx
.text:00000000004016D2                 mov     [rsp+200h+var_A8], rcx
.text:00000000004016DA                 mov     [rsp+200h+var_B8], r11
.text:00000000004016E2                 call    __ZdlPv         ; operator delete(void *)
.text:00000000004016E7                 mov     r11, [rsp+200h+var_B8]
.text:00000000004016EF                 mov     rcx, [rsp+200h+var_A8]
.text:00000000004016F7                 mov     rdx, [rsp+200h+var_B0]
.text:00000000004016FF
.text:00000000004016FF loc_4016FF:                             ; CODE XREF: main+5B8↑j
.text:00000000004016FF                 mov     rax, [rsp+200h+var_A0]
.text:0000000000401707                 add     rax, rcx
.text:000000000040170A                 mov     cs:qword_22BBA8E0, rdx
.text:0000000000401711                 mov     cs:qword_22BBA8E8, rax
.text:0000000000401718                 mov     cs:v, rcx
.text:000000000040171F                 mov     eax, cs:ct
.text:0000000000401725                 mov     edx, ds:was[r11+r14*4]
.text:000000000040172D                 jmp     short loc_40176E
.text:000000000040172F ; ---------------------------------------------------------------------------
.text:000000000040172F
.text:000000000040172F loc_40172F:                             ; CODE XREF: main+3ED↑j
.text:000000000040172F                 test    r8, r8
.text:0000000000401732                 jz      short loc_401763
.text:0000000000401734                 mov     eax, [rsp+200h+var_80]
.text:000000000040173B                 mov     [r8], r10d
.text:000000000040173E                 mov     [r8+4], r9d
.text:0000000000401742                 mov     [r8+8], r15d
.text:0000000000401746                 mov     [r8+0Ch], r12d
.text:000000000040174A                 mov     [r8+10h], eax
.text:000000000040174E                 mov     eax, cs:ct
.text:0000000000401754                 mov     r8, cs:qword_22BBA8E0
.text:000000000040175B                 mov     edx, ds:was[r11+r14*4]
.text:0000000000401763
.text:0000000000401763 loc_401763:                             ; CODE XREF: main+622↑j
.text:0000000000401763                 add     r8, 14h
.text:0000000000401767                 mov     cs:qword_22BBA8E0, r8
.text:000000000040176E
.text:000000000040176E loc_40176E:                             ; CODE XREF: main+3D9↑j
.text:000000000040176E                                         ; main+61D↑j
.text:000000000040176E                 cmp     edx, eax
.text:0000000000401770                 jnz     loc_401A11
.text:0000000000401776                 test    r15d, r15d
.text:0000000000401779                 jle     loc_401A11
.text:000000000040177F                 test    r12d, r12d
.text:0000000000401782                 jle     loc_401A11
.text:0000000000401788                 mov     eax, cs:n
.text:000000000040178E                 add     eax, eax
.text:0000000000401790                 cmp     r15d, eax
.text:0000000000401793                 jge     loc_401A11
.text:0000000000401799                 cmp     r12d, eax
.text:000000000040179C                 jge     loc_401A11
.text:00000000004017A2                 mov     edx, ds:f[r14*4]
.text:00000000004017AA                 cmp     r15d, edx
.text:00000000004017AD                 jl      loc_401A11
.text:00000000004017B3                 mov     eax, ds:w[r14*4]
.text:00000000004017BB                 add     edx, eax
.text:00000000004017BD                 cmp     r15d, edx
.text:00000000004017C0                 jge     loc_401A11
.text:00000000004017C6                 mov     edx, ds:f[r13*4]
.text:00000000004017CE                 cmp     r12d, edx
.text:00000000004017D1                 jl      loc_401A11
.text:00000000004017D7                 mov     eax, ds:w[r13*4]
.text:00000000004017DF                 add     edx, eax
.text:00000000004017E1                 cmp     r12d, edx
.text:00000000004017E4                 jge     loc_401A11
.text:00000000004017EA                 mov     r9, cs:qword_22BBA8F8
.text:00000000004017F1                 mov     ecx, [rsp+200h+var_144]
.text:00000000004017F8                 mov     esi, [rsp+200h+var_78]
.text:00000000004017FF                 cmp     r9, cs:qword_22BBA900
.text:0000000000401806                 jnz     loc_4019E0
.text:000000000040180C                 mov     rdi, r9
.text:000000000040180F                 mov     rax, 6666666666666667h
.text:0000000000401819                 mov     r8, cs:u
.text:0000000000401820                 sub     rdi, r8
.text:0000000000401823                 imul    rdi
.text:0000000000401826                 sar     rdx, 3
.text:000000000040182A                 mov     r11, rdi
.text:000000000040182D                 mov     r10, 0CCCCCCCCCCCCCCCh
.text:0000000000401837                 sar     r11, 3Fh
.text:000000000040183B                 sub     r10, rdx
.text:000000000040183E                 add     r10, r11
.text:0000000000401841                 cmp     r10, 1
.text:0000000000401845                 jb      loc_402A15
.text:000000000040184B                 sub     rdx, r11
.text:000000000040184E                 mov     edi, 1
.text:0000000000401853                 cmp     rdx, 1
.text:0000000000401857                 cmova   rdi, rdx
.text:000000000040185B                 add     rdi, rdx
.text:000000000040185E                 cmp     rdi, rdx
.text:0000000000401861                 jb      short loc_401884
.text:0000000000401863                 mov     rax, 0CCCCCCCCCCCCCCCh
.text:000000000040186D                 cmp     rdi, rax
.text:0000000000401870                 ja      short loc_401884
.text:0000000000401872                 test    rdi, rdi
.text:0000000000401875                 jnz     short loc_40188E
.text:0000000000401877                 xor     r14d, r14d
.text:000000000040187A                 lea     r13, [rdi+rdi*4]
.text:000000000040187E                 shl     r13, 2
.text:0000000000401882                 jmp     short loc_4018DD
.text:0000000000401884 ; ---------------------------------------------------------------------------
.text:0000000000401884
.text:0000000000401884 loc_401884:                             ; CODE XREF: main+751↑j
.text:0000000000401884                                         ; main+760↑j
.text:0000000000401884                 mov     rdi, 0CCCCCCCCCCCCCCCh
.text:000000000040188E
.text:000000000040188E loc_40188E:                             ; CODE XREF: main+765↑j
.text:000000000040188E                 mov     [rsp+200h+var_138], r8
.text:0000000000401896                 lea     r13, [rdi+rdi*4]
.text:000000000040189A                 shl     r13, 2
.text:000000000040189E                 mov     rdi, r13        ; unsigned __int64
.text:00000000004018A1                 mov     [rsp+200h+var_130], r9
.text:00000000004018A9                 mov     [rsp+200h+var_128], esi
.text:00000000004018B0                 mov     [rsp+200h+var_120], ecx
.text:00000000004018B7                 call    __Znwm          ; operator new(ulong)
.text:00000000004018BC                 mov     ecx, [rsp+200h+var_120]
.text:00000000004018C3                 mov     r14, rax
.text:00000000004018C6                 mov     esi, [rsp+200h+var_128]
.text:00000000004018CD                 mov     r9, [rsp+200h+var_130]
.text:00000000004018D5                 mov     r8, [rsp+200h+var_138]
.text:00000000004018DD
.text:00000000004018DD loc_4018DD:                             ; CODE XREF: main+772↑j
.text:00000000004018DD                 neg     r8
.text:00000000004018E0                 mov     rax, 6666666666666667h
.text:00000000004018EA                 add     r8, r9
.text:00000000004018ED                 imul    r8
.text:00000000004018F0                 sar     rdx, 3
.text:00000000004018F4                 sar     r8, 3Fh
.text:00000000004018F8                 sub     rdx, r8
.text:00000000004018FB                 lea     r8, [rdx+rdx*4]
.text:00000000004018FF                 lea     rdx, [r14+r8*4]
.text:0000000000401903                 test    rdx, rdx
.text:0000000000401906                 jz      short loc_40191F
.text:0000000000401908                 mov     eax, [rsp+200h+var_80]
.text:000000000040190F                 mov     [rdx], ecx
.text:0000000000401911                 mov     [rdx+4], esi
.text:0000000000401914                 mov     [rdx+8], r15d
.text:0000000000401918                 mov     [rdx+0Ch], r12d
.text:000000000040191C                 mov     [rdx+10h], eax
.text:000000000040191F
.text:000000000040191F loc_40191F:                             ; CODE XREF: main+7F6↑j
.text:000000000040191F                 mov     rax, cs:u
.text:0000000000401926                 mov     r12, r14
.text:0000000000401929                 cmp     rax, r9
.text:000000000040192C                 jz      short loc_401968
.text:000000000040192E
.text:000000000040192E loc_40192E:                             ; CODE XREF: main+856↓j
.text:000000000040192E                 test    r12, r12
.text:0000000000401931                 jz      short loc_40195B
.text:0000000000401933                 mov     edx, [rax]
.text:0000000000401935                 mov     [r12], edx
.text:0000000000401939                 mov     ecx, [rax+4]
.text:000000000040193C                 mov     [r12+4], ecx
.text:0000000000401941                 mov     esi, [rax+8]
.text:0000000000401944                 mov     [r12+8], esi
.text:0000000000401949                 mov     r8d, [rax+0Ch]
.text:000000000040194D                 mov     [r12+0Ch], r8d
.text:0000000000401952                 mov     r10d, [rax+10h]
.text:0000000000401956                 mov     [r12+10h], r10d
.text:000000000040195B
.text:000000000040195B loc_40195B:                             ; CODE XREF: main+821↑j
.text:000000000040195B                 add     rax, 14h
.text:000000000040195F                 add     r12, 14h
.text:0000000000401963                 cmp     rax, r9
.text:0000000000401966                 jnz     short loc_40192E
.text:0000000000401968
.text:0000000000401968 loc_401968:                             ; CODE XREF: main+81C↑j
.text:0000000000401968                 mov     rax, cs:qword_22BBA8F8
.text:000000000040196F                 add     r12, 14h
.text:0000000000401973                 cmp     r9, rax
.text:0000000000401976                 jz      short loc_4019B5
.text:0000000000401978
.text:0000000000401978 loc_401978:                             ; CODE XREF: main+8A3↓j
.text:0000000000401978                 test    r12, r12
.text:000000000040197B                 jz      short loc_4019A8
.text:000000000040197D                 mov     edx, [r9]
.text:0000000000401980                 mov     [r12], edx
.text:0000000000401984                 mov     ecx, [r9+4]
.text:0000000000401988                 mov     [r12+4], ecx
.text:000000000040198D                 mov     esi, [r9+8]
.text:0000000000401991                 mov     [r12+8], esi
.text:0000000000401996                 mov     r8d, [r9+0Ch]
.text:000000000040199A                 mov     [r12+0Ch], r8d
.text:000000000040199F                 mov     r10d, [r9+10h]
.text:00000000004019A3                 mov     [r12+10h], r10d
.text:00000000004019A8
.text:00000000004019A8 loc_4019A8:                             ; CODE XREF: main+86B↑j
.text:00000000004019A8                 add     r9, 14h
.text:00000000004019AC                 add     r12, 14h
.text:00000000004019B0                 cmp     r9, rax
.text:00000000004019B3                 jnz     short loc_401978
.text:00000000004019B5
.text:00000000004019B5 loc_4019B5:                             ; CODE XREF: main+866↑j
.text:00000000004019B5                 mov     rdi, cs:u       ; void *
.text:00000000004019BC                 test    rdi, rdi
.text:00000000004019BF                 jz      short loc_4019C6
.text:00000000004019C1                 call    __ZdlPv         ; operator delete(void *)
.text:00000000004019C6
.text:00000000004019C6 loc_4019C6:                             ; CODE XREF: main+8AF↑j
.text:00000000004019C6                 add     r13, r14
.text:00000000004019C9                 mov     cs:u, r14
.text:00000000004019D0                 mov     cs:qword_22BBA8F8, r12
.text:00000000004019D7                 mov     cs:qword_22BBA900, r13
.text:00000000004019DE                 jmp     short loc_401A11
.text:00000000004019E0 ; ---------------------------------------------------------------------------
.text:00000000004019E0
.text:00000000004019E0 loc_4019E0:                             ; CODE XREF: main+6F6↑j
.text:00000000004019E0                 test    r9, r9
.text:00000000004019E3                 jz      short loc_401A06
.text:00000000004019E5                 mov     eax, [rsp+200h+var_80]
.text:00000000004019EC                 mov     [r9], ecx
.text:00000000004019EF                 mov     [r9+4], esi
.text:00000000004019F3                 mov     [r9+8], r15d
.text:00000000004019F7                 mov     [r9+0Ch], r12d
.text:00000000004019FB                 mov     [r9+10h], eax
.text:00000000004019FF                 mov     r9, cs:qword_22BBA8F8
.text:0000000000401A06
.text:0000000000401A06 loc_401A06:                             ; CODE XREF: main+8D3↑j
.text:0000000000401A06                 add     r9, 14h
.text:0000000000401A0A                 mov     cs:qword_22BBA8F8, r9
.text:0000000000401A11
.text:0000000000401A11 loc_401A11:                             ; CODE XREF: main+660↑j
.text:0000000000401A11                                         ; main+669↑j ...
.text:0000000000401A11                 inc     rbx
.text:0000000000401A14                 cmp     rbx, 6
.text:0000000000401A18                 jge     short loc_401A25
.text:0000000000401A1A                 mov     eax, cs:ct
.text:0000000000401A20                 jmp     loc_4014AC
.text:0000000000401A25 ; ---------------------------------------------------------------------------
.text:0000000000401A25
.text:0000000000401A25 loc_401A25:                             ; CODE XREF: main+908↑j
.text:0000000000401A25                 mov     r14, [rsp+200h+var_98]
.text:0000000000401A2D                 mov     edx, cs:m
.text:0000000000401A33                 inc     r14
.text:0000000000401A36                 movsxd  rdx, edx
.text:0000000000401A39                 cmp     r14, rdx
.text:0000000000401A3C                 jl      loc_401448
.text:0000000000401A42                 mov     r12d, [rsp+200h+var_118]
.text:0000000000401A4A                 mov     r13d, 1
.text:0000000000401A50                 mov     ebx, cs:n
.text:0000000000401A56
.text:0000000000401A56 loc_401A56:                             ; CODE XREF: main+32A↑j
.text:0000000000401A56                 mov     ecx, ebx
.text:0000000000401A58                 xor     eax, eax
.text:0000000000401A5A                 xor     r14d, r14d
.text:0000000000401A5D                 xor     r15d, r15d
.text:0000000000401A60                 add     ecx, ebx
.text:0000000000401A62                 js      loc_401E8F
.text:0000000000401A68                 mov     [rsp+200h+var_118], r12d
.text:0000000000401A70                 mov     r8d, ebx
.text:0000000000401A73
.text:0000000000401A73 loc_401A73:                             ; CODE XREF: main+D06↓j
.text:0000000000401A73                 mov     ecx, r8d
.text:0000000000401A76                 xor     r12d, r12d
.text:0000000000401A79                 add     ecx, r8d
.text:0000000000401A7C                 js      loc_402ACA
.text:0000000000401A82                 mov     r9d, eax
.text:0000000000401A85                 movsxd  rcx, eax
.text:0000000000401A88                 mov     [rsp+200h+var_58], rax
.text:0000000000401A90                 imul    rcx, 5DC4h
.text:0000000000401A97                 mov     [rsp+200h+var_50], rcx
.text:0000000000401A9F                 lea     r13d, [r9+1]
.text:0000000000401AA3                 movsxd  r13, r13d
.text:0000000000401AA6                 lea     ebx, [r9-1]
.text:0000000000401AAA                 movsxd  rbx, ebx
.text:0000000000401AAD                 imul    r10, rbx, 5DC4h
.text:0000000000401AB4                 imul    rsi, r13, 5DC4h
.text:0000000000401ABB                 mov     [rsp+200h+var_48], rsi
.text:0000000000401AC3                 mov     [rsp+200h+var_40], r10
.text:0000000000401ACB
.text:0000000000401ACB loc_401ACB:                             ; CODE XREF: main+CEB↓j
.text:0000000000401ACB                 mov     r10d, cs:ct
.text:0000000000401AD2                 cmp     r10d, ds:was[r15+r12*4]
.text:0000000000401ADA                 jnz     short loc_401AEC
.text:0000000000401ADC                 mov     ds:q[r15+r12*4], r14d
.text:0000000000401AE4                 inc     r14d
.text:0000000000401AE7                 jmp     loc_401DEF
.text:0000000000401AEC ; ---------------------------------------------------------------------------
.text:0000000000401AEC
.text:0000000000401AEC loc_401AEC:                             ; CODE XREF: main+9CA↑j
.text:0000000000401AEC                 cmp     r10d, ds:use[r15+r12*4]
.text:0000000000401AF4                 jz      loc_401DEF
.text:0000000000401AFA                 mov     ds:q[r15+r12*4], r14d
.text:0000000000401B02                 mov     ecx, r12d
.text:0000000000401B05                 mov     ds:use[r15+r12*4], r10d
.text:0000000000401B0D                 test    r13d, r13d
.text:0000000000401B10                 js      loc_402AB5
.text:0000000000401B16                 test    ecx, ecx
.text:0000000000401B18                 jl      loc_401BF9
.text:0000000000401B1E                 lea     eax, [r8+r8]
.text:0000000000401B22                 cmp     r13d, eax
.text:0000000000401B25                 jg      short loc_401B8A
.text:0000000000401B27                 cmp     ecx, eax
.text:0000000000401B29                 jg      short loc_401B8A
.text:0000000000401B2B                 movsxd  r11, r12d
.text:0000000000401B2E                 mov     rax, [rsp+200h+var_48]
.text:0000000000401B36                 cmp     r10d, ds:use[rax+r11*4]
.text:0000000000401B3E                 jz      short loc_401B8A
.text:0000000000401B40                 mov     rax, [rsp+200h+var_48]
.text:0000000000401B48                 cmp     r10d, ds:was[rax+r11*4]
.text:0000000000401B50                 jz      short loc_401B8A
.text:0000000000401B52                 mov     edi, r13d       ; int
.text:0000000000401B55                 mov     esi, ecx        ; int
.text:0000000000401B57                 mov     edx, r14d       ; int
.text:0000000000401B5A                 mov     [rsp+200h+var_70], ecx
.text:0000000000401B61                 mov     [rsp+200h+var_68], r9d
.text:0000000000401B69                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000401B6E                 mov     r9d, [rsp+200h+var_68]
.text:0000000000401B76                 test    ebx, ebx
.text:0000000000401B78                 mov     ecx, [rsp+200h+var_70]
.text:0000000000401B7F                 mov     r8d, cs:n
.text:0000000000401B86                 jns     short loc_401B8E
.text:0000000000401B88                 jmp     short loc_401BF9
.text:0000000000401B8A ; ---------------------------------------------------------------------------
.text:0000000000401B8A
.text:0000000000401B8A loc_401B8A:                             ; CODE XREF: main+A15↑j
.text:0000000000401B8A                                         ; main+A19↑j ...
.text:0000000000401B8A                 test    ebx, ebx
.text:0000000000401B8C                 js      short loc_401BF9
.text:0000000000401B8E
.text:0000000000401B8E loc_401B8E:                             ; CODE XREF: main+A76↑j
.text:0000000000401B8E                                         ; main+19AF↓j
.text:0000000000401B8E                 lea     eax, [r8+r8]
.text:0000000000401B92                 cmp     ebx, eax
.text:0000000000401B94                 jg      short loc_401BF9
.text:0000000000401B96                 cmp     ecx, eax
.text:0000000000401B98                 jg      short loc_401BF9
.text:0000000000401B9A                 movsxd  r11, r12d
.text:0000000000401B9D                 mov     rax, [rsp+200h+var_40]
.text:0000000000401BA5                 mov     r10d, cs:ct
.text:0000000000401BAC                 cmp     r10d, ds:use[rax+r11*4]
.text:0000000000401BB4                 jz      short loc_401BF9
.text:0000000000401BB6                 mov     rax, [rsp+200h+var_40]
.text:0000000000401BBE                 cmp     r10d, ds:was[rax+r11*4]
.text:0000000000401BC6                 jz      short loc_401BF9
.text:0000000000401BC8                 mov     edi, ebx        ; int
.text:0000000000401BCA                 mov     esi, ecx        ; int
.text:0000000000401BCC                 mov     edx, r14d       ; int
.text:0000000000401BCF                 mov     [rsp+200h+var_70], ecx
.text:0000000000401BD6                 mov     [rsp+200h+var_68], r9d
.text:0000000000401BDE                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000401BE3                 mov     r9d, [rsp+200h+var_68]
.text:0000000000401BEB                 mov     ecx, [rsp+200h+var_70]
.text:0000000000401BF2                 mov     r8d, cs:n
.text:0000000000401BF9
.text:0000000000401BF9 loc_401BF9:                             ; CODE XREF: main+A08↑j
.text:0000000000401BF9                                         ; main+A78↑j ...
.text:0000000000401BF9                 test    r9d, r9d
.text:0000000000401BFC                 lea     eax, [rcx+1]
.text:0000000000401BFF                 jl      loc_401C85
.text:0000000000401C05                 test    eax, eax
.text:0000000000401C07                 js      short loc_401C85
.text:0000000000401C09                 lea     r10d, [r8+r8]
.text:0000000000401C0D                 cmp     r9d, r10d
.text:0000000000401C10                 jg      short loc_401C85
.text:0000000000401C12                 cmp     eax, r10d
.text:0000000000401C15                 jg      short loc_401C85
.text:0000000000401C17                 movsxd  rdx, eax
.text:0000000000401C1A                 mov     r10, [rsp+200h+var_50]
.text:0000000000401C22                 mov     r11d, cs:ct
.text:0000000000401C29                 cmp     r11d, ds:use[r10+rdx*4]
.text:0000000000401C31                 jz      short loc_401C85
.text:0000000000401C33                 mov     r10, [rsp+200h+var_50]
.text:0000000000401C3B                 cmp     r11d, ds:was[r10+rdx*4]
.text:0000000000401C43                 jz      short loc_401C85
.text:0000000000401C45                 mov     edi, r9d        ; int
.text:0000000000401C48                 mov     esi, eax        ; int
.text:0000000000401C4A                 mov     edx, r14d       ; int
.text:0000000000401C4D                 mov     [rsp+200h+var_60], eax
.text:0000000000401C54                 mov     [rsp+200h+var_70], ecx
.text:0000000000401C5B                 mov     [rsp+200h+var_68], r9d
.text:0000000000401C63                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000401C68                 mov     r9d, [rsp+200h+var_68]
.text:0000000000401C70                 mov     ecx, [rsp+200h+var_70]
.text:0000000000401C77                 mov     eax, [rsp+200h+var_60]
.text:0000000000401C7E                 mov     r8d, cs:n
.text:0000000000401C85
.text:0000000000401C85 loc_401C85:                             ; CODE XREF: main+AEF↑j
.text:0000000000401C85                                         ; main+AF7↑j ...
.text:0000000000401C85                 dec     ecx
.text:0000000000401C87                 test    r9d, r9d
.text:0000000000401C8A                 jl      loc_401D10
.text:0000000000401C90                 test    ecx, ecx
.text:0000000000401C92                 js      short loc_401D10
.text:0000000000401C94                 lea     r10d, [r8+r8]
.text:0000000000401C98                 cmp     r9d, r10d
.text:0000000000401C9B                 jg      short loc_401D10
.text:0000000000401C9D                 cmp     ecx, r10d
.text:0000000000401CA0                 jg      short loc_401D10
.text:0000000000401CA2                 movsxd  rdx, ecx
.text:0000000000401CA5                 mov     r10, [rsp+200h+var_50]
.text:0000000000401CAD                 mov     r11d, cs:ct
.text:0000000000401CB4                 cmp     r11d, ds:use[r10+rdx*4]
.text:0000000000401CBC                 jz      short loc_401D10
.text:0000000000401CBE                 mov     r10, [rsp+200h+var_50]
.text:0000000000401CC6                 cmp     r11d, ds:was[r10+rdx*4]
.text:0000000000401CCE                 jz      short loc_401D10
.text:0000000000401CD0                 mov     edi, r9d        ; int
.text:0000000000401CD3                 mov     esi, ecx        ; int
.text:0000000000401CD5                 mov     edx, r14d       ; int
.text:0000000000401CD8                 mov     [rsp+200h+var_60], eax
.text:0000000000401CDF                 mov     [rsp+200h+var_70], ecx
.text:0000000000401CE6                 mov     [rsp+200h+var_68], r9d
.text:0000000000401CEE                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000401CF3                 mov     r9d, [rsp+200h+var_68]
.text:0000000000401CFB                 mov     ecx, [rsp+200h+var_70]
.text:0000000000401D02                 mov     eax, [rsp+200h+var_60]
.text:0000000000401D09                 mov     r8d, cs:n
.text:0000000000401D10
.text:0000000000401D10 loc_401D10:                             ; CODE XREF: main+B7A↑j
.text:0000000000401D10                                         ; main+B82↑j ...
.text:0000000000401D10                 test    r13d, r13d
.text:0000000000401D13                 js      short loc_401D87
.text:0000000000401D15                 test    eax, eax
.text:0000000000401D17                 js      short loc_401D87
.text:0000000000401D19                 lea     r10d, [r8+r8]
.text:0000000000401D1D                 cmp     r13d, r10d
.text:0000000000401D20                 jg      short loc_401D87
.text:0000000000401D22                 cmp     eax, r10d
.text:0000000000401D25                 jg      short loc_401D87
.text:0000000000401D27                 movsxd  rdx, eax
.text:0000000000401D2A                 mov     r10, [rsp+200h+var_48]
.text:0000000000401D32                 mov     r11d, cs:ct
.text:0000000000401D39                 cmp     r11d, ds:use[r10+rdx*4]
.text:0000000000401D41                 jz      short loc_401D87
.text:0000000000401D43                 mov     r10, [rsp+200h+var_48]
.text:0000000000401D4B                 cmp     r11d, ds:was[r10+rdx*4]
.text:0000000000401D53                 jz      short loc_401D87
.text:0000000000401D55                 mov     edi, r13d       ; int
.text:0000000000401D58                 mov     esi, eax        ; int
.text:0000000000401D5A                 mov     edx, r14d       ; int
.text:0000000000401D5D                 mov     [rsp+200h+var_70], ecx
.text:0000000000401D64                 mov     [rsp+200h+var_68], r9d
.text:0000000000401D6C                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000401D71                 mov     r9d, [rsp+200h+var_68]
.text:0000000000401D79                 mov     ecx, [rsp+200h+var_70]
.text:0000000000401D80                 mov     r8d, cs:n
.text:0000000000401D87
.text:0000000000401D87 loc_401D87:                             ; CODE XREF: main+C03↑j
.text:0000000000401D87                                         ; main+C07↑j ...
.text:0000000000401D87                 test    ebx, ebx
.text:0000000000401D89                 js      short loc_401DEC
.text:0000000000401D8B                 test    ecx, ecx
.text:0000000000401D8D                 js      short loc_401DEC
.text:0000000000401D8F                 lea     eax, [r8+r8]
.text:0000000000401D93                 cmp     ebx, eax
.text:0000000000401D95                 jg      short loc_401DEC
.text:0000000000401D97                 cmp     ecx, eax
.text:0000000000401D99                 jg      short loc_401DEC
.text:0000000000401D9B                 movsxd  r11, ecx
.text:0000000000401D9E                 mov     rax, [rsp+200h+var_40]
.text:0000000000401DA6                 mov     r10d, cs:ct
.text:0000000000401DAD                 cmp     r10d, ds:use[rax+r11*4]
.text:0000000000401DB5                 jz      short loc_401DEC
.text:0000000000401DB7                 mov     rax, [rsp+200h+var_40]
.text:0000000000401DBF                 cmp     r10d, ds:was[rax+r11*4]
.text:0000000000401DC7                 jz      short loc_401DEC
.text:0000000000401DC9                 mov     edi, ebx        ; int
.text:0000000000401DCB                 mov     esi, ecx        ; int
.text:0000000000401DCD                 mov     edx, r14d       ; int
.text:0000000000401DD0                 mov     [rsp+200h+var_68], r9d
.text:0000000000401DD8                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000401DDD                 mov     r9d, [rsp+200h+var_68]
.text:0000000000401DE5                 mov     r8d, cs:n
.text:0000000000401DEC
.text:0000000000401DEC loc_401DEC:                             ; CODE XREF: main+C79↑j
.text:0000000000401DEC                                         ; main+C7D↑j ...
.text:0000000000401DEC                 inc     r14d
.text:0000000000401DEF
.text:0000000000401DEF loc_401DEF:                             ; CODE XREF: main+9D7↑j
.text:0000000000401DEF                                         ; main+9E4↑j
.text:0000000000401DEF                 movsxd  rcx, r8d
.text:0000000000401DF2                 inc     r12
.text:0000000000401DF5                 add     rcx, rcx
.text:0000000000401DF8                 cmp     r12, rcx
.text:0000000000401DFB                 jle     loc_401ACB
.text:0000000000401E01                 mov     rax, [rsp+200h+var_58]
.text:0000000000401E09
.text:0000000000401E09 loc_401E09:                             ; CODE XREF: main+19C0↓j
.text:0000000000401E09                 inc     rax
.text:0000000000401E0C                 add     r15, 5DC4h
.text:0000000000401E13                 cmp     rax, rcx
.text:0000000000401E16                 jle     loc_401A73
.text:0000000000401E1C                 mov     r12d, [rsp+200h+var_118]
.text:0000000000401E24                 mov     ebx, r8d
.text:0000000000401E27                 mov     edx, cs:m
.text:0000000000401E2D                 mov     r13d, 1
.text:0000000000401E33                 test    r14d, r14d
.text:0000000000401E36                 jle     short loc_401E8F
.text:0000000000401E38                 cmp     r14d, 4
.text:0000000000401E3C                 jl      loc_402A72
.text:0000000000401E42                 mov     ecx, r14d
.text:0000000000401E45                 xor     eax, eax
.text:0000000000401E47                 and     ecx, 0FFFFFFFCh
.text:0000000000401E4A                 movsxd  rcx, ecx
.text:0000000000401E4D                 movdqa  xmm0, cs:_L_2il0floatpacket_784
.text:0000000000401E55                 movdqa  xmm1, [rsp+200h+var_90]
.text:0000000000401E5E
.text:0000000000401E5E loc_401E5E:                             ; CODE XREF: main+D62↓j
.text:0000000000401E5E                 movntdq ds:p[rax*4], xmm0
.text:0000000000401E67                 add     rax, 4
.text:0000000000401E6B                 paddd   xmm0, xmm1
.text:0000000000401E6F                 cmp     rax, rcx
.text:0000000000401E72                 jb      short loc_401E5E
.text:0000000000401E74                 mfence
.text:0000000000401E77
.text:0000000000401E77 loc_401E77:                             ; CODE XREF: main+1964↓j
.text:0000000000401E77                 mov     eax, ecx
.text:0000000000401E79                 cmp     eax, r14d
.text:0000000000401E7C                 jnb     short loc_401E8F
.text:0000000000401E7E
.text:0000000000401E7E loc_401E7E:                             ; CODE XREF: main+D7D↓j
.text:0000000000401E7E                 mov     dword ptr ds:p[rcx*4], eax
.text:0000000000401E85                 inc     eax
.text:0000000000401E87                 inc     rcx
.text:0000000000401E8A                 cmp     eax, r14d
.text:0000000000401E8D                 jb      short loc_401E7E
.text:0000000000401E8F
.text:0000000000401E8F loc_401E8F:                             ; CODE XREF: main+952↑j
.text:0000000000401E8F                                         ; main+D26↑j ...
.text:0000000000401E8F                 test    edx, edx
.text:0000000000401E91                 lea     r14d, [rdx+1]
.text:0000000000401E95                 jle     short loc_401EB3
.text:0000000000401E97                 cmp     edx, 18h
.text:0000000000401E9A                 jle     loc_402A26
.text:0000000000401EA0                 movsxd  rdx, edx
.text:0000000000401EA3                 mov     edi, offset cnt
.text:0000000000401EA8                 shl     rdx, 2
.text:0000000000401EAC                 xor     esi, esi
.text:0000000000401EAE                 call    _intel_fast_memset
.text:0000000000401EB3
.text:0000000000401EB3 loc_401EB3:                             ; CODE XREF: main+D85↑j
.text:0000000000401EB3                                         ; main+1940↓j ...
.text:0000000000401EB3                 mov     rcx, cs:qword_22BBA8E0
.text:0000000000401EBA                 mov     rax, 6666666666666667h
.text:0000000000401EC4                 sub     rcx, cs:v
.text:0000000000401ECB                 imul    rcx
.text:0000000000401ECE                 shr     rdx, 3
.text:0000000000401ED2                 sar     rcx, 3Fh
.text:0000000000401ED6                 sub     rdx, rcx
.text:0000000000401ED9                 movsxd  r15, edx
.text:0000000000401EDC                 lea     rdx, [r15+r15*4-5]
.text:0000000000401EE1                 shl     rdx, 2
.text:0000000000401EE5                 dec     r15
.text:0000000000401EE8                 jl      loc_402019
.text:0000000000401EEE                 mov     [rsp+200h+var_160], r14d
.text:0000000000401EF6                 mov     rbx, rdx
.text:0000000000401EF9                 mov     [rsp+200h+var_118], r12d
.text:0000000000401F01
.text:0000000000401F01 loc_401F01:                             ; CODE XREF: main+EE7↓j
.text:0000000000401F01                 mov     r13, cs:v
.text:0000000000401F08                 movsxd  rcx, dword ptr [r13+rbx+0]
.text:0000000000401F0D                 imul    rsi, rcx, 5DC4h
.text:0000000000401F14                 movsxd  rdi, dword ptr [rbx+r13+4]
.text:0000000000401F19                 movsxd  r8, dword ptr [rbx+r13+8]
.text:0000000000401F1E                 movsxd  r14, dword ptr [rbx+r13+0Ch]
.text:0000000000401F23                 mov     eax, [rbx+r13+10h]
.text:0000000000401F28                 movsxd  r13, ds:q[rsi+rdi*4]
.text:0000000000401F30                 mov     [rsp+200h+var_150], eax
.text:0000000000401F37                 mov     r12d, dword ptr ds:p[r13*4]
.text:0000000000401F3F                 movsxd  r12, r12d
.text:0000000000401F42                 cmp     r12, r13
.text:0000000000401F45                 jz      short loc_401F6A
.text:0000000000401F47                 mov     edi, r12d       ; int
.text:0000000000401F4A                 mov     [rsp+200h+var_158], r8
.text:0000000000401F52                 call    _Z2gpi          ; gp(int)
.text:0000000000401F57                 mov     r8, [rsp+200h+var_158]
.text:0000000000401F5F                 mov     r12d, eax
.text:0000000000401F62                 mov     dword ptr ds:p[r13*4], r12d
.text:0000000000401F6A
.text:0000000000401F6A loc_401F6A:                             ; CODE XREF: main+E35↑j
.text:0000000000401F6A                 imul    rax, r8, 5DC4h
.text:0000000000401F71                 movsxd  r14, ds:q[rax+r14*4]
.text:0000000000401F79                 mov     r13d, dword ptr ds:p[r14*4]
.text:0000000000401F81                 movsxd  r13, r13d
.text:0000000000401F84                 cmp     r13, r14
.text:0000000000401F87                 jz      short loc_401F9C
.text:0000000000401F89                 mov     edi, r13d       ; int
.text:0000000000401F8C                 call    _Z2gpi          ; gp(int)
.text:0000000000401F91                 mov     r13d, eax
.text:0000000000401F94                 mov     dword ptr ds:p[r14*4], r13d
.text:0000000000401F9C
.text:0000000000401F9C loc_401F9C:                             ; CODE XREF: main+E77↑j
.text:0000000000401F9C                 cmp     r12d, r13d
.text:0000000000401F9F                 jz      short loc_401FF0
.text:0000000000401FA1                 call    _rand
.text:0000000000401FA6                 test    al, 1
.text:0000000000401FA8                 jz      short loc_401FB7
.text:0000000000401FAA                 movsxd  r12, r12d
.text:0000000000401FAD                 mov     dword ptr ds:p[r12*4], r13d
.text:0000000000401FB5                 jmp     short loc_401FC2
.text:0000000000401FB7 ; ---------------------------------------------------------------------------
.text:0000000000401FB7
.text:0000000000401FB7 loc_401FB7:                             ; CODE XREF: main+E98↑j
.text:0000000000401FB7                 movsxd  r13, r13d
.text:0000000000401FBA                 mov     dword ptr ds:p[r13*4], r12d
.text:0000000000401FC2
.text:0000000000401FC2 loc_401FC2:                             ; CODE XREF: main+EA5↑j
.text:0000000000401FC2                 mov     eax, [rsp+200h+var_150]
.text:0000000000401FC9                 movsxd  rax, eax
.text:0000000000401FCC                 mov     esi, [rsp+200h+var_160]
.text:0000000000401FD3                 mov     ecx, dword ptr ds:cnt[rax*4]
.text:0000000000401FDA                 inc     ecx
.text:0000000000401FDC                 cmp     ecx, 1
.text:0000000000401FDF                 mov     dword ptr ds:cnt[rax*4], ecx
.text:0000000000401FE6                 cmovg   esi, eax
.text:0000000000401FE9                 mov     [rsp+200h+var_160], esi
.text:0000000000401FF0
.text:0000000000401FF0 loc_401FF0:                             ; CODE XREF: main+E8F↑j
.text:0000000000401FF0                 add     rbx, 0FFFFFFFFFFFFFFECh
.text:0000000000401FF4                 dec     r15
.text:0000000000401FF7                 jns     loc_401F01
.text:0000000000401FFD                 mov     r14d, [rsp+200h+var_160]
.text:0000000000402005                 mov     r13d, 1
.text:000000000040200B                 mov     r12d, [rsp+200h+var_118]
.text:0000000000402013                 mov     ebx, cs:n
.text:0000000000402019
.text:0000000000402019 loc_402019:                             ; CODE XREF: main+DD8↑j
.text:0000000000402019                 xor     eax, eax
.text:000000000040201B                 lea     edi, [rbx+rbx]
.text:000000000040201E                 mov     ecx, 1
.text:0000000000402023                 mov     edx, 5DC4h
.text:0000000000402028                 cmp     edi, 1
.text:000000000040202B                 jle     loc_4020D9
.text:0000000000402031                 movsxd  rbx, ebx
.text:0000000000402034                 add     rbx, rbx
.text:0000000000402037
.text:0000000000402037 loc_402037:                             ; CODE XREF: main+F70↓j
.text:0000000000402037                 mov     r10d, ds:f[rcx*4]
.text:000000000040203F                 movsxd  rdi, r10d
.text:0000000000402042                 cmp     ds:w[rcx*4], 0
.text:000000000040204A                 jle     short loc_402073
.text:000000000040204C                 lea     r9, [rdx+rdi*4]
.text:0000000000402050                 mov     edi, ds:f[rcx*4]
.text:0000000000402057                 add     edi, ds:w[rcx*4]
.text:000000000040205E
.text:000000000040205E loc_40205E:                             ; CODE XREF: main+F61↓j
.text:000000000040205E                 inc     r10d
.text:0000000000402061                 mov     ds:q[r9], eax
.text:0000000000402068                 inc     eax
.text:000000000040206A                 add     r9, 4
.text:000000000040206E                 cmp     r10d, edi
.text:0000000000402071                 jl      short loc_40205E
.text:0000000000402073
.text:0000000000402073 loc_402073:                             ; CODE XREF: main+F3A↑j
.text:0000000000402073                 inc     rcx
.text:0000000000402076                 add     rdx, 5DC4h
.text:000000000040207D                 cmp     rcx, rbx
.text:0000000000402080                 jl      short loc_402037
.text:0000000000402082                 test    eax, eax
.text:0000000000402084                 jle     short loc_4020D9
.text:0000000000402086                 cmp     eax, 4
.text:0000000000402089                 jl      loc_402A1F
.text:000000000040208F                 mov     ecx, eax
.text:0000000000402091                 xor     edx, edx
.text:0000000000402093                 and     ecx, 0FFFFFFFCh
.text:0000000000402096                 movsxd  rcx, ecx
.text:0000000000402099                 movdqa  xmm0, cs:_L_2il0floatpacket_784
.text:00000000004020A1                 movdqa  xmm1, [rsp+200h+var_90]
.text:00000000004020AA
.text:00000000004020AA loc_4020AA:                             ; CODE XREF: main+FAE↓j
.text:00000000004020AA                 movntdq ds:p[rdx*4], xmm0
.text:00000000004020B3                 add     rdx, 4
.text:00000000004020B7                 paddd   xmm0, xmm1
.text:00000000004020BB                 cmp     rdx, rcx
.text:00000000004020BE                 jb      short loc_4020AA
.text:00000000004020C0                 mfence
.text:00000000004020C3
.text:00000000004020C3 loc_4020C3:                             ; CODE XREF: main+1911↓j
.text:00000000004020C3                 mov     edx, ecx
.text:00000000004020C5                 cmp     edx, eax
.text:00000000004020C7                 jnb     short loc_4020D9
.text:00000000004020C9
.text:00000000004020C9 loc_4020C9:                             ; CODE XREF: main+FC7↓j
.text:00000000004020C9                 mov     dword ptr ds:p[rcx*4], edx
.text:00000000004020D0                 inc     edx
.text:00000000004020D2                 inc     rcx
.text:00000000004020D5                 cmp     edx, eax
.text:00000000004020D7                 jb      short loc_4020C9
.text:00000000004020D9
.text:00000000004020D9 loc_4020D9:                             ; CODE XREF: main+F1B↑j
.text:00000000004020D9                                         ; main+F74↑j ...
.text:00000000004020D9                 xor     ebx, ebx
.text:00000000004020DB                 mov     edi, offset _ZSt4cout@@GLIBCXX_3_4
.text:00000000004020E0                 mov     esi, offset aCase ; "Case #"
.text:00000000004020E5                 xor     r15d, r15d
.text:00000000004020E8                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:00000000004020ED                 mov     rdi, rax
.text:00000000004020F0                 mov     esi, r12d
.text:00000000004020F3                 call    __ZNSolsEi      ; std::ostream::operator<<(int)
.text:00000000004020F8                 mov     rdi, rax
.text:00000000004020FB                 mov     esi, offset asc_4060CC ; ": "
.text:0000000000402100                 call    __ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc ; std::operator<<<std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &,char const*)
.text:0000000000402105                 xor     edx, edx
.text:0000000000402107                 xor     eax, eax
.text:0000000000402109                 cmp     cs:m, 0
.text:0000000000402110                 jle     loc_4029D2
.text:0000000000402116                 mov     [rsp+200h+var_1C8], rax
.text:000000000040211B                 mov     [rsp+200h+var_168], edx
.text:0000000000402122                 mov     [rsp+200h+var_1E8], r15
.text:0000000000402127                 mov     [rsp+200h+var_1D0], rbx
.text:000000000040212C                 mov     [rsp+200h+var_160], r14d
.text:0000000000402134                 mov     [rsp+200h+var_118], r12d
.text:000000000040213C
.text:000000000040213C loc_40213C:                             ; CODE XREF: main+18AE↓j
.text:000000000040213C                 mov     rcx, [rsp+200h+var_1C8]
.text:0000000000402141                 mov     rax, 6666666666666667h
.text:000000000040214B                 mov     rbx, cs:qword_22BBA8F8
.text:0000000000402152                 movsxd  r12, ds:x[rcx*4]
.text:000000000040215A                 movsxd  r13, ds:y[rcx*4]
.text:0000000000402162                 mov     rcx, cs:u
.text:0000000000402169                 sub     rbx, rcx
.text:000000000040216C                 imul    rbx
.text:000000000040216F                 shr     rdx, 3
.text:0000000000402173                 sar     rbx, 3Fh
.text:0000000000402177                 sub     rdx, rbx
.text:000000000040217A                 movsxd  rsi, edx
.text:000000000040217D                 cmp     rsi, [rsp+200h+var_1D0]
.text:0000000000402182                 jle     loc_4022A9
.text:0000000000402188                 mov     [rsp+200h+var_1E0], r13
.text:000000000040218D                 mov     [rsp+200h+var_1D8], r12
.text:0000000000402192                 mov     r14, [rsp+200h+var_1E8]
.text:0000000000402197                 mov     r13, [rsp+200h+var_1D0]
.text:000000000040219C
.text:000000000040219C loc_40219C:                             ; CODE XREF: main+117F↓j
.text:000000000040219C                 mov     eax, [rsp+200h+var_168]
.text:00000000004021A3                 cmp     eax, [r14+rcx+10h]
.text:00000000004021A8                 jl      loc_402295
.text:00000000004021AE                 movsxd  r15, dword ptr [rcx+r14]
.text:00000000004021B2                 movsxd  rax, dword ptr [r14+rcx+4]
.text:00000000004021B7                 movsxd  rbx, dword ptr [r14+rcx+8]
.text:00000000004021BC                 movsxd  rdx, dword ptr [r14+rcx+0Ch]
.text:00000000004021C1                 imul    rcx, r15, 5DC4h
.text:00000000004021C8                 movsxd  r15, ds:q[rcx+rax*4]
.text:00000000004021D0                 mov     r12d, dword ptr ds:p[r15*4]
.text:00000000004021D8                 movsxd  r12, r12d
.text:00000000004021DB                 cmp     r12, r15
.text:00000000004021DE                 jz      short loc_402203
.text:00000000004021E0                 mov     edi, r12d       ; int
.text:00000000004021E3                 mov     [rsp+200h+var_170], rdx
.text:00000000004021EB                 call    _Z2gpi          ; gp(int)
.text:00000000004021F0                 mov     rdx, [rsp+200h+var_170]
.text:00000000004021F8                 mov     r12d, eax
.text:00000000004021FB                 mov     dword ptr ds:p[r15*4], r12d
.text:0000000000402203
.text:0000000000402203 loc_402203:                             ; CODE XREF: main+10CE↑j
.text:0000000000402203                 imul    r15, rbx, 5DC4h
.text:000000000040220A                 movsxd  r15, ds:q[r15+rdx*4]
.text:0000000000402212                 mov     ebx, dword ptr ds:p[r15*4]
.text:000000000040221A                 movsxd  rbx, ebx
.text:000000000040221D                 cmp     rbx, r15
.text:0000000000402220                 jz      short loc_402233
.text:0000000000402222                 mov     edi, ebx        ; int
.text:0000000000402224                 call    _Z2gpi          ; gp(int)
.text:0000000000402229                 mov     ebx, eax
.text:000000000040222B                 mov     dword ptr ds:p[r15*4], ebx
.text:0000000000402233
.text:0000000000402233 loc_402233:                             ; CODE XREF: main+1110↑j
.text:0000000000402233                 cmp     r12d, ebx
.text:0000000000402236                 jz      short loc_402259
.text:0000000000402238                 call    _rand
.text:000000000040223D                 test    al, 1
.text:000000000040223F                 jz      short loc_40224E
.text:0000000000402241                 movsxd  r12, r12d
.text:0000000000402244                 mov     dword ptr ds:p[r12*4], ebx
.text:000000000040224C                 jmp     short loc_402259
.text:000000000040224E ; ---------------------------------------------------------------------------
.text:000000000040224E
.text:000000000040224E loc_40224E:                             ; CODE XREF: main+112F↑j
.text:000000000040224E                 movsxd  rbx, ebx
.text:0000000000402251                 mov     dword ptr ds:p[rbx*4], r12d
.text:0000000000402259
.text:0000000000402259 loc_402259:                             ; CODE XREF: main+1126↑j
.text:0000000000402259                                         ; main+113C↑j
.text:0000000000402259                 mov     rbx, cs:qword_22BBA8F8
.text:0000000000402260                 mov     rax, 6666666666666667h
.text:000000000040226A                 mov     rcx, cs:u
.text:0000000000402271                 sub     rbx, rcx
.text:0000000000402274                 imul    rbx
.text:0000000000402277                 shr     rdx, 3
.text:000000000040227B                 inc     r13
.text:000000000040227E                 sar     rbx, 3Fh
.text:0000000000402282                 add     r14, 14h
.text:0000000000402286                 sub     rdx, rbx
.text:0000000000402289                 movsxd  rsi, edx
.text:000000000040228C                 cmp     r13, rsi
.text:000000000040228F                 jl      loc_40219C
.text:0000000000402295
.text:0000000000402295 loc_402295:                             ; CODE XREF: main+1098↑j
.text:0000000000402295                 mov     [rsp+200h+var_1D0], r13
.text:000000000040229A                 mov     [rsp+200h+var_1E8], r14
.text:000000000040229F                 mov     r13, [rsp+200h+var_1E0]
.text:00000000004022A4                 mov     r12, [rsp+200h+var_1D8]
.text:00000000004022A9
.text:00000000004022A9 loc_4022A9:                             ; CODE XREF: main+1072↑j
.text:00000000004022A9                 movsxd  r14, cs:dword_118CF548
.text:00000000004022B0                 xor     ecx, ecx
.text:00000000004022B2                 mov     eax, [rsp+200h+var_168]
.text:00000000004022B9                 mov     edx, 1
.text:00000000004022BE                 cmp     eax, [rsp+200h+var_160]
.text:00000000004022C5                 mov     ebx, dword ptr ds:p[r14*4]
.text:00000000004022CD                 movsxd  rbx, ebx
.text:00000000004022D0                 cmovz   ecx, edx
.text:00000000004022D3                 mov     [rsp+200h+var_1C0], ecx
.text:00000000004022D7                 cmp     rbx, r14
.text:00000000004022DA                 jz      short loc_4022ED
.text:00000000004022DC                 mov     edi, ebx        ; int
.text:00000000004022DE                 call    _Z2gpi          ; gp(int)
.text:00000000004022E3                 mov     ebx, eax
.text:00000000004022E5                 mov     dword ptr ds:p[r14*4], ebx
.text:00000000004022ED
.text:00000000004022ED loc_4022ED:                             ; CODE XREF: main+11CA↑j
.text:00000000004022ED                 imul    r12, 5DC4h
.text:00000000004022F4                 movsxd  r14, ds:q[r12+r13*4]
.text:00000000004022FC                 mov     eax, dword ptr ds:p[r14*4]
.text:0000000000402304                 mov     [rsp+200h+var_188], eax
.text:0000000000402308                 movsxd  rax, eax
.text:000000000040230B                 cmp     rax, r14
.text:000000000040230E                 jz      short loc_402325
.text:0000000000402310                 mov     edi, [rsp+200h+var_188] ; int
.text:0000000000402314                 call    _Z2gpi          ; gp(int)
.text:0000000000402319                 mov     [rsp+200h+var_188], eax
.text:000000000040231D                 mov     dword ptr ds:p[r14*4], eax
.text:0000000000402325
.text:0000000000402325 loc_402325:                             ; CODE XREF: main+11FE↑j
.text:0000000000402325                 movsxd  r14, cs:n
.text:000000000040232C                 movsxd  r14, ds:dword_118CF544[r14*4]
.text:0000000000402334                 mov     r15d, dword ptr ds:p[r14*4]
.text:000000000040233C                 movsxd  r15, r15d
.text:000000000040233F                 cmp     r15, r14
.text:0000000000402342                 jz      short loc_402357
.text:0000000000402344                 mov     edi, r15d       ; int
.text:0000000000402347                 call    _Z2gpi          ; gp(int)
.text:000000000040234C                 mov     r15d, eax
.text:000000000040234F                 mov     dword ptr ds:p[r14*4], r15d
.text:0000000000402357
.text:0000000000402357 loc_402357:                             ; CODE XREF: main+1232↑j
.text:0000000000402357                 movsxd  r14, ds:q[r12+r13*4]
.text:000000000040235F                 mov     eax, dword ptr ds:p[r14*4]
.text:0000000000402367                 mov     [rsp+200h+var_1A0], eax
.text:000000000040236B                 movsxd  rax, eax
.text:000000000040236E                 cmp     rax, r14
.text:0000000000402371                 jz      short loc_402388
.text:0000000000402373                 mov     edi, [rsp+200h+var_1A0] ; int
.text:0000000000402377                 call    _Z2gpi          ; gp(int)
.text:000000000040237C                 mov     [rsp+200h+var_1A0], eax
.text:0000000000402380                 mov     dword ptr ds:p[r14*4], eax
.text:0000000000402388
.text:0000000000402388 loc_402388:                             ; CODE XREF: main+1261↑j
.text:0000000000402388                 movsxd  r14, cs:n
.text:000000000040238F                 imul    rax, r14, 5DC4h
.text:0000000000402396                 movsxd  r14, ds:dword_118C9784[rax]
.text:000000000040239D                 mov     edx, dword ptr ds:p[r14*4]
.text:00000000004023A5                 mov     [rsp+200h+var_178], edx
.text:00000000004023AC                 movsxd  rdx, edx
.text:00000000004023AF                 cmp     rdx, r14
.text:00000000004023B2                 jz      short loc_4023CF
.text:00000000004023B4                 mov     edi, [rsp+200h+var_178] ; int
.text:00000000004023BB                 call    _Z2gpi          ; gp(int)
.text:00000000004023C0                 mov     [rsp+200h+var_178], eax
.text:00000000004023C7                 mov     dword ptr ds:p[r14*4], eax
.text:00000000004023CF
.text:00000000004023CF loc_4023CF:                             ; CODE XREF: main+12A2↑j
.text:00000000004023CF                 movsxd  r14, ds:q[r12+r13*4]
.text:00000000004023D7                 mov     eax, dword ptr ds:p[r14*4]
.text:00000000004023DF                 mov     [rsp+200h+var_190], eax
.text:00000000004023E3                 movsxd  rax, eax
.text:00000000004023E6                 cmp     rax, r14
.text:00000000004023E9                 jz      short loc_402400
.text:00000000004023EB                 mov     edi, [rsp+200h+var_190] ; int
.text:00000000004023EF                 call    _Z2gpi          ; gp(int)
.text:00000000004023F4                 mov     [rsp+200h+var_190], eax
.text:00000000004023F8                 mov     dword ptr ds:p[r14*4], eax
.text:0000000000402400
.text:0000000000402400 loc_402400:                             ; CODE XREF: main+12D9↑j
.text:0000000000402400                 movsxd  r14, cs:n
.text:0000000000402407                 imul    rax, r14, 5DCCh
.text:000000000040240E                 movsxd  r14, ds:dword_118C977C[rax]
.text:0000000000402415                 mov     edx, dword ptr ds:p[r14*4]
.text:000000000040241D                 mov     [rsp+200h+var_180], edx
.text:0000000000402424                 movsxd  rdx, edx
.text:0000000000402427                 cmp     rdx, r14
.text:000000000040242A                 jz      short loc_402447
.text:000000000040242C                 mov     edi, [rsp+200h+var_180] ; int
.text:0000000000402433                 call    _Z2gpi          ; gp(int)
.text:0000000000402438                 mov     [rsp+200h+var_180], eax
.text:000000000040243F                 mov     dword ptr ds:p[r14*4], eax
.text:0000000000402447
.text:0000000000402447 loc_402447:                             ; CODE XREF: main+131A↑j
.text:0000000000402447                 movsxd  r14, ds:q[r12+r13*4]
.text:000000000040244F                 mov     eax, dword ptr ds:p[r14*4]
.text:0000000000402457                 mov     [rsp+200h+var_198], eax
.text:000000000040245B                 movsxd  rax, eax
.text:000000000040245E                 cmp     rax, r14
.text:0000000000402461                 jz      short loc_402478
.text:0000000000402463                 mov     edi, [rsp+200h+var_198] ; int
.text:0000000000402467                 call    _Z2gpi          ; gp(int)
.text:000000000040246C                 mov     [rsp+200h+var_198], eax
.text:0000000000402470                 mov     dword ptr ds:p[r14*4], eax
.text:0000000000402478
.text:0000000000402478 loc_402478:                             ; CODE XREF: main+1351↑j
.text:0000000000402478                 movsxd  rax, cs:n
.text:000000000040247F                 imul    rdx, rax, 0BB8Ch
.text:0000000000402486                 movsxd  rdx, ds:dword_118C39BC[rdx]
.text:000000000040248D                 mov     r14d, dword ptr ds:p[rdx*4]
.text:0000000000402495                 movsxd  r14, r14d
.text:0000000000402498                 cmp     r14, rdx
.text:000000000040249B                 jz      short loc_4024B8
.text:000000000040249D                 mov     edi, r14d       ; int
.text:00000000004024A0                 mov     [rsp+200h+var_200], rdx
.text:00000000004024A4                 call    _Z2gpi          ; gp(int)
.text:00000000004024A9                 mov     rdx, [rsp+200h+var_200]
.text:00000000004024AD                 mov     r14d, eax
.text:00000000004024B0                 mov     dword ptr ds:p[rdx*4], r14d
.text:00000000004024B8
.text:00000000004024B8 loc_4024B8:                             ; CODE XREF: main+138B↑j
.text:00000000004024B8                 movsxd  rax, ds:q[r12+r13*4]
.text:00000000004024C0                 mov     [rsp+200h+var_1A8], rax
.text:00000000004024C5                 mov     esi, dword ptr ds:p[rax*4]
.text:00000000004024CC                 movsxd  rsi, esi
.text:00000000004024CF                 cmp     rsi, rax
.text:00000000004024D2                 jz      short loc_4024E9
.text:00000000004024D4                 mov     edi, esi        ; int
.text:00000000004024D6                 call    _Z2gpi          ; gp(int)
.text:00000000004024DB                 mov     esi, eax
.text:00000000004024DD                 mov     rax, [rsp+200h+var_1A8]
.text:00000000004024E2                 mov     dword ptr ds:p[rax*4], esi
.text:00000000004024E9
.text:00000000004024E9 loc_4024E9:                             ; CODE XREF: main+13C2↑j
.text:00000000004024E9                 movsxd  rdx, cs:n
.text:00000000004024F0                 imul    rax, rdx, 0BB90h
.text:00000000004024F7                 movsxd  rcx, ds:dword_118C39B8[rax]
.text:00000000004024FE                 mov     [rsp+200h+var_1B0], rcx
.text:0000000000402503                 mov     edx, dword ptr ds:p[rcx*4]
.text:000000000040250A                 movsxd  rdx, edx
.text:000000000040250D                 cmp     rdx, rcx
.text:0000000000402510                 jz      short loc_40252F
.text:0000000000402512                 mov     edi, edx        ; int
.text:0000000000402514                 mov     [rsp+200h+var_1F8], esi
.text:0000000000402518                 call    _Z2gpi          ; gp(int)
.text:000000000040251D                 mov     esi, [rsp+200h+var_1F8]
.text:0000000000402521                 mov     edx, eax
.text:0000000000402523                 mov     rax, [rsp+200h+var_1B0]
.text:0000000000402528                 mov     dword ptr ds:p[rax*4], edx
.text:000000000040252F
.text:000000000040252F loc_40252F:                             ; CODE XREF: main+1400↑j
.text:000000000040252F                 movsxd  rax, ds:q[r12+r13*4]
.text:0000000000402537                 mov     [rsp+200h+var_1B8], rax
.text:000000000040253C                 mov     edi, dword ptr ds:p[rax*4]
.text:0000000000402543                 movsxd  rdi, edi        ; int
.text:0000000000402546                 cmp     rdi, rax
.text:0000000000402549                 jz      short loc_40256E
.text:000000000040254B                 mov     [rsp+200h+var_1F0], edx
.text:000000000040254F                 mov     [rsp+200h+var_1F8], esi
.text:0000000000402553                 call    _Z2gpi          ; gp(int)
.text:0000000000402558                 mov     esi, [rsp+200h+var_1F8]
.text:000000000040255C                 mov     edi, eax
.text:000000000040255E                 mov     edx, [rsp+200h+var_1F0]
.text:0000000000402562                 mov     rax, [rsp+200h+var_1B8]
.text:0000000000402567                 mov     dword ptr ds:p[rax*4], edi
.text:000000000040256E
.text:000000000040256E loc_40256E:                             ; CODE XREF: main+1439↑j
.text:000000000040256E                 xor     ecx, ecx
.text:0000000000402570                 mov     eax, 1
.text:0000000000402575                 cmp     ebx, [rsp+200h+var_188]
.text:0000000000402579                 cmovz   ecx, eax
.text:000000000040257C                 xor     ebx, ebx
.text:000000000040257E                 xor     r9d, r9d
.text:0000000000402581                 cmp     r15d, [rsp+200h+var_1A0]
.text:0000000000402586                 mov     r8d, [rsp+200h+var_178]
.text:000000000040258E                 cmovz   ebx, eax
.text:0000000000402591                 xor     r11d, r11d
.text:0000000000402594                 pxor    xmm1, xmm1
.text:0000000000402598                 cmp     r8d, [rsp+200h+var_190]
.text:000000000040259D                 pxor    xmm0, xmm0
.text:00000000004025A1                 mov     r10d, [rsp+200h+var_180]
.text:00000000004025A9                 cmovz   r9d, eax
.text:00000000004025AD                 add     ecx, ebx
.text:00000000004025AF                 cmp     r10d, [rsp+200h+var_198]
.text:00000000004025B4                 movaps  cs:cur, xmm0
.text:00000000004025BB                 cmovz   r11d, eax
.text:00000000004025BF                 cmp     r14d, esi
.text:00000000004025C2                 mov     esi, 0
.text:00000000004025C7                 cmovz   esi, eax
.text:00000000004025CA                 add     ecx, r9d
.text:00000000004025CD                 cmp     edx, edi
.text:00000000004025CF                 mov     edx, 0
.text:00000000004025D4                 movq    cs:qword_22BBA8D0, xmm1
.text:00000000004025DC                 cmovz   edx, eax
.text:00000000004025DF                 add     ecx, r11d
.text:00000000004025E2                 add     ecx, esi
.text:00000000004025E4                 add     ecx, edx
.text:00000000004025E6                 cmp     ecx, 2
.text:00000000004025E9                 mov     ecx, 0
.text:00000000004025EE                 cmovge  ecx, eax
.text:00000000004025F1                 mov     r14d, 1
.text:00000000004025F7                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:00000000004025FD                 cmp     cs:n, 2
.text:0000000000402604                 jle     loc_402968
.text:000000000040260A                 mov     edx, 2
.text:000000000040260F                 mov     [rsp+200h+var_C0], edx
.text:0000000000402616                 mov     [rsp+200h+var_140], ecx
.text:000000000040261D
.text:000000000040261D loc_40261D:                             ; CODE XREF: main+184B↓j
.text:000000000040261D                 movsxd  r14, r14d
.text:0000000000402620                 movsxd  rbx, ds:dword_118CF548[r14*4]
.text:0000000000402628                 mov     edx, dword ptr ds:p[rbx*4]
.text:000000000040262F                 movsxd  rdi, edx
.text:0000000000402632                 cmp     rdi, rbx
.text:0000000000402635                 jz      short loc_40264D
.text:0000000000402637                 mov     edi, edx        ; int
.text:0000000000402639                 call    _Z2gpi          ; gp(int)
.text:000000000040263E                 mov     edx, eax
.text:0000000000402640                 mov     dword ptr ds:p[rbx*4], edx
.text:0000000000402647                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:000000000040264D
.text:000000000040264D loc_40264D:                             ; CODE XREF: main+1525↑j
.text:000000000040264D                 movsxd  rbx, ds:q[r12+r13*4]
.text:0000000000402655                 mov     edi, dword ptr ds:p[rbx*4]
.text:000000000040265C                 movsxd  rdi, edi        ; int
.text:000000000040265F                 cmp     rdi, rbx
.text:0000000000402662                 jz      short loc_402686
.text:0000000000402664                 mov     [rsp+200h+var_E0], edx
.text:000000000040266B                 call    _Z2gpi          ; gp(int)
.text:0000000000402670                 mov     edx, [rsp+200h+var_E0]
.text:0000000000402677                 mov     edi, eax
.text:0000000000402679                 mov     dword ptr ds:p[rbx*4], edi
.text:0000000000402680                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:0000000000402686
.text:0000000000402686 loc_402686:                             ; CODE XREF: main+1552↑j
.text:0000000000402686                 xor     r15d, r15d
.text:0000000000402689                 mov     ebx, 1
.text:000000000040268E                 cmp     edx, edi
.text:0000000000402690                 cmovz   r15d, ebx
.text:0000000000402694                 imul    rbx, r14, 5DC4h
.text:000000000040269B                 or      dword ptr cs:cur, r15d
.text:00000000004026A2                 movsxd  r15, ds:dword_118CF548[rbx]
.text:00000000004026A9                 mov     edx, dword ptr ds:p[r15*4]
.text:00000000004026B1                 movsxd  rdi, edx
.text:00000000004026B4                 cmp     rdi, r15
.text:00000000004026B7                 jz      short loc_4026D0
.text:00000000004026B9                 mov     edi, edx        ; int
.text:00000000004026BB                 call    _Z2gpi          ; gp(int)
.text:00000000004026C0                 mov     edx, eax
.text:00000000004026C2                 mov     dword ptr ds:p[r15*4], edx
.text:00000000004026CA                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:00000000004026D0
.text:00000000004026D0 loc_4026D0:                             ; CODE XREF: main+15A7↑j
.text:00000000004026D0                 movsxd  r15, ds:q[r12+r13*4]
.text:00000000004026D8                 mov     edi, dword ptr ds:p[r15*4]
.text:00000000004026E0                 movsxd  rdi, edi        ; int
.text:00000000004026E3                 cmp     rdi, r15
.text:00000000004026E6                 jz      short loc_40270B
.text:00000000004026E8                 mov     [rsp+200h+var_D8], edx
.text:00000000004026EF                 call    _Z2gpi          ; gp(int)
.text:00000000004026F4                 mov     edx, [rsp+200h+var_D8]
.text:00000000004026FB                 mov     edi, eax
.text:00000000004026FD                 mov     dword ptr ds:p[r15*4], edi
.text:0000000000402705                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:000000000040270B
.text:000000000040270B loc_40270B:                             ; CODE XREF: main+15D6↑j
.text:000000000040270B                 movsxd  rsi, cs:n
.text:0000000000402712                 lea     rcx, ds:0[r14*4]
.text:000000000040271A                 mov     r15d, 1
.text:0000000000402720                 cmp     edx, edi
.text:0000000000402722                 mov     edx, 0
.text:0000000000402727                 cmovz   edx, r15d
.text:000000000040272B                 lea     rdi, [rcx+rsi*4]
.text:000000000040272F                 movsxd  r15, ds:dword_118CF544[rbx+rdi]
.text:0000000000402737                 or      dword ptr cs:cur+4, edx
.text:000000000040273D                 mov     edx, dword ptr ds:p[r15*4]
.text:0000000000402745                 movsxd  rdi, edx
.text:0000000000402748                 cmp     rdi, r15
.text:000000000040274B                 jz      short loc_402764
.text:000000000040274D                 mov     edi, edx        ; int
.text:000000000040274F                 call    _Z2gpi          ; gp(int)
.text:0000000000402754                 mov     edx, eax
.text:0000000000402756                 mov     dword ptr ds:p[r15*4], edx
.text:000000000040275E                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:0000000000402764
.text:0000000000402764 loc_402764:                             ; CODE XREF: main+163B↑j
.text:0000000000402764                 movsxd  r15, ds:q[r12+r13*4]
.text:000000000040276C                 mov     edi, dword ptr ds:p[r15*4]
.text:0000000000402774                 movsxd  rdi, edi        ; int
.text:0000000000402777                 cmp     rdi, r15
.text:000000000040277A                 jz      short loc_40279F
.text:000000000040277C                 mov     [rsp+200h+var_D0], edx
.text:0000000000402783                 call    _Z2gpi          ; gp(int)
.text:0000000000402788                 mov     edx, [rsp+200h+var_D0]
.text:000000000040278F                 mov     edi, eax
.text:0000000000402791                 mov     dword ptr ds:p[r15*4], edi
.text:0000000000402799                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:000000000040279F
.text:000000000040279F loc_40279F:                             ; CODE XREF: main+166A↑j
.text:000000000040279F                 movsxd  rsi, cs:n
.text:00000000004027A6                 xor     ecx, ecx
.text:00000000004027A8                 cmp     edx, edi
.text:00000000004027AA                 mov     edx, 1
.text:00000000004027AF                 cmovz   ecx, edx
.text:00000000004027B2                 imul    rdi, rsi, 5DC4h
.text:00000000004027B9                 or      dword ptr cs:cur+8, ecx
.text:00000000004027BF                 lea     r8, [rdi+r14*4]
.text:00000000004027C3                 movsxd  rbx, ds:dword_118C9784[rbx+r8]
.text:00000000004027CB                 mov     edx, dword ptr ds:p[rbx*4]
.text:00000000004027D2                 movsxd  rdi, edx
.text:00000000004027D5                 cmp     rdi, rbx
.text:00000000004027D8                 jz      short loc_4027F0
.text:00000000004027DA                 mov     edi, edx        ; int
.text:00000000004027DC                 call    _Z2gpi          ; gp(int)
.text:00000000004027E1                 mov     edx, eax
.text:00000000004027E3                 mov     dword ptr ds:p[rbx*4], edx
.text:00000000004027EA                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:00000000004027F0
.text:00000000004027F0 loc_4027F0:                             ; CODE XREF: main+16C8↑j
.text:00000000004027F0                 movsxd  rbx, ds:q[r12+r13*4]
.text:00000000004027F8                 mov     edi, dword ptr ds:p[rbx*4]
.text:00000000004027FF                 movsxd  rdi, edi        ; int
.text:0000000000402802                 cmp     rdi, rbx
.text:0000000000402805                 jz      short loc_402829
.text:0000000000402807                 mov     [rsp+200h+var_C8], edx
.text:000000000040280E                 call    _Z2gpi          ; gp(int)
.text:0000000000402813                 mov     edx, [rsp+200h+var_C8]
.text:000000000040281A                 mov     edi, eax
.text:000000000040281C                 mov     dword ptr ds:p[rbx*4], edi
.text:0000000000402823                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:0000000000402829
.text:0000000000402829 loc_402829:                             ; CODE XREF: main+16F5↑j
.text:0000000000402829                 movsxd  rbx, cs:n
.text:0000000000402830                 mov     r15d, 1
.text:0000000000402836                 cmp     edx, edi
.text:0000000000402838                 mov     edx, 0
.text:000000000040283D                 cmovz   edx, r15d
.text:0000000000402841                 imul    rcx, rbx, 0BB88h
.text:0000000000402848                 add     rbx, r14
.text:000000000040284B                 or      dword ptr cs:cur+0Ch, edx
.text:0000000000402851                 movsxd  r15, ds:dword_118C39BC[rcx+rbx*4]
.text:0000000000402859                 mov     ebx, dword ptr ds:p[r15*4]
.text:0000000000402861                 movsxd  rbx, ebx
.text:0000000000402864                 cmp     rbx, r15
.text:0000000000402867                 jz      short loc_402880
.text:0000000000402869                 mov     edi, ebx        ; int
.text:000000000040286B                 call    _Z2gpi          ; gp(int)
.text:0000000000402870                 mov     ebx, eax
.text:0000000000402872                 mov     dword ptr ds:p[r15*4], ebx
.text:000000000040287A                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:0000000000402880
.text:0000000000402880 loc_402880:                             ; CODE XREF: main+1757↑j
.text:0000000000402880                 movsxd  r15, ds:q[r12+r13*4]
.text:0000000000402888                 mov     edi, dword ptr ds:p[r15*4]
.text:0000000000402890                 movsxd  rdi, edi        ; int
.text:0000000000402893                 cmp     rdi, r15
.text:0000000000402896                 jz      short loc_4028AD
.text:0000000000402898                 call    _Z2gpi          ; gp(int)
.text:000000000040289D                 mov     edi, eax
.text:000000000040289F                 mov     dword ptr ds:p[r15*4], edi
.text:00000000004028A7                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:00000000004028AD
.text:00000000004028AD loc_4028AD:                             ; CODE XREF: main+1786↑j
.text:00000000004028AD                 xor     ecx, ecx
.text:00000000004028AF                 mov     edx, 1
.text:00000000004028B4                 cmp     ebx, edi
.text:00000000004028B6                 movsxd  rbx, cs:n
.text:00000000004028BD                 cmovz   ecx, edx
.text:00000000004028C0                 add     r14, rbx
.text:00000000004028C3                 imul    r14, 5DC4h
.text:00000000004028CA                 movsxd  r14, ds:dword_118C977C[r14+rbx*8]
.text:00000000004028D2                 or      dword ptr cs:qword_22BBA8D0, ecx
.text:00000000004028D8                 mov     ebx, dword ptr ds:p[r14*4]
.text:00000000004028E0                 movsxd  rbx, ebx
.text:00000000004028E3                 cmp     rbx, r14
.text:00000000004028E6                 jz      short loc_4028FF
.text:00000000004028E8                 mov     edi, ebx        ; int
.text:00000000004028EA                 call    _Z2gpi          ; gp(int)
.text:00000000004028EF                 mov     ebx, eax
.text:00000000004028F1                 mov     dword ptr ds:p[r14*4], ebx
.text:00000000004028F9                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:00000000004028FF
.text:00000000004028FF loc_4028FF:                             ; CODE XREF: main+17D6↑j
.text:00000000004028FF                 movsxd  r14, ds:q[r12+r13*4]
.text:0000000000402907                 mov     edi, dword ptr ds:p[r14*4]
.text:000000000040290F                 movsxd  rdi, edi        ; int
.text:0000000000402912                 cmp     rdi, r14
.text:0000000000402915                 jz      short loc_40292C
.text:0000000000402917                 call    _Z2gpi          ; gp(int)
.text:000000000040291C                 mov     edi, eax
.text:000000000040291E                 mov     dword ptr ds:p[r14*4], edi
.text:0000000000402926                 mov     eax, dword ptr cs:qword_22BBA8D0+4
.text:000000000040292C
.text:000000000040292C loc_40292C:                             ; CODE XREF: main+1805↑j
.text:000000000040292C                 xor     edx, edx
.text:000000000040292E                 mov     r14d, 1
.text:0000000000402934                 cmp     ebx, edi
.text:0000000000402936                 mov     ecx, [rsp+200h+var_C0]
.text:000000000040293D                 cmovz   edx, r14d
.text:0000000000402941                 mov     r14d, ecx
.text:0000000000402944                 inc     ecx
.text:0000000000402946                 or      eax, edx
.text:0000000000402948                 mov     dword ptr cs:qword_22BBA8D0+4, eax
.text:000000000040294E                 mov     [rsp+200h+var_C0], ecx
.text:0000000000402955                 cmp     ecx, cs:n
.text:000000000040295B                 jl      loc_40261D
.text:0000000000402961                 mov     ecx, [rsp+200h+var_140]
.text:0000000000402968
.text:0000000000402968 loc_402968:                             ; CODE XREF: main+14F4↑j
.text:0000000000402968                 mov     edx, dword ptr cs:cur
.text:000000000040296E                 mov     ebx, 1
.text:0000000000402973                 add     edx, dword ptr cs:cur+4
.text:0000000000402979                 mov     esi, ecx
.text:000000000040297B                 add     edx, dword ptr cs:cur+8
.text:0000000000402981                 add     edx, dword ptr cs:cur+0Ch
.text:0000000000402987                 add     edx, dword ptr cs:qword_22BBA8D0
.text:000000000040298D                 add     edx, eax
.text:000000000040298F                 xor     eax, eax
.text:0000000000402991                 cmp     edx, 3
.text:0000000000402994                 cmovge  eax, ebx
.text:0000000000402997                 or      esi, eax
.text:0000000000402999                 or      esi, [rsp+200h+var_1C0]
.text:000000000040299D                 jnz     loc_402A79
.text:00000000004029A3                 mov     eax, [rsp+200h+var_168]
.text:00000000004029AA                 inc     eax
.text:00000000004029AC                 inc     [rsp+200h+var_1C8]
.text:00000000004029B1                 mov     [rsp+200h+var_168], eax
.text:00000000004029B8                 cmp     eax, cs:m
.text:00000000004029BE                 jl      loc_40213C
.text:00000000004029C4                 mov     r12d, [rsp+200h+var_118]
.text:00000000004029CC                 mov     r13d, 1
.text:00000000004029D2
.text:00000000004029D2 loc_4029D2:                             ; CODE XREF: main+1000↑j
.text:00000000004029D2                 mov     edi, offset aNone ; "none"
.text:00000000004029D7                 xor     eax, eax
.text:00000000004029D9                 call    _printf
.text:00000000004029DE
.text:00000000004029DE loc_4029DE:                             ; CODE XREF: main+19A0↓j
.text:00000000004029DE                 mov     edi, offset _ZSt4cout@@GLIBCXX_3_4
.text:00000000004029E3                 mov     esi, offset __ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_ ; std::endl<char,std::char_traits<char>>(std::basic_ostream<char,std::char_traits<char>> &)
.text:00000000004029E8                 call    __ZNSolsEPFRSoS_E ; std::ostream::operator<<(std::ostream & (*)(std::ostream &))
.text:00000000004029ED                 inc     r12d
.text:00000000004029F0                 cmp     r12d, [rsp+200h+var_148]
.text:00000000004029F8                 jle     loc_4011AB
.text:00000000004029FE
.text:00000000004029FE loc_4029FE:                             ; CODE XREF: main+5D↑j
.text:00000000004029FE                 xor     eax, eax
.text:0000000000402A00                 add     rsp, 1D8h
.text:0000000000402A07                 pop     rbx
.text:0000000000402A08                 pop     r15
.text:0000000000402A0A                 pop     r14
.text:0000000000402A0C                 pop     r13
.text:0000000000402A0E                 pop     r12
.text:0000000000402A10                 mov     rsp, rbp
.text:0000000000402A13                 pop     rbp
.text:0000000000402A14                 retn
.text:0000000000402A15 ; ---------------------------------------------------------------------------
.text:0000000000402A15
.text:0000000000402A15 loc_402A15:                             ; CODE XREF: main+42C↑j
.text:0000000000402A15                                         ; main+735↑j
.text:0000000000402A15                 mov     edi, offset aVectorMInsertA ; "vector::_M_insert_aux"
.text:0000000000402A1A                 call    __ZSt20__throw_length_errorPKc ; std::__throw_length_error(char const*)
.text:0000000000402A1F ; ---------------------------------------------------------------------------
.text:0000000000402A1F
.text:0000000000402A1F loc_402A1F:                             ; CODE XREF: main+F79↑j
.text:0000000000402A1F                 xor     ecx, ecx
.text:0000000000402A21                 jmp     loc_4020C3
.text:0000000000402A26 ; ---------------------------------------------------------------------------
.text:0000000000402A26
.text:0000000000402A26 loc_402A26:                             ; CODE XREF: main+D8A↑j
.text:0000000000402A26                 movsxd  rcx, edx
.text:0000000000402A29                 cmp     rcx, 4
.text:0000000000402A2D                 jl      short loc_402A6E
.text:0000000000402A2F                 and     edx, 0FFFFFFFCh
.text:0000000000402A32                 xor     eax, eax
.text:0000000000402A34                 movsxd  rdx, edx
.text:0000000000402A37
.text:0000000000402A37 loc_402A37:                             ; CODE XREF: main+193B↓j
.text:0000000000402A37                 pxor    xmm0, xmm0
.text:0000000000402A3B                 movdqa  ds:cnt[rax*4], xmm0
.text:0000000000402A44                 add     rax, 4
.text:0000000000402A48                 cmp     rax, rdx
.text:0000000000402A4B                 jb      short loc_402A37
.text:0000000000402A4D
.text:0000000000402A4D loc_402A4D:                             ; CODE XREF: main+1960↓j
.text:0000000000402A4D                 cmp     rdx, rcx
.text:0000000000402A50                 jnb     loc_401EB3
.text:0000000000402A56
.text:0000000000402A56 loc_402A56:                             ; CODE XREF: main+1957↓j
.text:0000000000402A56                 mov     dword ptr ds:cnt[rdx*4], 0
.text:0000000000402A61                 inc     rdx
.text:0000000000402A64                 cmp     rdx, rcx
.text:0000000000402A67                 jb      short loc_402A56
.text:0000000000402A69                 jmp     loc_401EB3
.text:0000000000402A6E ; ---------------------------------------------------------------------------
.text:0000000000402A6E
.text:0000000000402A6E loc_402A6E:                             ; CODE XREF: main+191D↑j
.text:0000000000402A6E                 xor     edx, edx
.text:0000000000402A70                 jmp     short loc_402A4D
.text:0000000000402A72 ; ---------------------------------------------------------------------------
.text:0000000000402A72
.text:0000000000402A72 loc_402A72:                             ; CODE XREF: main+D2C↑j
.text:0000000000402A72                 xor     ecx, ecx
.text:0000000000402A74                 jmp     loc_401E77
.text:0000000000402A79 ; ---------------------------------------------------------------------------
.text:0000000000402A79
.text:0000000000402A79 loc_402A79:                             ; CODE XREF: main+188D↑j
.text:0000000000402A79                 add     ecx, ecx
.text:0000000000402A7B                 mov     edi, offset aSInMoveD ; "%s in move %d"
.text:0000000000402A80                 mov     ebx, [rsp+200h+var_1C0]
.text:0000000000402A84                 mov     r13d, 1
.text:0000000000402A8A                 mov     edx, [rsp+200h+var_168]
.text:0000000000402A91                 inc     edx
.text:0000000000402A93                 lea     ecx, [rcx+rbx*4]
.text:0000000000402A96                 add     rcx, rax
.text:0000000000402A99                 xor     eax, eax
.text:0000000000402A9B                 mov     r12d, [rsp+200h+var_118]
.text:0000000000402AA3                 mov     rsi, ds:res[rcx*8]
.text:0000000000402AAB                 call    _printf
.text:0000000000402AB0                 jmp     loc_4029DE
.text:0000000000402AB5 ; ---------------------------------------------------------------------------
.text:0000000000402AB5
.text:0000000000402AB5 loc_402AB5:                             ; CODE XREF: main+A00↑j
.text:0000000000402AB5                 test    ebx, ebx
.text:0000000000402AB7                 js      loc_401BF9
.text:0000000000402ABD                 test    ecx, ecx
.text:0000000000402ABF                 jge     loc_401B8E
.text:0000000000402AC5                 jmp     loc_401BF9
.text:0000000000402ACA ; ---------------------------------------------------------------------------
.text:0000000000402ACA
.text:0000000000402ACA loc_402ACA:                             ; CODE XREF: main+96C↑j
.text:0000000000402ACA                 movsxd  rcx, r8d
.text:0000000000402ACD                 add     rcx, rcx
.text:0000000000402AD0                 jmp     loc_401E09
.text:0000000000402AD5 ; ---------------------------------------------------------------------------
.text:0000000000402AD5
.text:0000000000402AD5 loc_402AD5:                             ; CODE XREF: main+CE↑j
.text:0000000000402AD5                 xor     edi, edi
.text:0000000000402AD7                 jmp     loc_4013BC
.text:0000000000402AD7 main            endp
.text:0000000000402AD7
.text:0000000000402AD7 ; ---------------------------------------------------------------------------
.text:0000000000402ADC                 align 20h
.text:0000000000402ADC ; } // starts at 401110
.text:0000000000402AE0
.text:0000000000402AE0 ; =============== S U B R O U T I N E =======================================
.text:0000000000402AE0
.text:0000000000402AE0
.text:0000000000402AE0 ; __int64 __fastcall gp(int)
.text:0000000000402AE0                 public _Z2gpi
.text:0000000000402AE0 _Z2gpi          proc near               ; CODE XREF: main+E42↑p
.text:0000000000402AE0                                         ; main+E7C↑p ...
.text:0000000000402AE0 ; __unwind { // ___gxx_personality_v0
.text:0000000000402AE0                 push    rbp
.text:0000000000402AE1                 movsxd  rbp, edi
.text:0000000000402AE4                 mov     edi, dword ptr ds:p[rbp*4]
.text:0000000000402AEB                 movsxd  rdi, edi        ; int
.text:0000000000402AEE                 cmp     rdi, rbp
.text:0000000000402AF1                 jz      short loc_402B01
.text:0000000000402AF3                 call    _Z2gpi          ; gp(int)
.text:0000000000402AF8                 mov     edi, eax
.text:0000000000402AFA                 mov     dword ptr ds:p[rbp*4], edi
.text:0000000000402B01
.text:0000000000402B01 loc_402B01:                             ; CODE XREF: gp(int)+11↑j
.text:0000000000402B01                 mov     eax, edi
.text:0000000000402B03                 pop     rbp
.text:0000000000402B04                 retn
.text:0000000000402B04 _Z2gpi          endp
.text:0000000000402B04
.text:0000000000402B04 ; ---------------------------------------------------------------------------
.text:0000000000402B05                 align 10h
.text:0000000000402B05 ; } // starts at 402AE0
.text:0000000000402B10
.text:0000000000402B10 ; =============== S U B R O U T I N E =======================================
.text:0000000000402B10
.text:0000000000402B10
.text:0000000000402B10 ; __int64 __fastcall go(int, int, int)
.text:0000000000402B10                 public _Z2goiii
.text:0000000000402B10 _Z2goiii        proc near               ; CODE XREF: main+A59↑p
.text:0000000000402B10                                         ; main+ACE↑p ...
.text:0000000000402B10
.text:0000000000402B10 var_38          = qword ptr -38h
.text:0000000000402B10
.text:0000000000402B10 ; __unwind { // ___gxx_personality_v0
.text:0000000000402B10                 push    r12
.text:0000000000402B12                 push    r13
.text:0000000000402B14                 push    r14
.text:0000000000402B16                 push    r15
.text:0000000000402B18                 push    rbx
.text:0000000000402B19                 push    rbp
.text:0000000000402B1A                 push    rsi
.text:0000000000402B1B                 mov     r13d, edi
.text:0000000000402B1E                 movsxd  r13, r13d
.text:0000000000402B21                 mov     r15d, esi
.text:0000000000402B24                 imul    r12, r13, 5DC4h
.text:0000000000402B2B                 movsxd  rax, r15d
.text:0000000000402B2E                 mov     ebp, r13d
.text:0000000000402B31                 mov     ebx, cs:ct
.text:0000000000402B37                 mov     r14d, edx
.text:0000000000402B3A                 inc     ebp
.text:0000000000402B3C                 mov     ds:q[r12+rax*4], r14d
.text:0000000000402B44                 mov     ds:use[r12+rax*4], ebx
.text:0000000000402B4C                 js      short loc_402B95
.text:0000000000402B4E                 test    r15d, r15d
.text:0000000000402B51                 jl      short loc_402B95
.text:0000000000402B53                 mov     ecx, cs:n
.text:0000000000402B59                 add     ecx, ecx
.text:0000000000402B5B                 cmp     ebp, ecx
.text:0000000000402B5D                 jg      short loc_402B95
.text:0000000000402B5F                 cmp     r15d, ecx
.text:0000000000402B62                 jg      short loc_402B95
.text:0000000000402B64                 movsxd  rbp, ebp
.text:0000000000402B67                 imul    rcx, rbp, 5DC4h
.text:0000000000402B6E                 cmp     ebx, ds:use[rcx+rax*4]
.text:0000000000402B75                 jz      short loc_402B95
.text:0000000000402B77                 cmp     ebx, ds:was[rcx+rax*4]
.text:0000000000402B7E                 jz      short loc_402B95
.text:0000000000402B80                 mov     edi, ebp        ; int
.text:0000000000402B82                 mov     esi, r15d       ; int
.text:0000000000402B85                 mov     edx, r14d       ; int
.text:0000000000402B88                 mov     [rsp+38h+var_38], rax
.text:0000000000402B8C                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000402B91                 mov     rax, [rsp+38h+var_38]
.text:0000000000402B95
.text:0000000000402B95 loc_402B95:                             ; CODE XREF: go(int,int,int)+3C↑j
.text:0000000000402B95                                         ; go(int,int,int)+41↑j ...
.text:0000000000402B95                 mov     ebx, r13d
.text:0000000000402B98                 dec     ebx
.text:0000000000402B9A                 js      short loc_402BE3
.text:0000000000402B9C                 test    r15d, r15d
.text:0000000000402B9F                 jl      short loc_402BE3
.text:0000000000402BA1                 mov     ecx, cs:n
.text:0000000000402BA7                 add     ecx, ecx
.text:0000000000402BA9                 cmp     ebx, ecx
.text:0000000000402BAB                 jg      short loc_402BE3
.text:0000000000402BAD                 cmp     r15d, ecx
.text:0000000000402BB0                 jg      short loc_402BE3
.text:0000000000402BB2                 movsxd  rbx, ebx
.text:0000000000402BB5                 imul    r8, rbx, 5DC4h
.text:0000000000402BBC                 mov     ecx, cs:ct
.text:0000000000402BC2                 cmp     ecx, ds:use[r8+rax*4]
.text:0000000000402BCA                 jz      short loc_402BE3
.text:0000000000402BCC                 cmp     ecx, ds:was[r8+rax*4]
.text:0000000000402BD4                 jz      short loc_402BE3
.text:0000000000402BD6                 mov     edi, ebx        ; int
.text:0000000000402BD8                 mov     esi, r15d       ; int
.text:0000000000402BDB                 mov     edx, r14d       ; int
.text:0000000000402BDE                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000402BE3
.text:0000000000402BE3 loc_402BE3:                             ; CODE XREF: go(int,int,int)+8A↑j
.text:0000000000402BE3                                         ; go(int,int,int)+8F↑j ...
.text:0000000000402BE3                 test    r13d, r13d
.text:0000000000402BE6                 lea     eax, [r15+1]
.text:0000000000402BEA                 jl      short loc_402C31
.text:0000000000402BEC                 test    eax, eax
.text:0000000000402BEE                 js      short loc_402C31
.text:0000000000402BF0                 mov     ecx, cs:n
.text:0000000000402BF6                 add     ecx, ecx
.text:0000000000402BF8                 cmp     r13d, ecx
.text:0000000000402BFB                 jg      short loc_402C31
.text:0000000000402BFD                 cmp     eax, ecx
.text:0000000000402BFF                 jg      short loc_402C31
.text:0000000000402C01                 movsxd  r8, eax
.text:0000000000402C04                 mov     ecx, cs:ct
.text:0000000000402C0A                 cmp     ecx, ds:use[r12+r8*4]
.text:0000000000402C12                 jz      short loc_402C31
.text:0000000000402C14                 cmp     ecx, ds:was[r12+r8*4]
.text:0000000000402C1C                 jz      short loc_402C31
.text:0000000000402C1E                 mov     edi, r13d       ; int
.text:0000000000402C21                 mov     esi, eax        ; int
.text:0000000000402C23                 mov     edx, r14d       ; int
.text:0000000000402C26                 mov     dword ptr [rsp+38h+var_38], eax
.text:0000000000402C29                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000402C2E                 mov     eax, dword ptr [rsp+38h+var_38]
.text:0000000000402C31
.text:0000000000402C31 loc_402C31:                             ; CODE XREF: go(int,int,int)+DA↑j
.text:0000000000402C31                                         ; go(int,int,int)+DE↑j ...
.text:0000000000402C31                 dec     r15d
.text:0000000000402C34                 test    r13d, r13d
.text:0000000000402C37                 jl      short loc_402C81
.text:0000000000402C39                 test    r15d, r15d
.text:0000000000402C3C                 js      short loc_402C81
.text:0000000000402C3E                 mov     ecx, cs:n
.text:0000000000402C44                 add     ecx, ecx
.text:0000000000402C46                 cmp     r13d, ecx
.text:0000000000402C49                 jg      short loc_402C81
.text:0000000000402C4B                 cmp     r15d, ecx
.text:0000000000402C4E                 jg      short loc_402C81
.text:0000000000402C50                 movsxd  r8, r15d
.text:0000000000402C53                 mov     ecx, cs:ct
.text:0000000000402C59                 cmp     ecx, ds:use[r12+r8*4]
.text:0000000000402C61                 jz      short loc_402C81
.text:0000000000402C63                 cmp     ecx, ds:was[r12+r8*4]
.text:0000000000402C6B                 jz      short loc_402C81
.text:0000000000402C6D                 mov     edi, r13d       ; int
.text:0000000000402C70                 mov     esi, r15d       ; int
.text:0000000000402C73                 mov     edx, r14d       ; int
.text:0000000000402C76                 mov     dword ptr [rsp+38h+var_38], eax
.text:0000000000402C79                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000402C7E                 mov     eax, dword ptr [rsp+38h+var_38]
.text:0000000000402C81
.text:0000000000402C81 loc_402C81:                             ; CODE XREF: go(int,int,int)+127↑j
.text:0000000000402C81                                         ; go(int,int,int)+12C↑j ...
.text:0000000000402C81                 test    ebp, ebp
.text:0000000000402C83                 js      short loc_402CCC
.text:0000000000402C85                 test    eax, eax
.text:0000000000402C87                 js      short loc_402CCC
.text:0000000000402C89                 mov     ecx, cs:n
.text:0000000000402C8F                 add     ecx, ecx
.text:0000000000402C91                 cmp     ebp, ecx
.text:0000000000402C93                 jg      short loc_402CCC
.text:0000000000402C95                 cmp     eax, ecx
.text:0000000000402C97                 jg      short loc_402CCC
.text:0000000000402C99                 movsxd  rbp, ebp
.text:0000000000402C9C                 imul    r8, rbp, 5DC4h
.text:0000000000402CA3                 movsxd  r9, eax
.text:0000000000402CA6                 mov     ecx, cs:ct
.text:0000000000402CAC                 cmp     ecx, ds:use[r8+r9*4]
.text:0000000000402CB4                 jz      short loc_402CCC
.text:0000000000402CB6                 cmp     ecx, ds:was[r8+r9*4]
.text:0000000000402CBE                 jz      short loc_402CCC
.text:0000000000402CC0                 mov     edi, ebp        ; int
.text:0000000000402CC2                 mov     esi, eax        ; int
.text:0000000000402CC4                 mov     edx, r14d       ; int
.text:0000000000402CC7                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000402CCC
.text:0000000000402CCC loc_402CCC:                             ; CODE XREF: go(int,int,int)+173↑j
.text:0000000000402CCC                                         ; go(int,int,int)+177↑j ...
.text:0000000000402CCC                 test    ebx, ebx
.text:0000000000402CCE                 js      short loc_402D18
.text:0000000000402CD0                 test    r15d, r15d
.text:0000000000402CD3                 js      short loc_402D18
.text:0000000000402CD5                 mov     eax, cs:n
.text:0000000000402CDB                 add     eax, eax
.text:0000000000402CDD                 cmp     ebx, eax
.text:0000000000402CDF                 jg      short loc_402D18
.text:0000000000402CE1                 cmp     r15d, eax
.text:0000000000402CE4                 jg      short loc_402D18
.text:0000000000402CE6                 movsxd  rbx, ebx
.text:0000000000402CE9                 imul    rcx, rbx, 5DC4h
.text:0000000000402CF0                 movsxd  rbp, r15d
.text:0000000000402CF3                 mov     eax, cs:ct
.text:0000000000402CF9                 cmp     eax, ds:use[rcx+rbp*4]
.text:0000000000402D00                 jz      short loc_402D18
.text:0000000000402D02                 cmp     eax, ds:was[rcx+rbp*4]
.text:0000000000402D09                 jz      short loc_402D18
.text:0000000000402D0B                 mov     edi, ebx        ; int
.text:0000000000402D0D                 mov     esi, r15d       ; int
.text:0000000000402D10                 mov     edx, r14d       ; int
.text:0000000000402D13                 call    _Z2goiii        ; go(int,int,int)
.text:0000000000402D18
.text:0000000000402D18 loc_402D18:                             ; CODE XREF: go(int,int,int)+1BE↑j
.text:0000000000402D18                                         ; go(int,int,int)+1C3↑j ...
.text:0000000000402D18                 xor     eax, eax
.text:0000000000402D1A                 pop     rcx
.text:0000000000402D1B                 pop     rbp
.text:0000000000402D1C                 pop     rbx
.text:0000000000402D1D                 pop     r15
.text:0000000000402D1F                 pop     r14
.text:0000000000402D21                 pop     r13
.text:0000000000402D23                 pop     r12
.text:0000000000402D25                 retn
.text:0000000000402D25 _Z2goiii        endp
.text:0000000000402D25
.text:0000000000402D25 ; ---------------------------------------------------------------------------
.text:0000000000402D26                 align 10h
.text:0000000000402D26 ; } // starts at 402B10
.text:0000000000402D30
.text:0000000000402D30 ; =============== S U B R O U T I N E =======================================
.text:0000000000402D30
.text:0000000000402D30
.text:0000000000402D30 ; __int64 __fastcall good(int, int)
.text:0000000000402D30                 public _Z4goodii
.text:0000000000402D30 _Z4goodii       proc near
.text:0000000000402D30 ; __unwind { // ___gxx_personality_v0
.text:0000000000402D30                 test    edi, edi
.text:0000000000402D32                 jle     short loc_402D84
.text:0000000000402D34                 test    esi, esi
.text:0000000000402D36                 jle     short loc_402D84
.text:0000000000402D38                 mov     eax, cs:n
.text:0000000000402D3E                 add     eax, eax
.text:0000000000402D40                 cmp     edi, eax
.text:0000000000402D42                 jge     short loc_402D84
.text:0000000000402D44                 cmp     esi, eax
.text:0000000000402D46                 jge     short loc_402D84
.text:0000000000402D48                 movsxd  rax, esi
.text:0000000000402D4B                 mov     edx, ds:f[rax*4]
.text:0000000000402D52                 cmp     edi, edx
.text:0000000000402D54                 jl      short loc_402D84
.text:0000000000402D56                 mov     eax, ds:w[rax*4]
.text:0000000000402D5D                 add     edx, eax
.text:0000000000402D5F                 cmp     edi, edx
.text:0000000000402D61                 jge     short loc_402D84
.text:0000000000402D63                 movsxd  rdi, edi
.text:0000000000402D66                 mov     edx, ds:f[rdi*4]
.text:0000000000402D6D                 cmp     esi, edx
.text:0000000000402D6F                 jl      short loc_402D84
.text:0000000000402D71                 mov     eax, ds:w[rdi*4]
.text:0000000000402D78                 add     edx, eax
.text:0000000000402D7A                 cmp     esi, edx
.text:0000000000402D7C                 jge     short loc_402D84
.text:0000000000402D7E                 mov     eax, 1
.text:0000000000402D83                 retn
.text:0000000000402D84 ; ---------------------------------------------------------------------------
.text:0000000000402D84
.text:0000000000402D84 loc_402D84:                             ; CODE XREF: good(int,int)+2↑j
.text:0000000000402D84                                         ; good(int,int)+6↑j ...
.text:0000000000402D84                 xor     eax, eax
.text:0000000000402D86                 retn
.text:0000000000402D86 _Z4goodii       endp
.text:0000000000402D86
.text:0000000000402D86 ; ---------------------------------------------------------------------------
.text:0000000000402D87                 align 10h
.text:0000000000402D87 ; } // starts at 402D30
.text:0000000000402D90
.text:0000000000402D90 ; =============== S U B R O U T I N E =======================================
.text:0000000000402D90
.text:0000000000402D90
.text:0000000000402D90 ; __int64 __fastcall _sti___E(struct _Unwind_Exception *, __int64)
.text:0000000000402D90 __sti__$E       proc near               ; CODE XREF: __libc_csu_init+59↓p
.text:0000000000402D90                                         ; DATA XREF: .init_array:__init_array_start↓o
.text:0000000000402D90
.text:0000000000402D90 var_10          = byte ptr -10h
.text:0000000000402D90 var_F           = byte ptr -0Fh
.text:0000000000402D90 var_E           = byte ptr -0Eh
.text:0000000000402D90 var_D           = byte ptr -0Dh
.text:0000000000402D90 var_C           = byte ptr -0Ch
.text:0000000000402D90 var_B           = byte ptr -0Bh
.text:0000000000402D90 var_A           = byte ptr -0Ah
.text:0000000000402D90 var_9           = byte ptr -9
.text:0000000000402D90 arg_0           = qword ptr  8
.text:0000000000402D90 arg_8           = qword ptr  10h
.text:0000000000402D90
.text:0000000000402D90 ; __unwind { // ___gxx_personality_v0
.text:0000000000402D90                 sub     rsp, 28h
.text:0000000000402D94                 mov     edi, offset _ZSt8__ioinit ; this
.text:0000000000402D99                 call    __ZNSt8ios_base4InitC1Ev ; std::ios_base::Init::Init(void)
.text:0000000000402D9E                 mov     edi, offset __ZNSt8ios_base4InitD1Ev ; lpfunc
.text:0000000000402DA3                 mov     esi, offset _ZSt8__ioinit ; obj
.text:0000000000402DA8                 mov     edx, offset __dso_handle ; lpdso_handle
.text:0000000000402DAD                 call    ___cxa_atexit
.text:0000000000402DB2                 mov     edi, offset res
.text:0000000000402DB7                 mov     esi, (offset aCannotAllocate+34h) ; ""
.text:0000000000402DBC                 lea     rdx, [rsp+28h+var_10]
.text:0000000000402DC1 ;   try {
.text:0000000000402DC1                 call    __ZNSsC1EPKcRKSaIcE ; std::string::string(char const*,std::allocator<char> const&)
.text:0000000000402DC1 ;   } // starts at 402DC1
.text:0000000000402DC6                 mov     edi, offset qword_609348
.text:0000000000402DCB                 mov     esi, offset aFork ; "fork"
.text:0000000000402DD0                 lea     rdx, [rsp+28h+var_F]
.text:0000000000402DD5 ;   try {
.text:0000000000402DD5                 call    __ZNSsC1EPKcRKSaIcE ; std::string::string(char const*,std::allocator<char> const&)
.text:0000000000402DD5 ;   } // starts at 402DD5
.text:0000000000402DDA                 mov     edi, offset qword_609350
.text:0000000000402DDF                 mov     esi, offset aBridge ; "bridge"
.text:0000000000402DE4                 lea     rdx, [rsp+28h+var_E]
.text:0000000000402DE9 ;   try {
.text:0000000000402DE9                 call    __ZNSsC1EPKcRKSaIcE ; std::string::string(char const*,std::allocator<char> const&)
.text:0000000000402DE9 ;   } // starts at 402DE9
.text:0000000000402DEE                 mov     edi, offset qword_609358
.text:0000000000402DF3                 mov     esi, offset aBridgeFork ; "bridge-fork"
.text:0000000000402DF8                 lea     rdx, [rsp+28h+var_D]
.text:0000000000402DFD ;   try {
.text:0000000000402DFD                 call    __ZNSsC1EPKcRKSaIcE ; std::string::string(char const*,std::allocator<char> const&)
.text:0000000000402DFD ;   } // starts at 402DFD
.text:0000000000402E02                 mov     edi, offset qword_609360
.text:0000000000402E07                 mov     esi, offset aRing ; "ring"
.text:0000000000402E0C                 lea     rdx, [rsp+28h+var_C]
.text:0000000000402E11 ;   try {
.text:0000000000402E11                 call    __ZNSsC1EPKcRKSaIcE ; std::string::string(char const*,std::allocator<char> const&)
.text:0000000000402E11 ;   } // starts at 402E11
.text:0000000000402E16                 mov     edi, offset qword_609368
.text:0000000000402E1B                 mov     esi, offset aForkRing ; "fork-ring"
.text:0000000000402E20                 lea     rdx, [rsp+28h+var_B]
.text:0000000000402E25 ;   try {
.text:0000000000402E25                 call    __ZNSsC1EPKcRKSaIcE ; std::string::string(char const*,std::allocator<char> const&)
.text:0000000000402E25 ;   } // starts at 402E25
.text:0000000000402E2A                 mov     edi, offset qword_609370
.text:0000000000402E2F                 mov     esi, offset aBridgeRing ; "bridge-ring"
.text:0000000000402E34                 lea     rdx, [rsp+28h+var_A]
.text:0000000000402E39 ;   try {
.text:0000000000402E39                 call    __ZNSsC1EPKcRKSaIcE ; std::string::string(char const*,std::allocator<char> const&)
.text:0000000000402E39 ;   } // starts at 402E39
.text:0000000000402E3E                 mov     edi, offset qword_609378
.text:0000000000402E43                 mov     esi, offset unk_40611C
.text:0000000000402E48                 lea     rdx, [rsp+28h+var_9]
.text:0000000000402E4D ;   try {
.text:0000000000402E4D                 call    __ZNSsC1EPKcRKSaIcE ; std::string::string(char const*,std::allocator<char> const&)
.text:0000000000402E4D ;   } // starts at 402E4D
.text:0000000000402E52                 mov     edi, offset __$U0 ; lpfunc
.text:0000000000402E57                 xor     esi, esi        ; obj
.text:0000000000402E59                 mov     edx, offset __dso_handle ; lpdso_handle
.text:0000000000402E5E ;   try {
.text:0000000000402E5E                 call    ___cxa_atexit
.text:0000000000402E63                 mov     edi, offset v
.text:0000000000402E68                 call    _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev ; std::vector<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>,std::allocator<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>>>::vector(void)
.text:0000000000402E6D                 mov     edi, offset _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev ; lpfunc
.text:0000000000402E72                 mov     esi, offset v   ; obj
.text:0000000000402E77                 mov     edx, offset __dso_handle ; lpdso_handle
.text:0000000000402E7C                 call    ___cxa_atexit
.text:0000000000402E81                 mov     edi, offset u
.text:0000000000402E86                 call    _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev ; std::vector<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>,std::allocator<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>>>::vector(void)
.text:0000000000402E8B                 mov     edi, offset _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev ; lpfunc
.text:0000000000402E90                 mov     esi, offset u   ; obj
.text:0000000000402E95                 mov     edx, offset __dso_handle ; lpdso_handle
.text:0000000000402E9A                 call    ___cxa_atexit
.text:0000000000402E9A ;   } // starts at 402E5E
.text:0000000000402E9F                 add     rsp, 28h
.text:0000000000402EA3                 retn
.text:0000000000402EA4 ; ---------------------------------------------------------------------------
.text:0000000000402EA4 ;   cleanup() // owned by 402E5E
.text:0000000000402EA4                 mov     [rsp+arg_0], rax
.text:0000000000402EA9                 mov     rdi, cs:qword_609378
.text:0000000000402EB0                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000402EB5                 lea     rax, [rdi-18h]
.text:0000000000402EB9                 mov     [rsp+arg_8], rax
.text:0000000000402EBE                 cmp     rax, rdx
.text:0000000000402EC1                 jnz     loc_4030B2
.text:0000000000402EC7
.text:0000000000402EC7 loc_402EC7:                             ; CODE XREF: __sti__$E+332↓j
.text:0000000000402EC7                                         ; __sti__$E+347↓j ...
.text:0000000000402EC7                 mov     rdi, cs:qword_609370
.text:0000000000402ECE                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000402ED3                 lea     rax, [rdi-18h]
.text:0000000000402ED7                 mov     [rsp+arg_8], rax
.text:0000000000402EDC                 cmp     rax, rdx
.text:0000000000402EDF                 jnz     loc_403088
.text:0000000000402EE5
.text:0000000000402EE5 loc_402EE5:                             ; CODE XREF: __sti__$E+308↓j
.text:0000000000402EE5                                         ; __sti__$E+31D↓j ...
.text:0000000000402EE5                 mov     rdi, cs:qword_609368
.text:0000000000402EEC                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000402EF1                 lea     rax, [rdi-18h]
.text:0000000000402EF5                 mov     [rsp+arg_8], rax
.text:0000000000402EFA                 cmp     rax, rdx
.text:0000000000402EFD                 jnz     loc_40305E
.text:0000000000402F03
.text:0000000000402F03 loc_402F03:                             ; CODE XREF: __sti__$E+2DE↓j
.text:0000000000402F03                                         ; __sti__$E+2F3↓j ...
.text:0000000000402F03                 mov     rdi, cs:qword_609360
.text:0000000000402F0A                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000402F0F                 lea     rax, [rdi-18h]
.text:0000000000402F13                 mov     [rsp+arg_8], rax
.text:0000000000402F18                 cmp     rax, rdx
.text:0000000000402F1B                 jnz     loc_403034
.text:0000000000402F21
.text:0000000000402F21 loc_402F21:                             ; CODE XREF: __sti__$E+2B4↓j
.text:0000000000402F21                                         ; __sti__$E+2C9↓j ...
.text:0000000000402F21                 mov     rdi, cs:qword_609358
.text:0000000000402F28                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000402F2D                 lea     rax, [rdi-18h]
.text:0000000000402F31                 mov     [rsp+arg_8], rax
.text:0000000000402F36                 cmp     rax, rdx
.text:0000000000402F39                 jnz     loc_40300A
.text:0000000000402F3F
.text:0000000000402F3F loc_402F3F:                             ; CODE XREF: __sti__$E+28A↓j
.text:0000000000402F3F                                         ; __sti__$E+29F↓j ...
.text:0000000000402F3F                 mov     rdi, cs:qword_609350
.text:0000000000402F46                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000402F4B                 lea     rax, [rdi-18h]
.text:0000000000402F4F                 mov     [rsp+arg_8], rax
.text:0000000000402F54                 cmp     rax, rdx
.text:0000000000402F57                 jnz     loc_402FE0
.text:0000000000402F5D
.text:0000000000402F5D loc_402F5D:                             ; CODE XREF: __sti__$E+260↓j
.text:0000000000402F5D                                         ; __sti__$E+275↓j ...
.text:0000000000402F5D                 mov     rdi, cs:qword_609348
.text:0000000000402F64                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000402F69                 lea     rax, [rdi-18h]
.text:0000000000402F6D                 mov     [rsp+arg_8], rax
.text:0000000000402F72                 cmp     rax, rdx
.text:0000000000402F75                 jnz     short loc_402FBD
.text:0000000000402F77
.text:0000000000402F77 loc_402F77:                             ; CODE XREF: __sti__$E+23D↓j
.text:0000000000402F77                                         ; __sti__$E+24E↓j ...
.text:0000000000402F77                 mov     rdi, cs:res
.text:0000000000402F7E                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000402F83                 lea     rax, [rdi-18h]
.text:0000000000402F87                 mov     [rsp+arg_8], rax
.text:0000000000402F8C                 cmp     rax, rdx
.text:0000000000402F8F                 jnz     short loc_402F9B
.text:0000000000402F91
.text:0000000000402F91 loc_402F91:                             ; CODE XREF: __sti__$E+21B↓j
.text:0000000000402F91                                         ; __sti__$E+22B↓j ...
.text:0000000000402F91                 mov     rdi, [rsp+arg_0] ; struct _Unwind_Exception *
.text:0000000000402F96                 call    __Unwind_Resume
.text:0000000000402F9B ; ---------------------------------------------------------------------------
.text:0000000000402F9B
.text:0000000000402F9B loc_402F9B:                             ; CODE XREF: __sti__$E+1FF↑j
.text:0000000000402F9B                 add     rdi, 0FFFFFFFFFFFFFFF8h ; int *
.text:0000000000402F9F                 mov     esi, 0FFFFFFFFh ; int
.text:0000000000402FA4                 call    _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii ; __gnu_cxx::__exchange_and_add_dispatch(int *,int)
.text:0000000000402FA9                 test    eax, eax
.text:0000000000402FAB                 jg      short loc_402F91
.text:0000000000402FAD                 mov     rdi, [rsp+arg_8]
.text:0000000000402FB2                 lea     rsi, [rsp+0]
.text:0000000000402FB6                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:0000000000402FBB                 jmp     short loc_402F91
.text:0000000000402FBD ; ---------------------------------------------------------------------------
.text:0000000000402FBD
.text:0000000000402FBD loc_402FBD:                             ; CODE XREF: __sti__$E+1E5↑j
.text:0000000000402FBD                 add     rdi, 0FFFFFFFFFFFFFFF8h ; int *
.text:0000000000402FC1                 mov     esi, 0FFFFFFFFh ; int
.text:0000000000402FC6                 call    _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii ; __gnu_cxx::__exchange_and_add_dispatch(int *,int)
.text:0000000000402FCB                 test    eax, eax
.text:0000000000402FCD                 jg      short loc_402F77
.text:0000000000402FCF                 mov     rdi, [rsp+arg_8]
.text:0000000000402FD4                 lea     rsi, [rsp+1]
.text:0000000000402FD9                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:0000000000402FDE                 jmp     short loc_402F77
.text:0000000000402FE0 ; ---------------------------------------------------------------------------
.text:0000000000402FE0
.text:0000000000402FE0 loc_402FE0:                             ; CODE XREF: __sti__$E+1C7↑j
.text:0000000000402FE0                 add     rdi, 0FFFFFFFFFFFFFFF8h ; int *
.text:0000000000402FE4                 mov     esi, 0FFFFFFFFh ; int
.text:0000000000402FE9                 call    _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii ; __gnu_cxx::__exchange_and_add_dispatch(int *,int)
.text:0000000000402FEE                 test    eax, eax
.text:0000000000402FF0                 jg      loc_402F5D
.text:0000000000402FF6                 mov     rdi, [rsp+arg_8]
.text:0000000000402FFB                 lea     rsi, [rsp+2]
.text:0000000000403000                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:0000000000403005                 jmp     loc_402F5D
.text:000000000040300A ; ---------------------------------------------------------------------------
.text:000000000040300A
.text:000000000040300A loc_40300A:                             ; CODE XREF: __sti__$E+1A9↑j
.text:000000000040300A                 add     rdi, 0FFFFFFFFFFFFFFF8h ; int *
.text:000000000040300E                 mov     esi, 0FFFFFFFFh ; int
.text:0000000000403013                 call    _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii ; __gnu_cxx::__exchange_and_add_dispatch(int *,int)
.text:0000000000403018                 test    eax, eax
.text:000000000040301A                 jg      loc_402F3F
.text:0000000000403020                 mov     rdi, [rsp+arg_8]
.text:0000000000403025                 lea     rsi, [rsp+3]
.text:000000000040302A                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:000000000040302F                 jmp     loc_402F3F
.text:0000000000403034 ; ---------------------------------------------------------------------------
.text:0000000000403034
.text:0000000000403034 loc_403034:                             ; CODE XREF: __sti__$E+18B↑j
.text:0000000000403034                 add     rdi, 0FFFFFFFFFFFFFFF8h ; int *
.text:0000000000403038                 mov     esi, 0FFFFFFFFh ; int
.text:000000000040303D                 call    _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii ; __gnu_cxx::__exchange_and_add_dispatch(int *,int)
.text:0000000000403042                 test    eax, eax
.text:0000000000403044                 jg      loc_402F21
.text:000000000040304A                 mov     rdi, [rsp+arg_8]
.text:000000000040304F                 lea     rsi, [rsp+4]
.text:0000000000403054                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:0000000000403059                 jmp     loc_402F21
.text:000000000040305E ; ---------------------------------------------------------------------------
.text:000000000040305E
.text:000000000040305E loc_40305E:                             ; CODE XREF: __sti__$E+16D↑j
.text:000000000040305E                 add     rdi, 0FFFFFFFFFFFFFFF8h ; int *
.text:0000000000403062                 mov     esi, 0FFFFFFFFh ; int
.text:0000000000403067                 call    _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii ; __gnu_cxx::__exchange_and_add_dispatch(int *,int)
.text:000000000040306C                 test    eax, eax
.text:000000000040306E                 jg      loc_402F03
.text:0000000000403074                 mov     rdi, [rsp+arg_8]
.text:0000000000403079                 lea     rsi, [rsp+5]
.text:000000000040307E                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:0000000000403083                 jmp     loc_402F03
.text:0000000000403088 ; ---------------------------------------------------------------------------
.text:0000000000403088
.text:0000000000403088 loc_403088:                             ; CODE XREF: __sti__$E+14F↑j
.text:0000000000403088                 add     rdi, 0FFFFFFFFFFFFFFF8h ; int *
.text:000000000040308C                 mov     esi, 0FFFFFFFFh ; int
.text:0000000000403091                 call    _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii ; __gnu_cxx::__exchange_and_add_dispatch(int *,int)
.text:0000000000403096                 test    eax, eax
.text:0000000000403098                 jg      loc_402EE5
.text:000000000040309E                 mov     rdi, [rsp+arg_8]
.text:00000000004030A3                 lea     rsi, [rsp+7]
.text:00000000004030A8                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:00000000004030AD                 jmp     loc_402EE5
.text:00000000004030B2 ; ---------------------------------------------------------------------------
.text:00000000004030B2
.text:00000000004030B2 loc_4030B2:                             ; CODE XREF: __sti__$E+131↑j
.text:00000000004030B2                 add     rdi, 0FFFFFFFFFFFFFFF8h ; int *
.text:00000000004030B6                 mov     esi, 0FFFFFFFFh ; int
.text:00000000004030BB                 call    _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii ; __gnu_cxx::__exchange_and_add_dispatch(int *,int)
.text:00000000004030C0                 test    eax, eax
.text:00000000004030C2                 jg      loc_402EC7
.text:00000000004030C8                 mov     rdi, [rsp+arg_8]
.text:00000000004030CD                 lea     rsi, [rsp+6]
.text:00000000004030D2                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:00000000004030D7                 jmp     loc_402EC7
.text:00000000004030DC ; ---------------------------------------------------------------------------
.text:00000000004030DC ;   cleanup() // owned by 402E4D
.text:00000000004030DC                 mov     [rsp+arg_0], rax
.text:00000000004030E1                 jmp     loc_402EC7
.text:00000000004030E6 ; ---------------------------------------------------------------------------
.text:00000000004030E6 ;   cleanup() // owned by 402E39
.text:00000000004030E6                 mov     [rsp+arg_0], rax
.text:00000000004030EB                 jmp     loc_402EE5
.text:00000000004030F0 ; ---------------------------------------------------------------------------
.text:00000000004030F0 ;   cleanup() // owned by 402E25
.text:00000000004030F0                 mov     [rsp+arg_0], rax
.text:00000000004030F5                 jmp     loc_402F03
.text:00000000004030FA ; ---------------------------------------------------------------------------
.text:00000000004030FA ;   cleanup() // owned by 402E11
.text:00000000004030FA                 mov     [rsp+arg_0], rax
.text:00000000004030FF                 jmp     loc_402F21
.text:0000000000403104 ; ---------------------------------------------------------------------------
.text:0000000000403104 ;   cleanup() // owned by 402DFD
.text:0000000000403104                 mov     [rsp+arg_0], rax
.text:0000000000403109                 jmp     loc_402F3F
.text:000000000040310E ; ---------------------------------------------------------------------------
.text:000000000040310E ;   cleanup() // owned by 402DE9
.text:000000000040310E                 mov     [rsp+arg_0], rax
.text:0000000000403113                 jmp     loc_402F5D
.text:0000000000403118 ; ---------------------------------------------------------------------------
.text:0000000000403118 ;   cleanup() // owned by 402DD5
.text:0000000000403118                 mov     [rsp+arg_0], rax
.text:000000000040311D                 jmp     loc_402F77
.text:0000000000403122 ; ---------------------------------------------------------------------------
.text:0000000000403122 ;   cleanup() // owned by 402DC1
.text:0000000000403122                 mov     [rsp+arg_0], rax
.text:0000000000403127                 jmp     loc_402F91
.text:0000000000403127 __sti__$E       endp
.text:0000000000403127
.text:0000000000403127 ; ---------------------------------------------------------------------------
.text:000000000040312C                 align 10h
.text:000000000040312C ; } // starts at 402D90
.text:0000000000403130
.text:0000000000403130 ; =============== S U B R O U T I N E =======================================
.text:0000000000403130
.text:0000000000403130
.text:0000000000403130 ; __int64 __fastcall __gnu_cxx::__exchange_and_add_dispatch(int *, int)
.text:0000000000403130 _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii proc near
.text:0000000000403130                                         ; CODE XREF: __sti__$E+214↑p
.text:0000000000403130                                         ; __sti__$E+236↑p ...
.text:0000000000403130 ; __unwind { // ___gxx_personality_v0
.text:0000000000403130                 mov     eax, 0
.text:0000000000403135                 test    rax, rax
.text:0000000000403138                 jz      short loc_403146
.text:000000000040313A                 mov     ecx, 0FFFFFFFFh
.text:000000000040313F                 lock xadd [rdi], ecx
.text:0000000000403143                 mov     eax, ecx
.text:0000000000403145                 retn
.text:0000000000403146 ; ---------------------------------------------------------------------------
.text:0000000000403146
.text:0000000000403146 loc_403146:                             ; CODE XREF: __gnu_cxx::__exchange_and_add_dispatch(int *,int)+8↑j
.text:0000000000403146                 mov     eax, [rdi]
.text:0000000000403148                 lea     edx, [rax-1]
.text:000000000040314B                 mov     [rdi], edx
.text:000000000040314D                 retn
.text:000000000040314D _ZN9__gnu_cxx27__exchange_and_add_dispatchEPii endp
.text:000000000040314D
.text:000000000040314D ; ---------------------------------------------------------------------------
.text:000000000040314E                 align 10h
.text:000000000040314E ; } // starts at 403130
.text:0000000000403150
.text:0000000000403150 ; =============== S U B R O U T I N E =======================================
.text:0000000000403150
.text:0000000000403150
.text:0000000000403150 ; void __fastcall __U0(void *)
.text:0000000000403150 __$U0           proc near               ; DATA XREF: __sti__$E+C2↑o
.text:0000000000403150
.text:0000000000403150 var_8           = byte ptr -8
.text:0000000000403150
.text:0000000000403150 ; __unwind { // ___gxx_personality_v0
.text:0000000000403150                 push    rsi
.text:0000000000403151                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000403156                 mov     rdi, cs:qword_609378
.text:000000000040315D                 lea     rax, [rdi-18h]
.text:0000000000403161                 cmp     rax, rdx
.text:0000000000403164                 jnz     loc_403394
.text:000000000040316A
.text:000000000040316A loc_40316A:                             ; CODE XREF: __$U0+266↓j
.text:000000000040316A                                         ; __$U0+278↓j
.text:000000000040316A                 mov     rdi, cs:qword_609370
.text:0000000000403171                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000403176                 lea     rax, [rdi-18h]
.text:000000000040317A                 cmp     rax, rdx
.text:000000000040317D                 jnz     loc_40335B
.text:0000000000403183
.text:0000000000403183 loc_403183:                             ; CODE XREF: __$U0+22D↓j
.text:0000000000403183                                         ; __$U0+23F↓j
.text:0000000000403183                 mov     rdi, cs:qword_609368
.text:000000000040318A                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:000000000040318F                 lea     rax, [rdi-18h]
.text:0000000000403193                 cmp     rax, rdx
.text:0000000000403196                 jnz     loc_403322
.text:000000000040319C
.text:000000000040319C loc_40319C:                             ; CODE XREF: __$U0+1F4↓j
.text:000000000040319C                                         ; __$U0+206↓j
.text:000000000040319C                 mov     rdi, cs:qword_609360
.text:00000000004031A3                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:00000000004031A8                 lea     rax, [rdi-18h]
.text:00000000004031AC                 cmp     rax, rdx
.text:00000000004031AF                 jnz     loc_4032E9
.text:00000000004031B5
.text:00000000004031B5 loc_4031B5:                             ; CODE XREF: __$U0+1BB↓j
.text:00000000004031B5                                         ; __$U0+1CD↓j
.text:00000000004031B5                 mov     rdi, cs:qword_609358
.text:00000000004031BC                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:00000000004031C1                 lea     rax, [rdi-18h]
.text:00000000004031C5                 cmp     rax, rdx
.text:00000000004031C8                 jnz     loc_4032B0
.text:00000000004031CE
.text:00000000004031CE loc_4031CE:                             ; CODE XREF: __$U0+182↓j
.text:00000000004031CE                                         ; __$U0+194↓j
.text:00000000004031CE                 mov     rdi, cs:qword_609350
.text:00000000004031D5                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:00000000004031DA                 lea     rax, [rdi-18h]
.text:00000000004031DE                 cmp     rax, rdx
.text:00000000004031E1                 jnz     loc_403277
.text:00000000004031E7
.text:00000000004031E7 loc_4031E7:                             ; CODE XREF: __$U0+149↓j
.text:00000000004031E7                                         ; __$U0+15B↓j
.text:00000000004031E7                 mov     rdi, cs:qword_609348
.text:00000000004031EE                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:00000000004031F3                 lea     rax, [rdi-18h]
.text:00000000004031F7                 cmp     rax, rdx
.text:00000000004031FA                 jnz     short loc_403245
.text:00000000004031FC
.text:00000000004031FC loc_4031FC:                             ; CODE XREF: __$U0+117↓j
.text:00000000004031FC                                         ; __$U0+125↓j
.text:00000000004031FC                 mov     rdi, cs:res
.text:0000000000403203                 mov     edx, offset _ZNSs4_Rep20_S_empty_rep_storageE@@GLIBCXX_3_4
.text:0000000000403208                 lea     rax, [rdi-18h]
.text:000000000040320C                 cmp     rax, rdx
.text:000000000040320F                 jnz     short loc_403213
.text:0000000000403211
.text:0000000000403211 loc_403211:                             ; CODE XREF: __$U0+E5↓j
.text:0000000000403211                 pop     rcx
.text:0000000000403212                 retn
.text:0000000000403213 ; ---------------------------------------------------------------------------
.text:0000000000403213
.text:0000000000403213 loc_403213:                             ; CODE XREF: __$U0+BF↑j
.text:0000000000403213                 mov     edx, 0
.text:0000000000403218                 add     rdi, 0FFFFFFFFFFFFFFF8h
.text:000000000040321C                 test    rdx, rdx
.text:000000000040321F                 jz      short loc_40322C
.text:0000000000403221                 mov     ecx, 0FFFFFFFFh
.text:0000000000403226                 lock xadd [rdi], ecx
.text:000000000040322A                 jmp     short loc_403233
.text:000000000040322C ; ---------------------------------------------------------------------------
.text:000000000040322C
.text:000000000040322C loc_40322C:                             ; CODE XREF: __$U0+CF↑j
.text:000000000040322C                 mov     ecx, [rdi]
.text:000000000040322E                 lea     edx, [rcx-1]
.text:0000000000403231                 mov     [rdi], edx
.text:0000000000403233
.text:0000000000403233 loc_403233:                             ; CODE XREF: __$U0+DA↑j
.text:0000000000403233                 test    ecx, ecx
.text:0000000000403235                 jg      short loc_403211
.text:0000000000403237                 mov     rdi, rax
.text:000000000040323A                 lea     rsi, [rsp+8+var_8]
.text:000000000040323E                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:0000000000403243                 pop     rcx
.text:0000000000403244                 retn
.text:0000000000403245 ; ---------------------------------------------------------------------------
.text:0000000000403245
.text:0000000000403245 loc_403245:                             ; CODE XREF: __$U0+AA↑j
.text:0000000000403245                 mov     edx, 0
.text:000000000040324A                 add     rdi, 0FFFFFFFFFFFFFFF8h
.text:000000000040324E                 test    rdx, rdx
.text:0000000000403251                 jz      short loc_40325E
.text:0000000000403253                 mov     ecx, 0FFFFFFFFh
.text:0000000000403258                 lock xadd [rdi], ecx
.text:000000000040325C                 jmp     short loc_403265
.text:000000000040325E ; ---------------------------------------------------------------------------
.text:000000000040325E
.text:000000000040325E loc_40325E:                             ; CODE XREF: __$U0+101↑j
.text:000000000040325E                 mov     ecx, [rdi]
.text:0000000000403260                 lea     edx, [rcx-1]
.text:0000000000403263                 mov     [rdi], edx
.text:0000000000403265
.text:0000000000403265 loc_403265:                             ; CODE XREF: __$U0+10C↑j
.text:0000000000403265                 test    ecx, ecx
.text:0000000000403267                 jg      short loc_4031FC
.text:0000000000403269                 mov     rdi, rax
.text:000000000040326C                 lea     rsi, [rsp+8+var_8]
.text:0000000000403270                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:0000000000403275                 jmp     short loc_4031FC
.text:0000000000403277 ; ---------------------------------------------------------------------------
.text:0000000000403277
.text:0000000000403277 loc_403277:                             ; CODE XREF: __$U0+91↑j
.text:0000000000403277                 mov     edx, 0
.text:000000000040327C                 add     rdi, 0FFFFFFFFFFFFFFF8h
.text:0000000000403280                 test    rdx, rdx
.text:0000000000403283                 jz      short loc_403290
.text:0000000000403285                 mov     ecx, 0FFFFFFFFh
.text:000000000040328A                 lock xadd [rdi], ecx
.text:000000000040328E                 jmp     short loc_403297
.text:0000000000403290 ; ---------------------------------------------------------------------------
.text:0000000000403290
.text:0000000000403290 loc_403290:                             ; CODE XREF: __$U0+133↑j
.text:0000000000403290                 mov     ecx, [rdi]
.text:0000000000403292                 lea     edx, [rcx-1]
.text:0000000000403295                 mov     [rdi], edx
.text:0000000000403297
.text:0000000000403297 loc_403297:                             ; CODE XREF: __$U0+13E↑j
.text:0000000000403297                 test    ecx, ecx
.text:0000000000403299                 jg      loc_4031E7
.text:000000000040329F                 mov     rdi, rax
.text:00000000004032A2                 lea     rsi, [rsp+8+var_8]
.text:00000000004032A6                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:00000000004032AB                 jmp     loc_4031E7
.text:00000000004032B0 ; ---------------------------------------------------------------------------
.text:00000000004032B0
.text:00000000004032B0 loc_4032B0:                             ; CODE XREF: __$U0+78↑j
.text:00000000004032B0                 mov     edx, 0
.text:00000000004032B5                 add     rdi, 0FFFFFFFFFFFFFFF8h
.text:00000000004032B9                 test    rdx, rdx
.text:00000000004032BC                 jz      short loc_4032C9
.text:00000000004032BE                 mov     ecx, 0FFFFFFFFh
.text:00000000004032C3                 lock xadd [rdi], ecx
.text:00000000004032C7                 jmp     short loc_4032D0
.text:00000000004032C9 ; ---------------------------------------------------------------------------
.text:00000000004032C9
.text:00000000004032C9 loc_4032C9:                             ; CODE XREF: __$U0+16C↑j
.text:00000000004032C9                 mov     ecx, [rdi]
.text:00000000004032CB                 lea     edx, [rcx-1]
.text:00000000004032CE                 mov     [rdi], edx
.text:00000000004032D0
.text:00000000004032D0 loc_4032D0:                             ; CODE XREF: __$U0+177↑j
.text:00000000004032D0                 test    ecx, ecx
.text:00000000004032D2                 jg      loc_4031CE
.text:00000000004032D8                 mov     rdi, rax
.text:00000000004032DB                 lea     rsi, [rsp+8+var_8]
.text:00000000004032DF                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:00000000004032E4                 jmp     loc_4031CE
.text:00000000004032E9 ; ---------------------------------------------------------------------------
.text:00000000004032E9
.text:00000000004032E9 loc_4032E9:                             ; CODE XREF: __$U0+5F↑j
.text:00000000004032E9                 mov     edx, 0
.text:00000000004032EE                 add     rdi, 0FFFFFFFFFFFFFFF8h
.text:00000000004032F2                 test    rdx, rdx
.text:00000000004032F5                 jz      short loc_403302
.text:00000000004032F7                 mov     ecx, 0FFFFFFFFh
.text:00000000004032FC                 lock xadd [rdi], ecx
.text:0000000000403300                 jmp     short loc_403309
.text:0000000000403302 ; ---------------------------------------------------------------------------
.text:0000000000403302
.text:0000000000403302 loc_403302:                             ; CODE XREF: __$U0+1A5↑j
.text:0000000000403302                 mov     ecx, [rdi]
.text:0000000000403304                 lea     edx, [rcx-1]
.text:0000000000403307                 mov     [rdi], edx
.text:0000000000403309
.text:0000000000403309 loc_403309:                             ; CODE XREF: __$U0+1B0↑j
.text:0000000000403309                 test    ecx, ecx
.text:000000000040330B                 jg      loc_4031B5
.text:0000000000403311                 mov     rdi, rax
.text:0000000000403314                 lea     rsi, [rsp+8+var_8]
.text:0000000000403318                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:000000000040331D                 jmp     loc_4031B5
.text:0000000000403322 ; ---------------------------------------------------------------------------
.text:0000000000403322
.text:0000000000403322 loc_403322:                             ; CODE XREF: __$U0+46↑j
.text:0000000000403322                 mov     edx, 0
.text:0000000000403327                 add     rdi, 0FFFFFFFFFFFFFFF8h
.text:000000000040332B                 test    rdx, rdx
.text:000000000040332E                 jz      short loc_40333B
.text:0000000000403330                 mov     ecx, 0FFFFFFFFh
.text:0000000000403335                 lock xadd [rdi], ecx
.text:0000000000403339                 jmp     short loc_403342
.text:000000000040333B ; ---------------------------------------------------------------------------
.text:000000000040333B
.text:000000000040333B loc_40333B:                             ; CODE XREF: __$U0+1DE↑j
.text:000000000040333B                 mov     ecx, [rdi]
.text:000000000040333D                 lea     edx, [rcx-1]
.text:0000000000403340                 mov     [rdi], edx
.text:0000000000403342
.text:0000000000403342 loc_403342:                             ; CODE XREF: __$U0+1E9↑j
.text:0000000000403342                 test    ecx, ecx
.text:0000000000403344                 jg      loc_40319C
.text:000000000040334A                 mov     rdi, rax
.text:000000000040334D                 lea     rsi, [rsp+8+var_8]
.text:0000000000403351                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:0000000000403356                 jmp     loc_40319C
.text:000000000040335B ; ---------------------------------------------------------------------------
.text:000000000040335B
.text:000000000040335B loc_40335B:                             ; CODE XREF: __$U0+2D↑j
.text:000000000040335B                 mov     edx, 0
.text:0000000000403360                 add     rdi, 0FFFFFFFFFFFFFFF8h
.text:0000000000403364                 test    rdx, rdx
.text:0000000000403367                 jz      short loc_403374
.text:0000000000403369                 mov     ecx, 0FFFFFFFFh
.text:000000000040336E                 lock xadd [rdi], ecx
.text:0000000000403372                 jmp     short loc_40337B
.text:0000000000403374 ; ---------------------------------------------------------------------------
.text:0000000000403374
.text:0000000000403374 loc_403374:                             ; CODE XREF: __$U0+217↑j
.text:0000000000403374                 mov     ecx, [rdi]
.text:0000000000403376                 lea     edx, [rcx-1]
.text:0000000000403379                 mov     [rdi], edx
.text:000000000040337B
.text:000000000040337B loc_40337B:                             ; CODE XREF: __$U0+222↑j
.text:000000000040337B                 test    ecx, ecx
.text:000000000040337D                 jg      loc_403183
.text:0000000000403383                 mov     rdi, rax
.text:0000000000403386                 lea     rsi, [rsp+8+var_8]
.text:000000000040338A                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:000000000040338F                 jmp     loc_403183
.text:0000000000403394 ; ---------------------------------------------------------------------------
.text:0000000000403394
.text:0000000000403394 loc_403394:                             ; CODE XREF: __$U0+14↑j
.text:0000000000403394                 mov     edx, 0
.text:0000000000403399                 add     rdi, 0FFFFFFFFFFFFFFF8h
.text:000000000040339D                 test    rdx, rdx
.text:00000000004033A0                 jz      short loc_4033AD
.text:00000000004033A2                 mov     ecx, 0FFFFFFFFh
.text:00000000004033A7                 lock xadd [rdi], ecx
.text:00000000004033AB                 jmp     short loc_4033B4
.text:00000000004033AD ; ---------------------------------------------------------------------------
.text:00000000004033AD
.text:00000000004033AD loc_4033AD:                             ; CODE XREF: __$U0+250↑j
.text:00000000004033AD                 mov     ecx, [rdi]
.text:00000000004033AF                 lea     edx, [rcx-1]
.text:00000000004033B2                 mov     [rdi], edx
.text:00000000004033B4
.text:00000000004033B4 loc_4033B4:                             ; CODE XREF: __$U0+25B↑j
.text:00000000004033B4                 test    ecx, ecx
.text:00000000004033B6                 jg      loc_40316A
.text:00000000004033BC                 mov     rdi, rax
.text:00000000004033BF                 lea     rsi, [rsp+8+var_8]
.text:00000000004033C3                 call    __ZNSs4_Rep10_M_destroyERKSaIcE ; std::string::_Rep::_M_destroy(std::allocator<char> const&)
.text:00000000004033C8                 jmp     loc_40316A
.text:00000000004033C8 __$U0           endp
.text:00000000004033C8
.text:00000000004033C8 ; ---------------------------------------------------------------------------
.text:00000000004033CD                 align 10h
.text:00000000004033CD ; } // starts at 403150
.text:00000000004033D0
.text:00000000004033D0 ; =============== S U B R O U T I N E =======================================
.text:00000000004033D0
.text:00000000004033D0
.text:00000000004033D0 ; std::_Vector_base<std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>, std::allocator<std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>>>::_M_deallocate(std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>*, unsigned long)
.text:00000000004033D0                 public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m ; weak
.text:00000000004033D0 _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m proc near
.text:00000000004033D0 ; __unwind { // ___gxx_personality_v0
.text:00000000004033D0                 test    rsi, rsi
.text:00000000004033D3                 jz      short locret_4033DD
.text:00000000004033D5                 mov     rdi, rsi        ; void *
.text:00000000004033D8                 jmp     __ZdlPv         ; operator delete(void *)
.text:00000000004033DD ; ---------------------------------------------------------------------------
.text:00000000004033DD
.text:00000000004033DD locret_4033DD:                          ; CODE XREF: std::_Vector_base<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>,std::allocator<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>>>::_M_deallocate(std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>*,ulong)+3↑j
.text:00000000004033DD                 retn
.text:00000000004033DD _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE13_M_deallocateEPS3_m endp
.text:00000000004033DD
.text:00000000004033DD ; ---------------------------------------------------------------------------
.text:00000000004033DE                 align 20h
.text:00000000004033DE ; } // starts at 4033D0
.text:00000000004033E0
.text:00000000004033E0 ; =============== S U B R O U T I N E =======================================
.text:00000000004033E0
.text:00000000004033E0
.text:00000000004033E0 ; std::_Vector_base<std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>, std::allocator<std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>>>::_M_get_Tp_allocator(void)
.text:00000000004033E0                 public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv ; weak
.text:00000000004033E0 _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv proc near
.text:00000000004033E0 ; __unwind { // ___gxx_personality_v0
.text:00000000004033E0                 mov     rax, rdi
.text:00000000004033E3                 retn
.text:00000000004033E3 _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EE19_M_get_Tp_allocatorEv endp
.text:00000000004033E3
.text:00000000004033E3 ; ---------------------------------------------------------------------------
.text:00000000004033E4                 align 10h
.text:00000000004033E4 ; } // starts at 4033E0
.text:00000000004033F0
.text:00000000004033F0 ; =============== S U B R O U T I N E =======================================
.text:00000000004033F0
.text:00000000004033F0
.text:00000000004033F0 ; std::char_traits<char>::length(char const*)
.text:00000000004033F0                 public _ZNSt11char_traitsIcE6lengthEPKc ; weak
.text:00000000004033F0 _ZNSt11char_traitsIcE6lengthEPKc proc near
.text:00000000004033F0 ; __unwind { // ___gxx_personality_v0
.text:00000000004033F0                 push    rsi
.text:00000000004033F1                 mov     rdx, rdi
.text:00000000004033F4                 mov     rcx, rdx
.text:00000000004033F7                 and     rdx, 0FFFFFFFFFFFFFFF0h
.text:00000000004033FB                 pxor    xmm0, xmm0
.text:00000000004033FF                 pcmpeqb xmm0, xmmword ptr [rdx]
.text:0000000000403403                 pmovmskb eax, xmm0
.text:0000000000403407                 and     ecx, 0Fh
.text:000000000040340A                 shr     eax, cl
.text:000000000040340C                 bsf     eax, eax
.text:000000000040340F                 jnz     short loc_40341C
.text:0000000000403411                 mov     rax, rdx
.text:0000000000403414                 add     rdx, rcx
.text:0000000000403417                 call    __intel_sse2_strlen
.text:000000000040341C
.text:000000000040341C loc_40341C:                             ; CODE XREF: std::char_traits<char>::length(char const*)+1F↑j
.text:000000000040341C                 pop     rcx
.text:000000000040341D                 retn
.text:000000000040341D _ZNSt11char_traitsIcE6lengthEPKc endp
.text:000000000040341D
.text:000000000040341D ; ---------------------------------------------------------------------------
.text:000000000040341E                 align 20h
.text:000000000040341E ; } // starts at 4033F0
.text:0000000000403420
.text:0000000000403420 ; =============== S U B R O U T I N E =======================================
.text:0000000000403420
.text:0000000000403420
.text:0000000000403420 ; void __fastcall std::vector<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>,std::allocator<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>>>::~vector(void *)
.text:0000000000403420                 public _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev ; weak
.text:0000000000403420 _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev proc near
.text:0000000000403420                                         ; DATA XREF: __sti__$E+DD↑o
.text:0000000000403420                                         ; __sti__$E+FB↑o
.text:0000000000403420 ; __unwind { // ___gxx_personality_v0
.text:0000000000403420                 mov     rdi, [rdi]      ; void *
.text:0000000000403423                 test    rdi, rdi
.text:0000000000403426                 jz      short locret_40342D
.text:0000000000403428                 jmp     __ZdlPv         ; operator delete(void *)
.text:000000000040342D ; ---------------------------------------------------------------------------
.text:000000000040342D
.text:000000000040342D locret_40342D:                          ; CODE XREF: std::vector<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>,std::allocator<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>>>::~vector()+6↑j
.text:000000000040342D                 retn
.text:000000000040342D _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EED1Ev endp
.text:000000000040342D
.text:000000000040342D ; ---------------------------------------------------------------------------
.text:000000000040342E                 align 10h
.text:000000000040342E ; } // starts at 403420
.text:0000000000403430
.text:0000000000403430 ; =============== S U B R O U T I N E =======================================
.text:0000000000403430
.text:0000000000403430
.text:0000000000403430 ; std::_Vector_base<std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>, std::allocator<std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>>>::~_Vector_base()
.text:0000000000403430                 public _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev ; weak
.text:0000000000403430 _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev proc near
.text:0000000000403430 ; __unwind { // ___gxx_personality_v0
.text:0000000000403430                 mov     rdi, [rdi]      ; void *
.text:0000000000403433                 test    rdi, rdi
.text:0000000000403436                 jz      short locret_40343D
.text:0000000000403438                 jmp     __ZdlPv         ; operator delete(void *)
.text:000000000040343D ; ---------------------------------------------------------------------------
.text:000000000040343D
.text:000000000040343D locret_40343D:                          ; CODE XREF: std::_Vector_base<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>,std::allocator<std::pair<std::pair<std::pair<int,int>,std::pair<int,int>>,int>>>::~_Vector_base()+6↑j
.text:000000000040343D                 retn
.text:000000000040343D _ZNSt12_Vector_baseISt4pairIS0_IS0_IiiES1_EiESaIS3_EED2Ev endp
.text:000000000040343D
.text:000000000040343D ; ---------------------------------------------------------------------------
.text:000000000040343E                 align 20h
.text:000000000040343E ; } // starts at 403430
.text:0000000000403440
.text:0000000000403440 ; =============== S U B R O U T I N E =======================================
.text:0000000000403440
.text:0000000000403440
.text:0000000000403440 ; std::vector<std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>, std::allocator<std::pair<std::pair<std::pair<int, int>, std::pair<int, int>>, int>>>::vector(void)
.text:0000000000403440                 public _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev ; weak
.text:0000000000403440 _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev proc near
.text:0000000000403440                                         ; CODE XREF: __sti__$E+D8↑p
.text:0000000000403440                                         ; __sti__$E+F6↑p
.text:0000000000403440 ; __unwind { // ___gxx_personality_v0
.text:0000000000403440                 xor     eax, eax
.text:0000000000403442                 mov     [rdi], rax
.text:0000000000403445                 mov     [rdi+8], rax
.text:0000000000403449                 mov     [rdi+10h], rax
.text:000000000040344D                 retn
.text:000000000040344D _ZNSt6vectorISt4pairIS0_IS0_IiiES1_EiESaIS3_EEC1Ev endp
.text:000000000040344D
.text:000000000040344D ; ---------------------------------------------------------------------------
.text:000000000040344E                 align 10h
.text:000000000040344E ; } // starts at 403440
.text:0000000000403450
.text:0000000000403450 ; =============== S U B R O U T I N E =======================================
.text:0000000000403450
.text:0000000000403450
.text:0000000000403450 ; void *intel_fast_memset_A(void *s, int c, size_t n)
.text:0000000000403450                 public _intel_fast_memset_A
.text:0000000000403450 _intel_fast_memset_A proc near          ; CODE XREF: _intel_fast_memset+29↓j
.text:0000000000403450 ; __unwind {
.text:0000000000403450                 jmp     _memset
.text:0000000000403450 _intel_fast_memset_A endp
.text:0000000000403450
.text:0000000000403450 ; ---------------------------------------------------------------------------
.text:0000000000403455                 align 20h
.text:0000000000403455 ; } // starts at 403450
.text:0000000000403460
.text:0000000000403460 ; =============== S U B R O U T I N E =======================================
.text:0000000000403460
.text:0000000000403460
.text:0000000000403460                 public _intel_fast_memset_J
.text:0000000000403460 _intel_fast_memset_J proc near          ; CODE XREF: _intel_fast_memset+14↓j
.text:0000000000403460 ; __unwind {
.text:0000000000403460                 jmp     __intel_new_memset
.text:0000000000403460 _intel_fast_memset_J endp
.text:0000000000403460
.text:0000000000403460 ; ---------------------------------------------------------------------------
.text:0000000000403465                 align 10h
.text:0000000000403465 ; } // starts at 403460
.text:0000000000403470
.text:0000000000403470 ; =============== S U B R O U T I N E =======================================
.text:0000000000403470
.text:0000000000403470
.text:0000000000403470                 public _intel_fast_memset
.text:0000000000403470 _intel_fast_memset proc near            ; CODE XREF: main+D9E↑p
.text:0000000000403470                                         ; _intel_fast_memset+3B↓j
.text:0000000000403470                 mov     rax, cs:__intel_cpu_feature_indicator_ptr
.text:0000000000403477                 mov     rcx, [rax]
.text:000000000040347A                 and     rcx, 7Fh
.text:000000000040347E                 cmp     rcx, 7Fh
.text:0000000000403482                 jnz     short loc_403489
.text:0000000000403484                 jmp     _intel_fast_memset_J
.text:0000000000403489 ; ---------------------------------------------------------------------------
.text:0000000000403489
.text:0000000000403489 loc_403489:                             ; CODE XREF: _intel_fast_memset+12↑j
.text:0000000000403489                 mov     rax, cs:__intel_cpu_feature_indicator_ptr
.text:0000000000403490                 test    qword ptr [rax], 1
.text:0000000000403497                 jz      short loc_40349E
.text:0000000000403499                 jmp     _intel_fast_memset_A
.text:000000000040349E ; ---------------------------------------------------------------------------
.text:000000000040349E
.text:000000000040349E loc_40349E:                             ; CODE XREF: _intel_fast_memset+27↑j
.text:000000000040349E                 sub     rsp, 8
.text:00000000004034A2                 call    __intel_cpu_features_init
.text:00000000004034A7                 add     rsp, 8
.text:00000000004034AB                 jmp     short _intel_fast_memset
.text:00000000004034AB _intel_fast_memset endp
.text:00000000004034AB
.text:00000000004034AB ; ---------------------------------------------------------------------------
.text:00000000004034AD                 align 10h
.text:00000000004034B0
.text:00000000004034B0 ; =============== S U B R O U T I N E =======================================
.text:00000000004034B0
.text:00000000004034B0
.text:00000000004034B0                 public __intel_new_feature_proc_init
.text:00000000004034B0 __intel_new_feature_proc_init proc near ; CODE XREF: main+27↑p
.text:00000000004034B0
.text:00000000004034B0 dest            = byte ptr -448h
.text:00000000004034B0 var_48          = qword ptr -48h
.text:00000000004034B0 var_40          = qword ptr -40h
.text:00000000004034B0 var_38          = qword ptr -38h
.text:00000000004034B0 var_30          = qword ptr -30h
.text:00000000004034B0 var_28          = qword ptr -28h
.text:00000000004034B0 s               = qword ptr -20h
.text:00000000004034B0
.text:00000000004034B0 ; __unwind {
.text:00000000004034B0                 push    r12
.text:00000000004034B2                 push    r13
.text:00000000004034B4                 push    r14
.text:00000000004034B6                 sub     rsp, 430h
.text:00000000004034BD                 mov     r14, rsi
.text:00000000004034C0                 mov     rax, cs:__intel_cpu_feature_indicator_ptr
.text:00000000004034C7                 mov     r13d, edi
.text:00000000004034CA                 mov     r12, [rax]
.text:00000000004034CD                 test    r12, r12
.text:00000000004034D0                 jz      loc_40380D
.text:00000000004034D6
.text:00000000004034D6 loc_4034D6:                             ; CODE XREF: __intel_new_feature_proc_init+371↓j
.text:00000000004034D6                 mov     rax, r12
.text:00000000004034D9                 and     rax, r14
.text:00000000004034DC                 cmp     r14, rax
.text:00000000004034DF                 jnz     short loc_4034FC
.text:00000000004034E1                 test    r12, 6
.text:00000000004034E8                 jnz     loc_40377D
.text:00000000004034EE
.text:00000000004034EE loc_4034EE:                             ; CODE XREF: __intel_new_feature_proc_init+2D7↓j
.text:00000000004034EE                 add     rsp, 430h
.text:00000000004034F5                 pop     r14
.text:00000000004034F7                 pop     r13
.text:00000000004034F9                 pop     r12
.text:00000000004034FB                 retn
.text:00000000004034FC ; ---------------------------------------------------------------------------
.text:00000000004034FC
.text:00000000004034FC loc_4034FC:                             ; CODE XREF: __intel_new_feature_proc_init+2F↑j
.text:00000000004034FC                 test    r14, 1
.text:0000000000403503                 jnz     loc_4037F8
.text:0000000000403509                 not     r12
.text:000000000040350C                 mov     edi, 39h ; '9'  ; number
.text:0000000000403511                 and     r12, r14
.text:0000000000403514                 xor     r14d, r14d
.text:0000000000403517                 xor     esi, esi
.text:0000000000403519                 xor     eax, eax
.text:000000000040351B                 call    __libirc_get_msg
.text:0000000000403520                 xor     edx, edx
.text:0000000000403522                 mov     r8b, 1
.text:0000000000403525                 mov     [rsp+448h+dest], 0
.text:0000000000403529                 xor     r13d, r13d
.text:000000000040352C                 mov     [rsp+448h+s], rax
.text:0000000000403534                 mov     [rsp+448h+var_28], r15
.text:000000000040353C                 mov     r15, r12
.text:000000000040353F                 mov     [rsp+448h+var_30], rbx
.text:0000000000403547                 mov     r12b, r8b
.text:000000000040354A                 mov     [rsp+448h+var_38], rbp
.text:0000000000403552                 mov     rbp, r14
.text:0000000000403555                 mov     r14, rdx
.text:0000000000403558
.text:0000000000403558 loc_403558:                             ; CODE XREF: __intel_new_feature_proc_init+1CE↓j
.text:0000000000403558                 mov     ecx, r13d
.text:000000000040355B                 mov     eax, 1
.text:0000000000403560                 shl     rax, cl
.text:0000000000403563                 test    rax, r15
.text:0000000000403566                 jz      loc_403674
.text:000000000040356C                 cmp     r12b, 26h ; '&'
.text:0000000000403570                 jnb     loc_403753
.text:0000000000403576                 movzx   ebx, r12b
.text:000000000040357A                 lea     rax, c_feature_names
.text:0000000000403581                 mov     rbx, [rax+rbx*8]
.text:0000000000403585                 test    rbx, rbx
.text:0000000000403588                 jz      loc_403753
.text:000000000040358E                 cmp     byte ptr [rbx], 0
.text:0000000000403591                 jz      loc_403753
.text:0000000000403597                 cmp     [rsp+448h+dest], 0
.text:000000000040359B                 jz      loc_40364F
.text:00000000004035A1                 test    rbp, rbp
.text:00000000004035A4                 jz      loc_40364A
.text:00000000004035AA                 mov     rdi, rbp        ; s
.text:00000000004035AD                 call    _strlen
.text:00000000004035B2                 mov     [rsp+448h+var_40], rax
.text:00000000004035BA                 mov     rdi, [rsp+448h+s] ; s
.text:00000000004035C2                 call    _strlen
.text:00000000004035C7                 mov     [rsp+448h+var_48], rax
.text:00000000004035CF                 mov     rdi, rbx        ; s
.text:00000000004035D2                 call    _strlen
.text:00000000004035D7                 mov     r9, rax
.text:00000000004035DA                 mov     rax, [rsp+448h+var_40]
.text:00000000004035E2                 add     rax, r14
.text:00000000004035E5                 add     rax, [rsp+448h+var_48]
.text:00000000004035ED                 lea     r9, [rax+r9+2]
.text:00000000004035F2                 cmp     r9, 400h
.text:00000000004035F9                 jnb     loc_40378C
.text:00000000004035FF                 neg     r14
.text:0000000000403602                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000403606                 add     r14, 3FFh
.text:000000000040360D                 lea     rsi, src        ; ", "
.text:0000000000403614                 mov     rdx, r14        ; n
.text:0000000000403617                 call    _strncat
.text:000000000040361C                 lea     rdi, [rsp+448h+dest] ; s
.text:0000000000403620                 call    _strlen
.text:0000000000403625                 movsxd  rdx, eax
.text:0000000000403628                 lea     rdi, [rsp+448h+dest] ; dest
.text:000000000040362C                 neg     rdx
.text:000000000040362F                 mov     rsi, rbp        ; src
.text:0000000000403632                 add     rdx, 3FFh       ; n
.text:0000000000403639                 call    _strncat
.text:000000000040363E                 lea     rdi, [rsp+448h+dest] ; s
.text:0000000000403642                 call    _strlen
.text:0000000000403647                 movsxd  r14, eax
.text:000000000040364A
.text:000000000040364A loc_40364A:                             ; CODE XREF: __intel_new_feature_proc_init+F4↑j
.text:000000000040364A                 mov     rbp, rbx
.text:000000000040364D                 jmp     short loc_403674
.text:000000000040364F ; ---------------------------------------------------------------------------
.text:000000000040364F
.text:000000000040364F loc_40364F:                             ; CODE XREF: __intel_new_feature_proc_init+EB↑j
.text:000000000040364F                 neg     r14
.text:0000000000403652                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000403656                 add     r14, 3FFh
.text:000000000040365D                 mov     rsi, rbx        ; src
.text:0000000000403660                 mov     rdx, r14        ; n
.text:0000000000403663                 call    _strncat
.text:0000000000403668                 lea     rdi, [rsp+448h+dest] ; s
.text:000000000040366C                 call    _strlen
.text:0000000000403671                 movsxd  r14, eax
.text:0000000000403674
.text:0000000000403674 loc_403674:                             ; CODE XREF: __intel_new_feature_proc_init+B6↑j
.text:0000000000403674                                         ; __intel_new_feature_proc_init+19D↑j
.text:0000000000403674                 inc     r12b
.text:0000000000403677                 inc     r13d
.text:000000000040367A                 cmp     r12b, 25h ; '%'
.text:000000000040367E                 jle     loc_403558
.text:0000000000403684                 mov     rdx, r14
.text:0000000000403687                 mov     r14, rbp
.text:000000000040368A                 mov     rax, [rsp+448h+s]
.text:0000000000403692                 test    r14, r14
.text:0000000000403695                 mov     r15, [rsp+448h+var_28]
.text:000000000040369D                 mov     rbx, [rsp+448h+var_30]
.text:00000000004036A5                 mov     rbp, [rsp+448h+var_38]
.text:00000000004036AD                 jz      short loc_4036E7
.text:00000000004036AF                 neg     rdx
.text:00000000004036B2                 lea     rdi, [rsp+448h+dest] ; dest
.text:00000000004036B6                 add     rdx, 3FFh       ; n
.text:00000000004036BD                 mov     rsi, rax        ; src
.text:00000000004036C0                 call    _strncat
.text:00000000004036C5                 lea     rdi, [rsp+448h+dest] ; s
.text:00000000004036C9                 call    _strlen
.text:00000000004036CE                 movsxd  rdx, eax
.text:00000000004036D1                 lea     rdi, [rsp+448h+dest] ; dest
.text:00000000004036D5                 neg     rdx
.text:00000000004036D8                 mov     rsi, r14        ; src
.text:00000000004036DB                 add     rdx, 3FFh       ; n
.text:00000000004036E2                 call    _strncat
.text:00000000004036E7
.text:00000000004036E7 loc_4036E7:                             ; CODE XREF: __intel_new_feature_proc_init+1FD↑j
.text:00000000004036E7                                         ; __intel_new_feature_proc_init+343↓j
.text:00000000004036E7                 cmp     [rsp+448h+dest], 0
.text:00000000004036EB                 jnz     short loc_40372A
.text:00000000004036ED                 xor     esi, esi
.text:00000000004036EF                 mov     edi, 1
.text:00000000004036F4                 xor     edx, edx
.text:00000000004036F6                 xor     eax, eax
.text:00000000004036F8                 call    __libirc_print
.text:00000000004036FD
.text:00000000004036FD loc_4036FD:                             ; CODE XREF: __intel_new_feature_proc_init+2CB↓j
.text:00000000004036FD                                         ; __intel_new_feature_proc_init+358↓j
.text:00000000004036FD                 mov     edi, 1
.text:0000000000403702                 mov     esi, 3Ah ; ':'
.text:0000000000403707                 xor     edx, edx
.text:0000000000403709                 xor     eax, eax
.text:000000000040370B                 call    __libirc_print
.text:0000000000403710
.text:0000000000403710 loc_403710:                             ; CODE XREF: __intel_new_feature_proc_init+2A1↓j
.text:0000000000403710                                         ; __intel_new_feature_proc_init+39A↓j
.text:0000000000403710                 xor     esi, esi
.text:0000000000403712                 mov     edi, 1
.text:0000000000403717                 xor     edx, edx
.text:0000000000403719                 xor     eax, eax
.text:000000000040371B                 call    __libirc_print
.text:0000000000403720                 mov     edi, 1          ; status
.text:0000000000403725                 call    _exit
.text:000000000040372A ; ---------------------------------------------------------------------------
.text:000000000040372A
.text:000000000040372A loc_40372A:                             ; CODE XREF: __intel_new_feature_proc_init+23B↑j
.text:000000000040372A                 xor     esi, esi
.text:000000000040372C                 mov     edi, 1
.text:0000000000403731                 xor     edx, edx
.text:0000000000403733                 xor     eax, eax
.text:0000000000403735                 call    __libirc_print
.text:000000000040373A                 mov     edi, 1
.text:000000000040373F                 mov     esi, 38h ; '8'
.text:0000000000403744                 mov     edx, edi
.text:0000000000403746                 lea     rcx, [rsp+448h+dest]
.text:000000000040374A                 xor     eax, eax
.text:000000000040374C                 call    __libirc_print
.text:0000000000403751                 jmp     short loc_403710
.text:0000000000403753 ; ---------------------------------------------------------------------------
.text:0000000000403753
.text:0000000000403753 loc_403753:                             ; CODE XREF: __intel_new_feature_proc_init+C0↑j
.text:0000000000403753                                         ; __intel_new_feature_proc_init+D8↑j ...
.text:0000000000403753                 mov     r15, [rsp+448h+var_28]
.text:000000000040375B                 mov     rbx, [rsp+448h+var_30]
.text:0000000000403763                 mov     rbp, [rsp+448h+var_38]
.text:000000000040376B                 xor     esi, esi
.text:000000000040376D                 mov     edi, 1
.text:0000000000403772                 xor     edx, edx
.text:0000000000403774                 xor     eax, eax
.text:0000000000403776                 call    __libirc_print
.text:000000000040377B                 jmp     short loc_4036FD
.text:000000000040377D ; ---------------------------------------------------------------------------
.text:000000000040377D
.text:000000000040377D loc_40377D:                             ; CODE XREF: __intel_new_feature_proc_init+38↑j
.text:000000000040377D                 xor     edi, edi
.text:000000000040377F                 mov     esi, r13d
.text:0000000000403782                 call    __intel_proc_init_ftzdazule
.text:0000000000403787                 jmp     loc_4034EE
.text:000000000040378C ; ---------------------------------------------------------------------------
.text:000000000040378C
.text:000000000040378C loc_40378C:                             ; CODE XREF: __intel_new_feature_proc_init+149↑j
.text:000000000040378C                 mov     rdx, r14
.text:000000000040378F                 lea     rdi, [rsp+448h+dest] ; dest
.text:0000000000403793                 neg     rdx
.text:0000000000403796                 mov     r14, rbp
.text:0000000000403799                 mov     rax, [rsp+448h+s]
.text:00000000004037A1                 add     rdx, 3FFh       ; n
.text:00000000004037A8                 mov     rsi, rax        ; src
.text:00000000004037AB                 mov     r15, [rsp+448h+var_28]
.text:00000000004037B3                 mov     rbx, [rsp+448h+var_30]
.text:00000000004037BB                 mov     rbp, [rsp+448h+var_38]
.text:00000000004037C3                 call    _strncat
.text:00000000004037C8                 lea     rdi, [rsp+448h+dest] ; s
.text:00000000004037CC                 call    _strlen
.text:00000000004037D1                 movsxd  rdx, eax
.text:00000000004037D4                 lea     rdi, [rsp+448h+dest] ; dest
.text:00000000004037D8                 neg     rdx
.text:00000000004037DB                 mov     rsi, r14        ; src
.text:00000000004037DE                 add     rdx, 3FFh       ; n
.text:00000000004037E5                 call    _strncat
.text:00000000004037EA                 lea     rdi, [rsp+448h+dest] ; s
.text:00000000004037EE                 call    _strlen
.text:00000000004037F3                 jmp     loc_4036E7
.text:00000000004037F8 ; ---------------------------------------------------------------------------
.text:00000000004037F8
.text:00000000004037F8 loc_4037F8:                             ; CODE XREF: __intel_new_feature_proc_init+53↑j
.text:00000000004037F8                 xor     esi, esi
.text:00000000004037FA                 mov     edi, 1
.text:00000000004037FF                 xor     edx, edx
.text:0000000000403801                 xor     eax, eax
.text:0000000000403803                 call    __libirc_print
.text:0000000000403808                 jmp     loc_4036FD
.text:000000000040380D ; ---------------------------------------------------------------------------
.text:000000000040380D
.text:000000000040380D loc_40380D:                             ; CODE XREF: __intel_new_feature_proc_init+20↑j
.text:000000000040380D                 xor     eax, eax
.text:000000000040380F                 call    __intel_cpu_features_init
.text:0000000000403814                 mov     rax, cs:__intel_cpu_feature_indicator_ptr
.text:000000000040381B                 mov     r12, [rax]
.text:000000000040381E                 test    r12, r12
.text:0000000000403821                 jnz     loc_4034D6
.text:0000000000403827                 xor     esi, esi
.text:0000000000403829                 mov     edi, 1
.text:000000000040382E                 xor     edx, edx
.text:0000000000403830                 xor     eax, eax
.text:0000000000403832                 call    __libirc_print
.text:0000000000403837                 mov     edi, 1
.text:000000000040383C                 mov     esi, 3Bh ; ';'
.text:0000000000403841                 xor     edx, edx
.text:0000000000403843                 xor     eax, eax
.text:0000000000403845                 call    __libirc_print
.text:000000000040384A                 jmp     loc_403710
.text:000000000040384A __intel_new_feature_proc_init endp
.text:000000000040384A
.text:000000000040384A ; ---------------------------------------------------------------------------
.text:000000000040384F                 align 10h
.text:000000000040384F ; } // starts at 4034B0
.text:0000000000403850
.text:0000000000403850 ; =============== S U B R O U T I N E =======================================
.text:0000000000403850
.text:0000000000403850
.text:0000000000403850                 public __intel_sse2_strlen
.text:0000000000403850 __intel_sse2_strlen proc near           ; CODE XREF: std::char_traits<char>::length(char const*)+27↑p
.text:0000000000403850 ; __unwind {
.text:0000000000403850                 pxor    xmm0, xmm0
.text:0000000000403854
.text:0000000000403854 loc_403854:                             ; CODE XREF: __intel_sse2_strlen+16↓j
.text:0000000000403854                 add     rax, 10h
.text:0000000000403858                 movdqa  xmm1, xmmword ptr [rax]
.text:000000000040385C                 pcmpeqb xmm1, xmm0
.text:0000000000403860                 pmovmskb ecx, xmm1
.text:0000000000403864                 test    ecx, ecx
.text:0000000000403866                 jz      short loc_403854
.text:0000000000403868                 bsf     ecx, ecx
.text:000000000040386B                 sub     rcx, rdx
.text:000000000040386E                 add     rax, rcx
.text:0000000000403871                 retn
.text:0000000000403871 __intel_sse2_strlen endp
.text:0000000000403871
.text:0000000000403871 ; ---------------------------------------------------------------------------
.text:0000000000403872                 align 20h
.text:0000000000403872 ; } // starts at 403850
.text:0000000000403880
.text:0000000000403880 ; =============== S U B R O U T I N E =======================================
.text:0000000000403880
.text:0000000000403880
.text:0000000000403880                 public __intel_new_memset
.text:0000000000403880 __intel_new_memset proc near            ; CODE XREF: _intel_fast_memset_J↑j
.text:0000000000403880 ; __unwind {
.text:0000000000403880                 cmp     rdx, 1
.text:0000000000403884                 mov     rax, rdi
.text:0000000000403887                 jnz     short loc_40388D
.text:0000000000403889                 mov     [rdi], sil
.text:000000000040388C                 retn
.text:000000000040388D ; ---------------------------------------------------------------------------
.text:000000000040388D
.text:000000000040388D loc_40388D:                             ; CODE XREF: __intel_new_memset+7↑j
.text:000000000040388D                 mov     r9, 101010101010101h
.text:0000000000403897                 mov     r8, rdx
.text:000000000040389A                 movzx   rdx, sil
.text:000000000040389E                 imul    rdx, r9
.text:00000000004038A2                 cmp     r8, 41h ; 'A'
.text:00000000004038A6                 jge     loc_403CB0
.text:00000000004038AC                 lea     r11, jpt_4038BE
.text:00000000004038B3                 add     rdi, r8
.text:00000000004038B6                 mov     rcx, ds:(jpt_4038BE - 4038D0h)[r11+r8*8] ; switch 80 cases
.text:00000000004038BA                 lea     r11, [rcx+r11]
.text:00000000004038BE                 jmp     r11             ; switch jump
.text:00000000004038C1 ; ---------------------------------------------------------------------------
.text:00000000004038C1
.text:00000000004038C1 locret_4038C1:                          ; CODE XREF: __intel_new_memset+3E↑j
.text:00000000004038C1                                         ; __intel_new_memset+B70↓j ...
.text:00000000004038C1                 retn    0               ; jumptable 00000000004038BE case 0
.text:00000000004038C1                                         ; jumptable 00000000004043F0 case 0
.text:00000000004038C1                                         ; jumptable 0000000000404458 case 0
.text:00000000004038C1 ; ---------------------------------------------------------------------------
.text:00000000004038C4                 align 10h
.text:00000000004038D0 jpt_4038BE      dq offset locret_4038C1 - 4038D0h, offset loc_403B74 - 4038D0h
.text:00000000004038D0                                         ; DATA XREF: __intel_new_memset+2C↑o
.text:00000000004038D0                                         ; __intel_new_memset+36↑r ...
.text:00000000004038D0                 dq offset loc_403BC5 - 4038D0h, offset loc_403BF0 - 4038D0h ; jump table for switch statement
.text:00000000004038D0                 dq offset loc_403C1E - 4038D0h, offset loc_403C48 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C75 - 4038D0h, offset loc_403CA3 - 4038D0h
.text:00000000004038D0                 dq offset loc_403B9A - 4038D0h, offset loc_403B70 - 4038D0h
.text:00000000004038D0                 dq offset loc_403BC1 - 4038D0h, offset loc_403BEC - 4038D0h
.text:00000000004038D0                 dq offset loc_403C1A - 4038D0h, offset loc_403C44 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C71 - 4038D0h, offset loc_403C9F - 4038D0h
.text:00000000004038D0                 dq offset loc_403B96 - 4038D0h, offset loc_403B6C - 4038D0h
.text:00000000004038D0                 dq offset loc_403BBD - 4038D0h, offset loc_403BE8 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C16 - 4038D0h, offset loc_403C40 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C6D - 4038D0h, offset loc_403C9B - 4038D0h
.text:00000000004038D0                 dq offset loc_403B92 - 4038D0h, offset loc_403B68 - 4038D0h
.text:00000000004038D0                 dq offset loc_403BB9 - 4038D0h, offset loc_403BE4 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C12 - 4038D0h, offset loc_403C3C - 4038D0h
.text:00000000004038D0                 dq offset loc_403C69 - 4038D0h, offset loc_403C97 - 4038D0h
.text:00000000004038D0                 dq offset loc_403B8E - 4038D0h, offset loc_403B64 - 4038D0h
.text:00000000004038D0                 dq offset loc_403BB5 - 4038D0h, offset loc_403BE0 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C0E - 4038D0h, offset loc_403C38 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C65 - 4038D0h, offset loc_403C93 - 4038D0h
.text:00000000004038D0                 dq offset loc_403B8A - 4038D0h, offset loc_403B60 - 4038D0h
.text:00000000004038D0                 dq offset loc_403BB1 - 4038D0h, offset loc_403BDC - 4038D0h
.text:00000000004038D0                 dq offset loc_403C0A - 4038D0h, offset loc_403C34 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C61 - 4038D0h, offset loc_403C8F - 4038D0h
.text:00000000004038D0                 dq offset loc_403B86 - 4038D0h, offset loc_403B5C - 4038D0h
.text:00000000004038D0                 dq offset loc_403BAD - 4038D0h, offset loc_403BD8 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C06 - 4038D0h, offset loc_403C30 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C5D - 4038D0h, offset loc_403C8B - 4038D0h
.text:00000000004038D0                 dq offset loc_403B82 - 4038D0h, offset loc_403B58 - 4038D0h
.text:00000000004038D0                 dq offset loc_403BA9 - 4038D0h, offset loc_403BD4 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C02 - 4038D0h, offset loc_403C2C - 4038D0h
.text:00000000004038D0                 dq offset loc_403C59 - 4038D0h, offset loc_403C87 - 4038D0h
.text:00000000004038D0                 dq offset loc_403B7E - 4038D0h, offset loc_403B54 - 4038D0h
.text:00000000004038D0                 dq offset loc_403BA5 - 4038D0h, offset loc_403BD0 - 4038D0h
.text:00000000004038D0                 dq offset loc_403BFE - 4038D0h, offset loc_403C28 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C55 - 4038D0h, offset loc_403C83 - 4038D0h
.text:00000000004038D0                 dq offset loc_403B7A - 4038D0h, offset loc_403B50 - 4038D0h
.text:00000000004038D0                 dq offset loc_403BA1 - 4038D0h, offset loc_403BCC - 4038D0h
.text:00000000004038D0                 dq offset loc_403BFA - 4038D0h, offset loc_403C24 - 4038D0h
.text:00000000004038D0                 dq offset loc_403C51 - 4038D0h, offset loc_403C7F - 4038D0h
.text:0000000000403B50 ; ---------------------------------------------------------------------------
.text:0000000000403B50
.text:0000000000403B50 loc_403B50:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B50                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B50                 mov     [rdi-49h], rdx  ; jumptable 00000000004038BE case 73
.text:0000000000403B50                                         ; jumptable 00000000004043F0 case 73
.text:0000000000403B50                                         ; jumptable 0000000000404458 case 73
.text:0000000000403B54
.text:0000000000403B54 loc_403B54:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B54                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B54                 mov     [rdi-41h], rdx  ; jumptable 00000000004038BE case 65
.text:0000000000403B54                                         ; jumptable 00000000004043F0 case 65
.text:0000000000403B54                                         ; jumptable 0000000000404458 case 65
.text:0000000000403B58
.text:0000000000403B58 loc_403B58:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B58                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B58                 mov     [rdi-39h], rdx  ; jumptable 00000000004038BE case 57
.text:0000000000403B58                                         ; jumptable 00000000004043F0 case 57
.text:0000000000403B58                                         ; jumptable 0000000000404458 case 57
.text:0000000000403B5C
.text:0000000000403B5C loc_403B5C:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B5C                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B5C                 mov     [rdi-31h], rdx  ; jumptable 00000000004038BE case 49
.text:0000000000403B5C                                         ; jumptable 00000000004043F0 case 49
.text:0000000000403B5C                                         ; jumptable 0000000000404458 case 49
.text:0000000000403B60
.text:0000000000403B60 loc_403B60:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B60                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B60                 mov     [rdi-29h], rdx  ; jumptable 00000000004038BE case 41
.text:0000000000403B60                                         ; jumptable 00000000004043F0 case 41
.text:0000000000403B60                                         ; jumptable 0000000000404458 case 41
.text:0000000000403B64
.text:0000000000403B64 loc_403B64:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B64                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B64                 mov     [rdi-21h], rdx  ; jumptable 00000000004038BE case 33
.text:0000000000403B64                                         ; jumptable 00000000004043F0 case 33
.text:0000000000403B64                                         ; jumptable 0000000000404458 case 33
.text:0000000000403B68
.text:0000000000403B68 loc_403B68:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B68                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B68                 mov     [rdi-19h], rdx  ; jumptable 00000000004038BE case 25
.text:0000000000403B68                                         ; jumptable 00000000004043F0 case 25
.text:0000000000403B68                                         ; jumptable 0000000000404458 case 25
.text:0000000000403B6C
.text:0000000000403B6C loc_403B6C:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B6C                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B6C                 mov     [rdi-11h], rdx  ; jumptable 00000000004038BE case 17
.text:0000000000403B6C                                         ; jumptable 00000000004043F0 case 17
.text:0000000000403B6C                                         ; jumptable 0000000000404458 case 17
.text:0000000000403B70
.text:0000000000403B70 loc_403B70:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B70                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B70                 mov     [rdi-9], rdx    ; jumptable 00000000004038BE case 9
.text:0000000000403B70                                         ; jumptable 00000000004043F0 case 9
.text:0000000000403B70                                         ; jumptable 0000000000404458 case 9
.text:0000000000403B74
.text:0000000000403B74 loc_403B74:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B74                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B74                 mov     [rdi-1], dl     ; jumptable 00000000004038BE case 1
.text:0000000000403B74                                         ; jumptable 00000000004043F0 case 1
.text:0000000000403B74                                         ; jumptable 0000000000404458 case 1
.text:0000000000403B77                 retn    0
.text:0000000000403B7A ; ---------------------------------------------------------------------------
.text:0000000000403B7A
.text:0000000000403B7A loc_403B7A:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B7A                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B7A                 mov     [rdi-48h], rdx  ; jumptable 00000000004038BE case 72
.text:0000000000403B7A                                         ; jumptable 00000000004043F0 case 72
.text:0000000000403B7A                                         ; jumptable 0000000000404458 case 72
.text:0000000000403B7E
.text:0000000000403B7E loc_403B7E:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B7E                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B7E                 mov     [rdi-40h], rdx  ; jumptable 00000000004038BE case 64
.text:0000000000403B7E                                         ; jumptable 00000000004043F0 case 64
.text:0000000000403B7E                                         ; jumptable 0000000000404458 case 64
.text:0000000000403B82
.text:0000000000403B82 loc_403B82:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B82                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B82                 mov     [rdi-38h], rdx  ; jumptable 00000000004038BE case 56
.text:0000000000403B82                                         ; jumptable 00000000004043F0 case 56
.text:0000000000403B82                                         ; jumptable 0000000000404458 case 56
.text:0000000000403B86
.text:0000000000403B86 loc_403B86:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B86                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B86                 mov     [rdi-30h], rdx  ; jumptable 00000000004038BE case 48
.text:0000000000403B86                                         ; jumptable 00000000004043F0 case 48
.text:0000000000403B86                                         ; jumptable 0000000000404458 case 48
.text:0000000000403B8A
.text:0000000000403B8A loc_403B8A:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B8A                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B8A                 mov     [rdi-28h], rdx  ; jumptable 00000000004038BE case 40
.text:0000000000403B8A                                         ; jumptable 00000000004043F0 case 40
.text:0000000000403B8A                                         ; jumptable 0000000000404458 case 40
.text:0000000000403B8E
.text:0000000000403B8E loc_403B8E:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B8E                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B8E                 mov     [rdi-20h], rdx  ; jumptable 00000000004038BE case 32
.text:0000000000403B8E                                         ; jumptable 00000000004043F0 case 32
.text:0000000000403B8E                                         ; jumptable 0000000000404458 case 32
.text:0000000000403B92
.text:0000000000403B92 loc_403B92:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B92                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B92                 mov     [rdi-18h], rdx  ; jumptable 00000000004038BE case 24
.text:0000000000403B92                                         ; jumptable 00000000004043F0 case 24
.text:0000000000403B92                                         ; jumptable 0000000000404458 case 24
.text:0000000000403B96
.text:0000000000403B96 loc_403B96:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B96                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B96                 mov     [rdi-10h], rdx  ; jumptable 00000000004038BE case 16
.text:0000000000403B96                                         ; jumptable 00000000004043F0 case 16
.text:0000000000403B96                                         ; jumptable 0000000000404458 case 16
.text:0000000000403B9A
.text:0000000000403B9A loc_403B9A:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403B9A                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403B9A                 mov     [rdi-8], rdx    ; jumptable 00000000004038BE case 8
.text:0000000000403B9A                                         ; jumptable 00000000004043F0 case 8
.text:0000000000403B9A                                         ; jumptable 0000000000404458 case 8
.text:0000000000403B9E                 retn    0
.text:0000000000403BA1 ; ---------------------------------------------------------------------------
.text:0000000000403BA1
.text:0000000000403BA1 loc_403BA1:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BA1                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BA1                 mov     [rdi-4Ah], rdx  ; jumptable 00000000004038BE case 74
.text:0000000000403BA1                                         ; jumptable 00000000004043F0 case 74
.text:0000000000403BA1                                         ; jumptable 0000000000404458 case 74
.text:0000000000403BA5
.text:0000000000403BA5 loc_403BA5:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BA5                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BA5                 mov     [rdi-42h], rdx  ; jumptable 00000000004038BE case 66
.text:0000000000403BA5                                         ; jumptable 00000000004043F0 case 66
.text:0000000000403BA5                                         ; jumptable 0000000000404458 case 66
.text:0000000000403BA9
.text:0000000000403BA9 loc_403BA9:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BA9                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BA9                 mov     [rdi-3Ah], rdx  ; jumptable 00000000004038BE case 58
.text:0000000000403BA9                                         ; jumptable 00000000004043F0 case 58
.text:0000000000403BA9                                         ; jumptable 0000000000404458 case 58
.text:0000000000403BAD
.text:0000000000403BAD loc_403BAD:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BAD                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BAD                 mov     [rdi-32h], rdx  ; jumptable 00000000004038BE case 50
.text:0000000000403BAD                                         ; jumptable 00000000004043F0 case 50
.text:0000000000403BAD                                         ; jumptable 0000000000404458 case 50
.text:0000000000403BB1
.text:0000000000403BB1 loc_403BB1:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BB1                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BB1                 mov     [rdi-2Ah], rdx  ; jumptable 00000000004038BE case 42
.text:0000000000403BB1                                         ; jumptable 00000000004043F0 case 42
.text:0000000000403BB1                                         ; jumptable 0000000000404458 case 42
.text:0000000000403BB5
.text:0000000000403BB5 loc_403BB5:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BB5                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BB5                 mov     [rdi-22h], rdx  ; jumptable 00000000004038BE case 34
.text:0000000000403BB5                                         ; jumptable 00000000004043F0 case 34
.text:0000000000403BB5                                         ; jumptable 0000000000404458 case 34
.text:0000000000403BB9
.text:0000000000403BB9 loc_403BB9:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BB9                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BB9                 mov     [rdi-1Ah], rdx  ; jumptable 00000000004038BE case 26
.text:0000000000403BB9                                         ; jumptable 00000000004043F0 case 26
.text:0000000000403BB9                                         ; jumptable 0000000000404458 case 26
.text:0000000000403BBD
.text:0000000000403BBD loc_403BBD:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BBD                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BBD                 mov     [rdi-12h], rdx  ; jumptable 00000000004038BE case 18
.text:0000000000403BBD                                         ; jumptable 00000000004043F0 case 18
.text:0000000000403BBD                                         ; jumptable 0000000000404458 case 18
.text:0000000000403BC1
.text:0000000000403BC1 loc_403BC1:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BC1                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BC1                 mov     [rdi-0Ah], rdx  ; jumptable 00000000004038BE case 10
.text:0000000000403BC1                                         ; jumptable 00000000004043F0 case 10
.text:0000000000403BC1                                         ; jumptable 0000000000404458 case 10
.text:0000000000403BC5
.text:0000000000403BC5 loc_403BC5:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BC5                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BC5                 mov     [rdi-2], dx     ; jumptable 00000000004038BE case 2
.text:0000000000403BC5                                         ; jumptable 00000000004043F0 case 2
.text:0000000000403BC5                                         ; jumptable 0000000000404458 case 2
.text:0000000000403BC9                 retn    0
.text:0000000000403BCC ; ---------------------------------------------------------------------------
.text:0000000000403BCC
.text:0000000000403BCC loc_403BCC:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BCC                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BCC                 mov     [rdi-4Bh], rdx  ; jumptable 00000000004038BE case 75
.text:0000000000403BCC                                         ; jumptable 00000000004043F0 case 75
.text:0000000000403BCC                                         ; jumptable 0000000000404458 case 75
.text:0000000000403BD0
.text:0000000000403BD0 loc_403BD0:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BD0                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BD0                 mov     [rdi-43h], rdx  ; jumptable 00000000004038BE case 67
.text:0000000000403BD0                                         ; jumptable 00000000004043F0 case 67
.text:0000000000403BD0                                         ; jumptable 0000000000404458 case 67
.text:0000000000403BD4
.text:0000000000403BD4 loc_403BD4:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BD4                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BD4                 mov     [rdi-3Bh], rdx  ; jumptable 00000000004038BE case 59
.text:0000000000403BD4                                         ; jumptable 00000000004043F0 case 59
.text:0000000000403BD4                                         ; jumptable 0000000000404458 case 59
.text:0000000000403BD8
.text:0000000000403BD8 loc_403BD8:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BD8                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BD8                 mov     [rdi-33h], rdx  ; jumptable 00000000004038BE case 51
.text:0000000000403BD8                                         ; jumptable 00000000004043F0 case 51
.text:0000000000403BD8                                         ; jumptable 0000000000404458 case 51
.text:0000000000403BDC
.text:0000000000403BDC loc_403BDC:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BDC                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BDC                 mov     [rdi-2Bh], rdx  ; jumptable 00000000004038BE case 43
.text:0000000000403BDC                                         ; jumptable 00000000004043F0 case 43
.text:0000000000403BDC                                         ; jumptable 0000000000404458 case 43
.text:0000000000403BE0
.text:0000000000403BE0 loc_403BE0:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BE0                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BE0                 mov     [rdi-23h], rdx  ; jumptable 00000000004038BE case 35
.text:0000000000403BE0                                         ; jumptable 00000000004043F0 case 35
.text:0000000000403BE0                                         ; jumptable 0000000000404458 case 35
.text:0000000000403BE4
.text:0000000000403BE4 loc_403BE4:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BE4                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BE4                 mov     [rdi-1Bh], rdx  ; jumptable 00000000004038BE case 27
.text:0000000000403BE4                                         ; jumptable 00000000004043F0 case 27
.text:0000000000403BE4                                         ; jumptable 0000000000404458 case 27
.text:0000000000403BE8
.text:0000000000403BE8 loc_403BE8:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BE8                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BE8                 mov     [rdi-13h], rdx  ; jumptable 00000000004038BE case 19
.text:0000000000403BE8                                         ; jumptable 00000000004043F0 case 19
.text:0000000000403BE8                                         ; jumptable 0000000000404458 case 19
.text:0000000000403BEC
.text:0000000000403BEC loc_403BEC:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BEC                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BEC                 mov     [rdi-0Bh], rdx  ; jumptable 00000000004038BE case 11
.text:0000000000403BEC                                         ; jumptable 00000000004043F0 case 11
.text:0000000000403BEC                                         ; jumptable 0000000000404458 case 11
.text:0000000000403BF0
.text:0000000000403BF0 loc_403BF0:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BF0                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BF0                 mov     [rdi-3], dx     ; jumptable 00000000004038BE case 3
.text:0000000000403BF0                                         ; jumptable 00000000004043F0 case 3
.text:0000000000403BF0                                         ; jumptable 0000000000404458 case 3
.text:0000000000403BF4                 mov     [rdi-1], dl
.text:0000000000403BF7                 retn    0
.text:0000000000403BFA ; ---------------------------------------------------------------------------
.text:0000000000403BFA
.text:0000000000403BFA loc_403BFA:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BFA                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BFA                 mov     [rdi-4Ch], rdx  ; jumptable 00000000004038BE case 76
.text:0000000000403BFA                                         ; jumptable 00000000004043F0 case 76
.text:0000000000403BFA                                         ; jumptable 0000000000404458 case 76
.text:0000000000403BFE
.text:0000000000403BFE loc_403BFE:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403BFE                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403BFE                 mov     [rdi-44h], rdx  ; jumptable 00000000004038BE case 68
.text:0000000000403BFE                                         ; jumptable 00000000004043F0 case 68
.text:0000000000403BFE                                         ; jumptable 0000000000404458 case 68
.text:0000000000403C02
.text:0000000000403C02 loc_403C02:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C02                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C02                 mov     [rdi-3Ch], rdx  ; jumptable 00000000004038BE case 60
.text:0000000000403C02                                         ; jumptable 00000000004043F0 case 60
.text:0000000000403C02                                         ; jumptable 0000000000404458 case 60
.text:0000000000403C06
.text:0000000000403C06 loc_403C06:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C06                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C06                 mov     [rdi-34h], rdx  ; jumptable 00000000004038BE case 52
.text:0000000000403C06                                         ; jumptable 00000000004043F0 case 52
.text:0000000000403C06                                         ; jumptable 0000000000404458 case 52
.text:0000000000403C0A
.text:0000000000403C0A loc_403C0A:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C0A                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C0A                 mov     [rdi-2Ch], rdx  ; jumptable 00000000004038BE case 44
.text:0000000000403C0A                                         ; jumptable 00000000004043F0 case 44
.text:0000000000403C0A                                         ; jumptable 0000000000404458 case 44
.text:0000000000403C0E
.text:0000000000403C0E loc_403C0E:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C0E                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C0E                 mov     [rdi-24h], rdx  ; jumptable 00000000004038BE case 36
.text:0000000000403C0E                                         ; jumptable 00000000004043F0 case 36
.text:0000000000403C0E                                         ; jumptable 0000000000404458 case 36
.text:0000000000403C12
.text:0000000000403C12 loc_403C12:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C12                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C12                 mov     [rdi-1Ch], rdx  ; jumptable 00000000004038BE case 28
.text:0000000000403C12                                         ; jumptable 00000000004043F0 case 28
.text:0000000000403C12                                         ; jumptable 0000000000404458 case 28
.text:0000000000403C16
.text:0000000000403C16 loc_403C16:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C16                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C16                 mov     [rdi-14h], rdx  ; jumptable 00000000004038BE case 20
.text:0000000000403C16                                         ; jumptable 00000000004043F0 case 20
.text:0000000000403C16                                         ; jumptable 0000000000404458 case 20
.text:0000000000403C1A
.text:0000000000403C1A loc_403C1A:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C1A                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C1A                 mov     [rdi-0Ch], rdx  ; jumptable 00000000004038BE case 12
.text:0000000000403C1A                                         ; jumptable 00000000004043F0 case 12
.text:0000000000403C1A                                         ; jumptable 0000000000404458 case 12
.text:0000000000403C1E
.text:0000000000403C1E loc_403C1E:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C1E                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C1E                 mov     [rdi-4], edx    ; jumptable 00000000004038BE case 4
.text:0000000000403C1E                                         ; jumptable 00000000004043F0 case 4
.text:0000000000403C1E                                         ; jumptable 0000000000404458 case 4
.text:0000000000403C21                 retn    0
.text:0000000000403C24 ; ---------------------------------------------------------------------------
.text:0000000000403C24
.text:0000000000403C24 loc_403C24:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C24                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C24                 mov     [rdi-4Dh], rdx  ; jumptable 00000000004038BE case 77
.text:0000000000403C24                                         ; jumptable 00000000004043F0 case 77
.text:0000000000403C24                                         ; jumptable 0000000000404458 case 77
.text:0000000000403C28
.text:0000000000403C28 loc_403C28:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C28                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C28                 mov     [rdi-45h], rdx  ; jumptable 00000000004038BE case 69
.text:0000000000403C28                                         ; jumptable 00000000004043F0 case 69
.text:0000000000403C28                                         ; jumptable 0000000000404458 case 69
.text:0000000000403C2C
.text:0000000000403C2C loc_403C2C:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C2C                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C2C                 mov     [rdi-3Dh], rdx  ; jumptable 00000000004038BE case 61
.text:0000000000403C2C                                         ; jumptable 00000000004043F0 case 61
.text:0000000000403C2C                                         ; jumptable 0000000000404458 case 61
.text:0000000000403C30
.text:0000000000403C30 loc_403C30:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C30                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C30                 mov     [rdi-35h], rdx  ; jumptable 00000000004038BE case 53
.text:0000000000403C30                                         ; jumptable 00000000004043F0 case 53
.text:0000000000403C30                                         ; jumptable 0000000000404458 case 53
.text:0000000000403C34
.text:0000000000403C34 loc_403C34:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C34                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C34                 mov     [rdi-2Dh], rdx  ; jumptable 00000000004038BE case 45
.text:0000000000403C34                                         ; jumptable 00000000004043F0 case 45
.text:0000000000403C34                                         ; jumptable 0000000000404458 case 45
.text:0000000000403C38
.text:0000000000403C38 loc_403C38:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C38                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C38                 mov     [rdi-25h], rdx  ; jumptable 00000000004038BE case 37
.text:0000000000403C38                                         ; jumptable 00000000004043F0 case 37
.text:0000000000403C38                                         ; jumptable 0000000000404458 case 37
.text:0000000000403C3C
.text:0000000000403C3C loc_403C3C:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C3C                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C3C                 mov     [rdi-1Dh], rdx  ; jumptable 00000000004038BE case 29
.text:0000000000403C3C                                         ; jumptable 00000000004043F0 case 29
.text:0000000000403C3C                                         ; jumptable 0000000000404458 case 29
.text:0000000000403C40
.text:0000000000403C40 loc_403C40:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C40                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C40                 mov     [rdi-15h], rdx  ; jumptable 00000000004038BE case 21
.text:0000000000403C40                                         ; jumptable 00000000004043F0 case 21
.text:0000000000403C40                                         ; jumptable 0000000000404458 case 21
.text:0000000000403C44
.text:0000000000403C44 loc_403C44:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C44                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C44                 mov     [rdi-0Dh], rdx  ; jumptable 00000000004038BE case 13
.text:0000000000403C44                                         ; jumptable 00000000004043F0 case 13
.text:0000000000403C44                                         ; jumptable 0000000000404458 case 13
.text:0000000000403C48
.text:0000000000403C48 loc_403C48:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C48                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C48                 mov     [rdi-5], edx    ; jumptable 00000000004038BE case 5
.text:0000000000403C48                                         ; jumptable 00000000004043F0 case 5
.text:0000000000403C48                                         ; jumptable 0000000000404458 case 5
.text:0000000000403C4B                 mov     [rdi-1], dl
.text:0000000000403C4E                 retn    0
.text:0000000000403C51 ; ---------------------------------------------------------------------------
.text:0000000000403C51
.text:0000000000403C51 loc_403C51:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C51                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C51                 mov     [rdi-4Eh], rdx  ; jumptable 00000000004038BE case 78
.text:0000000000403C51                                         ; jumptable 00000000004043F0 case 78
.text:0000000000403C51                                         ; jumptable 0000000000404458 case 78
.text:0000000000403C55
.text:0000000000403C55 loc_403C55:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C55                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C55                 mov     [rdi-46h], rdx  ; jumptable 00000000004038BE case 70
.text:0000000000403C55                                         ; jumptable 00000000004043F0 case 70
.text:0000000000403C55                                         ; jumptable 0000000000404458 case 70
.text:0000000000403C59
.text:0000000000403C59 loc_403C59:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C59                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C59                 mov     [rdi-3Eh], rdx  ; jumptable 00000000004038BE case 62
.text:0000000000403C59                                         ; jumptable 00000000004043F0 case 62
.text:0000000000403C59                                         ; jumptable 0000000000404458 case 62
.text:0000000000403C5D
.text:0000000000403C5D loc_403C5D:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C5D                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C5D                 mov     [rdi-36h], rdx  ; jumptable 00000000004038BE case 54
.text:0000000000403C5D                                         ; jumptable 00000000004043F0 case 54
.text:0000000000403C5D                                         ; jumptable 0000000000404458 case 54
.text:0000000000403C61
.text:0000000000403C61 loc_403C61:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C61                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C61                 mov     [rdi-2Eh], rdx  ; jumptable 00000000004038BE case 46
.text:0000000000403C61                                         ; jumptable 00000000004043F0 case 46
.text:0000000000403C61                                         ; jumptable 0000000000404458 case 46
.text:0000000000403C65
.text:0000000000403C65 loc_403C65:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C65                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C65                 mov     [rdi-26h], rdx  ; jumptable 00000000004038BE case 38
.text:0000000000403C65                                         ; jumptable 00000000004043F0 case 38
.text:0000000000403C65                                         ; jumptable 0000000000404458 case 38
.text:0000000000403C69
.text:0000000000403C69 loc_403C69:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C69                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C69                 mov     [rdi-1Eh], rdx  ; jumptable 00000000004038BE case 30
.text:0000000000403C69                                         ; jumptable 00000000004043F0 case 30
.text:0000000000403C69                                         ; jumptable 0000000000404458 case 30
.text:0000000000403C6D
.text:0000000000403C6D loc_403C6D:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C6D                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C6D                 mov     [rdi-16h], rdx  ; jumptable 00000000004038BE case 22
.text:0000000000403C6D                                         ; jumptable 00000000004043F0 case 22
.text:0000000000403C6D                                         ; jumptable 0000000000404458 case 22
.text:0000000000403C71
.text:0000000000403C71 loc_403C71:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C71                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C71                 mov     [rdi-0Eh], rdx  ; jumptable 00000000004038BE case 14
.text:0000000000403C71                                         ; jumptable 00000000004043F0 case 14
.text:0000000000403C71                                         ; jumptable 0000000000404458 case 14
.text:0000000000403C75
.text:0000000000403C75 loc_403C75:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C75                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C75                 mov     [rdi-6], edx    ; jumptable 00000000004038BE case 6
.text:0000000000403C75                                         ; jumptable 00000000004043F0 case 6
.text:0000000000403C75                                         ; jumptable 0000000000404458 case 6
.text:0000000000403C78                 mov     [rdi-2], dx
.text:0000000000403C7C                 retn    0
.text:0000000000403C7F ; ---------------------------------------------------------------------------
.text:0000000000403C7F
.text:0000000000403C7F loc_403C7F:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C7F                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C7F                 mov     [rdi-4Fh], rdx  ; jumptable 00000000004038BE case 79
.text:0000000000403C7F                                         ; jumptable 00000000004043F0 case 79
.text:0000000000403C7F                                         ; jumptable 0000000000404458 case 79
.text:0000000000403C83
.text:0000000000403C83 loc_403C83:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C83                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C83                 mov     [rdi-47h], rdx  ; jumptable 00000000004038BE case 71
.text:0000000000403C83                                         ; jumptable 00000000004043F0 case 71
.text:0000000000403C83                                         ; jumptable 0000000000404458 case 71
.text:0000000000403C87
.text:0000000000403C87 loc_403C87:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C87                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C87                 mov     [rdi-3Fh], rdx  ; jumptable 00000000004038BE case 63
.text:0000000000403C87                                         ; jumptable 00000000004043F0 case 63
.text:0000000000403C87                                         ; jumptable 0000000000404458 case 63
.text:0000000000403C8B
.text:0000000000403C8B loc_403C8B:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C8B                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C8B                 mov     [rdi-37h], rdx  ; jumptable 00000000004038BE case 55
.text:0000000000403C8B                                         ; jumptable 00000000004043F0 case 55
.text:0000000000403C8B                                         ; jumptable 0000000000404458 case 55
.text:0000000000403C8F
.text:0000000000403C8F loc_403C8F:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C8F                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C8F                 mov     [rdi-2Fh], rdx  ; jumptable 00000000004038BE case 47
.text:0000000000403C8F                                         ; jumptable 00000000004043F0 case 47
.text:0000000000403C8F                                         ; jumptable 0000000000404458 case 47
.text:0000000000403C93
.text:0000000000403C93 loc_403C93:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C93                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C93                 mov     [rdi-27h], rdx  ; jumptable 00000000004038BE case 39
.text:0000000000403C93                                         ; jumptable 00000000004043F0 case 39
.text:0000000000403C93                                         ; jumptable 0000000000404458 case 39
.text:0000000000403C97
.text:0000000000403C97 loc_403C97:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C97                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C97                 mov     [rdi-1Fh], rdx  ; jumptable 00000000004038BE case 31
.text:0000000000403C97                                         ; jumptable 00000000004043F0 case 31
.text:0000000000403C97                                         ; jumptable 0000000000404458 case 31
.text:0000000000403C9B
.text:0000000000403C9B loc_403C9B:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C9B                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C9B                 mov     [rdi-17h], rdx  ; jumptable 00000000004038BE case 23
.text:0000000000403C9B                                         ; jumptable 00000000004043F0 case 23
.text:0000000000403C9B                                         ; jumptable 0000000000404458 case 23
.text:0000000000403C9F
.text:0000000000403C9F loc_403C9F:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403C9F                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403C9F                 mov     [rdi-0Fh], rdx  ; jumptable 00000000004038BE case 15
.text:0000000000403C9F                                         ; jumptable 00000000004043F0 case 15
.text:0000000000403C9F                                         ; jumptable 0000000000404458 case 15
.text:0000000000403CA3
.text:0000000000403CA3 loc_403CA3:                             ; CODE XREF: __intel_new_memset+3E↑j
.text:0000000000403CA3                                         ; __intel_new_memset+B70↓j ...
.text:0000000000403CA3                 mov     [rdi-7], edx    ; jumptable 00000000004038BE case 7
.text:0000000000403CA3                                         ; jumptable 00000000004043F0 case 7
.text:0000000000403CA3                                         ; jumptable 0000000000404458 case 7
.text:0000000000403CA6                 mov     [rdi-3], dx
.text:0000000000403CAA                 mov     [rdi-1], dl
.text:0000000000403CAD                 retn    0
.text:0000000000403CB0 ; ---------------------------------------------------------------------------
.text:0000000000403CB0
.text:0000000000403CB0 loc_403CB0:                             ; CODE XREF: __intel_new_memset+26↑j
.text:0000000000403CB0                 cmp     cs:__libirc_mem_ops_method, 2
.text:0000000000403CB7                 jl      loc_4043A0
.text:0000000000403CBD                 movq    xmm0, rdx
.text:0000000000403CC2                 lea     r11, jpt_403CF0
.text:0000000000403CC9                 punpcklqdq xmm0, xmm0
.text:0000000000403CCD                 mov     r10, 10h
.text:0000000000403CD4                 mov     r9, rdi
.text:0000000000403CD7                 and     r9, 0Fh
.text:0000000000403CDB                 sub     r10, r9
.text:0000000000403CDE                 and     r10, 0Fh        ; switch 16 cases
.text:0000000000403CE2                 add     rdi, r10
.text:0000000000403CE5                 sub     r8, r10
.text:0000000000403CE8                 mov     rcx, ds:(jpt_403CF0 - 403D00h)[r11+r10*8]
.text:0000000000403CEC                 lea     r11, [rcx+r11]
.text:0000000000403CF0                 jmp     r11             ; switch jump
.text:0000000000403CF0 ; ---------------------------------------------------------------------------
.text:0000000000403CF3                 align 20h
.text:0000000000403D00 jpt_403CF0      dq offset loc_403D92 - 403D00h
.text:0000000000403D00                                         ; DATA XREF: __intel_new_memset+442↑o
.text:0000000000403D00                                         ; __intel_new_memset+468↑r
.text:0000000000403D00                 dq offset loc_403D9D - 403D00h ; jump table for switch statement
.text:0000000000403D00                 dq offset loc_403DB2 - 403D00h
.text:0000000000403D00                 dq offset loc_403DAF - 403D00h
.text:0000000000403D00                 dq offset loc_403DBB - 403D00h
.text:0000000000403D00                 dq offset loc_403DB8 - 403D00h
.text:0000000000403D00                 dq offset loc_403DD3 - 403D00h
.text:0000000000403D00                 dq offset loc_403DD0 - 403D00h
.text:0000000000403D00                 dq offset loc_403D8E - 403D00h
.text:0000000000403D00                 dq offset loc_403D94 - 403D00h
.text:0000000000403D00                 dq offset loc_403DA5 - 403D00h
.text:0000000000403D00                 dq offset loc_403DA2 - 403D00h
.text:0000000000403D00                 dq offset loc_403D8B - 403D00h
.text:0000000000403D00                 dq offset loc_403D88 - 403D00h
.text:0000000000403D00                 dq offset loc_403DC3 - 403D00h
.text:0000000000403D00                 dq offset loc_403DC0 - 403D00h
.text:0000000000403D80                 dq 92h
.text:0000000000403D88 ; ---------------------------------------------------------------------------
.text:0000000000403D88
.text:0000000000403D88 loc_403D88:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403D88                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403D88                 mov     [rdi-0Dh], dl   ; jumptable 0000000000403CF0 case 13
.text:0000000000403D8B
.text:0000000000403D8B loc_403D8B:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403D8B                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403D8B                 mov     [rdi-0Ch], edx  ; jumptable 0000000000403CF0 case 12
.text:0000000000403D8E
.text:0000000000403D8E loc_403D8E:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403D8E                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403D8E                 mov     [rdi-8], rdx    ; jumptable 0000000000403CF0 case 8
.text:0000000000403D92
.text:0000000000403D92 loc_403D92:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403D92                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403D92                 jmp     short loc_403DDC ; jumptable 0000000000403CF0 case 0
.text:0000000000403D94 ; ---------------------------------------------------------------------------
.text:0000000000403D94
.text:0000000000403D94 loc_403D94:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403D94                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403D94                 mov     [rdi-9], dl     ; jumptable 0000000000403CF0 case 9
.text:0000000000403D97                 mov     [rdi-8], rdx
.text:0000000000403D9B                 jmp     short loc_403DDC
.text:0000000000403D9D ; ---------------------------------------------------------------------------
.text:0000000000403D9D
.text:0000000000403D9D loc_403D9D:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403D9D                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403D9D                 mov     [rdi-1], dl     ; jumptable 0000000000403CF0 case 1
.text:0000000000403DA0                 jmp     short loc_403DDC
.text:0000000000403DA2 ; ---------------------------------------------------------------------------
.text:0000000000403DA2
.text:0000000000403DA2 loc_403DA2:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DA2                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DA2                 mov     [rdi-0Bh], dl   ; jumptable 0000000000403CF0 case 11
.text:0000000000403DA5
.text:0000000000403DA5 loc_403DA5:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DA5                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DA5                 mov     [rdi-0Ah], dx   ; jumptable 0000000000403CF0 case 10
.text:0000000000403DA9                 mov     [rdi-8], rdx
.text:0000000000403DAD                 jmp     short loc_403DDC
.text:0000000000403DAF ; ---------------------------------------------------------------------------
.text:0000000000403DAF
.text:0000000000403DAF loc_403DAF:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DAF                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DAF                 mov     [rdi-3], dl     ; jumptable 0000000000403CF0 case 3
.text:0000000000403DB2
.text:0000000000403DB2 loc_403DB2:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DB2                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DB2                 mov     [rdi-2], dx     ; jumptable 0000000000403CF0 case 2
.text:0000000000403DB6                 jmp     short loc_403DDC
.text:0000000000403DB8 ; ---------------------------------------------------------------------------
.text:0000000000403DB8
.text:0000000000403DB8 loc_403DB8:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DB8                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DB8                 mov     [rdi-5], dl     ; jumptable 0000000000403CF0 case 5
.text:0000000000403DBB
.text:0000000000403DBB loc_403DBB:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DBB                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DBB                 mov     [rdi-4], edx    ; jumptable 0000000000403CF0 case 4
.text:0000000000403DBE                 jmp     short loc_403DDC
.text:0000000000403DC0 ; ---------------------------------------------------------------------------
.text:0000000000403DC0
.text:0000000000403DC0 loc_403DC0:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DC0                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DC0                 mov     [rdi-0Fh], dl   ; jumptable 0000000000403CF0 case 15
.text:0000000000403DC3
.text:0000000000403DC3 loc_403DC3:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DC3                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DC3                 mov     [rdi-0Eh], dx   ; jumptable 0000000000403CF0 case 14
.text:0000000000403DC7                 mov     [rdi-0Ch], edx
.text:0000000000403DCA                 mov     [rdi-8], rdx
.text:0000000000403DCE                 jmp     short loc_403DDC
.text:0000000000403DD0 ; ---------------------------------------------------------------------------
.text:0000000000403DD0
.text:0000000000403DD0 loc_403DD0:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DD0                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DD0                 mov     [rdi-7], dl     ; jumptable 0000000000403CF0 case 7
.text:0000000000403DD3
.text:0000000000403DD3 loc_403DD3:                             ; CODE XREF: __intel_new_memset+470↑j
.text:0000000000403DD3                                         ; DATA XREF: __intel_new_memset:jpt_403CF0↑o
.text:0000000000403DD3                 mov     [rdi-6], dx     ; jumptable 0000000000403CF0 case 6
.text:0000000000403DD7                 mov     [rdi-4], edx
.text:0000000000403DDA                 jmp     short $+2
.text:0000000000403DDC ; ---------------------------------------------------------------------------
.text:0000000000403DDC
.text:0000000000403DDC loc_403DDC:                             ; CODE XREF: __intel_new_memset:loc_403D92↑j
.text:0000000000403DDC                                         ; __intel_new_memset+51B↑j ...
.text:0000000000403DDC                 lea     r9, jpt_403DFB
.text:0000000000403DE3                 cmp     r8, 0B0h
.text:0000000000403DEA                 jge     loc_4042C9
.text:0000000000403DF0                 add     rdi, r8
.text:0000000000403DF3                 mov     rcx, ds:(jpt_403DFB - 404460h)[r9+r8*8] ; switch 192 cases
.text:0000000000403DF7                 lea     r9, [rcx+r9]
.text:0000000000403DFB                 jmp     r9              ; switch jump
.text:0000000000403DFB ; ---------------------------------------------------------------------------
.text:0000000000403DFE                 align 20h
.text:0000000000403E00
.text:0000000000403E00 loc_403E00:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E00                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E00                 movdqa  xmmword ptr [rdi-0B0h], xmm0 ; jumptable 0000000000403DFB case 176
.text:0000000000403E00                                         ; jumptable 000000000040432D case 176
.text:0000000000403E00                                         ; jumptable 0000000000404393 case 176
.text:0000000000403E08
.text:0000000000403E08 loc_403E08:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E08                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E08                 movdqa  xmmword ptr [rdi-0A0h], xmm0 ; jumptable 0000000000403DFB case 160
.text:0000000000403E08                                         ; jumptable 000000000040432D case 160
.text:0000000000403E08                                         ; jumptable 0000000000404393 case 160
.text:0000000000403E10
.text:0000000000403E10 loc_403E10:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E10                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E10                 movdqa  xmmword ptr [rdi-90h], xmm0 ; jumptable 0000000000403DFB case 144
.text:0000000000403E10                                         ; jumptable 000000000040432D case 144
.text:0000000000403E10                                         ; jumptable 0000000000404393 case 144
.text:0000000000403E18
.text:0000000000403E18 loc_403E18:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E18                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E18                 movdqa  xmmword ptr [rdi-80h], xmm0 ; jumptable 0000000000403DFB case 128
.text:0000000000403E18                                         ; jumptable 000000000040432D case 128
.text:0000000000403E18                                         ; jumptable 0000000000404393 case 128
.text:0000000000403E1D
.text:0000000000403E1D loc_403E1D:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E1D                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E1D                 movdqa  xmmword ptr [rdi-70h], xmm0 ; jumptable 0000000000403DFB case 112
.text:0000000000403E1D                                         ; jumptable 000000000040432D case 112
.text:0000000000403E1D                                         ; jumptable 0000000000404393 case 112
.text:0000000000403E22
.text:0000000000403E22 loc_403E22:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E22                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E22                 movdqa  xmmword ptr [rdi-60h], xmm0 ; jumptable 0000000000403DFB case 96
.text:0000000000403E22                                         ; jumptable 000000000040432D case 96
.text:0000000000403E22                                         ; jumptable 0000000000404393 case 96
.text:0000000000403E27
.text:0000000000403E27 loc_403E27:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E27                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E27                 movdqa  xmmword ptr [rdi-50h], xmm0 ; jumptable 0000000000403DFB case 80
.text:0000000000403E27                                         ; jumptable 000000000040432D case 80
.text:0000000000403E27                                         ; jumptable 0000000000404393 case 80
.text:0000000000403E2C
.text:0000000000403E2C loc_403E2C:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E2C                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E2C                 movdqa  xmmword ptr [rdi-40h], xmm0 ; jumptable 0000000000403DFB case 64
.text:0000000000403E2C                                         ; jumptable 000000000040432D case 64
.text:0000000000403E2C                                         ; jumptable 0000000000404393 case 64
.text:0000000000403E31
.text:0000000000403E31 loc_403E31:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E31                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E31                 movdqa  xmmword ptr [rdi-30h], xmm0 ; jumptable 0000000000403DFB case 48
.text:0000000000403E31                                         ; jumptable 000000000040432D case 48
.text:0000000000403E31                                         ; jumptable 0000000000404393 case 48
.text:0000000000403E36
.text:0000000000403E36 loc_403E36:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E36                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E36                 movdqa  xmmword ptr [rdi-20h], xmm0 ; jumptable 0000000000403DFB case 32
.text:0000000000403E36                                         ; jumptable 000000000040432D case 32
.text:0000000000403E36                                         ; jumptable 0000000000404393 case 32
.text:0000000000403E3B
.text:0000000000403E3B loc_403E3B:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E3B                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E3B                 movdqa  xmmword ptr [rdi-10h], xmm0 ; jumptable 0000000000403DFB case 16
.text:0000000000403E3B                                         ; jumptable 000000000040432D case 16
.text:0000000000403E3B                                         ; jumptable 0000000000404393 case 16
.text:0000000000403E40
.text:0000000000403E40 locret_403E40:                          ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E40                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E40                 retn                    ; jumptable 0000000000403DFB case 0
.text:0000000000403E40                                         ; jumptable 000000000040432D case 0
.text:0000000000403E40                                         ; jumptable 0000000000404393 case 0
.text:0000000000403E41 ; ---------------------------------------------------------------------------
.text:0000000000403E41
.text:0000000000403E41 loc_403E41:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E41                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E41                 movdqa  xmmword ptr [rdi-0B1h], xmm0 ; jumptable 0000000000403DFB case 177
.text:0000000000403E41                                         ; jumptable 000000000040432D case 177
.text:0000000000403E41                                         ; jumptable 0000000000404393 case 177
.text:0000000000403E49
.text:0000000000403E49 loc_403E49:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E49                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E49                 movdqa  xmmword ptr [rdi-0A1h], xmm0 ; jumptable 0000000000403DFB case 161
.text:0000000000403E49                                         ; jumptable 000000000040432D case 161
.text:0000000000403E49                                         ; jumptable 0000000000404393 case 161
.text:0000000000403E51
.text:0000000000403E51 loc_403E51:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E51                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E51                 movdqa  xmmword ptr [rdi-91h], xmm0 ; jumptable 0000000000403DFB case 145
.text:0000000000403E51                                         ; jumptable 000000000040432D case 145
.text:0000000000403E51                                         ; jumptable 0000000000404393 case 145
.text:0000000000403E59
.text:0000000000403E59 loc_403E59:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E59                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E59                 movdqa  xmmword ptr [rdi-81h], xmm0 ; jumptable 0000000000403DFB case 129
.text:0000000000403E59                                         ; jumptable 000000000040432D case 129
.text:0000000000403E59                                         ; jumptable 0000000000404393 case 129
.text:0000000000403E61
.text:0000000000403E61 loc_403E61:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E61                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E61                 movdqa  xmmword ptr [rdi-71h], xmm0 ; jumptable 0000000000403DFB case 113
.text:0000000000403E61                                         ; jumptable 000000000040432D case 113
.text:0000000000403E61                                         ; jumptable 0000000000404393 case 113
.text:0000000000403E66
.text:0000000000403E66 loc_403E66:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E66                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E66                 movdqa  xmmword ptr [rdi-61h], xmm0 ; jumptable 0000000000403DFB case 97
.text:0000000000403E66                                         ; jumptable 000000000040432D case 97
.text:0000000000403E66                                         ; jumptable 0000000000404393 case 97
.text:0000000000403E6B
.text:0000000000403E6B loc_403E6B:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E6B                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E6B                 movdqa  xmmword ptr [rdi-51h], xmm0 ; jumptable 0000000000403DFB case 81
.text:0000000000403E6B                                         ; jumptable 000000000040432D case 81
.text:0000000000403E6B                                         ; jumptable 0000000000404393 case 81
.text:0000000000403E70
.text:0000000000403E70 loc_403E70:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E70                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E70                 movdqa  xmmword ptr [rdi-41h], xmm0 ; jumptable 0000000000403DFB case 65
.text:0000000000403E70                                         ; jumptable 000000000040432D case 65
.text:0000000000403E70                                         ; jumptable 0000000000404393 case 65
.text:0000000000403E75
.text:0000000000403E75 loc_403E75:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E75                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E75                 movdqa  xmmword ptr [rdi-31h], xmm0 ; jumptable 0000000000403DFB case 49
.text:0000000000403E75                                         ; jumptable 000000000040432D case 49
.text:0000000000403E75                                         ; jumptable 0000000000404393 case 49
.text:0000000000403E7A
.text:0000000000403E7A loc_403E7A:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E7A                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E7A                 movdqa  xmmword ptr [rdi-21h], xmm0 ; jumptable 0000000000403DFB case 33
.text:0000000000403E7A                                         ; jumptable 000000000040432D case 33
.text:0000000000403E7A                                         ; jumptable 0000000000404393 case 33
.text:0000000000403E7F
.text:0000000000403E7F loc_403E7F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E7F                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E7F                 movdqa  xmmword ptr [rdi-11h], xmm0 ; jumptable 0000000000403DFB case 17
.text:0000000000403E7F                                         ; jumptable 000000000040432D case 17
.text:0000000000403E7F                                         ; jumptable 0000000000404393 case 17
.text:0000000000403E84
.text:0000000000403E84 loc_403E84:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E84                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E84                 mov     [rdi-1], dl     ; jumptable 0000000000403DFB case 1
.text:0000000000403E84                                         ; jumptable 000000000040432D case 1
.text:0000000000403E84                                         ; jumptable 0000000000404393 case 1
.text:0000000000403E87                 retn
.text:0000000000403E88 ; ---------------------------------------------------------------------------
.text:0000000000403E88
.text:0000000000403E88 loc_403E88:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E88                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E88                 movdqa  xmmword ptr [rdi-0B2h], xmm0 ; jumptable 0000000000403DFB case 178
.text:0000000000403E88                                         ; jumptable 000000000040432D case 178
.text:0000000000403E88                                         ; jumptable 0000000000404393 case 178
.text:0000000000403E90
.text:0000000000403E90 loc_403E90:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E90                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E90                 movdqa  xmmword ptr [rdi-0A2h], xmm0 ; jumptable 0000000000403DFB case 162
.text:0000000000403E90                                         ; jumptable 000000000040432D case 162
.text:0000000000403E90                                         ; jumptable 0000000000404393 case 162
.text:0000000000403E98
.text:0000000000403E98 loc_403E98:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403E98                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403E98                 movdqa  xmmword ptr [rdi-92h], xmm0 ; jumptable 0000000000403DFB case 146
.text:0000000000403E98                                         ; jumptable 000000000040432D case 146
.text:0000000000403E98                                         ; jumptable 0000000000404393 case 146
.text:0000000000403EA0
.text:0000000000403EA0 loc_403EA0:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EA0                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EA0                 movdqa  xmmword ptr [rdi-82h], xmm0 ; jumptable 0000000000403DFB case 130
.text:0000000000403EA0                                         ; jumptable 000000000040432D case 130
.text:0000000000403EA0                                         ; jumptable 0000000000404393 case 130
.text:0000000000403EA8
.text:0000000000403EA8 loc_403EA8:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EA8                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EA8                 movdqa  xmmword ptr [rdi-72h], xmm0 ; jumptable 0000000000403DFB case 114
.text:0000000000403EA8                                         ; jumptable 000000000040432D case 114
.text:0000000000403EA8                                         ; jumptable 0000000000404393 case 114
.text:0000000000403EAD
.text:0000000000403EAD loc_403EAD:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EAD                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EAD                 movdqa  xmmword ptr [rdi-62h], xmm0 ; jumptable 0000000000403DFB case 98
.text:0000000000403EAD                                         ; jumptable 000000000040432D case 98
.text:0000000000403EAD                                         ; jumptable 0000000000404393 case 98
.text:0000000000403EB2
.text:0000000000403EB2 loc_403EB2:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EB2                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EB2                 movdqa  xmmword ptr [rdi-52h], xmm0 ; jumptable 0000000000403DFB case 82
.text:0000000000403EB2                                         ; jumptable 000000000040432D case 82
.text:0000000000403EB2                                         ; jumptable 0000000000404393 case 82
.text:0000000000403EB7
.text:0000000000403EB7 loc_403EB7:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EB7                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EB7                 movdqa  xmmword ptr [rdi-42h], xmm0 ; jumptable 0000000000403DFB case 66
.text:0000000000403EB7                                         ; jumptable 000000000040432D case 66
.text:0000000000403EB7                                         ; jumptable 0000000000404393 case 66
.text:0000000000403EBC
.text:0000000000403EBC loc_403EBC:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EBC                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EBC                 movdqa  xmmword ptr [rdi-32h], xmm0 ; jumptable 0000000000403DFB case 50
.text:0000000000403EBC                                         ; jumptable 000000000040432D case 50
.text:0000000000403EBC                                         ; jumptable 0000000000404393 case 50
.text:0000000000403EC1
.text:0000000000403EC1 loc_403EC1:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EC1                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EC1                 movdqa  xmmword ptr [rdi-22h], xmm0 ; jumptable 0000000000403DFB case 34
.text:0000000000403EC1                                         ; jumptable 000000000040432D case 34
.text:0000000000403EC1                                         ; jumptable 0000000000404393 case 34
.text:0000000000403EC6
.text:0000000000403EC6 loc_403EC6:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EC6                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EC6                 movdqa  xmmword ptr [rdi-12h], xmm0 ; jumptable 0000000000403DFB case 18
.text:0000000000403EC6                                         ; jumptable 000000000040432D case 18
.text:0000000000403EC6                                         ; jumptable 0000000000404393 case 18
.text:0000000000403ECB
.text:0000000000403ECB loc_403ECB:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403ECB                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403ECB                 mov     [rdi-2], dx     ; jumptable 0000000000403DFB case 2
.text:0000000000403ECB                                         ; jumptable 000000000040432D case 2
.text:0000000000403ECB                                         ; jumptable 0000000000404393 case 2
.text:0000000000403ECF                 retn    0
.text:0000000000403ED2 ; ---------------------------------------------------------------------------
.text:0000000000403ED2
.text:0000000000403ED2 loc_403ED2:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403ED2                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403ED2                 movdqa  xmmword ptr [rdi-0B3h], xmm0 ; jumptable 0000000000403DFB case 179
.text:0000000000403ED2                                         ; jumptable 000000000040432D case 179
.text:0000000000403ED2                                         ; jumptable 0000000000404393 case 179
.text:0000000000403EDA
.text:0000000000403EDA loc_403EDA:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EDA                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EDA                 movdqa  xmmword ptr [rdi-0A3h], xmm0 ; jumptable 0000000000403DFB case 163
.text:0000000000403EDA                                         ; jumptable 000000000040432D case 163
.text:0000000000403EDA                                         ; jumptable 0000000000404393 case 163
.text:0000000000403EE2
.text:0000000000403EE2 loc_403EE2:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EE2                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EE2                 movdqa  xmmword ptr [rdi-93h], xmm0 ; jumptable 0000000000403DFB case 147
.text:0000000000403EE2                                         ; jumptable 000000000040432D case 147
.text:0000000000403EE2                                         ; jumptable 0000000000404393 case 147
.text:0000000000403EEA
.text:0000000000403EEA loc_403EEA:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EEA                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EEA                 movdqa  xmmword ptr [rdi-83h], xmm0 ; jumptable 0000000000403DFB case 131
.text:0000000000403EEA                                         ; jumptable 000000000040432D case 131
.text:0000000000403EEA                                         ; jumptable 0000000000404393 case 131
.text:0000000000403EF2
.text:0000000000403EF2 loc_403EF2:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EF2                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EF2                 movdqa  xmmword ptr [rdi-73h], xmm0 ; jumptable 0000000000403DFB case 115
.text:0000000000403EF2                                         ; jumptable 000000000040432D case 115
.text:0000000000403EF2                                         ; jumptable 0000000000404393 case 115
.text:0000000000403EF7
.text:0000000000403EF7 loc_403EF7:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EF7                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EF7                 movdqa  xmmword ptr [rdi-63h], xmm0 ; jumptable 0000000000403DFB case 99
.text:0000000000403EF7                                         ; jumptable 000000000040432D case 99
.text:0000000000403EF7                                         ; jumptable 0000000000404393 case 99
.text:0000000000403EFC
.text:0000000000403EFC loc_403EFC:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403EFC                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403EFC                 movdqa  xmmword ptr [rdi-53h], xmm0 ; jumptable 0000000000403DFB case 83
.text:0000000000403EFC                                         ; jumptable 000000000040432D case 83
.text:0000000000403EFC                                         ; jumptable 0000000000404393 case 83
.text:0000000000403F01
.text:0000000000403F01 loc_403F01:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F01                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F01                 movdqa  xmmword ptr [rdi-43h], xmm0 ; jumptable 0000000000403DFB case 67
.text:0000000000403F01                                         ; jumptable 000000000040432D case 67
.text:0000000000403F01                                         ; jumptable 0000000000404393 case 67
.text:0000000000403F06
.text:0000000000403F06 loc_403F06:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F06                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F06                 movdqa  xmmword ptr [rdi-33h], xmm0 ; jumptable 0000000000403DFB case 51
.text:0000000000403F06                                         ; jumptable 000000000040432D case 51
.text:0000000000403F06                                         ; jumptable 0000000000404393 case 51
.text:0000000000403F0B
.text:0000000000403F0B loc_403F0B:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F0B                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F0B                 movdqa  xmmword ptr [rdi-23h], xmm0 ; jumptable 0000000000403DFB case 35
.text:0000000000403F0B                                         ; jumptable 000000000040432D case 35
.text:0000000000403F0B                                         ; jumptable 0000000000404393 case 35
.text:0000000000403F10
.text:0000000000403F10 loc_403F10:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F10                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F10                 movdqa  xmmword ptr [rdi-13h], xmm0 ; jumptable 0000000000403DFB case 19
.text:0000000000403F10                                         ; jumptable 000000000040432D case 19
.text:0000000000403F10                                         ; jumptable 0000000000404393 case 19
.text:0000000000403F15
.text:0000000000403F15 loc_403F15:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F15                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F15                 mov     [rdi-3], dx     ; jumptable 0000000000403DFB case 3
.text:0000000000403F15                                         ; jumptable 000000000040432D case 3
.text:0000000000403F15                                         ; jumptable 0000000000404393 case 3
.text:0000000000403F19                 mov     [rdi-1], dl
.text:0000000000403F1C                 retn    0
.text:0000000000403F1F ; ---------------------------------------------------------------------------
.text:0000000000403F1F
.text:0000000000403F1F loc_403F1F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F1F                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F1F                 movdqa  xmmword ptr [rdi-0B4h], xmm0 ; jumptable 0000000000403DFB case 180
.text:0000000000403F1F                                         ; jumptable 000000000040432D case 180
.text:0000000000403F1F                                         ; jumptable 0000000000404393 case 180
.text:0000000000403F27
.text:0000000000403F27 loc_403F27:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F27                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F27                 movdqa  xmmword ptr [rdi-0A4h], xmm0 ; jumptable 0000000000403DFB case 164
.text:0000000000403F27                                         ; jumptable 000000000040432D case 164
.text:0000000000403F27                                         ; jumptable 0000000000404393 case 164
.text:0000000000403F2F
.text:0000000000403F2F loc_403F2F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F2F                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F2F                 movdqa  xmmword ptr [rdi-94h], xmm0 ; jumptable 0000000000403DFB case 148
.text:0000000000403F2F                                         ; jumptable 000000000040432D case 148
.text:0000000000403F2F                                         ; jumptable 0000000000404393 case 148
.text:0000000000403F37
.text:0000000000403F37 loc_403F37:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F37                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F37                 movdqa  xmmword ptr [rdi-84h], xmm0 ; jumptable 0000000000403DFB case 132
.text:0000000000403F37                                         ; jumptable 000000000040432D case 132
.text:0000000000403F37                                         ; jumptable 0000000000404393 case 132
.text:0000000000403F3F
.text:0000000000403F3F loc_403F3F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F3F                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F3F                 movdqa  xmmword ptr [rdi-74h], xmm0 ; jumptable 0000000000403DFB case 116
.text:0000000000403F3F                                         ; jumptable 000000000040432D case 116
.text:0000000000403F3F                                         ; jumptable 0000000000404393 case 116
.text:0000000000403F44
.text:0000000000403F44 loc_403F44:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F44                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F44                 movdqa  xmmword ptr [rdi-64h], xmm0 ; jumptable 0000000000403DFB case 100
.text:0000000000403F44                                         ; jumptable 000000000040432D case 100
.text:0000000000403F44                                         ; jumptable 0000000000404393 case 100
.text:0000000000403F49
.text:0000000000403F49 loc_403F49:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F49                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F49                 movdqa  xmmword ptr [rdi-54h], xmm0 ; jumptable 0000000000403DFB case 84
.text:0000000000403F49                                         ; jumptable 000000000040432D case 84
.text:0000000000403F49                                         ; jumptable 0000000000404393 case 84
.text:0000000000403F4E
.text:0000000000403F4E loc_403F4E:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F4E                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F4E                 movdqa  xmmword ptr [rdi-44h], xmm0 ; jumptable 0000000000403DFB case 68
.text:0000000000403F4E                                         ; jumptable 000000000040432D case 68
.text:0000000000403F4E                                         ; jumptable 0000000000404393 case 68
.text:0000000000403F53
.text:0000000000403F53 loc_403F53:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F53                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F53                 movdqa  xmmword ptr [rdi-34h], xmm0 ; jumptable 0000000000403DFB case 52
.text:0000000000403F53                                         ; jumptable 000000000040432D case 52
.text:0000000000403F53                                         ; jumptable 0000000000404393 case 52
.text:0000000000403F58
.text:0000000000403F58 loc_403F58:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F58                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F58                 movdqa  xmmword ptr [rdi-24h], xmm0 ; jumptable 0000000000403DFB case 36
.text:0000000000403F58                                         ; jumptable 000000000040432D case 36
.text:0000000000403F58                                         ; jumptable 0000000000404393 case 36
.text:0000000000403F5D
.text:0000000000403F5D loc_403F5D:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F5D                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F5D                 movdqa  xmmword ptr [rdi-14h], xmm0 ; jumptable 0000000000403DFB case 20
.text:0000000000403F5D                                         ; jumptable 000000000040432D case 20
.text:0000000000403F5D                                         ; jumptable 0000000000404393 case 20
.text:0000000000403F62
.text:0000000000403F62 loc_403F62:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F62                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F62                 mov     [rdi-4], edx    ; jumptable 0000000000403DFB case 4
.text:0000000000403F62                                         ; jumptable 000000000040432D case 4
.text:0000000000403F62                                         ; jumptable 0000000000404393 case 4
.text:0000000000403F65                 retn    0
.text:0000000000403F68 ; ---------------------------------------------------------------------------
.text:0000000000403F68
.text:0000000000403F68 loc_403F68:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F68                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F68                 movdqa  xmmword ptr [rdi-0B5h], xmm0 ; jumptable 0000000000403DFB case 181
.text:0000000000403F68                                         ; jumptable 000000000040432D case 181
.text:0000000000403F68                                         ; jumptable 0000000000404393 case 181
.text:0000000000403F70
.text:0000000000403F70 loc_403F70:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F70                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F70                 movdqa  xmmword ptr [rdi-0A5h], xmm0 ; jumptable 0000000000403DFB case 165
.text:0000000000403F70                                         ; jumptable 000000000040432D case 165
.text:0000000000403F70                                         ; jumptable 0000000000404393 case 165
.text:0000000000403F78
.text:0000000000403F78 loc_403F78:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F78                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F78                 movdqa  xmmword ptr [rdi-95h], xmm0 ; jumptable 0000000000403DFB case 149
.text:0000000000403F78                                         ; jumptable 000000000040432D case 149
.text:0000000000403F78                                         ; jumptable 0000000000404393 case 149
.text:0000000000403F80
.text:0000000000403F80 loc_403F80:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F80                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F80                 movdqa  xmmword ptr [rdi-85h], xmm0 ; jumptable 0000000000403DFB case 133
.text:0000000000403F80                                         ; jumptable 000000000040432D case 133
.text:0000000000403F80                                         ; jumptable 0000000000404393 case 133
.text:0000000000403F88
.text:0000000000403F88 loc_403F88:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F88                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F88                 movdqa  xmmword ptr [rdi-75h], xmm0 ; jumptable 0000000000403DFB case 117
.text:0000000000403F88                                         ; jumptable 000000000040432D case 117
.text:0000000000403F88                                         ; jumptable 0000000000404393 case 117
.text:0000000000403F8D
.text:0000000000403F8D loc_403F8D:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F8D                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F8D                 movdqa  xmmword ptr [rdi-65h], xmm0 ; jumptable 0000000000403DFB case 101
.text:0000000000403F8D                                         ; jumptable 000000000040432D case 101
.text:0000000000403F8D                                         ; jumptable 0000000000404393 case 101
.text:0000000000403F92
.text:0000000000403F92 loc_403F92:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F92                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F92                 movdqa  xmmword ptr [rdi-55h], xmm0 ; jumptable 0000000000403DFB case 85
.text:0000000000403F92                                         ; jumptable 000000000040432D case 85
.text:0000000000403F92                                         ; jumptable 0000000000404393 case 85
.text:0000000000403F97
.text:0000000000403F97 loc_403F97:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F97                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F97                 movdqa  xmmword ptr [rdi-45h], xmm0 ; jumptable 0000000000403DFB case 69
.text:0000000000403F97                                         ; jumptable 000000000040432D case 69
.text:0000000000403F97                                         ; jumptable 0000000000404393 case 69
.text:0000000000403F9C
.text:0000000000403F9C loc_403F9C:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403F9C                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403F9C                 movdqa  xmmword ptr [rdi-35h], xmm0 ; jumptable 0000000000403DFB case 53
.text:0000000000403F9C                                         ; jumptable 000000000040432D case 53
.text:0000000000403F9C                                         ; jumptable 0000000000404393 case 53
.text:0000000000403FA1
.text:0000000000403FA1 loc_403FA1:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FA1                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FA1                 movdqa  xmmword ptr [rdi-25h], xmm0 ; jumptable 0000000000403DFB case 37
.text:0000000000403FA1                                         ; jumptable 000000000040432D case 37
.text:0000000000403FA1                                         ; jumptable 0000000000404393 case 37
.text:0000000000403FA6
.text:0000000000403FA6 loc_403FA6:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FA6                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FA6                 movdqa  xmmword ptr [rdi-15h], xmm0 ; jumptable 0000000000403DFB case 21
.text:0000000000403FA6                                         ; jumptable 000000000040432D case 21
.text:0000000000403FA6                                         ; jumptable 0000000000404393 case 21
.text:0000000000403FAB
.text:0000000000403FAB loc_403FAB:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FAB                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FAB                 mov     [rdi-5], edx    ; jumptable 0000000000403DFB case 5
.text:0000000000403FAB                                         ; jumptable 000000000040432D case 5
.text:0000000000403FAB                                         ; jumptable 0000000000404393 case 5
.text:0000000000403FAE                 mov     [rdi-1], dl
.text:0000000000403FB1                 retn    0
.text:0000000000403FB4 ; ---------------------------------------------------------------------------
.text:0000000000403FB4
.text:0000000000403FB4 loc_403FB4:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FB4                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FB4                 movdqa  xmmword ptr [rdi-0B6h], xmm0 ; jumptable 0000000000403DFB case 182
.text:0000000000403FB4                                         ; jumptable 000000000040432D case 182
.text:0000000000403FB4                                         ; jumptable 0000000000404393 case 182
.text:0000000000403FBC
.text:0000000000403FBC loc_403FBC:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FBC                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FBC                 movdqa  xmmword ptr [rdi-0A6h], xmm0 ; jumptable 0000000000403DFB case 166
.text:0000000000403FBC                                         ; jumptable 000000000040432D case 166
.text:0000000000403FBC                                         ; jumptable 0000000000404393 case 166
.text:0000000000403FC4
.text:0000000000403FC4 loc_403FC4:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FC4                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FC4                 movdqa  xmmword ptr [rdi-96h], xmm0 ; jumptable 0000000000403DFB case 150
.text:0000000000403FC4                                         ; jumptable 000000000040432D case 150
.text:0000000000403FC4                                         ; jumptable 0000000000404393 case 150
.text:0000000000403FCC
.text:0000000000403FCC loc_403FCC:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FCC                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FCC                 movdqa  xmmword ptr [rdi-86h], xmm0 ; jumptable 0000000000403DFB case 134
.text:0000000000403FCC                                         ; jumptable 000000000040432D case 134
.text:0000000000403FCC                                         ; jumptable 0000000000404393 case 134
.text:0000000000403FD4
.text:0000000000403FD4 loc_403FD4:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FD4                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FD4                 movdqa  xmmword ptr [rdi-76h], xmm0 ; jumptable 0000000000403DFB case 118
.text:0000000000403FD4                                         ; jumptable 000000000040432D case 118
.text:0000000000403FD4                                         ; jumptable 0000000000404393 case 118
.text:0000000000403FD9
.text:0000000000403FD9 loc_403FD9:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FD9                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FD9                 movdqa  xmmword ptr [rdi-66h], xmm0 ; jumptable 0000000000403DFB case 102
.text:0000000000403FD9                                         ; jumptable 000000000040432D case 102
.text:0000000000403FD9                                         ; jumptable 0000000000404393 case 102
.text:0000000000403FDE
.text:0000000000403FDE loc_403FDE:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FDE                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FDE                 movdqa  xmmword ptr [rdi-56h], xmm0 ; jumptable 0000000000403DFB case 86
.text:0000000000403FDE                                         ; jumptable 000000000040432D case 86
.text:0000000000403FDE                                         ; jumptable 0000000000404393 case 86
.text:0000000000403FE3
.text:0000000000403FE3 loc_403FE3:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FE3                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FE3                 movdqa  xmmword ptr [rdi-46h], xmm0 ; jumptable 0000000000403DFB case 70
.text:0000000000403FE3                                         ; jumptable 000000000040432D case 70
.text:0000000000403FE3                                         ; jumptable 0000000000404393 case 70
.text:0000000000403FE8
.text:0000000000403FE8 loc_403FE8:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FE8                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FE8                 movdqa  xmmword ptr [rdi-36h], xmm0 ; jumptable 0000000000403DFB case 54
.text:0000000000403FE8                                         ; jumptable 000000000040432D case 54
.text:0000000000403FE8                                         ; jumptable 0000000000404393 case 54
.text:0000000000403FED
.text:0000000000403FED loc_403FED:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FED                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FED                 movdqa  xmmword ptr [rdi-26h], xmm0 ; jumptable 0000000000403DFB case 38
.text:0000000000403FED                                         ; jumptable 000000000040432D case 38
.text:0000000000403FED                                         ; jumptable 0000000000404393 case 38
.text:0000000000403FF2
.text:0000000000403FF2 loc_403FF2:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FF2                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FF2                 movdqa  xmmword ptr [rdi-16h], xmm0 ; jumptable 0000000000403DFB case 22
.text:0000000000403FF2                                         ; jumptable 000000000040432D case 22
.text:0000000000403FF2                                         ; jumptable 0000000000404393 case 22
.text:0000000000403FF7
.text:0000000000403FF7 loc_403FF7:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000403FF7                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000403FF7                 mov     [rdi-6], edx    ; jumptable 0000000000403DFB case 6
.text:0000000000403FF7                                         ; jumptable 000000000040432D case 6
.text:0000000000403FF7                                         ; jumptable 0000000000404393 case 6
.text:0000000000403FFA                 mov     [rdi-2], dx
.text:0000000000403FFE                 retn    0
.text:0000000000404001 ; ---------------------------------------------------------------------------
.text:0000000000404001
.text:0000000000404001 loc_404001:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404001                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404001                 movdqa  xmmword ptr [rdi-0B7h], xmm0 ; jumptable 0000000000403DFB case 183
.text:0000000000404001                                         ; jumptable 000000000040432D case 183
.text:0000000000404001                                         ; jumptable 0000000000404393 case 183
.text:0000000000404009
.text:0000000000404009 loc_404009:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404009                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404009                 movdqa  xmmword ptr [rdi-0A7h], xmm0 ; jumptable 0000000000403DFB case 167
.text:0000000000404009                                         ; jumptable 000000000040432D case 167
.text:0000000000404009                                         ; jumptable 0000000000404393 case 167
.text:0000000000404011
.text:0000000000404011 loc_404011:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404011                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404011                 movdqa  xmmword ptr [rdi-97h], xmm0 ; jumptable 0000000000403DFB case 151
.text:0000000000404011                                         ; jumptable 000000000040432D case 151
.text:0000000000404011                                         ; jumptable 0000000000404393 case 151
.text:0000000000404019
.text:0000000000404019 loc_404019:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404019                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404019                 movdqa  xmmword ptr [rdi-87h], xmm0 ; jumptable 0000000000403DFB case 135
.text:0000000000404019                                         ; jumptable 000000000040432D case 135
.text:0000000000404019                                         ; jumptable 0000000000404393 case 135
.text:0000000000404021
.text:0000000000404021 loc_404021:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404021                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404021                 movdqa  xmmword ptr [rdi-77h], xmm0 ; jumptable 0000000000403DFB case 119
.text:0000000000404021                                         ; jumptable 000000000040432D case 119
.text:0000000000404021                                         ; jumptable 0000000000404393 case 119
.text:0000000000404026
.text:0000000000404026 loc_404026:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404026                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404026                 movdqa  xmmword ptr [rdi-67h], xmm0 ; jumptable 0000000000403DFB case 103
.text:0000000000404026                                         ; jumptable 000000000040432D case 103
.text:0000000000404026                                         ; jumptable 0000000000404393 case 103
.text:000000000040402B
.text:000000000040402B loc_40402B:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040402B                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040402B                 movdqa  xmmword ptr [rdi-57h], xmm0 ; jumptable 0000000000403DFB case 87
.text:000000000040402B                                         ; jumptable 000000000040432D case 87
.text:000000000040402B                                         ; jumptable 0000000000404393 case 87
.text:0000000000404030
.text:0000000000404030 loc_404030:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404030                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404030                 movdqa  xmmword ptr [rdi-47h], xmm0 ; jumptable 0000000000403DFB case 71
.text:0000000000404030                                         ; jumptable 000000000040432D case 71
.text:0000000000404030                                         ; jumptable 0000000000404393 case 71
.text:0000000000404035
.text:0000000000404035 loc_404035:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404035                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404035                 movdqa  xmmword ptr [rdi-37h], xmm0 ; jumptable 0000000000403DFB case 55
.text:0000000000404035                                         ; jumptable 000000000040432D case 55
.text:0000000000404035                                         ; jumptable 0000000000404393 case 55
.text:000000000040403A
.text:000000000040403A loc_40403A:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040403A                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040403A                 movdqa  xmmword ptr [rdi-27h], xmm0 ; jumptable 0000000000403DFB case 39
.text:000000000040403A                                         ; jumptable 000000000040432D case 39
.text:000000000040403A                                         ; jumptable 0000000000404393 case 39
.text:000000000040403F
.text:000000000040403F loc_40403F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040403F                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040403F                 movdqa  xmmword ptr [rdi-17h], xmm0 ; jumptable 0000000000403DFB case 23
.text:000000000040403F                                         ; jumptable 000000000040432D case 23
.text:000000000040403F                                         ; jumptable 0000000000404393 case 23
.text:0000000000404044
.text:0000000000404044 loc_404044:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404044                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404044                 mov     [rdi-7], edx    ; jumptable 0000000000403DFB case 7
.text:0000000000404044                                         ; jumptable 000000000040432D case 7
.text:0000000000404044                                         ; jumptable 0000000000404393 case 7
.text:0000000000404047                 mov     [rdi-3], dx
.text:000000000040404B                 mov     [rdi-1], dl
.text:000000000040404E                 retn    0
.text:0000000000404051 ; ---------------------------------------------------------------------------
.text:0000000000404051
.text:0000000000404051 loc_404051:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404051                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404051                 movdqa  xmmword ptr [rdi-0B8h], xmm0 ; jumptable 0000000000403DFB case 184
.text:0000000000404051                                         ; jumptable 000000000040432D case 184
.text:0000000000404051                                         ; jumptable 0000000000404393 case 184
.text:0000000000404059
.text:0000000000404059 loc_404059:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404059                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404059                 movdqa  xmmword ptr [rdi-0A8h], xmm0 ; jumptable 0000000000403DFB case 168
.text:0000000000404059                                         ; jumptable 000000000040432D case 168
.text:0000000000404059                                         ; jumptable 0000000000404393 case 168
.text:0000000000404061
.text:0000000000404061 loc_404061:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404061                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404061                 movdqa  xmmword ptr [rdi-98h], xmm0 ; jumptable 0000000000403DFB case 152
.text:0000000000404061                                         ; jumptable 000000000040432D case 152
.text:0000000000404061                                         ; jumptable 0000000000404393 case 152
.text:0000000000404069
.text:0000000000404069 loc_404069:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404069                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404069                 movdqa  xmmword ptr [rdi-88h], xmm0 ; jumptable 0000000000403DFB case 136
.text:0000000000404069                                         ; jumptable 000000000040432D case 136
.text:0000000000404069                                         ; jumptable 0000000000404393 case 136
.text:0000000000404071
.text:0000000000404071 loc_404071:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404071                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404071                 movdqa  xmmword ptr [rdi-78h], xmm0 ; jumptable 0000000000403DFB case 120
.text:0000000000404071                                         ; jumptable 000000000040432D case 120
.text:0000000000404071                                         ; jumptable 0000000000404393 case 120
.text:0000000000404076
.text:0000000000404076 loc_404076:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404076                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404076                 movdqa  xmmword ptr [rdi-68h], xmm0 ; jumptable 0000000000403DFB case 104
.text:0000000000404076                                         ; jumptable 000000000040432D case 104
.text:0000000000404076                                         ; jumptable 0000000000404393 case 104
.text:000000000040407B
.text:000000000040407B loc_40407B:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040407B                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040407B                 movdqa  xmmword ptr [rdi-58h], xmm0 ; jumptable 0000000000403DFB case 88
.text:000000000040407B                                         ; jumptable 000000000040432D case 88
.text:000000000040407B                                         ; jumptable 0000000000404393 case 88
.text:0000000000404080
.text:0000000000404080 loc_404080:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404080                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404080                 movdqa  xmmword ptr [rdi-48h], xmm0 ; jumptable 0000000000403DFB case 72
.text:0000000000404080                                         ; jumptable 000000000040432D case 72
.text:0000000000404080                                         ; jumptable 0000000000404393 case 72
.text:0000000000404085
.text:0000000000404085 loc_404085:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404085                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404085                 movdqa  xmmword ptr [rdi-38h], xmm0 ; jumptable 0000000000403DFB case 56
.text:0000000000404085                                         ; jumptable 000000000040432D case 56
.text:0000000000404085                                         ; jumptable 0000000000404393 case 56
.text:000000000040408A
.text:000000000040408A loc_40408A:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040408A                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040408A                 movdqa  xmmword ptr [rdi-28h], xmm0 ; jumptable 0000000000403DFB case 40
.text:000000000040408A                                         ; jumptable 000000000040432D case 40
.text:000000000040408A                                         ; jumptable 0000000000404393 case 40
.text:000000000040408F
.text:000000000040408F loc_40408F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040408F                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040408F                 movdqa  xmmword ptr [rdi-18h], xmm0 ; jumptable 0000000000403DFB case 24
.text:000000000040408F                                         ; jumptable 000000000040432D case 24
.text:000000000040408F                                         ; jumptable 0000000000404393 case 24
.text:0000000000404094
.text:0000000000404094 loc_404094:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404094                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404094                 mov     [rdi-8], rdx    ; jumptable 0000000000403DFB case 8
.text:0000000000404094                                         ; jumptable 000000000040432D case 8
.text:0000000000404094                                         ; jumptable 0000000000404393 case 8
.text:0000000000404098                 retn    0
.text:000000000040409B ; ---------------------------------------------------------------------------
.text:000000000040409B
.text:000000000040409B loc_40409B:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040409B                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040409B                 movdqa  xmmword ptr [rdi-0B9h], xmm0 ; jumptable 0000000000403DFB case 185
.text:000000000040409B                                         ; jumptable 000000000040432D case 185
.text:000000000040409B                                         ; jumptable 0000000000404393 case 185
.text:00000000004040A3
.text:00000000004040A3 loc_4040A3:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040A3                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040A3                 movdqa  xmmword ptr [rdi-0A9h], xmm0 ; jumptable 0000000000403DFB case 169
.text:00000000004040A3                                         ; jumptable 000000000040432D case 169
.text:00000000004040A3                                         ; jumptable 0000000000404393 case 169
.text:00000000004040AB
.text:00000000004040AB loc_4040AB:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040AB                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040AB                 movdqa  xmmword ptr [rdi-99h], xmm0 ; jumptable 0000000000403DFB case 153
.text:00000000004040AB                                         ; jumptable 000000000040432D case 153
.text:00000000004040AB                                         ; jumptable 0000000000404393 case 153
.text:00000000004040B3
.text:00000000004040B3 loc_4040B3:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040B3                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040B3                 movdqa  xmmword ptr [rdi-89h], xmm0 ; jumptable 0000000000403DFB case 137
.text:00000000004040B3                                         ; jumptable 000000000040432D case 137
.text:00000000004040B3                                         ; jumptable 0000000000404393 case 137
.text:00000000004040BB
.text:00000000004040BB loc_4040BB:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040BB                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040BB                 movdqa  xmmword ptr [rdi-79h], xmm0 ; jumptable 0000000000403DFB case 121
.text:00000000004040BB                                         ; jumptable 000000000040432D case 121
.text:00000000004040BB                                         ; jumptable 0000000000404393 case 121
.text:00000000004040C0
.text:00000000004040C0 loc_4040C0:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040C0                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040C0                 movdqa  xmmword ptr [rdi-69h], xmm0 ; jumptable 0000000000403DFB case 105
.text:00000000004040C0                                         ; jumptable 000000000040432D case 105
.text:00000000004040C0                                         ; jumptable 0000000000404393 case 105
.text:00000000004040C5
.text:00000000004040C5 loc_4040C5:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040C5                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040C5                 movdqa  xmmword ptr [rdi-59h], xmm0 ; jumptable 0000000000403DFB case 89
.text:00000000004040C5                                         ; jumptable 000000000040432D case 89
.text:00000000004040C5                                         ; jumptable 0000000000404393 case 89
.text:00000000004040CA
.text:00000000004040CA loc_4040CA:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040CA                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040CA                 movdqa  xmmword ptr [rdi-49h], xmm0 ; jumptable 0000000000403DFB case 73
.text:00000000004040CA                                         ; jumptable 000000000040432D case 73
.text:00000000004040CA                                         ; jumptable 0000000000404393 case 73
.text:00000000004040CF
.text:00000000004040CF loc_4040CF:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040CF                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040CF                 movdqa  xmmword ptr [rdi-39h], xmm0 ; jumptable 0000000000403DFB case 57
.text:00000000004040CF                                         ; jumptable 000000000040432D case 57
.text:00000000004040CF                                         ; jumptable 0000000000404393 case 57
.text:00000000004040D4
.text:00000000004040D4 loc_4040D4:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040D4                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040D4                 movdqa  xmmword ptr [rdi-29h], xmm0 ; jumptable 0000000000403DFB case 41
.text:00000000004040D4                                         ; jumptable 000000000040432D case 41
.text:00000000004040D4                                         ; jumptable 0000000000404393 case 41
.text:00000000004040D9
.text:00000000004040D9 loc_4040D9:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040D9                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040D9                 movdqa  xmmword ptr [rdi-19h], xmm0 ; jumptable 0000000000403DFB case 25
.text:00000000004040D9                                         ; jumptable 000000000040432D case 25
.text:00000000004040D9                                         ; jumptable 0000000000404393 case 25
.text:00000000004040DE
.text:00000000004040DE loc_4040DE:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040DE                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040DE                 mov     [rdi-9], rdx    ; jumptable 0000000000403DFB case 9
.text:00000000004040DE                                         ; jumptable 000000000040432D case 9
.text:00000000004040DE                                         ; jumptable 0000000000404393 case 9
.text:00000000004040E2                 mov     [rdi-1], dl
.text:00000000004040E5                 retn    0
.text:00000000004040E8 ; ---------------------------------------------------------------------------
.text:00000000004040E8
.text:00000000004040E8 loc_4040E8:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040E8                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040E8                 movdqa  xmmword ptr [rdi-0BAh], xmm0 ; jumptable 0000000000403DFB case 186
.text:00000000004040E8                                         ; jumptable 000000000040432D case 186
.text:00000000004040E8                                         ; jumptable 0000000000404393 case 186
.text:00000000004040F0
.text:00000000004040F0 loc_4040F0:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040F0                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040F0                 movdqa  xmmword ptr [rdi-0AAh], xmm0 ; jumptable 0000000000403DFB case 170
.text:00000000004040F0                                         ; jumptable 000000000040432D case 170
.text:00000000004040F0                                         ; jumptable 0000000000404393 case 170
.text:00000000004040F8
.text:00000000004040F8 loc_4040F8:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004040F8                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004040F8                 movdqa  xmmword ptr [rdi-9Ah], xmm0 ; jumptable 0000000000403DFB case 154
.text:00000000004040F8                                         ; jumptable 000000000040432D case 154
.text:00000000004040F8                                         ; jumptable 0000000000404393 case 154
.text:0000000000404100
.text:0000000000404100 loc_404100:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404100                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404100                 movdqa  xmmword ptr [rdi-8Ah], xmm0 ; jumptable 0000000000403DFB case 138
.text:0000000000404100                                         ; jumptable 000000000040432D case 138
.text:0000000000404100                                         ; jumptable 0000000000404393 case 138
.text:0000000000404108
.text:0000000000404108 loc_404108:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404108                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404108                 movdqa  xmmword ptr [rdi-7Ah], xmm0 ; jumptable 0000000000403DFB case 122
.text:0000000000404108                                         ; jumptable 000000000040432D case 122
.text:0000000000404108                                         ; jumptable 0000000000404393 case 122
.text:000000000040410D
.text:000000000040410D loc_40410D:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040410D                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040410D                 movdqa  xmmword ptr [rdi-6Ah], xmm0 ; jumptable 0000000000403DFB case 106
.text:000000000040410D                                         ; jumptable 000000000040432D case 106
.text:000000000040410D                                         ; jumptable 0000000000404393 case 106
.text:0000000000404112
.text:0000000000404112 loc_404112:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404112                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404112                 movdqa  xmmword ptr [rdi-5Ah], xmm0 ; jumptable 0000000000403DFB case 90
.text:0000000000404112                                         ; jumptable 000000000040432D case 90
.text:0000000000404112                                         ; jumptable 0000000000404393 case 90
.text:0000000000404117
.text:0000000000404117 loc_404117:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404117                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404117                 movdqa  xmmword ptr [rdi-4Ah], xmm0 ; jumptable 0000000000403DFB case 74
.text:0000000000404117                                         ; jumptable 000000000040432D case 74
.text:0000000000404117                                         ; jumptable 0000000000404393 case 74
.text:000000000040411C
.text:000000000040411C loc_40411C:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040411C                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040411C                 movdqa  xmmword ptr [rdi-3Ah], xmm0 ; jumptable 0000000000403DFB case 58
.text:000000000040411C                                         ; jumptable 000000000040432D case 58
.text:000000000040411C                                         ; jumptable 0000000000404393 case 58
.text:0000000000404121
.text:0000000000404121 loc_404121:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404121                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404121                 movdqa  xmmword ptr [rdi-2Ah], xmm0 ; jumptable 0000000000403DFB case 42
.text:0000000000404121                                         ; jumptable 000000000040432D case 42
.text:0000000000404121                                         ; jumptable 0000000000404393 case 42
.text:0000000000404126
.text:0000000000404126 loc_404126:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404126                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404126                 movdqa  xmmword ptr [rdi-1Ah], xmm0 ; jumptable 0000000000403DFB case 26
.text:0000000000404126                                         ; jumptable 000000000040432D case 26
.text:0000000000404126                                         ; jumptable 0000000000404393 case 26
.text:000000000040412B
.text:000000000040412B loc_40412B:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040412B                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040412B                 mov     [rdi-0Ah], rdx  ; jumptable 0000000000403DFB case 10
.text:000000000040412B                                         ; jumptable 000000000040432D case 10
.text:000000000040412B                                         ; jumptable 0000000000404393 case 10
.text:000000000040412F                 mov     [rdi-2], dx
.text:0000000000404133                 retn    0
.text:0000000000404136 ; ---------------------------------------------------------------------------
.text:0000000000404136
.text:0000000000404136 loc_404136:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404136                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404136                 movdqa  xmmword ptr [rdi-0BBh], xmm0 ; jumptable 0000000000403DFB case 187
.text:0000000000404136                                         ; jumptable 000000000040432D case 187
.text:0000000000404136                                         ; jumptable 0000000000404393 case 187
.text:000000000040413E
.text:000000000040413E loc_40413E:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040413E                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040413E                 movdqa  xmmword ptr [rdi-0ABh], xmm0 ; jumptable 0000000000403DFB case 171
.text:000000000040413E                                         ; jumptable 000000000040432D case 171
.text:000000000040413E                                         ; jumptable 0000000000404393 case 171
.text:0000000000404146
.text:0000000000404146 loc_404146:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404146                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404146                 movdqa  xmmword ptr [rdi-9Bh], xmm0 ; jumptable 0000000000403DFB case 155
.text:0000000000404146                                         ; jumptable 000000000040432D case 155
.text:0000000000404146                                         ; jumptable 0000000000404393 case 155
.text:000000000040414E
.text:000000000040414E loc_40414E:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040414E                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040414E                 movdqa  xmmword ptr [rdi-8Bh], xmm0 ; jumptable 0000000000403DFB case 139
.text:000000000040414E                                         ; jumptable 000000000040432D case 139
.text:000000000040414E                                         ; jumptable 0000000000404393 case 139
.text:0000000000404156
.text:0000000000404156 loc_404156:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404156                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404156                 movdqa  xmmword ptr [rdi-7Bh], xmm0 ; jumptable 0000000000403DFB case 123
.text:0000000000404156                                         ; jumptable 000000000040432D case 123
.text:0000000000404156                                         ; jumptable 0000000000404393 case 123
.text:000000000040415B
.text:000000000040415B loc_40415B:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040415B                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040415B                 movdqa  xmmword ptr [rdi-6Bh], xmm0 ; jumptable 0000000000403DFB case 107
.text:000000000040415B                                         ; jumptable 000000000040432D case 107
.text:000000000040415B                                         ; jumptable 0000000000404393 case 107
.text:0000000000404160
.text:0000000000404160 loc_404160:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404160                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404160                 movdqa  xmmword ptr [rdi-5Bh], xmm0 ; jumptable 0000000000403DFB case 91
.text:0000000000404160                                         ; jumptable 000000000040432D case 91
.text:0000000000404160                                         ; jumptable 0000000000404393 case 91
.text:0000000000404165
.text:0000000000404165 loc_404165:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404165                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404165                 movdqa  xmmword ptr [rdi-4Bh], xmm0 ; jumptable 0000000000403DFB case 75
.text:0000000000404165                                         ; jumptable 000000000040432D case 75
.text:0000000000404165                                         ; jumptable 0000000000404393 case 75
.text:000000000040416A
.text:000000000040416A loc_40416A:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040416A                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040416A                 movdqa  xmmword ptr [rdi-3Bh], xmm0 ; jumptable 0000000000403DFB case 59
.text:000000000040416A                                         ; jumptable 000000000040432D case 59
.text:000000000040416A                                         ; jumptable 0000000000404393 case 59
.text:000000000040416F
.text:000000000040416F loc_40416F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040416F                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040416F                 movdqa  xmmword ptr [rdi-2Bh], xmm0 ; jumptable 0000000000403DFB case 43
.text:000000000040416F                                         ; jumptable 000000000040432D case 43
.text:000000000040416F                                         ; jumptable 0000000000404393 case 43
.text:0000000000404174
.text:0000000000404174 loc_404174:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404174                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404174                 movdqa  xmmword ptr [rdi-1Bh], xmm0 ; jumptable 0000000000403DFB case 27
.text:0000000000404174                                         ; jumptable 000000000040432D case 27
.text:0000000000404174                                         ; jumptable 0000000000404393 case 27
.text:0000000000404179
.text:0000000000404179 loc_404179:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404179                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404179                 mov     [rdi-0Bh], rdx  ; jumptable 0000000000403DFB case 11
.text:0000000000404179                                         ; jumptable 000000000040432D case 11
.text:0000000000404179                                         ; jumptable 0000000000404393 case 11
.text:000000000040417D                 mov     [rdi-3], dx
.text:0000000000404181                 mov     [rdi-1], dl
.text:0000000000404184                 retn    0
.text:0000000000404187 ; ---------------------------------------------------------------------------
.text:0000000000404187
.text:0000000000404187 loc_404187:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404187                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404187                 movdqa  xmmword ptr [rdi-0BCh], xmm0 ; jumptable 0000000000403DFB case 188
.text:0000000000404187                                         ; jumptable 000000000040432D case 188
.text:0000000000404187                                         ; jumptable 0000000000404393 case 188
.text:000000000040418F
.text:000000000040418F loc_40418F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040418F                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040418F                 movdqa  xmmword ptr [rdi-0ACh], xmm0 ; jumptable 0000000000403DFB case 172
.text:000000000040418F                                         ; jumptable 000000000040432D case 172
.text:000000000040418F                                         ; jumptable 0000000000404393 case 172
.text:0000000000404197
.text:0000000000404197 loc_404197:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404197                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404197                 movdqa  xmmword ptr [rdi-9Ch], xmm0 ; jumptable 0000000000403DFB case 156
.text:0000000000404197                                         ; jumptable 000000000040432D case 156
.text:0000000000404197                                         ; jumptable 0000000000404393 case 156
.text:000000000040419F
.text:000000000040419F loc_40419F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040419F                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040419F                 movdqa  xmmword ptr [rdi-8Ch], xmm0 ; jumptable 0000000000403DFB case 140
.text:000000000040419F                                         ; jumptable 000000000040432D case 140
.text:000000000040419F                                         ; jumptable 0000000000404393 case 140
.text:00000000004041A7
.text:00000000004041A7 loc_4041A7:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041A7                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041A7                 movdqa  xmmword ptr [rdi-7Ch], xmm0 ; jumptable 0000000000403DFB case 124
.text:00000000004041A7                                         ; jumptable 000000000040432D case 124
.text:00000000004041A7                                         ; jumptable 0000000000404393 case 124
.text:00000000004041AC
.text:00000000004041AC loc_4041AC:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041AC                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041AC                 movdqa  xmmword ptr [rdi-6Ch], xmm0 ; jumptable 0000000000403DFB case 108
.text:00000000004041AC                                         ; jumptable 000000000040432D case 108
.text:00000000004041AC                                         ; jumptable 0000000000404393 case 108
.text:00000000004041B1
.text:00000000004041B1 loc_4041B1:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041B1                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041B1                 movdqa  xmmword ptr [rdi-5Ch], xmm0 ; jumptable 0000000000403DFB case 92
.text:00000000004041B1                                         ; jumptable 000000000040432D case 92
.text:00000000004041B1                                         ; jumptable 0000000000404393 case 92
.text:00000000004041B6
.text:00000000004041B6 loc_4041B6:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041B6                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041B6                 movdqa  xmmword ptr [rdi-4Ch], xmm0 ; jumptable 0000000000403DFB case 76
.text:00000000004041B6                                         ; jumptable 000000000040432D case 76
.text:00000000004041B6                                         ; jumptable 0000000000404393 case 76
.text:00000000004041BB
.text:00000000004041BB loc_4041BB:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041BB                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041BB                 movdqa  xmmword ptr [rdi-3Ch], xmm0 ; jumptable 0000000000403DFB case 60
.text:00000000004041BB                                         ; jumptable 000000000040432D case 60
.text:00000000004041BB                                         ; jumptable 0000000000404393 case 60
.text:00000000004041C0
.text:00000000004041C0 loc_4041C0:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041C0                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041C0                 movdqa  xmmword ptr [rdi-2Ch], xmm0 ; jumptable 0000000000403DFB case 44
.text:00000000004041C0                                         ; jumptable 000000000040432D case 44
.text:00000000004041C0                                         ; jumptable 0000000000404393 case 44
.text:00000000004041C5
.text:00000000004041C5 loc_4041C5:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041C5                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041C5                 movdqa  xmmword ptr [rdi-1Ch], xmm0 ; jumptable 0000000000403DFB case 28
.text:00000000004041C5                                         ; jumptable 000000000040432D case 28
.text:00000000004041C5                                         ; jumptable 0000000000404393 case 28
.text:00000000004041CA
.text:00000000004041CA loc_4041CA:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041CA                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041CA                 mov     [rdi-0Ch], rdx  ; jumptable 0000000000403DFB case 12
.text:00000000004041CA                                         ; jumptable 000000000040432D case 12
.text:00000000004041CA                                         ; jumptable 0000000000404393 case 12
.text:00000000004041CE                 mov     [rdi-4], edx
.text:00000000004041D1                 retn    0
.text:00000000004041D4 ; ---------------------------------------------------------------------------
.text:00000000004041D4
.text:00000000004041D4 loc_4041D4:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041D4                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041D4                 movdqa  xmmword ptr [rdi-0BDh], xmm0 ; jumptable 0000000000403DFB case 189
.text:00000000004041D4                                         ; jumptable 000000000040432D case 189
.text:00000000004041D4                                         ; jumptable 0000000000404393 case 189
.text:00000000004041DC
.text:00000000004041DC loc_4041DC:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041DC                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041DC                 movdqa  xmmword ptr [rdi-0ADh], xmm0 ; jumptable 0000000000403DFB case 173
.text:00000000004041DC                                         ; jumptable 000000000040432D case 173
.text:00000000004041DC                                         ; jumptable 0000000000404393 case 173
.text:00000000004041E4
.text:00000000004041E4 loc_4041E4:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041E4                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041E4                 movdqa  xmmword ptr [rdi-9Dh], xmm0 ; jumptable 0000000000403DFB case 157
.text:00000000004041E4                                         ; jumptable 000000000040432D case 157
.text:00000000004041E4                                         ; jumptable 0000000000404393 case 157
.text:00000000004041EC
.text:00000000004041EC loc_4041EC:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041EC                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041EC                 movdqa  xmmword ptr [rdi-8Dh], xmm0 ; jumptable 0000000000403DFB case 141
.text:00000000004041EC                                         ; jumptable 000000000040432D case 141
.text:00000000004041EC                                         ; jumptable 0000000000404393 case 141
.text:00000000004041F4
.text:00000000004041F4 loc_4041F4:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041F4                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041F4                 movdqa  xmmword ptr [rdi-7Dh], xmm0 ; jumptable 0000000000403DFB case 125
.text:00000000004041F4                                         ; jumptable 000000000040432D case 125
.text:00000000004041F4                                         ; jumptable 0000000000404393 case 125
.text:00000000004041F9
.text:00000000004041F9 loc_4041F9:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041F9                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041F9                 movdqa  xmmword ptr [rdi-6Dh], xmm0 ; jumptable 0000000000403DFB case 109
.text:00000000004041F9                                         ; jumptable 000000000040432D case 109
.text:00000000004041F9                                         ; jumptable 0000000000404393 case 109
.text:00000000004041FE
.text:00000000004041FE loc_4041FE:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004041FE                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004041FE                 movdqa  xmmword ptr [rdi-5Dh], xmm0 ; jumptable 0000000000403DFB case 93
.text:00000000004041FE                                         ; jumptable 000000000040432D case 93
.text:00000000004041FE                                         ; jumptable 0000000000404393 case 93
.text:0000000000404203
.text:0000000000404203 loc_404203:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404203                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404203                 movdqa  xmmword ptr [rdi-4Dh], xmm0 ; jumptable 0000000000403DFB case 77
.text:0000000000404203                                         ; jumptable 000000000040432D case 77
.text:0000000000404203                                         ; jumptable 0000000000404393 case 77
.text:0000000000404208
.text:0000000000404208 loc_404208:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404208                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404208                 movdqa  xmmword ptr [rdi-3Dh], xmm0 ; jumptable 0000000000403DFB case 61
.text:0000000000404208                                         ; jumptable 000000000040432D case 61
.text:0000000000404208                                         ; jumptable 0000000000404393 case 61
.text:000000000040420D
.text:000000000040420D loc_40420D:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040420D                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040420D                 movdqa  xmmword ptr [rdi-2Dh], xmm0 ; jumptable 0000000000403DFB case 45
.text:000000000040420D                                         ; jumptable 000000000040432D case 45
.text:000000000040420D                                         ; jumptable 0000000000404393 case 45
.text:0000000000404212
.text:0000000000404212 loc_404212:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404212                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404212                 movdqa  xmmword ptr [rdi-1Dh], xmm0 ; jumptable 0000000000403DFB case 29
.text:0000000000404212                                         ; jumptable 000000000040432D case 29
.text:0000000000404212                                         ; jumptable 0000000000404393 case 29
.text:0000000000404217
.text:0000000000404217 loc_404217:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404217                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404217                 mov     [rdi-0Dh], rdx  ; jumptable 0000000000403DFB case 13
.text:0000000000404217                                         ; jumptable 000000000040432D case 13
.text:0000000000404217                                         ; jumptable 0000000000404393 case 13
.text:000000000040421B                 mov     [rdi-5], edx
.text:000000000040421E                 mov     [rdi-1], dl
.text:0000000000404221                 retn    0
.text:0000000000404224 ; ---------------------------------------------------------------------------
.text:0000000000404224
.text:0000000000404224 loc_404224:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404224                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404224                 movdqa  xmmword ptr [rdi-0BEh], xmm0 ; jumptable 0000000000403DFB case 190
.text:0000000000404224                                         ; jumptable 000000000040432D case 190
.text:0000000000404224                                         ; jumptable 0000000000404393 case 190
.text:000000000040422C
.text:000000000040422C loc_40422C:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040422C                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040422C                 movdqa  xmmword ptr [rdi-0AEh], xmm0 ; jumptable 0000000000403DFB case 174
.text:000000000040422C                                         ; jumptable 000000000040432D case 174
.text:000000000040422C                                         ; jumptable 0000000000404393 case 174
.text:0000000000404234
.text:0000000000404234 loc_404234:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404234                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404234                 movdqa  xmmword ptr [rdi-9Eh], xmm0 ; jumptable 0000000000403DFB case 158
.text:0000000000404234                                         ; jumptable 000000000040432D case 158
.text:0000000000404234                                         ; jumptable 0000000000404393 case 158
.text:000000000040423C
.text:000000000040423C loc_40423C:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040423C                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040423C                 movdqa  xmmword ptr [rdi-8Eh], xmm0 ; jumptable 0000000000403DFB case 142
.text:000000000040423C                                         ; jumptable 000000000040432D case 142
.text:000000000040423C                                         ; jumptable 0000000000404393 case 142
.text:0000000000404244
.text:0000000000404244 loc_404244:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404244                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404244                 movdqa  xmmword ptr [rdi-7Eh], xmm0 ; jumptable 0000000000403DFB case 126
.text:0000000000404244                                         ; jumptable 000000000040432D case 126
.text:0000000000404244                                         ; jumptable 0000000000404393 case 126
.text:0000000000404249
.text:0000000000404249 loc_404249:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404249                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404249                 movdqa  xmmword ptr [rdi-6Eh], xmm0 ; jumptable 0000000000403DFB case 110
.text:0000000000404249                                         ; jumptable 000000000040432D case 110
.text:0000000000404249                                         ; jumptable 0000000000404393 case 110
.text:000000000040424E
.text:000000000040424E loc_40424E:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040424E                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040424E                 movdqa  xmmword ptr [rdi-5Eh], xmm0 ; jumptable 0000000000403DFB case 94
.text:000000000040424E                                         ; jumptable 000000000040432D case 94
.text:000000000040424E                                         ; jumptable 0000000000404393 case 94
.text:0000000000404253
.text:0000000000404253 loc_404253:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404253                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404253                 movdqa  xmmword ptr [rdi-4Eh], xmm0 ; jumptable 0000000000403DFB case 78
.text:0000000000404253                                         ; jumptable 000000000040432D case 78
.text:0000000000404253                                         ; jumptable 0000000000404393 case 78
.text:0000000000404258
.text:0000000000404258 loc_404258:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404258                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404258                 movdqa  xmmword ptr [rdi-3Eh], xmm0 ; jumptable 0000000000403DFB case 62
.text:0000000000404258                                         ; jumptable 000000000040432D case 62
.text:0000000000404258                                         ; jumptable 0000000000404393 case 62
.text:000000000040425D
.text:000000000040425D loc_40425D:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040425D                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040425D                 movdqa  xmmword ptr [rdi-2Eh], xmm0 ; jumptable 0000000000403DFB case 46
.text:000000000040425D                                         ; jumptable 000000000040432D case 46
.text:000000000040425D                                         ; jumptable 0000000000404393 case 46
.text:0000000000404262
.text:0000000000404262 loc_404262:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404262                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404262                 movdqa  xmmword ptr [rdi-1Eh], xmm0 ; jumptable 0000000000403DFB case 30
.text:0000000000404262                                         ; jumptable 000000000040432D case 30
.text:0000000000404262                                         ; jumptable 0000000000404393 case 30
.text:0000000000404267
.text:0000000000404267 loc_404267:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404267                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404267                 mov     [rdi-0Eh], rdx  ; jumptable 0000000000403DFB case 14
.text:0000000000404267                                         ; jumptable 000000000040432D case 14
.text:0000000000404267                                         ; jumptable 0000000000404393 case 14
.text:000000000040426B                 mov     [rdi-6], edx
.text:000000000040426E                 mov     [rdi-2], dx
.text:0000000000404272                 retn    0
.text:0000000000404275 ; ---------------------------------------------------------------------------
.text:0000000000404275
.text:0000000000404275 loc_404275:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404275                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404275                 movdqa  xmmword ptr [rdi-0BFh], xmm0 ; jumptable 0000000000403DFB case 191
.text:0000000000404275                                         ; jumptable 000000000040432D case 191
.text:0000000000404275                                         ; jumptable 0000000000404393 case 191
.text:000000000040427D
.text:000000000040427D loc_40427D:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040427D                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040427D                 movdqa  xmmword ptr [rdi-0AFh], xmm0 ; jumptable 0000000000403DFB case 175
.text:000000000040427D                                         ; jumptable 000000000040432D case 175
.text:000000000040427D                                         ; jumptable 0000000000404393 case 175
.text:0000000000404285
.text:0000000000404285 loc_404285:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404285                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404285                 movdqa  xmmword ptr [rdi-9Fh], xmm0 ; jumptable 0000000000403DFB case 159
.text:0000000000404285                                         ; jumptable 000000000040432D case 159
.text:0000000000404285                                         ; jumptable 0000000000404393 case 159
.text:000000000040428D
.text:000000000040428D loc_40428D:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040428D                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040428D                 movdqa  xmmword ptr [rdi-8Fh], xmm0 ; jumptable 0000000000403DFB case 143
.text:000000000040428D                                         ; jumptable 000000000040432D case 143
.text:000000000040428D                                         ; jumptable 0000000000404393 case 143
.text:0000000000404295
.text:0000000000404295 loc_404295:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:0000000000404295                                         ; __intel_new_memset+AAD↓j ...
.text:0000000000404295                 movdqa  xmmword ptr [rdi-7Fh], xmm0 ; jumptable 0000000000403DFB case 127
.text:0000000000404295                                         ; jumptable 000000000040432D case 127
.text:0000000000404295                                         ; jumptable 0000000000404393 case 127
.text:000000000040429A
.text:000000000040429A loc_40429A:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040429A                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040429A                 movdqa  xmmword ptr [rdi-6Fh], xmm0 ; jumptable 0000000000403DFB case 111
.text:000000000040429A                                         ; jumptable 000000000040432D case 111
.text:000000000040429A                                         ; jumptable 0000000000404393 case 111
.text:000000000040429F
.text:000000000040429F loc_40429F:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:000000000040429F                                         ; __intel_new_memset+AAD↓j ...
.text:000000000040429F                 movdqa  xmmword ptr [rdi-5Fh], xmm0 ; jumptable 0000000000403DFB case 95
.text:000000000040429F                                         ; jumptable 000000000040432D case 95
.text:000000000040429F                                         ; jumptable 0000000000404393 case 95
.text:00000000004042A4
.text:00000000004042A4 loc_4042A4:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004042A4                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004042A4                 movdqa  xmmword ptr [rdi-4Fh], xmm0 ; jumptable 0000000000403DFB case 79
.text:00000000004042A4                                         ; jumptable 000000000040432D case 79
.text:00000000004042A4                                         ; jumptable 0000000000404393 case 79
.text:00000000004042A9
.text:00000000004042A9 loc_4042A9:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004042A9                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004042A9                 movdqa  xmmword ptr [rdi-3Fh], xmm0 ; jumptable 0000000000403DFB case 63
.text:00000000004042A9                                         ; jumptable 000000000040432D case 63
.text:00000000004042A9                                         ; jumptable 0000000000404393 case 63
.text:00000000004042AE
.text:00000000004042AE loc_4042AE:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004042AE                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004042AE                 movdqa  xmmword ptr [rdi-2Fh], xmm0 ; jumptable 0000000000403DFB case 47
.text:00000000004042AE                                         ; jumptable 000000000040432D case 47
.text:00000000004042AE                                         ; jumptable 0000000000404393 case 47
.text:00000000004042B3
.text:00000000004042B3 loc_4042B3:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004042B3                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004042B3                 movdqa  xmmword ptr [rdi-1Fh], xmm0 ; jumptable 0000000000403DFB case 31
.text:00000000004042B3                                         ; jumptable 000000000040432D case 31
.text:00000000004042B3                                         ; jumptable 0000000000404393 case 31
.text:00000000004042B8
.text:00000000004042B8 loc_4042B8:                             ; CODE XREF: __intel_new_memset+57B↑j
.text:00000000004042B8                                         ; __intel_new_memset+AAD↓j ...
.text:00000000004042B8                 mov     [rdi-0Fh], rdx  ; jumptable 0000000000403DFB case 15
.text:00000000004042B8                                         ; jumptable 000000000040432D case 15
.text:00000000004042B8                                         ; jumptable 0000000000404393 case 15
.text:00000000004042BC                 mov     [rdi-7], edx
.text:00000000004042BF                 mov     [rdi-3], dx
.text:00000000004042C3                 mov     [rdi-1], dl
.text:00000000004042C6                 retn    0
.text:00000000004042C9 ; ---------------------------------------------------------------------------
.text:00000000004042C9
.text:00000000004042C9 loc_4042C9:                             ; CODE XREF: __intel_new_memset+56A↑j
.text:00000000004042C9                 mov     r9d, cs:__libirc_largest_cache_size
.text:00000000004042D0                 cmp     r8, r9
.text:00000000004042D3                 jg      short loc_404330
.text:00000000004042D5                 jmp     short loc_4042E0
.text:00000000004042D5 ; ---------------------------------------------------------------------------
.text:00000000004042D7                 align 20h
.text:00000000004042E0
.text:00000000004042E0 loc_4042E0:                             ; CODE XREF: __intel_new_memset+A55↑j
.text:00000000004042E0                                         ; __intel_new_memset+A99↓j ...
.text:00000000004042E0                 lea     r8, [r8-80h]
.text:00000000004042E4                 movdqa  xmmword ptr [rdi], xmm0
.text:00000000004042E8                 movdqa  xmmword ptr [rdi+10h], xmm0
.text:00000000004042ED                 movdqa  xmmword ptr [rdi+20h], xmm0
.text:00000000004042F2                 movdqa  xmmword ptr [rdi+30h], xmm0
.text:00000000004042F7                 cmp     r8, 80h
.text:00000000004042FE                 movdqa  xmmword ptr [rdi+40h], xmm0
.text:0000000000404303                 movdqa  xmmword ptr [rdi+50h], xmm0
.text:0000000000404308                 movdqa  xmmword ptr [rdi+60h], xmm0
.text:000000000040430D                 movdqa  xmmword ptr [rdi+70h], xmm0
.text:0000000000404312                 lea     rdi, [rdi+80h]
.text:0000000000404319                 jge     short loc_4042E0
.text:000000000040431B                 lea     r11, jpt_403DFB
.text:0000000000404322                 add     rdi, r8
.text:0000000000404325                 mov     rcx, ds:(jpt_403DFB - 404460h)[r11+r8*8] ; switch 192 cases
.text:0000000000404329                 lea     r11, [rcx+r11]
.text:000000000040432D                 jmp     r11             ; switch jump
.text:0000000000404330 ; ---------------------------------------------------------------------------
.text:0000000000404330
.text:0000000000404330 loc_404330:                             ; CODE XREF: __intel_new_memset+A53↑j
.text:0000000000404330                 cmp     r9, 0
.text:0000000000404334                 jz      short loc_4042E0
.text:0000000000404336                 jmp     short loc_404340
.text:0000000000404336 ; ---------------------------------------------------------------------------
.text:0000000000404338                 align 20h
.text:0000000000404340
.text:0000000000404340 loc_404340:                             ; CODE XREF: __intel_new_memset+AB6↑j
.text:0000000000404340                                         ; __intel_new_memset+AFC↓j
.text:0000000000404340                 sub     r8, 80h
.text:0000000000404347                 movntdq xmmword ptr [rdi], xmm0
.text:000000000040434B                 movntdq xmmword ptr [rdi+10h], xmm0
.text:0000000000404350                 movntdq xmmword ptr [rdi+20h], xmm0
.text:0000000000404355                 movntdq xmmword ptr [rdi+30h], xmm0
.text:000000000040435A                 movntdq xmmword ptr [rdi+40h], xmm0
.text:000000000040435F                 movntdq xmmword ptr [rdi+50h], xmm0
.text:0000000000404364                 movntdq xmmword ptr [rdi+60h], xmm0
.text:0000000000404369                 movntdq xmmword ptr [rdi+70h], xmm0
.text:000000000040436E                 add     rdi, 80h
.text:0000000000404375                 cmp     r8, 80h
.text:000000000040437C                 jge     short loc_404340
.text:000000000040437E                 sfence
.text:0000000000404381                 lea     r11, jpt_403DFB
.text:0000000000404388                 add     rdi, r8
.text:000000000040438B                 mov     rcx, ds:(jpt_403DFB - 404460h)[r11+r8*8] ; switch 192 cases
.text:000000000040438F                 lea     r11, [rcx+r11]
.text:0000000000404393                 jmp     r11             ; switch jump
.text:0000000000404393 ; ---------------------------------------------------------------------------
.text:0000000000404396                 align 20h
.text:00000000004043A0
.text:00000000004043A0 loc_4043A0:                             ; CODE XREF: __intel_new_memset+437↑j
.text:00000000004043A0                 mov     r9d, cs:__libirc_largest_cache_size
.text:00000000004043A7                 cmp     r8, r9
.text:00000000004043AA                 jg      short loc_404400
.text:00000000004043AC                 jmp     short loc_4043B0
.text:00000000004043AC ; ---------------------------------------------------------------------------
.text:00000000004043AE                 align 10h
.text:00000000004043B0
.text:00000000004043B0 loc_4043B0:                             ; CODE XREF: __intel_new_memset+B2C↑j
.text:00000000004043B0                                         ; __intel_new_memset+B5B↓j ...
.text:00000000004043B0                 mov     [rdi], rdx
.text:00000000004043B3                 mov     [rdi+8], rdx
.text:00000000004043B7                 lea     r8, [r8-40h]
.text:00000000004043BB                 mov     [rdi+10h], rdx
.text:00000000004043BF                 mov     [rdi+18h], rdx
.text:00000000004043C3                 cmp     r8, 40h ; '@'
.text:00000000004043C7                 mov     [rdi+20h], rdx
.text:00000000004043CB                 mov     [rdi+28h], rdx
.text:00000000004043CF                 mov     [rdi+30h], rdx
.text:00000000004043D3                 mov     [rdi+38h], rdx
.text:00000000004043D7                 lea     rdi, [rdi+40h]
.text:00000000004043DB                 jg      short loc_4043B0
.text:00000000004043DD                 lea     r11, jpt_4038BE
.text:00000000004043E4                 lea     rdi, [rdi+r8]
.text:00000000004043E8                 mov     rcx, ds:(jpt_4038BE - 4038D0h)[r11+r8*8] ; switch 80 cases
.text:00000000004043EC                 lea     r11, [rcx+r11]
.text:00000000004043F0                 jmp     r11             ; switch jump
.text:00000000004043F0 ; ---------------------------------------------------------------------------
.text:00000000004043F3                 align 20h
.text:0000000000404400
.text:0000000000404400 loc_404400:                             ; CODE XREF: __intel_new_memset+B2A↑j
.text:0000000000404400                 cmp     r9, 0
.text:0000000000404404                 jz      short loc_4043B0
.text:0000000000404406                 jmp     short loc_404410
.text:0000000000404406 ; ---------------------------------------------------------------------------
.text:0000000000404408                 align 10h
.text:0000000000404410
.text:0000000000404410 loc_404410:                             ; CODE XREF: __intel_new_memset+B86↑j
.text:0000000000404410                                         ; __intel_new_memset+BC3↓j
.text:0000000000404410                 movnti  qword ptr [rdi], rdx
.text:0000000000404414                 movnti  qword ptr [rdi+8], rdx
.text:0000000000404419                 lea     r8, [r8-40h]
.text:000000000040441D                 movnti  qword ptr [rdi+10h], rdx
.text:0000000000404422                 movnti  qword ptr [rdi+18h], rdx
.text:0000000000404427                 movnti  qword ptr [rdi+20h], rdx
.text:000000000040442C                 cmp     r8, 40h ; '@'
.text:0000000000404430                 movnti  qword ptr [rdi+28h], rdx
.text:0000000000404435                 movnti  qword ptr [rdi+30h], rdx
.text:000000000040443A                 movnti  qword ptr [rdi+38h], rdx
.text:000000000040443F                 lea     rdi, [rdi+40h]
.text:0000000000404443                 jge     short loc_404410
.text:0000000000404445                 lea     r11, jpt_4038BE
.text:000000000040444C                 lea     rdi, [rdi+r8]
.text:0000000000404450                 mov     rcx, ds:(jpt_4038BE - 4038D0h)[r11+r8*8] ; switch 80 cases
.text:0000000000404454                 lea     r11, [rcx+r11]
.text:0000000000404458                 jmp     r11             ; switch jump
.text:0000000000404458 ; } // starts at 403880
.text:0000000000404458 __intel_new_memset endp
.text:0000000000404458
.text:0000000000404458 ; ---------------------------------------------------------------------------
.text:000000000040445B                 align 20h
.text:0000000000404460 jpt_403DFB      dq offset locret_403E40 - 404460h, offset loc_403E84 - 404460h
.text:0000000000404460                                         ; DATA XREF: __intel_new_memset:loc_403DDC↑o
.text:0000000000404460                                         ; __intel_new_memset+573↑r ...
.text:0000000000404460                 dq offset loc_403ECB - 404460h, offset loc_403F15 - 404460h ; jump table for switch statement
.text:0000000000404460                 dq offset loc_403F62 - 404460h, offset loc_403FAB - 404460h
.text:0000000000404460                 dq offset loc_403FF7 - 404460h, offset loc_404044 - 404460h
.text:0000000000404460                 dq offset loc_404094 - 404460h, offset loc_4040DE - 404460h
.text:0000000000404460                 dq offset loc_40412B - 404460h, offset loc_404179 - 404460h
.text:0000000000404460                 dq offset loc_4041CA - 404460h, offset loc_404217 - 404460h
.text:0000000000404460                 dq offset loc_404267 - 404460h, offset loc_4042B8 - 404460h
.text:0000000000404460                 dq offset loc_403E3B - 404460h, offset loc_403E7F - 404460h
.text:0000000000404460                 dq offset loc_403EC6 - 404460h, offset loc_403F10 - 404460h
.text:0000000000404460                 dq offset loc_403F5D - 404460h, offset loc_403FA6 - 404460h
.text:0000000000404460                 dq offset loc_403FF2 - 404460h, offset loc_40403F - 404460h
.text:0000000000404460                 dq offset loc_40408F - 404460h, offset loc_4040D9 - 404460h
.text:0000000000404460                 dq offset loc_404126 - 404460h, offset loc_404174 - 404460h
.text:0000000000404460                 dq offset loc_4041C5 - 404460h, offset loc_404212 - 404460h
.text:0000000000404460                 dq offset loc_404262 - 404460h, offset loc_4042B3 - 404460h
.text:0000000000404460                 dq offset loc_403E36 - 404460h, offset loc_403E7A - 404460h
.text:0000000000404460                 dq offset loc_403EC1 - 404460h, offset loc_403F0B - 404460h
.text:0000000000404460                 dq offset loc_403F58 - 404460h, offset loc_403FA1 - 404460h
.text:0000000000404460                 dq offset loc_403FED - 404460h, offset loc_40403A - 404460h
.text:0000000000404460                 dq offset loc_40408A - 404460h, offset loc_4040D4 - 404460h
.text:0000000000404460                 dq offset loc_404121 - 404460h, offset loc_40416F - 404460h
.text:0000000000404460                 dq offset loc_4041C0 - 404460h, offset loc_40420D - 404460h
.text:0000000000404460                 dq offset loc_40425D - 404460h, offset loc_4042AE - 404460h
.text:0000000000404460                 dq offset loc_403E31 - 404460h, offset loc_403E75 - 404460h
.text:0000000000404460                 dq offset loc_403EBC - 404460h, offset loc_403F06 - 404460h
.text:0000000000404460                 dq offset loc_403F53 - 404460h, offset loc_403F9C - 404460h
.text:0000000000404460                 dq offset loc_403FE8 - 404460h, offset loc_404035 - 404460h
.text:0000000000404460                 dq offset loc_404085 - 404460h, offset loc_4040CF - 404460h
.text:0000000000404460                 dq offset loc_40411C - 404460h, offset loc_40416A - 404460h
.text:0000000000404460                 dq offset loc_4041BB - 404460h, offset loc_404208 - 404460h
.text:0000000000404460                 dq offset loc_404258 - 404460h, offset loc_4042A9 - 404460h
.text:0000000000404460                 dq offset loc_403E2C - 404460h, offset loc_403E70 - 404460h
.text:0000000000404460                 dq offset loc_403EB7 - 404460h, offset loc_403F01 - 404460h
.text:0000000000404460                 dq offset loc_403F4E - 404460h, offset loc_403F97 - 404460h
.text:0000000000404460                 dq offset loc_403FE3 - 404460h, offset loc_404030 - 404460h
.text:0000000000404460                 dq offset loc_404080 - 404460h, offset loc_4040CA - 404460h
.text:0000000000404460                 dq offset loc_404117 - 404460h, offset loc_404165 - 404460h
.text:0000000000404460                 dq offset loc_4041B6 - 404460h, offset loc_404203 - 404460h
.text:0000000000404460                 dq offset loc_404253 - 404460h, offset loc_4042A4 - 404460h
.text:0000000000404460                 dq offset loc_403E27 - 404460h, offset loc_403E6B - 404460h
.text:0000000000404460                 dq offset loc_403EB2 - 404460h, offset loc_403EFC - 404460h
.text:0000000000404460                 dq offset loc_403F49 - 404460h, offset loc_403F92 - 404460h
.text:0000000000404460                 dq offset loc_403FDE - 404460h, offset loc_40402B - 404460h
.text:0000000000404460                 dq offset loc_40407B - 404460h, offset loc_4040C5 - 404460h
.text:0000000000404460                 dq offset loc_404112 - 404460h, offset loc_404160 - 404460h
.text:0000000000404460                 dq offset loc_4041B1 - 404460h, offset loc_4041FE - 404460h
.text:0000000000404460                 dq offset loc_40424E - 404460h, offset loc_40429F - 404460h
.text:0000000000404460                 dq offset loc_403E22 - 404460h, offset loc_403E66 - 404460h
.text:0000000000404460                 dq offset loc_403EAD - 404460h, offset loc_403EF7 - 404460h
.text:0000000000404460                 dq offset loc_403F44 - 404460h, offset loc_403F8D - 404460h
.text:0000000000404460                 dq offset loc_403FD9 - 404460h, offset loc_404026 - 404460h
.text:0000000000404460                 dq offset loc_404076 - 404460h, offset loc_4040C0 - 404460h
.text:0000000000404460                 dq offset loc_40410D - 404460h, offset loc_40415B - 404460h
.text:0000000000404460                 dq offset loc_4041AC - 404460h, offset loc_4041F9 - 404460h
.text:0000000000404460                 dq offset loc_404249 - 404460h, offset loc_40429A - 404460h
.text:0000000000404460                 dq offset loc_403E1D - 404460h, offset loc_403E61 - 404460h
.text:0000000000404460                 dq offset loc_403EA8 - 404460h, offset loc_403EF2 - 404460h
.text:0000000000404460                 dq offset loc_403F3F - 404460h, offset loc_403F88 - 404460h
.text:0000000000404460                 dq offset loc_403FD4 - 404460h, offset loc_404021 - 404460h
.text:0000000000404460                 dq offset loc_404071 - 404460h, offset loc_4040BB - 404460h
.text:0000000000404460                 dq offset loc_404108 - 404460h, offset loc_404156 - 404460h
.text:0000000000404460                 dq offset loc_4041A7 - 404460h, offset loc_4041F4 - 404460h
.text:0000000000404460                 dq offset loc_404244 - 404460h, offset loc_404295 - 404460h
.text:0000000000404460                 dq offset loc_403E18 - 404460h, offset loc_403E59 - 404460h
.text:0000000000404460                 dq offset loc_403EA0 - 404460h, offset loc_403EEA - 404460h
.text:0000000000404460                 dq offset loc_403F37 - 404460h, offset loc_403F80 - 404460h
.text:0000000000404460                 dq offset loc_403FCC - 404460h, offset loc_404019 - 404460h
.text:0000000000404460                 dq offset loc_404069 - 404460h, offset loc_4040B3 - 404460h
.text:0000000000404460                 dq offset loc_404100 - 404460h, offset loc_40414E - 404460h
.text:0000000000404460                 dq offset loc_40419F - 404460h, offset loc_4041EC - 404460h
.text:0000000000404460                 dq offset loc_40423C - 404460h, offset loc_40428D - 404460h
.text:0000000000404460                 dq offset loc_403E10 - 404460h, offset loc_403E51 - 404460h
.text:0000000000404460                 dq offset loc_403E98 - 404460h, offset loc_403EE2 - 404460h
.text:0000000000404460                 dq offset loc_403F2F - 404460h, offset loc_403F78 - 404460h
.text:0000000000404460                 dq offset loc_403FC4 - 404460h, offset loc_404011 - 404460h
.text:0000000000404460                 dq offset loc_404061 - 404460h, offset loc_4040AB - 404460h
.text:0000000000404460                 dq offset loc_4040F8 - 404460h, offset loc_404146 - 404460h
.text:0000000000404460                 dq offset loc_404197 - 404460h, offset loc_4041E4 - 404460h
.text:0000000000404460                 dq offset loc_404234 - 404460h, offset loc_404285 - 404460h
.text:0000000000404460                 dq offset loc_403E08 - 404460h, offset loc_403E49 - 404460h
.text:0000000000404460                 dq offset loc_403E90 - 404460h, offset loc_403EDA - 404460h
.text:0000000000404460                 dq offset loc_403F27 - 404460h, offset loc_403F70 - 404460h
.text:0000000000404460                 dq offset loc_403FBC - 404460h, offset loc_404009 - 404460h
.text:0000000000404460                 dq offset loc_404059 - 404460h, offset loc_4040A3 - 404460h
.text:0000000000404460                 dq offset loc_4040F0 - 404460h, offset loc_40413E - 404460h
.text:0000000000404460                 dq offset loc_40418F - 404460h, offset loc_4041DC - 404460h
.text:0000000000404460                 dq offset loc_40422C - 404460h, offset loc_40427D - 404460h
.text:0000000000404460                 dq offset loc_403E00 - 404460h, offset loc_403E41 - 404460h
.text:0000000000404460                 dq offset loc_403E88 - 404460h, offset loc_403ED2 - 404460h
.text:0000000000404460                 dq offset loc_403F1F - 404460h, offset loc_403F68 - 404460h
.text:0000000000404460                 dq offset loc_403FB4 - 404460h, offset loc_404001 - 404460h
.text:0000000000404460                 dq offset loc_404051 - 404460h, offset loc_40409B - 404460h
.text:0000000000404460                 dq offset loc_4040E8 - 404460h, offset loc_404136 - 404460h
.text:0000000000404460                 dq offset loc_404187 - 404460h, offset loc_4041D4 - 404460h
.text:0000000000404460                 dq offset loc_404224 - 404460h, offset loc_404275 - 404460h
.text:0000000000404A60
.text:0000000000404A60 ; =============== S U B R O U T I N E =======================================
.text:0000000000404A60
.text:0000000000404A60
.text:0000000000404A60 ; __int64 __usercall _libirc_get_msg@<rax>(int number@<edi>, char)
.text:0000000000404A60                 public __libirc_get_msg
.text:0000000000404A60 __libirc_get_msg proc near              ; CODE XREF: __intel_new_feature_proc_init+6B↑p
.text:0000000000404A60
.text:0000000000404A60 dest            = byte ptr -168h
.text:0000000000404A60 var_E8          = byte ptr -0E8h
.text:0000000000404A60 var_D8          = qword ptr -0D8h
.text:0000000000404A60 var_D0          = qword ptr -0D0h
.text:0000000000404A60 var_C8          = qword ptr -0C8h
.text:0000000000404A60 var_C0          = qword ptr -0C0h
.text:0000000000404A60 var_39          = byte ptr -39h
.text:0000000000404A60 arg             = dword ptr -38h
.text:0000000000404A60 var_34          = dword ptr -34h
.text:0000000000404A60 var_30          = qword ptr -30h
.text:0000000000404A60 var_28          = qword ptr -28h
.text:0000000000404A60 arg_0           = byte ptr  8
.text:0000000000404A60
.text:0000000000404A60 ; __unwind {
.text:0000000000404A60                 push    r12
.text:0000000000404A62                 push    r13
.text:0000000000404A64                 push    r14
.text:0000000000404A66                 sub     rsp, 150h
.text:0000000000404A6D                 mov     [rsp+168h+var_D8], rdx
.text:0000000000404A75                 mov     [rsp+168h+var_D0], rcx
.text:0000000000404A7D                 mov     [rsp+168h+var_C8], r8
.text:0000000000404A85                 mov     [rsp+168h+var_C0], r9
.text:0000000000404A8D                 movzx   r11d, al
.text:0000000000404A91                 lea     rax, ds:0[r11*4]
.text:0000000000404A99                 lea     r11, loc_404ACE
.text:0000000000404AA0                 sub     r11, rax
.text:0000000000404AA3                 lea     rax, [rsp+168h+var_39]
.text:0000000000404AAB                 jmp     r11
.text:0000000000404AAE                 movaps  xmmword ptr [rax-0Fh], xmm7
.text:0000000000404AB2                 movaps  xmmword ptr [rax-1Fh], xmm6
.text:0000000000404AB6                 movaps  xmmword ptr [rax-2Fh], xmm5
.text:0000000000404ABA                 movaps  xmmword ptr [rax-3Fh], xmm4
.text:0000000000404ABE                 movaps  xmmword ptr [rax-4Fh], xmm3
.text:0000000000404AC2                 movaps  xmmword ptr [rax-5Fh], xmm2
.text:0000000000404AC6                 movaps  xmmword ptr [rax-6Fh], xmm1
.text:0000000000404ACA                 movaps  xmmword ptr [rax-7Fh], xmm0
.text:0000000000404ACE
.text:0000000000404ACE loc_404ACE:                             ; DATA XREF: __libirc_get_msg+39↑o
.text:0000000000404ACE                 mov     r13d, edi
.text:0000000000404AD1                 mov     r14d, esi
.text:0000000000404AD4                 test    r13d, r13d
.text:0000000000404AD7                 jz      loc_404B67
.text:0000000000404ADD                 cmp     cs:first_msg, 0
.text:0000000000404AE4                 jz      short loc_404B34
.text:0000000000404AE6                 lea     rdi, cat_name   ; "irc_msg.cat"
.text:0000000000404AED                 xor     esi, esi        ; flag
.text:0000000000404AEF                 mov     cs:first_msg, 0
.text:0000000000404AF9                 call    _catopen
.text:0000000000404AFE                 mov     cs:message_catalog, rax
.text:0000000000404B05                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000404B09                 jz      loc_404BE6
.text:0000000000404B0F                 mov     rdi, cs:message_catalog ; catalog
.text:0000000000404B16
.text:0000000000404B16 loc_404B16:                             ; CODE XREF: __libirc_get_msg+212↓j
.text:0000000000404B16                 movsxd  rax, r13d
.text:0000000000404B19                 lea     rcx, off_608048 ; "\n"
.text:0000000000404B20                 shl     rax, 4
.text:0000000000404B24                 mov     cs:use_internal_msg, 0
.text:0000000000404B2E                 mov     rcx, [rax+rcx]  ; string
.text:0000000000404B32                 jmp     short loc_404B55
.text:0000000000404B34 ; ---------------------------------------------------------------------------
.text:0000000000404B34
.text:0000000000404B34 loc_404B34:                             ; CODE XREF: __libirc_get_msg+84↑j
.text:0000000000404B34                                         ; __libirc_get_msg+218↓j
.text:0000000000404B34                 mov     edi, cs:use_internal_msg
.text:0000000000404B3A                 movsxd  rax, r13d
.text:0000000000404B3D                 lea     rcx, off_608048 ; "\n"
.text:0000000000404B44                 shl     rax, 4
.text:0000000000404B48                 test    edi, edi
.text:0000000000404B4A                 mov     rcx, [rax+rcx]
.text:0000000000404B4E                 jnz     short loc_404B6E
.text:0000000000404B50                 jmp     loc_404C7D
.text:0000000000404B55 ; ---------------------------------------------------------------------------
.text:0000000000404B55
.text:0000000000404B55 loc_404B55:                             ; CODE XREF: __libirc_get_msg+D2↑j
.text:0000000000404B55                                         ; __libirc_get_msg+224↓j
.text:0000000000404B55                 mov     esi, 1          ; set
.text:0000000000404B5A                 mov     edx, r13d       ; number
.text:0000000000404B5D                 call    _catgets
.text:0000000000404B62                 mov     rcx, rax
.text:0000000000404B65                 jmp     short loc_404B6E
.text:0000000000404B67 ; ---------------------------------------------------------------------------
.text:0000000000404B67
.text:0000000000404B67 loc_404B67:                             ; CODE XREF: __libirc_get_msg+77↑j
.text:0000000000404B67                 lea     rcx, aCannotAllocate+34h ; ""
.text:0000000000404B6E
.text:0000000000404B6E loc_404B6E:                             ; CODE XREF: __libirc_get_msg+EE↑j
.text:0000000000404B6E                                         ; __libirc_get_msg+105↑j
.text:0000000000404B6E                 test    r14d, r14d
.text:0000000000404B71                 jle     short loc_404BD5
.text:0000000000404B73                 mov     [rsp+168h+arg], 10h
.text:0000000000404B7E                 lea     rdx, [rsp+168h+arg_0]
.text:0000000000404B86                 mov     [rsp+168h+var_34], 30h ; '0'
.text:0000000000404B91                 lea     rdi, [rsp+168h+var_E8]
.text:0000000000404B99                 mov     [rsp+168h+var_30], rdx
.text:0000000000404BA1                 mov     [rsp+168h+var_28], rdi
.text:0000000000404BA9                 lea     rdi, get_msg_buf ; s
.text:0000000000404BB0                 mov     rsi, rcx        ; format
.text:0000000000404BB3                 lea     rdx, [rsp+168h+arg] ; arg
.text:0000000000404BBB                 call    _vsprintf
.text:0000000000404BC0                 lea     rax, get_msg_buf
.text:0000000000404BC7                 add     rsp, 150h
.text:0000000000404BCE                 pop     r14
.text:0000000000404BD0                 pop     r13
.text:0000000000404BD2                 pop     r12
.text:0000000000404BD4                 retn
.text:0000000000404BD5 ; ---------------------------------------------------------------------------
.text:0000000000404BD5
.text:0000000000404BD5 loc_404BD5:                             ; CODE XREF: __libirc_get_msg+111↑j
.text:0000000000404BD5                 mov     rax, rcx
.text:0000000000404BD8                 add     rsp, 150h
.text:0000000000404BDF                 pop     r14
.text:0000000000404BE1                 pop     r13
.text:0000000000404BE3                 pop     r12
.text:0000000000404BE5                 retn
.text:0000000000404BE6 ; ---------------------------------------------------------------------------
.text:0000000000404BE6
.text:0000000000404BE6 loc_404BE6:                             ; CODE XREF: __libirc_get_msg+A9↑j
.text:0000000000404BE6                 lea     rdi, name       ; "LANG"
.text:0000000000404BED                 call    _getenv
.text:0000000000404BF2                 test    rax, rax
.text:0000000000404BF5                 jz      short loc_404C67
.text:0000000000404BF7                 mov     rsi, rax        ; src
.text:0000000000404BFA                 lea     rdi, [rsp+168h+dest] ; dest
.text:0000000000404BFE                 mov     edx, 80h        ; n
.text:0000000000404C03                 call    _strncpy
.text:0000000000404C08                 mov     esi, 2Eh ; '.'  ; c
.text:0000000000404C0D                 lea     rdi, [rsp+168h+dest] ; s
.text:0000000000404C11                 call    _strchr
.text:0000000000404C16                 mov     r12, rax
.text:0000000000404C19                 test    r12, r12
.text:0000000000404C1C                 jz      short loc_404C67
.text:0000000000404C1E                 lea     rdi, name       ; "LANG"
.text:0000000000404C25                 lea     rsi, [rsp+168h+dest] ; value
.text:0000000000404C29                 mov     edx, 1          ; replace
.text:0000000000404C2E                 mov     byte ptr [r12], 0
.text:0000000000404C33                 call    _setenv
.text:0000000000404C38                 lea     rdi, cat_name   ; "irc_msg.cat"
.text:0000000000404C3F                 xor     esi, esi        ; flag
.text:0000000000404C41                 call    _catopen
.text:0000000000404C46                 lea     rdi, name       ; "LANG"
.text:0000000000404C4D                 lea     rsi, [rsp+168h+dest] ; value
.text:0000000000404C51                 mov     edx, 1          ; replace
.text:0000000000404C56                 mov     cs:message_catalog, rax
.text:0000000000404C5D                 mov     byte ptr [r12], 2Eh ; '.'
.text:0000000000404C62                 call    _setenv
.text:0000000000404C67
.text:0000000000404C67 loc_404C67:                             ; CODE XREF: __libirc_get_msg+195↑j
.text:0000000000404C67                                         ; __libirc_get_msg+1BC↑j
.text:0000000000404C67                 mov     rdi, cs:message_catalog
.text:0000000000404C6E                 cmp     rdi, 0FFFFFFFFFFFFFFFFh
.text:0000000000404C72                 jnz     loc_404B16
.text:0000000000404C78                 jmp     loc_404B34
.text:0000000000404C7D ; ---------------------------------------------------------------------------
.text:0000000000404C7D
.text:0000000000404C7D loc_404C7D:                             ; CODE XREF: __libirc_get_msg+F0↑j
.text:0000000000404C7D                 mov     rdi, cs:message_catalog
.text:0000000000404C84                 jmp     loc_404B55
.text:0000000000404C84 __libirc_get_msg endp
.text:0000000000404C84
.text:0000000000404C84 ; ---------------------------------------------------------------------------
.text:0000000000404C89                 align 10h
.text:0000000000404C89 ; } // starts at 404A60
.text:0000000000404C90
.text:0000000000404C90 ; =============== S U B R O U T I N E =======================================
.text:0000000000404C90
.text:0000000000404C90
.text:0000000000404C90                 public __libirc_print
.text:0000000000404C90 __libirc_print  proc near               ; CODE XREF: __intel_new_feature_proc_init+248↑p
.text:0000000000404C90                                         ; __intel_new_feature_proc_init+25B↑p ...
.text:0000000000404C90
.text:0000000000404C90 dest            = byte ptr -168h
.text:0000000000404C90 var_E8          = byte ptr -0E8h
.text:0000000000404C90 var_D0          = qword ptr -0D0h
.text:0000000000404C90 var_C8          = qword ptr -0C8h
.text:0000000000404C90 var_C0          = qword ptr -0C0h
.text:0000000000404C90 var_39          = byte ptr -39h
.text:0000000000404C90 arg             = dword ptr -38h
.text:0000000000404C90 var_34          = dword ptr -34h
.text:0000000000404C90 var_30          = qword ptr -30h
.text:0000000000404C90 var_28          = qword ptr -28h
.text:0000000000404C90 arg_0           = byte ptr  8
.text:0000000000404C90
.text:0000000000404C90 ; __unwind {
.text:0000000000404C90                 push    r13
.text:0000000000404C92                 push    r14
.text:0000000000404C94                 push    r15
.text:0000000000404C96                 push    rbx
.text:0000000000404C97                 sub     rsp, 148h
.text:0000000000404C9E                 mov     [rsp+168h+var_D0], rcx
.text:0000000000404CA6                 mov     [rsp+168h+var_C8], r8
.text:0000000000404CAE                 mov     [rsp+168h+var_C0], r9
.text:0000000000404CB6                 movzx   r11d, al
.text:0000000000404CBA                 lea     rax, ds:0[r11*4]
.text:0000000000404CC2                 lea     r11, loc_404CF7
.text:0000000000404CC9                 sub     r11, rax
.text:0000000000404CCC                 lea     rax, [rsp+168h+var_39]
.text:0000000000404CD4                 jmp     r11
.text:0000000000404CD7                 movaps  xmmword ptr [rax-0Fh], xmm7
.text:0000000000404CDB                 movaps  xmmword ptr [rax-1Fh], xmm6
.text:0000000000404CDF                 movaps  xmmword ptr [rax-2Fh], xmm5
.text:0000000000404CE3                 movaps  xmmword ptr [rax-3Fh], xmm4
.text:0000000000404CE7                 movaps  xmmword ptr [rax-4Fh], xmm3
.text:0000000000404CEB                 movaps  xmmword ptr [rax-5Fh], xmm2
.text:0000000000404CEF                 movaps  xmmword ptr [rax-6Fh], xmm1
.text:0000000000404CF3                 movaps  xmmword ptr [rax-7Fh], xmm0
.text:0000000000404CF7
.text:0000000000404CF7 loc_404CF7:                             ; DATA XREF: __libirc_print+32↑o
.text:0000000000404CF7                 mov     r14d, esi
.text:0000000000404CFA                 mov     r15d, edx
.text:0000000000404CFD                 mov     r13d, edi
.text:0000000000404D00                 test    r14d, r14d
.text:0000000000404D03                 jnz     short loc_404D2C
.text:0000000000404D05                 cmp     r13d, 1
.text:0000000000404D09                 jz      loc_404E3E
.text:0000000000404D0F                 lea     rdi, asc_4062A4 ; "\n"
.text:0000000000404D16                 xor     eax, eax
.text:0000000000404D18                 call    _printf
.text:0000000000404D1D                 add     rsp, 148h
.text:0000000000404D24                 pop     rbx
.text:0000000000404D25                 pop     r15
.text:0000000000404D27                 pop     r14
.text:0000000000404D29                 pop     r13
.text:0000000000404D2B                 retn
.text:0000000000404D2C ; ---------------------------------------------------------------------------
.text:0000000000404D2C
.text:0000000000404D2C loc_404D2C:                             ; CODE XREF: __libirc_print+73↑j
.text:0000000000404D2C                 cmp     cs:first_msg, 0
.text:0000000000404D33                 jz      short loc_404D83
.text:0000000000404D35                 lea     rdi, cat_name   ; "irc_msg.cat"
.text:0000000000404D3C                 xor     esi, esi        ; flag
.text:0000000000404D3E                 mov     cs:first_msg, 0
.text:0000000000404D48                 call    _catopen
.text:0000000000404D4D                 mov     cs:message_catalog, rax
.text:0000000000404D54                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000404D58                 jz      loc_404E65
.text:0000000000404D5E                 mov     rdi, cs:message_catalog ; catalog
.text:0000000000404D65
.text:0000000000404D65 loc_404D65:                             ; CODE XREF: __libirc_print+25D↓j
.text:0000000000404D65                 movsxd  rax, r14d
.text:0000000000404D68                 lea     rcx, off_608048 ; "\n"
.text:0000000000404D6F                 shl     rax, 4
.text:0000000000404D73                 mov     cs:use_internal_msg, 0
.text:0000000000404D7D                 mov     rcx, [rax+rcx]  ; string
.text:0000000000404D81                 jmp     short loc_404DA4
.text:0000000000404D83 ; ---------------------------------------------------------------------------
.text:0000000000404D83
.text:0000000000404D83 loc_404D83:                             ; CODE XREF: __libirc_print+A3↑j
.text:0000000000404D83                                         ; __libirc_print+263↓j
.text:0000000000404D83                 mov     ebx, cs:use_internal_msg
.text:0000000000404D89                 movsxd  rax, r14d
.text:0000000000404D8C                 lea     rcx, off_608048 ; "\n"
.text:0000000000404D93                 shl     rax, 4
.text:0000000000404D97                 test    ebx, ebx
.text:0000000000404D99                 mov     rcx, [rax+rcx]
.text:0000000000404D9D                 jnz     short loc_404DB4
.text:0000000000404D9F                 jmp     loc_404F33
.text:0000000000404DA4 ; ---------------------------------------------------------------------------
.text:0000000000404DA4
.text:0000000000404DA4 loc_404DA4:                             ; CODE XREF: __libirc_print+F1↑j
.text:0000000000404DA4                                         ; __libirc_print+2AA↓j
.text:0000000000404DA4                 mov     esi, 1          ; set
.text:0000000000404DA9                 mov     edx, r14d       ; number
.text:0000000000404DAC                 call    _catgets
.text:0000000000404DB1                 mov     rcx, rax
.text:0000000000404DB4
.text:0000000000404DB4 loc_404DB4:                             ; CODE XREF: __libirc_print+10D↑j
.text:0000000000404DB4                 test    r15d, r15d
.text:0000000000404DB7                 jle     short loc_404E0D
.text:0000000000404DB9                 mov     [rsp+168h+arg], 18h
.text:0000000000404DC4                 lea     rax, [rsp+168h+arg_0]
.text:0000000000404DCC                 mov     [rsp+168h+var_34], 30h ; '0'
.text:0000000000404DD7                 lea     rdx, [rsp+168h+var_E8]
.text:0000000000404DDF                 mov     [rsp+168h+var_30], rax
.text:0000000000404DE7                 mov     [rsp+168h+var_28], rdx
.text:0000000000404DEF                 lea     rdi, print_buf  ; s
.text:0000000000404DF6                 mov     rsi, rcx        ; format
.text:0000000000404DF9                 lea     rdx, [rsp+168h+arg] ; arg
.text:0000000000404E01                 call    _vsprintf
.text:0000000000404E06                 lea     rcx, print_buf
.text:0000000000404E0D
.text:0000000000404E0D loc_404E0D:                             ; CODE XREF: __libirc_print+127↑j
.text:0000000000404E0D                 cmp     r13d, 1
.text:0000000000404E11                 jz      loc_404EF8
.text:0000000000404E17                 mov     rdi, rcx        ; format
.text:0000000000404E1A                 xor     eax, eax
.text:0000000000404E1C                 call    _printf
.text:0000000000404E21                 lea     rdi, asc_4062A4 ; "\n"
.text:0000000000404E28                 xor     eax, eax
.text:0000000000404E2A                 call    _printf
.text:0000000000404E2F                 add     rsp, 148h
.text:0000000000404E36                 pop     rbx
.text:0000000000404E37                 pop     r15
.text:0000000000404E39                 pop     r14
.text:0000000000404E3B                 pop     r13
.text:0000000000404E3D                 retn
.text:0000000000404E3E ; ---------------------------------------------------------------------------
.text:0000000000404E3E
.text:0000000000404E3E loc_404E3E:                             ; CODE XREF: __libirc_print+79↑j
.text:0000000000404E3E                 mov     rax, cs:stderr_ptr
.text:0000000000404E45                 lea     rsi, asc_4062A4 ; "\n"
.text:0000000000404E4C                 mov     rdi, [rax]      ; stream
.text:0000000000404E4F                 xor     eax, eax
.text:0000000000404E51                 call    _fprintf
.text:0000000000404E56                 add     rsp, 148h
.text:0000000000404E5D                 pop     rbx
.text:0000000000404E5E                 pop     r15
.text:0000000000404E60                 pop     r14
.text:0000000000404E62                 pop     r13
.text:0000000000404E64                 retn
.text:0000000000404E65 ; ---------------------------------------------------------------------------
.text:0000000000404E65
.text:0000000000404E65 loc_404E65:                             ; CODE XREF: __libirc_print+C8↑j
.text:0000000000404E65                 lea     rdi, name       ; "LANG"
.text:0000000000404E6C                 call    _getenv
.text:0000000000404E71                 test    rax, rax
.text:0000000000404E74                 jz      short loc_404EE2
.text:0000000000404E76                 mov     rsi, rax        ; src
.text:0000000000404E79                 lea     rdi, [rsp+168h+dest] ; dest
.text:0000000000404E7D                 mov     edx, 80h        ; n
.text:0000000000404E82                 call    _strncpy
.text:0000000000404E87                 mov     esi, 2Eh ; '.'  ; c
.text:0000000000404E8C                 lea     rdi, [rsp+168h+dest] ; s
.text:0000000000404E90                 call    _strchr
.text:0000000000404E95                 mov     rbx, rax
.text:0000000000404E98                 test    rbx, rbx
.text:0000000000404E9B                 jz      short loc_404EE2
.text:0000000000404E9D                 lea     rdi, name       ; "LANG"
.text:0000000000404EA4                 lea     rsi, [rsp+168h+dest] ; value
.text:0000000000404EA8                 mov     edx, 1          ; replace
.text:0000000000404EAD                 mov     byte ptr [rbx], 0
.text:0000000000404EB0                 call    _setenv
.text:0000000000404EB5                 lea     rdi, cat_name   ; "irc_msg.cat"
.text:0000000000404EBC                 xor     esi, esi        ; flag
.text:0000000000404EBE                 call    _catopen
.text:0000000000404EC3                 lea     rdi, name       ; "LANG"
.text:0000000000404ECA                 lea     rsi, [rsp+168h+dest] ; value
.text:0000000000404ECE                 mov     edx, 1          ; replace
.text:0000000000404ED3                 mov     cs:message_catalog, rax
.text:0000000000404EDA                 mov     byte ptr [rbx], 2Eh ; '.'
.text:0000000000404EDD                 call    _setenv
.text:0000000000404EE2
.text:0000000000404EE2 loc_404EE2:                             ; CODE XREF: __libirc_print+1E4↑j
.text:0000000000404EE2                                         ; __libirc_print+20B↑j
.text:0000000000404EE2                 mov     rdi, cs:message_catalog
.text:0000000000404EE9                 cmp     rdi, 0FFFFFFFFFFFFFFFFh
.text:0000000000404EED                 jnz     loc_404D65
.text:0000000000404EF3                 jmp     loc_404D83
.text:0000000000404EF8 ; ---------------------------------------------------------------------------
.text:0000000000404EF8
.text:0000000000404EF8 loc_404EF8:                             ; CODE XREF: __libirc_print+181↑j
.text:0000000000404EF8                 mov     rax, cs:stderr_ptr
.text:0000000000404EFF                 mov     rsi, rcx        ; format
.text:0000000000404F02                 mov     rdi, [rax]      ; stream
.text:0000000000404F05                 xor     eax, eax
.text:0000000000404F07                 call    _fprintf
.text:0000000000404F0C                 mov     rax, cs:stderr_ptr
.text:0000000000404F13                 lea     rsi, asc_4062A4 ; "\n"
.text:0000000000404F1A                 mov     rdi, [rax]      ; stream
.text:0000000000404F1D                 xor     eax, eax
.text:0000000000404F1F                 call    _fprintf
.text:0000000000404F24                 add     rsp, 148h
.text:0000000000404F2B                 pop     rbx
.text:0000000000404F2C                 pop     r15
.text:0000000000404F2E                 pop     r14
.text:0000000000404F30                 pop     r13
.text:0000000000404F32                 retn
.text:0000000000404F33 ; ---------------------------------------------------------------------------
.text:0000000000404F33
.text:0000000000404F33 loc_404F33:                             ; CODE XREF: __libirc_print+10F↑j
.text:0000000000404F33                 mov     rdi, cs:message_catalog
.text:0000000000404F3A                 jmp     loc_404DA4
.text:0000000000404F3A __libirc_print  endp
.text:0000000000404F3A
.text:0000000000404F3A ; ---------------------------------------------------------------------------
.text:0000000000404F3F                 align 20h
.text:0000000000404F3F ; } // starts at 404C90
.text:0000000000404F40
.text:0000000000404F40 ; =============== S U B R O U T I N E =======================================
.text:0000000000404F40
.text:0000000000404F40
.text:0000000000404F40                 public __intel_cpu_features_init_x
.text:0000000000404F40 __intel_cpu_features_init_x proc near
.text:0000000000404F40 ; __unwind {
.text:0000000000404F40                 push    rax
.text:0000000000404F41                 push    rdx
.text:0000000000404F42                 push    rcx
.text:0000000000404F43                 push    rsi
.text:0000000000404F44                 push    rdi
.text:0000000000404F45                 push    r8
.text:0000000000404F47                 push    r9
.text:0000000000404F49                 xor     edi, edi
.text:0000000000404F4B                 call    __intel_cpu_features_init_body
.text:0000000000404F50                 pop     r9
.text:0000000000404F52                 pop     r8
.text:0000000000404F54                 pop     rdi
.text:0000000000404F55                 pop     rsi
.text:0000000000404F56                 pop     rcx
.text:0000000000404F57                 pop     rdx
.text:0000000000404F58                 pop     rax
.text:0000000000404F59                 retn
.text:0000000000404F59 __intel_cpu_features_init_x endp
.text:0000000000404F59
.text:0000000000404F59 ; ---------------------------------------------------------------------------
.text:0000000000404F5A                 align 20h
.text:0000000000404F5A ; } // starts at 404F40
.text:0000000000404F60
.text:0000000000404F60 ; =============== S U B R O U T I N E =======================================
.text:0000000000404F60
.text:0000000000404F60
.text:0000000000404F60                 public __intel_cpu_features_init
.text:0000000000404F60 __intel_cpu_features_init proc near     ; CODE XREF: _intel_fast_memset+32↑p
.text:0000000000404F60                                         ; __intel_new_feature_proc_init+35F↑p
.text:0000000000404F60 ; __unwind {
.text:0000000000404F60                 push    rax
.text:0000000000404F61                 push    rdx
.text:0000000000404F62                 push    rcx
.text:0000000000404F63                 push    rsi
.text:0000000000404F64                 push    rdi
.text:0000000000404F65                 push    r8
.text:0000000000404F67                 push    r9
.text:0000000000404F69                 mov     edi, 1
.text:0000000000404F6E                 call    __intel_cpu_features_init_body
.text:0000000000404F73                 pop     r9
.text:0000000000404F75                 pop     r8
.text:0000000000404F77                 pop     rdi
.text:0000000000404F78                 pop     rsi
.text:0000000000404F79                 pop     rcx
.text:0000000000404F7A                 pop     rdx
.text:0000000000404F7B                 pop     rax
.text:0000000000404F7C                 retn
.text:0000000000404F7C __intel_cpu_features_init endp
.text:0000000000404F7C
.text:0000000000404F7C ; ---------------------------------------------------------------------------
.text:0000000000404F7D                 align 20h
.text:0000000000404F7D ; } // starts at 404F60
.text:0000000000404F80
.text:0000000000404F80 ; =============== S U B R O U T I N E =======================================
.text:0000000000404F80
.text:0000000000404F80
.text:0000000000404F80 __intel_cpu_features_init_body proc near
.text:0000000000404F80                                         ; CODE XREF: __intel_cpu_features_init_x+B↑p
.text:0000000000404F80                                         ; __intel_cpu_features_init+E↑p
.text:0000000000404F80
.text:0000000000404F80 var_18          = dword ptr -18h
.text:0000000000404F80 var_14          = dword ptr -14h
.text:0000000000404F80 var_10          = dword ptr -10h
.text:0000000000404F80 var_C           = dword ptr -0Ch
.text:0000000000404F80
.text:0000000000404F80 ; __unwind {
.text:0000000000404F80                 push    rbx
.text:0000000000404F81                 mov     r11d, edi
.text:0000000000404F84                 xor     eax, eax
.text:0000000000404F86                 cpuid
.text:0000000000404F88                 mov     [rsp+8+var_18], eax
.text:0000000000404F8C                 mov     [rsp+8+var_14], ebx
.text:0000000000404F90                 mov     [rsp+8+var_10], ecx
.text:0000000000404F94                 mov     [rsp+8+var_C], edx
.text:0000000000404F98                 xor     sil, sil
.text:0000000000404F9B                 cmp     [rsp+8+var_18], 0
.text:0000000000404FA0                 jz      loc_4052DF
.text:0000000000404FA6                 cmp     r11d, 1
.text:0000000000404FAA                 jz      loc_4052EC
.text:0000000000404FB0
.text:0000000000404FB0 loc_404FB0:                             ; CODE XREF: __intel_cpu_features_init_body+38A↓j
.text:0000000000404FB0                 mov     eax, 1
.text:0000000000404FB5                 cpuid
.text:0000000000404FB7                 mov     r8d, edx
.text:0000000000404FBA                 mov     r9d, eax
.text:0000000000404FBD                 and     r8d, 1
.text:0000000000404FC1                 mov     edi, ecx
.text:0000000000404FC3                 lea     r8, ds:1[r8*2]
.text:0000000000404FCB                 mov     rax, r8
.text:0000000000404FCE                 or      rax, 4
.text:0000000000404FD2                 test    edx, 8000h
.text:0000000000404FD8                 cmovnz  r8, rax
.text:0000000000404FDC                 mov     rcx, r8
.text:0000000000404FDF                 or      rcx, 8
.text:0000000000404FE3                 test    edx, 800000h
.text:0000000000404FE9                 cmovnz  r8, rcx
.text:0000000000404FED                 test    edx, 1000000h
.text:0000000000404FF3                 jz      loc_4050E4
.text:0000000000404FF9                 or      r8, 10h
.text:0000000000404FFD                 mov     r10, r8
.text:0000000000405000                 or      r10, 20h
.text:0000000000405004                 test    edx, 2000000h
.text:000000000040500A                 cmovnz  r8, r10
.text:000000000040500E                 mov     rsi, r8
.text:0000000000405011                 or      rsi, 40h
.text:0000000000405015                 test    edx, 4000000h
.text:000000000040501B                 cmovnz  r8, rsi
.text:000000000040501F                 mov     r10, r8
.text:0000000000405022                 or      r10, 80h
.text:0000000000405029                 test    edi, 1
.text:000000000040502F                 cmovnz  r8, r10
.text:0000000000405033                 mov     rax, r8
.text:0000000000405036                 or      rax, 100h
.text:000000000040503C                 test    edi, 200h
.text:0000000000405042                 cmovnz  r8, rax
.text:0000000000405046                 mov     rbx, r8
.text:0000000000405049                 or      rbx, 800h
.text:0000000000405050                 test    edi, 400000h
.text:0000000000405056                 cmovnz  r8, rbx
.text:000000000040505A                 mov     rcx, r8
.text:000000000040505D                 or      rcx, 200h
.text:0000000000405064                 test    edi, 80000h
.text:000000000040506A                 cmovnz  r8, rcx
.text:000000000040506E                 mov     rdx, r8
.text:0000000000405071                 or      rdx, 400h
.text:0000000000405078                 test    edi, 100000h
.text:000000000040507E                 cmovnz  r8, rdx
.text:0000000000405082                 mov     r10, r8
.text:0000000000405085                 or      r10, 1000h
.text:000000000040508C                 test    edi, 800000h
.text:0000000000405092                 cmovnz  r8, r10
.text:0000000000405096                 mov     rsi, r8
.text:0000000000405099                 or      rsi, 2000h
.text:00000000004050A0                 test    edi, 2
.text:00000000004050A6                 cmovnz  r8, rsi
.text:00000000004050AA                 mov     sil, 1
.text:00000000004050AD                 mov     rax, r8
.text:00000000004050B0                 or      rax, 4000h
.text:00000000004050B6                 test    edi, 2000000h
.text:00000000004050BC                 cmovnz  r8, rax
.text:00000000004050C0                 mov     eax, 7
.text:00000000004050C5                 xor     ecx, ecx
.text:00000000004050C7                 cpuid
.text:00000000004050C9                 mov     r10d, ebx
.text:00000000004050CC                 mov     rbx, 800000000h
.text:00000000004050D6                 or      rbx, r8
.text:00000000004050D9                 test    r10d, 20000000h
.text:00000000004050E0                 cmovnz  r8, rbx
.text:00000000004050E4
.text:00000000004050E4 loc_4050E4:                             ; CODE XREF: __intel_cpu_features_init_body+73↑j
.text:00000000004050E4                 mov     rax, r8
.text:00000000004050E7                 or      rax, 20000h
.text:00000000004050ED                 test    edi, 40000000h
.text:00000000004050F3                 cmovnz  r8, rax
.text:00000000004050F7                 test    sil, sil
.text:00000000004050FA                 jnz     short loc_405108
.text:00000000004050FC                 mov     eax, 7
.text:0000000000405101                 xor     ecx, ecx
.text:0000000000405103                 cpuid
.text:0000000000405105                 mov     r10d, ebx
.text:0000000000405108
.text:0000000000405108 loc_405108:                             ; CODE XREF: __intel_cpu_features_init_body+17A↑j
.text:0000000000405108                 mov     esi, r10d
.text:000000000040510B                 mov     rcx, r8
.text:000000000040510E                 and     esi, 108h
.text:0000000000405114                 or      rcx, 80000h
.text:000000000040511B                 cmp     esi, 108h
.text:0000000000405121                 cmovz   r8, rcx
.text:0000000000405125                 mov     eax, 80000001h
.text:000000000040512A                 cpuid
.text:000000000040512C                 mov     rdx, r8
.text:000000000040512F                 or      rdx, 100000h
.text:0000000000405136                 test    cl, 20h
.text:0000000000405139                 cmovnz  r8, rdx
.text:000000000040513D                 mov     rcx, r8
.text:0000000000405140                 or      rcx, 200000h
.text:0000000000405147                 test    r10d, 10h
.text:000000000040514E                 cmovnz  r8, rcx
.text:0000000000405152                 mov     rbx, r8
.text:0000000000405155                 or      rbx, 400000h
.text:000000000040515C                 test    r10d, 800h
.text:0000000000405163                 cmovnz  r8, rbx
.text:0000000000405167                 mov     rsi, r8
.text:000000000040516A                 or      rsi, 10000000h
.text:0000000000405171                 test    r10d, 80000h
.text:0000000000405178                 cmovnz  r8, rsi
.text:000000000040517C                 mov     rax, r8
.text:000000000040517F                 or      rax, 20000000h
.text:0000000000405185                 test    r10d, 40000h
.text:000000000040518C                 cmovnz  r8, rax
.text:0000000000405190                 test    edi, 8000000h
.text:0000000000405196                 jz      loc_405296
.text:000000000040519C                 xor     ecx, ecx
.text:000000000040519E                 xgetbv
.text:00000000004051A1                 or      r8, 1
.text:00000000004051A5                 mov     edx, eax
.text:00000000004051A7                 and     edx, 6
.text:00000000004051AA                 cmp     edx, 6
.text:00000000004051AD                 jnz     loc_405296
.text:00000000004051B3                 mov     rdx, r8
.text:00000000004051B6                 or      rdx, 10000h
.text:00000000004051BD                 test    edi, 10000000h
.text:00000000004051C3                 cmovnz  r8, rdx
.text:00000000004051C7                 mov     rcx, r8
.text:00000000004051CA                 or      rcx, 8000h
.text:00000000004051D1                 test    edi, 20000000h
.text:00000000004051D7                 cmovnz  r8, rcx
.text:00000000004051DB                 mov     rbx, r8
.text:00000000004051DE                 or      rbx, 800000h
.text:00000000004051E5                 test    r10d, 20h
.text:00000000004051EC                 cmovnz  r8, rbx
.text:00000000004051F0                 mov     rsi, r8
.text:00000000004051F3                 or      rsi, 40000h
.text:00000000004051FA                 test    edi, 1000h
.text:0000000000405200                 mov     edi, eax
.text:0000000000405202                 cmovnz  r8, rsi
.text:0000000000405206                 and     edi, 18h
.text:0000000000405209                 cmp     edi, 18h
.text:000000000040520C                 jnz     short loc_40522A
.text:000000000040520E                 or      r8, 1
.text:0000000000405212                 mov     rdx, 1000000000h
.text:000000000040521C                 or      rdx, r8
.text:000000000040521F                 test    r10d, 4000h
.text:0000000000405226                 cmovnz  r8, rdx
.text:000000000040522A
.text:000000000040522A loc_40522A:                             ; CODE XREF: __intel_cpu_features_init_body+28C↑j
.text:000000000040522A                 and     eax, 0E0h
.text:000000000040522F                 cmp     eax, 0E0h
.text:0000000000405234                 jnz     short loc_405296
.text:0000000000405236                 or      r8, 1
.text:000000000040523A                 mov     rdx, 400000000h
.text:0000000000405244                 mov     rax, r8
.text:0000000000405247                 mov     rcx, 100000000h
.text:0000000000405251                 or      rax, 8000000h
.text:0000000000405257                 test    r10d, 10000h
.text:000000000040525E                 mov     rbx, 200000000h
.text:0000000000405268                 cmovnz  r8, rax
.text:000000000040526C                 or      rdx, r8
.text:000000000040526F                 test    r10d, 10000000h
.text:0000000000405276                 cmovnz  r8, rdx
.text:000000000040527A                 or      rcx, r8
.text:000000000040527D                 test    r10d, 8000000h
.text:0000000000405284                 cmovnz  r8, rcx
.text:0000000000405288                 or      rbx, r8
.text:000000000040528B                 test    r10d, 4000000h
.text:0000000000405292                 cmovnz  r8, rbx
.text:0000000000405296
.text:0000000000405296 loc_405296:                             ; CODE XREF: __intel_cpu_features_init_body+216↑j
.text:0000000000405296                                         ; __intel_cpu_features_init_body+22D↑j ...
.text:0000000000405296                 mov     eax, r9d
.text:0000000000405299                 shr     eax, 0Ch
.text:000000000040529C                 shr     r9d, 4
.text:00000000004052A0                 and     eax, 0F0h
.text:00000000004052A5                 and     r9d, 0Fh
.text:00000000004052A9                 add     eax, r9d
.text:00000000004052AC                 cmp     eax, 1Ch
.text:00000000004052AF                 jz      short loc_4052BB
.text:00000000004052B1                 cmp     eax, 26h ; '&'
.text:00000000004052B4                 jz      short loc_4052BB
.text:00000000004052B6                 cmp     eax, 27h ; '''
.text:00000000004052B9                 jnz     short loc_4052C0
.text:00000000004052BB
.text:00000000004052BB loc_4052BB:                             ; CODE XREF: __intel_cpu_features_init_body+32F↑j
.text:00000000004052BB                                         ; __intel_cpu_features_init_body+334↑j
.text:00000000004052BB                 bts     r8, 1Fh
.text:00000000004052C0
.text:00000000004052C0 loc_4052C0:                             ; CODE XREF: __intel_cpu_features_init_body+339↑j
.text:00000000004052C0                 cmp     r11d, 1
.text:00000000004052C4                 jz      short loc_4052CF
.text:00000000004052C6                 mov     cs:__intel_cpu_feature_indicator_x, r8
.text:00000000004052CD                 pop     rbx
.text:00000000004052CE                 retn
.text:00000000004052CF ; ---------------------------------------------------------------------------
.text:00000000004052CF
.text:00000000004052CF loc_4052CF:                             ; CODE XREF: __intel_cpu_features_init_body+344↑j
.text:00000000004052CF                 mov     cs:__intel_cpu_feature_indicator, r8
.text:00000000004052D6                 mov     cs:__intel_cpu_feature_indicator_x, r8
.text:00000000004052DD                 pop     rbx
.text:00000000004052DE                 retn
.text:00000000004052DF ; ---------------------------------------------------------------------------
.text:00000000004052DF
.text:00000000004052DF loc_4052DF:                             ; CODE XREF: __intel_cpu_features_init_body+20↑j
.text:00000000004052DF                                         ; __intel_cpu_features_init_body+374↓j ...
.text:00000000004052DF                 mov     cs:__intel_cpu_feature_indicator, 1
.text:00000000004052EA                 pop     rbx
.text:00000000004052EB                 retn
.text:00000000004052EC ; ---------------------------------------------------------------------------
.text:00000000004052EC
.text:00000000004052EC loc_4052EC:                             ; CODE XREF: __intel_cpu_features_init_body+2A↑j
.text:00000000004052EC                 cmp     [rsp+8+var_14], 756E6547h
.text:00000000004052F4                 jnz     short loc_4052DF
.text:00000000004052F6                 cmp     [rsp+8+var_C], 49656E69h
.text:00000000004052FE                 jnz     short loc_4052DF
.text:0000000000405300                 cmp     [rsp+8+var_10], 6C65746Eh
.text:0000000000405308                 jnz     short loc_4052DF
.text:000000000040530A                 jmp     loc_404FB0
.text:000000000040530A __intel_cpu_features_init_body endp
.text:000000000040530A
.text:000000000040530A ; ---------------------------------------------------------------------------
.text:000000000040530F                 align 10h
.text:000000000040530F ; } // starts at 404F80
.text:0000000000405310
.text:0000000000405310 ; =============== S U B R O U T I N E =======================================
.text:0000000000405310
.text:0000000000405310 ; Attributes: bp-based frame
.text:0000000000405310
.text:0000000000405310                 public __cacheSize
.text:0000000000405310 __cacheSize     proc near
.text:0000000000405310
.text:0000000000405310 var_150         = dword ptr -150h
.text:0000000000405310 var_140         = qword ptr -140h
.text:0000000000405310 var_138         = dword ptr -138h
.text:0000000000405310 var_134         = dword ptr -134h
.text:0000000000405310 var_130         = qword ptr -130h
.text:0000000000405310 var_128         = byte ptr -128h
.text:0000000000405310 var_124         = dword ptr -124h
.text:0000000000405310 var_120         = dword ptr -120h
.text:0000000000405310 var_A8          = qword ptr -0A8h
.text:0000000000405310 var_A0          = byte ptr -0A0h
.text:0000000000405310 var_9D          = byte ptr -9Dh
.text:0000000000405310 var_60          = qword ptr -60h
.text:0000000000405310 var_58          = qword ptr -58h
.text:0000000000405310 var_50          = dword ptr -50h
.text:0000000000405310 var_48          = qword ptr -48h
.text:0000000000405310 var_40          = qword ptr -40h
.text:0000000000405310 var_38          = qword ptr -38h
.text:0000000000405310 var_30          = qword ptr -30h
.text:0000000000405310 var_28          = qword ptr -28h
.text:0000000000405310 var_20          = qword ptr -20h
.text:0000000000405310 var_18          = dword ptr -18h
.text:0000000000405310 var_14          = dword ptr -14h
.text:0000000000405310 var_10          = dword ptr -10h
.text:0000000000405310
.text:0000000000405310 ; __unwind {
.text:0000000000405310                 push    rbp
.text:0000000000405311                 mov     rbp, rsp
.text:0000000000405314                 sub     rsp, 150h
.text:000000000040531B                 mov     r10d, edi
.text:000000000040531E                 lea     eax, [r10-1]
.text:0000000000405322                 cmp     eax, 2
.text:0000000000405325                 ja      short loc_405347
.text:0000000000405327                 lea     rsi, unk_22BBAD6C
.text:000000000040532E                 cmp     dword ptr [rsi], 0
.text:0000000000405331                 jz      short loc_40534E
.text:0000000000405333                 lea     r9, __libirc_cache_tbl
.text:000000000040533A
.text:000000000040533A loc_40533A:                             ; CODE XREF: __cacheSize+3DC↓j
.text:000000000040533A                 shl     r10d, 2
.text:000000000040533E                 mov     eax, [r9+r10*4]
.text:0000000000405342                 mov     rsp, rbp
.text:0000000000405345                 pop     rbp
.text:0000000000405346                 retn
.text:0000000000405347 ; ---------------------------------------------------------------------------
.text:0000000000405347
.text:0000000000405347 loc_405347:                             ; CODE XREF: __cacheSize+15↑j
.text:0000000000405347                 xor     eax, eax
.text:0000000000405349                 mov     rsp, rbp
.text:000000000040534C                 pop     rbp
.text:000000000040534D                 retn
.text:000000000040534E ; ---------------------------------------------------------------------------
.text:000000000040534E
.text:000000000040534E loc_40534E:                             ; CODE XREF: __cacheSize+21↑j
.text:000000000040534E                 mov     [rbp+var_10], 0
.text:0000000000405355                 push    rax
.text:0000000000405356                 push    rcx
.text:0000000000405357                 pushfq
.text:0000000000405358                 pop     rax
.text:0000000000405359                 mov     ecx, eax
.text:000000000040535B                 xor     eax, 200000h
.text:0000000000405360                 push    rax
.text:0000000000405361                 popfq
.text:0000000000405362                 pushfq
.text:0000000000405363                 pop     rax
.text:0000000000405364                 cmp     eax, ecx
.text:0000000000405366                 jz      short loc_405370
.text:0000000000405368                 mov     [rbp+var_10], 1
.text:000000000040536F                 push    rcx
.text:0000000000405370
.text:0000000000405370 loc_405370:                             ; CODE XREF: __cacheSize+56↑j
.text:0000000000405370                 popfq
.text:0000000000405371                 pop     rcx
.text:0000000000405372                 pop     rax
.text:0000000000405373                 cmp     [rbp+var_10], 0
.text:0000000000405377                 jnz     short loc_405385
.text:0000000000405379                 lea     r9, __libirc_cache_tbl
.text:0000000000405380                 jmp     loc_4056E6
.text:0000000000405385 ; ---------------------------------------------------------------------------
.text:0000000000405385
.text:0000000000405385 loc_405385:                             ; CODE XREF: __cacheSize+67↑j
.text:0000000000405385                 mov     rax, 49656E69756E6547h
.text:000000000040538F                 lea     rcx, [rbp+var_18]
.text:0000000000405393                 xor     edx, edx
.text:0000000000405395                 mov     [rbp+var_28], rcx
.text:0000000000405399                 mov     [rbp+var_60], rax
.text:000000000040539D                 mov     [rbp+var_58], 6C65746Eh
.text:00000000004053A5                 mov     [rbp+var_14], edx
.text:00000000004053A8                 mov     [rcx], edx
.text:00000000004053AA                 mov     [rbp+var_20], rbx
.text:00000000004053AE                 push    rax
.text:00000000004053AF                 push    rbx
.text:00000000004053B0                 push    rcx
.text:00000000004053B1                 push    rdx
.text:00000000004053B2                 mov     eax, 0
.text:00000000004053B7                 cpuid
.text:00000000004053B9                 cmp     dword ptr [rbp+var_60], ebx
.text:00000000004053BC                 jnz     short loc_4053D5
.text:00000000004053BE                 cmp     dword ptr [rbp+var_60+4], edx
.text:00000000004053C1                 jnz     short loc_4053D5
.text:00000000004053C3                 cmp     dword ptr [rbp+var_58], ecx
.text:00000000004053C6                 jnz     short loc_4053D5
.text:00000000004053C8                 mov     [rbp+var_14], 1
.text:00000000004053CF                 mov     rdx, [rbp+var_28]
.text:00000000004053D3                 mov     [rdx], eax
.text:00000000004053D5
.text:00000000004053D5 loc_4053D5:                             ; CODE XREF: __cacheSize+AC↑j
.text:00000000004053D5                                         ; __cacheSize+B1↑j ...
.text:00000000004053D5                 pop     rdx
.text:00000000004053D6                 pop     rcx
.text:00000000004053D7                 pop     rbx
.text:00000000004053D8                 pop     rax
.text:00000000004053D9                 lea     r9, __libirc_cache_tbl
.text:00000000004053E0                 lea     rdx, unk_22BBAD64
.text:00000000004053E7                 mov     eax, [rbp+var_14]
.text:00000000004053EA                 mov     ecx, [rbp+var_18]
.text:00000000004053ED                 cmp     ecx, 4
.text:00000000004053F0                 mov     rbx, [rbp+var_20]
.text:00000000004053F4                 mov     [r9], eax
.text:00000000004053F7                 mov     [rdx], ecx
.text:00000000004053F9                 jl      loc_40551A
.text:00000000004053FF                 mov     [rbp+var_134], 0
.text:0000000000405409                 lea     rax, [rbp+var_128]
.text:0000000000405410                 mov     [rbp+var_A8], rax
.text:0000000000405417                 mov     [rbp+var_20], rbx
.text:000000000040541B                 push    rax
.text:000000000040541C                 push    rbx
.text:000000000040541D                 push    rcx
.text:000000000040541E                 push    rdx
.text:000000000040541F                 push    rdi
.text:0000000000405420                 mov     r8, [rbp+var_A8]
.text:0000000000405427                 mov     edi, 0
.text:000000000040542C
.text:000000000040542C loc_40542C:                             ; CODE XREF: __cacheSize+147↓j
.text:000000000040542C                 mov     ecx, edi
.text:000000000040542E                 mov     eax, 4
.text:0000000000405433                 cpuid
.text:0000000000405435                 test    eax, 1Fh
.text:000000000040543A                 jz      short loc_405459
.text:000000000040543C                 mov     [r8], eax
.text:000000000040543F                 mov     [r8+4], ebx
.text:0000000000405443                 mov     [r8+8], ecx
.text:0000000000405447                 mov     [r8+0Ch], edx
.text:000000000040544B                 add     edi, 1
.text:000000000040544E                 cmp     edi, 8
.text:0000000000405451                 jge     short loc_405459
.text:0000000000405453                 add     r8, 10h
.text:0000000000405457                 jmp     short loc_40542C
.text:0000000000405459 ; ---------------------------------------------------------------------------
.text:0000000000405459
.text:0000000000405459 loc_405459:                             ; CODE XREF: __cacheSize+12A↑j
.text:0000000000405459                                         ; __cacheSize+141↑j
.text:0000000000405459                 mov     [rbp+var_134], edi
.text:000000000040545F                 pop     rdi
.text:0000000000405460                 pop     rdx
.text:0000000000405461                 pop     rcx
.text:0000000000405462                 pop     rbx
.text:0000000000405463                 pop     rax
.text:0000000000405464                 xor     edi, edi
.text:0000000000405466                 movsxd  r8, [rbp+var_134]
.text:000000000040546D                 xor     r11d, r11d
.text:0000000000405470                 mov     rbx, [rbp+var_20]
.text:0000000000405474                 test    r8, r8
.text:0000000000405477                 jle     loc_40551A
.text:000000000040547D                 mov     [rbp+var_48], r15
.text:0000000000405481
.text:0000000000405481 loc_405481:                             ; CODE XREF: __cacheSize+200↓j
.text:0000000000405481                 mov     dl, [rbp+r11+var_128]
.text:0000000000405489                 mov     al, dl
.text:000000000040548B                 and     al, 1Dh
.text:000000000040548D                 cmp     al, 1
.text:000000000040548F                 jnz     short loc_405506
.text:0000000000405491                 and     dl, 0E0h
.text:0000000000405494                 shr     dl, 5
.text:0000000000405497                 movzx   edx, dl
.text:000000000040549A                 shl     rdx, 4
.text:000000000040549E                 mov     eax, [rbp+r11+var_124]
.text:00000000004054A6                 movzx   r15d, word ptr [rbp+r11+var_124+2]
.text:00000000004054AF                 and     eax, 3FF000h
.text:00000000004054B4                 and     r15d, 0FFC0h
.text:00000000004054BB                 shr     eax, 0Ch
.text:00000000004054BE                 shr     r15d, 6
.text:00000000004054C2                 inc     eax
.text:00000000004054C4                 movzx   ecx, word ptr [rbp+r11+var_124]
.text:00000000004054CD                 inc     r15d
.text:00000000004054D0                 and     ecx, 0FFFh
.text:00000000004054D6                 mov     [rdx+r9+0Ch], r15d
.text:00000000004054DB                 inc     ecx
.text:00000000004054DD                 mov     [rdx+r9+8], eax
.text:00000000004054E2                 imul    eax, r15d
.text:00000000004054E6                 mov     r15d, [rbp+r11+var_120]
.text:00000000004054EE                 inc     r15d
.text:00000000004054F1                 imul    r15d, ecx
.text:00000000004054F5                 imul    r15d, eax
.text:00000000004054F9                 shr     r15d, 0Ah
.text:00000000004054FD                 mov     [rdx+r9+4], ecx
.text:0000000000405502                 mov     [rdx+r9], r15d
.text:0000000000405506
.text:0000000000405506 loc_405506:                             ; CODE XREF: __cacheSize+17F↑j
.text:0000000000405506                 inc     rdi
.text:0000000000405509                 add     r11, 10h
.text:000000000040550D                 cmp     rdi, r8
.text:0000000000405510                 jl      loc_405481
.text:0000000000405516                 mov     r15, [rbp+var_48]
.text:000000000040551A
.text:000000000040551A loc_40551A:                             ; CODE XREF: __cacheSize+E9↑j
.text:000000000040551A                                         ; __cacheSize+167↑j
.text:000000000040551A                 lea     rax, unk_22BBAD70
.text:0000000000405521                 cmp     dword ptr [rax], 0
.text:0000000000405524                 jnz     loc_4056E6
.text:000000000040552A                 cmp     [rbp+var_18], 2
.text:000000000040552E                 jl      loc_4056E6
.text:0000000000405534                 mov     [rbp+var_20], rbx
.text:0000000000405538                 lea     rdx, [rbp+var_A0]
.text:000000000040553F                 mov     [rbp+var_130], rdx
.text:0000000000405546                 mov     rdi, rax
.text:0000000000405549                 push    rax
.text:000000000040554A                 push    rbx
.text:000000000040554B                 push    rcx
.text:000000000040554C                 push    rdx
.text:000000000040554D                 mov     r8, [rbp+var_130]
.text:0000000000405554                 mov     eax, 2
.text:0000000000405559                 cpuid
.text:000000000040555B                 mov     [r8], eax
.text:000000000040555E                 mov     [r8+4], ebx
.text:0000000000405562                 mov     [r8+8], ecx
.text:0000000000405566                 mov     [r8+0Ch], edx
.text:000000000040556A                 cmp     al, 1
.text:000000000040556C                 jle     short loc_4055BB
.text:000000000040556E                 cmp     al, 2
.text:0000000000405570                 jle     short loc_4055A4
.text:0000000000405572                 cmp     al, 3
.text:0000000000405574                 jle     short loc_40558D
.text:0000000000405576                 mov     eax, 2
.text:000000000040557B                 cpuid
.text:000000000040557D                 mov     [r8+30h], eax
.text:0000000000405581                 mov     [r8+34h], ebx
.text:0000000000405585                 mov     [r8+38h], ecx
.text:0000000000405589                 mov     [r8+3Ch], edx
.text:000000000040558D
.text:000000000040558D loc_40558D:                             ; CODE XREF: __cacheSize+264↑j
.text:000000000040558D                 mov     eax, 2
.text:0000000000405592                 cpuid
.text:0000000000405594                 mov     [r8+20h], eax
.text:0000000000405598                 mov     [r8+24h], ebx
.text:000000000040559C                 mov     [r8+28h], ecx
.text:00000000004055A0                 mov     [r8+2Ch], edx
.text:00000000004055A4
.text:00000000004055A4 loc_4055A4:                             ; CODE XREF: __cacheSize+260↑j
.text:00000000004055A4                 mov     eax, 2
.text:00000000004055A9                 cpuid
.text:00000000004055AB                 mov     [r8+10h], eax
.text:00000000004055AF                 mov     [r8+14h], ebx
.text:00000000004055B3                 mov     [r8+18h], ecx
.text:00000000004055B7                 mov     [r8+1Ch], edx
.text:00000000004055BB
.text:00000000004055BB loc_4055BB:                             ; CODE XREF: __cacheSize+25C↑j
.text:00000000004055BB                 pop     rdx
.text:00000000004055BC                 pop     rcx
.text:00000000004055BD                 pop     rbx
.text:00000000004055BE                 pop     rax
.text:00000000004055BF                 movzx   edx, [rbp+var_A0]
.text:00000000004055C6                 mov     ecx, 10h
.text:00000000004055CB                 mov     r11d, edx
.text:00000000004055CE                 mov     rax, rdi
.text:00000000004055D1                 shl     r11, 2
.text:00000000004055D5                 cmp     edx, 4
.text:00000000004055D8                 mov     rbx, [rbp+var_20]
.text:00000000004055DC                 cmovg   r11, rcx
.text:00000000004055E0                 xor     edi, edi
.text:00000000004055E2                 test    r11, r11
.text:00000000004055E5                 jle     loc_4056E6
.text:00000000004055EB                 mov     [rbp+var_50], r10d
.text:00000000004055EF                 mov     r10, rax
.text:00000000004055F2                 mov     [rbp+var_20], rbx
.text:00000000004055F6                 mov     [rbp+var_40], r12
.text:00000000004055FA                 mov     [rbp+var_38], r13
.text:00000000004055FE                 mov     [rbp+var_30], r14
.text:0000000000405602                 mov     [rbp+var_48], r15
.text:0000000000405606
.text:0000000000405606 loc_405606:                             ; CODE XREF: __cacheSize+3B1↓j
.text:0000000000405606                 test    [rbp+rdi*4+var_9D], 80h
.text:000000000040560E                 jnz     loc_4056B3
.text:0000000000405614                 xor     r13d, r13d
.text:0000000000405617                 lea     r12, [rbp+rdi*4+var_A0]
.text:000000000040561F
.text:000000000040561F loc_40561F:                             ; CODE XREF: __cacheSize+39D↓j
.text:000000000040561F                 movzx   r14d, byte ptr [r13+r12+0]
.text:0000000000405625                 cmp     r14, 0FFh
.text:000000000040562C                 jz      loc_40578A
.text:0000000000405632                 lea     r15, cpuid2_cache_tbl
.text:0000000000405639                 mov     dl, [r15+r14*8]
.text:000000000040563D                 and     dl, 7
.text:0000000000405640                 movzx   esi, dl
.text:0000000000405643                 test    rsi, rsi
.text:0000000000405646                 jz      short loc_4056A6
.text:0000000000405648                 cmp     rsi, 2
.text:000000000040564C                 jz      loc_4056F1
.text:0000000000405652
.text:0000000000405652 loc_405652:                             ; CODE XREF: __cacheSize+3E5↓j
.text:0000000000405652                                         ; __cacheSize+43A↓j ...
.text:0000000000405652                 lea     rbx, unk_6088A2
.text:0000000000405659                 movzx   edx, word ptr [r15+r14*8]
.text:000000000040565E                 mov     ecx, [r15+r14*8]
.text:0000000000405662                 and     edx, 7FF8h
.text:0000000000405668                 and     ecx, 3F8000h
.text:000000000040566E                 lea     r15, unk_6088A4
.text:0000000000405675                 shl     rsi, 4
.text:0000000000405679                 movzx   r8d, word ptr [rbx+r14*8]
.text:000000000040567E                 and     r8d, 0FFC0h
.text:0000000000405685                 mov     r14d, [r15+r14*8]
.text:0000000000405689                 shr     edx, 3
.text:000000000040568C                 shr     ecx, 0Fh
.text:000000000040568F                 shr     r8d, 6
.text:0000000000405693                 mov     [rsi+r9+4], edx
.text:0000000000405698                 mov     [rsi+r9+8], ecx
.text:000000000040569D                 mov     [rsi+r9+0Ch], r8d
.text:00000000004056A2                 mov     [rsi+r9], r14d
.text:00000000004056A6
.text:00000000004056A6 loc_4056A6:                             ; CODE XREF: __cacheSize+336↑j
.text:00000000004056A6                 inc     r13
.text:00000000004056A9                 cmp     r13, 4
.text:00000000004056AD                 jl      loc_40561F
.text:00000000004056B3
.text:00000000004056B3 loc_4056B3:                             ; CODE XREF: __cacheSize+2FE↑j
.text:00000000004056B3                 nop     dword ptr [rax+rax+00000000h]
.text:00000000004056BB                 inc     rdi
.text:00000000004056BE                 cmp     rdi, r11
.text:00000000004056C1                 jl      loc_405606
.text:00000000004056C7                 mov     r10d, [rbp+var_50]
.text:00000000004056CB                 lea     rsi, unk_22BBAD6C
.text:00000000004056D2                 mov     rbx, [rbp+var_20]
.text:00000000004056D6                 mov     r12, [rbp+var_40]
.text:00000000004056DA                 mov     r13, [rbp+var_38]
.text:00000000004056DE                 mov     r14, [rbp+var_30]
.text:00000000004056E2                 mov     r15, [rbp+var_48]
.text:00000000004056E6
.text:00000000004056E6 loc_4056E6:                             ; CODE XREF: __cacheSize+70↑j
.text:00000000004056E6                                         ; __cacheSize+214↑j ...
.text:00000000004056E6                 mov     dword ptr [rsi], 1
.text:00000000004056EC                 jmp     loc_40533A
.text:00000000004056F1 ; ---------------------------------------------------------------------------
.text:00000000004056F1
.text:00000000004056F1 loc_4056F1:                             ; CODE XREF: __cacheSize+33C↑j
.text:00000000004056F1                 cmp     r14, 49h ; 'I'
.text:00000000004056F5                 jnz     loc_405652
.text:00000000004056FB                 mov     [rbp+var_138], 1
.text:0000000000405705                 lea     rdx, [rbp+var_150]
.text:000000000040570C                 mov     [rbp+var_140], rdx
.text:0000000000405713                 push    rax
.text:0000000000405714                 push    rbx
.text:0000000000405715                 push    rcx
.text:0000000000405716                 push    rdx
.text:0000000000405717                 mov     r8, [rbp+var_140]
.text:000000000040571E                 mov     eax, [rbp+var_138]
.text:0000000000405724                 cpuid
.text:0000000000405726                 mov     [r8], eax
.text:0000000000405729                 mov     [r8+4], ebx
.text:000000000040572D                 mov     [r8+8], ecx
.text:0000000000405731                 mov     [r8+0Ch], edx
.text:0000000000405735                 pop     rdx
.text:0000000000405736                 pop     rcx
.text:0000000000405737                 pop     rbx
.text:0000000000405738                 pop     rax
.text:0000000000405739                 mov     ebx, [rbp+var_150]
.text:000000000040573F                 mov     edx, ebx
.text:0000000000405741                 shr     edx, 8
.text:0000000000405744                 and     edx, 0Fh
.text:0000000000405747                 cmp     edx, 0Fh
.text:000000000040574A                 jnz     loc_405652
.text:0000000000405750                 mov     ecx, ebx
.text:0000000000405752                 shr     ecx, 14h
.text:0000000000405755                 and     ecx, 0F0h
.text:000000000040575B                 or      ecx, edx
.text:000000000040575D                 cmp     ecx, 0Fh
.text:0000000000405760                 jnz     loc_405652
.text:0000000000405766                 mov     edx, ebx
.text:0000000000405768                 mov     ecx, 3
.text:000000000040576D                 shr     edx, 0Ch
.text:0000000000405770                 shr     ebx, 4
.text:0000000000405773                 and     edx, 0F0h
.text:0000000000405779                 and     ebx, 0Fh
.text:000000000040577C                 or      edx, ebx
.text:000000000040577E                 cmp     edx, 6
.text:0000000000405781                 cmovz   rsi, rcx
.text:0000000000405785                 jmp     loc_405652
.text:000000000040578A ; ---------------------------------------------------------------------------
.text:000000000040578A
.text:000000000040578A loc_40578A:                             ; CODE XREF: __cacheSize+31C↑j
.text:000000000040578A                 mov     rax, r10
.text:000000000040578D                 lea     rsi, unk_22BBAD6C
.text:0000000000405794                 pxor    xmm0, xmm0
.text:0000000000405798                 lea     rdx, unk_22BBAD90
.text:000000000040579F                 movdqa  xmmword ptr [rax], xmm0
.text:00000000004057A3                 lea     rax, unk_22BBAD80
.text:00000000004057AA                 mov     r10d, [rbp+var_50]
.text:00000000004057AE                 mov     rbx, [rbp+var_20]
.text:00000000004057B2                 mov     r12, [rbp+var_40]
.text:00000000004057B6                 mov     r13, [rbp+var_38]
.text:00000000004057BA                 mov     r14, [rbp+var_30]
.text:00000000004057BE                 mov     r15, [rbp+var_48]
.text:00000000004057C2                 movdqa  xmmword ptr [rax], xmm0
.text:00000000004057C6                 movdqa  xmmword ptr [rdx], xmm0
.text:00000000004057CA                 jmp     loc_4056E6
.text:00000000004057CA __cacheSize     endp ; sp-analysis failed
.text:00000000004057CA
.text:00000000004057CA ; ---------------------------------------------------------------------------
.text:00000000004057CF                 align 10h
.text:00000000004057CF ; } // starts at 405310
.text:00000000004057D0
.text:00000000004057D0 ; =============== S U B R O U T I N E =======================================
.text:00000000004057D0
.text:00000000004057D0 ; Attributes: bp-based frame
.text:00000000004057D0
.text:00000000004057D0 __sti__$E_0     proc near               ; CODE XREF: __libc_csu_init+59↓p
.text:00000000004057D0                                         ; DATA XREF: .init_array:__init_array_start↓o
.text:00000000004057D0
.text:00000000004057D0 var_190         = dword ptr -190h
.text:00000000004057D0 var_180         = qword ptr -180h
.text:00000000004057D0 var_178         = dword ptr -178h
.text:00000000004057D0 var_174         = dword ptr -174h
.text:00000000004057D0 var_170         = qword ptr -170h
.text:00000000004057D0 var_168         = byte ptr -168h
.text:00000000004057D0 var_164         = dword ptr -164h
.text:00000000004057D0 var_160         = dword ptr -160h
.text:00000000004057D0 var_E8          = qword ptr -0E8h
.text:00000000004057D0 var_E0          = byte ptr -0E0h
.text:00000000004057D0 var_DD          = byte ptr -0DDh
.text:00000000004057D0 var_A0          = qword ptr -0A0h
.text:00000000004057D0 var_98          = qword ptr -98h
.text:00000000004057D0 var_90          = qword ptr -90h
.text:00000000004057D0 var_88          = dword ptr -88h
.text:00000000004057D0 var_84          = dword ptr -84h
.text:00000000004057D0 var_80          = dword ptr -80h
.text:00000000004057D0 var_7C          = dword ptr -7Ch
.text:00000000004057D0 var_78          = qword ptr -78h
.text:00000000004057D0 var_70          = qword ptr -70h
.text:00000000004057D0 var_68          = qword ptr -68h
.text:00000000004057D0 var_60          = qword ptr -60h
.text:00000000004057D0 var_58          = qword ptr -58h
.text:00000000004057D0 var_50          = dword ptr -50h
.text:00000000004057D0 var_4C          = dword ptr -4Ch
.text:00000000004057D0 var_48          = qword ptr -48h
.text:00000000004057D0 var_40          = qword ptr -40h
.text:00000000004057D0 var_38          = qword ptr -38h
.text:00000000004057D0 var_30          = dword ptr -30h
.text:00000000004057D0 var_2C          = dword ptr -2Ch
.text:00000000004057D0 var_28          = dword ptr -28h
.text:00000000004057D0 var_24          = dword ptr -24h
.text:00000000004057D0 var_20          = dword ptr -20h
.text:00000000004057D0 var_1C          = dword ptr -1Ch
.text:00000000004057D0 var_18          = qword ptr -18h
.text:00000000004057D0 var_10          = dword ptr -10h
.text:00000000004057D0 var_C           = dword ptr -0Ch
.text:00000000004057D0 var_8           = qword ptr -8
.text:00000000004057D0
.text:00000000004057D0 ; __unwind {
.text:00000000004057D0                 push    rbp
.text:00000000004057D1                 mov     rbp, rsp
.text:00000000004057D4                 sub     rsp, 190h
.text:00000000004057DB                 lea     r11, unk_22BBAD6C
.text:00000000004057E2                 xor     r10d, r10d
.text:00000000004057E5                 xor     r8d, r8d
.text:00000000004057E8                 mov     [rbp+var_8], rbx
.text:00000000004057EC                 xor     r9d, r9d
.text:00000000004057EF                 cmp     dword ptr [r11], 0
.text:00000000004057F3                 jz      loc_405A37
.text:00000000004057F9                 lea     rsi, __libirc_cache_tbl
.text:0000000000405800
.text:0000000000405800 loc_405800:                             ; CODE XREF: __sti__$E_0+63D↓j
.text:0000000000405800                 cmp     dword ptr [rsi], 0
.text:0000000000405803                 jz      loc_4058FA
.text:0000000000405809                 lea     rax, unk_22BBAD64
.text:0000000000405810                 cmp     dword ptr [rax], 0
.text:0000000000405813                 jbe     short loc_405847
.text:0000000000405815                 push    rbx
.text:0000000000405816                 mov     eax, 1
.text:000000000040581B                 cpuid
.text:000000000040581D                 mov     [rbp+var_24], ebx
.text:0000000000405820                 mov     [rbp+var_1C], edx
.text:0000000000405823                 mov     [rbp+var_C], eax
.text:0000000000405826                 pop     rbx
.text:0000000000405827                 mov     r10d, [rbp+var_1C]
.text:000000000040582B                 test    r10d, 4000000h
.text:0000000000405832                 jz      short loc_40583C
.text:0000000000405834                 mov     r10d, 2
.text:000000000040583A                 jmp     short loc_405847
.text:000000000040583C ; ---------------------------------------------------------------------------
.text:000000000040583C
.text:000000000040583C loc_40583C:                             ; CODE XREF: __sti__$E_0+62↑j
.text:000000000040583C                 and     r10d, 800000h
.text:0000000000405843                 shr     r10d, 17h
.text:0000000000405847
.text:0000000000405847 loc_405847:                             ; CODE XREF: __sti__$E_0+43↑j
.text:0000000000405847                                         ; __sti__$E_0+6A↑j
.text:0000000000405847                 lea     rax, unk_22BBAD70
.text:000000000040584E                 mov     eax, [rax]
.text:0000000000405850                 test    eax, eax
.text:0000000000405852                 jbe     short loc_40586C
.text:0000000000405854                 lea     r9, unk_22BBAD74
.text:000000000040585B                 mov     r8d, eax
.text:000000000040585E                 lea     rdx, unk_22BBAD78
.text:0000000000405865                 mov     r9d, [r9]
.text:0000000000405868                 imul    r9d, [rdx]
.text:000000000040586C
.text:000000000040586C loc_40586C:                             ; CODE XREF: __sti__$E_0+82↑j
.text:000000000040586C                 lea     rdx, unk_22BBAD80
.text:0000000000405873                 mov     edx, [rdx]
.text:0000000000405875                 cmp     edx, r8d
.text:0000000000405878                 jbe     short loc_405892
.text:000000000040587A                 lea     r9, unk_22BBAD84
.text:0000000000405881                 mov     r8d, edx
.text:0000000000405884                 lea     rdx, unk_22BBAD88
.text:000000000040588B                 mov     r9d, [r9]
.text:000000000040588E                 imul    r9d, [rdx]
.text:0000000000405892
.text:0000000000405892 loc_405892:                             ; CODE XREF: __sti__$E_0+A8↑j
.text:0000000000405892                 lea     rdx, unk_22BBAD90
.text:0000000000405899                 mov     edx, [rdx]
.text:000000000040589B                 cmp     edx, r8d
.text:000000000040589E                 jbe     short loc_4058B8
.text:00000000004058A0                 lea     r9, unk_22BBAD94
.text:00000000004058A7                 mov     r8d, edx
.text:00000000004058AA                 lea     rdx, unk_22BBAD98
.text:00000000004058B1                 mov     r9d, [r9]
.text:00000000004058B4                 imul    r9d, [rdx]
.text:00000000004058B8
.text:00000000004058B8 loc_4058B8:                             ; CODE XREF: __sti__$E_0+CE↑j
.text:00000000004058B8                 shl     r8d, 0Ah
.text:00000000004058BC                 shl     eax, 0Ah
.text:00000000004058BF                 mov     edx, r8d
.text:00000000004058C2                 mov     ecx, eax
.text:00000000004058C4                 shr     edx, 1Fh
.text:00000000004058C7                 shr     ecx, 1Fh
.text:00000000004058CA                 mov     cs:__libirc_largest_cache_size, r8d
.text:00000000004058D1                 add     r8d, edx
.text:00000000004058D4                 mov     cs:__libirc_data_cache_size, eax
.text:00000000004058DA                 add     eax, ecx
.text:00000000004058DC                 sar     r8d, 1
.text:00000000004058DF                 sar     eax, 1
.text:00000000004058E1                 mov     cs:__libirc_largest_cache_size_half, r8d
.text:00000000004058E8                 mov     cs:__libirc_data_cache_size_half, eax
.text:00000000004058EE                 mov     cs:__libirc_largest_cachelinesize, r9d
.text:00000000004058F5                 jmp     loc_405A20
.text:00000000004058FA ; ---------------------------------------------------------------------------
.text:00000000004058FA
.text:00000000004058FA loc_4058FA:                             ; CODE XREF: __sti__$E_0+33↑j
.text:00000000004058FA                 xor     edx, edx
.text:00000000004058FC                 mov     rax, 69746E6568747541h
.text:0000000000405906                 lea     rsi, [rbp+var_88]
.text:000000000040590D                 mov     [rbp+var_78], rax
.text:0000000000405911                 mov     dword ptr [rbp+var_70], 444D4163h
.text:0000000000405918                 mov     byte ptr [rbp+var_70+4], dl
.text:000000000040591B                 mov     [rbp+var_10], edx
.text:000000000040591E                 mov     [rbp+var_18], rsi
.text:0000000000405922                 push    rax
.text:0000000000405923                 push    rbx
.text:0000000000405924                 push    rcx
.text:0000000000405925                 push    rdx
.text:0000000000405926                 mov     r8, [rbp+var_18]
.text:000000000040592A                 mov     eax, [rbp+var_10]
.text:000000000040592D                 cpuid
.text:000000000040592F                 mov     [r8], eax
.text:0000000000405932                 mov     [r8+4], ebx
.text:0000000000405936                 mov     [r8+8], ecx
.text:000000000040593A                 mov     [r8+0Ch], edx
.text:000000000040593E                 pop     rdx
.text:000000000040593F                 pop     rcx
.text:0000000000405940                 pop     rbx
.text:0000000000405941                 pop     rax
.text:0000000000405942                 mov     eax, dword ptr [rbp+var_78]
.text:0000000000405945                 cmp     eax, [rbp+var_84]
.text:000000000040594B                 jnz     loc_405A20
.text:0000000000405951                 mov     eax, dword ptr [rbp+var_78+4]
.text:0000000000405954                 cmp     eax, [rbp+var_7C]
.text:0000000000405957                 jnz     loc_405A20
.text:000000000040595D                 mov     eax, dword ptr [rbp+var_70]
.text:0000000000405960                 cmp     eax, [rbp+var_80]
.text:0000000000405963                 jnz     loc_405A20
.text:0000000000405969                 mov     [rbp+var_28], 1
.text:0000000000405970                 mov     [rbp+var_40], rsi
.text:0000000000405974                 push    rax
.text:0000000000405975                 push    rbx
.text:0000000000405976                 push    rcx
.text:0000000000405977                 push    rdx
.text:0000000000405978                 mov     r8, [rbp+var_40]
.text:000000000040597C                 mov     eax, [rbp+var_28]
.text:000000000040597F                 cpuid
.text:0000000000405981                 mov     [r8], eax
.text:0000000000405984                 mov     [r8+4], ebx
.text:0000000000405988                 mov     [r8+8], ecx
.text:000000000040598C                 mov     [r8+0Ch], edx
.text:0000000000405990                 pop     rdx
.text:0000000000405991                 pop     rcx
.text:0000000000405992                 pop     rbx
.text:0000000000405993                 pop     rax
.text:0000000000405994                 mov     r10d, [rbp+var_7C]
.text:0000000000405998                 and     r10d, 800000h
.text:000000000040599F                 shr     r10d, 17h
.text:00000000004059A3                 mov     [rbp+var_20], 80000000h
.text:00000000004059AA                 mov     [rbp+var_38], rsi
.text:00000000004059AE                 push    rax
.text:00000000004059AF                 push    rbx
.text:00000000004059B0                 push    rcx
.text:00000000004059B1                 push    rdx
.text:00000000004059B2                 mov     r8, [rbp+var_38]
.text:00000000004059B6                 mov     eax, [rbp+var_20]
.text:00000000004059B9                 cpuid
.text:00000000004059BB                 mov     [r8], eax
.text:00000000004059BE                 mov     [r8+4], ebx
.text:00000000004059C2                 mov     [r8+8], ecx
.text:00000000004059C6                 mov     [r8+0Ch], edx
.text:00000000004059CA                 pop     rdx
.text:00000000004059CB                 pop     rcx
.text:00000000004059CC                 pop     rbx
.text:00000000004059CD                 pop     rax
.text:00000000004059CE                 cmp     [rbp+var_88], 80000006h
.text:00000000004059D8                 jb      short loc_405A20
.text:00000000004059DA                 mov     [rbp+var_50], 80000006h
.text:00000000004059E1                 mov     [rbp+var_A0], rsi
.text:00000000004059E8                 push    rax
.text:00000000004059E9                 push    rbx
.text:00000000004059EA                 push    rcx
.text:00000000004059EB                 push    rdx
.text:00000000004059EC                 mov     r8, [rbp+var_A0]
.text:00000000004059F3                 mov     eax, [rbp+var_50]
.text:00000000004059F6                 cpuid
.text:00000000004059F8                 mov     [r8], eax
.text:00000000004059FB                 mov     [r8+4], ebx
.text:00000000004059FF                 mov     [r8+8], ecx
.text:0000000000405A03                 mov     [r8+0Ch], edx
.text:0000000000405A07                 pop     rdx
.text:0000000000405A08                 pop     rcx
.text:0000000000405A09                 pop     rbx
.text:0000000000405A0A                 pop     rax
.text:0000000000405A0B                 movzx   eax, word ptr [rbp+var_80+2]
.text:0000000000405A0F                 shl     eax, 0Ah
.text:0000000000405A12                 mov     cs:__libirc_largest_cache_size, eax
.text:0000000000405A18                 shr     eax, 1
.text:0000000000405A1A                 mov     cs:__libirc_largest_cache_size_half, eax
.text:0000000000405A20
.text:0000000000405A20 loc_405A20:                             ; CODE XREF: __sti__$E_0+125↑j
.text:0000000000405A20                                         ; __sti__$E_0+17B↑j ...
.text:0000000000405A20                 mov     rbx, [rbp+var_8]
.text:0000000000405A24                 mov     cs:__libirc_mem_ops_method, r10d
.text:0000000000405A2B                 mov     cs:__libirc_tmp, r10d
.text:0000000000405A32                 mov     rsp, rbp
.text:0000000000405A35                 pop     rbp
.text:0000000000405A36                 retn
.text:0000000000405A37 ; ---------------------------------------------------------------------------
.text:0000000000405A37
.text:0000000000405A37 loc_405A37:                             ; CODE XREF: __sti__$E_0+23↑j
.text:0000000000405A37                 mov     [rbp+var_2C], 0
.text:0000000000405A3E                 push    rax
.text:0000000000405A3F                 push    rcx
.text:0000000000405A40                 pushfq
.text:0000000000405A41                 pop     rax
.text:0000000000405A42                 mov     ecx, eax
.text:0000000000405A44                 xor     eax, 200000h
.text:0000000000405A49                 push    rax
.text:0000000000405A4A                 popfq
.text:0000000000405A4B                 pushfq
.text:0000000000405A4C                 pop     rax
.text:0000000000405A4D                 cmp     eax, ecx
.text:0000000000405A4F                 jz      short loc_405A59
.text:0000000000405A51                 mov     [rbp+var_2C], 1
.text:0000000000405A58                 push    rcx
.text:0000000000405A59
.text:0000000000405A59 loc_405A59:                             ; CODE XREF: __sti__$E_0+27F↑j
.text:0000000000405A59                 popfq
.text:0000000000405A5A                 pop     rcx
.text:0000000000405A5B                 pop     rax
.text:0000000000405A5C                 cmp     [rbp+var_2C], 0
.text:0000000000405A60                 jnz     short loc_405A6E
.text:0000000000405A62                 lea     rsi, __libirc_cache_tbl
.text:0000000000405A69                 jmp     loc_405E06
.text:0000000000405A6E ; ---------------------------------------------------------------------------
.text:0000000000405A6E
.text:0000000000405A6E loc_405A6E:                             ; CODE XREF: __sti__$E_0+290↑j
.text:0000000000405A6E                 xor     edx, edx
.text:0000000000405A70                 lea     rbx, [rbp+var_4C]
.text:0000000000405A74                 mov     rax, 49656E69756E6547h
.text:0000000000405A7E                 mov     [rbp+var_48], rbx
.text:0000000000405A82                 mov     [rbp+var_98], rax
.text:0000000000405A89                 mov     [rbp+var_90], 6C65746Eh
.text:0000000000405A94                 mov     [rbp+var_30], edx
.text:0000000000405A97                 mov     [rbx], edx
.text:0000000000405A99                 push    rax
.text:0000000000405A9A                 push    rbx
.text:0000000000405A9B                 push    rcx
.text:0000000000405A9C                 push    rdx
.text:0000000000405A9D                 mov     eax, 0
.text:0000000000405AA2                 cpuid
.text:0000000000405AA4                 cmp     dword ptr [rbp+var_98], ebx
.text:0000000000405AAA                 jnz     short loc_405AC9
.text:0000000000405AAC                 cmp     dword ptr [rbp+var_98+4], edx
.text:0000000000405AB2                 jnz     short loc_405AC9
.text:0000000000405AB4                 cmp     dword ptr [rbp+var_90], ecx
.text:0000000000405ABA                 jnz     short loc_405AC9
.text:0000000000405ABC                 mov     [rbp+var_30], 1
.text:0000000000405AC3                 mov     rdx, [rbp+var_48]
.text:0000000000405AC7                 mov     [rdx], eax
.text:0000000000405AC9
.text:0000000000405AC9 loc_405AC9:                             ; CODE XREF: __sti__$E_0+2DA↑j
.text:0000000000405AC9                                         ; __sti__$E_0+2E2↑j ...
.text:0000000000405AC9                 pop     rdx
.text:0000000000405ACA                 pop     rcx
.text:0000000000405ACB                 pop     rbx
.text:0000000000405ACC                 pop     rax
.text:0000000000405ACD                 lea     rsi, __libirc_cache_tbl
.text:0000000000405AD4                 lea     rdx, unk_22BBAD64
.text:0000000000405ADB                 mov     eax, [rbp+var_30]
.text:0000000000405ADE                 mov     ecx, [rbp+var_4C]
.text:0000000000405AE1                 cmp     ecx, 4
.text:0000000000405AE4                 mov     [rsi], eax
.text:0000000000405AE6                 mov     [rdx], ecx
.text:0000000000405AE8                 jl      loc_405C23
.text:0000000000405AEE                 mov     [rbp+var_174], 0
.text:0000000000405AF8                 lea     rax, [rbp+var_168]
.text:0000000000405AFF                 mov     [rbp+var_E8], rax
.text:0000000000405B06                 mov     [rbp+var_60], r15
.text:0000000000405B0A                 mov     r15d, r8d
.text:0000000000405B0D                 push    rax
.text:0000000000405B0E                 push    rbx
.text:0000000000405B0F                 push    rcx
.text:0000000000405B10                 push    rdx
.text:0000000000405B11                 push    rdi
.text:0000000000405B12                 mov     r8, [rbp+var_E8]
.text:0000000000405B19                 mov     edi, 0
.text:0000000000405B1E
.text:0000000000405B1E loc_405B1E:                             ; CODE XREF: __sti__$E_0+379↓j
.text:0000000000405B1E                 mov     ecx, edi
.text:0000000000405B20                 mov     eax, 4
.text:0000000000405B25                 cpuid
.text:0000000000405B27                 test    eax, 1Fh
.text:0000000000405B2C                 jz      short loc_405B4B
.text:0000000000405B2E                 mov     [r8], eax
.text:0000000000405B31                 mov     [r8+4], ebx
.text:0000000000405B35                 mov     [r8+8], ecx
.text:0000000000405B39                 mov     [r8+0Ch], edx
.text:0000000000405B3D                 add     edi, 1
.text:0000000000405B40                 cmp     edi, 8
.text:0000000000405B43                 jge     short loc_405B4B
.text:0000000000405B45                 add     r8, 10h
.text:0000000000405B49                 jmp     short loc_405B1E
.text:0000000000405B4B ; ---------------------------------------------------------------------------
.text:0000000000405B4B
.text:0000000000405B4B loc_405B4B:                             ; CODE XREF: __sti__$E_0+35C↑j
.text:0000000000405B4B                                         ; __sti__$E_0+373↑j
.text:0000000000405B4B                 mov     [rbp+var_174], edi
.text:0000000000405B51                 pop     rdi
.text:0000000000405B52                 pop     rdx
.text:0000000000405B53                 pop     rcx
.text:0000000000405B54                 pop     rbx
.text:0000000000405B55                 pop     rax
.text:0000000000405B56                 xor     eax, eax
.text:0000000000405B58                 mov     r8d, r15d
.text:0000000000405B5B                 movsxd  rdx, [rbp+var_174]
.text:0000000000405B62                 xor     ecx, ecx
.text:0000000000405B64                 mov     r15, [rbp+var_60]
.text:0000000000405B68                 test    rdx, rdx
.text:0000000000405B6B                 jle     loc_405C23
.text:0000000000405B71                 mov     [rbp+var_70], r13
.text:0000000000405B75                 mov     [rbp+var_68], r14
.text:0000000000405B79                 mov     [rbp+var_60], r15
.text:0000000000405B7D
.text:0000000000405B7D loc_405B7D:                             ; CODE XREF: __sti__$E_0+441↓j
.text:0000000000405B7D                 mov     dil, [rbp+rcx+var_168]
.text:0000000000405B85                 mov     bl, dil
.text:0000000000405B88                 and     bl, 1Dh
.text:0000000000405B8B                 cmp     bl, 1
.text:0000000000405B8E                 jnz     short loc_405C07
.text:0000000000405B90                 and     dil, 0E0h
.text:0000000000405B94                 shr     dil, 5
.text:0000000000405B98                 movzx   r15d, dil
.text:0000000000405B9C                 shl     r15, 4
.text:0000000000405BA0                 mov     r13d, [rbp+rcx+var_164]
.text:0000000000405BA8                 movzx   ebx, word ptr [rbp+rcx+var_164+2]
.text:0000000000405BB0                 and     r13d, 3FF000h
.text:0000000000405BB7                 and     ebx, 0FFC0h
.text:0000000000405BBD                 movzx   edi, word ptr [rbp+rcx+var_164]
.text:0000000000405BC5                 shr     r13d, 0Ch
.text:0000000000405BC9                 and     edi, 0FFFh
.text:0000000000405BCF                 shr     ebx, 6
.text:0000000000405BD2                 inc     edi
.text:0000000000405BD4                 mov     r14d, [rbp+rcx+var_160]
.text:0000000000405BDC                 inc     r13d
.text:0000000000405BDF                 inc     ebx
.text:0000000000405BE1                 inc     r14d
.text:0000000000405BE4                 mov     [r15+rsi+8], r13d
.text:0000000000405BE9                 imul    r13d, ebx
.text:0000000000405BED                 imul    r14d, edi
.text:0000000000405BF1                 imul    r14d, r13d
.text:0000000000405BF5                 shr     r14d, 0Ah
.text:0000000000405BF9                 mov     [r15+rsi+4], edi
.text:0000000000405BFE                 mov     [r15+rsi+0Ch], ebx
.text:0000000000405C03                 mov     [r15+rsi], r14d
.text:0000000000405C07
.text:0000000000405C07 loc_405C07:                             ; CODE XREF: __sti__$E_0+3BE↑j
.text:0000000000405C07                 inc     rax
.text:0000000000405C0A                 add     rcx, 10h
.text:0000000000405C0E                 cmp     rax, rdx
.text:0000000000405C11                 jl      loc_405B7D
.text:0000000000405C17                 mov     r13, [rbp+var_70]
.text:0000000000405C1B                 mov     r14, [rbp+var_68]
.text:0000000000405C1F                 mov     r15, [rbp+var_60]
.text:0000000000405C23
.text:0000000000405C23 loc_405C23:                             ; CODE XREF: __sti__$E_0+318↑j
.text:0000000000405C23                                         ; __sti__$E_0+39B↑j
.text:0000000000405C23                 lea     rax, unk_22BBAD70
.text:0000000000405C2A                 cmp     dword ptr [rax], 0
.text:0000000000405C2D                 jnz     loc_405E06
.text:0000000000405C33                 cmp     [rbp+var_4C], 2
.text:0000000000405C37                 jl      loc_405E06
.text:0000000000405C3D                 mov     [rbp+var_60], r15
.text:0000000000405C41                 lea     rdx, [rbp+var_E0]
.text:0000000000405C48                 mov     [rbp+var_170], rdx
.text:0000000000405C4F                 mov     rdi, rax
.text:0000000000405C52                 mov     r15d, r8d
.text:0000000000405C55                 push    rax
.text:0000000000405C56                 push    rbx
.text:0000000000405C57                 push    rcx
.text:0000000000405C58                 push    rdx
.text:0000000000405C59                 mov     r8, [rbp+var_170]
.text:0000000000405C60                 mov     eax, 2
.text:0000000000405C65                 cpuid
.text:0000000000405C67                 mov     [r8], eax
.text:0000000000405C6A                 mov     [r8+4], ebx
.text:0000000000405C6E                 mov     [r8+8], ecx
.text:0000000000405C72                 mov     [r8+0Ch], edx
.text:0000000000405C76                 cmp     al, 1
.text:0000000000405C78                 jle     short loc_405CC7
.text:0000000000405C7A                 cmp     al, 2
.text:0000000000405C7C                 jle     short loc_405CB0
.text:0000000000405C7E                 cmp     al, 3
.text:0000000000405C80                 jle     short loc_405C99
.text:0000000000405C82                 mov     eax, 2
.text:0000000000405C87                 cpuid
.text:0000000000405C89                 mov     [r8+30h], eax
.text:0000000000405C8D                 mov     [r8+34h], ebx
.text:0000000000405C91                 mov     [r8+38h], ecx
.text:0000000000405C95                 mov     [r8+3Ch], edx
.text:0000000000405C99
.text:0000000000405C99 loc_405C99:                             ; CODE XREF: __sti__$E_0+4B0↑j
.text:0000000000405C99                 mov     eax, 2
.text:0000000000405C9E                 cpuid
.text:0000000000405CA0                 mov     [r8+20h], eax
.text:0000000000405CA4                 mov     [r8+24h], ebx
.text:0000000000405CA8                 mov     [r8+28h], ecx
.text:0000000000405CAC                 mov     [r8+2Ch], edx
.text:0000000000405CB0
.text:0000000000405CB0 loc_405CB0:                             ; CODE XREF: __sti__$E_0+4AC↑j
.text:0000000000405CB0                 mov     eax, 2
.text:0000000000405CB5                 cpuid
.text:0000000000405CB7                 mov     [r8+10h], eax
.text:0000000000405CBB                 mov     [r8+14h], ebx
.text:0000000000405CBF                 mov     [r8+18h], ecx
.text:0000000000405CC3                 mov     [r8+1Ch], edx
.text:0000000000405CC7
.text:0000000000405CC7 loc_405CC7:                             ; CODE XREF: __sti__$E_0+4A8↑j
.text:0000000000405CC7                 pop     rdx
.text:0000000000405CC8                 pop     rcx
.text:0000000000405CC9                 pop     rbx
.text:0000000000405CCA                 pop     rax
.text:0000000000405CCB                 movzx   ecx, [rbp+var_E0]
.text:0000000000405CD2                 mov     ebx, 10h
.text:0000000000405CD7                 mov     edx, ecx
.text:0000000000405CD9                 mov     rax, rdi
.text:0000000000405CDC                 shl     rdx, 2
.text:0000000000405CE0                 cmp     ecx, 4
.text:0000000000405CE3                 mov     r8d, r15d
.text:0000000000405CE6                 cmovg   rdx, rbx
.text:0000000000405CEA                 xor     edi, edi
.text:0000000000405CEC                 mov     r15, [rbp+var_60]
.text:0000000000405CF0                 test    rdx, rdx
.text:0000000000405CF3                 jle     loc_405E06
.text:0000000000405CF9                 mov     dword ptr [rbp+var_78], r10d
.text:0000000000405CFD                 mov     r10, rax
.text:0000000000405D00                 mov     [rbp+var_80], r9d
.text:0000000000405D04                 mov     [rbp+var_88], r8d
.text:0000000000405D0B                 mov     [rbp+var_58], r12
.text:0000000000405D0F                 mov     r12, rdx
.text:0000000000405D12                 mov     [rbp+var_70], r13
.text:0000000000405D16                 mov     [rbp+var_68], r14
.text:0000000000405D1A                 mov     [rbp+var_60], r15
.text:0000000000405D1E
.text:0000000000405D1E loc_405D1E:                             ; CODE XREF: __sti__$E_0+60A↓j
.text:0000000000405D1E                 test    [rbp+rdi*4+var_DD], 80h
.text:0000000000405D26                 jnz     loc_405DCC
.text:0000000000405D2C                 xor     r13d, r13d
.text:0000000000405D2F                 lea     r11, [rbp+rdi*4+var_E0]
.text:0000000000405D37
.text:0000000000405D37 loc_405D37:                             ; CODE XREF: __sti__$E_0+5F6↓j
.text:0000000000405D37                 movzx   r14d, byte ptr [r13+r11+0]
.text:0000000000405D3D                 cmp     r14, 0FFh
.text:0000000000405D44                 jz      loc_405EB2
.text:0000000000405D4A                 lea     r15, cpuid2_cache_tbl
.text:0000000000405D51                 mov     cl, [r15+r14*8]
.text:0000000000405D55                 and     cl, 7
.text:0000000000405D58                 movzx   r9d, cl
.text:0000000000405D5C                 test    r9, r9
.text:0000000000405D5F                 jz      short loc_405DBF
.text:0000000000405D61                 cmp     r9, 2
.text:0000000000405D65                 jz      loc_405E12
.text:0000000000405D6B
.text:0000000000405D6B loc_405D6B:                             ; CODE XREF: __sti__$E_0+646↓j
.text:0000000000405D6B                                         ; __sti__$E_0+69D↓j ...
.text:0000000000405D6B                 shl     r9, 4
.text:0000000000405D6F                 lea     r8, unk_6088A2
.text:0000000000405D76                 movzx   ecx, word ptr [r15+r14*8]
.text:0000000000405D7B                 and     ecx, 7FF8h
.text:0000000000405D81                 shr     ecx, 3
.text:0000000000405D84                 mov     [r9+rsi+4], ecx
.text:0000000000405D89                 lea     rcx, unk_6088A4
.text:0000000000405D90                 mov     ebx, [r15+r14*8]
.text:0000000000405D94                 movzx   r15d, word ptr [r8+r14*8]
.text:0000000000405D99                 and     ebx, 3F8000h
.text:0000000000405D9F                 and     r15d, 0FFC0h
.text:0000000000405DA6                 mov     r14d, [rcx+r14*8]
.text:0000000000405DAA                 shr     ebx, 0Fh
.text:0000000000405DAD                 shr     r15d, 6
.text:0000000000405DB1                 mov     [r9+rsi+8], ebx
.text:0000000000405DB6                 mov     [r9+rsi+0Ch], r15d
.text:0000000000405DBB                 mov     [r9+rsi], r14d
.text:0000000000405DBF
.text:0000000000405DBF loc_405DBF:                             ; CODE XREF: __sti__$E_0+58F↑j
.text:0000000000405DBF                 inc     r13
.text:0000000000405DC2                 cmp     r13, 4
.text:0000000000405DC6                 jl      loc_405D37
.text:0000000000405DCC
.text:0000000000405DCC loc_405DCC:                             ; CODE XREF: __sti__$E_0+556↑j
.text:0000000000405DCC                 nop     dword ptr [rax+rax+00000000h]
.text:0000000000405DD4                 inc     rdi
.text:0000000000405DD7                 cmp     rdi, r12
.text:0000000000405DDA                 jl      loc_405D1E
.text:0000000000405DE0                 mov     r10d, dword ptr [rbp+var_78]
.text:0000000000405DE4                 lea     r11, unk_22BBAD6C
.text:0000000000405DEB                 mov     r9d, [rbp+var_80]
.text:0000000000405DEF                 mov     r8d, [rbp+var_88]
.text:0000000000405DF6                 mov     r12, [rbp+var_58]
.text:0000000000405DFA                 mov     r13, [rbp+var_70]
.text:0000000000405DFE                 mov     r14, [rbp+var_68]
.text:0000000000405E02                 mov     r15, [rbp+var_60]
.text:0000000000405E06
.text:0000000000405E06 loc_405E06:                             ; CODE XREF: __sti__$E_0+299↑j
.text:0000000000405E06                                         ; __sti__$E_0+45D↑j ...
.text:0000000000405E06                 mov     dword ptr [r11], 1
.text:0000000000405E0D                 jmp     loc_405800
.text:0000000000405E12 ; ---------------------------------------------------------------------------
.text:0000000000405E12
.text:0000000000405E12 loc_405E12:                             ; CODE XREF: __sti__$E_0+595↑j
.text:0000000000405E12                 cmp     r14, 49h ; 'I'
.text:0000000000405E16                 jnz     loc_405D6B
.text:0000000000405E1C                 mov     [rbp+var_178], 1
.text:0000000000405E26                 lea     rcx, [rbp+var_190]
.text:0000000000405E2D                 mov     [rbp+var_180], rcx
.text:0000000000405E34                 push    rax
.text:0000000000405E35                 push    rbx
.text:0000000000405E36                 push    rcx
.text:0000000000405E37                 push    rdx
.text:0000000000405E38                 mov     r8, [rbp+var_180]
.text:0000000000405E3F                 mov     eax, [rbp+var_178]
.text:0000000000405E45                 cpuid
.text:0000000000405E47                 mov     [r8], eax
.text:0000000000405E4A                 mov     [r8+4], ebx
.text:0000000000405E4E                 mov     [r8+8], ecx
.text:0000000000405E52                 mov     [r8+0Ch], edx
.text:0000000000405E56                 pop     rdx
.text:0000000000405E57                 pop     rcx
.text:0000000000405E58                 pop     rbx
.text:0000000000405E59                 pop     rax
.text:0000000000405E5A                 mov     r8d, [rbp+var_190]
.text:0000000000405E61                 mov     ecx, r8d
.text:0000000000405E64                 shr     ecx, 8
.text:0000000000405E67                 and     ecx, 0Fh
.text:0000000000405E6A                 cmp     ecx, 0Fh
.text:0000000000405E6D                 jnz     loc_405D6B
.text:0000000000405E73                 mov     ebx, r8d
.text:0000000000405E76                 shr     ebx, 14h
.text:0000000000405E79                 and     ebx, 0F0h
.text:0000000000405E7F                 or      ebx, ecx
.text:0000000000405E81                 cmp     ebx, 0Fh
.text:0000000000405E84                 jnz     loc_405D6B
.text:0000000000405E8A                 mov     ecx, r8d
.text:0000000000405E8D                 mov     ebx, 3
.text:0000000000405E92                 shr     ecx, 0Ch
.text:0000000000405E95                 shr     r8d, 4
.text:0000000000405E99                 and     ecx, 0F0h
.text:0000000000405E9F                 and     r8d, 0Fh
.text:0000000000405EA3                 or      ecx, r8d
.text:0000000000405EA6                 cmp     ecx, 6
.text:0000000000405EA9                 cmovz   r9, rbx
.text:0000000000405EAD                 jmp     loc_405D6B
.text:0000000000405EB2 ; ---------------------------------------------------------------------------
.text:0000000000405EB2
.text:0000000000405EB2 loc_405EB2:                             ; CODE XREF: __sti__$E_0+574↑j
.text:0000000000405EB2                 mov     rax, r10
.text:0000000000405EB5                 lea     r11, unk_22BBAD6C
.text:0000000000405EBC                 pxor    xmm0, xmm0
.text:0000000000405EC0                 lea     rdx, unk_22BBAD90
.text:0000000000405EC7                 movdqa  xmmword ptr [rax], xmm0
.text:0000000000405ECB                 lea     rax, unk_22BBAD80
.text:0000000000405ED2                 mov     r10d, dword ptr [rbp+var_78]
.text:0000000000405ED6                 mov     r9d, [rbp+var_80]
.text:0000000000405EDA                 mov     r8d, [rbp+var_88]
.text:0000000000405EE1                 mov     r12, [rbp+var_58]
.text:0000000000405EE5                 mov     r13, [rbp+var_70]
.text:0000000000405EE9                 mov     r14, [rbp+var_68]
.text:0000000000405EED                 mov     r15, [rbp+var_60]
.text:0000000000405EF1                 movdqa  xmmword ptr [rax], xmm0
.text:0000000000405EF5                 movdqa  xmmword ptr [rdx], xmm0
.text:0000000000405EF9                 jmp     loc_405E06
.text:0000000000405EF9 __sti__$E_0     endp ; sp-analysis failed
.text:0000000000405EF9
.text:0000000000405EF9 ; ---------------------------------------------------------------------------
.text:0000000000405EFE                 align 20h
.text:0000000000405EFE ; } // starts at 4057D0
.text:0000000000405F00
.text:0000000000405F00 ; =============== S U B R O U T I N E =======================================
.text:0000000000405F00
.text:0000000000405F00
.text:0000000000405F00                 public __intel_proc_init_ftzdazule
.text:0000000000405F00 __intel_proc_init_ftzdazule proc near   ; CODE XREF: __intel_new_feature_proc_init+2D2↑p
.text:0000000000405F00
.text:0000000000405F00 s               = dword ptr -218h
.text:0000000000405F00 var_1FC         = dword ptr -1FCh
.text:0000000000405F00
.text:0000000000405F00 ; __unwind {
.text:0000000000405F00                 push    r15
.text:0000000000405F02                 push    rbx
.text:0000000000405F03                 push    rbp
.text:0000000000405F04                 sub     rsp, 200h
.text:0000000000405F0B                 mov     ebx, esi
.text:0000000000405F0D                 mov     ebp, ebx
.text:0000000000405F0F                 mov     r15d, ebx
.text:0000000000405F12                 and     ebp, 4
.text:0000000000405F15                 and     r15d, 2
.text:0000000000405F19                 jz      short loc_405F23
.text:0000000000405F1B                 test    edi, 2
.text:0000000000405F21                 jz      short loc_405F2F
.text:0000000000405F23
.text:0000000000405F23 loc_405F23:                             ; CODE XREF: __intel_proc_init_ftzdazule+19↑j
.text:0000000000405F23                 test    ebp, ebp
.text:0000000000405F25                 jz      short loc_405F57
.text:0000000000405F27                 test    edi, 4
.text:0000000000405F2D                 jnz     short loc_405F57
.text:0000000000405F2F
.text:0000000000405F2F loc_405F2F:                             ; CODE XREF: __intel_proc_init_ftzdazule+21↑j
.text:0000000000405F2F                 xor     esi, esi        ; c
.text:0000000000405F31                 lea     rdi, [rsp+218h+s] ; s
.text:0000000000405F35                 mov     edx, 200h       ; n
.text:0000000000405F3A                 call    _memset
.text:0000000000405F3F                 fxsave  [rsp+218h+s]
.text:0000000000405F43                 xor     edx, edx
.text:0000000000405F45                 mov     eax, [rsp+218h+var_1FC]
.text:0000000000405F49                 test    al, 40h
.text:0000000000405F4B                 cmovz   r15d, edx
.text:0000000000405F4F                 test    eax, 20000h
.text:0000000000405F54                 cmovz   ebp, edx
.text:0000000000405F57
.text:0000000000405F57 loc_405F57:                             ; CODE XREF: __intel_proc_init_ftzdazule+25↑j
.text:0000000000405F57                                         ; __intel_proc_init_ftzdazule+2D↑j
.text:0000000000405F57                 test    bl, 1
.text:0000000000405F5A                 jnz     short loc_405F95
.text:0000000000405F5C
.text:0000000000405F5C loc_405F5C:                             ; CODE XREF: __intel_proc_init_ftzdazule+A8↓j
.text:0000000000405F5C                 test    r15d, r15d
.text:0000000000405F5F                 jz      short loc_405F72
.text:0000000000405F61                 stmxcsr [rsp+218h+s]
.text:0000000000405F65                 mov     eax, [rsp+218h+s]
.text:0000000000405F68                 or      eax, 40h
.text:0000000000405F6B                 mov     [rsp+218h+s], eax
.text:0000000000405F6E                 ldmxcsr [rsp+218h+s]
.text:0000000000405F72
.text:0000000000405F72 loc_405F72:                             ; CODE XREF: __intel_proc_init_ftzdazule+5F↑j
.text:0000000000405F72                 test    ebp, ebp
.text:0000000000405F74                 jz      short loc_405F89
.text:0000000000405F76                 stmxcsr [rsp+218h+s]
.text:0000000000405F7A                 mov     eax, [rsp+218h+s]
.text:0000000000405F7D                 or      eax, 20000h
.text:0000000000405F82                 mov     [rsp+218h+s], eax
.text:0000000000405F85                 ldmxcsr [rsp+218h+s]
.text:0000000000405F89
.text:0000000000405F89 loc_405F89:                             ; CODE XREF: __intel_proc_init_ftzdazule+74↑j
.text:0000000000405F89                 add     rsp, 200h
.text:0000000000405F90                 pop     rbp
.text:0000000000405F91                 pop     rbx
.text:0000000000405F92                 pop     r15
.text:0000000000405F94                 retn
.text:0000000000405F95 ; ---------------------------------------------------------------------------
.text:0000000000405F95
.text:0000000000405F95 loc_405F95:                             ; CODE XREF: __intel_proc_init_ftzdazule+5A↑j
.text:0000000000405F95                 stmxcsr [rsp+218h+s]
.text:0000000000405F99                 mov     eax, [rsp+218h+s]
.text:0000000000405F9C                 or      eax, 8000h
.text:0000000000405FA1                 mov     [rsp+218h+s], eax
.text:0000000000405FA4                 ldmxcsr [rsp+218h+s]
.text:0000000000405FA8                 jmp     short loc_405F5C
.text:0000000000405FA8 __intel_proc_init_ftzdazule endp
.text:0000000000405FA8
.text:0000000000405FA8 ; ---------------------------------------------------------------------------
.text:0000000000405FAA                 align 10h
.text:0000000000405FAA ; } // starts at 405F00
.text:0000000000405FB0
.text:0000000000405FB0 ; =============== S U B R O U T I N E =======================================
.text:0000000000405FB0
.text:0000000000405FB0
.text:0000000000405FB0 ; void _libc_csu_init(void)
.text:0000000000405FB0                 public __libc_csu_init
.text:0000000000405FB0 __libc_csu_init proc near               ; DATA XREF: _start+16↑o
.text:0000000000405FB0
.text:0000000000405FB0 var_30          = qword ptr -30h
.text:0000000000405FB0 var_28          = qword ptr -28h
.text:0000000000405FB0 var_20          = qword ptr -20h
.text:0000000000405FB0 var_18          = qword ptr -18h
.text:0000000000405FB0 var_10          = qword ptr -10h
.text:0000000000405FB0 var_8           = qword ptr -8
.text:0000000000405FB0
.text:0000000000405FB0 ; __unwind {
.text:0000000000405FB0                 mov     [rsp+var_28], rbp
.text:0000000000405FB5                 mov     [rsp+var_20], r12
.text:0000000000405FBA                 lea     rbp, __CTOR_LIST__
.text:0000000000405FC1                 lea     r12, __init_array_start
.text:0000000000405FC8                 mov     [rsp+var_18], r13
.text:0000000000405FCD                 mov     [rsp+var_10], r14
.text:0000000000405FD2                 mov     [rsp+var_8], r15
.text:0000000000405FD7                 mov     [rsp+var_30], rbx
.text:0000000000405FDC                 sub     rsp, 38h
.text:0000000000405FE0                 sub     rbp, r12
.text:0000000000405FE3                 mov     r13d, edi
.text:0000000000405FE6                 mov     r14, rsi
.text:0000000000405FE9                 sar     rbp, 3
.text:0000000000405FED                 mov     r15, rdx
.text:0000000000405FF0                 call    _init_proc
.text:0000000000405FF5                 test    rbp, rbp
.text:0000000000405FF8                 jz      short loc_406016
.text:0000000000405FFA                 xor     ebx, ebx
.text:0000000000405FFC                 nop     dword ptr [rax+00h]
.text:0000000000406000
.text:0000000000406000 loc_406000:                             ; CODE XREF: __libc_csu_init+64↓j
.text:0000000000406000                 mov     rdx, r15
.text:0000000000406003                 mov     rsi, r14        ; __int64
.text:0000000000406006                 mov     edi, r13d       ; struct _Unwind_Exception *
.text:0000000000406009                 call    ds:(__init_array_start - 608000h)[r12+rbx*8]
.text:000000000040600D                 add     rbx, 1
.text:0000000000406011                 cmp     rbx, rbp
.text:0000000000406014                 jnz     short loc_406000
.text:0000000000406016
.text:0000000000406016 loc_406016:                             ; CODE XREF: __libc_csu_init+48↑j
.text:0000000000406016                 mov     rbx, [rsp+38h+var_30]
.text:000000000040601B                 mov     rbp, [rsp+38h+var_28]
.text:0000000000406020                 mov     r12, [rsp+38h+var_20]
.text:0000000000406025                 mov     r13, [rsp+38h+var_18]
.text:000000000040602A                 mov     r14, [rsp+38h+var_10]
.text:000000000040602F                 mov     r15, [rsp+38h+var_8]
.text:0000000000406034                 add     rsp, 38h
.text:0000000000406038                 retn
.text:0000000000406038 ; } // starts at 405FB0
.text:0000000000406038 __libc_csu_init endp
.text:0000000000406038
.text:0000000000406038 ; ---------------------------------------------------------------------------
.text:0000000000406039                 align 20h
.text:0000000000406040
.text:0000000000406040 ; =============== S U B R O U T I N E =======================================
.text:0000000000406040
.text:0000000000406040
.text:0000000000406040 ; void _libc_csu_fini(void)
.text:0000000000406040                 public __libc_csu_fini
.text:0000000000406040 __libc_csu_fini proc near               ; DATA XREF: _start+F↑o
.text:0000000000406040 ; __unwind {
.text:0000000000406040                 rep retn
.text:0000000000406040 ; } // starts at 406040
.text:0000000000406040 __libc_csu_fini endp
.text:0000000000406040
.text:0000000000406040 ; ---------------------------------------------------------------------------
.text:0000000000406042                 align 10h
.text:0000000000406050
.text:0000000000406050 ; =============== S U B R O U T I N E =======================================
.text:0000000000406050
.text:0000000000406050 ; Attributes: bp-based frame
.text:0000000000406050
.text:0000000000406050 __do_global_ctors_aux proc near         ; CODE XREF: _init_proc+E↑p
.text:0000000000406050                 push    rbp
.text:0000000000406051                 mov     rbp, rsp
.text:0000000000406054                 push    rbx
.text:0000000000406055                 sub     rsp, 8
.text:0000000000406059                 mov     rax, cs:__CTOR_LIST__
.text:0000000000406060                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:0000000000406064                 jz      short loc_40607F
.text:0000000000406066                 mov     ebx, offset __CTOR_LIST__
.text:000000000040606B                 nop     dword ptr [rax+rax+00h]
.text:0000000000406070
.text:0000000000406070 loc_406070:                             ; CODE XREF: __do_global_ctors_aux+2D↓j
.text:0000000000406070                 sub     rbx, 8
.text:0000000000406074                 call    rax ; __CTOR_LIST__
.text:0000000000406076                 mov     rax, [rbx]
.text:0000000000406079                 cmp     rax, 0FFFFFFFFFFFFFFFFh
.text:000000000040607D                 jnz     short loc_406070
.text:000000000040607F
.text:000000000040607F loc_40607F:                             ; CODE XREF: __do_global_ctors_aux+14↑j
.text:000000000040607F                 add     rsp, 8
.text:0000000000406083                 pop     rbx
.text:0000000000406084                 pop     rbp
.text:0000000000406085                 retn
.text:0000000000406085 __do_global_ctors_aux endp
.text:0000000000406085
.text:0000000000406085 ; ---------------------------------------------------------------------------
.text:0000000000406086                 align 8
.text:0000000000406086 _text           ends
.text:0000000000406086